; ModuleID = 'gomodule'
source_filename = "gomodule"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.section \22.go_export\22,\22e\22,@progbits"
module asm "\09.ascii \22v2;\5Cn\22"
module asm "\09.ascii \22package \22"
module asm "\09.ascii \22parser\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22pkgpath \22"
module asm "\09.ascii \22command-line-arguments\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22list\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22container/list\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22container/list\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22http\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net/http\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22net/http\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22init\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22parser\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22command_line_arguments..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22flate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22compress_flate..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22gzip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22compress_gzip..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cipher\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_cipher..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22des\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_des..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22dsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_dsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ecdsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_ecdsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22elliptic\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_elliptic..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22md5\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_md5..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rsa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_rsa..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha1\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha1..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha256..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sha512\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_sha512..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22tls\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_tls..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22x509\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_x509..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22pkix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_x509_pkix..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22asn1\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_asn1..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22base64\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_base64..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22binary\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_binary..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22hex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_hex..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22pem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_pem..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crc32\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22hash_crc32..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_poll..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22testlog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_testlog..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io_ioutil..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22big\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_big..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22mime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22mime..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22multipart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22mime_multipart..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22quotedprintable\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22mime_quotedprintable..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22http\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net_http..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net_http_internal..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22textproto\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net_textproto..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path_filepath..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syntax\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp_syntax..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime_internal_sys..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22chacha20poly1305\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_crypto_chacha20poly1305..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cryptobyte\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_crypto_cryptobyte..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22hpack\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_net_http2_hpack..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22idna\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_net_idna..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22proxy\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_net_proxy..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bidirule\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_text_secure_bidirule..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22transform\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_text_transform..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bidi\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_text_unicode_bidi..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22norm\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22vendor_golang_org_x_text_unicode_norm..import\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22init_graph\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2241\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2243\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2244\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2246\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2247\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2255\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2256\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2257\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2258\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2259\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2260\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2262\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2242\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2245\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2248\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2249\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2250\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2251\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2252\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2253\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2254\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2263\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2261\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 1 \22"
module asm "\09.ascii \22\5C\22Assignment\5C\22 \22"
module asm "\09.ascii \22<type 2 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3 \22"
module asm "\09.ascii \22\5C\22SourcePosition\5C\22 \22"
module asm "\09.ascii \22<type 4 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22LineNum\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ColNum\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22TokenLength\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pos\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22X\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Expression\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 6 \22"
module asm "\09.ascii \22\5C\22Attribute\5C\22 \22"
module asm "\09.ascii \22<type 7 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsRaw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Condition\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 8 \22"
module asm "\09.ascii \22\5C\22Block\5C\22 \22"
module asm "\09.ascii \22<type 9 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Children\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 11 \22"
module asm "\09.ascii \22\5C\22Node\5C\22 \22"
module asm "\09.ascii \22<type 12 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Pos\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.push\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.pushFront\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanInline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ByteParser\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22input\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 16 \22"
module asm "\09.ascii \22\5C\22Parser\5C\22 \22"
module asm "\09.ascii \22<type 17 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.scanner\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 19 \22"
module asm "\09.ascii \22\5C\22.command-line-arguments.scanner\5C\22 \22"
module asm "\09.ascii \22<type 20 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.reader\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 22 \22"
module asm "\09.ascii \22\5C\22bufio.Reader\5C\22 \22"
module asm "\09.ascii \22<type 23 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.bufio.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 24 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.rd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 25 \22"
module asm "\09.ascii \22\5C\22io.Reader\5C\22 \22"
module asm "\09.ascii \22<type 26 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 27 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.lastByte\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.lastRuneSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Buffered\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x82a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadLine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 29 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isPrefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x80a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Peek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 30 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Discard\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22discarded\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.readErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 34 \22"
module asm "\09.ascii \22\5C\22io.Writer\5C\22 \22"
module asm "\09.ascii \22<type 35 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 37 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.writeBuf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 34>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.fill\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.indentStack\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 39 \22"
module asm "\09.ascii \22\5C\22container/list.List\5C\22 \22"
module asm "\09.ascii \22<type 40 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.container/list.root\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41 \22"
module asm "\09.ascii \22\5C\22container/list.Element\5C\22 \22"
module asm "\09.ascii \22<type 42 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.container/list.next\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 41>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.container/list.prev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.container/list.list\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 45 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Next\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Prev\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.container/list.len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Remove\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 46 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.container/list.remove\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.container/list.insertValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 47 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22at\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.container/list.lazyInit\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PushBackList\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22other\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MoveToBack\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MoveBefore\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mark\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InsertAfter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 48 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mark\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MoveAfter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mark\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InsertBefore\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mark\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MoveToFront\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PushBack\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 50 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.container/list.insert\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22at\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PushFront\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 51 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Front\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Back\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PushFrontList\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22other\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.stash\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.buffer\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.col\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.lastTokenLine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.lastTokenCol\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.lastTokenSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.readRaw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pos\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x4a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Next\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 54 \22"
module asm "\09.ascii \22\5C\22.command-line-arguments.token\5C\22 \22"
module asm "\09.ascii \22<type 55 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 56 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NextRaw\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanIndent\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanDoctype\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanCondition\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanEach\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanAssignment\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanComment\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanClassName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanAttribute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanImport\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanExtends\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanBlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanTag\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanMixin\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanMixinCall\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.scanText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.consume\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22runes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.ensureBuffer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.fs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 57 \22"
module asm "\09.ascii \22\5C\22net/http.FileSystem\5C\22 \22"
module asm "\09.ascii \22<type 58 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Open\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 59 \22"
module asm "\09.ascii \22\5C\22net/http.File\5C\22 \22"
module asm "\09.ascii \22<type 60 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 61 \22"
module asm "\09.ascii \22\5C\22io.Closer\5C\22 \22"
module asm "\09.ascii \22<type 62 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 63 \22"
module asm "\09.ascii \22\5C\22io.Seeker\5C\22 \22"
module asm "\09.ascii \22<type 64 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Seek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22whence\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Readdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22count\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 65 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 66 \22"
module asm "\09.ascii \22\5C\22os.FileInfo\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 67 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68 \22"
module asm "\09.ascii \22\5C\22os.FileMode\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsRegular\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Perm\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ModTime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69 \22"
module asm "\09.ascii \22\5C\22time.Time\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 70 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.wall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.ext\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 72 \22"
module asm "\09.ascii \22\5C\22time.Location\5C\22 \22"
module asm "\09.ascii \22<type 73 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.zone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 74 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 75 \22"
module asm "\09.ascii \22\5C\22.time.zone\5C\22 \22"
module asm "\09.ascii \22<type 76 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.tx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 77 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 78 \22"
module asm "\09.ascii \22\5C\22.time.zoneTrans\5C\22 \22"
module asm "\09.ascii \22<type 79 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.when\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isstd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isutc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheStart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheEnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheZone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 80 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 75>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 72>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.firstZoneUsed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22unix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22start\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22end\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupFirstZone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22YearDay\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnixNano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 82 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanosecond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobDecode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 84 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.locabs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.stripMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.abs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Zone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Weekday\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 86 \22"
module asm "\09.ascii \22\5C\22time.Weekday\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 86>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Location\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 87 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.sec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88 \22"
module asm "\09.ascii \22\5C\22time.Duration\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanoseconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minutes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hours\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Day\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 89 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Local\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22After\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.addSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setLoc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobEncode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 90 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Before\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.unixSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 91 \22"
module asm "\09.ascii \22\5C\22time.Month\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 91>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 92 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 93 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsZero\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Format\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Year\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UTC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22full\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 91>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22yday\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ISOWeek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22week\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AppendFormat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 95 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.nsec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddDate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22years\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22months\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22days\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Month\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 91>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Second\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.mono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Clock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hour\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22min\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hour\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Sys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 96 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Stat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 66>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.currenttoken\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 54>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.namedBlocks\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 99 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 100 \22"
module asm "\09.ascii \22\5C\22NamedBlock\5C\22 \22"
module asm "\09.ascii \22<type 101 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Modifier\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.parent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 102 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.result\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFilename\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetVirtualFilesystem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22fs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 57>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Parse\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.pos\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseRelativeFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parse\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.expect\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 104 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 54>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.advance\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseExtends\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseBlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22parent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseIf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 106 \22"
module asm "\09.ascii \22\5C\22Condition\5C\22 \22"
module asm "\09.ascii \22<type 107 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Positive\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Negative\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Expression\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseEach\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 108 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 109 \22"
module asm "\09.ascii \22\5C\22Each\5C\22 \22"
module asm "\09.ascii \22<type 110 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22X\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Y\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Expression\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Block\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseImport\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseNamedBlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseDoctype\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 112 \22"
module asm "\09.ascii \22\5C\22Doctype\5C\22 \22"
module asm "\09.ascii \22<type 113 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 112>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseComment\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 115 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 116 \22"
module asm "\09.ascii \22\5C\22Comment\5C\22 \22"
module asm "\09.ascii \22<type 117 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Block\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 118 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Silent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 119 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 120 \22"
module asm "\09.ascii \22\5C\22Text\5C\22 \22"
module asm "\09.ascii \22<type 121 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Raw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseAssignment\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseTag\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 124 \22"
module asm "\09.ascii \22\5C\22Tag\5C\22 \22"
module asm "\09.ascii \22<type 125 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Block\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsInterpolated\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Attributes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 126 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 124>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsSelfClosing\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsRawText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseMixin\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 129 \22"
module asm "\09.ascii \22\5C\22Mixin\5C\22 \22"
module asm "\09.ascii \22<type 130 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Block\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 131 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.parseMixinCall\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 132 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 133 \22"
module asm "\09.ascii \22\5C\22MixinCall\5C\22 \22"
module asm "\09.ascii \22<type 134 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 116>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 112>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 109>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22FileParser\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 129>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 133>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 100>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22const \22"
module asm "\09.ascii \22NamedBlockAppend\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22const \22"
module asm "\09.ascii \22NamedBlockDefault\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22const \22"
module asm "\09.ascii \22NamedBlockPrepend\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22StringParser\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22input\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 124>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22VirtualFileParser\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22fs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 57>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22checksum 2162283A77D9A33CF061D7B2B9FFE9B5DBA07B4B;\5Cn\22"
module asm "\09.text"

%StructType.0 = type { %_type.0, %IPST.42 }
%_type.0 = type { i64, i64, i32, i8, i8, i8, %__go_descriptor.1*, %__go_descriptor.2*, i8*, { i8*, i64 }*, %uncommonType.0*, %_type.0* }
%__go_descriptor.1 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.2 = type { i8 (i8*, i8*, i8*)* }
%uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.40 }
%IPST.40 = type { %method.0*, i64, i64 }
%method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, %_type.0*, i8* }
%IPST.42 = type { %structField.0*, i64, i64 }
%structField.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, { i8*, i64 }*, i64 }
%IPAddr.0 = type { %IP.0, { i8*, i64 } }
%IP.0 = type { i8*, i64, i64 }
%Sockaddr.0 = type { { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, i8*)* }*, i8* }
%RawSockaddrAny.0 = type { %RawSockaddr.0, [96 x i8] }
%RawSockaddr.0 = type { i16, [14 x i8] }
%error.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%PtrType.0 = type { %_type.0, %_type.0* }
%MapType.0 = type { %_type.0, %_type.0*, %_type.0*, %_type.0*, %_type.0*, i8, i8, i8, i8, i16, i8, i8 }
%functionDescriptor.0 = type { i64 }
%ArrayType.0 = type { %_type.0, %_type.0*, %_type.0*, i64 }
%SliceType.0 = type { %_type.0, %_type.0* }
%InterfaceType.0 = type { %_type.0, %IPST.43 }
%IPST.43 = type { %imethod.0*, i64, i64 }
%imethod.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0* }
%FuncType.0 = type { %_type.0, i8, %IPST.41, %IPST.41 }
%IPST.41 = type { %_type.0**, i64, i64 }
%Reader.2 = type { { i8*, i64, i64 }, i64, i64 }
%SourcePosition.0 = type { i64, i64, i64, { i8*, i64 } }
%.command-line-arguments.token.0 = type { i32, { i8*, i64 }, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%Regexp.0 = type { %.regexp.regexpRO.0, %Mutex.0, %IPST.36 }
%.regexp.regexpRO.0 = type { { i8*, i64 }, %Prog.0*, %.regexp.onePassProg.0*, { i8*, i64 }, { i8*, i64, i64 }, i8, i32, i32, i8, i64, %IPST.5, i8 }
%Prog.0 = type { %IPST.37, i64, i64 }
%IPST.37 = type { %Inst.0*, i64, i64 }
%Inst.0 = type { i8, i32, i32, %IPST.29 }
%IPST.29 = type { i32*, i64, i64 }
%.regexp.onePassProg.0 = type { %IPST.31, i64, i64 }
%IPST.31 = type { %.regexp.onePassInst.0*, i64, i64 }
%.regexp.onePassInst.0 = type { %Inst.0, %IPST.30 }
%IPST.30 = type { i32*, i64, i64 }
%IPST.5 = type { { i8*, i64 }*, i64, i64 }
%Mutex.0 = type { i32, i32 }
%IPST.36 = type { %.regexp.machine.0**, i64, i64 }
%.regexp.machine.0 = type { %Regexp.0*, %Prog.0*, %.regexp.onePassProg.0*, i64, %.regexp.bitState.0*, %.regexp.queue.0, %.regexp.queue.0, %IPST.35, i8, %IPST.32, %.regexp.inputBytes.0, %.regexp.inputString.0, %.regexp.inputReader.0 }
%.regexp.bitState.0 = type { %Prog.0*, i64, %IPST.32, %IPST.33, %IPST.30 }
%IPST.33 = type { %.regexp.job.0*, i64, i64 }
%.regexp.job.0 = type { i32, i8, i64 }
%.regexp.queue.0 = type { %IPST.30, %IPST.34 }
%IPST.34 = type { %.regexp.entry.0*, i64, i64 }
%.regexp.entry.0 = type { i32, %.regexp.thread.0* }
%.regexp.thread.0 = type { %Inst.0*, %IPST.32 }
%IPST.35 = type { %.regexp.thread.0**, i64, i64 }
%IPST.32 = type { i64*, i64, i64 }
%.regexp.inputBytes.0 = type { { i8*, i64, i64 } }
%.regexp.inputString.0 = type { { i8*, i64 } }
%.regexp.inputReader.0 = type { %RuneReader.0, i8, i64 }
%RuneReader.0 = type { { %_type.0*, void ({ i32, i64, %error.0 }*, i8*, i8*)* }*, i8* }
%Doctype.0 = type { %SourcePosition.0, { i8*, i64 } }
%Block.0 = type { %SourcePosition.0, %IPST.1 }
%IPST.1 = type { %Node.0*, i64, i64 }
%Node.0 = type { { %_type.0*, void (%SourcePosition.0*, i8*, i8*)* }*, i8* }
%Comment.0 = type { %SourcePosition.0, { i8*, i64 }, %Block.0*, i8 }
%Text.0 = type { %SourcePosition.0, { i8*, i64 }, i8 }
%IPST.2 = type { i8**, i64, i64 }
%NamedBlock.0 = type { %Block.0, { i8*, i64 }, i64 }
%Attribute.0 = type { %SourcePosition.0, { i8*, i64 }, { i8*, i64 }, i8, { i8*, i64 } }
%Tag.0 = type { %SourcePosition.0, %Block.0*, { i8*, i64 }, i8, %IPST.4 }
%IPST.4 = type { %Attribute.0*, i64, i64 }
%Condition.0 = type { %SourcePosition.0, %Block.0*, %Block.0*, { i8*, i64 } }
%Each.0 = type { %SourcePosition.0, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, %Block.0* }
%Assignment.0 = type { %SourcePosition.0, { i8*, i64 }, { i8*, i64 } }
%Mixin.0 = type { %SourcePosition.0, %Block.0*, { i8*, i64 }, %IPST.5 }
%MixinCall.0 = type { %SourcePosition.0, { i8*, i64 }, %IPST.5 }
%Parser.0 = type { %.command-line-arguments.scanner.0*, { i8*, i64 }, %FileSystem.0, %.command-line-arguments.token.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %Parser.0*, %Block.0* }
%.command-line-arguments.scanner.0 = type { %Reader.1*, %List.0*, %List.0*, i32, { i8*, i64 }, i64, i64, i64, i64, i64, i8 }
%Reader.1 = type { { i8*, i64, i64 }, %Reader.0, i64, i64, %error.0, i64, i64 }
%Reader.0 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%List.0 = type { %Element.0, i64 }
%Element.0 = type { %Element.0*, %Element.0*, %List.0*, %IPST.7 }
%IPST.7 = type { %_type.0*, i8* }
%FileSystem.0 = type { { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }*, i8* }
%File.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i8*, i64)*, void ({ i64, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %FileInfo.0, %error.0 }*, i8*, i8*)* }*, i8* }
%FileInfo.0 = type { { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, i8* }
%Time.0 = type { i64, i64, %Location.0* }
%Location.0 = type { { i8*, i64 }, %IPST.38, %IPST.39, i64, i64, %.time.zone.0* }
%IPST.38 = type { %.time.zone.0*, i64, i64 }
%IPST.39 = type { %.time.zoneTrans.0*, i64, i64 }
%.time.zoneTrans.0 = type { i64, i8, i8, i8 }
%.time.zone.0 = type { { i8*, i64 }, i64, i8 }
%__go_descriptor.16 = type { void (i8*)* }
%IPST.8 = type { { i8*, i64 }*, %NamedBlock.0**, i8*, { i64, i8, i8, i16, i32, %IPST.0*, %IPST.0*, i64, i8* }*, %IPST.0*, %IPST.0*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.0 = type { [8 x i8], [8 x { i8*, i64 }], [8 x %NamedBlock.0*], i8* }
%__go_descriptor.116 = type { void (i8*, i8*)* }
%IPST.6 = type { %IPST.7*, i64, i64 }

$imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = comdat any

$pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = comdat any

$type..map.6string.7string = comdat any

$gcbits..ba = comdat any

$string..d = comdat any

$type...1string = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkwkwka = comdat any

$type...68x.7uint8 = comdat any

$uint8..d = comdat any

$type...1uint8 = comdat any

$type...6.7uint8 = comdat any

$type...68x.7string = comdat any

$gcbits..wkwa = comdat any

$type...6.7string = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$gcbits..mb = comdat any

$int..d = comdat any

$type...1int = comdat any

$uint16..d = comdat any

$type...1uint16 = comdat any

$uint32..d = comdat any

$type...1uint32 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = comdat any

$uintptr..d = comdat any

$type...1uintptr = comdat any

$gcbits..da = comdat any

$type...1command_line_arguments.Node = comdat any

$type..func.8.9.8command_line_arguments.SourcePosition.9 = comdat any

$gcbits..ia = comdat any

$type...1command_line_arguments.SourcePosition = comdat any

$type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.SourcePosition = comdat any

$gcbits..ib = comdat any

$type...1command_line_arguments.Doctype = comdat any

$type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9 = comdat any

$type..func.8.9.8string.9 = comdat any

$type..func.8.1command_line_arguments.Doctype.9.8string.9 = comdat any

$type...1.1command_line_arguments.Doctype = comdat any

$gcbits..if = comdat any

$type...1command_line_arguments.Comment = comdat any

$type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Comment = comdat any

$type...1command_line_arguments.Block = comdat any

$type..func.8.9.8bool.9 = comdat any

$bool..d = comdat any

$type...1bool = comdat any

$type..func.8.1command_line_arguments.Block.9.8bool.9 = comdat any

$type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9 = comdat any

$type..func.8command_line_arguments.Node.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9 = comdat any

$type...1.1command_line_arguments.Block = comdat any

$type...6.7command_line_arguments.Node = comdat any

$type...1command_line_arguments.Text = comdat any

$type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Text = comdat any

$type...61x.7command_line_arguments.Node = comdat any

$gcbits..ijaa = comdat any

$type...1command_line_arguments.NamedBlock = comdat any

$type..func.8.1command_line_arguments.NamedBlock.9.8bool.9 = comdat any

$type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9 = comdat any

$type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9 = comdat any

$type...1.1command_line_arguments.NamedBlock = comdat any

$gcbits..ifba = comdat any

$type...1command_line_arguments.Attribute = comdat any

$type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Attribute = comdat any

$gcbits..itaa = comdat any

$type...1command_line_arguments.Tag = comdat any

$type..func.8.1command_line_arguments.Tag.9.8bool.9 = comdat any

$type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Tag = comdat any

$type...6.7command_line_arguments.Attribute = comdat any

$gcbits..ih = comdat any

$type...1command_line_arguments.Condition = comdat any

$type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Condition = comdat any

$gcbits..iwca = comdat any

$type...1command_line_arguments.Each = comdat any

$type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Each = comdat any

$type...1command_line_arguments.Assignment = comdat any

$type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Assignment = comdat any

$gcbits..ilaa = comdat any

$type...1command_line_arguments.Mixin = comdat any

$type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Mixin = comdat any

$type...1command_line_arguments.MixinCall = comdat any

$type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.MixinCall = comdat any

$gcbits..Cpaa = comdat any

$type...1command_line_arguments.Parser = comdat any

$type..func.8.9.8.1command_line_arguments.Block.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9 = comdat any

$type..func.8string.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Parser.3string.9.8.9 = comdat any

$type..func.8net_http.FileSystem.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9 = comdat any

$type..func.8.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.9 = comdat any

$type..func.8int32.9.8.1command_line_arguments.token.9 = comdat any

$int32..d = comdat any

$type...1int32 = comdat any

$type...1command_line_arguments.token = comdat any

$gcbits..ka = comdat any

$type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9 = comdat any

$type..func.8.9.8command_line_arguments.Node.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Assignment.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9 = comdat any

$type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9 = comdat any

$type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Comment.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Doctype.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Each.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Condition.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Mixin.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9 = comdat any

$type..func.8.9.8.1command_line_arguments.MixinCall.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9 = comdat any

$type..func.8string.9.8.1command_line_arguments.Parser.9 = comdat any

$type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Tag.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9 = comdat any

$type..func.8.9.8.1command_line_arguments.Text.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9 = comdat any

$type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9 = comdat any

$type...1.1command_line_arguments.Parser = comdat any

$type...1command_line_arguments.scanner = comdat any

$type..func.8.9.8.1command_line_arguments.token.9 = comdat any

$type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9 = comdat any

$type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9 = comdat any

$type..func.8int.9.8.9 = comdat any

$type..func.8.1command_line_arguments.scanner.3int.9.8.9 = comdat any

$type..func.8.1command_line_arguments.scanner.9.8.9 = comdat any

$type...1.1command_line_arguments.scanner = comdat any

$gcbits..ya = comdat any

$type..map.6string.7.1command_line_arguments.NamedBlock = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkEGba = comdat any

$type...68x.7.1command_line_arguments.NamedBlock = comdat any

$gcbits..Gh = comdat any

$type...6.7.1command_line_arguments.NamedBlock = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5 = comdat any

$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin = comdat any

$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall = comdat any

$type..interface.4.5 = comdat any

$gcbits..wkwka = comdat any

$gcbits..ppppa = comdat any

$gcbits..pppppppppa = comdat any

$gcbits..Ga = comdat any

$gcbits..ha = comdat any

$gcbits..GGaa = comdat any

$gcbits..ppaa = comdat any

$gcbits..GGGGa = comdat any

$gcbits..pppa = comdat any

$gcbits..ppppp = comdat any

$gcbits..GGGa = comdat any

$gcbits..GGGGGGGGGGGGGGGGGGGGGaa = comdat any

$gcbits..pppppppppppa = comdat any

$gcbits..pppppppa = comdat any

@net.IPAddr..d = external constant %StructType.0
@imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %IPAddr.0*)*, { i64, i64 } (i8*, %IPAddr.0*)*, i64 (i8*, %IPAddr.0*)*, i8 (i8*, %IPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)*, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @net.IPAddr..d, i32 0, i32 0), { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.Network, { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.String, i64 (i8*, %IPAddr.0*)* @net.IPAddr.family, i8 (i8*, %IPAddr.0*)* @net.IPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)* @net.IPAddr.sockaddr, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* @net.IPAddr.toLocal }, comdat
@type...1net.IPAddr = external constant %PtrType.0
@pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr = weak local_unnamed_addr constant { %_type.0*, { i64, i64 } (i8*, %IPAddr.0*)*, { i64, i64 } (i8*, %IPAddr.0*)*, i64 (i8*, %IPAddr.0*)*, i8 (i8*, %IPAddr.0*)*, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)*, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.IPAddr, i32 0, i32 0), { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.Network, { i64, i64 } (i8*, %IPAddr.0*)* @net.IPAddr.String, i64 (i8*, %IPAddr.0*)* @net.IPAddr.family, i8 (i8*, %IPAddr.0*)* @net.IPAddr.isWildcard, void ({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64)* @net.IPAddr.sockaddr, { i64, i64 } (i8*, %IPAddr.0*, i64, i64)* @net.IPAddr.toLocal }, comdat
@command_line_arguments.selfClosingTags = internal global [10 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.0, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.1, i32 0, i32 0), i64 3 }, { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.2, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.3, i32 0, i32 0), i64 5 }, { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.4, i32 0, i32 0), i64 6 }, { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.5, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.6, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.7, i32 0, i32 0), i64 3 }, { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.8, i32 0, i32 0), i64 2 }, { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.9, i32 0, i32 0), i64 2 }]
@const.0 = private constant [5 x i8] c"meta\00", align 1
@const.1 = private constant [4 x i8] c"img\00", align 1
@const.2 = private constant [5 x i8] c"link\00", align 1
@const.3 = private constant [6 x i8] c"input\00", align 1
@const.4 = private constant [7 x i8] c"source\00", align 1
@const.5 = private constant [5 x i8] c"area\00", align 1
@const.6 = private constant [5 x i8] c"base\00", align 1
@const.7 = private constant [4 x i8] c"col\00", align 1
@const.8 = private constant [3 x i8] c"br\00", align 1
@const.9 = private constant [3 x i8] c"hr\00", align 1
@command_line_arguments.doctypes = internal global { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null
@const.10 = private constant [2 x i8] c"5\00", align 1
@const.11 = private constant [16 x i8] c"<!DOCTYPE html>\00", align 1
@const.12 = private constant [8 x i8] c"default\00", align 1
@const.13 = private constant [4 x i8] c"xml\00", align 1
@const.14 = private constant [40 x i8] c"<?xml version=\221.0\22 encoding=\22utf-8\22 ?>\00", align 1
@const.15 = private constant [13 x i8] c"transitional\00", align 1
@const.16 = private constant [122 x i8] c"<!DOCTYPE html PUBLIC \22-//W3C//DTD XHTML 1.0 Transitional//EN\22 \22http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\22>\00", align 1
@const.17 = private constant [7 x i8] c"strict\00", align 1
@const.18 = private constant [110 x i8] c"<!DOCTYPE html PUBLIC \22-//W3C//DTD XHTML 1.0 Strict//EN\22 \22http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\22>\00", align 1
@const.19 = private constant [9 x i8] c"frameset\00", align 1
@const.20 = private constant [114 x i8] c"<!DOCTYPE html PUBLIC \22-//W3C//DTD XHTML 1.0 Frameset//EN\22 \22http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\22>\00", align 1
@const.21 = private constant [4 x i8] c"1.1\00", align 1
@const.22 = private constant [98 x i8] c"<!DOCTYPE html PUBLIC \22-//W3C//DTD XHTML 1.1//EN\22 \22http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\22>\00", align 1
@const.23 = private constant [6 x i8] c"basic\00", align 1
@const.24 = private constant [110 x i8] c"<!DOCTYPE html PUBLIC \22-//W3C//DTD XHTML Basic 1.1//EN\22 \22http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd\22>\00", align 1
@const.25 = private constant [7 x i8] c"mobile\00", align 1
@const.26 = private constant [127 x i8] c"<!DOCTYPE html PUBLIC \22-//WAPFORUM//DTD XHTML Mobile 1.2//EN\22 \22http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd\22>\00", align 1
@const.27 = private unnamed_addr constant [9 x { { i8*, i64 }, { i8*, i64 } }] [{ { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.10, i32 0, i32 0), i64 1 }, { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.11, i32 0, i32 0), i64 15 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.12, i32 0, i32 0), i64 7 }, { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.11, i32 0, i32 0), i64 15 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.13, i32 0, i32 0), i64 3 }, { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.14, i32 0, i32 0), i64 39 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.15, i32 0, i32 0), i64 12 }, { i8*, i64 } { i8* getelementptr inbounds ([122 x i8], [122 x i8]* @const.16, i32 0, i32 0), i64 121 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.17, i32 0, i32 0), i64 6 }, { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.18, i32 0, i32 0), i64 109 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.19, i32 0, i32 0), i64 8 }, { i8*, i64 } { i8* getelementptr inbounds ([114 x i8], [114 x i8]* @const.20, i32 0, i32 0), i64 113 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.21, i32 0, i32 0), i64 3 }, { i8*, i64 } { i8* getelementptr inbounds ([98 x i8], [98 x i8]* @const.22, i32 0, i32 0), i64 97 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.23, i32 0, i32 0), i64 5 }, { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.24, i32 0, i32 0), i64 109 } }, { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.25, i32 0, i32 0), i64 6 }, { i8*, i64 } { i8* getelementptr inbounds ([127 x i8], [127 x i8]* @const.26, i32 0, i32 0), i64 126 } }]
@type..map.6string.7string = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 297061700, i8 21, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C1, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* @string..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 16, i8 0, i16 272, i8 1, i8 1 }, comdat
@gcbits..ba = weak constant [1 x i8] c"\01", comdat
@const.28 = private constant [18 x i8] c"map[string]string\00", align 1
@go..C1 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.28, i32 0, i32 0), i64 17 }
@string..d = weak constant %_type.0 { i64 16, i64 8, i32 -1998952806, i8 24, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.strhash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.strequal..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C2, %uncommonType.0* @go..C5, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0) }, comdat
@runtime.strhash..f = external constant %functionDescriptor.0
@runtime.strequal..f = external constant %functionDescriptor.0
@const.29 = private constant [7 x i8] c"string\00", align 1
@go..C2 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.29, i32 0, i32 0), i64 6 }
@go..C3 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.29, i32 0, i32 0), i64 6 }
@go..C4 = internal global [1 x %method.0] zeroinitializer
@go..C5 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C3, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C4, i32 0, i32 0), i64 0, i64 0 } }
@type...1string = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1918473815, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C6, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@runtime.memhash64..f = external constant %functionDescriptor.0
@runtime.memequal64..f = external constant %functionDescriptor.0
@const.30 = private constant [8 x i8] c"*string\00", align 1
@go..C6 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.30, i32 0, i32 0), i64 7 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 272, i64 272, i32 887229860, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..kwkwkwka, i32 0, i32 0), { i8*, i64 }* @go..C7, %uncommonType.0* null, %_type.0* null }, %IPST.42 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C21, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkwkwka = weak constant [5 x i8] c"\AA\AA\AA\AA\02", comdat
@const.31 = private constant [74 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }\00", align 1
@go..C7 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([74 x i8], [74 x i8]* @const.31, i32 0, i32 0), i64 73 }
@const.32 = private constant [8 x i8] c"topbits\00", align 1
@go..C8 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.32, i32 0, i32 0), i64 7 }
@type...68x.7uint8 = weak constant %ArrayType.0 { %_type.0 { i64 8, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* null, { i8*, i64 }* @go..C9, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 8 }, comdat
@const.33 = private constant [9 x i8] c"[8]uint8\00", align 1
@go..C9 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.33, i32 0, i32 0), i64 8 }
@uint8..d = weak constant %_type.0 { i64 1, i64 0, i32 264632089, i8 -120, i8 1, i8 1, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.2*), i8* null, { i8*, i64 }* @go..C10, %uncommonType.0* @go..C13, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint8, i32 0, i32 0) }, comdat
@runtime.memhash8..f = external constant %functionDescriptor.0
@runtime.memequal8..f = external constant %functionDescriptor.0
@const.34 = private constant [6 x i8] c"uint8\00", align 1
@go..C10 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@go..C11 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@go..C12 = internal global [1 x %method.0] zeroinitializer
@go..C13 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C11, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C12, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint8 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -60853863, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C14, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.35 = private constant [7 x i8] c"*uint8\00", align 1
@go..C14 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.35, i32 0, i32 0), i64 6 }
@type...6.7uint8 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 264632103, i8 23, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C15, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.36 = private constant [8 x i8] c"[]uint8\00", align 1
@go..C15 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.36, i32 0, i32 0), i64 7 }
@const.37 = private constant [5 x i8] c"keys\00", align 1
@go..C16 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.37, i32 0, i32 0), i64 4 }
@type...68x.7string = weak constant %ArrayType.0 { %_type.0 { i64 128, i64 120, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkwa, i32 0, i32 0), { i8*, i64 }* @go..C17, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 8 }, comdat
@gcbits..wkwa = weak constant [2 x i8] c"UU", comdat
@const.38 = private constant [10 x i8] c"[8]string\00", align 1
@go..C17 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.38, i32 0, i32 0), i64 9 }
@type...6.7string = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1998952792, i8 23, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C18, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.39 = private constant [9 x i8] c"[]string\00", align 1
@go..C18 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.39, i32 0, i32 0), i64 8 }
@const.40 = private constant [7 x i8] c"values\00", align 1
@go..C19 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.40, i32 0, i32 0), i64 6 }
@const.41 = private constant [9 x i8] c"overflow\00", align 1
@go..C20 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.41, i32 0, i32 0), i64 8 }
@unsafe.Pointer..d = external constant %_type.0
@go..C21 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C8, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C16, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C19, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C20, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 528 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1324374500, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C22, %uncommonType.0* null, %_type.0* null }, %IPST.42 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C53, i32 0, i32 0), i64 9, i64 9 } }, comdat
@gcbits..mb = weak constant [1 x i8] c",", comdat
@const.42 = private constant [274 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C22 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([274 x i8], [274 x i8]* @const.42, i32 0, i32 0), i64 273 }
@const.43 = private constant [6 x i8] c"count\00", align 1
@go..C23 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@int..d = weak constant %_type.0 { i64 8, i64 0, i32 876704034, i8 -126, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* null, { i8*, i64 }* @go..C24, %uncommonType.0* @go..C27, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int, i32 0, i32 0) }, comdat
@const.44 = private constant [4 x i8] c"int\00", align 1
@go..C24 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.44, i32 0, i32 0), i64 3 }
@go..C25 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.44, i32 0, i32 0), i64 3 }
@go..C26 = internal global [1 x %method.0] zeroinitializer
@go..C27 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C25, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C26, i32 0, i32 0), i64 0, i64 0 } }
@type...1int = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1142362665, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C28, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d }, comdat
@const.45 = private constant [5 x i8] c"*int\00", align 1
@go..C28 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.45, i32 0, i32 0), i64 4 }
@const.46 = private constant [6 x i8] c"flags\00", align 1
@go..C29 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.46, i32 0, i32 0), i64 5 }
@const.47 = private constant [2 x i8] c"B\00", align 1
@go..C30 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.47, i32 0, i32 0), i64 1 }
@const.48 = private constant [10 x i8] c"noverflow\00", align 1
@go..C31 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.48, i32 0, i32 0), i64 9 }
@uint16..d = weak constant %_type.0 { i64 2, i64 0, i32 76732288, i8 -119, i8 2, i8 2, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash16..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal16..f to %__go_descriptor.2*), i8* null, { i8*, i64 }* @go..C32, %uncommonType.0* @go..C35, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint16, i32 0, i32 0) }, comdat
@runtime.memhash16..f = external constant %functionDescriptor.0
@runtime.memequal16..f = external constant %functionDescriptor.0
@const.49 = private constant [7 x i8] c"uint16\00", align 1
@go..C32 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.49, i32 0, i32 0), i64 6 }
@go..C33 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.49, i32 0, i32 0), i64 6 }
@go..C34 = internal global [1 x %method.0] zeroinitializer
@go..C35 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C33, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C34, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint16 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1227716617, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C36, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d }, comdat
@const.50 = private constant [8 x i8] c"*uint16\00", align 1
@go..C36 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.50, i32 0, i32 0), i64 7 }
@const.51 = private constant [6 x i8] c"hash0\00", align 1
@go..C37 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.51, i32 0, i32 0), i64 5 }
@uint32..d = weak constant %_type.0 { i64 4, i64 0, i32 278357906, i8 -118, i8 4, i8 4, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash32..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal32..f to %__go_descriptor.2*), i8* null, { i8*, i64 }* @go..C38, %uncommonType.0* @go..C41, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint32, i32 0, i32 0) }, comdat
@runtime.memhash32..f = external constant %functionDescriptor.0
@runtime.memequal32..f = external constant %functionDescriptor.0
@const.52 = private constant [7 x i8] c"uint32\00", align 1
@go..C38 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.52, i32 0, i32 0), i64 6 }
@go..C39 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.52, i32 0, i32 0), i64 6 }
@go..C40 = internal global [1 x %method.0] zeroinitializer
@go..C41 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C39, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C40, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint32 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 158759209, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C42, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint32..d }, comdat
@const.53 = private constant [8 x i8] c"*uint32\00", align 1
@go..C42 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.53, i32 0, i32 0), i64 7 }
@const.54 = private constant [8 x i8] c"buckets\00", align 1
@go..C43 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.54, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1310775881, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C44, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.55 = private constant [75 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }\00", align 1
@go..C44 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([75 x i8], [75 x i8]* @const.55, i32 0, i32 0), i64 74 }
@const.56 = private constant [11 x i8] c"oldbuckets\00", align 1
@go..C45 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.56, i32 0, i32 0), i64 10 }
@const.57 = private constant [10 x i8] c"nevacuate\00", align 1
@go..C46 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.57, i32 0, i32 0), i64 9 }
@uintptr..d = weak constant %_type.0 { i64 8, i64 0, i32 -1488193301, i8 -116, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* null, { i8*, i64 }* @go..C47, %uncommonType.0* @go..C50, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uintptr, i32 0, i32 0) }, comdat
@const.58 = private constant [8 x i8] c"uintptr\00", align 1
@go..C47 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.58, i32 0, i32 0), i64 7 }
@go..C48 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.58, i32 0, i32 0), i64 7 }
@go..C49 = internal global [1 x %method.0] zeroinitializer
@go..C50 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C48, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C49, i32 0, i32 0), i64 0, i64 0 } }
@type...1uintptr = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1958710969, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C51, %uncommonType.0* null, %_type.0* null }, %_type.0* @uintptr..d }, comdat
@const.59 = private constant [9 x i8] c"*uintptr\00", align 1
@go..C51 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.59, i32 0, i32 0), i64 8 }
@const.60 = private constant [6 x i8] c"extra\00", align 1
@go..C52 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.60, i32 0, i32 0), i64 5 }
@go..C53 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C23, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C29, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C30, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C31, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C37, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C43, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C45, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C46, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C52, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@runtime.writeBarrier = external local_unnamed_addr externally_initialized global i32
@command_line_arguments.Node..d = constant %InterfaceType.0 { %_type.0 { i64 16, i64 16, i32 268213848, i8 20, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C54, %uncommonType.0* @go..C58, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Node, i32 0, i32 0) }, %IPST.43 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C82, i32 0, i32 0), i64 1, i64 1 } }
@runtime.interhash..f = external constant %functionDescriptor.0
@runtime.interequal..f = external constant %functionDescriptor.0
@gcbits..da = weak constant [1 x i8] c"\03", comdat
@const.61 = private constant [36 x i8] c"\09command_line_arguments\09parser.Node\00", align 1
@go..C54 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.61, i32 0, i32 0), i64 35 }
@const.62 = private constant [5 x i8] c"Node\00", align 1
@go..C55 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.62, i32 0, i32 0), i64 4 }
@const.63 = private constant [23 x i8] c"command-line-arguments\00", align 1
@go..C56 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C57 = internal global [1 x %method.0] zeroinitializer
@go..C58 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C55, { i8*, i64 }* @go..C56, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C57, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Node = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -3545719, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C59, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0) }, comdat
@const.64 = private constant [37 x i8] c"*\09command_line_arguments\09parser.Node\00", align 1
@go..C59 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.64, i32 0, i32 0), i64 36 }
@const.65 = private constant [4 x i8] c"Pos\00", align 1
@go..C60 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2132123256, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C61, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C62, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C81, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.66 = private constant [53 x i8] c"func() \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C61 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.66, i32 0, i32 0), i64 52 }
@go..C62 = internal global [1 x %_type.0*] zeroinitializer
@command_line_arguments.SourcePosition..d = constant %StructType.0 { %_type.0 { i64 40, i64 32, i32 -301749882, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.SourcePosition..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.SourcePosition..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ia, i32 0, i32 0), { i8*, i64 }* @go..C63, %uncommonType.0* @go..C67, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.SourcePosition, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C80, i32 0, i32 0), i64 4, i64 4 } }
@command_line_arguments.command_line_arguments.SourcePosition..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.SourcePosition..hash to i64) }
@command_line_arguments.command_line_arguments.SourcePosition..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.SourcePosition..eq to i64) }
@gcbits..ia = weak constant [1 x i8] c"\08", comdat
@const.67 = private constant [46 x i8] c"\09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C63 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.67, i32 0, i32 0), i64 45 }
@const.68 = private constant [15 x i8] c"SourcePosition\00", align 1
@go..C64 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C65 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C66 = internal global [1 x %method.0] zeroinitializer
@go..C67 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C64, { i8*, i64 }* @go..C65, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C66, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.SourcePosition = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -533030807, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C68, %uncommonType.0* @go..C74, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.SourcePosition, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0) }, comdat
@const.69 = private constant [47 x i8] c"*\09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C68 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.69, i32 0, i32 0), i64 46 }
@go..C69 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2009239896, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C70, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C71, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C72, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.70 = private constant [99 x i8] c"func(*\09command_line_arguments\09parser.SourcePosition) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C70 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([99 x i8], [99 x i8]* @const.70, i32 0, i32 0), i64 98 }
@go..C71 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.SourcePosition, i32 0, i32 0)]
@go..C72 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C73 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C69, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %SourcePosition.0*)* @command_line_arguments.SourcePosition.Pos to i8*) }]
@go..C74 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C73, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.SourcePosition = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 61441689, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C75, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.SourcePosition, i32 0, i32 0) }, comdat
@const.71 = private constant [48 x i8] c"**\09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C75 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([48 x i8], [48 x i8]* @const.71, i32 0, i32 0), i64 47 }
@const.72 = private constant [8 x i8] c"LineNum\00", align 1
@go..C76 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.72, i32 0, i32 0), i64 7 }
@const.73 = private constant [7 x i8] c"ColNum\00", align 1
@go..C77 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.73, i32 0, i32 0), i64 6 }
@const.74 = private constant [12 x i8] c"TokenLength\00", align 1
@go..C78 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.74, i32 0, i32 0), i64 11 }
@const.75 = private constant [9 x i8] c"Filename\00", align 1
@go..C79 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.75, i32 0, i32 0), i64 8 }
@go..C80 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C76, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C77, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C78, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C79, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 48 }]
@go..C81 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C82 = internal global [1 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C60, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0) }]
@command_line_arguments.Doctype..d = constant %StructType.0 { %_type.0 { i64 56, i64 48, i32 -236574310, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Doctype..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Doctype..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ib, i32 0, i32 0), { i8*, i64 }* @go..C83, %uncommonType.0* @go..C87, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Doctype, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C105, i32 0, i32 0), i64 2, i64 2 } }
@command_line_arguments.command_line_arguments.Doctype..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Doctype..hash to i64) }
@command_line_arguments.command_line_arguments.Doctype..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Doctype..eq to i64) }
@gcbits..ib = weak constant [1 x i8] c"(", comdat
@const.77 = private constant [39 x i8] c"\09command_line_arguments\09parser.Doctype\00", align 1
@go..C83 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.77, i32 0, i32 0), i64 38 }
@const.78 = private constant [8 x i8] c"Doctype\00", align 1
@go..C84 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.78, i32 0, i32 0), i64 7 }
@go..C85 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C86 = internal global [1 x %method.0] zeroinitializer
@go..C87 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C84, { i8*, i64 }* @go..C85, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C86, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Doctype = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 509778345, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C88, %uncommonType.0* @go..C101, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Doctype, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Doctype..d, i32 0, i32 0) }, comdat
@const.79 = private constant [40 x i8] c"*\09command_line_arguments\09parser.Doctype\00", align 1
@go..C88 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.79, i32 0, i32 0), i64 39 }
@go..C89 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1295881896, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C90, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C91, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C92, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.80 = private constant [92 x i8] c"func(*\09command_line_arguments\09parser.Doctype) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C90 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([92 x i8], [92 x i8]* @const.80, i32 0, i32 0), i64 91 }
@go..C91 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Doctype, i32 0, i32 0)]
@go..C92 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@const.81 = private constant [7 x i8] c"String\00", align 1
@go..C93 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.81, i32 0, i32 0), i64 6 }
@type..func.8.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 916039304, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C94, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C95, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C96, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.82 = private constant [14 x i8] c"func() string\00", align 1
@go..C94 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.82, i32 0, i32 0), i64 13 }
@go..C95 = internal global [1 x %_type.0*] zeroinitializer
@go..C96 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@type..func.8.1command_line_arguments.Doctype.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 49077160, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C97, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C98, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C99, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.83 = private constant [53 x i8] c"func(*\09command_line_arguments\09parser.Doctype) string\00", align 1
@go..C97 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.83, i32 0, i32 0), i64 52 }
@go..C98 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Doctype, i32 0, i32 0)]
@go..C99 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C100 = internal global [2 x %method.0] [%method.0 { { i8*, i64 }* @go..C89, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Doctype.0*)* @command_line_arguments.Doctype.Pos..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C93, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Doctype.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Doctype.0*)* @command_line_arguments.Doctype.String to i8*) }]
@go..C101 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([2 x %method.0], [2 x %method.0]* @go..C100, i32 0, i32 0), i64 2, i64 2 } }
@type...1.1command_line_arguments.Doctype = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -433481063, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C102, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Doctype, i32 0, i32 0) }, comdat
@const.84 = private constant [41 x i8] c"**\09command_line_arguments\09parser.Doctype\00", align 1
@go..C102 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.84, i32 0, i32 0), i64 40 }
@go..C103 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@const.85 = private constant [6 x i8] c"Value\00", align 1
@go..C104 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.85, i32 0, i32 0), i64 5 }
@go..C105 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C103, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C104, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }]
@const.86 = private constant [11 x i8] c"<!DOCTYPE \00", align 1
@const.87 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.86, i32 0, i32 0), i64 10 }
@const.88 = private constant [2 x i8] c">\00", align 1
@const.89 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.88, i32 0, i32 0), i64 1 }
@command_line_arguments.Comment..d = constant %StructType.0 { %_type.0 { i64 72, i64 64, i32 -1362033673, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Comment..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Comment..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..if, i32 0, i32 0), { i8*, i64 }* @go..C106, %uncommonType.0* @go..C110, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Comment, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C162, i32 0, i32 0), i64 4, i64 4 } }
@command_line_arguments.command_line_arguments.Comment..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Comment..hash to i64) }
@command_line_arguments.command_line_arguments.Comment..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Comment..eq to i64) }
@gcbits..if = weak constant [1 x i8] c"\A8", comdat
@const.91 = private constant [39 x i8] c"\09command_line_arguments\09parser.Comment\00", align 1
@go..C106 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.91, i32 0, i32 0), i64 38 }
@const.92 = private constant [8 x i8] c"Comment\00", align 1
@go..C107 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.92, i32 0, i32 0), i64 7 }
@go..C108 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C109 = internal global [1 x %method.0] zeroinitializer
@go..C110 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C107, { i8*, i64 }* @go..C108, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C109, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Comment = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -317702279, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C111, %uncommonType.0* @go..C117, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Comment, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Comment..d, i32 0, i32 0) }, comdat
@const.93 = private constant [40 x i8] c"*\09command_line_arguments\09parser.Comment\00", align 1
@go..C111 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.93, i32 0, i32 0), i64 39 }
@go..C112 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 586305704, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C113, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C114, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C115, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.94 = private constant [92 x i8] c"func(*\09command_line_arguments\09parser.Comment) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C113 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([92 x i8], [92 x i8]* @const.94, i32 0, i32 0), i64 91 }
@go..C114 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Comment, i32 0, i32 0)]
@go..C115 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C116 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C112, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Comment.0*)* @command_line_arguments.Comment.Pos..stub to i8*) }]
@go..C117 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C116, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Comment = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -788269159, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C118, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Comment, i32 0, i32 0) }, comdat
@const.95 = private constant [41 x i8] c"**\09command_line_arguments\09parser.Comment\00", align 1
@go..C118 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.95, i32 0, i32 0), i64 40 }
@go..C119 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C120 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.85, i32 0, i32 0), i64 5 }
@const.96 = private constant [6 x i8] c"Block\00", align 1
@go..C121 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.96, i32 0, i32 0), i64 5 }
@type...1command_line_arguments.Block = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -157800903, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C122, %uncommonType.0* @go..C150, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Block, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Block..d, i32 0, i32 0) }, comdat
@const.97 = private constant [38 x i8] c"*\09command_line_arguments\09parser.Block\00", align 1
@go..C122 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.97, i32 0, i32 0), i64 37 }
@const.98 = private constant [10 x i8] c"CanInline\00", align 1
@go..C123 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.98, i32 0, i32 0), i64 9 }
@type..func.8.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -361864120, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C124, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C125, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C131, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.99 = private constant [12 x i8] c"func() bool\00", align 1
@go..C124 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.99, i32 0, i32 0), i64 11 }
@go..C125 = internal global [1 x %_type.0*] zeroinitializer
@bool..d = weak constant %_type.0 { i64 1, i64 0, i32 1537849745, i8 -127, i8 1, i8 1, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.2*), i8* null, { i8*, i64 }* @go..C126, %uncommonType.0* @go..C129, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0) }, comdat
@const.100 = private constant [5 x i8] c"bool\00", align 1
@go..C126 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.100, i32 0, i32 0), i64 4 }
@go..C127 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.100, i32 0, i32 0), i64 4 }
@go..C128 = internal global [1 x %method.0] zeroinitializer
@go..C129 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C127, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C128, i32 0, i32 0), i64 0, i64 0 } }
@type...1bool = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1164207847, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C130, %uncommonType.0* null, %_type.0* null }, %_type.0* @bool..d }, comdat
@const.101 = private constant [6 x i8] c"*bool\00", align 1
@go..C130 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.101, i32 0, i32 0), i64 5 }
@go..C131 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@type..func.8.1command_line_arguments.Block.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1116525720, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C132, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C133, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C134, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.102 = private constant [49 x i8] c"func(*\09command_line_arguments\09parser.Block) bool\00", align 1
@go..C132 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @const.102, i32 0, i32 0), i64 48 }
@go..C133 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0)]
@go..C134 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@go..C135 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1408182440, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C136, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C137, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C138, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.103 = private constant [90 x i8] c"func(*\09command_line_arguments\09parser.Block) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C136 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([90 x i8], [90 x i8]* @const.103, i32 0, i32 0), i64 89 }
@go..C137 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0)]
@go..C138 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@const.104 = private constant [5 x i8] c"push\00", align 1
@go..C139 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.104, i32 0, i32 0), i64 4 }
@go..C140 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8command_line_arguments.Node.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -7091448, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C141, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C142, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C143, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.105 = private constant [42 x i8] c"func(\09command_line_arguments\09parser.Node)\00", align 1
@go..C141 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.105, i32 0, i32 0), i64 41 }
@go..C142 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0)]
@go..C143 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -768844504, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C144, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C145, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C146, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.106 = private constant [81 x i8] c"func(*\09command_line_arguments\09parser.Block, \09command_line_arguments\09parser.Node)\00", align 1
@go..C144 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([81 x i8], [81 x i8]* @const.106, i32 0, i32 0), i64 80 }
@go..C145 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0)]
@go..C146 = internal global [1 x %_type.0*] zeroinitializer
@const.107 = private constant [10 x i8] c"pushFront\00", align 1
@go..C147 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.107, i32 0, i32 0), i64 9 }
@go..C148 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C149 = internal global [4 x %method.0] [%method.0 { { i8*, i64 }* @go..C123, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Block.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %Block.0*)* @command_line_arguments.Block.CanInline to i8*) }, %method.0 { { i8*, i64 }* @go..C135, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Block.0*)* @command_line_arguments.Block.Pos..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C139, { i8*, i64 }* @go..C140, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8command_line_arguments.Node.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Block.0*, i64, i64)* @command_line_arguments.Block.push to i8*) }, %method.0 { { i8*, i64 }* @go..C147, { i8*, i64 }* @go..C148, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8command_line_arguments.Node.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Block.0*, i64, i64)* @command_line_arguments.Block.pushFront to i8*) }]
@go..C150 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([4 x %method.0], [4 x %method.0]* @go..C149, i32 0, i32 0), i64 4, i64 4 } }
@type...1.1command_line_arguments.Block = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1770152857, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C151, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0) }, comdat
@const.108 = private constant [39 x i8] c"**\09command_line_arguments\09parser.Block\00", align 1
@go..C151 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.108, i32 0, i32 0), i64 38 }
@command_line_arguments.Block..d = constant %StructType.0 { %_type.0 { i64 64, i64 48, i32 -815168925, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ib, i32 0, i32 0), { i8*, i64 }* @go..C152, %uncommonType.0* @go..C156, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C160, i32 0, i32 0), i64 2, i64 2 } }
@const.109 = private constant [37 x i8] c"\09command_line_arguments\09parser.Block\00", align 1
@go..C152 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.109, i32 0, i32 0), i64 36 }
@go..C153 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.96, i32 0, i32 0), i64 5 }
@go..C154 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C155 = internal global [1 x %method.0] zeroinitializer
@go..C156 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C153, { i8*, i64 }* @go..C154, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C155, i32 0, i32 0), i64 0, i64 0 } }
@go..C157 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@const.110 = private constant [9 x i8] c"Children\00", align 1
@go..C158 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.110, i32 0, i32 0), i64 8 }
@type...6.7command_line_arguments.Node = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 268213862, i8 23, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C159, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0) }, comdat
@const.111 = private constant [38 x i8] c"[]\09command_line_arguments\09parser.Node\00", align 1
@go..C159 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.111, i32 0, i32 0), i64 37 }
@go..C160 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C157, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C158, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Node, i32 0, i32 0), { i8*, i64 }* null, i64 80 }]
@const.112 = private constant [7 x i8] c"Silent\00", align 1
@go..C161 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.112, i32 0, i32 0), i64 6 }
@go..C162 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C119, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C120, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C121, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), { i8*, i64 }* null, i64 112 }, %structField.0 { { i8*, i64 }* @go..C161, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 128 }]
@command_line_arguments.Text..d = constant %StructType.0 { %_type.0 { i64 64, i64 48, i32 1613416449, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Text..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Text..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ib, i32 0, i32 0), { i8*, i64 }* @go..C163, %uncommonType.0* @go..C167, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Text, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C179, i32 0, i32 0), i64 3, i64 3 } }
@command_line_arguments.command_line_arguments.Text..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Text..hash to i64) }
@command_line_arguments.command_line_arguments.Text..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Text..eq to i64) }
@const.113 = private constant [36 x i8] c"\09command_line_arguments\09parser.Text\00", align 1
@go..C163 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.113, i32 0, i32 0), i64 35 }
@const.114 = private constant [5 x i8] c"Text\00", align 1
@go..C164 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.114, i32 0, i32 0), i64 4 }
@go..C165 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C166 = internal global [1 x %method.0] zeroinitializer
@go..C167 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C164, { i8*, i64 }* @go..C165, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C166, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Text = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 44859417, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C168, %uncommonType.0* @go..C174, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Text, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Text..d, i32 0, i32 0) }, comdat
@const.115 = private constant [37 x i8] c"*\09command_line_arguments\09parser.Text\00", align 1
@go..C168 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.115, i32 0, i32 0), i64 36 }
@go..C169 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -696621912, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C170, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C171, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C172, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.116 = private constant [89 x i8] c"func(*\09command_line_arguments\09parser.Text) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C170 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([89 x i8], [89 x i8]* @const.116, i32 0, i32 0), i64 88 }
@go..C171 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Text, i32 0, i32 0)]
@go..C172 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C173 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C169, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Text.0*)* @command_line_arguments.Text.Pos..stub to i8*) }]
@go..C174 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C173, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Text = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 717750681, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C175, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Text, i32 0, i32 0) }, comdat
@const.117 = private constant [38 x i8] c"**\09command_line_arguments\09parser.Text\00", align 1
@go..C175 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.117, i32 0, i32 0), i64 37 }
@go..C176 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C177 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.85, i32 0, i32 0), i64 5 }
@const.118 = private constant [4 x i8] c"Raw\00", align 1
@go..C178 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.118, i32 0, i32 0), i64 3 }
@go..C179 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C176, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C177, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C178, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 112 }]
@type...61x.7command_line_arguments.Node = weak constant %ArrayType.0 { %_type.0 { i64 16, i64 16, i32 536427711, i8 17, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C180, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Node, i32 0, i32 0), i64 1 }, comdat
@const.119 = private constant [39 x i8] c"[1]\09command_line_arguments\09parser.Node\00", align 1
@go..C180 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.119, i32 0, i32 0), i64 38 }
@command_line_arguments.NamedBlock..d = constant %StructType.0 { %_type.0 { i64 88, i64 72, i32 -1360643890, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ijaa, i32 0, i32 0), { i8*, i64 }* @go..C181, %uncommonType.0* @go..C185, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C208, i32 0, i32 0), i64 3, i64 3 } }
@gcbits..ijaa = weak constant [2 x i8] c"(\01", comdat
@const.122 = private constant [42 x i8] c"\09command_line_arguments\09parser.NamedBlock\00", align 1
@go..C181 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.122, i32 0, i32 0), i64 41 }
@const.123 = private constant [11 x i8] c"NamedBlock\00", align 1
@go..C182 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.123, i32 0, i32 0), i64 10 }
@go..C183 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C184 = internal global [1 x %method.0] zeroinitializer
@go..C185 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C182, { i8*, i64 }* @go..C183, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C184, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.NamedBlock = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -295465751, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C186, %uncommonType.0* @go..C203, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.NamedBlock, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.NamedBlock..d, i32 0, i32 0) }, comdat
@const.124 = private constant [43 x i8] c"*\09command_line_arguments\09parser.NamedBlock\00", align 1
@go..C186 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.124, i32 0, i32 0), i64 42 }
@go..C187 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.98, i32 0, i32 0), i64 9 }
@type..func.8.1command_line_arguments.NamedBlock.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1226833560, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C188, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C189, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C190, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.125 = private constant [54 x i8] c"func(*\09command_line_arguments\09parser.NamedBlock) bool\00", align 1
@go..C188 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([54 x i8], [54 x i8]* @const.125, i32 0, i32 0), i64 53 }
@go..C189 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0)]
@go..C190 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@go..C191 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1297874600, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C192, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C193, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C194, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.126 = private constant [95 x i8] c"func(*\09command_line_arguments\09parser.NamedBlock) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C192 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([95 x i8], [95 x i8]* @const.126, i32 0, i32 0), i64 94 }
@go..C193 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0)]
@go..C194 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C195 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.104, i32 0, i32 0), i64 4 }
@go..C196 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -879152344, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C197, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C198, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C199, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.127 = private constant [86 x i8] c"func(*\09command_line_arguments\09parser.NamedBlock, \09command_line_arguments\09parser.Node)\00", align 1
@go..C197 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([86 x i8], [86 x i8]* @const.127, i32 0, i32 0), i64 85 }
@go..C198 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0)]
@go..C199 = internal global [1 x %_type.0*] zeroinitializer
@go..C200 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.107, i32 0, i32 0), i64 9 }
@go..C201 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C202 = internal global [4 x %method.0] [%method.0 { { i8*, i64 }* @go..C187, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.NamedBlock.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %NamedBlock.0*)* @command_line_arguments.NamedBlock.CanInline..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C191, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %NamedBlock.0*)* @command_line_arguments.NamedBlock.Pos..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C195, { i8*, i64 }* @go..C196, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8command_line_arguments.Node.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %NamedBlock.0*, i64, i64)* @command_line_arguments.NamedBlock.push..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C200, { i8*, i64 }* @go..C201, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8command_line_arguments.Node.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %NamedBlock.0*, i64, i64)* @command_line_arguments.NamedBlock.pushFront..stub to i8*) }]
@go..C203 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([4 x %method.0], [4 x %method.0]* @go..C202, i32 0, i32 0), i64 4, i64 4 } }
@type...1.1command_line_arguments.NamedBlock = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -432484711, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C204, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0) }, comdat
@const.128 = private constant [44 x i8] c"**\09command_line_arguments\09parser.NamedBlock\00", align 1
@go..C204 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.128, i32 0, i32 0), i64 43 }
@go..C205 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.96, i32 0, i32 0), i64 5 }
@const.129 = private constant [5 x i8] c"Name\00", align 1
@go..C206 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.129, i32 0, i32 0), i64 4 }
@const.130 = private constant [9 x i8] c"Modifier\00", align 1
@go..C208 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C205, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Block..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C206, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @const.350, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 160 }]
@command_line_arguments.Attribute..d = constant %StructType.0 { %_type.0 { i64 96, i64 88, i32 -1510305332, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Attribute..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Attribute..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ifba, i32 0, i32 0), { i8*, i64 }* @go..C209, %uncommonType.0* @go..C213, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Attribute, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([5 x %structField.0], [5 x %structField.0]* @go..C227, i32 0, i32 0), i64 5, i64 5 } }
@command_line_arguments.command_line_arguments.Attribute..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Attribute..hash to i64) }
@command_line_arguments.command_line_arguments.Attribute..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Attribute..eq to i64) }
@gcbits..ifba = weak constant [2 x i8] c"\A8\04", comdat
@const.131 = private constant [41 x i8] c"\09command_line_arguments\09parser.Attribute\00", align 1
@go..C209 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.131, i32 0, i32 0), i64 40 }
@const.132 = private constant [10 x i8] c"Attribute\00", align 1
@go..C210 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.132, i32 0, i32 0), i64 9 }
@go..C211 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C212 = internal global [1 x %method.0] zeroinitializer
@go..C213 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C210, { i8*, i64 }* @go..C211, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C212, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Attribute = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1604918473, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C214, %uncommonType.0* @go..C220, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Attribute, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i32 0, i32 0) }, comdat
@const.133 = private constant [42 x i8] c"*\09command_line_arguments\09parser.Attribute\00", align 1
@go..C214 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.133, i32 0, i32 0), i64 41 }
@go..C215 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1980627624, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C216, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C217, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C218, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.134 = private constant [94 x i8] c"func(*\09command_line_arguments\09parser.Attribute) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C216 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([94 x i8], [94 x i8]* @const.134, i32 0, i32 0), i64 93 }
@go..C217 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Attribute, i32 0, i32 0)]
@go..C218 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C219 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C215, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Attribute.0*)* @command_line_arguments.Attribute.Pos..stub to i8*) }]
@go..C220 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C219, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Attribute = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -91108199, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C221, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Attribute, i32 0, i32 0) }, comdat
@const.135 = private constant [43 x i8] c"**\09command_line_arguments\09parser.Attribute\00", align 1
@go..C221 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.135, i32 0, i32 0), i64 42 }
@go..C222 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C223 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.129, i32 0, i32 0), i64 4 }
@go..C224 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.85, i32 0, i32 0), i64 5 }
@const.136 = private constant [6 x i8] c"IsRaw\00", align 1
@go..C225 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.136, i32 0, i32 0), i64 5 }
@const.137 = private constant [10 x i8] c"Condition\00", align 1
@go..C227 = internal global [5 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C222, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C223, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C224, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 112 }, %structField.0 { { i8*, i64 }* @go..C225, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 144 }, %structField.0 { { i8*, i64 }* @const.331, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 160 }]
@command_line_arguments.Tag..d = constant %StructType.0 { %_type.0 { i64 96, i64 80, i32 -8803732, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..itaa, i32 0, i32 0), { i8*, i64 }* @go..C228, %uncommonType.0* @go..C232, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([5 x %structField.0], [5 x %structField.0]* @go..C252, i32 0, i32 0), i64 5, i64 5 } }
@gcbits..itaa = weak constant [2 x i8] c"h\02", comdat
@const.138 = private constant [35 x i8] c"\09command_line_arguments\09parser.Tag\00", align 1
@go..C228 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.138, i32 0, i32 0), i64 34 }
@const.139 = private constant [4 x i8] c"Tag\00", align 1
@go..C229 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.139, i32 0, i32 0), i64 3 }
@go..C230 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C231 = internal global [1 x %method.0] zeroinitializer
@go..C232 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C229, { i8*, i64 }* @go..C230, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C231, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Tag = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -140859703, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C233, %uncommonType.0* @go..C244, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Tag, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Tag..d, i32 0, i32 0) }, comdat
@const.140 = private constant [36 x i8] c"*\09command_line_arguments\09parser.Tag\00", align 1
@go..C233 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.140, i32 0, i32 0), i64 35 }
@const.141 = private constant [10 x i8] c"IsRawText\00", align 1
@go..C234 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.141, i32 0, i32 0), i64 9 }
@type..func.8.1command_line_arguments.Tag.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -574407320, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C235, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C236, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C237, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.142 = private constant [47 x i8] c"func(*\09command_line_arguments\09parser.Tag) bool\00", align 1
@go..C235 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.142, i32 0, i32 0), i64 46 }
@go..C236 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i32 0, i32 0)]
@go..C237 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@const.143 = private constant [14 x i8] c"IsSelfClosing\00", align 1
@go..C238 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.143, i32 0, i32 0), i64 13 }
@go..C239 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1950300840, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C240, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C241, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C242, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.144 = private constant [88 x i8] c"func(*\09command_line_arguments\09parser.Tag) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C240 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([88 x i8], [88 x i8]* @const.144, i32 0, i32 0), i64 87 }
@go..C241 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i32 0, i32 0)]
@go..C242 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C243 = internal global [3 x %method.0] [%method.0 { { i8*, i64 }* @go..C234, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Tag.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %Tag.0*)* @command_line_arguments.Tag.IsRawText to i8*) }, %method.0 { { i8*, i64 }* @go..C238, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Tag.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %Tag.0*)* @command_line_arguments.Tag.IsSelfClosing to i8*) }, %method.0 { { i8*, i64 }* @go..C239, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Tag.0*)* @command_line_arguments.Tag.Pos..stub to i8*) }]
@go..C244 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([3 x %method.0], [3 x %method.0]* @go..C243, i32 0, i32 0), i64 3, i64 3 } }
@type...1.1command_line_arguments.Tag = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 2041212057, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C245, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i32 0, i32 0) }, comdat
@const.145 = private constant [37 x i8] c"**\09command_line_arguments\09parser.Tag\00", align 1
@go..C245 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.145, i32 0, i32 0), i64 36 }
@go..C246 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C247 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.96, i32 0, i32 0), i64 5 }
@go..C248 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.129, i32 0, i32 0), i64 4 }
@const.146 = private constant [15 x i8] c"IsInterpolated\00", align 1
@go..C249 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.146, i32 0, i32 0), i64 14 }
@const.147 = private constant [11 x i8] c"Attributes\00", align 1
@go..C250 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.147, i32 0, i32 0), i64 10 }
@type...6.7command_line_arguments.Attribute = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1510305318, i8 23, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C251, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i32 0, i32 0) }, comdat
@const.148 = private constant [43 x i8] c"[]\09command_line_arguments\09parser.Attribute\00", align 1
@go..C251 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.148, i32 0, i32 0), i64 42 }
@go..C252 = internal global [5 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C246, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C247, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C248, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C249, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @go..C250, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i32 0, i32 0), { i8*, i64 }* null, i64 144 }]
@const.149 = private constant [6 x i8] c"style\00", align 1
@const.151 = private constant [7 x i8] c"script\00", align 1
@command_line_arguments.Condition..d = constant %StructType.0 { %_type.0 { i64 72, i64 64, i32 -1135179033, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Condition..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Condition..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ih, i32 0, i32 0), { i8*, i64 }* @go..C253, %uncommonType.0* @go..C257, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Condition, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C270, i32 0, i32 0), i64 4, i64 4 } }
@command_line_arguments.command_line_arguments.Condition..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Condition..hash to i64) }
@command_line_arguments.command_line_arguments.Condition..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Condition..eq to i64) }
@gcbits..ih = weak constant [1 x i8] c"\E8", comdat
@const.153 = private constant [41 x i8] c"\09command_line_arguments\09parser.Condition\00", align 1
@go..C253 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.153, i32 0, i32 0), i64 40 }
@go..C254 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.137, i32 0, i32 0), i64 9 }
@go..C255 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C256 = internal global [1 x %method.0] zeroinitializer
@go..C257 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C254, { i8*, i64 }* @go..C255, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C256, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Condition = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -982995335, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C258, %uncommonType.0* @go..C264, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Condition, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Condition..d, i32 0, i32 0) }, comdat
@const.154 = private constant [42 x i8] c"*\09command_line_arguments\09parser.Condition\00", align 1
@go..C258 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.154, i32 0, i32 0), i64 41 }
@go..C259 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 771764392, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C260, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C261, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C262, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.155 = private constant [94 x i8] c"func(*\09command_line_arguments\09parser.Condition) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C260 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([94 x i8], [94 x i8]* @const.155, i32 0, i32 0), i64 93 }
@go..C261 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Condition, i32 0, i32 0)]
@go..C262 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C263 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C259, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Condition.0*)* @command_line_arguments.Condition.Pos..stub to i8*) }]
@go..C264 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C263, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Condition = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1451943833, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C265, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Condition, i32 0, i32 0) }, comdat
@const.156 = private constant [43 x i8] c"**\09command_line_arguments\09parser.Condition\00", align 1
@go..C265 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.156, i32 0, i32 0), i64 42 }
@go..C266 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@const.157 = private constant [9 x i8] c"Positive\00", align 1
@go..C267 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.157, i32 0, i32 0), i64 8 }
@const.158 = private constant [9 x i8] c"Negative\00", align 1
@go..C268 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.158, i32 0, i32 0), i64 8 }
@const.159 = private constant [11 x i8] c"Expression\00", align 1
@go..C269 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.159, i32 0, i32 0), i64 10 }
@go..C270 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C266, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C267, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C268, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C269, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 112 }]
@command_line_arguments.Each..d = constant %StructType.0 { %_type.0 { i64 96, i64 96, i32 -314986773, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Each..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Each..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..iwca, i32 0, i32 0), { i8*, i64 }* @go..C271, %uncommonType.0* @go..C275, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Each, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([5 x %structField.0], [5 x %structField.0]* @go..C289, i32 0, i32 0), i64 5, i64 5 } }
@command_line_arguments.command_line_arguments.Each..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Each..hash to i64) }
@command_line_arguments.command_line_arguments.Each..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Each..eq to i64) }
@gcbits..iwca = weak constant [2 x i8] c"\A8\0A", comdat
@const.160 = private constant [36 x i8] c"\09command_line_arguments\09parser.Each\00", align 1
@go..C271 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.160, i32 0, i32 0), i64 35 }
@const.161 = private constant [5 x i8] c"Each\00", align 1
@go..C272 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.161, i32 0, i32 0), i64 4 }
@go..C273 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C274 = internal global [1 x %method.0] zeroinitializer
@go..C275 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C272, { i8*, i64 }* @go..C273, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C274, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Each = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -744821063, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C276, %uncommonType.0* @go..C282, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Each, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Each..d, i32 0, i32 0) }, comdat
@const.162 = private constant [37 x i8] c"*\09command_line_arguments\09parser.Each\00", align 1
@go..C276 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.162, i32 0, i32 0), i64 36 }
@go..C277 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -196593496, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C278, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C279, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C280, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.163 = private constant [89 x i8] c"func(*\09command_line_arguments\09parser.Each) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C278 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([89 x i8], [89 x i8]* @const.163, i32 0, i32 0), i64 88 }
@go..C279 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Each, i32 0, i32 0)]
@go..C280 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C281 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C277, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Each.0*)* @command_line_arguments.Each.Pos..stub to i8*) }]
@go..C282 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C281, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Each = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 967764889, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C283, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Each, i32 0, i32 0) }, comdat
@const.164 = private constant [38 x i8] c"**\09command_line_arguments\09parser.Each\00", align 1
@go..C283 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.164, i32 0, i32 0), i64 37 }
@go..C284 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@const.165 = private constant [2 x i8] c"X\00", align 1
@const.166 = private constant [2 x i8] c"Y\00", align 1
@go..C287 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.159, i32 0, i32 0), i64 10 }
@go..C288 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.96, i32 0, i32 0), i64 5 }
@go..C289 = internal global [5 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C284, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @const.344, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @const.345, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 112 }, %structField.0 { { i8*, i64 }* @go..C287, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 144 }, %structField.0 { { i8*, i64 }* @go..C288, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), { i8*, i64 }* null, i64 176 }]
@command_line_arguments.Assignment..d = constant %StructType.0 { %_type.0 { i64 72, i64 64, i32 -1180200613, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Assignment..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Assignment..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..if, i32 0, i32 0), { i8*, i64 }* @go..C290, %uncommonType.0* @go..C294, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Assignment, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C306, i32 0, i32 0), i64 3, i64 3 } }
@command_line_arguments.command_line_arguments.Assignment..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Assignment..hash to i64) }
@command_line_arguments.command_line_arguments.Assignment..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Assignment..eq to i64) }
@const.167 = private constant [42 x i8] c"\09command_line_arguments\09parser.Assignment\00", align 1
@go..C290 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.167, i32 0, i32 0), i64 41 }
@const.168 = private constant [11 x i8] c"Assignment\00", align 1
@go..C291 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.168, i32 0, i32 0), i64 10 }
@go..C292 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C293 = internal global [1 x %method.0] zeroinitializer
@go..C294 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C291, { i8*, i64 }* @go..C292, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C293, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Assignment = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1703340615, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C295, %uncommonType.0* @go..C301, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Assignment, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Assignment..d, i32 0, i32 0) }, comdat
@const.169 = private constant [43 x i8] c"*\09command_line_arguments\09parser.Assignment\00", align 1
@go..C295 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.169, i32 0, i32 0), i64 42 }
@go..C296 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -804448088, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C297, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C298, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C299, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.170 = private constant [95 x i8] c"func(*\09command_line_arguments\09parser.Assignment) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C297 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([95 x i8], [95 x i8]* @const.170, i32 0, i32 0), i64 94 }
@go..C298 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Assignment, i32 0, i32 0)]
@go..C299 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C300 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C296, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Assignment.0*)* @command_line_arguments.Assignment.Pos..stub to i8*) }]
@go..C301 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C300, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Assignment = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1483646055, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C302, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Assignment, i32 0, i32 0) }, comdat
@const.171 = private constant [44 x i8] c"**\09command_line_arguments\09parser.Assignment\00", align 1
@go..C302 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.171, i32 0, i32 0), i64 43 }
@go..C303 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C304 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.165, i32 0, i32 0), i64 1 }
@go..C305 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.159, i32 0, i32 0), i64 10 }
@go..C306 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C303, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C304, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C305, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 112 }]
@command_line_arguments.Mixin..d = constant %StructType.0 { %_type.0 { i64 88, i64 72, i32 -1014616181, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ilaa, i32 0, i32 0), { i8*, i64 }* @go..C307, %uncommonType.0* @go..C311, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Mixin, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C324, i32 0, i32 0), i64 4, i64 4 } }
@gcbits..ilaa = weak constant [2 x i8] c"h\01", comdat
@const.172 = private constant [37 x i8] c"\09command_line_arguments\09parser.Mixin\00", align 1
@go..C307 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.172, i32 0, i32 0), i64 36 }
@const.173 = private constant [6 x i8] c"Mixin\00", align 1
@go..C308 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.173, i32 0, i32 0), i64 5 }
@go..C309 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C310 = internal global [1 x %method.0] zeroinitializer
@go..C311 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C308, { i8*, i64 }* @go..C309, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C310, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Mixin = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 946010297, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C312, %uncommonType.0* @go..C318, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Mixin, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Mixin..d, i32 0, i32 0) }, comdat
@const.174 = private constant [38 x i8] c"*\09command_line_arguments\09parser.Mixin\00", align 1
@go..C312 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.174, i32 0, i32 0), i64 37 }
@go..C313 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1924564824, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C314, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C315, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C316, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.175 = private constant [90 x i8] c"func(*\09command_line_arguments\09parser.Mixin) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C314 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([90 x i8], [90 x i8]* @const.175, i32 0, i32 0), i64 89 }
@go..C315 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Mixin, i32 0, i32 0)]
@go..C316 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C317 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C313, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Mixin.0*)* @command_line_arguments.Mixin.Pos..stub to i8*) }]
@go..C318 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C317, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Mixin = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -2043704423, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C319, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Mixin, i32 0, i32 0) }, comdat
@const.176 = private constant [39 x i8] c"**\09command_line_arguments\09parser.Mixin\00", align 1
@go..C319 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.176, i32 0, i32 0), i64 38 }
@go..C320 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C321 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.96, i32 0, i32 0), i64 5 }
@go..C322 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.129, i32 0, i32 0), i64 4 }
@const.177 = private constant [5 x i8] c"Args\00", align 1
@go..C324 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C320, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C321, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C322, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @const.362, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), { i8*, i64 }* null, i64 128 }]
@const.178 = private constant [4 x i8] c",\5Cs\00", align 1
@command_line_arguments.MixinCall..d = constant %StructType.0 { %_type.0 { i64 80, i64 64, i32 -1087060561, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..if, i32 0, i32 0), { i8*, i64 }* @go..C325, %uncommonType.0* @go..C329, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.MixinCall, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C341, i32 0, i32 0), i64 3, i64 3 } }
@const.180 = private constant [41 x i8] c"\09command_line_arguments\09parser.MixinCall\00", align 1
@go..C325 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.180, i32 0, i32 0), i64 40 }
@const.181 = private constant [10 x i8] c"MixinCall\00", align 1
@go..C326 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.181, i32 0, i32 0), i64 9 }
@go..C327 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C328 = internal global [1 x %method.0] zeroinitializer
@go..C329 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C326, { i8*, i64 }* @go..C327, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C328, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.MixinCall = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -213099783, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C330, %uncommonType.0* @go..C336, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.MixinCall, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.MixinCall..d, i32 0, i32 0) }, comdat
@const.182 = private constant [42 x i8] c"*\09command_line_arguments\09parser.MixinCall\00", align 1
@go..C330 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.182, i32 0, i32 0), i64 41 }
@go..C331 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -361381720, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C332, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C333, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C334, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.183 = private constant [94 x i8] c"func(*\09command_line_arguments\09parser.MixinCall) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C332 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([94 x i8], [94 x i8]* @const.183, i32 0, i32 0), i64 93 }
@go..C333 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.MixinCall, i32 0, i32 0)]
@go..C334 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C335 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C331, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %MixinCall.0*)* @command_line_arguments.MixinCall.Pos..stub to i8*) }]
@go..C336 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C335, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.MixinCall = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 885370777, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C337, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.MixinCall, i32 0, i32 0) }, comdat
@const.184 = private constant [43 x i8] c"**\09command_line_arguments\09parser.MixinCall\00", align 1
@go..C337 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.184, i32 0, i32 0), i64 42 }
@go..C338 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.68, i32 0, i32 0), i64 14 }
@go..C339 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.129, i32 0, i32 0), i64 4 }
@go..C340 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.177, i32 0, i32 0), i64 4 }
@go..C341 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C338, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0), { i8*, i64 }* null, i64 1 }, %structField.0 { { i8*, i64 }* @go..C339, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C340, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), { i8*, i64 }* null, i64 112 }]
@const.185 = private constant [8 x i8] c"\22(.*?)\22\00", align 1
@const.187 = private constant [3 x i8] c"%s\00", align 1
@command_line_arguments.Parser..d = constant %StructType.0 { %_type.0 { i64 72, i64 72, i32 851093681, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..Cpaa, i32 0, i32 0), { i8*, i64 }* @go..C342, %uncommonType.0* @go..C346, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([7 x %structField.0], [7 x %structField.0]* @go..C634, i32 0, i32 0), i64 7, i64 7 } }
@gcbits..Cpaa = weak constant [2 x i8] c"\FB\01", comdat
@const.189 = private constant [38 x i8] c"\09command_line_arguments\09parser.Parser\00", align 1
@go..C342 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.189, i32 0, i32 0), i64 37 }
@const.190 = private constant [7 x i8] c"Parser\00", align 1
@go..C343 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.190, i32 0, i32 0), i64 6 }
@go..C344 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C345 = internal global [1 x %method.0] zeroinitializer
@go..C346 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C343, { i8*, i64 }* @go..C344, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C345, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Parser = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 732597017, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C347, %uncommonType.0* @go..C508, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Parser, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Parser..d, i32 0, i32 0) }, comdat
@const.191 = private constant [39 x i8] c"*\09command_line_arguments\09parser.Parser\00", align 1
@go..C347 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.191, i32 0, i32 0), i64 38 }
@const.192 = private constant [6 x i8] c"Parse\00", align 1
@go..C348 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.192, i32 0, i32 0), i64 5 }
@type..func.8.9.8.1command_line_arguments.Block.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1509323192, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C349, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C350, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C351, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.193 = private constant [45 x i8] c"func() *\09command_line_arguments\09parser.Block\00", align 1
@go..C349 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.193, i32 0, i32 0), i64 44 }
@go..C350 = internal global [1 x %_type.0*] zeroinitializer
@go..C351 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 458944872, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C352, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C353, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C354, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.194 = private constant [83 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Block\00", align 1
@go..C352 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([83 x i8], [83 x i8]* @const.194, i32 0, i32 0), i64 82 }
@go..C353 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C354 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0)]
@const.195 = private constant [12 x i8] c"SetFilename\00", align 1
@go..C355 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.195, i32 0, i32 0), i64 11 }
@type..func.8string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 458019656, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C356, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C357, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C358, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.196 = private constant [13 x i8] c"func(string)\00", align 1
@go..C356 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.196, i32 0, i32 0), i64 12 }
@go..C357 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C358 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Parser.3string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1410659928, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C359, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C360, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C361, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.197 = private constant [53 x i8] c"func(*\09command_line_arguments\09parser.Parser, string)\00", align 1
@go..C359 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.197, i32 0, i32 0), i64 52 }
@go..C360 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0), %_type.0* @string..d]
@go..C361 = internal global [1 x %_type.0*] zeroinitializer
@const.198 = private constant [21 x i8] c"SetVirtualFilesystem\00", align 1
@go..C362 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.198, i32 0, i32 0), i64 20 }
@type..func.8net_http.FileSystem.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 491265032, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C363, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C364, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C365, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.199 = private constant [32 x i8] c"func(\09net_http\09http.FileSystem)\00", align 1
@go..C363 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @const.199, i32 0, i32 0), i64 31 }
@net_http.FileSystem..d = external constant %InterfaceType.0
@go..C364 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net_http.FileSystem..d, i32 0, i32 0)]
@go..C365 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1344169176, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C366, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C367, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C368, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.200 = private constant [72 x i8] c"func(*\09command_line_arguments\09parser.Parser, \09net_http\09http.FileSystem)\00", align 1
@go..C366 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([72 x i8], [72 x i8]* @const.200, i32 0, i32 0), i64 71 }
@go..C367 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net_http.FileSystem..d, i32 0, i32 0)]
@go..C368 = internal global [1 x %_type.0*] zeroinitializer
@const.201 = private constant [8 x i8] c"advance\00", align 1
@go..C369 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.201, i32 0, i32 0), i64 7 }
@go..C370 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 8, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C371, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C372, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C373, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.202 = private constant [7 x i8] c"func()\00", align 1
@go..C371 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.202, i32 0, i32 0), i64 6 }
@go..C372 = internal global [1 x %_type.0*] zeroinitializer
@go..C373 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Parser.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1968268072, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C374, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C375, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C376, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.203 = private constant [45 x i8] c"func(*\09command_line_arguments\09parser.Parser)\00", align 1
@go..C374 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.203, i32 0, i32 0), i64 44 }
@go..C375 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C376 = internal global [1 x %_type.0*] zeroinitializer
@const.204 = private constant [7 x i8] c"expect\00", align 1
@go..C377 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.204, i32 0, i32 0), i64 6 }
@go..C378 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8int32.9.8.1command_line_arguments.token.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1111258136, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C379, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C385, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C396, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.205 = private constant [50 x i8] c"func(int32) *\09command_line_arguments\09parser.token\00", align 1
@go..C379 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([50 x i8], [50 x i8]* @const.205, i32 0, i32 0), i64 49 }
@int32..d = weak constant %_type.0 { i64 4, i64 0, i32 -1157242003, i8 -123, i8 4, i8 4, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash32..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal32..f to %__go_descriptor.2*), i8* null, { i8*, i64 }* @go..C380, %uncommonType.0* @go..C383, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int32, i32 0, i32 0) }, comdat
@const.206 = private constant [6 x i8] c"int32\00", align 1
@go..C380 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.206, i32 0, i32 0), i64 5 }
@go..C381 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.206, i32 0, i32 0), i64 5 }
@go..C382 = internal global [1 x %method.0] zeroinitializer
@go..C383 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C381, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C382, i32 0, i32 0), i64 0, i64 0 } }
@type...1int32 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1336002855, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C384, %uncommonType.0* null, %_type.0* null }, %_type.0* @int32..d }, comdat
@const.207 = private constant [7 x i8] c"*int32\00", align 1
@go..C384 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.207, i32 0, i32 0), i64 6 }
@go..C385 = internal global [1 x %_type.0*] [%_type.0* @int32..d]
@type...1command_line_arguments.token = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1250681735, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C386, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i32 0, i32 0) }, comdat
@const.208 = private constant [38 x i8] c"*\09command_line_arguments\09parser.token\00", align 1
@go..C386 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.208, i32 0, i32 0), i64 37 }
@command_line_arguments..command_line_arguments.token..d = constant %StructType.0 { %_type.0 { i64 32, i64 32, i32 1800880583, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ka, i32 0, i32 0), { i8*, i64 }* @go..C387, %uncommonType.0* @go..C391, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.token, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C395, i32 0, i32 0), i64 3, i64 3 } }
@gcbits..ka = weak constant [1 x i8] c"\0A", comdat
@const.209 = private constant [37 x i8] c"\09command_line_arguments\09parser.token\00", align 1
@go..C387 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.209, i32 0, i32 0), i64 36 }
@const.210 = private constant [6 x i8] c"token\00", align 1
@go..C388 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.210, i32 0, i32 0), i64 5 }
@go..C389 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C390 = internal global [1 x %method.0] zeroinitializer
@go..C391 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C388, { i8*, i64 }* @go..C389, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C390, i32 0, i32 0), i64 0, i64 0 } }
@const.211 = private constant [5 x i8] c"Kind\00", align 1
@go..C392 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.211, i32 0, i32 0), i64 4 }
@go..C393 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.85, i32 0, i32 0), i64 5 }
@const.212 = private constant [5 x i8] c"Data\00", align 1
@go..C394 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.212, i32 0, i32 0), i64 4 }
@go..C395 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C392, { i8*, i64 }* null, %_type.0* @int32..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C393, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C394, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@go..C396 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.token, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1814995800, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C397, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C398, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C399, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.213 = private constant [90 x i8] c"func(*\09command_line_arguments\09parser.Parser, int32) *\09command_line_arguments\09parser.token\00", align 1
@go..C397 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([90 x i8], [90 x i8]* @const.213, i32 0, i32 0), i64 89 }
@go..C398 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0), %_type.0* @int32..d]
@go..C399 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.token, i32 0, i32 0)]
@const.214 = private constant [6 x i8] c"parse\00", align 1
@go..C400 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.214, i32 0, i32 0), i64 5 }
@go..C401 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8command_line_arguments.Node.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -14182904, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C402, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C403, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C404, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.215 = private constant [43 x i8] c"func() \09command_line_arguments\09parser.Node\00", align 1
@go..C402 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.215, i32 0, i32 0), i64 42 }
@go..C403 = internal global [1 x %_type.0*] zeroinitializer
@go..C404 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1954085160, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C405, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C406, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C407, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.216 = private constant [81 x i8] c"func(*\09command_line_arguments\09parser.Parser) \09command_line_arguments\09parser.Node\00", align 1
@go..C405 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([81 x i8], [81 x i8]* @const.216, i32 0, i32 0), i64 80 }
@go..C406 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C407 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0)]
@const.217 = private constant [16 x i8] c"parseAssignment\00", align 1
@go..C408 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.217, i32 0, i32 0), i64 15 }
@go..C409 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Assignment.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1639616952, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C410, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C411, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C412, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.218 = private constant [50 x i8] c"func() *\09command_line_arguments\09parser.Assignment\00", align 1
@go..C410 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([50 x i8], [50 x i8]* @const.218, i32 0, i32 0), i64 49 }
@go..C411 = internal global [1 x %_type.0*] zeroinitializer
@go..C412 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Assignment, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 328651112, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C413, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C414, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C415, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.219 = private constant [88 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Assignment\00", align 1
@go..C413 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([88 x i8], [88 x i8]* @const.219, i32 0, i32 0), i64 87 }
@go..C414 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C415 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Assignment, i32 0, i32 0)]
@const.220 = private constant [11 x i8] c"parseBlock\00", align 1
@go..C416 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.220, i32 0, i32 0), i64 10 }
@go..C417 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1516414648, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C418, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C419, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C420, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.221 = private constant [80 x i8] c"func(\09command_line_arguments\09parser.Node) *\09command_line_arguments\09parser.Block\00", align 1
@go..C418 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([80 x i8], [80 x i8]* @const.221, i32 0, i32 0), i64 79 }
@go..C419 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0)]
@go..C420 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 444761960, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C421, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C422, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C423, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.222 = private constant [120 x i8] c"func(*\09command_line_arguments\09parser.Parser, \09command_line_arguments\09parser.Node) *\09command_line_arguments\09parser.Block\00", align 1
@go..C421 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([120 x i8], [120 x i8]* @const.222, i32 0, i32 0), i64 119 }
@go..C422 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i32 0, i32 0)]
@go..C423 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0)]
@const.223 = private constant [13 x i8] c"parseComment\00", align 1
@go..C424 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.223, i32 0, i32 0), i64 12 }
@go..C425 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Comment.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1141890632, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C426, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C427, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C428, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.224 = private constant [47 x i8] c"func() *\09command_line_arguments\09parser.Comment\00", align 1
@go..C426 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.224, i32 0, i32 0), i64 46 }
@go..C427 = internal global [1 x %_type.0*] zeroinitializer
@go..C428 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Comment, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1184808600, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C429, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C430, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C431, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.225 = private constant [85 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Comment\00", align 1
@go..C429 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([85 x i8], [85 x i8]* @const.225, i32 0, i32 0), i64 84 }
@go..C430 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C431 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Comment, i32 0, i32 0)]
@const.226 = private constant [13 x i8] c"parseDoctype\00", align 1
@go..C432 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.226, i32 0, i32 0), i64 12 }
@go..C433 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Doctype.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1733924280, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C434, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C435, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C436, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.227 = private constant [47 x i8] c"func() *\09command_line_arguments\09parser.Doctype\00", align 1
@go..C434 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.227, i32 0, i32 0), i64 46 }
@go..C435 = internal global [1 x %_type.0*] zeroinitializer
@go..C436 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Doctype, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 234343784, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C437, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C438, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C439, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.228 = private constant [85 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Doctype\00", align 1
@go..C437 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([85 x i8], [85 x i8]* @const.228, i32 0, i32 0), i64 84 }
@go..C438 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C439 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Doctype, i32 0, i32 0)]
@const.229 = private constant [10 x i8] c"parseEach\00", align 1
@go..C440 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.229, i32 0, i32 0), i64 9 }
@go..C441 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Each.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -423907768, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C442, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C443, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C444, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.230 = private constant [44 x i8] c"func() *\09command_line_arguments\09parser.Each\00", align 1
@go..C442 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.230, i32 0, i32 0), i64 43 }
@go..C443 = internal global [1 x %_type.0*] zeroinitializer
@go..C444 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Each, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1544360296, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C445, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C446, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C447, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.231 = private constant [82 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Each\00", align 1
@go..C445 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([82 x i8], [82 x i8]* @const.231, i32 0, i32 0), i64 81 }
@go..C446 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C447 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Each, i32 0, i32 0)]
@const.232 = private constant [13 x i8] c"parseExtends\00", align 1
@go..C448 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.232, i32 0, i32 0), i64 12 }
@go..C449 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.233 = private constant [8 x i8] c"parseIf\00", align 1
@go..C450 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.233, i32 0, i32 0), i64 7 }
@go..C451 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Condition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1512808008, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C452, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C453, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C454, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.234 = private constant [49 x i8] c"func() *\09command_line_arguments\09parser.Condition\00", align 1
@go..C452 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @const.234, i32 0, i32 0), i64 48 }
@go..C453 = internal global [1 x %_type.0*] zeroinitializer
@go..C454 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Condition, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -813891224, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C455, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C456, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C457, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.235 = private constant [87 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Condition\00", align 1
@go..C455 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([87 x i8], [87 x i8]* @const.235, i32 0, i32 0), i64 86 }
@go..C456 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C457 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Condition, i32 0, i32 0)]
@const.236 = private constant [12 x i8] c"parseImport\00", align 1
@go..C458 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.236, i32 0, i32 0), i64 11 }
@go..C459 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.237 = private constant [11 x i8] c"parseMixin\00", align 1
@go..C460 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.237, i32 0, i32 0), i64 10 }
@go..C461 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Mixin.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 415116872, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C462, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C463, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C464, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.238 = private constant [45 x i8] c"func() *\09command_line_arguments\09parser.Mixin\00", align 1
@go..C462 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.238, i32 0, i32 0), i64 44 }
@go..C463 = internal global [1 x %_type.0*] zeroinitializer
@go..C464 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Mixin, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1911582360, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C465, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C466, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C467, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.239 = private constant [83 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Mixin\00", align 1
@go..C465 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([83 x i8], [83 x i8]* @const.239, i32 0, i32 0), i64 82 }
@go..C466 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C467 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Mixin, i32 0, i32 0)]
@const.240 = private constant [15 x i8] c"parseMixinCall\00", align 1
@go..C468 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.240, i32 0, i32 0), i64 14 }
@go..C469 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.MixinCall.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -753484216, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C470, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C471, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C472, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.241 = private constant [49 x i8] c"func() *\09command_line_arguments\09parser.MixinCall\00", align 1
@go..C470 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @const.241, i32 0, i32 0), i64 48 }
@go..C471 = internal global [1 x %_type.0*] zeroinitializer
@go..C472 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.MixinCall, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1214783848, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C473, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C474, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C475, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.242 = private constant [87 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.MixinCall\00", align 1
@go..C473 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([87 x i8], [87 x i8]* @const.242, i32 0, i32 0), i64 86 }
@go..C474 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C475 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.MixinCall, i32 0, i32 0)]
@const.243 = private constant [16 x i8] c"parseNamedBlock\00", align 1
@go..C476 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.243, i32 0, i32 0), i64 15 }
@go..C477 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.244 = private constant [18 x i8] c"parseRelativeFile\00", align 1
@go..C478 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.244, i32 0, i32 0), i64 17 }
@go..C479 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8string.9.8.1command_line_arguments.Parser.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 99588488, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C480, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C481, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C482, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.245 = private constant [52 x i8] c"func(string) *\09command_line_arguments\09parser.Parser\00", align 1
@go..C480 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @const.245, i32 0, i32 0), i64 51 }
@go..C481 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C482 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1769091096, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C483, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C484, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C485, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.246 = private constant [92 x i8] c"func(*\09command_line_arguments\09parser.Parser, string) *\09command_line_arguments\09parser.Parser\00", align 1
@go..C483 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([92 x i8], [92 x i8]* @const.246, i32 0, i32 0), i64 91 }
@go..C484 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0), %_type.0* @string..d]
@go..C485 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@const.247 = private constant [9 x i8] c"parseTag\00", align 1
@go..C486 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.247, i32 0, i32 0), i64 8 }
@go..C487 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Tag.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -425086392, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C488, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C489, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C490, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.248 = private constant [43 x i8] c"func() *\09command_line_arguments\09parser.Tag\00", align 1
@go..C488 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.248, i32 0, i32 0), i64 42 }
@go..C489 = internal global [1 x %_type.0*] zeroinitializer
@go..C490 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1543181672, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C491, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C492, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C493, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.249 = private constant [81 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Tag\00", align 1
@go..C491 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([81 x i8], [81 x i8]* @const.249, i32 0, i32 0), i64 80 }
@go..C492 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C493 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i32 0, i32 0)]
@const.250 = private constant [10 x i8] c"parseText\00", align 1
@go..C494 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.250, i32 0, i32 0), i64 9 }
@go..C495 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.9.8.1command_line_arguments.Text.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1423964600, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C496, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C497, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C498, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.251 = private constant [44 x i8] c"func() *\09command_line_arguments\09parser.Text\00", align 1
@go..C496 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.251, i32 0, i32 0), i64 43 }
@go..C497 = internal global [1 x %_type.0*] zeroinitializer
@go..C498 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Text, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 544303464, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C499, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C500, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C501, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.252 = private constant [82 x i8] c"func(*\09command_line_arguments\09parser.Parser) *\09command_line_arguments\09parser.Text\00", align 1
@go..C499 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([82 x i8], [82 x i8]* @const.252, i32 0, i32 0), i64 81 }
@go..C500 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C501 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Text, i32 0, i32 0)]
@const.253 = private constant [4 x i8] c"pos\00", align 1
@go..C502 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.253, i32 0, i32 0), i64 3 }
@go..C503 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -163855192, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C504, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C505, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C506, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.254 = private constant [91 x i8] c"func(*\09command_line_arguments\09parser.Parser) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C504 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([91 x i8], [91 x i8]* @const.254, i32 0, i32 0), i64 90 }
@go..C505 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0)]
@go..C506 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@go..C507 = internal global [21 x %method.0] [%method.0 { { i8*, i64 }* @go..C348, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Block.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9, i32 0, i32 0), i8* bitcast (%Block.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.Parse to i8*) }, %method.0 { { i8*, i64 }* @go..C355, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.3string.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Parser.0*, i64, i64)* @command_line_arguments.Parser.SetFilename to i8*) }, %method.0 { { i8*, i64 }* @go..C362, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8net_http.FileSystem.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Parser.0*, i64, i64)* @command_line_arguments.Parser.SetVirtualFilesystem to i8*) }, %method.0 { { i8*, i64 }* @go..C369, { i8*, i64 }* @go..C370, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Parser.0*)* @command_line_arguments.Parser.advance to i8*) }, %method.0 { { i8*, i64 }* @go..C377, { i8*, i64 }* @go..C378, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8int32.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %Parser.0*, i32)* @command_line_arguments.Parser.expect to i8*) }, %method.0 { { i8*, i64 }* @go..C400, { i8*, i64 }* @go..C401, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.Node.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Parser.0*)* @command_line_arguments.Parser.parse to i8*) }, %method.0 { { i8*, i64 }* @go..C408, { i8*, i64 }* @go..C409, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Assignment.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9, i32 0, i32 0), i8* bitcast (%Assignment.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseAssignment to i8*) }, %method.0 { { i8*, i64 }* @go..C416, { i8*, i64 }* @go..C417, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9, i32 0, i32 0), i8* bitcast (%Block.0* (i8*, %Parser.0*, i64, i64)* @command_line_arguments.Parser.parseBlock to i8*) }, %method.0 { { i8*, i64 }* @go..C424, { i8*, i64 }* @go..C425, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Comment.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9, i32 0, i32 0), i8* bitcast (%Comment.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseComment to i8*) }, %method.0 { { i8*, i64 }* @go..C432, { i8*, i64 }* @go..C433, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Doctype.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9, i32 0, i32 0), i8* bitcast (%Doctype.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseDoctype to i8*) }, %method.0 { { i8*, i64 }* @go..C440, { i8*, i64 }* @go..C441, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Each.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9, i32 0, i32 0), i8* bitcast (%Each.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseEach to i8*) }, %method.0 { { i8*, i64 }* @go..C448, { i8*, i64 }* @go..C449, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Block.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9, i32 0, i32 0), i8* bitcast (%Block.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseExtends to i8*) }, %method.0 { { i8*, i64 }* @go..C450, { i8*, i64 }* @go..C451, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Condition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9, i32 0, i32 0), i8* bitcast (%Condition.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseIf to i8*) }, %method.0 { { i8*, i64 }* @go..C458, { i8*, i64 }* @go..C459, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Block.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9, i32 0, i32 0), i8* bitcast (%Block.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseImport to i8*) }, %method.0 { { i8*, i64 }* @go..C460, { i8*, i64 }* @go..C461, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Mixin.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9, i32 0, i32 0), i8* bitcast (%Mixin.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseMixin to i8*) }, %method.0 { { i8*, i64 }* @go..C468, { i8*, i64 }* @go..C469, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.MixinCall.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9, i32 0, i32 0), i8* bitcast (%MixinCall.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseMixinCall to i8*) }, %method.0 { { i8*, i64 }* @go..C476, { i8*, i64 }* @go..C477, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Block.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9, i32 0, i32 0), i8* bitcast (%Block.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseNamedBlock to i8*) }, %method.0 { { i8*, i64 }* @go..C478, { i8*, i64 }* @go..C479, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.9.8.1command_line_arguments.Parser.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9, i32 0, i32 0), i8* bitcast (%Parser.0* (i8*, %Parser.0*, i64, i64)* @command_line_arguments.Parser.parseRelativeFile to i8*) }, %method.0 { { i8*, i64 }* @go..C486, { i8*, i64 }* @go..C487, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Tag.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9, i32 0, i32 0), i8* bitcast (%Tag.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseTag to i8*) }, %method.0 { { i8*, i64 }* @go..C494, { i8*, i64 }* @go..C495, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.Text.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9, i32 0, i32 0), i8* bitcast (%Text.0* (i8*, %Parser.0*)* @command_line_arguments.Parser.parseText to i8*) }, %method.0 { { i8*, i64 }* @go..C502, { i8*, i64 }* @go..C503, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %Parser.0*)* @command_line_arguments.Parser.pos to i8*) }]
@go..C508 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([21 x %method.0], [21 x %method.0]* @go..C507, i32 0, i32 0), i64 21, i64 21 } }
@type...1.1command_line_arguments.Parser = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1163349607, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C509, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0) }, comdat
@const.255 = private constant [40 x i8] c"**\09command_line_arguments\09parser.Parser\00", align 1
@go..C509 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.255, i32 0, i32 0), i64 39 }
@const.256 = private constant [8 x i8] c"scanner\00", align 1
@go..C510 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.256, i32 0, i32 0), i64 7 }
@go..C511 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type...1command_line_arguments.scanner = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1832869335, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C512, %uncommonType.0* @go..C571, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.scanner, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.scanner..d, i32 0, i32 0) }, comdat
@const.257 = private constant [40 x i8] c"*\09command_line_arguments\09parser.scanner\00", align 1
@go..C512 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.257, i32 0, i32 0), i64 39 }
@const.258 = private constant [5 x i8] c"Next\00", align 1
@go..C513 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.258, i32 0, i32 0), i64 4 }
@type..func.8.9.8.1command_line_arguments.token.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1560747592, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C514, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C515, i32 0, i32 0), i64 0, i64 0 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C516, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.259 = private constant [45 x i8] c"func() *\09command_line_arguments\09parser.token\00", align 1
@go..C514 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.259, i32 0, i32 0), i64 44 }
@go..C515 = internal global [1 x %_type.0*] zeroinitializer
@go..C516 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.token, i32 0, i32 0)]
@type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1256496280, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C517, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C518, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C519, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.260 = private constant [84 x i8] c"func(*\09command_line_arguments\09parser.scanner) *\09command_line_arguments\09parser.token\00", align 1
@go..C517 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([84 x i8], [84 x i8]* @const.260, i32 0, i32 0), i64 83 }
@go..C518 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.scanner, i32 0, i32 0)]
@go..C519 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.token, i32 0, i32 0)]
@const.261 = private constant [8 x i8] c"NextRaw\00", align 1
@go..C520 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.261, i32 0, i32 0), i64 7 }
@go..C521 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.65, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -654399832, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C522, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C523, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C524, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.262 = private constant [92 x i8] c"func(*\09command_line_arguments\09parser.scanner) \09command_line_arguments\09parser.SourcePosition\00", align 1
@go..C522 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([92 x i8], [92 x i8]* @const.262, i32 0, i32 0), i64 91 }
@go..C523 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.scanner, i32 0, i32 0)]
@go..C524 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i32 0, i32 0)]
@const.263 = private constant [8 x i8] c"consume\00", align 1
@go..C525 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.263, i32 0, i32 0), i64 7 }
@go..C526 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8int.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2010241976, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C527, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C528, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C529, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.264 = private constant [10 x i8] c"func(int)\00", align 1
@go..C527 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.264, i32 0, i32 0), i64 9 }
@go..C528 = internal global [1 x %_type.0*] [%_type.0* @int..d]
@go..C529 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.scanner.3int.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1752206760, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C530, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C531, i32 0, i32 0), i64 2, i64 2 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C532, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.265 = private constant [51 x i8] c"func(*\09command_line_arguments\09parser.scanner, int)\00", align 1
@go..C530 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.265, i32 0, i32 0), i64 50 }
@go..C531 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.scanner, i32 0, i32 0), %_type.0* @int..d]
@go..C532 = internal global [1 x %_type.0*] zeroinitializer
@const.266 = private constant [13 x i8] c"ensureBuffer\00", align 1
@go..C533 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.266, i32 0, i32 0), i64 12 }
@go..C534 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.scanner.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1477723432, i8 19, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C535, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C536, i32 0, i32 0), i64 1, i64 1 }, %IPST.41 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C537, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.267 = private constant [46 x i8] c"func(*\09command_line_arguments\09parser.scanner)\00", align 1
@go..C535 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.267, i32 0, i32 0), i64 45 }
@go..C536 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.scanner, i32 0, i32 0)]
@go..C537 = internal global [1 x %_type.0*] zeroinitializer
@const.268 = private constant [15 x i8] c"scanAssignment\00", align 1
@go..C538 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.268, i32 0, i32 0), i64 14 }
@go..C539 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.269 = private constant [14 x i8] c"scanAttribute\00", align 1
@go..C540 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.269, i32 0, i32 0), i64 13 }
@go..C541 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.270 = private constant [10 x i8] c"scanBlock\00", align 1
@go..C542 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.270, i32 0, i32 0), i64 9 }
@go..C543 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.271 = private constant [14 x i8] c"scanClassName\00", align 1
@go..C544 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.271, i32 0, i32 0), i64 13 }
@go..C545 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.272 = private constant [12 x i8] c"scanComment\00", align 1
@go..C546 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.272, i32 0, i32 0), i64 11 }
@go..C547 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.273 = private constant [14 x i8] c"scanCondition\00", align 1
@go..C548 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.273, i32 0, i32 0), i64 13 }
@go..C549 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.274 = private constant [12 x i8] c"scanDoctype\00", align 1
@go..C550 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.274, i32 0, i32 0), i64 11 }
@go..C551 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.275 = private constant [9 x i8] c"scanEach\00", align 1
@go..C552 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.275, i32 0, i32 0), i64 8 }
@go..C553 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.276 = private constant [12 x i8] c"scanExtends\00", align 1
@go..C554 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.276, i32 0, i32 0), i64 11 }
@go..C555 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.277 = private constant [7 x i8] c"scanId\00", align 1
@go..C556 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.277, i32 0, i32 0), i64 6 }
@go..C557 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.278 = private constant [11 x i8] c"scanImport\00", align 1
@go..C558 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.278, i32 0, i32 0), i64 10 }
@go..C559 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.279 = private constant [11 x i8] c"scanIndent\00", align 1
@go..C560 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.279, i32 0, i32 0), i64 10 }
@go..C561 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.280 = private constant [10 x i8] c"scanMixin\00", align 1
@go..C562 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.280, i32 0, i32 0), i64 9 }
@go..C563 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.281 = private constant [14 x i8] c"scanMixinCall\00", align 1
@go..C564 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.281, i32 0, i32 0), i64 13 }
@go..C565 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.282 = private constant [8 x i8] c"scanTag\00", align 1
@go..C566 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.282, i32 0, i32 0), i64 7 }
@go..C567 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.283 = private constant [9 x i8] c"scanText\00", align 1
@go..C568 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.283, i32 0, i32 0), i64 8 }
@go..C569 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C570 = internal global [21 x %method.0] [%method.0 { { i8*, i64 }* @go..C513, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.Next to i8*) }, %method.0 { { i8*, i64 }* @go..C520, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.NextRaw to i8*) }, %method.0 { { i8*, i64 }* @go..C521, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9, i32 0, i32 0), i8* bitcast (void (%SourcePosition.0*, i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.Pos to i8*) }, %method.0 { { i8*, i64 }* @go..C525, { i8*, i64 }* @go..C526, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8int.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.3int.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %.command-line-arguments.scanner.0*, i64)* @command_line_arguments.scanner.consume to i8*) }, %method.0 { { i8*, i64 }* @go..C533, { i8*, i64 }* @go..C534, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.ensureBuffer to i8*) }, %method.0 { { i8*, i64 }* @go..C538, { i8*, i64 }* @go..C539, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanAssignment to i8*) }, %method.0 { { i8*, i64 }* @go..C540, { i8*, i64 }* @go..C541, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanAttribute to i8*) }, %method.0 { { i8*, i64 }* @go..C542, { i8*, i64 }* @go..C543, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanBlock to i8*) }, %method.0 { { i8*, i64 }* @go..C544, { i8*, i64 }* @go..C545, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanClassName to i8*) }, %method.0 { { i8*, i64 }* @go..C546, { i8*, i64 }* @go..C547, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanComment to i8*) }, %method.0 { { i8*, i64 }* @go..C548, { i8*, i64 }* @go..C549, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanCondition to i8*) }, %method.0 { { i8*, i64 }* @go..C550, { i8*, i64 }* @go..C551, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanDoctype to i8*) }, %method.0 { { i8*, i64 }* @go..C552, { i8*, i64 }* @go..C553, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanEach to i8*) }, %method.0 { { i8*, i64 }* @go..C554, { i8*, i64 }* @go..C555, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanExtends to i8*) }, %method.0 { { i8*, i64 }* @go..C556, { i8*, i64 }* @go..C557, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanId to i8*) }, %method.0 { { i8*, i64 }* @go..C558, { i8*, i64 }* @go..C559, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanImport to i8*) }, %method.0 { { i8*, i64 }* @go..C560, { i8*, i64 }* @go..C561, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanIndent to i8*) }, %method.0 { { i8*, i64 }* @go..C562, { i8*, i64 }* @go..C563, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanMixin to i8*) }, %method.0 { { i8*, i64 }* @go..C564, { i8*, i64 }* @go..C565, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanMixinCall to i8*) }, %method.0 { { i8*, i64 }* @go..C566, { i8*, i64 }* @go..C567, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanTag to i8*) }, %method.0 { { i8*, i64 }* @go..C568, { i8*, i64 }* @go..C569, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.1command_line_arguments.token.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, i32 0, i32 0), i8* bitcast (%.command-line-arguments.token.0* (i8*, %.command-line-arguments.scanner.0*)* @command_line_arguments.scanner.scanText to i8*) }]
@go..C571 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.40 { %method.0* getelementptr inbounds ([21 x %method.0], [21 x %method.0]* @go..C570, i32 0, i32 0), i64 21, i64 21 } }
@type...1.1command_line_arguments.scanner = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 738861721, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C572, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.scanner, i32 0, i32 0) }, comdat
@const.284 = private constant [41 x i8] c"**\09command_line_arguments\09parser.scanner\00", align 1
@go..C572 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.284, i32 0, i32 0), i64 40 }
@command_line_arguments..command_line_arguments.scanner..d = constant %StructType.0 { %_type.0 { i64 96, i64 40, i32 -919860702, i8 25, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.scanner..hash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.scanner..eq..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ya, i32 0, i32 0), { i8*, i64 }* @go..C573, %uncommonType.0* @go..C577, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.scanner, i32 0, i32 0) }, %IPST.42 { %structField.0* getelementptr inbounds ([11 x %structField.0], [11 x %structField.0]* @go..C600, i32 0, i32 0), i64 11, i64 11 } }
@command_line_arguments.command_line_arguments.scanner..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.scanner..hash to i64) }
@command_line_arguments.command_line_arguments.scanner..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.scanner..eq to i64) }
@gcbits..ya = weak constant [1 x i8] c"\17", comdat
@const.285 = private constant [39 x i8] c"\09command_line_arguments\09parser.scanner\00", align 1
@go..C573 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.285, i32 0, i32 0), i64 38 }
@go..C574 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.256, i32 0, i32 0), i64 7 }
@go..C575 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C576 = internal global [1 x %method.0] zeroinitializer
@go..C577 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C574, { i8*, i64 }* @go..C575, %IPST.40 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C576, i32 0, i32 0), i64 0, i64 0 } }
@const.286 = private constant [7 x i8] c"reader\00", align 1
@go..C578 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.286, i32 0, i32 0), i64 6 }
@go..C579 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type...1bufio.Reader = external constant %PtrType.0
@const.287 = private constant [12 x i8] c"indentStack\00", align 1
@go..C580 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.287, i32 0, i32 0), i64 11 }
@go..C581 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type...1container_list.List = external constant %PtrType.0
@const.288 = private constant [6 x i8] c"stash\00", align 1
@go..C582 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.288, i32 0, i32 0), i64 5 }
@go..C583 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.289 = private constant [6 x i8] c"state\00", align 1
@go..C584 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.289, i32 0, i32 0), i64 5 }
@go..C585 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.290 = private constant [7 x i8] c"buffer\00", align 1
@go..C586 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.290, i32 0, i32 0), i64 6 }
@go..C587 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.291 = private constant [5 x i8] c"line\00", align 1
@go..C588 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.291, i32 0, i32 0), i64 4 }
@go..C589 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C590 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.7, i32 0, i32 0), i64 3 }
@go..C591 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.292 = private constant [14 x i8] c"lastTokenLine\00", align 1
@go..C592 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.292, i32 0, i32 0), i64 13 }
@go..C593 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.293 = private constant [13 x i8] c"lastTokenCol\00", align 1
@go..C594 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.293, i32 0, i32 0), i64 12 }
@go..C595 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.294 = private constant [14 x i8] c"lastTokenSize\00", align 1
@go..C596 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.294, i32 0, i32 0), i64 13 }
@go..C597 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.295 = private constant [8 x i8] c"readRaw\00", align 1
@go..C598 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.295, i32 0, i32 0), i64 7 }
@go..C599 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C600 = internal global [11 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C578, { i8*, i64 }* @go..C579, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bufio.Reader, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C580, { i8*, i64 }* @go..C581, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1container_list.List, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C582, { i8*, i64 }* @go..C583, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1container_list.List, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C584, { i8*, i64 }* @go..C585, %_type.0* @int32..d, { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C586, { i8*, i64 }* @go..C587, %_type.0* @string..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C588, { i8*, i64 }* @go..C589, %_type.0* @int..d, { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C590, { i8*, i64 }* @go..C591, %_type.0* @int..d, { i8*, i64 }* null, i64 112 }, %structField.0 { { i8*, i64 }* @go..C592, { i8*, i64 }* @go..C593, %_type.0* @int..d, { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @go..C594, { i8*, i64 }* @go..C595, %_type.0* @int..d, { i8*, i64 }* null, i64 144 }, %structField.0 { { i8*, i64 }* @go..C596, { i8*, i64 }* @go..C597, %_type.0* @int..d, { i8*, i64 }* null, i64 160 }, %structField.0 { { i8*, i64 }* @go..C598, { i8*, i64 }* @go..C599, %_type.0* @bool..d, { i8*, i64 }* null, i64 176 }]
@const.296 = private constant [9 x i8] c"filename\00", align 1
@go..C601 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.296, i32 0, i32 0), i64 8 }
@go..C602 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.297 = private constant [3 x i8] c"fs\00", align 1
@go..C603 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.297, i32 0, i32 0), i64 2 }
@go..C604 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.298 = private constant [13 x i8] c"currenttoken\00", align 1
@go..C605 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.298, i32 0, i32 0), i64 12 }
@go..C606 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.299 = private constant [12 x i8] c"namedBlocks\00", align 1
@go..C607 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.299, i32 0, i32 0), i64 11 }
@go..C608 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@type..map.6string.7.1command_line_arguments.NamedBlock = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 2000548755, i8 21, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C609, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.300 = private constant [54 x i8] c"map[string]*\09command_line_arguments\09parser.NamedBlock\00", align 1
@go..C609 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([54 x i8], [54 x i8]* @const.300, i32 0, i32 0), i64 53 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 -435759228, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C610, %uncommonType.0* null, %_type.0* null }, %IPST.42 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C617, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkEGba = weak constant [4 x i8] c"\AA\AA\FE\03", comdat
@const.301 = private constant [110 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09parser.NamedBlock; overflow * }\00", align 1
@go..C610 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.301, i32 0, i32 0), i64 109 }
@go..C611 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.32, i32 0, i32 0), i64 7 }
@go..C612 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.37, i32 0, i32 0), i64 4 }
@go..C613 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.40, i32 0, i32 0), i64 6 }
@type...68x.7.1command_line_arguments.NamedBlock = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 -590931487, i8 17, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C614, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.NamedBlock, i32 0, i32 0), i64 8 }, comdat
@gcbits..Gh = weak constant [1 x i8] c"\FF", comdat
@const.302 = private constant [46 x i8] c"[8]*\09command_line_arguments\09parser.NamedBlock\00", align 1
@go..C614 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.302, i32 0, i32 0), i64 45 }
@type...6.7.1command_line_arguments.NamedBlock = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -295465737, i8 23, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C615, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.NamedBlock, i32 0, i32 0) }, comdat
@const.303 = private constant [45 x i8] c"[]*\09command_line_arguments\09parser.NamedBlock\00", align 1
@go..C615 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.303, i32 0, i32 0), i64 44 }
@go..C616 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.41, i32 0, i32 0), i64 8 }
@go..C617 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C611, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C612, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C613, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7.1command_line_arguments.NamedBlock, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C616, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 732666340, i8 25, i8 8, i8 8, %__go_descriptor.1* null, %__go_descriptor.2* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C618, %uncommonType.0* null, %_type.0* null }, %IPST.42 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C629, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.304 = private constant [346 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09parser.NamedBlock; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09parser.NamedBlock; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C618 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([346 x i8], [346 x i8]* @const.304, i32 0, i32 0), i64 345 }
@go..C619 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@go..C620 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.46, i32 0, i32 0), i64 5 }
@go..C621 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.47, i32 0, i32 0), i64 1 }
@go..C622 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.48, i32 0, i32 0), i64 9 }
@go..C623 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.51, i32 0, i32 0), i64 5 }
@go..C624 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.54, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1617786953, i8 54, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C625, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.305 = private constant [111 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09parser.NamedBlock; overflow * }\00", align 1
@go..C625 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([111 x i8], [111 x i8]* @const.305, i32 0, i32 0), i64 110 }
@go..C626 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.56, i32 0, i32 0), i64 10 }
@go..C627 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.57, i32 0, i32 0), i64 9 }
@go..C628 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.60, i32 0, i32 0), i64 5 }
@go..C629 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C619, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C620, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C621, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C622, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C623, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C624, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C626, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C627, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C628, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.306 = private constant [7 x i8] c"parent\00", align 1
@go..C630 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.306, i32 0, i32 0), i64 6 }
@go..C631 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@const.307 = private constant [7 x i8] c"result\00", align 1
@go..C632 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.307, i32 0, i32 0), i64 6 }
@go..C633 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.63, i32 0, i32 0), i64 22 }
@go..C634 = internal global [7 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C510, { i8*, i64 }* @go..C511, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.scanner, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C601, { i8*, i64 }* @go..C602, %_type.0* @string..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C603, { i8*, i64 }* @go..C604, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net_http.FileSystem..d, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C605, { i8*, i64 }* @go..C606, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.token, i32 0, i32 0), { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C607, { i8*, i64 }* @go..C608, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i32 0, i32 0), { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C630, { i8*, i64 }* @go..C631, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Parser, i32 0, i32 0), { i8*, i64 }* null, i64 112 }, %structField.0 { { i8*, i64 }* @go..C632, { i8*, i64 }* @go..C633, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), { i8*, i64 }* null, i64 128 }]
@type...1bytes.Reader = external constant %PtrType.0
@pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bytes.Reader, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* @bytes.Reader.Read }, comdat
@command_line_arguments.StringParser..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Parser.0*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.StringParser to i64) }
@command_line_arguments.ByteParser..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Parser.0*, %error.0 }*, i8*, { i8*, i64, i64 }*)* @command_line_arguments.ByteParser to i64) }
@command_line_arguments.FileParser..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Parser.0*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.FileParser to i64) }
@io.Reader..d = external constant %InterfaceType.0
@command_line_arguments.VirtualFileParser..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Parser.0*, %error.0 }*, i8*, i64, i64, i64, i64)* @command_line_arguments.VirtualFileParser to i64) }
@const.314 = private constant [28 x i8] c"Unable to import or extend \00", align 1
@const.315 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @const.314, i32 0, i32 0), i64 27 }
@const.316 = private constant [35 x i8] c" in a non filesystem based parser.\00", align 1
@const.317 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.316, i32 0, i32 0), i64 34 }
@const.318 = private constant [7 x i8] c".amber\00", align 1
@const.319 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.318, i32 0, i32 0), i64 6 }
@const.321 = private constant [16 x i8] c"Unable to read \00", align 1
@const.322 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.321, i32 0, i32 0), i64 15 }
@const.323 = private constant [10 x i8] c", Error: \00", align 1
@const.324 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.323, i32 0, i32 0), i64 9 }
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Doctype, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Doctype.0*)* @command_line_arguments.Doctype.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Comment, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Comment.0*)* @command_line_arguments.Comment.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Text, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Text.0*)* @command_line_arguments.Text.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Condition, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Condition.0*)* @command_line_arguments.Condition.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Each, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Each.0*)* @command_line_arguments.Each.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Block, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Block.0*)* @command_line_arguments.Block.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Tag.0*)* @command_line_arguments.Tag.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Assignment, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Assignment.0*)* @command_line_arguments.Assignment.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Mixin, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %Mixin.0*)* @command_line_arguments.Mixin.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall = weak constant { %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.MixinCall, i32 0, i32 0), void (%SourcePosition.0*, i8*, %SourcePosition.0*)* bitcast (void (%SourcePosition.0*, i8*, %MixinCall.0*)* @command_line_arguments.MixinCall.Pos..stub to void (%SourcePosition.0*, i8*, %SourcePosition.0*)*) }, comdat
@const.325 = private constant [21 x i8] c"Unexpected token: %d\00", align 1
@const.327 = private constant [18 x i8] c"Unexpected token!\00", align 1
@const.328 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.327, i32 0, i32 0), i64 17 }
@const.329 = private constant [44 x i8] c"Unable to extend multiple parent templates.\00", align 1
@const.330 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.329, i32 0, i32 0), i64 43 }
@const.331 = private constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.137, i32 0, i32 0), i64 9 }
@const.332 = private constant [3 x i8] c"id\00", align 1
@const.333 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.332, i32 0, i32 0), i64 2 }
@const.334 = private constant [6 x i8] c"class\00", align 1
@const.335 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.334, i32 0, i32 0), i64 5 }
@const.336 = private constant [8 x i8] c"Content\00", align 1
@const.337 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.336, i32 0, i32 0), i64 7 }
@const.338 = private constant [5 x i8] c"Mode\00", align 1
@const.339 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.338, i32 0, i32 0), i64 4 }
@const.340 = private constant [4 x i8] c"raw\00", align 1
@const.342 = private constant [71 x i8] c"Conditional attributes must be placed immediately within a parent tag.\00", align 1
@const.343 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([71 x i8], [71 x i8]* @const.342, i32 0, i32 0), i64 70 }
@const.344 = private constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.165, i32 0, i32 0), i64 1 }
@const.345 = private constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.166, i32 0, i32 0), i64 1 }
@const.346 = private constant [63 x i8] c"Multiple definitions of named blocks are not permitted. Block \00", align 1
@const.347 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([63 x i8], [63 x i8]* @const.346, i32 0, i32 0), i64 62 }
@const.348 = private constant [22 x i8] c" has been re defined.\00", align 1
@const.349 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @const.348, i32 0, i32 0), i64 21 }
@const.350 = private constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.130, i32 0, i32 0), i64 8 }
@const.351 = private constant [7 x i8] c"append\00", align 1
@const.352 = private constant [8 x i8] c"prepend\00", align 1
@const.355 = private constant [7 x i8] c"silent\00", align 1
@const.356 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.355, i32 0, i32 0), i64 6 }
@const.358 = private constant [63 x i8] c"Conditional attributes must be placed in a block within a tag.\00", align 1
@const.359 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([63 x i8], [63 x i8]* @const.358, i32 0, i32 0), i64 62 }
@const.360 = private constant [6 x i8] c"piped\00", align 1
@const.361 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.360, i32 0, i32 0), i64 5 }
@const.362 = private constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.177, i32 0, i32 0), i64 4 }
@type..interface.4.5 = weak constant %InterfaceType.0 { %_type.0 { i64 16, i64 16, i32 16, i8 20, i8 8, i8 8, %__go_descriptor.1* bitcast (%functionDescriptor.0* @runtime.nilinterhash..f to %__go_descriptor.1*), %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.nilinterequal..f to %__go_descriptor.2*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C635, %uncommonType.0* null, %_type.0* null }, %IPST.43 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C636, i32 0, i32 0), i64 0, i64 0 } }, comdat
@runtime.nilinterhash..f = external constant %functionDescriptor.0
@runtime.nilinterequal..f = external constant %functionDescriptor.0
@const.363 = private constant [13 x i8] c"interface {}\00", align 1
@go..C635 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.363, i32 0, i32 0), i64 12 }
@go..C636 = internal global [1 x %imethod.0] zeroinitializer
@const.364 = private unnamed_addr constant %.command-line-arguments.token.0 { i32 -5, { i8*, i64 } zeroinitializer, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null }
@const.365 = private unnamed_addr constant %.command-line-arguments.token.0 { i32 -1, { i8*, i64 } zeroinitializer, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null }
@const.366 = private unnamed_addr constant [1 x { { i8*, i64 }, { i8*, i64 } }] [{ { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.338, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.340, i32 0, i32 0), i64 3 } }]
@const.367 = private constant [2 x i8] c"\0A\00", align 1
@const.368 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.367, i32 0, i32 0), i64 1 }
@const.369 = private constant [2 x i8] c"\09\00", align 1
@const.370 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.369, i32 0, i32 0), i64 1 }
@command_line_arguments.rgxIndent = internal global %Regexp.0* null
@const.371 = private constant [7 x i8] c"^(\5Cs+)\00", align 1
@const.373 = private unnamed_addr constant %.command-line-arguments.token.0 { i32 -6, { i8*, i64 } zeroinitializer, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null }
@type...1regexp.Regexp = external constant %PtrType.0
@const.374 = private constant [62 x i8] c"Mismatching indentation. Please use a coherent indent schema.\00", align 1
@const.375 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([62 x i8], [62 x i8]* @const.374, i32 0, i32 0), i64 61 }
@command_line_arguments.rgxDoctype = internal global %Regexp.0* null
@const.376 = private constant [22 x i8] c"^(!!!|doctype)\5Cs*(.*)\00", align 1
@const.378 = private constant [5 x i8] c"html\00", align 1
@const.379 = private constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.378, i32 0, i32 0), i64 4 }
@command_line_arguments.rgxIf = internal global %Regexp.0* null
@const.380 = private constant [12 x i8] c"^if\5Cs+(.+)$\00", align 1
@command_line_arguments.rgxElse = internal global %Regexp.0* null
@const.382 = private constant [9 x i8] c"^else\5Cs*\00", align 1
@const.384 = private unnamed_addr constant %.command-line-arguments.token.0 { i32 -13, { i8*, i64 } zeroinitializer, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null }
@command_line_arguments.rgxEach = internal global %Regexp.0* null
@const.385 = private constant [64 x i8] c"^each\5Cs+(\5C$[\5Cw0-9\5C-_]*)(?:\5Cs*,\5Cs*(\5C$[\5Cw0-9\5C-_]*))?\5Cs+in\5Cs+(.+)$\00", align 1
@command_line_arguments.rgxAssignment = internal global %Regexp.0* null
@const.387 = private constant [30 x i8] c"^(\5C$[\5Cw0-9\5C-_]*)?\5Cs*=\5Cs*(.+)$\00", align 1
@command_line_arguments.rgxComment = internal global %Regexp.0* null
@const.389 = private constant [18 x i8] c"^\5C/\5C/(-)?\5Cs*(.*)$\00", align 1
@const.391 = private constant [6 x i8] c"embed\00", align 1
@const.392 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.391, i32 0, i32 0), i64 5 }
@command_line_arguments.rgxId = internal global %Regexp.0* null
@const.393 = private constant [29 x i8] c"^#([\5Cw-]+)(?:\5Cs*\5C?\5Cs*(.*)$)?\00", align 1
@command_line_arguments.rgxClassName = internal global %Regexp.0* null
@const.395 = private constant [30 x i8] c"^\5C.([\5Cw-]+)(?:\5Cs*\5C?\5Cs*(.*)$)?\00", align 1
@command_line_arguments.rgxAttribute = internal global %Regexp.0* null
@const.397 = private constant [74 x i8] c"^\5C[([\5Cw\5C-:@\5C.]+)\5Cs*(?:=\5Cs*(\5C\22([^\5C\22\5C\5C]*)\5C\22|([^\5C]]+)))?\5C](?:\5Cs*\5C?\5Cs*(.*)$)?\00", align 1
@const.399 = private unnamed_addr constant { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.338, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.340, i32 0, i32 0), i64 3 } }
@const.400 = private constant [11 x i8] c"expression\00", align 1
@const.401 = private unnamed_addr constant { { i8*, i64 }, { i8*, i64 } } { { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.338, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.400, i32 0, i32 0), i64 10 } }
@command_line_arguments.rgxImport = internal global %Regexp.0* null
@const.402 = private constant [34 x i8] c"^import\5Cs+([0-9a-zA-Z_\5C-\5C. \5C/]*)$\00", align 1
@command_line_arguments.rgxExtends = internal global %Regexp.0* null
@const.404 = private constant [35 x i8] c"^extends\5Cs+([0-9a-zA-Z_\5C-\5C. \5C/]*)$\00", align 1
@command_line_arguments.rgxBlock = internal global %Regexp.0* null
@const.406 = private constant [57 x i8] c"^block\5Cs+(?:(append|prepend)\5Cs+)?([0-9a-zA-Z_\5C-\5C. \5C/]*)$\00", align 1
@command_line_arguments.rgxTag = internal global %Regexp.0* null
@const.408 = private constant [13 x i8] c"^(\5Cw[-:\5Cw]*)\00", align 1
@command_line_arguments.rgxMixin = internal global %Regexp.0* null
@const.410 = private constant [48 x i8] c"^mixin ([a-zA-Z_-]+\5Cw*)(\5C(((\5C$\5Cw*(,\5Cs)?)*)\5C))?$\00", align 1
@command_line_arguments.rgxMixinCall = internal global %Regexp.0* null
@const.412 = private constant [39 x i8] c"^\5C+([A-Za-z_-]+\5Cw*)(\5C((.+(,\5Cs)?)*\5C))?$\00", align 1
@command_line_arguments.rgxText = internal global %Regexp.0* null
@const.414 = private constant [14 x i8] c"^(\5C|)? ?(.*)$\00", align 1
@const.416 = private constant [7 x i8] c"inline\00", align 1
@const.417 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.416, i32 0, i32 0), i64 6 }
@const.418 = private constant [2 x i8] c"|\00", align 1
@const.420 = private constant [40 x i8] c"Unable to consume %d runes from buffer.\00", align 1
@io.EOF = external local_unnamed_addr externally_initialized global %error.0
@const.424 = private constant [12 x i8] c"Amber Error\00", align 1
@const.426 = private constant [59 x i8] c"Amber Error in <%s>: %v - Line: %d, Column: %d, Length: %d\00", align 1
@const.428 = private constant [51 x i8] c"Amber Error: %v - Line: %d, Column: %d, Length: %d\00", align 1
@gcbits..wkwka = weak constant [3 x i8] c"UU\05", comdat
@gcbits..ppppa = weak constant [3 x i8] c"\EF\BD\07", comdat
@gcbits..pppppppppa = weak constant [6 x i8] c"\EF\BD\F7\DE{\0F", comdat
@gcbits..Ga = weak constant [1 x i8] c"\1F", comdat
@gcbits..ha = weak constant [1 x i8] c"\07", comdat
@gcbits..GGaa = weak constant [2 x i8] c"\FF\03", comdat
@gcbits..ppaa = weak constant [2 x i8] c"\EF\01", comdat
@gcbits..GGGGa = weak constant [3 x i8] c"\FF\FF\0F", comdat
@gcbits..pppa = weak constant [2 x i8] c"\EF=", comdat
@gcbits..ppppp = weak constant [3 x i8] c"\EF\BD\F7", comdat
@gcbits..GGGa = weak constant [2 x i8] c"\FF\7F", comdat
@gcbits..GGGGGGGGGGGGGGGGGGGGGaa = weak constant [14 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\01", comdat
@gcbits..pppppppppppa = weak constant [7 x i8] c"\EF\BD\F7\DE{\EF=", comdat
@gcbits..pppppppa = weak constant [5 x i8] c"\EF\BD\F7\DE\03", comdat
@go..C0 = internal global { i8*, i64, [155 x { i8*, i64, i64, i8* }] } { i8* null, i64 155, [155 x { i8*, i64, i64, i8* }] [{ i8*, i64, i64, i8* } { i8* bitcast ([10 x { i8*, i64 }]* @command_line_arguments.selfClosingTags to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..wkwka, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.doctypes to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxIndent to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxDoctype to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxIf to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxElse to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxEach to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxAssignment to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxComment to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxId to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxClassName to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxAttribute to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxImport to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxExtends to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxBlock to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxTag to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxMixin to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxMixinCall to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.rgxText to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C21 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C53 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C71 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C72 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C73 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C80 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C81 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %imethod.0]* @go..C82 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C91 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C92 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C96 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C98 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C99 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %method.0]* @go..C100 to i8*), i64 80, i64 80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..GGaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C105 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C114 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C115 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C116 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C131 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C133 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C134 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C137 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C138 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C142 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C145 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %method.0]* @go..C149 to i8*), i64 160, i64 160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..GGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C160 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C162 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C171 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C172 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C173 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C179 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C189 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C190 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C193 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C194 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C198 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %method.0]* @go..C202 to i8*), i64 160, i64 160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..GGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C208 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C217 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C218 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C219 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([5 x %structField.0]* @go..C227 to i8*), i64 200, i64 192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppp, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C236 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C237 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C241 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C242 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %method.0]* @go..C243 to i8*), i64 120, i64 120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..GGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([5 x %structField.0]* @go..C252 to i8*), i64 200, i64 192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppp, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C261 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C262 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C263 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C270 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C279 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C280 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C281 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([5 x %structField.0]* @go..C289 to i8*), i64 200, i64 192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppp, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C298 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C299 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C300 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C306 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C315 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C316 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C317 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C324 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C333 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C334 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C335 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C341 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C351 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C353 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C354 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C357 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C360 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C364 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C367 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C375 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C385 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C395 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C396 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C398 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C399 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C404 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C406 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C407 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C412 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C414 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C415 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C419 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C420 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C422 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C423 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C428 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C430 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C431 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C436 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C438 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C439 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C444 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C446 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C447 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C454 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C456 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C457 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C464 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C466 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C467 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C472 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C474 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C475 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C481 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C482 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C484 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C485 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C490 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C492 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C493 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C498 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C500 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C501 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C505 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C506 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([21 x %method.0]* @go..C507 to i8*), i64 840, i64 840, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @gcbits..GGGGGGGGGGGGGGGGGGGGGaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C516 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C518 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C519 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C523 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C524 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C528 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C531 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C536 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([21 x %method.0]* @go..C570 to i8*), i64 840, i64 840, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @gcbits..GGGGGGGGGGGGGGGGGGGGGaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([11 x %structField.0]* @go..C600 to i8*), i64 440, i64 432, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @gcbits..pppppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C617 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C629 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %structField.0]* @go..C634 to i8*), i64 280, i64 272, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..pppppppa, i32 0, i32 0) }] }

declare { i64, i64 } @net.IPAddr.Network(i8*, %IPAddr.0*) #0

declare { i64, i64 } @net.IPAddr.String(i8*, %IPAddr.0*) #0

declare i64 @net.IPAddr.family(i8*, %IPAddr.0*) #0

declare i8 @net.IPAddr.isWildcard(i8*, %IPAddr.0*) #0

declare void @net.IPAddr.sockaddr({ %Sockaddr.0, %error.0 }*, i8*, %IPAddr.0*, i64) #0

declare { i64, i64 } @net.IPAddr.toLocal(i8*, %IPAddr.0*, i64, i64) #0

define void @command_line_arguments..import(i8* nest nocapture readnone %nest.0) local_unnamed_addr #0 !dbg !297 {
entry:
  %tmpv.1 = alloca [9 x { { i8*, i64 }, { i8*, i64 } }], align 8
  call void @runtime.registerGCRoots(i8* nest undef, i8* bitcast ({ i8*, i64, [155 x { i8*, i64, i64, i8* }] }* @go..C0 to i8*)), !dbg !300
  %cast.2 = bitcast [9 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2, i8* align 16 bitcast ([9 x { { i8*, i64 }, { i8*, i64 } }]* @const.27 to i8*), i64 288, i1 false)
  %call.0 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 9, i64 32, i64 16, i8* nonnull %cast.2), !dbg !302
  %runtime.writeBarrier.ld.0 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !304
  %icmp.1 = icmp eq i32 %runtime.writeBarrier.ld.0, 0, !dbg !304
  br i1 %icmp.1, label %else.842, label %else.841

fallthrough.841:                                  ; preds = %else.841, %else.842
  %call.205 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([7 x i8]* @const.371 to i64), i64 6), !dbg !305
  %runtime.writeBarrier.ld.76 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !307
  %icmp.619 = icmp eq i32 %runtime.writeBarrier.ld.76, 0, !dbg !307
  br i1 %icmp.619, label %else.844, label %else.843

else.841:                                         ; preds = %entry
  %cast.39 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.0 to i8*, !dbg !304
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.doctypes to i8*), i8* %cast.39), !dbg !304
  br label %fallthrough.841

else.842:                                         ; preds = %entry
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.doctypes, align 8, !dbg !304
  br label %fallthrough.841

fallthrough.843:                                  ; preds = %else.843, %else.844
  %call.221 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([22 x i8]* @const.376 to i64), i64 21), !dbg !308
  %runtime.writeBarrier.ld.77 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !309
  %icmp.640 = icmp eq i32 %runtime.writeBarrier.ld.77, 0, !dbg !309
  br i1 %icmp.640, label %else.846, label %else.845

else.843:                                         ; preds = %fallthrough.841
  %cast.2403 = bitcast %Regexp.0* %call.205 to i8*, !dbg !307
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxIndent to i8*), i8* %cast.2403), !dbg !307
  br label %fallthrough.843

else.844:                                         ; preds = %fallthrough.841
  store %Regexp.0* %call.205, %Regexp.0** @command_line_arguments.rgxIndent, align 8, !dbg !307
  br label %fallthrough.843

fallthrough.845:                                  ; preds = %else.845, %else.846
  %call.223 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([12 x i8]* @const.380 to i64), i64 11), !dbg !310
  %runtime.writeBarrier.ld.79 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !311
  %icmp.655 = icmp eq i32 %runtime.writeBarrier.ld.79, 0, !dbg !311
  br i1 %icmp.655, label %else.848, label %else.847

else.845:                                         ; preds = %fallthrough.843
  %cast.2484 = bitcast %Regexp.0* %call.221 to i8*, !dbg !309
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxDoctype to i8*), i8* %cast.2484), !dbg !309
  br label %fallthrough.845

else.846:                                         ; preds = %fallthrough.843
  store %Regexp.0* %call.221, %Regexp.0** @command_line_arguments.rgxDoctype, align 8, !dbg !309
  br label %fallthrough.845

fallthrough.847:                                  ; preds = %else.847, %else.848
  %call.224 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([9 x i8]* @const.382 to i64), i64 8), !dbg !312
  %runtime.writeBarrier.ld.80 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !313
  %icmp.657 = icmp eq i32 %runtime.writeBarrier.ld.80, 0, !dbg !313
  br i1 %icmp.657, label %else.850, label %else.849

else.847:                                         ; preds = %fallthrough.845
  %cast.2509 = bitcast %Regexp.0* %call.223 to i8*, !dbg !311
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxIf to i8*), i8* %cast.2509), !dbg !311
  br label %fallthrough.847

else.848:                                         ; preds = %fallthrough.845
  store %Regexp.0* %call.223, %Regexp.0** @command_line_arguments.rgxIf, align 8, !dbg !311
  br label %fallthrough.847

fallthrough.849:                                  ; preds = %else.849, %else.850
  %call.227 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([64 x i8]* @const.385 to i64), i64 63), !dbg !314
  %runtime.writeBarrier.ld.81 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !315
  %icmp.669 = icmp eq i32 %runtime.writeBarrier.ld.81, 0, !dbg !315
  br i1 %icmp.669, label %else.852, label %else.851

else.849:                                         ; preds = %fallthrough.847
  %cast.2513 = bitcast %Regexp.0* %call.224 to i8*, !dbg !313
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxElse to i8*), i8* %cast.2513), !dbg !313
  br label %fallthrough.849

else.850:                                         ; preds = %fallthrough.847
  store %Regexp.0* %call.224, %Regexp.0** @command_line_arguments.rgxElse, align 8, !dbg !313
  br label %fallthrough.849

fallthrough.851:                                  ; preds = %else.851, %else.852
  %call.230 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.387 to i64), i64 29), !dbg !316
  %runtime.writeBarrier.ld.82 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !317
  %icmp.681 = icmp eq i32 %runtime.writeBarrier.ld.82, 0, !dbg !317
  br i1 %icmp.681, label %else.854, label %else.853

else.851:                                         ; preds = %fallthrough.849
  %cast.2544 = bitcast %Regexp.0* %call.227 to i8*, !dbg !315
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxEach to i8*), i8* %cast.2544), !dbg !315
  br label %fallthrough.851

else.852:                                         ; preds = %fallthrough.849
  store %Regexp.0* %call.227, %Regexp.0** @command_line_arguments.rgxEach, align 8, !dbg !315
  br label %fallthrough.851

fallthrough.853:                                  ; preds = %else.853, %else.854
  %call.233 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([18 x i8]* @const.389 to i64), i64 17), !dbg !318
  %runtime.writeBarrier.ld.83 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !319
  %icmp.691 = icmp eq i32 %runtime.writeBarrier.ld.83, 0, !dbg !319
  br i1 %icmp.691, label %else.856, label %else.855

else.853:                                         ; preds = %fallthrough.851
  %cast.2577 = bitcast %Regexp.0* %call.230 to i8*, !dbg !317
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxAssignment to i8*), i8* %cast.2577), !dbg !317
  br label %fallthrough.853

else.854:                                         ; preds = %fallthrough.851
  store %Regexp.0* %call.230, %Regexp.0** @command_line_arguments.rgxAssignment, align 8, !dbg !317
  br label %fallthrough.853

fallthrough.855:                                  ; preds = %else.855, %else.856
  %call.236 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.393 to i64), i64 28), !dbg !320
  %runtime.writeBarrier.ld.84 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !321
  %icmp.702 = icmp eq i32 %runtime.writeBarrier.ld.84, 0, !dbg !321
  br i1 %icmp.702, label %else.858, label %else.857

else.855:                                         ; preds = %fallthrough.853
  %cast.2604 = bitcast %Regexp.0* %call.233 to i8*, !dbg !319
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxComment to i8*), i8* %cast.2604), !dbg !319
  br label %fallthrough.855

else.856:                                         ; preds = %fallthrough.853
  store %Regexp.0* %call.233, %Regexp.0** @command_line_arguments.rgxComment, align 8, !dbg !319
  br label %fallthrough.855

fallthrough.857:                                  ; preds = %else.857, %else.858
  %call.239 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.395 to i64), i64 29), !dbg !322
  %runtime.writeBarrier.ld.85 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !323
  %icmp.712 = icmp eq i32 %runtime.writeBarrier.ld.85, 0, !dbg !323
  br i1 %icmp.712, label %else.860, label %else.859

else.857:                                         ; preds = %fallthrough.855
  %cast.2635 = bitcast %Regexp.0* %call.236 to i8*, !dbg !321
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxId to i8*), i8* %cast.2635), !dbg !321
  br label %fallthrough.857

else.858:                                         ; preds = %fallthrough.855
  store %Regexp.0* %call.236, %Regexp.0** @command_line_arguments.rgxId, align 8, !dbg !321
  br label %fallthrough.857

fallthrough.859:                                  ; preds = %else.859, %else.860
  %call.242 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([74 x i8]* @const.397 to i64), i64 73), !dbg !324
  %runtime.writeBarrier.ld.86 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !325
  %icmp.722 = icmp eq i32 %runtime.writeBarrier.ld.86, 0, !dbg !325
  br i1 %icmp.722, label %else.862, label %else.861

else.859:                                         ; preds = %fallthrough.857
  %cast.2662 = bitcast %Regexp.0* %call.239 to i8*, !dbg !323
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxClassName to i8*), i8* %cast.2662), !dbg !323
  br label %fallthrough.859

else.860:                                         ; preds = %fallthrough.857
  store %Regexp.0* %call.239, %Regexp.0** @command_line_arguments.rgxClassName, align 8, !dbg !323
  br label %fallthrough.859

fallthrough.861:                                  ; preds = %else.861, %else.862
  %call.248 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([34 x i8]* @const.402 to i64), i64 33), !dbg !326
  %runtime.writeBarrier.ld.87 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !327
  %icmp.747 = icmp eq i32 %runtime.writeBarrier.ld.87, 0, !dbg !327
  br i1 %icmp.747, label %else.864, label %else.863

else.861:                                         ; preds = %fallthrough.859
  %cast.2689 = bitcast %Regexp.0* %call.242 to i8*, !dbg !325
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxAttribute to i8*), i8* %cast.2689), !dbg !325
  br label %fallthrough.861

else.862:                                         ; preds = %fallthrough.859
  store %Regexp.0* %call.242, %Regexp.0** @command_line_arguments.rgxAttribute, align 8, !dbg !325
  br label %fallthrough.861

fallthrough.863:                                  ; preds = %else.863, %else.864
  %call.250 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([35 x i8]* @const.404 to i64), i64 34), !dbg !328
  %runtime.writeBarrier.ld.88 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !329
  %icmp.755 = icmp eq i32 %runtime.writeBarrier.ld.88, 0, !dbg !329
  br i1 %icmp.755, label %else.866, label %else.865

else.863:                                         ; preds = %fallthrough.861
  %cast.2752 = bitcast %Regexp.0* %call.248 to i8*, !dbg !327
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxImport to i8*), i8* %cast.2752), !dbg !327
  br label %fallthrough.863

else.864:                                         ; preds = %fallthrough.861
  store %Regexp.0* %call.248, %Regexp.0** @command_line_arguments.rgxImport, align 8, !dbg !327
  br label %fallthrough.863

fallthrough.865:                                  ; preds = %else.865, %else.866
  %call.252 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([57 x i8]* @const.406 to i64), i64 56), !dbg !330
  %runtime.writeBarrier.ld.89 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !331
  %icmp.763 = icmp eq i32 %runtime.writeBarrier.ld.89, 0, !dbg !331
  br i1 %icmp.763, label %else.868, label %else.867

else.865:                                         ; preds = %fallthrough.863
  %cast.2772 = bitcast %Regexp.0* %call.250 to i8*, !dbg !329
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxExtends to i8*), i8* %cast.2772), !dbg !329
  br label %fallthrough.865

else.866:                                         ; preds = %fallthrough.863
  store %Regexp.0* %call.250, %Regexp.0** @command_line_arguments.rgxExtends, align 8, !dbg !329
  br label %fallthrough.865

fallthrough.867:                                  ; preds = %else.867, %else.868
  %call.255 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([13 x i8]* @const.408 to i64), i64 12), !dbg !332
  %runtime.writeBarrier.ld.90 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !333
  %icmp.773 = icmp eq i32 %runtime.writeBarrier.ld.90, 0, !dbg !333
  br i1 %icmp.773, label %else.870, label %else.869

else.867:                                         ; preds = %fallthrough.865
  %cast.2792 = bitcast %Regexp.0* %call.252 to i8*, !dbg !331
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxBlock to i8*), i8* %cast.2792), !dbg !331
  br label %fallthrough.867

else.868:                                         ; preds = %fallthrough.865
  store %Regexp.0* %call.252, %Regexp.0** @command_line_arguments.rgxBlock, align 8, !dbg !331
  br label %fallthrough.867

fallthrough.869:                                  ; preds = %else.869, %else.870
  %call.257 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([48 x i8]* @const.410 to i64), i64 47), !dbg !334
  %runtime.writeBarrier.ld.91 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !335
  %icmp.781 = icmp eq i32 %runtime.writeBarrier.ld.91, 0, !dbg !335
  br i1 %icmp.781, label %else.872, label %else.871

else.869:                                         ; preds = %fallthrough.867
  %cast.2819 = bitcast %Regexp.0* %call.255 to i8*, !dbg !333
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxTag to i8*), i8* %cast.2819), !dbg !333
  br label %fallthrough.869

else.870:                                         ; preds = %fallthrough.867
  store %Regexp.0* %call.255, %Regexp.0** @command_line_arguments.rgxTag, align 8, !dbg !333
  br label %fallthrough.869

fallthrough.871:                                  ; preds = %else.871, %else.872
  %call.260 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([39 x i8]* @const.412 to i64), i64 38), !dbg !336
  %runtime.writeBarrier.ld.92 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !337
  %icmp.791 = icmp eq i32 %runtime.writeBarrier.ld.92, 0, !dbg !337
  br i1 %icmp.791, label %else.874, label %else.873

else.871:                                         ; preds = %fallthrough.869
  %cast.2839 = bitcast %Regexp.0* %call.257 to i8*, !dbg !335
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxMixin to i8*), i8* %cast.2839), !dbg !335
  br label %fallthrough.871

else.872:                                         ; preds = %fallthrough.869
  store %Regexp.0* %call.257, %Regexp.0** @command_line_arguments.rgxMixin, align 8, !dbg !335
  br label %fallthrough.871

fallthrough.873:                                  ; preds = %else.873, %else.874
  %call.263 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([14 x i8]* @const.414 to i64), i64 13), !dbg !338
  %runtime.writeBarrier.ld.93 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !339
  %icmp.801 = icmp eq i32 %runtime.writeBarrier.ld.93, 0, !dbg !339
  br i1 %icmp.801, label %else.876, label %else.875

else.873:                                         ; preds = %fallthrough.871
  %cast.2866 = bitcast %Regexp.0* %call.260 to i8*, !dbg !337
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxMixinCall to i8*), i8* %cast.2866), !dbg !337
  br label %fallthrough.873

else.874:                                         ; preds = %fallthrough.871
  store %Regexp.0* %call.260, %Regexp.0** @command_line_arguments.rgxMixinCall, align 8, !dbg !337
  br label %fallthrough.873

fallthrough.875:                                  ; preds = %else.875, %else.876
  ret void

else.875:                                         ; preds = %fallthrough.873
  %cast.2893 = bitcast %Regexp.0* %call.263 to i8*, !dbg !339
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.rgxText to i8*), i8* %cast.2893), !dbg !339
  br label %fallthrough.875

else.876:                                         ; preds = %fallthrough.873
  store %Regexp.0* %call.263, %Regexp.0** @command_line_arguments.rgxText, align 8, !dbg !339
  br label %fallthrough.875
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8*, i8*, i64, i64, i64, i8*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @__go_runtime_error(i8*, i32) local_unnamed_addr #2

declare void @runtime.writebarrierptr(i8*, i8*, i8*) local_unnamed_addr #0

define i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest nocapture readnone %nest.89, i8* %key, i64 %seed) #0 !dbg !340 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !341, metadata !DIExpression()), !dbg !342
  call void @llvm.dbg.value(metadata i64 %seed, metadata !343, metadata !DIExpression()), !dbg !342
  call void @llvm.dbg.value(metadata i64 0, metadata !344, metadata !DIExpression()), !dbg !342
  %pticast.25 = ptrtoint i8* %key to i64, !dbg !342
  %call.293 = call i64 @runtime.memhash64(i8* nest undef, i8* %key, i64 %seed), !dbg !342
  %add.33 = add i64 %pticast.25, 8, !dbg !342
  %itpcast.2 = inttoptr i64 %add.33 to i8*, !dbg !342
  %call.294 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.2, i64 %call.293), !dbg !342
  %add.34 = add i64 %pticast.25, 16, !dbg !342
  %itpcast.3 = inttoptr i64 %add.34 to i8*, !dbg !342
  %call.295 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.3, i64 %call.294), !dbg !342
  %add.35 = add i64 %pticast.25, 24, !dbg !342
  %itpcast.4 = inttoptr i64 %add.35 to i8*, !dbg !342
  %call.296 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.4, i64 %call.295), !dbg !342
  call void @llvm.dbg.value(metadata i64 %call.296, metadata !344, metadata !DIExpression()), !dbg !342
  ret i64 %call.296, !dbg !342
}

define i8 @command_line_arguments.command_line_arguments.SourcePosition..eq(i8* nest nocapture readnone %nest.90, i8* readonly %key1, i8* readonly %key2) #0 !dbg !345 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !346, metadata !DIExpression()), !dbg !347
  call void @llvm.dbg.value(metadata i8* %key2, metadata !348, metadata !DIExpression()), !dbg !347
  call void @llvm.dbg.value(metadata i8 0, metadata !349, metadata !DIExpression()), !dbg !347
  %icmp.881 = icmp eq i8* %key1, null, !dbg !347
  br i1 %icmp.881, label %then.718, label %else.718

then.718:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !347
  unreachable

else.718:                                         ; preds = %entry
  %icmp.882 = icmp eq i8* %key2, null, !dbg !347
  br i1 %icmp.882, label %then.719, label %else.719

then.719:                                         ; preds = %else.718
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !347
  unreachable

else.719:                                         ; preds = %else.718
  %field.971 = bitcast i8* %key1 to i64*, !dbg !347
  %.field.ld.184 = load i64, i64* %field.971, align 8, !dbg !347
  %field.972 = bitcast i8* %key2 to i64*, !dbg !347
  %.field.ld.185 = load i64, i64* %field.972, align 8, !dbg !347
  %icmp.883 = icmp eq i64 %.field.ld.184, %.field.ld.185, !dbg !347
  br i1 %icmp.883, label %else.722, label %then.720

then.720:                                         ; preds = %else.725, %else.722, %else.719
  call void @llvm.dbg.value(metadata i8 0, metadata !349, metadata !DIExpression()), !dbg !347
  ret i8 0, !dbg !347

else.722:                                         ; preds = %else.719
  %field.973 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !347
  %0 = bitcast i8* %field.973 to i64*, !dbg !347
  %.field.ld.186 = load i64, i64* %0, align 8, !dbg !347
  %field.974 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !347
  %1 = bitcast i8* %field.974 to i64*, !dbg !347
  %.field.ld.187 = load i64, i64* %1, align 8, !dbg !347
  %icmp.886 = icmp eq i64 %.field.ld.186, %.field.ld.187, !dbg !347
  br i1 %icmp.886, label %else.725, label %then.720

else.725:                                         ; preds = %else.722
  %field.975 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !347
  %2 = bitcast i8* %field.975 to i64*, !dbg !347
  %.field.ld.188 = load i64, i64* %2, align 8, !dbg !347
  %field.976 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !347
  %3 = bitcast i8* %field.976 to i64*, !dbg !347
  %.field.ld.189 = load i64, i64* %3, align 8, !dbg !347
  %icmp.889 = icmp eq i64 %.field.ld.188, %.field.ld.189, !dbg !347
  br i1 %icmp.889, label %else.728, label %then.720

else.728:                                         ; preds = %else.725
  %field.977 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !347
  %field.978 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !347
  %field0.191 = bitcast i8* %field.977 to i64*, !dbg !347
  %ld.341 = load i64, i64* %field0.191, align 8, !dbg !347
  %field1.191 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !347
  %4 = bitcast i8* %field1.191 to i64*, !dbg !347
  %ld.342 = load i64, i64* %4, align 8, !dbg !347
  %field0.192 = bitcast i8* %field.978 to i64*, !dbg !347
  %ld.343 = load i64, i64* %field0.192, align 8, !dbg !347
  %field1.192 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !347
  %5 = bitcast i8* %field1.192 to i64*, !dbg !347
  %ld.344 = load i64, i64* %5, align 8, !dbg !347
  %call.297 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.341, i64 %ld.342, i64 %ld.343, i64 %ld.344), !dbg !347
  %icmp.892 = icmp eq i8 %call.297, 1, !dbg !347
  %spec.select = zext i1 %icmp.892 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.SourcePosition.Pos(%SourcePosition.0* nocapture sret %sret.formal.0, i8* nest nocapture readnone %nest.1, %SourcePosition.0* readonly %s) #0 !dbg !350 {
entry:
  call void @llvm.dbg.value(metadata %SourcePosition.0* %s, metadata !360, metadata !DIExpression()), !dbg !361
  %icmp.2 = icmp eq %SourcePosition.0* %s, null, !dbg !362
  br i1 %icmp.2, label %then.0, label %else.0

then.0:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !362
  unreachable

else.0:                                           ; preds = %entry
  %cast.63 = bitcast %SourcePosition.0* %s to i8*, !dbg !363
  %cast.64 = bitcast %SourcePosition.0* %sret.formal.0 to i8*, !dbg !363
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.64, i8* align 8 %cast.63, i64 40, i1 false), !dbg !363
  ret void, !dbg !363
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

define i64 @command_line_arguments.command_line_arguments.Doctype..hash(i8* nest nocapture readnone %nest.91, i8* %key, i64 %seed) #0 !dbg !364 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !365, metadata !DIExpression()), !dbg !366
  call void @llvm.dbg.value(metadata i64 %seed, metadata !367, metadata !DIExpression()), !dbg !366
  call void @llvm.dbg.value(metadata i64 0, metadata !368, metadata !DIExpression()), !dbg !366
  %pticast.26 = ptrtoint i8* %key to i64, !dbg !366
  %call.298 = call i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !366
  %add.37 = add i64 %pticast.26, 40, !dbg !366
  %itpcast.6 = inttoptr i64 %add.37 to i8*, !dbg !366
  %call.299 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.6, i64 %call.298), !dbg !366
  call void @llvm.dbg.value(metadata i64 %call.299, metadata !368, metadata !DIExpression()), !dbg !366
  ret i64 %call.299, !dbg !366
}

define i8 @command_line_arguments.command_line_arguments.Doctype..eq(i8* nest nocapture readnone %nest.92, i8* readonly %key1, i8* readonly %key2) #0 !dbg !369 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !370, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i8* %key2, metadata !372, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.value(metadata i8 0, metadata !373, metadata !DIExpression()), !dbg !371
  %icmp.893 = icmp eq i8* %key1, null, !dbg !371
  br i1 %icmp.893, label %then.730, label %else.730

then.730:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !371
  unreachable

else.730:                                         ; preds = %entry
  %icmp.894 = icmp eq i8* %key2, null, !dbg !371
  br i1 %icmp.894, label %then.731, label %else.731

then.731:                                         ; preds = %else.730
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !371
  unreachable

else.731:                                         ; preds = %else.730
  %tmpv.1340.sroa.6.0.cast.3240.sroa_idx17 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !371
  %0 = bitcast i8* %tmpv.1340.sroa.6.0.cast.3240.sroa_idx17 to i64*, !dbg !371
  %tmpv.1340.sroa.6.0.copyload18 = load i64, i64* %0, align 8, !dbg !371
  %tmpv.1340.sroa.5.0.cast.3240.sroa_idx15 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !371
  %tmpv.1340.sroa.5.0.cast.3240.sroa_cast = bitcast i8* %tmpv.1340.sroa.5.0.cast.3240.sroa_idx15 to i64*, !dbg !371
  %tmpv.1340.sroa.5.0.copyload16 = load i64, i64* %tmpv.1340.sroa.5.0.cast.3240.sroa_cast, align 8, !dbg !371
  %tmpv.1340.sroa.4.0.cast.3240.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !371
  %1 = bitcast i8* %tmpv.1340.sroa.4.0.cast.3240.sroa_idx13 to i64*, !dbg !371
  %tmpv.1340.sroa.4.0.copyload14 = load i64, i64* %1, align 8, !dbg !371
  %tmpv.1340.sroa.3.0.cast.3240.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !371
  %2 = bitcast i8* %tmpv.1340.sroa.3.0.cast.3240.sroa_idx11 to i64*, !dbg !371
  %tmpv.1340.sroa.3.0.copyload12 = load i64, i64* %2, align 8, !dbg !371
  %tmpv.1340.sroa.0.0.cast.3240.sroa_idx = bitcast i8* %key1 to i64*, !dbg !371
  %tmpv.1340.sroa.0.0.copyload10 = load i64, i64* %tmpv.1340.sroa.0.0.cast.3240.sroa_idx, align 8, !dbg !371
  %tmpv.1341.sroa.0.0.cast.3243.sroa_idx = bitcast i8* %key2 to i64*, !dbg !371
  %tmpv.1341.sroa.0.0.copyload1 = load i64, i64* %tmpv.1341.sroa.0.0.cast.3243.sroa_idx, align 8, !dbg !371
  %tmpv.1341.sroa.3.0.cast.3243.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !371
  %3 = bitcast i8* %tmpv.1341.sroa.3.0.cast.3243.sroa_idx2 to i64*, !dbg !371
  %tmpv.1341.sroa.3.0.copyload3 = load i64, i64* %3, align 8, !dbg !371
  %tmpv.1341.sroa.4.0.cast.3243.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !371
  %4 = bitcast i8* %tmpv.1341.sroa.4.0.cast.3243.sroa_idx4 to i64*, !dbg !371
  %tmpv.1341.sroa.4.0.copyload5 = load i64, i64* %4, align 8, !dbg !371
  %tmpv.1341.sroa.5.0.cast.3243.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !371
  %tmpv.1341.sroa.5.0.cast.3243.sroa_cast = bitcast i8* %tmpv.1341.sroa.5.0.cast.3243.sroa_idx6 to i64*, !dbg !371
  %tmpv.1341.sroa.5.0.copyload7 = load i64, i64* %tmpv.1341.sroa.5.0.cast.3243.sroa_cast, align 8, !dbg !371
  %tmpv.1341.sroa.6.0.cast.3243.sroa_idx8 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !371
  %5 = bitcast i8* %tmpv.1341.sroa.6.0.cast.3243.sroa_idx8 to i64*, !dbg !371
  %tmpv.1341.sroa.6.0.copyload9 = load i64, i64* %5, align 8, !dbg !371
  %icmp.895 = icmp eq i64 %tmpv.1340.sroa.0.0.copyload10, %tmpv.1341.sroa.0.0.copyload1, !dbg !371
  %icmp.896 = icmp eq i64 %tmpv.1340.sroa.3.0.copyload12, %tmpv.1341.sroa.3.0.copyload3, !dbg !371
  %iand.121 = and i1 %icmp.895, %icmp.896, !dbg !371
  %icmp.897 = icmp eq i64 %tmpv.1340.sroa.4.0.copyload14, %tmpv.1341.sroa.4.0.copyload5, !dbg !371
  %iand.222 = and i1 %iand.121, %icmp.897, !dbg !371
  %call.300 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.1340.sroa.5.0.copyload16, i64 %tmpv.1340.sroa.6.0.copyload18, i64 %tmpv.1341.sroa.5.0.copyload7, i64 %tmpv.1341.sroa.6.0.copyload9), !dbg !371
  %icmp.898 = icmp eq i8 %call.300, 1, !dbg !371
  %iand.323 = and i1 %iand.222, %icmp.898, !dbg !371
  br i1 %iand.323, label %else.734, label %then.732

then.732:                                         ; preds = %else.731
  call void @llvm.dbg.value(metadata i8 0, metadata !373, metadata !DIExpression()), !dbg !371
  ret i8 0, !dbg !371

else.734:                                         ; preds = %else.731
  %field.989 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !371
  %field.990 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !371
  %field0.195 = bitcast i8* %field.989 to i64*, !dbg !371
  %ld.349 = load i64, i64* %field0.195, align 8, !dbg !371
  %field1.195 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !371
  %6 = bitcast i8* %field1.195 to i64*, !dbg !371
  %ld.350 = load i64, i64* %6, align 8, !dbg !371
  %field0.196 = bitcast i8* %field.990 to i64*, !dbg !371
  %ld.351 = load i64, i64* %field0.196, align 8, !dbg !371
  %field1.196 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !371
  %7 = bitcast i8* %field1.196 to i64*, !dbg !371
  %ld.352 = load i64, i64* %7, align 8, !dbg !371
  %call.301 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.349, i64 %ld.350, i64 %ld.351, i64 %ld.352), !dbg !371
  %icmp.902 = icmp eq i8 %call.301, 1, !dbg !371
  %spec.select = zext i1 %icmp.902 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.Doctype.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.7, i8* nest nocapture readnone %nest.70, %Doctype.0* readonly %"$this0") #0 !dbg !374 {
entry:
  call void @llvm.dbg.value(metadata %Doctype.0* %"$this0", metadata !382, metadata !DIExpression()), !dbg !383
  %icmp.852 = icmp eq %Doctype.0* %"$this0", null, !dbg !384
  br i1 %icmp.852, label %then.689, label %command_line_arguments.SourcePosition.Pos.exit

then.689:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !384
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Doctype.0* %"$this0", metadata !360, metadata !DIExpression()), !dbg !385
  %cast.63.i = bitcast %Doctype.0* %"$this0" to i8*, !dbg !387
  %cast.3013 = bitcast %SourcePosition.0* %sret.formal.7 to i8*, !dbg !384
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3013, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !384
  ret void, !dbg !384
}

define { i64, i64 } @command_line_arguments.Doctype.String(i8* nest nocapture readnone %nest.3, %Doctype.0* readonly %d) #0 !dbg !388 {
entry:
  %tmp.0 = alloca [3 x { i8*, i64 }], align 8
  %tmpv.8 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Doctype.0* %d, metadata !391, metadata !DIExpression()), !dbg !392
  %icmp.6 = icmp eq %Doctype.0* %d, null, !dbg !393
  br i1 %icmp.6, label %then.4, label %else.4

then.4:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !393
  unreachable

else.4:                                           ; preds = %entry
  %field.1 = getelementptr inbounds %Doctype.0, %Doctype.0* %d, i64 0, i32 1, !dbg !393
  %cast.98 = bitcast { i8*, i64 }* %tmpv.8 to i8*
  %cast.99 = bitcast { i8*, i64 }* %field.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.98, i8* nonnull align 8 %cast.99, i64 16, i1 false)
  %command_line_arguments.doctypes.ld.0 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.doctypes, align 8, !dbg !395
  %call.2 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %command_line_arguments.doctypes.ld.0, i8* nonnull %cast.98), !dbg !396
  %defined.sroa.5.0.cast.104.sroa_idx5 = getelementptr inbounds i8, i8* %call.2, i64 8
  %0 = bitcast i8* %defined.sroa.5.0.cast.104.sroa_idx5 to i64*
  %defined.sroa.5.0.copyload = load i64, i64* %0, align 8
  call void @llvm.dbg.value(metadata i64 %defined.sroa.5.0.copyload, metadata !397, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !398
  %icmp.7 = icmp eq i64 %defined.sroa.5.0.copyload, 0, !dbg !399
  br i1 %icmp.7, label %else.6, label %then.5

then.5:                                           ; preds = %else.4
  %1 = bitcast i8* %call.2 to i64*
  %defined.sroa.0.0.copyload15 = load i64, i64* %1, align 8
  call void @llvm.dbg.value(metadata i64* %1, metadata !397, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !398
  call void @llvm.dbg.value(metadata i64 %defined.sroa.0.0.copyload15, metadata !400, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !401
  call void @llvm.dbg.value(metadata i64 %defined.sroa.5.0.copyload, metadata !400, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !401
  %ld.0.fca.0.insert = insertvalue { i64, i64 } undef, i64 %defined.sroa.0.0.copyload15, 0, !dbg !402
  %ld.0.fca.1.insert = insertvalue { i64, i64 } %ld.0.fca.0.insert, i64 %defined.sroa.5.0.copyload, 1, !dbg !402
  ret { i64, i64 } %ld.0.fca.1.insert, !dbg !402

else.6:                                           ; preds = %else.4
  %cast.115 = bitcast [3 x { i8*, i64 }]* %tmp.0 to i8*, !dbg !403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.115, i8* align 8 bitcast ({ i8*, i64 }* @const.87 to i8*), i64 16, i1 false), !dbg !403
  %index.1 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.0, i64 0, i64 1, !dbg !403
  %cast.117 = bitcast { i8*, i64 }* %index.1 to i8*, !dbg !403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.117, i8* nonnull align 8 %cast.99, i64 16, i1 false), !dbg !403
  %index.2 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.0, i64 0, i64 2, !dbg !403
  %cast.119 = bitcast { i8*, i64 }* %index.2 to i8*, !dbg !403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.119, i8* align 8 bitcast ({ i8*, i64 }* @const.89 to i8*), i64 16, i1 false), !dbg !403
  %call.3 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.0), !dbg !403
  ret { i64, i64 } %call.3, !dbg !404
}

declare i8* @runtime.newobject(i8*, %_type.0*) local_unnamed_addr #0

declare void @runtime.typedmemmove(i8*, %_type.0*, i8*, i8*) local_unnamed_addr #0

declare i8* @runtime.mapaccess1(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare { i64, i64 } @runtime.concatstring3(i8*, i8*, [3 x { i8*, i64 }]*) local_unnamed_addr #0

define i64 @command_line_arguments.command_line_arguments.Comment..hash(i8* nest nocapture readnone %nest.93, i8* %key, i64 %seed) #0 !dbg !405 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !406, metadata !DIExpression()), !dbg !407
  call void @llvm.dbg.value(metadata i64 %seed, metadata !408, metadata !DIExpression()), !dbg !407
  call void @llvm.dbg.value(metadata i64 0, metadata !409, metadata !DIExpression()), !dbg !407
  %pticast.27 = ptrtoint i8* %key to i64, !dbg !407
  %call.302 = call i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !407
  %add.39 = add i64 %pticast.27, 40, !dbg !407
  %itpcast.8 = inttoptr i64 %add.39 to i8*, !dbg !407
  %call.303 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.8, i64 %call.302), !dbg !407
  %add.40 = add i64 %pticast.27, 56, !dbg !407
  %itpcast.9 = inttoptr i64 %add.40 to i8*, !dbg !407
  %call.304 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.9, i64 %call.303), !dbg !407
  %add.41 = add i64 %pticast.27, 64, !dbg !407
  %itpcast.10 = inttoptr i64 %add.41 to i8*, !dbg !407
  %call.305 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.10, i64 %call.304), !dbg !407
  call void @llvm.dbg.value(metadata i64 %call.305, metadata !409, metadata !DIExpression()), !dbg !407
  ret i64 %call.305, !dbg !407
}

define i8 @command_line_arguments.command_line_arguments.Comment..eq(i8* nest nocapture readnone %nest.94, i8* readonly %key1, i8* readonly %key2) #0 !dbg !410 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !411, metadata !DIExpression()), !dbg !412
  call void @llvm.dbg.value(metadata i8* %key2, metadata !413, metadata !DIExpression()), !dbg !412
  call void @llvm.dbg.value(metadata i8 0, metadata !414, metadata !DIExpression()), !dbg !412
  %icmp.903 = icmp eq i8* %key1, null, !dbg !412
  br i1 %icmp.903, label %then.736, label %else.736

then.736:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !412
  unreachable

else.736:                                         ; preds = %entry
  %icmp.904 = icmp eq i8* %key2, null, !dbg !412
  br i1 %icmp.904, label %then.737, label %else.737

then.737:                                         ; preds = %else.736
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !412
  unreachable

else.737:                                         ; preds = %else.736
  %tmpv.1350.sroa.6.0.cast.3258.sroa_idx17 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !412
  %0 = bitcast i8* %tmpv.1350.sroa.6.0.cast.3258.sroa_idx17 to i64*, !dbg !412
  %tmpv.1350.sroa.6.0.copyload18 = load i64, i64* %0, align 8, !dbg !412
  %tmpv.1350.sroa.5.0.cast.3258.sroa_idx15 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !412
  %tmpv.1350.sroa.5.0.cast.3258.sroa_cast = bitcast i8* %tmpv.1350.sroa.5.0.cast.3258.sroa_idx15 to i64*, !dbg !412
  %tmpv.1350.sroa.5.0.copyload16 = load i64, i64* %tmpv.1350.sroa.5.0.cast.3258.sroa_cast, align 8, !dbg !412
  %tmpv.1350.sroa.4.0.cast.3258.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !412
  %1 = bitcast i8* %tmpv.1350.sroa.4.0.cast.3258.sroa_idx13 to i64*, !dbg !412
  %tmpv.1350.sroa.4.0.copyload14 = load i64, i64* %1, align 8, !dbg !412
  %tmpv.1350.sroa.3.0.cast.3258.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !412
  %2 = bitcast i8* %tmpv.1350.sroa.3.0.cast.3258.sroa_idx11 to i64*, !dbg !412
  %tmpv.1350.sroa.3.0.copyload12 = load i64, i64* %2, align 8, !dbg !412
  %tmpv.1350.sroa.0.0.cast.3258.sroa_idx = bitcast i8* %key1 to i64*, !dbg !412
  %tmpv.1350.sroa.0.0.copyload10 = load i64, i64* %tmpv.1350.sroa.0.0.cast.3258.sroa_idx, align 8, !dbg !412
  %tmpv.1351.sroa.0.0.cast.3261.sroa_idx = bitcast i8* %key2 to i64*, !dbg !412
  %tmpv.1351.sroa.0.0.copyload1 = load i64, i64* %tmpv.1351.sroa.0.0.cast.3261.sroa_idx, align 8, !dbg !412
  %tmpv.1351.sroa.3.0.cast.3261.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !412
  %3 = bitcast i8* %tmpv.1351.sroa.3.0.cast.3261.sroa_idx2 to i64*, !dbg !412
  %tmpv.1351.sroa.3.0.copyload3 = load i64, i64* %3, align 8, !dbg !412
  %tmpv.1351.sroa.4.0.cast.3261.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !412
  %4 = bitcast i8* %tmpv.1351.sroa.4.0.cast.3261.sroa_idx4 to i64*, !dbg !412
  %tmpv.1351.sroa.4.0.copyload5 = load i64, i64* %4, align 8, !dbg !412
  %tmpv.1351.sroa.5.0.cast.3261.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !412
  %tmpv.1351.sroa.5.0.cast.3261.sroa_cast = bitcast i8* %tmpv.1351.sroa.5.0.cast.3261.sroa_idx6 to i64*, !dbg !412
  %tmpv.1351.sroa.5.0.copyload7 = load i64, i64* %tmpv.1351.sroa.5.0.cast.3261.sroa_cast, align 8, !dbg !412
  %tmpv.1351.sroa.6.0.cast.3261.sroa_idx8 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !412
  %5 = bitcast i8* %tmpv.1351.sroa.6.0.cast.3261.sroa_idx8 to i64*, !dbg !412
  %tmpv.1351.sroa.6.0.copyload9 = load i64, i64* %5, align 8, !dbg !412
  %icmp.905 = icmp eq i64 %tmpv.1350.sroa.0.0.copyload10, %tmpv.1351.sroa.0.0.copyload1, !dbg !412
  %icmp.906 = icmp eq i64 %tmpv.1350.sroa.3.0.copyload12, %tmpv.1351.sroa.3.0.copyload3, !dbg !412
  %iand.523 = and i1 %icmp.905, %icmp.906, !dbg !412
  %icmp.907 = icmp eq i64 %tmpv.1350.sroa.4.0.copyload14, %tmpv.1351.sroa.4.0.copyload5, !dbg !412
  %iand.624 = and i1 %iand.523, %icmp.907, !dbg !412
  %call.306 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.1350.sroa.5.0.copyload16, i64 %tmpv.1350.sroa.6.0.copyload18, i64 %tmpv.1351.sroa.5.0.copyload7, i64 %tmpv.1351.sroa.6.0.copyload9), !dbg !412
  %icmp.908 = icmp eq i8 %call.306, 1, !dbg !412
  %iand.725 = and i1 %iand.624, %icmp.908, !dbg !412
  br i1 %iand.725, label %else.740, label %then.738

then.738:                                         ; preds = %else.743, %else.740, %else.737
  call void @llvm.dbg.value(metadata i8 0, metadata !414, metadata !DIExpression()), !dbg !412
  ret i8 0, !dbg !412

else.740:                                         ; preds = %else.737
  %field.1001 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !412
  %field.1002 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !412
  %field0.199 = bitcast i8* %field.1001 to i64*, !dbg !412
  %ld.357 = load i64, i64* %field0.199, align 8, !dbg !412
  %field1.199 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !412
  %6 = bitcast i8* %field1.199 to i64*, !dbg !412
  %ld.358 = load i64, i64* %6, align 8, !dbg !412
  %field0.200 = bitcast i8* %field.1002 to i64*, !dbg !412
  %ld.359 = load i64, i64* %field0.200, align 8, !dbg !412
  %field1.200 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !412
  %7 = bitcast i8* %field1.200 to i64*, !dbg !412
  %ld.360 = load i64, i64* %7, align 8, !dbg !412
  %call.307 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.357, i64 %ld.358, i64 %ld.359, i64 %ld.360), !dbg !412
  %icmp.912 = icmp eq i8 %call.307, 1, !dbg !412
  br i1 %icmp.912, label %else.743, label %then.738

else.743:                                         ; preds = %else.740
  %field.1003 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !412
  %8 = bitcast i8* %field.1003 to %Block.0**, !dbg !412
  %.field.ld.190 = load %Block.0*, %Block.0** %8, align 8, !dbg !412
  %field.1004 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !412
  %9 = bitcast i8* %field.1004 to %Block.0**, !dbg !412
  %.field.ld.191 = load %Block.0*, %Block.0** %9, align 8, !dbg !412
  %icmp.915 = icmp eq %Block.0* %.field.ld.190, %.field.ld.191, !dbg !412
  br i1 %icmp.915, label %else.746, label %then.738

else.746:                                         ; preds = %else.743
  %10 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !412
  %.field.ld.192 = load i8, i8* %10, align 1, !dbg !412
  %11 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !412
  %.field.ld.193 = load i8, i8* %11, align 1, !dbg !412
  %icmp.918 = icmp eq i8 %.field.ld.192, %.field.ld.193, !dbg !412
  %spec.select = zext i1 %icmp.918 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.Comment.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.8, i8* nest nocapture readnone %nest.71, %Comment.0* readonly %"$this1") #0 !dbg !415 {
entry:
  call void @llvm.dbg.value(metadata %Comment.0* %"$this1", metadata !445, metadata !DIExpression()), !dbg !446
  %icmp.853 = icmp eq %Comment.0* %"$this1", null, !dbg !447
  br i1 %icmp.853, label %then.690, label %command_line_arguments.SourcePosition.Pos.exit

then.690:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !447
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Comment.0* %"$this1", metadata !360, metadata !DIExpression()), !dbg !448
  %cast.63.i = bitcast %Comment.0* %"$this1" to i8*, !dbg !450
  %cast.3022 = bitcast %SourcePosition.0* %sret.formal.8 to i8*, !dbg !447
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3022, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !447
  ret void, !dbg !447
}

define i8 @command_line_arguments.Block.CanInline(i8* nest nocapture readnone %nest.9, %Block.0* readonly %b) #0 !dbg !451 {
entry:
  call void @llvm.dbg.value(metadata %Block.0* %b, metadata !454, metadata !DIExpression()), !dbg !455
  call void @llvm.dbg.value(metadata i8 0, metadata !456, metadata !DIExpression()), !dbg !457
  %icmp.52 = icmp eq %Block.0* %b, null, !dbg !458
  br i1 %icmp.52, label %then.40, label %else.40

then.40:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !458
  unreachable

else.40:                                          ; preds = %entry
  %field.49 = getelementptr inbounds %Block.0, %Block.0* %b, i64 0, i32 1, i32 1, !dbg !458
  %.field.field.ld.0 = load i64, i64* %field.49, align 8, !dbg !458
  %icmp.53 = icmp eq i64 %.field.field.ld.0, 0, !dbg !460
  br i1 %icmp.53, label %then.41, label %else.42

then.41:                                          ; preds = %fallthrough.44, %label.0, %else.42, %else.40
  %merge = phi i8 [ 1, %else.40 ], [ 1, %else.42 ], [ 0, %fallthrough.44 ], [ 1, %label.0 ]
  call void @llvm.dbg.value(metadata i8 1, metadata !456, metadata !DIExpression()), !dbg !457
  ret i8 %merge, !dbg !461

else.42:                                          ; preds = %else.40
  call void @llvm.dbg.value(metadata i8 1, metadata !462, metadata !DIExpression()), !dbg !463
  %tmpv.67.sroa.0.0.cast.308.sroa_idx = getelementptr inbounds %Block.0, %Block.0* %b, i64 0, i32 1, i32 0
  %tmpv.67.sroa.0.0.copyload = load %Node.0*, %Node.0** %tmpv.67.sroa.0.0.cast.308.sroa_idx, align 8
  %icmp.6022 = icmp sgt i64 %.field.field.ld.0, 0, !dbg !464
  br i1 %icmp.6022, label %else.43, label %then.41

label.0:                                          ; preds = %fallthrough.44
  %icmp.60 = icmp slt i64 %add.3, %.field.field.ld.0, !dbg !464
  br i1 %icmp.60, label %else.43, label %then.41

else.43:                                          ; preds = %else.42, %label.0
  %tmpv.69.023 = phi i64 [ %add.3, %label.0 ], [ 0, %else.42 ]
  %ptroff.4 = getelementptr %Node.0, %Node.0* %tmpv.67.sroa.0.0.copyload, i64 %tmpv.69.023, !dbg !464
  %tmpv.70.sroa.0.0.cast.314.sroa_cast = bitcast %Node.0* %ptroff.4 to i64*, !dbg !464
  %tmpv.70.sroa.0.0.copyload18 = load i64, i64* %tmpv.70.sroa.0.0.cast.314.sroa_cast, align 8, !dbg !464
  %tmpv.70.sroa.3.0.cast.314.sroa_idx19 = getelementptr inbounds %Node.0, %Node.0* %tmpv.67.sroa.0.0.copyload, i64 %tmpv.69.023, i32 1, !dbg !464
  %tmpv.70.sroa.3.0.cast.314.sroa_cast = bitcast i8** %tmpv.70.sroa.3.0.cast.314.sroa_idx19 to i64*, !dbg !464
  %tmpv.70.sroa.3.0.copyload20 = load i64, i64* %tmpv.70.sroa.3.0.cast.314.sroa_cast, align 8, !dbg !464
  call void @llvm.dbg.value(metadata i64 %tmpv.70.sroa.0.0.copyload18, metadata !466, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !467
  call void @llvm.dbg.value(metadata i64 %tmpv.70.sroa.3.0.copyload20, metadata !466, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !467
  call void @llvm.dbg.value(metadata %Text.0* null, metadata !468, metadata !DIExpression()), !dbg !476
  call void @llvm.dbg.value(metadata i8 0, metadata !477, metadata !DIExpression()), !dbg !476
  %call.9 = call { i64, i8 } @runtime.ifaceI2T2P(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Text, i64 0, i32 0), i64 %tmpv.70.sroa.0.0.copyload18, i64 %tmpv.70.sroa.3.0.copyload20), !dbg !478
  %call.9.fca.0.extract = extractvalue { i64, i8 } %call.9, 0, !dbg !478
  %call.9.fca.1.extract = extractvalue { i64, i8 } %call.9, 1, !dbg !478
  %cast.327 = inttoptr i64 %call.9.fca.0.extract to %Text.0*, !dbg !478
  call void @llvm.dbg.value(metadata %Text.0* %cast.327, metadata !468, metadata !DIExpression()), !dbg !476
  call void @llvm.dbg.value(metadata i8 %call.9.fca.1.extract, metadata !477, metadata !DIExpression()), !dbg !476
  %icmp.57 = icmp ne i8 %call.9.fca.1.extract, 0, !dbg !479
  %xor.0 = xor i1 %icmp.57, true, !dbg !479
  %zext.57 = zext i1 %xor.0 to i8, !dbg !479
  br i1 %icmp.57, label %then.44, label %fallthrough.44

then.44:                                          ; preds = %else.43
  %icmp.58 = icmp eq i64 %call.9.fca.0.extract, 0, !dbg !480
  br i1 %icmp.58, label %then.45, label %else.45

fallthrough.44:                                   ; preds = %else.43, %else.45
  %tmpv.78.0 = phi i8 [ %.field.ld.8, %else.45 ], [ %zext.57, %else.43 ]
  %0 = and i8 %tmpv.78.0, 1, !dbg !481
  %trunc.48 = icmp eq i8 %0, 0, !dbg !481
  %add.3 = add nuw nsw i64 %tmpv.69.023, 1, !dbg !464
  br i1 %trunc.48, label %label.0, label %then.41

then.45:                                          ; preds = %then.44
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !480
  unreachable

else.45:                                          ; preds = %then.44
  %field.56 = getelementptr inbounds %Text.0, %Text.0* %cast.327, i64 0, i32 2, !dbg !480
  %.field.ld.8 = load i8, i8* %field.56, align 1, !dbg !480
  br label %fallthrough.44
}

define void @command_line_arguments.Block.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.9, i8* nest nocapture readnone %nest.72, %Block.0* readonly %"$this2") #0 !dbg !482 {
entry:
  call void @llvm.dbg.value(metadata %Block.0* %"$this2", metadata !485, metadata !DIExpression()), !dbg !486
  %icmp.854 = icmp eq %Block.0* %"$this2", null, !dbg !487
  br i1 %icmp.854, label %then.691, label %command_line_arguments.SourcePosition.Pos.exit

then.691:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !487
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Block.0* %"$this2", metadata !360, metadata !DIExpression()), !dbg !488
  %cast.63.i = bitcast %Block.0* %"$this2" to i8*, !dbg !490
  %cast.3031 = bitcast %SourcePosition.0* %sret.formal.9 to i8*, !dbg !487
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3031, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !487
  ret void, !dbg !487
}

define void @command_line_arguments.Block.push(i8* nest nocapture readnone %nest.7, %Block.0* %b, i64 %node.chunk0, i64 %node.chunk1) #0 !dbg !491 {
entry:
  %node.addr = alloca %Node.0, align 8
  %tmpv.33 = alloca %IPST.1, align 8
  %sret.actual.2 = alloca %IPST.2, align 8
  %tmpv.45 = alloca %IPST.1, align 8
  call void @llvm.dbg.value(metadata %Block.0* %b, metadata !494, metadata !DIExpression()), !dbg !495
  %field0.3 = bitcast %Node.0* %node.addr to i64*
  store i64 %node.chunk0, i64* %field0.3, align 8
  %field0.31 = getelementptr inbounds %Node.0, %Node.0* %node.addr, i64 0, i32 1
  %0 = bitcast i8** %field0.31 to i64*
  store i64 %node.chunk1, i64* %0, align 8
  %icmp.23 = icmp eq %Block.0* %b, null, !dbg !496
  br i1 %icmp.23, label %then.21, label %else.22

then.21:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !496
  unreachable

else.22:                                          ; preds = %entry
  %field.10 = getelementptr inbounds %Block.0, %Block.0* %b, i64 0, i32 1, !dbg !496
  %cast.233 = bitcast %IPST.1* %tmpv.33 to i8*
  %cast.234 = bitcast %IPST.1* %field.10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.233, i8* nonnull align 8 %cast.234, i64 24, i1 false)
  %field.12 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.33, i64 0, i32 1, !dbg !497
  %tmpv.33.field.ld.0 = load i64, i64* %field.12, align 8, !dbg !497
  %add.0 = add i64 %tmpv.33.field.ld.0, 1, !dbg !497
  %field.13 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.33, i64 0, i32 2, !dbg !497
  %tmpv.33.field.ld.1 = load i64, i64* %field.13, align 8, !dbg !497
  %icmp.25 = icmp ugt i64 %add.0, %tmpv.33.field.ld.1, !dbg !497
  br i1 %icmp.25, label %then.23, label %else.23

then.23:                                          ; preds = %else.22
  %cast.236 = bitcast %IPST.1* %tmpv.33 to %IPST.2*, !dbg !497
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.2, i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.236, i64 %add.0), !dbg !497
  %tmpv.40.sroa.0.0.cast.241.sroa_idx = bitcast %IPST.2* %sret.actual.2 to %Node.0**
  %tmpv.40.sroa.0.0.copyload = load %Node.0*, %Node.0** %tmpv.40.sroa.0.0.cast.241.sroa_idx, align 8
  %1 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.2, i64 0, i32 1
  %tmpv.40.sroa.3.0.copyload = load i64, i64* %1, align 8
  %2 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.2, i64 0, i32 2
  %tmpv.40.sroa.4.0.copyload = load i64, i64* %2, align 8
  %.pre = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.33, i64 0, i32 0, !dbg !497
  br label %fallthrough.23

fallthrough.23:                                   ; preds = %else.24, %then.23
  %tmpv.40.sroa.0.0.cast.244.sroa_idx.pre-phi = phi %Node.0** [ %field.16, %else.24 ], [ %.pre, %then.23 ], !dbg !497
  %tmpv.40.sroa.0.0 = phi %Node.0* [ %tmpv.33.field.ld.3, %else.24 ], [ %tmpv.40.sroa.0.0.copyload, %then.23 ]
  %tmpv.40.sroa.3.0 = phi i64 [ %add.0, %else.24 ], [ %tmpv.40.sroa.3.0.copyload, %then.23 ]
  %tmpv.40.sroa.4.0 = phi i64 [ %tmpv.33.field.ld.1, %else.24 ], [ %tmpv.40.sroa.4.0.copyload, %then.23 ]
  store %Node.0* %tmpv.40.sroa.0.0, %Node.0** %tmpv.40.sroa.0.0.cast.244.sroa_idx.pre-phi, align 8, !dbg !497
  store i64 %tmpv.40.sroa.3.0, i64* %field.12, align 8, !dbg !497
  store i64 %tmpv.40.sroa.4.0, i64* %field.13, align 8, !dbg !497
  %icmp.32 = icmp sge i64 %tmpv.33.field.ld.0, %tmpv.40.sroa.3.0, !dbg !497
  %3 = icmp slt i64 %tmpv.33.field.ld.0, 0, !dbg !497
  %ior.35 = or i1 %3, %icmp.32, !dbg !497
  br i1 %ior.35, label %then.26, label %else.26

else.23:                                          ; preds = %else.22
  %icmp.27 = icmp sgt i64 %add.0, %tmpv.33.field.ld.1, !dbg !497
  %add.0.lobit28 = or i64 %add.0, %tmpv.33.field.ld.1, !dbg !497
  %4 = icmp slt i64 %add.0.lobit28, 0, !dbg !497
  %5 = or i1 %icmp.27, %4, !dbg !497
  br i1 %5, label %then.24, label %else.24

then.24:                                          ; preds = %else.23
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !497
  unreachable

else.24:                                          ; preds = %else.23
  %field.16 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.33, i64 0, i32 0, !dbg !497
  %tmpv.33.field.ld.3 = load %Node.0*, %Node.0** %field.16, align 8, !dbg !497
  br label %fallthrough.23

then.26:                                          ; preds = %fallthrough.23
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !497
  unreachable

else.26:                                          ; preds = %fallthrough.23
  %ptroff.1 = getelementptr %Node.0, %Node.0* %tmpv.40.sroa.0.0, i64 %tmpv.33.field.ld.0, !dbg !497
  %runtime.writeBarrier.ld.6 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !497
  %icmp.35 = icmp eq i32 %runtime.writeBarrier.ld.6, 0, !dbg !497
  br i1 %icmp.35, label %then.27, label %else.27

then.27:                                          ; preds = %else.26
  %icmp.34 = icmp eq %Node.0* %ptroff.1, null, !dbg !497
  br i1 %icmp.34, label %then.28, label %else.28

fallthrough.27:                                   ; preds = %else.27, %else.28
  %cast.252 = bitcast %IPST.1* %tmpv.45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.252, i8* nonnull align 8 %cast.233, i64 24, i1 false)
  %runtime.writeBarrier.ld.7 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !498
  %icmp.37 = icmp eq i32 %runtime.writeBarrier.ld.7, 0, !dbg !498
  br i1 %icmp.37, label %else.30, label %else.29

else.27:                                          ; preds = %else.26
  %cast.250 = bitcast %Node.0* %ptroff.1 to i8*, !dbg !497
  %cast.251 = bitcast %Node.0* %node.addr to i8*, !dbg !497
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i64 0, i32 0), i8* %cast.250, i8* nonnull %cast.251), !dbg !497
  br label %fallthrough.27

then.28:                                          ; preds = %then.27
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !497
  unreachable

else.28:                                          ; preds = %then.27
  %cast.247 = bitcast %Node.0* %ptroff.1 to i8*, !dbg !497
  %cast.248 = bitcast %Node.0* %node.addr to i8*, !dbg !497
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.247, i8* nonnull align 8 %cast.248, i64 16, i1 false), !dbg !497
  br label %fallthrough.27

fallthrough.29:                                   ; preds = %else.29, %else.30
  ret void

else.29:                                          ; preds = %fallthrough.27
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Node, i64 0, i32 0), i8* nonnull %cast.234, i8* nonnull %cast.252), !dbg !498
  br label %fallthrough.29

else.30:                                          ; preds = %fallthrough.27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.234, i8* nonnull align 8 %cast.252, i64 24, i1 false), !dbg !498
  br label %fallthrough.29
}

define void @command_line_arguments.Block.pushFront(i8* nest nocapture readnone %nest.8, %Block.0* %b, i64 %node.chunk0, i64 %node.chunk1) #0 !dbg !499 {
entry:
  %tmpv.50 = alloca [1 x %Node.0], align 8
  %tmpv.51 = alloca %IPST.1, align 8
  %tmpv.53 = alloca %IPST.1, align 8
  %sret.actual.3 = alloca %IPST.2, align 8
  %tmpv.61 = alloca %IPST.1, align 8
  %tmpv.64 = alloca %IPST.1, align 8
  call void @llvm.dbg.value(metadata %Block.0* %b, metadata !500, metadata !DIExpression()), !dbg !501
  call void @llvm.dbg.value(metadata i64 %node.chunk0, metadata !502, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !503
  call void @llvm.dbg.value(metadata i64 %node.chunk1, metadata !502, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !503
  %icmp.38 = icmp eq %Block.0* %b, null, !dbg !504
  br i1 %icmp.38, label %then.31, label %else.31

then.31:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !504
  unreachable

else.31:                                          ; preds = %entry
  %call.7 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...61x.7command_line_arguments.Node, i64 0, i32 0)), !dbg !505
  %node.addr.sroa.0.0.cast.267.sroa_cast = bitcast [1 x %Node.0]* %tmpv.50 to i64*, !dbg !505
  store i64 %node.chunk0, i64* %node.addr.sroa.0.0.cast.267.sroa_cast, align 8, !dbg !505
  %node.addr.sroa.2.0.cast.267.sroa_idx19 = getelementptr inbounds [1 x %Node.0], [1 x %Node.0]* %tmpv.50, i64 0, i64 0, i32 1, !dbg !505
  %node.addr.sroa.2.0.cast.267.sroa_cast = bitcast i8** %node.addr.sroa.2.0.cast.267.sroa_idx19 to i64*, !dbg !505
  store i64 %node.chunk1, i64* %node.addr.sroa.2.0.cast.267.sroa_cast, align 8, !dbg !505
  %cast.271 = bitcast [1 x %Node.0]* %tmpv.50 to i8*, !dbg !505
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...61x.7command_line_arguments.Node, i64 0, i32 0), i8* %call.7, i8* nonnull %cast.271), !dbg !505
  %0 = bitcast %IPST.1* %tmpv.51 to i8**, !dbg !505
  store i8* %call.7, i8** %0, align 8, !dbg !505
  %field.26 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.51, i64 0, i32 1, !dbg !505
  store i64 1, i64* %field.26, align 8, !dbg !505
  %field.27 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.51, i64 0, i32 2, !dbg !505
  store i64 1, i64* %field.27, align 8, !dbg !505
  %field.24 = getelementptr inbounds %Block.0, %Block.0* %b, i64 0, i32 1, !dbg !504
  %cast.274 = bitcast %IPST.1* %tmpv.53 to i8*
  %cast.275 = bitcast %IPST.1* %field.24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.274, i8* nonnull align 8 %cast.275, i64 24, i1 false)
  %field.30 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.53, i64 0, i32 1, !dbg !506
  %tmpv.53.field.ld.0 = load i64, i64* %field.30, align 8, !dbg !506
  %add.2 = add i64 %tmpv.53.field.ld.0, 1, !dbg !506
  %icmp.40 = icmp ugt i64 %add.2, 1, !dbg !506
  br i1 %icmp.40, label %fallthrough.33, label %else.36.thread

fallthrough.33:                                   ; preds = %else.31
  %field.25 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.51, i64 0, i32 0, !dbg !505
  %cast.277 = bitcast %IPST.1* %tmpv.51 to %IPST.2*, !dbg !506
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.3, i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.277, i64 %add.2), !dbg !506
  %tmpv.60.sroa.0.0.cast.282.sroa_idx = bitcast %IPST.2* %sret.actual.3 to %Node.0**
  %tmpv.60.sroa.0.0.copyload = load %Node.0*, %Node.0** %tmpv.60.sroa.0.0.cast.282.sroa_idx, align 8
  %1 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.3, i64 0, i32 1
  %tmpv.60.sroa.3.0.copyload = load i64, i64* %1, align 8
  %2 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.3, i64 0, i32 2
  %tmpv.60.sroa.4.0.copyload = load i64, i64* %2, align 8
  store %Node.0* %tmpv.60.sroa.0.0.copyload, %Node.0** %field.25, align 8, !dbg !506
  store i64 %tmpv.60.sroa.3.0.copyload, i64* %field.26, align 8, !dbg !506
  store i64 %tmpv.60.sroa.4.0.copyload, i64* %field.27, align 8, !dbg !506
  %icmp.47 = icmp slt i64 %tmpv.60.sroa.4.0.copyload, 1, !dbg !506
  br i1 %icmp.47, label %then.36, label %else.36

else.36.thread:                                   ; preds = %else.31
  %3 = bitcast i8* %call.7 to %Node.0*
  store i64 %add.2, i64* %field.26, align 8, !dbg !506
  store i64 1, i64* %field.27, align 8, !dbg !506
  br label %4

then.36:                                          ; preds = %fallthrough.33
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !506
  unreachable

else.36:                                          ; preds = %fallthrough.33
  %icmp.49 = icmp eq i64 %tmpv.60.sroa.4.0.copyload, 1, !dbg !506
  br i1 %icmp.49, label %4, label %5

; <label>:4:                                      ; preds = %else.36.thread, %else.36
  %tmpv.60.sroa.0.03847 = phi %Node.0* [ %3, %else.36.thread ], [ %tmpv.60.sroa.0.0.copyload, %else.36 ]
  %tmpv.60.sroa.3.03945 = phi i64 [ %add.2, %else.36.thread ], [ %tmpv.60.sroa.3.0.copyload, %else.36 ]
  br label %5

; <label>:5:                                      ; preds = %else.36, %4
  %tmpv.60.sroa.0.03846 = phi %Node.0* [ %tmpv.60.sroa.0.03847, %4 ], [ %tmpv.60.sroa.0.0.copyload, %else.36 ]
  %tmpv.60.sroa.3.03944 = phi i64 [ %tmpv.60.sroa.3.03945, %4 ], [ %tmpv.60.sroa.3.0.copyload, %else.36 ]
  %tmpv.60.sroa.4.04042 = phi i64 [ 1, %4 ], [ %tmpv.60.sroa.4.0.copyload, %else.36 ]
  %6 = phi i64 [ 0, %4 ], [ 1, %else.36 ]
  %ptroff.3 = getelementptr %Node.0, %Node.0* %tmpv.60.sroa.0.03846, i64 %6, !dbg !506
  %sub.7 = add i64 %tmpv.60.sroa.3.03944, -1, !dbg !506
  %sub.8 = add i64 %tmpv.60.sroa.4.04042, -1, !dbg !506
  %tmpv.63.sroa.0.0.cast.289.sroa_idx = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.61, i64 0, i32 0
  store %Node.0* %ptroff.3, %Node.0** %tmpv.63.sroa.0.0.cast.289.sroa_idx, align 8
  %tmpv.63.sroa.2.0.cast.289.sroa_idx33 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.61, i64 0, i32 1
  store i64 %sub.7, i64* %tmpv.63.sroa.2.0.cast.289.sroa_idx33, align 8
  %tmpv.63.sroa.3.0.cast.289.sroa_idx34 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.61, i64 0, i32 2
  store i64 %sub.8, i64* %tmpv.63.sroa.3.0.cast.289.sroa_idx34, align 8
  %cast.292 = bitcast %IPST.1* %tmpv.61 to %IPST.2*, !dbg !506
  %cast.293 = bitcast %IPST.1* %tmpv.53 to %IPST.2*, !dbg !506
  %call.8 = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.292, %IPST.2* byval nonnull %cast.293), !dbg !506
  %cast.294 = bitcast %IPST.1* %tmpv.64 to i8*
  %cast.295 = bitcast %IPST.1* %tmpv.51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.294, i8* nonnull align 8 %cast.295, i64 24, i1 false)
  %runtime.writeBarrier.ld.8 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !507
  %icmp.51 = icmp eq i32 %runtime.writeBarrier.ld.8, 0, !dbg !507
  br i1 %icmp.51, label %else.39, label %else.38

fallthrough.38:                                   ; preds = %else.38, %else.39
  ret void

else.38:                                          ; preds = %5
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Node, i64 0, i32 0), i8* nonnull %cast.275, i8* nonnull %cast.294), !dbg !507
  br label %fallthrough.38

else.39:                                          ; preds = %5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.275, i8* nonnull align 8 %cast.294, i64 24, i1 false), !dbg !507
  br label %fallthrough.38
}

define i64 @command_line_arguments.command_line_arguments.Text..hash(i8* nest nocapture readnone %nest.95, i8* %key, i64 %seed) #0 !dbg !508 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !509, metadata !DIExpression()), !dbg !510
  call void @llvm.dbg.value(metadata i64 %seed, metadata !511, metadata !DIExpression()), !dbg !510
  call void @llvm.dbg.value(metadata i64 0, metadata !512, metadata !DIExpression()), !dbg !510
  %pticast.28 = ptrtoint i8* %key to i64, !dbg !510
  %call.308 = call i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !510
  %add.43 = add i64 %pticast.28, 40, !dbg !510
  %itpcast.12 = inttoptr i64 %add.43 to i8*, !dbg !510
  %call.309 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.12, i64 %call.308), !dbg !510
  %add.44 = add i64 %pticast.28, 56, !dbg !510
  %itpcast.13 = inttoptr i64 %add.44 to i8*, !dbg !510
  %call.310 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.13, i64 %call.309), !dbg !510
  call void @llvm.dbg.value(metadata i64 %call.310, metadata !512, metadata !DIExpression()), !dbg !510
  ret i64 %call.310, !dbg !510
}

define i8 @command_line_arguments.command_line_arguments.Text..eq(i8* nest nocapture readnone %nest.96, i8* readonly %key1, i8* readonly %key2) #0 !dbg !513 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !514, metadata !DIExpression()), !dbg !515
  call void @llvm.dbg.value(metadata i8* %key2, metadata !516, metadata !DIExpression()), !dbg !515
  call void @llvm.dbg.value(metadata i8 0, metadata !517, metadata !DIExpression()), !dbg !515
  %icmp.919 = icmp eq i8* %key1, null, !dbg !515
  br i1 %icmp.919, label %then.748, label %else.748

then.748:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !515
  unreachable

else.748:                                         ; preds = %entry
  %icmp.920 = icmp eq i8* %key2, null, !dbg !515
  br i1 %icmp.920, label %then.749, label %else.749

then.749:                                         ; preds = %else.748
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !515
  unreachable

else.749:                                         ; preds = %else.748
  %tmpv.1364.sroa.6.0.cast.3280.sroa_idx17 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !515
  %0 = bitcast i8* %tmpv.1364.sroa.6.0.cast.3280.sroa_idx17 to i64*, !dbg !515
  %tmpv.1364.sroa.6.0.copyload18 = load i64, i64* %0, align 8, !dbg !515
  %tmpv.1364.sroa.5.0.cast.3280.sroa_idx15 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !515
  %tmpv.1364.sroa.5.0.cast.3280.sroa_cast = bitcast i8* %tmpv.1364.sroa.5.0.cast.3280.sroa_idx15 to i64*, !dbg !515
  %tmpv.1364.sroa.5.0.copyload16 = load i64, i64* %tmpv.1364.sroa.5.0.cast.3280.sroa_cast, align 8, !dbg !515
  %tmpv.1364.sroa.4.0.cast.3280.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !515
  %1 = bitcast i8* %tmpv.1364.sroa.4.0.cast.3280.sroa_idx13 to i64*, !dbg !515
  %tmpv.1364.sroa.4.0.copyload14 = load i64, i64* %1, align 8, !dbg !515
  %tmpv.1364.sroa.3.0.cast.3280.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !515
  %2 = bitcast i8* %tmpv.1364.sroa.3.0.cast.3280.sroa_idx11 to i64*, !dbg !515
  %tmpv.1364.sroa.3.0.copyload12 = load i64, i64* %2, align 8, !dbg !515
  %tmpv.1364.sroa.0.0.cast.3280.sroa_idx = bitcast i8* %key1 to i64*, !dbg !515
  %tmpv.1364.sroa.0.0.copyload10 = load i64, i64* %tmpv.1364.sroa.0.0.cast.3280.sroa_idx, align 8, !dbg !515
  %tmpv.1365.sroa.0.0.cast.3283.sroa_idx = bitcast i8* %key2 to i64*, !dbg !515
  %tmpv.1365.sroa.0.0.copyload1 = load i64, i64* %tmpv.1365.sroa.0.0.cast.3283.sroa_idx, align 8, !dbg !515
  %tmpv.1365.sroa.3.0.cast.3283.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !515
  %3 = bitcast i8* %tmpv.1365.sroa.3.0.cast.3283.sroa_idx2 to i64*, !dbg !515
  %tmpv.1365.sroa.3.0.copyload3 = load i64, i64* %3, align 8, !dbg !515
  %tmpv.1365.sroa.4.0.cast.3283.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !515
  %4 = bitcast i8* %tmpv.1365.sroa.4.0.cast.3283.sroa_idx4 to i64*, !dbg !515
  %tmpv.1365.sroa.4.0.copyload5 = load i64, i64* %4, align 8, !dbg !515
  %tmpv.1365.sroa.5.0.cast.3283.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !515
  %tmpv.1365.sroa.5.0.cast.3283.sroa_cast = bitcast i8* %tmpv.1365.sroa.5.0.cast.3283.sroa_idx6 to i64*, !dbg !515
  %tmpv.1365.sroa.5.0.copyload7 = load i64, i64* %tmpv.1365.sroa.5.0.cast.3283.sroa_cast, align 8, !dbg !515
  %tmpv.1365.sroa.6.0.cast.3283.sroa_idx8 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !515
  %5 = bitcast i8* %tmpv.1365.sroa.6.0.cast.3283.sroa_idx8 to i64*, !dbg !515
  %tmpv.1365.sroa.6.0.copyload9 = load i64, i64* %5, align 8, !dbg !515
  %icmp.921 = icmp eq i64 %tmpv.1364.sroa.0.0.copyload10, %tmpv.1365.sroa.0.0.copyload1, !dbg !515
  %icmp.922 = icmp eq i64 %tmpv.1364.sroa.3.0.copyload12, %tmpv.1365.sroa.3.0.copyload3, !dbg !515
  %iand.922 = and i1 %icmp.921, %icmp.922, !dbg !515
  %icmp.923 = icmp eq i64 %tmpv.1364.sroa.4.0.copyload14, %tmpv.1365.sroa.4.0.copyload5, !dbg !515
  %iand.1023 = and i1 %iand.922, %icmp.923, !dbg !515
  %call.311 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.1364.sroa.5.0.copyload16, i64 %tmpv.1364.sroa.6.0.copyload18, i64 %tmpv.1365.sroa.5.0.copyload7, i64 %tmpv.1365.sroa.6.0.copyload9), !dbg !515
  %icmp.924 = icmp eq i8 %call.311, 1, !dbg !515
  %iand.1124 = and i1 %iand.1023, %icmp.924, !dbg !515
  br i1 %iand.1124, label %else.752, label %then.750

then.750:                                         ; preds = %else.752, %else.749
  call void @llvm.dbg.value(metadata i8 0, metadata !517, metadata !DIExpression()), !dbg !515
  ret i8 0, !dbg !515

else.752:                                         ; preds = %else.749
  %field.1017 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !515
  %field.1018 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !515
  %field0.203 = bitcast i8* %field.1017 to i64*, !dbg !515
  %ld.365 = load i64, i64* %field0.203, align 8, !dbg !515
  %field1.203 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !515
  %6 = bitcast i8* %field1.203 to i64*, !dbg !515
  %ld.366 = load i64, i64* %6, align 8, !dbg !515
  %field0.204 = bitcast i8* %field.1018 to i64*, !dbg !515
  %ld.367 = load i64, i64* %field0.204, align 8, !dbg !515
  %field1.204 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !515
  %7 = bitcast i8* %field1.204 to i64*, !dbg !515
  %ld.368 = load i64, i64* %7, align 8, !dbg !515
  %call.312 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.365, i64 %ld.366, i64 %ld.367, i64 %ld.368), !dbg !515
  %icmp.928 = icmp eq i8 %call.312, 1, !dbg !515
  br i1 %icmp.928, label %else.755, label %then.750

else.755:                                         ; preds = %else.752
  %8 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !515
  %.field.ld.194 = load i8, i8* %8, align 1, !dbg !515
  %9 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !515
  %.field.ld.195 = load i8, i8* %9, align 1, !dbg !515
  %icmp.931 = icmp eq i8 %.field.ld.194, %.field.ld.195, !dbg !515
  %spec.select = zext i1 %icmp.931 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.Text.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.10, i8* nest nocapture readnone %nest.73, %Text.0* readonly %"$this3") #0 !dbg !518 {
entry:
  call void @llvm.dbg.value(metadata %Text.0* %"$this3", metadata !521, metadata !DIExpression()), !dbg !522
  %icmp.855 = icmp eq %Text.0* %"$this3", null, !dbg !523
  br i1 %icmp.855, label %then.692, label %command_line_arguments.SourcePosition.Pos.exit

then.692:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !523
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Text.0* %"$this3", metadata !360, metadata !DIExpression()), !dbg !524
  %cast.63.i = bitcast %Text.0* %"$this3" to i8*, !dbg !526
  %cast.3040 = bitcast %SourcePosition.0* %sret.formal.10 to i8*, !dbg !523
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3040, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !523
  ret void, !dbg !523
}

define internal fastcc %Block.0* @command_line_arguments.newBlock() unnamed_addr #0 !dbg !527 {
entry:
  %tmpv.26 = alloca %IPST.2, align 8
  %sret.actual.1 = alloca %IPST.2, align 8
  %tmpv.29 = alloca %IPST.1, align 8
  call void @llvm.dbg.value(metadata %Block.0* null, metadata !530, metadata !DIExpression()), !dbg !531
  %call.6 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Block..d, i64 0, i32 0)), !dbg !532
  %cast.217 = bitcast i8* %call.6 to %Block.0*, !dbg !532
  call void @llvm.dbg.value(metadata %Block.0* %cast.217, metadata !534, metadata !DIExpression()), !dbg !535
  call void @runtime.makeslice(%IPST.2* nonnull sret %sret.actual.1, i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i64 0, i32 0), i64 0, i64 0), !dbg !536
  %cast.219 = bitcast %IPST.2* %tmpv.26 to i8*
  %cast.220 = bitcast %IPST.2* %sret.actual.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.219, i8* nonnull align 8 %cast.220, i64 24, i1 false)
  %icmp.20 = icmp eq i8* %call.6, null, !dbg !537
  br i1 %icmp.20, label %then.18, label %else.18

then.18:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !537
  unreachable

else.18:                                          ; preds = %entry
  %field.9 = getelementptr inbounds i8, i8* %call.6, i64 40, !dbg !537
  %cast.223 = bitcast %IPST.1* %tmpv.29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.223, i8* nonnull align 8 %cast.219, i64 24, i1 false)
  %runtime.writeBarrier.ld.5 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !538
  %icmp.22 = icmp eq i32 %runtime.writeBarrier.ld.5, 0, !dbg !538
  br i1 %icmp.22, label %else.20, label %else.19

fallthrough.19:                                   ; preds = %else.19, %else.20
  call void @llvm.dbg.value(metadata %Block.0* %cast.217, metadata !530, metadata !DIExpression()), !dbg !531
  ret %Block.0* %cast.217, !dbg !539

else.19:                                          ; preds = %else.18
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Node, i64 0, i32 0), i8* nonnull %field.9, i8* nonnull %cast.223), !dbg !538
  br label %fallthrough.19

else.20:                                          ; preds = %else.18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.9, i8* nonnull align 8 %cast.223, i64 24, i1 false), !dbg !538
  br label %fallthrough.19
}

declare void @runtime.makeslice(%IPST.2*, i8*, %_type.0*, i64, i64) local_unnamed_addr #0

declare void @runtime.growslice(%IPST.2*, i8*, %_type.0*, %IPST.2*, i64) local_unnamed_addr #0

declare i64 @runtime.typedslicecopy(i8*, %_type.0*, %IPST.2*, %IPST.2*) local_unnamed_addr #0

declare { i64, i8 } @runtime.ifaceI2T2P(i8*, %_type.0*, i64, i64) local_unnamed_addr #0

define i8 @command_line_arguments.NamedBlock.CanInline..stub(i8* nest nocapture readnone %nest.74, %NamedBlock.0* readonly %"$this4") #0 !dbg !540 {
entry:
  call void @llvm.dbg.value(metadata %NamedBlock.0* %"$this4", metadata !549, metadata !DIExpression()), !dbg !550
  call void @llvm.dbg.value(metadata i8 0, metadata !551, metadata !DIExpression()), !dbg !552
  %icmp.856 = icmp eq %NamedBlock.0* %"$this4", null, !dbg !553
  br i1 %icmp.856, label %then.693, label %else.693

then.693:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !553
  unreachable

else.693:                                         ; preds = %entry
  %field.922 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %"$this4", i64 0, i32 0, !dbg !553
  %call.274 = call i8 @command_line_arguments.Block.CanInline(i8* nest undef, %Block.0* nonnull %field.922), !dbg !553
  call void @llvm.dbg.value(metadata i8 %call.274, metadata !551, metadata !DIExpression()), !dbg !552
  ret i8 %call.274, !dbg !553
}

define void @command_line_arguments.NamedBlock.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.11, i8* nest nocapture readnone %nest.75, %NamedBlock.0* readonly %"$this5") #0 !dbg !554 {
entry:
  call void @llvm.dbg.value(metadata %NamedBlock.0* %"$this5", metadata !557, metadata !DIExpression()), !dbg !558
  %icmp.857 = icmp eq %NamedBlock.0* %"$this5", null, !dbg !559
  br i1 %icmp.857, label %then.694, label %command_line_arguments.SourcePosition.Pos.exit

then.694:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !559
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %NamedBlock.0* %"$this5", metadata !360, metadata !DIExpression()), !dbg !560
  %cast.63.i = bitcast %NamedBlock.0* %"$this5" to i8*, !dbg !562
  %cast.3050 = bitcast %SourcePosition.0* %sret.formal.11 to i8*, !dbg !559
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3050, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !559
  ret void, !dbg !559
}

define void @command_line_arguments.NamedBlock.push..stub(i8* nest nocapture readnone %nest.77, %NamedBlock.0* %"$this8", i64 %"$p9.chunk0", i64 %"$p9.chunk1") #0 !dbg !563 {
entry:
  call void @llvm.dbg.value(metadata %NamedBlock.0* %"$this8", metadata !566, metadata !DIExpression()), !dbg !567
  call void @llvm.dbg.value(metadata i64 %"$p9.chunk0", metadata !568, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !569
  call void @llvm.dbg.value(metadata i64 %"$p9.chunk1", metadata !568, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !569
  %icmp.859 = icmp eq %NamedBlock.0* %"$this8", null, !dbg !570
  br i1 %icmp.859, label %then.696, label %else.696

then.696:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !570
  unreachable

else.696:                                         ; preds = %entry
  %field.926 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %"$this8", i64 0, i32 0, !dbg !570
  call void @command_line_arguments.Block.push(i8* nest undef, %Block.0* nonnull %field.926, i64 %"$p9.chunk0", i64 %"$p9.chunk1"), !dbg !570
  ret void
}

define void @command_line_arguments.NamedBlock.pushFront..stub(i8* nest nocapture readnone %nest.76, %NamedBlock.0* %"$this6", i64 %"$p7.chunk0", i64 %"$p7.chunk1") #0 !dbg !571 {
entry:
  call void @llvm.dbg.value(metadata %NamedBlock.0* %"$this6", metadata !572, metadata !DIExpression()), !dbg !573
  call void @llvm.dbg.value(metadata i64 %"$p7.chunk0", metadata !574, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !575
  call void @llvm.dbg.value(metadata i64 %"$p7.chunk1", metadata !574, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !575
  %icmp.858 = icmp eq %NamedBlock.0* %"$this6", null, !dbg !576
  br i1 %icmp.858, label %then.695, label %else.695

then.695:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !576
  unreachable

else.695:                                         ; preds = %entry
  %field.925 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %"$this6", i64 0, i32 0, !dbg !576
  call void @command_line_arguments.Block.pushFront(i8* nest undef, %Block.0* nonnull %field.925, i64 %"$p7.chunk0", i64 %"$p7.chunk1"), !dbg !576
  ret void
}

define i64 @command_line_arguments.command_line_arguments.Attribute..hash(i8* nest nocapture readnone %nest.97, i8* %key, i64 %seed) #0 !dbg !577 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !578, metadata !DIExpression()), !dbg !579
  call void @llvm.dbg.value(metadata i64 %seed, metadata !580, metadata !DIExpression()), !dbg !579
  call void @llvm.dbg.value(metadata i64 0, metadata !581, metadata !DIExpression()), !dbg !579
  %pticast.29 = ptrtoint i8* %key to i64, !dbg !579
  %call.313 = call i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !579
  %add.46 = add i64 %pticast.29, 40, !dbg !579
  %itpcast.15 = inttoptr i64 %add.46 to i8*, !dbg !579
  %call.314 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.15, i64 %call.313), !dbg !579
  %add.47 = add i64 %pticast.29, 56, !dbg !579
  %itpcast.16 = inttoptr i64 %add.47 to i8*, !dbg !579
  %call.315 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.16, i64 %call.314), !dbg !579
  %add.48 = add i64 %pticast.29, 72, !dbg !579
  %itpcast.17 = inttoptr i64 %add.48 to i8*, !dbg !579
  %call.316 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.17, i64 %call.315), !dbg !579
  %add.49 = add i64 %pticast.29, 80, !dbg !579
  %itpcast.18 = inttoptr i64 %add.49 to i8*, !dbg !579
  %call.317 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.18, i64 %call.316), !dbg !579
  call void @llvm.dbg.value(metadata i64 %call.317, metadata !581, metadata !DIExpression()), !dbg !579
  ret i64 %call.317, !dbg !579
}

define i8 @command_line_arguments.command_line_arguments.Attribute..eq(i8* nest nocapture readnone %nest.98, i8* readonly %key1, i8* readonly %key2) #0 !dbg !582 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !583, metadata !DIExpression()), !dbg !584
  call void @llvm.dbg.value(metadata i8* %key2, metadata !585, metadata !DIExpression()), !dbg !584
  call void @llvm.dbg.value(metadata i8 0, metadata !586, metadata !DIExpression()), !dbg !584
  %icmp.932 = icmp eq i8* %key1, null, !dbg !584
  br i1 %icmp.932, label %then.757, label %else.757

then.757:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !584
  unreachable

else.757:                                         ; preds = %entry
  %icmp.933 = icmp eq i8* %key2, null, !dbg !584
  br i1 %icmp.933, label %then.758, label %else.758

then.758:                                         ; preds = %else.757
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !584
  unreachable

else.758:                                         ; preds = %else.757
  %tmpv.1376.sroa.6.0.cast.3300.sroa_idx17 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !584
  %0 = bitcast i8* %tmpv.1376.sroa.6.0.cast.3300.sroa_idx17 to i64*, !dbg !584
  %tmpv.1376.sroa.6.0.copyload18 = load i64, i64* %0, align 8, !dbg !584
  %tmpv.1376.sroa.5.0.cast.3300.sroa_idx15 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !584
  %tmpv.1376.sroa.5.0.cast.3300.sroa_cast = bitcast i8* %tmpv.1376.sroa.5.0.cast.3300.sroa_idx15 to i64*, !dbg !584
  %tmpv.1376.sroa.5.0.copyload16 = load i64, i64* %tmpv.1376.sroa.5.0.cast.3300.sroa_cast, align 8, !dbg !584
  %tmpv.1376.sroa.4.0.cast.3300.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !584
  %1 = bitcast i8* %tmpv.1376.sroa.4.0.cast.3300.sroa_idx13 to i64*, !dbg !584
  %tmpv.1376.sroa.4.0.copyload14 = load i64, i64* %1, align 8, !dbg !584
  %tmpv.1376.sroa.3.0.cast.3300.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !584
  %2 = bitcast i8* %tmpv.1376.sroa.3.0.cast.3300.sroa_idx11 to i64*, !dbg !584
  %tmpv.1376.sroa.3.0.copyload12 = load i64, i64* %2, align 8, !dbg !584
  %tmpv.1376.sroa.0.0.cast.3300.sroa_idx = bitcast i8* %key1 to i64*, !dbg !584
  %tmpv.1376.sroa.0.0.copyload10 = load i64, i64* %tmpv.1376.sroa.0.0.cast.3300.sroa_idx, align 8, !dbg !584
  %tmpv.1377.sroa.0.0.cast.3303.sroa_idx = bitcast i8* %key2 to i64*, !dbg !584
  %tmpv.1377.sroa.0.0.copyload1 = load i64, i64* %tmpv.1377.sroa.0.0.cast.3303.sroa_idx, align 8, !dbg !584
  %tmpv.1377.sroa.3.0.cast.3303.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !584
  %3 = bitcast i8* %tmpv.1377.sroa.3.0.cast.3303.sroa_idx2 to i64*, !dbg !584
  %tmpv.1377.sroa.3.0.copyload3 = load i64, i64* %3, align 8, !dbg !584
  %tmpv.1377.sroa.4.0.cast.3303.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !584
  %4 = bitcast i8* %tmpv.1377.sroa.4.0.cast.3303.sroa_idx4 to i64*, !dbg !584
  %tmpv.1377.sroa.4.0.copyload5 = load i64, i64* %4, align 8, !dbg !584
  %tmpv.1377.sroa.5.0.cast.3303.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !584
  %tmpv.1377.sroa.5.0.cast.3303.sroa_cast = bitcast i8* %tmpv.1377.sroa.5.0.cast.3303.sroa_idx6 to i64*, !dbg !584
  %tmpv.1377.sroa.5.0.copyload7 = load i64, i64* %tmpv.1377.sroa.5.0.cast.3303.sroa_cast, align 8, !dbg !584
  %tmpv.1377.sroa.6.0.cast.3303.sroa_idx8 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !584
  %5 = bitcast i8* %tmpv.1377.sroa.6.0.cast.3303.sroa_idx8 to i64*, !dbg !584
  %tmpv.1377.sroa.6.0.copyload9 = load i64, i64* %5, align 8, !dbg !584
  %icmp.934 = icmp eq i64 %tmpv.1376.sroa.0.0.copyload10, %tmpv.1377.sroa.0.0.copyload1, !dbg !584
  %icmp.935 = icmp eq i64 %tmpv.1376.sroa.3.0.copyload12, %tmpv.1377.sroa.3.0.copyload3, !dbg !584
  %iand.1324 = and i1 %icmp.934, %icmp.935, !dbg !584
  %icmp.936 = icmp eq i64 %tmpv.1376.sroa.4.0.copyload14, %tmpv.1377.sroa.4.0.copyload5, !dbg !584
  %iand.1425 = and i1 %iand.1324, %icmp.936, !dbg !584
  %call.318 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.1376.sroa.5.0.copyload16, i64 %tmpv.1376.sroa.6.0.copyload18, i64 %tmpv.1377.sroa.5.0.copyload7, i64 %tmpv.1377.sroa.6.0.copyload9), !dbg !584
  %icmp.937 = icmp eq i8 %call.318, 1, !dbg !584
  %iand.1526 = and i1 %iand.1425, %icmp.937, !dbg !584
  br i1 %iand.1526, label %else.761, label %then.759

then.759:                                         ; preds = %else.767, %else.764, %else.761, %else.758
  call void @llvm.dbg.value(metadata i8 0, metadata !586, metadata !DIExpression()), !dbg !584
  ret i8 0, !dbg !584

else.761:                                         ; preds = %else.758
  %field.1031 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !584
  %field.1032 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !584
  %field0.207 = bitcast i8* %field.1031 to i64*, !dbg !584
  %ld.373 = load i64, i64* %field0.207, align 8, !dbg !584
  %field1.207 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !584
  %6 = bitcast i8* %field1.207 to i64*, !dbg !584
  %ld.374 = load i64, i64* %6, align 8, !dbg !584
  %field0.208 = bitcast i8* %field.1032 to i64*, !dbg !584
  %ld.375 = load i64, i64* %field0.208, align 8, !dbg !584
  %field1.208 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !584
  %7 = bitcast i8* %field1.208 to i64*, !dbg !584
  %ld.376 = load i64, i64* %7, align 8, !dbg !584
  %call.319 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.373, i64 %ld.374, i64 %ld.375, i64 %ld.376), !dbg !584
  %icmp.941 = icmp eq i8 %call.319, 1, !dbg !584
  br i1 %icmp.941, label %else.764, label %then.759

else.764:                                         ; preds = %else.761
  %field.1033 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !584
  %field.1034 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !584
  %field0.209 = bitcast i8* %field.1033 to i64*, !dbg !584
  %ld.377 = load i64, i64* %field0.209, align 8, !dbg !584
  %field1.209 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !584
  %8 = bitcast i8* %field1.209 to i64*, !dbg !584
  %ld.378 = load i64, i64* %8, align 8, !dbg !584
  %field0.210 = bitcast i8* %field.1034 to i64*, !dbg !584
  %ld.379 = load i64, i64* %field0.210, align 8, !dbg !584
  %field1.210 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !584
  %9 = bitcast i8* %field1.210 to i64*, !dbg !584
  %ld.380 = load i64, i64* %9, align 8, !dbg !584
  %call.320 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.377, i64 %ld.378, i64 %ld.379, i64 %ld.380), !dbg !584
  %icmp.944 = icmp eq i8 %call.320, 1, !dbg !584
  br i1 %icmp.944, label %else.767, label %then.759

else.767:                                         ; preds = %else.764
  %10 = getelementptr inbounds i8, i8* %key1, i64 72, !dbg !584
  %.field.ld.196 = load i8, i8* %10, align 1, !dbg !584
  %11 = getelementptr inbounds i8, i8* %key2, i64 72, !dbg !584
  %.field.ld.197 = load i8, i8* %11, align 1, !dbg !584
  %icmp.947 = icmp eq i8 %.field.ld.196, %.field.ld.197, !dbg !584
  br i1 %icmp.947, label %else.770, label %then.759

else.770:                                         ; preds = %else.767
  %field.1037 = getelementptr inbounds i8, i8* %key1, i64 80, !dbg !584
  %field.1038 = getelementptr inbounds i8, i8* %key2, i64 80, !dbg !584
  %field0.211 = bitcast i8* %field.1037 to i64*, !dbg !584
  %ld.381 = load i64, i64* %field0.211, align 8, !dbg !584
  %field1.211 = getelementptr inbounds i8, i8* %key1, i64 88, !dbg !584
  %12 = bitcast i8* %field1.211 to i64*, !dbg !584
  %ld.382 = load i64, i64* %12, align 8, !dbg !584
  %field0.212 = bitcast i8* %field.1038 to i64*, !dbg !584
  %ld.383 = load i64, i64* %field0.212, align 8, !dbg !584
  %field1.212 = getelementptr inbounds i8, i8* %key2, i64 88, !dbg !584
  %13 = bitcast i8* %field1.212 to i64*, !dbg !584
  %ld.384 = load i64, i64* %13, align 8, !dbg !584
  %call.321 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.381, i64 %ld.382, i64 %ld.383, i64 %ld.384), !dbg !584
  %icmp.950 = icmp eq i8 %call.321, 1, !dbg !584
  %spec.select = zext i1 %icmp.950 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.Attribute.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.12, i8* nest nocapture readnone %nest.78, %Attribute.0* readonly %"$this10") #0 !dbg !587 {
entry:
  call void @llvm.dbg.value(metadata %Attribute.0* %"$this10", metadata !598, metadata !DIExpression()), !dbg !599
  %icmp.860 = icmp eq %Attribute.0* %"$this10", null, !dbg !600
  br i1 %icmp.860, label %then.697, label %command_line_arguments.SourcePosition.Pos.exit

then.697:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !600
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Attribute.0* %"$this10", metadata !360, metadata !DIExpression()), !dbg !601
  %cast.63.i = bitcast %Attribute.0* %"$this10" to i8*, !dbg !603
  %cast.3065 = bitcast %SourcePosition.0* %sret.formal.12 to i8*, !dbg !600
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3065, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !600
  ret void, !dbg !600
}

define i8 @command_line_arguments.Tag.IsRawText(i8* nest nocapture readnone %nest.13, %Tag.0* readonly %t) #0 !dbg !604 {
entry:
  call void @llvm.dbg.value(metadata %Tag.0* %t, metadata !618, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i8 0, metadata !620, metadata !DIExpression()), !dbg !621
  %icmp.83 = icmp eq %Tag.0* %t, null, !dbg !622
  br i1 %icmp.83, label %then.69, label %else.69

then.69:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !622
  unreachable

else.69:                                          ; preds = %entry
  %field.66 = getelementptr inbounds %Tag.0, %Tag.0* %t, i64 0, i32 2, !dbg !622
  %field0.10 = bitcast { i8*, i64 }* %field.66 to i64*, !dbg !623
  %ld.8 = load i64, i64* %field0.10, align 8, !dbg !623
  %0 = getelementptr inbounds %Tag.0, %Tag.0* %t, i64 0, i32 2, i32 1, !dbg !623
  %ld.9 = load i64, i64* %0, align 8, !dbg !623
  %call.13 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.8, i64 %ld.9, i64 ptrtoint ([6 x i8]* @const.149 to i64), i64 5), !dbg !623
  %icmp.84 = icmp eq i8 %call.13, 1, !dbg !623
  br i1 %icmp.84, label %fallthrough.70, label %else.71

fallthrough.70:                                   ; preds = %else.69, %else.71
  %tmpv.108.0.in = phi i8 [ %phitmp, %else.71 ], [ 1, %else.69 ]
  call void @llvm.dbg.value(metadata i8 %tmpv.108.0.in, metadata !620, metadata !DIExpression()), !dbg !621
  ret i8 %tmpv.108.0.in, !dbg !624

else.71:                                          ; preds = %else.69
  %ld.12 = load i64, i64* %field0.10, align 8, !dbg !625
  %ld.13 = load i64, i64* %0, align 8, !dbg !625
  %call.14 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.12, i64 %ld.13, i64 ptrtoint ([7 x i8]* @const.151 to i64), i64 6), !dbg !625
  %icmp.86 = icmp eq i8 %call.14, 1, !dbg !625
  %phitmp = zext i1 %icmp.86 to i8
  br label %fallthrough.70
}

define i8 @command_line_arguments.Tag.IsSelfClosing(i8* nest nocapture readnone %nest.12, %Tag.0* readonly %t) #0 !dbg !626 {
entry:
  %tmpv.103 = alloca [10 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Tag.0* %t, metadata !627, metadata !DIExpression()), !dbg !628
  call void @llvm.dbg.value(metadata i8 0, metadata !629, metadata !DIExpression()), !dbg !630
  %cast.446 = bitcast [10 x { i8*, i64 }]* %tmpv.103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.446, i8* align 16 bitcast ([10 x { i8*, i64 }]* @command_line_arguments.selfClosingTags to i8*), i64 160, i1 false)
  %icmp.80 = icmp eq %Tag.0* %t, null
  %field.65 = getelementptr inbounds %Tag.0, %Tag.0* %t, i64 0, i32 2
  %field0.9 = bitcast { i8*, i64 }* %field.65 to i64*
  %0 = getelementptr inbounds %Tag.0, %Tag.0* %t, i64 0, i32 2, i32 1
  br label %else.65

label.0:                                          ; preds = %else.66
  %icmp.82 = icmp ult i64 %add.4, 10, !dbg !631
  br i1 %icmp.82, label %else.65, label %then.67

else.65:                                          ; preds = %label.0, %entry
  %tmpv.101.018 = phi i64 [ 0, %entry ], [ %add.4, %label.0 ]
  br i1 %icmp.80, label %then.66, label %else.66

then.66:                                          ; preds = %else.65
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !633
  unreachable

else.66:                                          ; preds = %else.65
  %tmpv.102.sroa.3.0.cast.449.sroa_idx15 = getelementptr [10 x { i8*, i64 }], [10 x { i8*, i64 }]* %tmpv.103, i64 0, i64 %tmpv.101.018, i32 1, !dbg !631
  %tmpv.102.sroa.3.0.copyload16 = load i64, i64* %tmpv.102.sroa.3.0.cast.449.sroa_idx15, align 8, !dbg !631
  call void @llvm.dbg.value(metadata i64 %tmpv.102.sroa.3.0.copyload16, metadata !634, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !635
  %index.4 = getelementptr [10 x { i8*, i64 }], [10 x { i8*, i64 }]* %tmpv.103, i64 0, i64 %tmpv.101.018, !dbg !631
  %tmpv.102.sroa.0.0.cast.449.sroa_cast = bitcast { i8*, i64 }* %index.4 to i64*, !dbg !631
  %tmpv.102.sroa.0.0.copyload14 = load i64, i64* %tmpv.102.sroa.0.0.cast.449.sroa_cast, align 8, !dbg !631
  call void @llvm.dbg.value(metadata i64 %tmpv.102.sroa.0.0.copyload14, metadata !634, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !635
  %ld.6 = load i64, i64* %field0.9, align 8, !dbg !636
  %ld.7 = load i64, i64* %0, align 8, !dbg !636
  %call.12 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.102.sroa.0.0.copyload14, i64 %tmpv.102.sroa.3.0.copyload16, i64 %ld.6, i64 %ld.7), !dbg !636
  %icmp.81 = icmp eq i8 %call.12, 1, !dbg !636
  %add.4 = add nuw nsw i64 %tmpv.101.018, 1, !dbg !631
  br i1 %icmp.81, label %then.67, label %label.0

then.67:                                          ; preds = %label.0, %else.66
  %merge = phi i8 [ 1, %else.66 ], [ 0, %label.0 ]
  call void @llvm.dbg.value(metadata i8 1, metadata !629, metadata !DIExpression()), !dbg !630
  ret i8 %merge, !dbg !637
}

define void @command_line_arguments.Tag.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.13, i8* nest nocapture readnone %nest.79, %Tag.0* readonly %"$this11") #0 !dbg !638 {
entry:
  call void @llvm.dbg.value(metadata %Tag.0* %"$this11", metadata !641, metadata !DIExpression()), !dbg !642
  %icmp.861 = icmp eq %Tag.0* %"$this11", null, !dbg !643
  br i1 %icmp.861, label %then.698, label %command_line_arguments.SourcePosition.Pos.exit

then.698:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !643
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Tag.0* %"$this11", metadata !360, metadata !DIExpression()), !dbg !644
  %cast.63.i = bitcast %Tag.0* %"$this11" to i8*, !dbg !646
  %cast.3074 = bitcast %SourcePosition.0* %sret.formal.13 to i8*, !dbg !643
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3074, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !643
  ret void, !dbg !643
}

declare i8 @runtime.eqstring(i8*, i64, i64, i64, i64) local_unnamed_addr #0

define i64 @command_line_arguments.command_line_arguments.Condition..hash(i8* nest nocapture readnone %nest.99, i8* %key, i64 %seed) #0 !dbg !647 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !648, metadata !DIExpression()), !dbg !649
  call void @llvm.dbg.value(metadata i64 %seed, metadata !650, metadata !DIExpression()), !dbg !649
  call void @llvm.dbg.value(metadata i64 0, metadata !651, metadata !DIExpression()), !dbg !649
  %pticast.30 = ptrtoint i8* %key to i64, !dbg !649
  %call.322 = call i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !649
  %add.51 = add i64 %pticast.30, 40, !dbg !649
  %itpcast.20 = inttoptr i64 %add.51 to i8*, !dbg !649
  %call.323 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.20, i64 %call.322), !dbg !649
  %add.52 = add i64 %pticast.30, 48, !dbg !649
  %itpcast.21 = inttoptr i64 %add.52 to i8*, !dbg !649
  %call.324 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.21, i64 %call.323), !dbg !649
  %add.53 = add i64 %pticast.30, 56, !dbg !649
  %itpcast.22 = inttoptr i64 %add.53 to i8*, !dbg !649
  %call.325 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.22, i64 %call.324), !dbg !649
  call void @llvm.dbg.value(metadata i64 %call.325, metadata !651, metadata !DIExpression()), !dbg !649
  ret i64 %call.325, !dbg !649
}

define i8 @command_line_arguments.command_line_arguments.Condition..eq(i8* nest nocapture readnone %nest.100, i8* readonly %key1, i8* readonly %key2) #0 !dbg !652 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !653, metadata !DIExpression()), !dbg !654
  call void @llvm.dbg.value(metadata i8* %key2, metadata !655, metadata !DIExpression()), !dbg !654
  call void @llvm.dbg.value(metadata i8 0, metadata !656, metadata !DIExpression()), !dbg !654
  %icmp.951 = icmp eq i8* %key1, null, !dbg !654
  br i1 %icmp.951, label %then.772, label %else.772

then.772:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !654
  unreachable

else.772:                                         ; preds = %entry
  %icmp.952 = icmp eq i8* %key2, null, !dbg !654
  br i1 %icmp.952, label %then.773, label %else.773

then.773:                                         ; preds = %else.772
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !654
  unreachable

else.773:                                         ; preds = %else.772
  %tmpv.1392.sroa.6.0.cast.3328.sroa_idx17 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !654
  %0 = bitcast i8* %tmpv.1392.sroa.6.0.cast.3328.sroa_idx17 to i64*, !dbg !654
  %tmpv.1392.sroa.6.0.copyload18 = load i64, i64* %0, align 8, !dbg !654
  %tmpv.1392.sroa.5.0.cast.3328.sroa_idx15 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !654
  %tmpv.1392.sroa.5.0.cast.3328.sroa_cast = bitcast i8* %tmpv.1392.sroa.5.0.cast.3328.sroa_idx15 to i64*, !dbg !654
  %tmpv.1392.sroa.5.0.copyload16 = load i64, i64* %tmpv.1392.sroa.5.0.cast.3328.sroa_cast, align 8, !dbg !654
  %tmpv.1392.sroa.4.0.cast.3328.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !654
  %1 = bitcast i8* %tmpv.1392.sroa.4.0.cast.3328.sroa_idx13 to i64*, !dbg !654
  %tmpv.1392.sroa.4.0.copyload14 = load i64, i64* %1, align 8, !dbg !654
  %tmpv.1392.sroa.3.0.cast.3328.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !654
  %2 = bitcast i8* %tmpv.1392.sroa.3.0.cast.3328.sroa_idx11 to i64*, !dbg !654
  %tmpv.1392.sroa.3.0.copyload12 = load i64, i64* %2, align 8, !dbg !654
  %tmpv.1392.sroa.0.0.cast.3328.sroa_idx = bitcast i8* %key1 to i64*, !dbg !654
  %tmpv.1392.sroa.0.0.copyload10 = load i64, i64* %tmpv.1392.sroa.0.0.cast.3328.sroa_idx, align 8, !dbg !654
  %tmpv.1393.sroa.0.0.cast.3331.sroa_idx = bitcast i8* %key2 to i64*, !dbg !654
  %tmpv.1393.sroa.0.0.copyload1 = load i64, i64* %tmpv.1393.sroa.0.0.cast.3331.sroa_idx, align 8, !dbg !654
  %tmpv.1393.sroa.3.0.cast.3331.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !654
  %3 = bitcast i8* %tmpv.1393.sroa.3.0.cast.3331.sroa_idx2 to i64*, !dbg !654
  %tmpv.1393.sroa.3.0.copyload3 = load i64, i64* %3, align 8, !dbg !654
  %tmpv.1393.sroa.4.0.cast.3331.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !654
  %4 = bitcast i8* %tmpv.1393.sroa.4.0.cast.3331.sroa_idx4 to i64*, !dbg !654
  %tmpv.1393.sroa.4.0.copyload5 = load i64, i64* %4, align 8, !dbg !654
  %tmpv.1393.sroa.5.0.cast.3331.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !654
  %tmpv.1393.sroa.5.0.cast.3331.sroa_cast = bitcast i8* %tmpv.1393.sroa.5.0.cast.3331.sroa_idx6 to i64*, !dbg !654
  %tmpv.1393.sroa.5.0.copyload7 = load i64, i64* %tmpv.1393.sroa.5.0.cast.3331.sroa_cast, align 8, !dbg !654
  %tmpv.1393.sroa.6.0.cast.3331.sroa_idx8 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !654
  %5 = bitcast i8* %tmpv.1393.sroa.6.0.cast.3331.sroa_idx8 to i64*, !dbg !654
  %tmpv.1393.sroa.6.0.copyload9 = load i64, i64* %5, align 8, !dbg !654
  %icmp.953 = icmp eq i64 %tmpv.1392.sroa.0.0.copyload10, %tmpv.1393.sroa.0.0.copyload1, !dbg !654
  %icmp.954 = icmp eq i64 %tmpv.1392.sroa.3.0.copyload12, %tmpv.1393.sroa.3.0.copyload3, !dbg !654
  %iand.1723 = and i1 %icmp.953, %icmp.954, !dbg !654
  %icmp.955 = icmp eq i64 %tmpv.1392.sroa.4.0.copyload14, %tmpv.1393.sroa.4.0.copyload5, !dbg !654
  %iand.1824 = and i1 %iand.1723, %icmp.955, !dbg !654
  %call.326 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.1392.sroa.5.0.copyload16, i64 %tmpv.1392.sroa.6.0.copyload18, i64 %tmpv.1393.sroa.5.0.copyload7, i64 %tmpv.1393.sroa.6.0.copyload9), !dbg !654
  %icmp.956 = icmp eq i8 %call.326, 1, !dbg !654
  %iand.1925 = and i1 %iand.1824, %icmp.956, !dbg !654
  br i1 %iand.1925, label %else.776, label %then.774

then.774:                                         ; preds = %else.779, %else.776, %else.773
  call void @llvm.dbg.value(metadata i8 0, metadata !656, metadata !DIExpression()), !dbg !654
  ret i8 0, !dbg !654

else.776:                                         ; preds = %else.773
  %field.1049 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !654
  %6 = bitcast i8* %field.1049 to %Block.0**, !dbg !654
  %.field.ld.198 = load %Block.0*, %Block.0** %6, align 8, !dbg !654
  %field.1050 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !654
  %7 = bitcast i8* %field.1050 to %Block.0**, !dbg !654
  %.field.ld.199 = load %Block.0*, %Block.0** %7, align 8, !dbg !654
  %icmp.960 = icmp eq %Block.0* %.field.ld.198, %.field.ld.199, !dbg !654
  br i1 %icmp.960, label %else.779, label %then.774

else.779:                                         ; preds = %else.776
  %field.1051 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !654
  %8 = bitcast i8* %field.1051 to %Block.0**, !dbg !654
  %.field.ld.200 = load %Block.0*, %Block.0** %8, align 8, !dbg !654
  %field.1052 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !654
  %9 = bitcast i8* %field.1052 to %Block.0**, !dbg !654
  %.field.ld.201 = load %Block.0*, %Block.0** %9, align 8, !dbg !654
  %icmp.963 = icmp eq %Block.0* %.field.ld.200, %.field.ld.201, !dbg !654
  br i1 %icmp.963, label %else.782, label %then.774

else.782:                                         ; preds = %else.779
  %field.1053 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !654
  %field.1054 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !654
  %field0.215 = bitcast i8* %field.1053 to i64*, !dbg !654
  %ld.389 = load i64, i64* %field0.215, align 8, !dbg !654
  %field1.215 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !654
  %10 = bitcast i8* %field1.215 to i64*, !dbg !654
  %ld.390 = load i64, i64* %10, align 8, !dbg !654
  %field0.216 = bitcast i8* %field.1054 to i64*, !dbg !654
  %ld.391 = load i64, i64* %field0.216, align 8, !dbg !654
  %field1.216 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !654
  %11 = bitcast i8* %field1.216 to i64*, !dbg !654
  %ld.392 = load i64, i64* %11, align 8, !dbg !654
  %call.327 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.389, i64 %ld.390, i64 %ld.391, i64 %ld.392), !dbg !654
  %icmp.966 = icmp eq i8 %call.327, 1, !dbg !654
  %spec.select = zext i1 %icmp.966 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.Condition.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.14, i8* nest nocapture readnone %nest.80, %Condition.0* readonly %"$this12") #0 !dbg !657 {
entry:
  call void @llvm.dbg.value(metadata %Condition.0* %"$this12", metadata !667, metadata !DIExpression()), !dbg !668
  %icmp.862 = icmp eq %Condition.0* %"$this12", null, !dbg !669
  br i1 %icmp.862, label %then.699, label %command_line_arguments.SourcePosition.Pos.exit

then.699:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !669
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Condition.0* %"$this12", metadata !360, metadata !DIExpression()), !dbg !670
  %cast.63.i = bitcast %Condition.0* %"$this12" to i8*, !dbg !672
  %cast.3083 = bitcast %SourcePosition.0* %sret.formal.14 to i8*, !dbg !669
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3083, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !669
  ret void, !dbg !669
}

define i64 @command_line_arguments.command_line_arguments.Each..hash(i8* nest nocapture readnone %nest.101, i8* %key, i64 %seed) #0 !dbg !673 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 %seed, metadata !676, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 0, metadata !677, metadata !DIExpression()), !dbg !675
  %pticast.31 = ptrtoint i8* %key to i64, !dbg !675
  %call.328 = call i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !675
  %add.55 = add i64 %pticast.31, 40, !dbg !675
  %itpcast.24 = inttoptr i64 %add.55 to i8*, !dbg !675
  %call.329 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.24, i64 %call.328), !dbg !675
  %add.56 = add i64 %pticast.31, 56, !dbg !675
  %itpcast.25 = inttoptr i64 %add.56 to i8*, !dbg !675
  %call.330 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.25, i64 %call.329), !dbg !675
  %add.57 = add i64 %pticast.31, 72, !dbg !675
  %itpcast.26 = inttoptr i64 %add.57 to i8*, !dbg !675
  %call.331 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.26, i64 %call.330), !dbg !675
  %add.58 = add i64 %pticast.31, 88, !dbg !675
  %itpcast.27 = inttoptr i64 %add.58 to i8*, !dbg !675
  %call.332 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.27, i64 %call.331), !dbg !675
  call void @llvm.dbg.value(metadata i64 %call.332, metadata !677, metadata !DIExpression()), !dbg !675
  ret i64 %call.332, !dbg !675
}

define i8 @command_line_arguments.command_line_arguments.Each..eq(i8* nest nocapture readnone %nest.102, i8* readonly %key1, i8* readonly %key2) #0 !dbg !678 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !679, metadata !DIExpression()), !dbg !680
  call void @llvm.dbg.value(metadata i8* %key2, metadata !681, metadata !DIExpression()), !dbg !680
  call void @llvm.dbg.value(metadata i8 0, metadata !682, metadata !DIExpression()), !dbg !680
  %icmp.967 = icmp eq i8* %key1, null, !dbg !680
  br i1 %icmp.967, label %then.784, label %else.784

then.784:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !680
  unreachable

else.784:                                         ; preds = %entry
  %icmp.968 = icmp eq i8* %key2, null, !dbg !680
  br i1 %icmp.968, label %then.785, label %else.785

then.785:                                         ; preds = %else.784
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !680
  unreachable

else.785:                                         ; preds = %else.784
  %tmpv.1406.sroa.6.0.cast.3350.sroa_idx17 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !680
  %0 = bitcast i8* %tmpv.1406.sroa.6.0.cast.3350.sroa_idx17 to i64*, !dbg !680
  %tmpv.1406.sroa.6.0.copyload18 = load i64, i64* %0, align 8, !dbg !680
  %tmpv.1406.sroa.5.0.cast.3350.sroa_idx15 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !680
  %tmpv.1406.sroa.5.0.cast.3350.sroa_cast = bitcast i8* %tmpv.1406.sroa.5.0.cast.3350.sroa_idx15 to i64*, !dbg !680
  %tmpv.1406.sroa.5.0.copyload16 = load i64, i64* %tmpv.1406.sroa.5.0.cast.3350.sroa_cast, align 8, !dbg !680
  %tmpv.1406.sroa.4.0.cast.3350.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !680
  %1 = bitcast i8* %tmpv.1406.sroa.4.0.cast.3350.sroa_idx13 to i64*, !dbg !680
  %tmpv.1406.sroa.4.0.copyload14 = load i64, i64* %1, align 8, !dbg !680
  %tmpv.1406.sroa.3.0.cast.3350.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !680
  %2 = bitcast i8* %tmpv.1406.sroa.3.0.cast.3350.sroa_idx11 to i64*, !dbg !680
  %tmpv.1406.sroa.3.0.copyload12 = load i64, i64* %2, align 8, !dbg !680
  %tmpv.1406.sroa.0.0.cast.3350.sroa_idx = bitcast i8* %key1 to i64*, !dbg !680
  %tmpv.1406.sroa.0.0.copyload10 = load i64, i64* %tmpv.1406.sroa.0.0.cast.3350.sroa_idx, align 8, !dbg !680
  %tmpv.1407.sroa.0.0.cast.3353.sroa_idx = bitcast i8* %key2 to i64*, !dbg !680
  %tmpv.1407.sroa.0.0.copyload1 = load i64, i64* %tmpv.1407.sroa.0.0.cast.3353.sroa_idx, align 8, !dbg !680
  %tmpv.1407.sroa.3.0.cast.3353.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !680
  %3 = bitcast i8* %tmpv.1407.sroa.3.0.cast.3353.sroa_idx2 to i64*, !dbg !680
  %tmpv.1407.sroa.3.0.copyload3 = load i64, i64* %3, align 8, !dbg !680
  %tmpv.1407.sroa.4.0.cast.3353.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !680
  %4 = bitcast i8* %tmpv.1407.sroa.4.0.cast.3353.sroa_idx4 to i64*, !dbg !680
  %tmpv.1407.sroa.4.0.copyload5 = load i64, i64* %4, align 8, !dbg !680
  %tmpv.1407.sroa.5.0.cast.3353.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !680
  %tmpv.1407.sroa.5.0.cast.3353.sroa_cast = bitcast i8* %tmpv.1407.sroa.5.0.cast.3353.sroa_idx6 to i64*, !dbg !680
  %tmpv.1407.sroa.5.0.copyload7 = load i64, i64* %tmpv.1407.sroa.5.0.cast.3353.sroa_cast, align 8, !dbg !680
  %tmpv.1407.sroa.6.0.cast.3353.sroa_idx8 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !680
  %5 = bitcast i8* %tmpv.1407.sroa.6.0.cast.3353.sroa_idx8 to i64*, !dbg !680
  %tmpv.1407.sroa.6.0.copyload9 = load i64, i64* %5, align 8, !dbg !680
  %icmp.969 = icmp eq i64 %tmpv.1406.sroa.0.0.copyload10, %tmpv.1407.sroa.0.0.copyload1, !dbg !680
  %icmp.970 = icmp eq i64 %tmpv.1406.sroa.3.0.copyload12, %tmpv.1407.sroa.3.0.copyload3, !dbg !680
  %iand.2124 = and i1 %icmp.969, %icmp.970, !dbg !680
  %icmp.971 = icmp eq i64 %tmpv.1406.sroa.4.0.copyload14, %tmpv.1407.sroa.4.0.copyload5, !dbg !680
  %iand.2225 = and i1 %iand.2124, %icmp.971, !dbg !680
  %call.333 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.1406.sroa.5.0.copyload16, i64 %tmpv.1406.sroa.6.0.copyload18, i64 %tmpv.1407.sroa.5.0.copyload7, i64 %tmpv.1407.sroa.6.0.copyload9), !dbg !680
  %icmp.972 = icmp eq i8 %call.333, 1, !dbg !680
  %iand.2326 = and i1 %iand.2225, %icmp.972, !dbg !680
  br i1 %iand.2326, label %else.788, label %then.786

then.786:                                         ; preds = %else.794, %else.791, %else.788, %else.785
  call void @llvm.dbg.value(metadata i8 0, metadata !682, metadata !DIExpression()), !dbg !680
  ret i8 0, !dbg !680

else.788:                                         ; preds = %else.785
  %field.1065 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !680
  %field.1066 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !680
  %field0.219 = bitcast i8* %field.1065 to i64*, !dbg !680
  %ld.397 = load i64, i64* %field0.219, align 8, !dbg !680
  %field1.219 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !680
  %6 = bitcast i8* %field1.219 to i64*, !dbg !680
  %ld.398 = load i64, i64* %6, align 8, !dbg !680
  %field0.220 = bitcast i8* %field.1066 to i64*, !dbg !680
  %ld.399 = load i64, i64* %field0.220, align 8, !dbg !680
  %field1.220 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !680
  %7 = bitcast i8* %field1.220 to i64*, !dbg !680
  %ld.400 = load i64, i64* %7, align 8, !dbg !680
  %call.334 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.397, i64 %ld.398, i64 %ld.399, i64 %ld.400), !dbg !680
  %icmp.976 = icmp eq i8 %call.334, 1, !dbg !680
  br i1 %icmp.976, label %else.791, label %then.786

else.791:                                         ; preds = %else.788
  %field.1067 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !680
  %field.1068 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !680
  %field0.221 = bitcast i8* %field.1067 to i64*, !dbg !680
  %ld.401 = load i64, i64* %field0.221, align 8, !dbg !680
  %field1.221 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !680
  %8 = bitcast i8* %field1.221 to i64*, !dbg !680
  %ld.402 = load i64, i64* %8, align 8, !dbg !680
  %field0.222 = bitcast i8* %field.1068 to i64*, !dbg !680
  %ld.403 = load i64, i64* %field0.222, align 8, !dbg !680
  %field1.222 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !680
  %9 = bitcast i8* %field1.222 to i64*, !dbg !680
  %ld.404 = load i64, i64* %9, align 8, !dbg !680
  %call.335 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.401, i64 %ld.402, i64 %ld.403, i64 %ld.404), !dbg !680
  %icmp.979 = icmp eq i8 %call.335, 1, !dbg !680
  br i1 %icmp.979, label %else.794, label %then.786

else.794:                                         ; preds = %else.791
  %field.1069 = getelementptr inbounds i8, i8* %key1, i64 72, !dbg !680
  %field.1070 = getelementptr inbounds i8, i8* %key2, i64 72, !dbg !680
  %field0.223 = bitcast i8* %field.1069 to i64*, !dbg !680
  %ld.405 = load i64, i64* %field0.223, align 8, !dbg !680
  %field1.223 = getelementptr inbounds i8, i8* %key1, i64 80, !dbg !680
  %10 = bitcast i8* %field1.223 to i64*, !dbg !680
  %ld.406 = load i64, i64* %10, align 8, !dbg !680
  %field0.224 = bitcast i8* %field.1070 to i64*, !dbg !680
  %ld.407 = load i64, i64* %field0.224, align 8, !dbg !680
  %field1.224 = getelementptr inbounds i8, i8* %key2, i64 80, !dbg !680
  %11 = bitcast i8* %field1.224 to i64*, !dbg !680
  %ld.408 = load i64, i64* %11, align 8, !dbg !680
  %call.336 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.405, i64 %ld.406, i64 %ld.407, i64 %ld.408), !dbg !680
  %icmp.982 = icmp eq i8 %call.336, 1, !dbg !680
  br i1 %icmp.982, label %else.797, label %then.786

else.797:                                         ; preds = %else.794
  %field.1071 = getelementptr inbounds i8, i8* %key1, i64 88, !dbg !680
  %12 = bitcast i8* %field.1071 to %Block.0**, !dbg !680
  %.field.ld.202 = load %Block.0*, %Block.0** %12, align 8, !dbg !680
  %field.1072 = getelementptr inbounds i8, i8* %key2, i64 88, !dbg !680
  %13 = bitcast i8* %field.1072 to %Block.0**, !dbg !680
  %.field.ld.203 = load %Block.0*, %Block.0** %13, align 8, !dbg !680
  %icmp.985 = icmp eq %Block.0* %.field.ld.202, %.field.ld.203, !dbg !680
  %spec.select = zext i1 %icmp.985 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.Each.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.15, i8* nest nocapture readnone %nest.81, %Each.0* readonly %"$this13") #0 !dbg !683 {
entry:
  call void @llvm.dbg.value(metadata %Each.0* %"$this13", metadata !694, metadata !DIExpression()), !dbg !695
  %icmp.863 = icmp eq %Each.0* %"$this13", null, !dbg !696
  br i1 %icmp.863, label %then.700, label %command_line_arguments.SourcePosition.Pos.exit

then.700:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !696
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Each.0* %"$this13", metadata !360, metadata !DIExpression()), !dbg !697
  %cast.63.i = bitcast %Each.0* %"$this13" to i8*, !dbg !699
  %cast.3092 = bitcast %SourcePosition.0* %sret.formal.15 to i8*, !dbg !696
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3092, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !696
  ret void, !dbg !696
}

define i64 @command_line_arguments.command_line_arguments.Assignment..hash(i8* nest nocapture readnone %nest.103, i8* %key, i64 %seed) #0 !dbg !700 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !701, metadata !DIExpression()), !dbg !702
  call void @llvm.dbg.value(metadata i64 %seed, metadata !703, metadata !DIExpression()), !dbg !702
  call void @llvm.dbg.value(metadata i64 0, metadata !704, metadata !DIExpression()), !dbg !702
  %pticast.32 = ptrtoint i8* %key to i64, !dbg !702
  %call.337 = call i64 @command_line_arguments.command_line_arguments.SourcePosition..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !702
  %add.60 = add i64 %pticast.32, 40, !dbg !702
  %itpcast.29 = inttoptr i64 %add.60 to i8*, !dbg !702
  %call.338 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.29, i64 %call.337), !dbg !702
  %add.61 = add i64 %pticast.32, 56, !dbg !702
  %itpcast.30 = inttoptr i64 %add.61 to i8*, !dbg !702
  %call.339 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.30, i64 %call.338), !dbg !702
  call void @llvm.dbg.value(metadata i64 %call.339, metadata !704, metadata !DIExpression()), !dbg !702
  ret i64 %call.339, !dbg !702
}

define i8 @command_line_arguments.command_line_arguments.Assignment..eq(i8* nest nocapture readnone %nest.104, i8* readonly %key1, i8* readonly %key2) #0 !dbg !705 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !706, metadata !DIExpression()), !dbg !707
  call void @llvm.dbg.value(metadata i8* %key2, metadata !708, metadata !DIExpression()), !dbg !707
  call void @llvm.dbg.value(metadata i8 0, metadata !709, metadata !DIExpression()), !dbg !707
  %icmp.986 = icmp eq i8* %key1, null, !dbg !707
  br i1 %icmp.986, label %then.799, label %else.799

then.799:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !707
  unreachable

else.799:                                         ; preds = %entry
  %icmp.987 = icmp eq i8* %key2, null, !dbg !707
  br i1 %icmp.987, label %then.800, label %else.800

then.800:                                         ; preds = %else.799
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !707
  unreachable

else.800:                                         ; preds = %else.799
  %tmpv.1422.sroa.6.0.cast.3378.sroa_idx17 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !707
  %0 = bitcast i8* %tmpv.1422.sroa.6.0.cast.3378.sroa_idx17 to i64*, !dbg !707
  %tmpv.1422.sroa.6.0.copyload18 = load i64, i64* %0, align 8, !dbg !707
  %tmpv.1422.sroa.5.0.cast.3378.sroa_idx15 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !707
  %tmpv.1422.sroa.5.0.cast.3378.sroa_cast = bitcast i8* %tmpv.1422.sroa.5.0.cast.3378.sroa_idx15 to i64*, !dbg !707
  %tmpv.1422.sroa.5.0.copyload16 = load i64, i64* %tmpv.1422.sroa.5.0.cast.3378.sroa_cast, align 8, !dbg !707
  %tmpv.1422.sroa.4.0.cast.3378.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !707
  %1 = bitcast i8* %tmpv.1422.sroa.4.0.cast.3378.sroa_idx13 to i64*, !dbg !707
  %tmpv.1422.sroa.4.0.copyload14 = load i64, i64* %1, align 8, !dbg !707
  %tmpv.1422.sroa.3.0.cast.3378.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !707
  %2 = bitcast i8* %tmpv.1422.sroa.3.0.cast.3378.sroa_idx11 to i64*, !dbg !707
  %tmpv.1422.sroa.3.0.copyload12 = load i64, i64* %2, align 8, !dbg !707
  %tmpv.1422.sroa.0.0.cast.3378.sroa_idx = bitcast i8* %key1 to i64*, !dbg !707
  %tmpv.1422.sroa.0.0.copyload10 = load i64, i64* %tmpv.1422.sroa.0.0.cast.3378.sroa_idx, align 8, !dbg !707
  %tmpv.1423.sroa.0.0.cast.3381.sroa_idx = bitcast i8* %key2 to i64*, !dbg !707
  %tmpv.1423.sroa.0.0.copyload1 = load i64, i64* %tmpv.1423.sroa.0.0.cast.3381.sroa_idx, align 8, !dbg !707
  %tmpv.1423.sroa.3.0.cast.3381.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !707
  %3 = bitcast i8* %tmpv.1423.sroa.3.0.cast.3381.sroa_idx2 to i64*, !dbg !707
  %tmpv.1423.sroa.3.0.copyload3 = load i64, i64* %3, align 8, !dbg !707
  %tmpv.1423.sroa.4.0.cast.3381.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !707
  %4 = bitcast i8* %tmpv.1423.sroa.4.0.cast.3381.sroa_idx4 to i64*, !dbg !707
  %tmpv.1423.sroa.4.0.copyload5 = load i64, i64* %4, align 8, !dbg !707
  %tmpv.1423.sroa.5.0.cast.3381.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !707
  %tmpv.1423.sroa.5.0.cast.3381.sroa_cast = bitcast i8* %tmpv.1423.sroa.5.0.cast.3381.sroa_idx6 to i64*, !dbg !707
  %tmpv.1423.sroa.5.0.copyload7 = load i64, i64* %tmpv.1423.sroa.5.0.cast.3381.sroa_cast, align 8, !dbg !707
  %tmpv.1423.sroa.6.0.cast.3381.sroa_idx8 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !707
  %5 = bitcast i8* %tmpv.1423.sroa.6.0.cast.3381.sroa_idx8 to i64*, !dbg !707
  %tmpv.1423.sroa.6.0.copyload9 = load i64, i64* %5, align 8, !dbg !707
  %icmp.988 = icmp eq i64 %tmpv.1422.sroa.0.0.copyload10, %tmpv.1423.sroa.0.0.copyload1, !dbg !707
  %icmp.989 = icmp eq i64 %tmpv.1422.sroa.3.0.copyload12, %tmpv.1423.sroa.3.0.copyload3, !dbg !707
  %iand.2522 = and i1 %icmp.988, %icmp.989, !dbg !707
  %icmp.990 = icmp eq i64 %tmpv.1422.sroa.4.0.copyload14, %tmpv.1423.sroa.4.0.copyload5, !dbg !707
  %iand.2623 = and i1 %iand.2522, %icmp.990, !dbg !707
  %call.340 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.1422.sroa.5.0.copyload16, i64 %tmpv.1422.sroa.6.0.copyload18, i64 %tmpv.1423.sroa.5.0.copyload7, i64 %tmpv.1423.sroa.6.0.copyload9), !dbg !707
  %icmp.991 = icmp eq i8 %call.340, 1, !dbg !707
  %iand.2724 = and i1 %iand.2623, %icmp.991, !dbg !707
  br i1 %iand.2724, label %else.803, label %then.801

then.801:                                         ; preds = %else.803, %else.800
  call void @llvm.dbg.value(metadata i8 0, metadata !709, metadata !DIExpression()), !dbg !707
  ret i8 0, !dbg !707

else.803:                                         ; preds = %else.800
  %field.1083 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !707
  %field.1084 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !707
  %field0.227 = bitcast i8* %field.1083 to i64*, !dbg !707
  %ld.413 = load i64, i64* %field0.227, align 8, !dbg !707
  %field1.227 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !707
  %6 = bitcast i8* %field1.227 to i64*, !dbg !707
  %ld.414 = load i64, i64* %6, align 8, !dbg !707
  %field0.228 = bitcast i8* %field.1084 to i64*, !dbg !707
  %ld.415 = load i64, i64* %field0.228, align 8, !dbg !707
  %field1.228 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !707
  %7 = bitcast i8* %field1.228 to i64*, !dbg !707
  %ld.416 = load i64, i64* %7, align 8, !dbg !707
  %call.341 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.413, i64 %ld.414, i64 %ld.415, i64 %ld.416), !dbg !707
  %icmp.995 = icmp eq i8 %call.341, 1, !dbg !707
  br i1 %icmp.995, label %else.806, label %then.801

else.806:                                         ; preds = %else.803
  %field.1085 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !707
  %field.1086 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !707
  %field0.229 = bitcast i8* %field.1085 to i64*, !dbg !707
  %ld.417 = load i64, i64* %field0.229, align 8, !dbg !707
  %field1.229 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !707
  %8 = bitcast i8* %field1.229 to i64*, !dbg !707
  %ld.418 = load i64, i64* %8, align 8, !dbg !707
  %field0.230 = bitcast i8* %field.1086 to i64*, !dbg !707
  %ld.419 = load i64, i64* %field0.230, align 8, !dbg !707
  %field1.230 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !707
  %9 = bitcast i8* %field1.230 to i64*, !dbg !707
  %ld.420 = load i64, i64* %9, align 8, !dbg !707
  %call.342 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.417, i64 %ld.418, i64 %ld.419, i64 %ld.420), !dbg !707
  %icmp.998 = icmp eq i8 %call.342, 1, !dbg !707
  %spec.select = zext i1 %icmp.998 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.Assignment.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.16, i8* nest nocapture readnone %nest.82, %Assignment.0* readonly %"$this14") #0 !dbg !710 {
entry:
  call void @llvm.dbg.value(metadata %Assignment.0* %"$this14", metadata !719, metadata !DIExpression()), !dbg !720
  %icmp.864 = icmp eq %Assignment.0* %"$this14", null, !dbg !721
  br i1 %icmp.864, label %then.701, label %command_line_arguments.SourcePosition.Pos.exit

then.701:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !721
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Assignment.0* %"$this14", metadata !360, metadata !DIExpression()), !dbg !722
  %cast.63.i = bitcast %Assignment.0* %"$this14" to i8*, !dbg !724
  %cast.3101 = bitcast %SourcePosition.0* %sret.formal.16 to i8*, !dbg !721
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3101, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !721
  ret void, !dbg !721
}

define void @command_line_arguments.Mixin.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.17, i8* nest nocapture readnone %nest.83, %Mixin.0* readonly %"$this15") #0 !dbg !725 {
entry:
  call void @llvm.dbg.value(metadata %Mixin.0* %"$this15", metadata !735, metadata !DIExpression()), !dbg !736
  %icmp.865 = icmp eq %Mixin.0* %"$this15", null, !dbg !737
  br i1 %icmp.865, label %then.702, label %command_line_arguments.SourcePosition.Pos.exit

then.702:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !737
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %Mixin.0* %"$this15", metadata !360, metadata !DIExpression()), !dbg !738
  %cast.63.i = bitcast %Mixin.0* %"$this15" to i8*, !dbg !740
  %cast.3110 = bitcast %SourcePosition.0* %sret.formal.17 to i8*, !dbg !737
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3110, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !737
  ret void, !dbg !737
}

declare %Regexp.0* @regexp.MustCompile(i8*, i64, i64) local_unnamed_addr #0

declare void @regexp.Regexp.Split(%IPST.5*, i8*, %Regexp.0*, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @strings.TrimSpace(i8*, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.MixinCall.Pos..stub(%SourcePosition.0* nocapture sret %sret.formal.18, i8* nest nocapture readnone %nest.84, %MixinCall.0* readonly %"$this16") #0 !dbg !741 {
entry:
  call void @llvm.dbg.value(metadata %MixinCall.0* %"$this16", metadata !750, metadata !DIExpression()), !dbg !751
  %icmp.866 = icmp eq %MixinCall.0* %"$this16", null, !dbg !752
  br i1 %icmp.866, label %then.703, label %command_line_arguments.SourcePosition.Pos.exit

then.703:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !752
  unreachable

command_line_arguments.SourcePosition.Pos.exit:   ; preds = %entry
  call void @llvm.dbg.value(metadata %MixinCall.0* %"$this16", metadata !360, metadata !DIExpression()), !dbg !753
  %cast.63.i = bitcast %MixinCall.0* %"$this16" to i8*, !dbg !755
  %cast.3119 = bitcast %SourcePosition.0* %sret.formal.18 to i8*, !dbg !752
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.3119, i8* align 8 %cast.63.i, i64 40, i1 false), !dbg !752
  ret void, !dbg !752
}

declare void @regexp.Regexp.FindAllString(%IPST.5*, i8*, %Regexp.0*, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @regexp.Regexp.ReplaceAllString(i8*, %Regexp.0*, i64, i64, i64, i64) local_unnamed_addr #0

define %Block.0* @command_line_arguments.Parser.Parse(i8* nest nocapture readnone %nest.26, %Parser.0* %p) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !756 {
entry:
  %name.addr.i = alloca { i8*, i64 }, align 8
  %p.addr = alloca %Parser.0*, align 8
  %tmpv.252 = alloca i8, align 1
  %tmpv.257 = alloca { i8*, %Parser.0** }, align 8
  %tmpv.260 = alloca { %__go_descriptor.16* }, align 8
  %tmpv.278 = alloca %IPST.8, align 8
  %tmpv.280 = alloca { i8*, i64 }, align 8
  %tmpv.286 = alloca { i8*, i64 }, align 8
  %tmpv.294 = alloca { i8*, i64 }, align 8
  %tmpv.308 = alloca %IPST.1, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !945, metadata !DIExpression()), !dbg !946
  store %Parser.0* %p, %Parser.0** %p.addr, align 8
  store i8 0, i8* %tmpv.252, align 1
  call void @llvm.dbg.value(metadata %Block.0* null, metadata !947, metadata !DIExpression()), !dbg !948
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.189 = icmp eq %Parser.0* %p, null, !dbg !949
  br i1 %icmp.189, label %then.156, label %fallthrough.156

finally.0:                                        ; preds = %else.201, %else.200, %fallthrough.158, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.0
  %"$ret25.1" = phi %Block.0* [ null, %catchpad.0 ], [ %.field.ld.21, %fallthrough.158 ], [ null, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %block.0, %else.200 ], [ %block.0, %else.201 ]
  %ehtmp.0.sroa.0.0 = phi i8* [ %ex2.0.fca.0.extract, %catchpad.0 ], [ undef, %fallthrough.158 ], [ undef, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %else.200 ], [ undef, %else.201 ]
  %ehtmp.0.sroa.2.0 = phi i32 [ %ex2.0.fca.1.extract, %catchpad.0 ], [ undef, %fallthrough.158 ], [ undef, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %else.200 ], [ undef, %else.201 ]
  %finvar.0.0 = phi i8 [ 0, %catchpad.0 ], [ 1, %fallthrough.158 ], [ 1, %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %else.200 ], [ 1, %else.201 ]
  call void @llvm.dbg.value(metadata %Block.0* %"$ret25.1", metadata !947, metadata !DIExpression()), !dbg !948
  br label %finish.0

pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %then.179, %then.182, %else.178, %then.177, %fallthrough.177, %fallthrough.182, %fallthrough.185, %then.173, %then.181, %then.185, %then.192, %fallthrough.174, %then.176, %else.476.i, %then.174, %else.481.i, %then.180, %then.190, %label.5, %else.194, %fallthrough.190, %cont.12, %else.167, %then.167, %then.166, %then.165, %then.163, %then.162, %then.160, %then.476.i, %cont.3, %else.200, %then.199, %then.198, %then.197, %fallthrough.172, %then.172, %then.171, %fallthrough.170, %then.170, %then.168, %cont.4, %else.157, %then.158, %then.156
  %lpad.loopexit.split-lp92 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.252)
          to label %finally.0 unwind label %catchpad.0, !dbg !951

then.156:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.156 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !949

fallthrough.156:                                  ; preds = %entry, %then.156
  %field.182 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 6, !dbg !949
  %.field.ld.22 = load %Block.0*, %Block.0** %field.182, align 8, !dbg !949
  %icmp.190 = icmp eq %Block.0* %.field.ld.22, null, !dbg !952
  br i1 %icmp.190, label %else.157, label %then.157

then.157:                                         ; preds = %fallthrough.156
  %p.ld.5 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !953
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.5, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.188 = icmp eq %Parser.0* %p.ld.5, null, !dbg !954
  br i1 %icmp.188, label %then.158, label %fallthrough.158

else.157:                                         ; preds = %fallthrough.156
  %field.183 = getelementptr inbounds { i8*, %Parser.0** }, { i8*, %Parser.0** }* %tmpv.257, i64 0, i32 0, !dbg !955
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Parser.Parse..func1 to i8*), i8** %field.183, align 8, !dbg !955
  %field.184 = getelementptr inbounds { i8*, %Parser.0** }, { i8*, %Parser.0** }* %tmpv.257, i64 0, i32 1, !dbg !955
  store %Parser.0** %p.addr, %Parser.0*** %field.184, align 8, !dbg !955
  %cast.1138 = bitcast { %__go_descriptor.16* }* %tmpv.260 to i8*
  %0 = bitcast { %__go_descriptor.16* }* %tmpv.260 to { i8*, %Parser.0** }**, !dbg !956
  store { i8*, %Parser.0** }* %tmpv.257, { i8*, %Parser.0** }** %0, align 8, !dbg !956
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.252, %__go_descriptor.116* bitcast (i8 (i8*, { %__go_descriptor.16* }*)* @command_line_arguments.command_line_arguments..thunk0 to %__go_descriptor.116*), i8* nonnull %cast.1138)
          to label %cont.3 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !956

then.158:                                         ; preds = %then.157
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.158 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !954

fallthrough.158:                                  ; preds = %then.157, %then.158
  %field.181 = getelementptr inbounds %Parser.0, %Parser.0* %p.ld.5, i64 0, i32 6, !dbg !954
  %.field.ld.21 = load %Block.0*, %Block.0** %field.181, align 8, !dbg !954
  call void @llvm.dbg.value(metadata %Block.0* %.field.ld.21, metadata !947, metadata !DIExpression()), !dbg !948
  br label %finally.0

cont.3:                                           ; preds = %else.157
  %call.41 = invoke fastcc %Block.0* @command_line_arguments.newBlock()
          to label %cont.4 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !957

cont.4:                                           ; preds = %cont.3
  call void @llvm.dbg.value(metadata %Block.0* %call.41, metadata !958, metadata !DIExpression()), !dbg !959
  %p.ld.7 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !960
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.7, metadata !945, metadata !DIExpression()), !dbg !946
  invoke void @command_line_arguments.Parser.advance(i8* nest undef, %Parser.0* %p.ld.7)
          to label %label.0 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !961

label.0:                                          ; preds = %cont.4, %label.0.backedge
  %tmpv.269.0 = phi %.command-line-arguments.token.0* [ %tmpv.269.1, %label.0.backedge ], [ undef, %cont.4 ]
  %tmpv.268.0 = phi %Parser.0* [ %tmpv.268.1, %label.0.backedge ], [ undef, %cont.4 ]
  %tmpv.266.0 = phi %.command-line-arguments.token.0* [ %tmpv.266.2, %label.0.backedge ], [ undef, %cont.4 ]
  %tmpv.265.0 = phi %Parser.0* [ %tmpv.265.2, %label.0.backedge ], [ undef, %cont.4 ]
  %tmpv.263.0 = phi %Parser.0* [ %tmpv.263.1, %label.0.backedge ], [ undef, %cont.4 ]
  %p.ld.8 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !962
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.8, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.192 = icmp eq %Parser.0* %p.ld.8, null, !dbg !963
  br i1 %icmp.192, label %then.160, label %fallthrough.160

then.160:                                         ; preds = %label.0
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.160.fallthrough.160_crit_edge unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !963

then.160.fallthrough.160_crit_edge:               ; preds = %then.160
  %p.ld.1925.pre = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !964
  br label %fallthrough.160, !dbg !963

fallthrough.160:                                  ; preds = %then.160.fallthrough.160_crit_edge, %label.0
  %p.ld.1925 = phi %Parser.0* [ %p.ld.1925.pre, %then.160.fallthrough.160_crit_edge ], [ %p.ld.8, %label.0 ], !dbg !964
  %tmpv.263.1 = phi %Parser.0* [ %tmpv.263.0, %then.160.fallthrough.160_crit_edge ], [ %p.ld.8, %label.0 ]
  %field.186 = getelementptr inbounds %Parser.0, %Parser.0* %tmpv.263.1, i64 0, i32 3, !dbg !963
  %.field.ld.23 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.186, align 8, !dbg !963
  %icmp.193 = icmp eq %.command-line-arguments.token.0* %.field.ld.23, null, !dbg !965
  %icmp.23226 = icmp eq %Parser.0* %p.ld.1925, null, !dbg !964
  br i1 %icmp.193, label %fallthrough.161.thread, label %then.161

fallthrough.161.thread:                           ; preds = %fallthrough.160
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.19, metadata !945, metadata !DIExpression()), !dbg !946
  br i1 %icmp.23226, label %then.168, label %fallthrough.168

then.161:                                         ; preds = %fallthrough.160
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.1925, metadata !945, metadata !DIExpression()), !dbg !946
  br i1 %icmp.23226, label %then.162, label %fallthrough.162

fallthrough.161:                                  ; preds = %then.163, %fallthrough.162
  %tmpv.266.2 = phi %.command-line-arguments.token.0* [ %tmpv.266.0, %then.163 ], [ %.field.ld.24, %fallthrough.162 ]
  %field.188 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.266.2, i64 0, i32 0, !dbg !966
  %.field.ld.25 = load i32, i32* %field.188, align 4, !dbg !966
  %icmp.196 = icmp eq i32 %.field.ld.25, -1, !dbg !967
  %p.ld.19 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !964
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.19, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.232 = icmp eq %Parser.0* %p.ld.19, null, !dbg !964
  br i1 %icmp.196, label %label.1, label %else.164

then.162:                                         ; preds = %then.161
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.162 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !968

fallthrough.162:                                  ; preds = %then.161, %then.162
  %tmpv.265.2 = phi %Parser.0* [ %tmpv.265.0, %then.162 ], [ %p.ld.1925, %then.161 ]
  %field.187 = getelementptr inbounds %Parser.0, %Parser.0* %tmpv.265.2, i64 0, i32 3, !dbg !968
  %.field.ld.24 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.187, align 8, !dbg !968
  %icmp.195 = icmp eq %.command-line-arguments.token.0* %.field.ld.24, null, !dbg !966
  br i1 %icmp.195, label %then.163, label %fallthrough.161

then.163:                                         ; preds = %fallthrough.162
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.161 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !966

else.164:                                         ; preds = %fallthrough.161
  br i1 %icmp.232, label %then.165, label %fallthrough.165

label.1:                                          ; preds = %fallthrough.161
  br i1 %icmp.232, label %then.168, label %fallthrough.168

then.165:                                         ; preds = %else.164
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.165 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !969

fallthrough.165:                                  ; preds = %else.164, %then.165
  %tmpv.268.1 = phi %Parser.0* [ %tmpv.268.0, %then.165 ], [ %p.ld.19, %else.164 ]
  %field.189 = getelementptr inbounds %Parser.0, %Parser.0* %tmpv.268.1, i64 0, i32 3, !dbg !969
  %.field.ld.26 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.189, align 8, !dbg !969
  %icmp.199 = icmp eq %.command-line-arguments.token.0* %.field.ld.26, null, !dbg !970
  br i1 %icmp.199, label %then.166, label %fallthrough.166

then.166:                                         ; preds = %fallthrough.165
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.166 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !970

fallthrough.166:                                  ; preds = %fallthrough.165, %then.166
  %tmpv.269.1 = phi %.command-line-arguments.token.0* [ %tmpv.269.0, %then.166 ], [ %.field.ld.26, %fallthrough.165 ]
  %field.190 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.269.1, i64 0, i32 0, !dbg !970
  %.field.ld.27 = load i32, i32* %field.190, align 4, !dbg !970
  %icmp.200 = icmp eq i32 %.field.ld.27, -6, !dbg !971
  %p.ld.11 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !964
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.11, metadata !945, metadata !DIExpression()), !dbg !946
  br i1 %icmp.200, label %then.167, label %else.167

then.167:                                         ; preds = %fallthrough.166
  invoke void @command_line_arguments.Parser.advance(i8* nest undef, %Parser.0* %p.ld.11)
          to label %label.0.backedge unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !972

else.167:                                         ; preds = %fallthrough.166
  %call.42 = invoke { i64, i64 } @command_line_arguments.Parser.parse(i8* nest undef, %Parser.0* %p.ld.11)
          to label %cont.12 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !973

cont.12:                                          ; preds = %else.167
  %call.42.fca.0.extract = extractvalue { i64, i64 } %call.42, 0, !dbg !973
  %call.42.fca.1.extract = extractvalue { i64, i64 } %call.42, 1, !dbg !973
  invoke void @command_line_arguments.Block.push(i8* nest undef, %Block.0* %call.41, i64 %call.42.fca.0.extract, i64 %call.42.fca.1.extract)
          to label %label.0.backedge unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !974

label.0.backedge:                                 ; preds = %cont.12, %then.167
  br label %label.0, !dbg !962

then.168:                                         ; preds = %fallthrough.161.thread, %label.1
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.168 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !975

fallthrough.168:                                  ; preds = %fallthrough.161.thread, %label.1, %then.168
  %p.ld.192729 = phi %Parser.0* [ %p.ld.1925, %fallthrough.161.thread ], [ %p.ld.19, %label.1 ], [ null, %then.168 ]
  %field.225 = getelementptr inbounds %Parser.0, %Parser.0* %p.ld.192729, i64 0, i32 5, !dbg !975
  %.field.ld.37 = load %Parser.0*, %Parser.0** %field.225, align 8, !dbg !975
  %icmp.233 = icmp eq %Parser.0* %.field.ld.37, null, !dbg !976
  br i1 %icmp.233, label %fallthrough.169, label %then.169

then.169:                                         ; preds = %fallthrough.168
  %p.ld.13 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !977
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.13, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.201 = icmp eq %Parser.0* %p.ld.13, null, !dbg !978
  br i1 %icmp.201, label %then.170, label %fallthrough.170

fallthrough.169:                                  ; preds = %fallthrough.168, %fallthrough.198
  %block.0 = phi %Block.0* [ %.field.ld.36, %fallthrough.198 ], [ %call.41, %fallthrough.168 ]
  call void @llvm.dbg.value(metadata %Block.0* %block.0, metadata !958, metadata !DIExpression()), !dbg !959
  %p.ld.20 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !979
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.20, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.234 = icmp eq %Parser.0* %p.ld.20, null, !dbg !980
  br i1 %icmp.234, label %then.199, label %fallthrough.199

then.170:                                         ; preds = %then.169
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.170 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !978

fallthrough.170:                                  ; preds = %then.169, %then.170
  %field.191 = getelementptr inbounds %Parser.0, %Parser.0* %p.ld.13, i64 0, i32 5, !dbg !978
  %.field.ld.28 = load %Parser.0*, %Parser.0** %field.191, align 8, !dbg !978
  %call.43 = invoke %Block.0* @command_line_arguments.Parser.Parse(i8* nest undef, %Parser.0* %.field.ld.28)
          to label %cont.16 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !981

cont.16:                                          ; preds = %fallthrough.170
  call void @llvm.dbg.value(metadata %NamedBlock.0* null, metadata !982, metadata !DIExpression()), !dbg !984
  %p.ld.14 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !985
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.14, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.202 = icmp eq %Parser.0* %p.ld.14, null, !dbg !986
  br i1 %icmp.202, label %then.171, label %fallthrough.171

then.171:                                         ; preds = %cont.16
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.171 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !986

fallthrough.171:                                  ; preds = %cont.16, %then.171
  %field.192 = getelementptr inbounds %Parser.0, %Parser.0* %p.ld.14, i64 0, i32 5, !dbg !986
  %.field.ld.29 = load %Parser.0*, %Parser.0** %field.192, align 8, !dbg !986
  %icmp.203 = icmp eq %Parser.0* %.field.ld.29, null, !dbg !987
  br i1 %icmp.203, label %then.172, label %fallthrough.172

then.172:                                         ; preds = %fallthrough.171
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.172 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !987

fallthrough.172:                                  ; preds = %fallthrough.171, %then.172
  %field.193 = getelementptr inbounds %Parser.0, %Parser.0* %.field.ld.29, i64 0, i32 4, !dbg !987
  %.field.ld.30 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.193, align 8, !dbg !987
  %cast.1157 = bitcast %IPST.8* %tmpv.278 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1157, i8 0, i64 96, i1 false)
  invoke void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.30, i8* nonnull %cast.1157)
          to label %label.3.preheader unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !988

label.3.preheader:                                ; preds = %fallthrough.172
  %field.222 = getelementptr inbounds %IPST.8, %IPST.8* %tmpv.278, i64 0, i32 0
  %field.195 = getelementptr inbounds %IPST.8, %IPST.8* %tmpv.278, i64 0, i32 1
  %cast.1164 = bitcast { i8*, i64 }* %tmpv.280 to i8*
  %cast.1171 = bitcast { i8*, i64 }* %tmpv.286 to i8*
  %1 = bitcast { i8*, i64 }* %name.addr.i to i8*
  %field0.119.i = bitcast { i8*, i64 }* %name.addr.i to i64*
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %name.addr.i, i64 0, i32 1
  %cast.1184 = bitcast { i8*, i64 }* %tmpv.294 to i8*
  %cast.1202 = bitcast %IPST.1* %tmpv.308 to i8*
  br label %label.3, !dbg !988

label.3:                                          ; preds = %label.3.preheader, %label.5
  %tmpv.281.0 = phi %NamedBlock.0* [ %tmpv.281.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.283.0 = phi %Parser.0* [ %tmpv.283.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.287.0 = phi %NamedBlock.0* [ %tmpv.287.2, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.290.0 = phi %Parser.0* [ %tmpv.290.2, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.292.0 = phi %NamedBlock.0** [ %tmpv.292.2, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.293.0 = phi %NamedBlock.0* [ %tmpv.293.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.295.0 = phi %NamedBlock.0* [ %tmpv.295.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.297.0 = phi %Parser.0* [ %tmpv.297.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.300.0 = phi i64 [ %tmpv.300.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.305.0 = phi i64 [ %tmpv.305.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.307.0 = phi %NamedBlock.0* [ %tmpv.307.1, %label.5 ], [ undef, %label.3.preheader ]
  %tmpv.278.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.222, align 8, !dbg !988
  %icmp.229 = icmp eq { i8*, i64 }* %tmpv.278.field.ld.2, null, !dbg !988
  br i1 %icmp.229, label %else.196, label %then.196

then.173:                                         ; preds = %then.196
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.173 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !989

fallthrough.173:                                  ; preds = %then.196, %then.173
  %tmpv.281.1 = phi %NamedBlock.0* [ %tmpv.281.0, %then.173 ], [ %.ld.142, %then.196 ]
  %field.196 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %tmpv.281.1, i64 0, i32 1, !dbg !989
  %cast.1165 = bitcast { i8*, i64 }* %field.196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1164, i8* nonnull align 8 %cast.1165, i64 16, i1 false)
  %p.ld.15 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !991
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.15, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.205 = icmp eq %Parser.0* %p.ld.15, null, !dbg !992
  br i1 %icmp.205, label %then.174, label %fallthrough.174

then.174:                                         ; preds = %fallthrough.173
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.174 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !992

fallthrough.174:                                  ; preds = %fallthrough.173, %then.174
  %tmpv.283.1 = phi %Parser.0* [ %tmpv.283.0, %then.174 ], [ %p.ld.15, %fallthrough.173 ]
  %field.197 = getelementptr inbounds %Parser.0, %Parser.0* %tmpv.283.1, i64 0, i32 4, !dbg !992
  %.field.ld.31 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.197, align 8, !dbg !992
  %call.44 = invoke i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.31, i8* nonnull %cast.1164)
          to label %cont.22 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !993

cont.22:                                          ; preds = %fallthrough.174
  %cast.1169 = bitcast i8* %call.44 to %NamedBlock.0**, !dbg !993
  %.ld.145 = load %NamedBlock.0*, %NamedBlock.0** %cast.1169, align 8, !dbg !993
  call void @llvm.dbg.value(metadata %NamedBlock.0* %.ld.145, metadata !994, metadata !DIExpression()), !dbg !995
  %icmp.210 = icmp eq %NamedBlock.0* %.ld.145, null, !dbg !996
  %p.ld.16 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !997
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.16, metadata !945, metadata !DIExpression()), !dbg !946
  br i1 %icmp.210, label %then.175, label %else.175

then.175:                                         ; preds = %cont.22
  br i1 %icmp.204, label %then.176, label %fallthrough.176

else.175:                                         ; preds = %cont.22
  br i1 %icmp.204, label %then.180, label %fallthrough.180

then.176:                                         ; preds = %then.175
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.176 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !998

fallthrough.176:                                  ; preds = %then.175, %then.176
  %tmpv.287.1 = phi %NamedBlock.0* [ %tmpv.287.0, %then.176 ], [ %.ld.142, %then.175 ]
  %field.198 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %tmpv.287.1, i64 0, i32 1, !dbg !998
  %cast.1172 = bitcast { i8*, i64 }* %field.198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1171, i8* nonnull align 8 %cast.1172, i64 16, i1 false)
  %icmp.207 = icmp eq %Parser.0* %p.ld.16, null, !dbg !999
  br i1 %icmp.207, label %then.177, label %fallthrough.177

then.177:                                         ; preds = %fallthrough.176
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.177 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !999

fallthrough.177:                                  ; preds = %fallthrough.176, %then.177
  %tmpv.290.1 = phi %Parser.0* [ %tmpv.290.0, %then.177 ], [ %p.ld.16, %fallthrough.176 ]
  %field.199 = getelementptr inbounds %Parser.0, %Parser.0* %tmpv.290.1, i64 0, i32 4, !dbg !999
  %.field.ld.32 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.199, align 8, !dbg !999
  %call.45 = invoke i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.32, i8* nonnull %cast.1171)
          to label %cont.25 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1000

cont.25:                                          ; preds = %fallthrough.177
  %runtime.writeBarrier.ld.32 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1000
  %icmp.209 = icmp eq i32 %runtime.writeBarrier.ld.32, 0, !dbg !1000
  br i1 %icmp.209, label %then.178, label %else.178

then.178:                                         ; preds = %cont.25
  %cast.1176 = bitcast i8* %call.45 to %NamedBlock.0**, !dbg !1000
  %icmp.208 = icmp eq i8* %call.45, null, !dbg !1000
  br i1 %icmp.208, label %then.179, label %fallthrough.179

else.178:                                         ; preds = %cont.25
  %cast.1179 = bitcast %NamedBlock.0* %.ld.142 to i8*, !dbg !1000
  invoke void @runtime.writebarrierptr(i8* nest undef, i8* %call.45, i8* %cast.1179)
          to label %label.5 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1000

then.179:                                         ; preds = %then.178
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.179 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1000

fallthrough.179:                                  ; preds = %then.178, %then.179
  %tmpv.292.1 = phi %NamedBlock.0** [ %tmpv.292.0, %then.179 ], [ %cast.1176, %then.178 ]
  store %NamedBlock.0* %.ld.142, %NamedBlock.0** %tmpv.292.1, align 8, !dbg !1000
  br label %label.5

label.5:                                          ; preds = %label.9, %cont.36, %else.188, %label.6.preheader, %else.195, %else.194, %else.178, %fallthrough.179
  %tmpv.287.2 = phi %NamedBlock.0* [ %tmpv.287.1, %fallthrough.179 ], [ %tmpv.287.1, %else.178 ], [ %tmpv.287.0, %else.194 ], [ %tmpv.287.0, %else.195 ], [ %tmpv.287.0, %label.6.preheader ], [ %tmpv.287.0, %else.188 ], [ %tmpv.287.0, %cont.36 ], [ %tmpv.287.0, %label.9 ]
  %tmpv.290.2 = phi %Parser.0* [ %tmpv.290.1, %fallthrough.179 ], [ %tmpv.290.1, %else.178 ], [ %tmpv.290.0, %else.194 ], [ %tmpv.290.0, %else.195 ], [ %tmpv.290.0, %label.6.preheader ], [ %tmpv.290.0, %else.188 ], [ %tmpv.290.0, %cont.36 ], [ %tmpv.290.0, %label.9 ]
  %tmpv.292.2 = phi %NamedBlock.0** [ %tmpv.292.1, %fallthrough.179 ], [ %tmpv.292.0, %else.178 ], [ %tmpv.292.0, %else.194 ], [ %tmpv.292.0, %else.195 ], [ %tmpv.292.0, %label.6.preheader ], [ %tmpv.292.0, %else.188 ], [ %tmpv.292.0, %cont.36 ], [ %tmpv.292.0, %label.9 ]
  %tmpv.293.1 = phi %NamedBlock.0* [ %tmpv.293.0, %fallthrough.179 ], [ %tmpv.293.0, %else.178 ], [ %tmpv.293.2, %else.194 ], [ %tmpv.293.2, %else.195 ], [ %tmpv.293.2, %label.6.preheader ], [ %tmpv.293.2, %else.188 ], [ %tmpv.293.2, %cont.36 ], [ %tmpv.293.2, %label.9 ]
  %tmpv.295.1 = phi %NamedBlock.0* [ %tmpv.295.0, %fallthrough.179 ], [ %tmpv.295.0, %else.178 ], [ %tmpv.295.2, %else.194 ], [ %tmpv.295.2, %else.195 ], [ %tmpv.295.2, %label.6.preheader ], [ %tmpv.295.2, %else.188 ], [ %tmpv.295.2, %cont.36 ], [ %tmpv.295.2, %label.9 ]
  %tmpv.297.1 = phi %Parser.0* [ %tmpv.297.0, %fallthrough.179 ], [ %tmpv.297.0, %else.178 ], [ %tmpv.297.2, %else.194 ], [ %tmpv.297.2, %else.195 ], [ %tmpv.297.2, %label.6.preheader ], [ %tmpv.297.2, %else.188 ], [ %tmpv.297.2, %cont.36 ], [ %tmpv.297.2, %label.9 ]
  %tmpv.300.1 = phi i64 [ %tmpv.300.0, %fallthrough.179 ], [ %tmpv.300.0, %else.178 ], [ %tmpv.300.0, %else.194 ], [ %tmpv.300.0, %else.195 ], [ %tmpv.300.0, %label.6.preheader ], [ %tmpv.300.0, %else.188 ], [ %tmpv.300.3, %cont.36 ], [ %tmpv.300.0, %label.9 ]
  %tmpv.305.1 = phi i64 [ %tmpv.305.0, %fallthrough.179 ], [ %tmpv.305.0, %else.178 ], [ %tmpv.305.0, %else.194 ], [ %tmpv.305.0, %else.195 ], [ %tmpv.305.0, %label.6.preheader ], [ %tmpv.305.0, %else.188 ], [ %tmpv.305.0, %cont.36 ], [ %tmpv.305.4, %label.9 ]
  %tmpv.307.1 = phi %NamedBlock.0* [ %tmpv.307.0, %fallthrough.179 ], [ %tmpv.307.0, %else.178 ], [ %tmpv.307.3, %else.194 ], [ %tmpv.307.3, %else.195 ], [ %tmpv.307.0, %label.6.preheader ], [ %tmpv.307.0, %else.188 ], [ %tmpv.307.0, %cont.36 ], [ %tmpv.307.0, %label.9 ]
  invoke void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1157)
          to label %label.3 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !988

then.180:                                         ; preds = %else.175
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.180 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1001

fallthrough.180:                                  ; preds = %else.175, %then.180
  %tmpv.293.2 = phi %NamedBlock.0* [ %tmpv.293.0, %then.180 ], [ %.ld.142, %else.175 ]
  %field.200 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %tmpv.293.2, i64 0, i32 1, !dbg !1001
  %field0.54 = bitcast { i8*, i64 }* %field.200 to i64*, !dbg !1002
  %ld.66 = load i64, i64* %field0.54, align 8, !dbg !1002
  %3 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %tmpv.293.2, i64 0, i32 1, i32 1, !dbg !1002
  %ld.67 = load i64, i64* %3, align 8, !dbg !1002
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1), !dbg !1003
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.16, metadata !1008, metadata !DIExpression()), !dbg !1003
  store i64 %ld.66, i64* %field0.119.i, align 8
  store i64 %ld.67, i64* %2, align 8
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !1009, metadata !DIExpression()), !dbg !1010
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.16, metadata !1011, metadata !DIExpression()), !dbg !1013
  %icmp.5491.i = icmp eq %Parser.0* %p.ld.16, null, !dbg !1014
  br i1 %icmp.5491.i, label %then.476.i, label %else.476.i

then.476.i:                                       ; preds = %fallthrough.180, %else.483.i
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %.noexc unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1014

.noexc:                                           ; preds = %then.476.i
  unreachable

else.476.i:                                       ; preds = %fallthrough.180, %else.483.i
  %top.02.i = phi %Parser.0* [ %.field.ld.138.i, %else.483.i ], [ %p.ld.16, %fallthrough.180 ]
  call void @llvm.dbg.value(metadata %Parser.0* %top.02.i, metadata !1011, metadata !DIExpression()), !dbg !1013
  %field.567.i = getelementptr inbounds %Parser.0, %Parser.0* %top.02.i, i64 0, i32 4, !dbg !1014
  %.field.ld.134.i = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.567.i, align 8, !dbg !1014
  %call.163.i23 = invoke i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.134.i, i8* nonnull %1)
          to label %call.163.i.noexc unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1015

call.163.i.noexc:                                 ; preds = %else.476.i
  %cast.2216.i = bitcast i8* %call.163.i23 to %NamedBlock.0**, !dbg !1015
  %.ld.399.i = load %NamedBlock.0*, %NamedBlock.0** %cast.2216.i, align 8, !dbg !1015
  %icmp.550.i = icmp eq %NamedBlock.0* %.ld.399.i, null, !dbg !1016
  br i1 %icmp.550.i, label %cont.29, label %else.478.i

else.478.i:                                       ; preds = %call.163.i.noexc
  %field.568.i = getelementptr inbounds %Parser.0, %Parser.0* %top.02.i, i64 0, i32 5, !dbg !1017
  %.field.ld.135.i = load %Parser.0*, %Parser.0** %field.568.i, align 8, !dbg !1017
  %icmp.552.i = icmp eq %Parser.0* %.field.ld.135.i, null, !dbg !1018
  br i1 %icmp.552.i, label %cont.29, label %else.481.i

else.481.i:                                       ; preds = %else.478.i
  %field.570.i = getelementptr inbounds %Parser.0, %Parser.0* %.field.ld.135.i, i64 0, i32 4, !dbg !1019
  %.field.ld.137.i = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.570.i, align 8, !dbg !1019
  %call.164.i24 = invoke i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.137.i, i8* nonnull %1)
          to label %call.164.i.noexc unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1020

call.164.i.noexc:                                 ; preds = %else.481.i
  %cast.2225.i = bitcast i8* %call.164.i24 to %NamedBlock.0**, !dbg !1020
  %.ld.404.i = load %NamedBlock.0*, %NamedBlock.0** %cast.2225.i, align 8, !dbg !1020
  %icmp.556.i = icmp eq %NamedBlock.0* %.ld.404.i, null, !dbg !1021
  br i1 %icmp.556.i, label %cont.29, label %else.483.i

else.483.i:                                       ; preds = %call.164.i.noexc
  %.field.ld.138.i = load %Parser.0*, %Parser.0** %field.568.i, align 8, !dbg !1022
  call void @llvm.dbg.value(metadata %Parser.0* %.field.ld.138.i, metadata !1011, metadata !DIExpression()), !dbg !1013
  %icmp.549.i = icmp eq %Parser.0* %.field.ld.138.i, null, !dbg !1014
  br i1 %icmp.549.i, label %then.476.i, label %else.476.i

cont.29:                                          ; preds = %call.164.i.noexc, %else.478.i, %call.163.i.noexc
  %merge.i = phi %Parser.0* [ null, %call.163.i.noexc ], [ %top.02.i, %else.478.i ], [ %top.02.i, %call.164.i.noexc ]
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !1009, metadata !DIExpression()), !dbg !1010
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1), !dbg !1023
  call void @llvm.dbg.value(metadata %Parser.0* %merge.i, metadata !1024, metadata !DIExpression()), !dbg !1025
  br i1 %icmp.204, label %then.181, label %fallthrough.181

then.181:                                         ; preds = %cont.29
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.181 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1026

fallthrough.181:                                  ; preds = %cont.29, %then.181
  %tmpv.295.2 = phi %NamedBlock.0* [ %tmpv.295.0, %then.181 ], [ %.ld.142, %cont.29 ]
  %field.201 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %tmpv.295.2, i64 0, i32 1, !dbg !1026
  %cast.1185 = bitcast { i8*, i64 }* %field.201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1184, i8* nonnull align 8 %cast.1185, i64 16, i1 false)
  %icmp.213 = icmp eq %Parser.0* %merge.i, null, !dbg !1027
  br i1 %icmp.213, label %then.182, label %fallthrough.182

then.182:                                         ; preds = %fallthrough.181
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.182 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1027

fallthrough.182:                                  ; preds = %fallthrough.181, %then.182
  %tmpv.297.2 = phi %Parser.0* [ %tmpv.297.0, %then.182 ], [ %merge.i, %fallthrough.181 ]
  %field.202 = getelementptr inbounds %Parser.0, %Parser.0* %tmpv.297.2, i64 0, i32 4, !dbg !1027
  %.field.ld.33 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.202, align 8, !dbg !1027
  %call.47 = invoke i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.33, i8* nonnull %cast.1184)
          to label %cont.32 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1028

cont.32:                                          ; preds = %fallthrough.182
  %cast.1189 = bitcast i8* %call.47 to %NamedBlock.0**, !dbg !1028
  %.ld.152 = load %NamedBlock.0*, %NamedBlock.0** %cast.1189, align 8, !dbg !1028
  call void @llvm.dbg.value(metadata %NamedBlock.0* %.ld.152, metadata !1029, metadata !DIExpression()), !dbg !1030
  %field.221 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %.ld.145, i64 0, i32 2, !dbg !1031
  %.field.ld.34 = load i64, i64* %field.221, align 8, !dbg !1031
  switch i64 %.field.ld.34, label %default.0 [
    i64 1, label %label.6.preheader
    i64 2, label %else.188
  ]

label.6.preheader:                                ; preds = %cont.32
  call void @llvm.dbg.value(metadata i64 0, metadata !1032, metadata !DIExpression()), !dbg !1034
  %field.209 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %.ld.145, i64 0, i32 0, i32 1, i32 1, !dbg !1035
  %.field.field.field.ld.050 = load i64, i64* %field.209, align 8, !dbg !1035
  %icmp.21851 = icmp sgt i64 %.field.field.field.ld.050, 0, !dbg !1036
  br i1 %icmp.21851, label %then.187.lr.ph, label %label.5

then.187.lr.ph:                                   ; preds = %label.6.preheader
  %tmpv.298.sroa.0.0.cast.1192.sroa_idx = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %.ld.145, i64 0, i32 0, i32 1, i32 0
  br label %then.187

default.0:                                        ; preds = %cont.32
  %icmp.224 = icmp eq %NamedBlock.0* %.ld.152, null, !dbg !1037
  br i1 %icmp.224, label %then.192, label %fallthrough.192

then.185:                                         ; preds = %then.187
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.185 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1038

fallthrough.185:                                  ; preds = %then.187, %then.185
  %tmpv.300.3 = phi i64 [ %tmpv.300.253, %then.185 ], [ %i.052, %then.187 ]
  %ptroff.15 = getelementptr %Node.0, %Node.0* %tmpv.298.sroa.0.0.copyload, i64 %tmpv.300.3, !dbg !1038
  %field0.55 = bitcast %Node.0* %ptroff.15 to i64*, !dbg !1039
  %ld.68 = load i64, i64* %field0.55, align 8, !dbg !1039
  %field1.55 = getelementptr inbounds %Node.0, %Node.0* %tmpv.298.sroa.0.0.copyload, i64 %tmpv.300.3, i32 1, !dbg !1039
  %4 = bitcast i8** %field1.55 to i64*, !dbg !1039
  %ld.69 = load i64, i64* %4, align 8, !dbg !1039
  invoke void @command_line_arguments.NamedBlock.push..stub(i8* nest undef, %NamedBlock.0* %.ld.152, i64 %ld.68, i64 %ld.69)
          to label %cont.36 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1039

cont.36:                                          ; preds = %fallthrough.185
  %add.10 = add nuw nsw i64 %i.052, 1, !dbg !1040
  call void @llvm.dbg.value(metadata i64 %add.10, metadata !1032, metadata !DIExpression()), !dbg !1034
  %.field.field.field.ld.0 = load i64, i64* %field.209, align 8, !dbg !1035
  %icmp.218 = icmp slt i64 %add.10, %.field.field.field.ld.0, !dbg !1036
  br i1 %icmp.218, label %then.187, label %label.5

then.187:                                         ; preds = %then.187.lr.ph, %cont.36
  %.field.field.field.ld.054 = phi i64 [ %.field.field.field.ld.050, %then.187.lr.ph ], [ %.field.field.field.ld.0, %cont.36 ]
  %tmpv.300.253 = phi i64 [ %tmpv.300.0, %then.187.lr.ph ], [ %tmpv.300.3, %cont.36 ]
  %i.052 = phi i64 [ 0, %then.187.lr.ph ], [ %add.10, %cont.36 ]
  call void @llvm.dbg.value(metadata i64 %i.052, metadata !1032, metadata !DIExpression()), !dbg !1034
  %tmpv.298.sroa.0.0.copyload = load %Node.0*, %Node.0** %tmpv.298.sroa.0.0.cast.1192.sroa_idx, align 8
  %icmp.215 = icmp slt i64 %i.052, %.field.field.field.ld.054, !dbg !1038
  br i1 %icmp.215, label %fallthrough.185, label %then.185

else.188:                                         ; preds = %cont.32
  %field.212 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %.ld.145, i64 0, i32 0, i32 1, i32 1, !dbg !1041
  %.field.field.field.ld.1 = load i64, i64* %field.212, align 8, !dbg !1041
  call void @llvm.dbg.value(metadata i64 %.field.field.field.ld.1, metadata !1043, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !1044
  %i1.045 = add i64 %.field.field.field.ld.1, -1, !dbg !1045
  call void @llvm.dbg.value(metadata i64 %i1.045, metadata !1043, metadata !DIExpression()), !dbg !1044
  %icmp.22346 = icmp sgt i64 %i1.045, -1, !dbg !1046
  br i1 %icmp.22346, label %then.191.lr.ph, label %label.5

then.191.lr.ph:                                   ; preds = %else.188
  %tmpv.303.sroa.0.0.cast.1198.sroa_idx = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %.ld.145, i64 0, i32 0, i32 1, i32 0
  br label %then.191

label.9:                                          ; preds = %fallthrough.190
  %i1.0 = add i64 %i1.048, -1, !dbg !1045
  call void @llvm.dbg.value(metadata i64 %i1.0, metadata !1043, metadata !DIExpression()), !dbg !1044
  %icmp.223 = icmp sgt i64 %i1.0, -1, !dbg !1046
  br i1 %icmp.223, label %label.9.then.191_crit_edge, label %label.5

label.9.then.191_crit_edge:                       ; preds = %label.9
  %tmpv.303.sroa.2.0.copyload.pre = load i64, i64* %field.212, align 8
  br label %then.191

then.190:                                         ; preds = %then.191
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.190 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1047

fallthrough.190:                                  ; preds = %then.191, %then.190
  %tmpv.305.4 = phi i64 [ %tmpv.305.347, %then.190 ], [ %i1.048, %then.191 ]
  %ptroff.16 = getelementptr %Node.0, %Node.0* %tmpv.303.sroa.0.0.copyload, i64 %tmpv.305.4, !dbg !1047
  %field0.56 = bitcast %Node.0* %ptroff.16 to i64*, !dbg !1048
  %ld.70 = load i64, i64* %field0.56, align 8, !dbg !1048
  %field1.56 = getelementptr inbounds %Node.0, %Node.0* %tmpv.303.sroa.0.0.copyload, i64 %tmpv.305.4, i32 1, !dbg !1048
  %5 = bitcast i8** %field1.56 to i64*, !dbg !1048
  %ld.71 = load i64, i64* %5, align 8, !dbg !1048
  invoke void @command_line_arguments.NamedBlock.pushFront..stub(i8* nest undef, %NamedBlock.0* %.ld.152, i64 %ld.70, i64 %ld.71)
          to label %label.9 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1048

then.191:                                         ; preds = %label.9.then.191_crit_edge, %then.191.lr.ph
  %tmpv.303.sroa.2.0.copyload = phi i64 [ %.field.field.field.ld.1, %then.191.lr.ph ], [ %tmpv.303.sroa.2.0.copyload.pre, %label.9.then.191_crit_edge ]
  %i1.048 = phi i64 [ %i1.045, %then.191.lr.ph ], [ %i1.0, %label.9.then.191_crit_edge ]
  %tmpv.305.347 = phi i64 [ %tmpv.305.0, %then.191.lr.ph ], [ %tmpv.305.4, %label.9.then.191_crit_edge ]
  %tmpv.303.sroa.0.0.copyload = load %Node.0*, %Node.0** %tmpv.303.sroa.0.0.cast.1198.sroa_idx, align 8
  %icmp.221 = icmp slt i64 %i1.048, %tmpv.303.sroa.2.0.copyload, !dbg !1047
  br i1 %icmp.221, label %fallthrough.190, label %then.190

then.192:                                         ; preds = %default.0
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.192 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1037

fallthrough.192:                                  ; preds = %default.0, %then.192
  %tmpv.307.3 = phi %NamedBlock.0* [ %tmpv.307.0, %then.192 ], [ %.ld.152, %default.0 ]
  %field.218 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %tmpv.307.3, i64 0, i32 0, i32 1, !dbg !1037
  %field.220 = getelementptr inbounds %NamedBlock.0, %NamedBlock.0* %.ld.145, i64 0, i32 0, i32 1, !dbg !1049
  %cast.1203 = bitcast %IPST.1* %field.220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1202, i8* nonnull align 8 %cast.1203, i64 24, i1 false)
  %runtime.writeBarrier.ld.33 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1050
  %icmp.227 = icmp eq i32 %runtime.writeBarrier.ld.33, 0, !dbg !1050
  %cast.1205 = bitcast %IPST.1* %field.218 to i8*, !dbg !1050
  br i1 %icmp.227, label %else.195, label %else.194

else.194:                                         ; preds = %fallthrough.192
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Node, i64 0, i32 0), i8* nonnull %cast.1205, i8* nonnull %cast.1202)
          to label %label.5 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1050

else.195:                                         ; preds = %fallthrough.192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1205, i8* nonnull align 8 %cast.1202, i64 24, i1 false), !dbg !1050
  br label %label.5

then.196:                                         ; preds = %label.3
  %tmpv.278.field.ld.1 = load %NamedBlock.0**, %NamedBlock.0*** %field.195, align 8, !dbg !988
  %.ld.142 = load %NamedBlock.0*, %NamedBlock.0** %tmpv.278.field.ld.1, align 8, !dbg !988
  call void @llvm.dbg.value(metadata %NamedBlock.0* %.ld.142, metadata !982, metadata !DIExpression()), !dbg !984
  %icmp.204 = icmp eq %NamedBlock.0* %.ld.142, null, !dbg !989
  br i1 %icmp.204, label %then.173, label %fallthrough.173

else.196:                                         ; preds = %label.3
  %p.ld.18 = load %Parser.0*, %Parser.0** %p.addr, align 8, !dbg !1051
  call void @llvm.dbg.value(metadata %Parser.0* %p.ld.18, metadata !945, metadata !DIExpression()), !dbg !946
  %icmp.230 = icmp eq %Parser.0* %p.ld.18, null, !dbg !1052
  br i1 %icmp.230, label %then.197, label %fallthrough.197

then.197:                                         ; preds = %else.196
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.197 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1052

fallthrough.197:                                  ; preds = %else.196, %then.197
  %field.223 = getelementptr inbounds %Parser.0, %Parser.0* %p.ld.18, i64 0, i32 5, !dbg !1052
  %.field.ld.35 = load %Parser.0*, %Parser.0** %field.223, align 8, !dbg !1052
  %icmp.231 = icmp eq %Parser.0* %.field.ld.35, null, !dbg !1053
  br i1 %icmp.231, label %then.198, label %fallthrough.198

then.198:                                         ; preds = %fallthrough.197
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.198 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1053

fallthrough.198:                                  ; preds = %fallthrough.197, %then.198
  %field.224 = getelementptr inbounds %Parser.0, %Parser.0* %.field.ld.35, i64 0, i32 6, !dbg !1053
  %.field.ld.36 = load %Block.0*, %Block.0** %field.224, align 8, !dbg !1053
  call void @llvm.dbg.value(metadata %Block.0* %.field.ld.36, metadata !958, metadata !DIExpression()), !dbg !959
  br label %fallthrough.169

then.199:                                         ; preds = %fallthrough.169
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.199 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !980

fallthrough.199:                                  ; preds = %fallthrough.169, %then.199
  %field.226 = getelementptr inbounds %Parser.0, %Parser.0* %p.ld.20, i64 0, i32 6, !dbg !980
  %runtime.writeBarrier.ld.34 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1054
  %icmp.236 = icmp eq i32 %runtime.writeBarrier.ld.34, 0, !dbg !1054
  br i1 %icmp.236, label %else.201, label %else.200

else.200:                                         ; preds = %fallthrough.199
  %cast.1219 = bitcast %Block.0** %field.226 to i8*, !dbg !1054
  %cast.1220 = bitcast %Block.0* %block.0 to i8*, !dbg !1054
  invoke void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1219, i8* %cast.1220)
          to label %finally.0 unwind label %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1054

else.201:                                         ; preds = %fallthrough.199
  store %Block.0* %block.0, %Block.0** %field.226, align 8, !dbg !1054
  br label %finally.0

catchpad.0:                                       ; preds = %pad.0.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.0 = landingpad { i8*, i32 }
          cleanup
  %ex2.0.fca.0.extract = extractvalue { i8*, i32 } %ex2.0, 0
  %ex2.0.fca.1.extract = extractvalue { i8*, i32 } %ex2.0, 1
  br label %finally.0

pad.1:                                            ; preds = %finish.0
  %ex.1 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.252), !dbg !951
  br label %finish.0

finish.0:                                         ; preds = %pad.1, %finally.0
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.252)
          to label %cont.53 unwind label %pad.1, !dbg !951

cont.53:                                          ; preds = %finish.0
  %icmp.237 = icmp eq i8 %finvar.0.0, 1
  br i1 %icmp.237, label %finret.0, label %finres.0

finres.0:                                         ; preds = %cont.53
  %excv.0.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.0.sroa.0.0, 0
  %excv.0.fca.1.insert = insertvalue { i8*, i32 } %excv.0.fca.0.insert, i32 %ehtmp.0.sroa.2.0, 1
  resume { i8*, i32 } %excv.0.fca.1.insert

finret.0:                                         ; preds = %cont.53
  ret %Block.0* %"$ret25.1", !dbg !1055
}

define void @command_line_arguments.Parser.SetFilename(i8* nest nocapture readnone %nest.22, %Parser.0* %p, i64 %filename.chunk0, i64 %filename.chunk1) #0 !dbg !1056 {
entry:
  %filename.addr = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1059, metadata !DIExpression()), !dbg !1060
  %field0.43 = bitcast { i8*, i64 }* %filename.addr to i64*
  store i64 %filename.chunk0, i64* %field0.43, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %filename.addr, i64 0, i32 1
  store i64 %filename.chunk1, i64* %0, align 8
  %icmp.169 = icmp eq %Parser.0* %p, null, !dbg !1061
  br i1 %icmp.169, label %then.137, label %else.137

then.137:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1061
  unreachable

else.137:                                         ; preds = %entry
  %field.144 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 1, !dbg !1061
  %runtime.writeBarrier.ld.27 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1062
  %icmp.171 = icmp eq i32 %runtime.writeBarrier.ld.27, 0, !dbg !1062
  %cast.996 = bitcast { i8*, i64 }* %field.144 to i8*, !dbg !1062
  %cast.997 = bitcast { i8*, i64 }* %filename.addr to i8*, !dbg !1062
  br i1 %icmp.171, label %else.139, label %else.138

fallthrough.138:                                  ; preds = %else.138, %else.139
  ret void

else.138:                                         ; preds = %else.137
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.996, i8* nonnull %cast.997), !dbg !1062
  br label %fallthrough.138

else.139:                                         ; preds = %else.137
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.996, i8* nonnull align 8 %cast.997, i64 16, i1 false), !dbg !1062
  br label %fallthrough.138
}

define void @command_line_arguments.Parser.SetVirtualFilesystem(i8* nest nocapture readnone %nest.23, %Parser.0* %p, i64 %fs.chunk0, i64 %fs.chunk1) #0 !dbg !1063 {
entry:
  %fs.addr = alloca %FileSystem.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1066, metadata !DIExpression()), !dbg !1067
  %field0.44 = bitcast %FileSystem.0* %fs.addr to i64*
  store i64 %fs.chunk0, i64* %field0.44, align 8
  %field0.441 = getelementptr inbounds %FileSystem.0, %FileSystem.0* %fs.addr, i64 0, i32 1
  %0 = bitcast i8** %field0.441 to i64*
  store i64 %fs.chunk1, i64* %0, align 8
  %icmp.172 = icmp eq %Parser.0* %p, null, !dbg !1068
  br i1 %icmp.172, label %then.140, label %else.140

then.140:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1068
  unreachable

else.140:                                         ; preds = %entry
  %field.145 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 2, !dbg !1068
  %runtime.writeBarrier.ld.28 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1069
  %icmp.174 = icmp eq i32 %runtime.writeBarrier.ld.28, 0, !dbg !1069
  %cast.1003 = bitcast %FileSystem.0* %field.145 to i8*, !dbg !1069
  %cast.1004 = bitcast %FileSystem.0* %fs.addr to i8*, !dbg !1069
  br i1 %icmp.174, label %else.142, label %else.141

fallthrough.141:                                  ; preds = %else.141, %else.142
  ret void

else.141:                                         ; preds = %else.140
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net_http.FileSystem..d, i64 0, i32 0), i8* nonnull %cast.1003, i8* nonnull %cast.1004), !dbg !1069
  br label %fallthrough.141

else.142:                                         ; preds = %else.140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1003, i8* nonnull align 8 %cast.1004, i64 16, i1 false), !dbg !1069
  br label %fallthrough.141
}

define void @command_line_arguments.Parser.advance(i8* nest nocapture readnone %nest.32, %Parser.0* %p) #0 !dbg !1070 {
entry:
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1073, metadata !DIExpression()), !dbg !1074
  %icmp.257 = icmp eq %Parser.0* %p, null, !dbg !1075
  br i1 %icmp.257, label %then.221, label %else.221

then.221:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1075
  unreachable

else.221:                                         ; preds = %entry
  %field.294 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 0, !dbg !1075
  %.field.ld.47 = load %.command-line-arguments.scanner.0*, %.command-line-arguments.scanner.0** %field.294, align 8, !dbg !1075
  %call.77 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.Next(i8* nest undef, %.command-line-arguments.scanner.0* %.field.ld.47), !dbg !1076
  %field.295 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3, !dbg !1077
  %runtime.writeBarrier.ld.35 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1078
  %icmp.260 = icmp eq i32 %runtime.writeBarrier.ld.35, 0, !dbg !1078
  br i1 %icmp.260, label %else.224, label %else.223

fallthrough.223:                                  ; preds = %else.223, %else.224
  ret void

else.223:                                         ; preds = %else.221
  %cast.1424 = bitcast %.command-line-arguments.token.0** %field.295 to i8*, !dbg !1078
  %cast.1425 = bitcast %.command-line-arguments.token.0* %call.77 to i8*, !dbg !1078
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1424, i8* %cast.1425), !dbg !1078
  br label %fallthrough.223

else.224:                                         ; preds = %else.221
  store %.command-line-arguments.token.0* %call.77, %.command-line-arguments.token.0** %field.295, align 8, !dbg !1078
  br label %fallthrough.223
}

define %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest nocapture readnone %nest.31, %Parser.0* %p, i32 %typ) #0 !dbg !1079 {
entry:
  %tmpv.379 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1082, metadata !DIExpression()), !dbg !1083
  call void @llvm.dbg.value(metadata i32 %typ, metadata !1084, metadata !DIExpression()), !dbg !1085
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !1086, metadata !DIExpression()), !dbg !1087
  %icmp.253 = icmp eq %Parser.0* %p, null, !dbg !1088
  br i1 %icmp.253, label %then.217, label %else.217

then.217:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1088
  unreachable

else.217:                                         ; preds = %entry
  %field.289 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3, !dbg !1088
  %.field.ld.44 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.289, align 8, !dbg !1088
  %icmp.254 = icmp eq %.command-line-arguments.token.0* %.field.ld.44, null, !dbg !1090
  br i1 %icmp.254, label %then.218, label %else.218

then.218:                                         ; preds = %else.217
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1090
  unreachable

else.218:                                         ; preds = %else.217
  %field.292 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.44, i64 0, i32 0, !dbg !1090
  %.field.ld.45 = load i32, i32* %field.292, align 4, !dbg !1090
  %icmp.255 = icmp eq i32 %.field.ld.45, %typ, !dbg !1091
  br i1 %icmp.255, label %else.220, label %then.219

then.219:                                         ; preds = %else.218
  %call.76 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1092
  %cast.1413 = bitcast { i8*, i64 }* %tmpv.379 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1413, i8* align 8 bitcast ({ i8*, i64 }* @const.328 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.76, i8* nonnull %cast.1413), !dbg !1092
  %0 = ptrtoint i8* %call.76 to i64, !dbg !1092
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %0), !dbg !1092
  unreachable

else.220:                                         ; preds = %else.218
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %.field.ld.44, metadata !1093, metadata !DIExpression()), !dbg !1094
  call void @command_line_arguments.Parser.advance(i8* nest undef, %Parser.0* nonnull %p), !dbg !1095
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %.field.ld.44, metadata !1086, metadata !DIExpression()), !dbg !1087
  ret %.command-line-arguments.token.0* %.field.ld.44, !dbg !1096
}

define { i64, i64 } @command_line_arguments.Parser.parse(i8* nest nocapture readnone %nest.30, %Parser.0* %p) #0 !dbg !1097 {
entry:
  %tmp.27 = alloca %IPST.6, align 8
  %tmpv.372 = alloca [1 x %IPST.7], align 8
  %tmpv.375 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1100, metadata !DIExpression()), !dbg !1101
  %icmp.249 = icmp eq %Parser.0* %p, null, !dbg !1102
  br i1 %icmp.249, label %then.213, label %else.213

then.213:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1102
  unreachable

else.213:                                         ; preds = %entry
  %field.252 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3, !dbg !1102
  %.field.ld.40 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.252, align 8, !dbg !1102
  %icmp.250 = icmp eq %.command-line-arguments.token.0* %.field.ld.40, null, !dbg !1103
  br i1 %icmp.250, label %then.214, label %else.214

then.214:                                         ; preds = %else.213
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1103
  unreachable

else.214:                                         ; preds = %else.213
  %field.279 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.40, i64 0, i32 0, !dbg !1103
  %.field.ld.41 = load i32, i32* %field.279, align 4, !dbg !1103
  switch i32 %.field.ld.41, label %else.216 [
    i32 -2, label %case.2
    i32 -3, label %case.3
    i32 -10, label %case.4
    i32 -12, label %case.5
    i32 -14, label %case.6
    i32 -16, label %case.7
    i32 -9, label %case.8
    i32 -15, label %case.9
    i32 -17, label %case.10
    i32 -18, label %case.11
    i32 -4, label %case.12
    i32 -19, label %case.13
    i32 -20, label %case.14
  ]

case.2:                                           ; preds = %else.214
  %call.60 = call %Doctype.0* @command_line_arguments.Parser.parseDoctype(i8* nest undef, %Parser.0* nonnull %p), !dbg !1104
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %0 = ptrtoint %Doctype.0* %call.60 to i64, !dbg !1107
  call void @llvm.dbg.value(metadata i64 %0, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.88.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype to i64), i64 undef }, i64 %0, 1, !dbg !1107
  ret { i64, i64 } %ld.88.fca.1.insert, !dbg !1107

case.3:                                           ; preds = %else.214
  %call.61 = call %Comment.0* @command_line_arguments.Parser.parseComment(i8* nest undef, %Parser.0* nonnull %p), !dbg !1108
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %1 = ptrtoint %Comment.0* %call.61 to i64, !dbg !1109
  call void @llvm.dbg.value(metadata i64 %1, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.89.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment to i64), i64 undef }, i64 %1, 1, !dbg !1109
  ret { i64, i64 } %ld.89.fca.1.insert, !dbg !1109

case.4:                                           ; preds = %else.214
  %call.62 = call %Text.0* @command_line_arguments.Parser.parseText(i8* nest undef, %Parser.0* nonnull %p), !dbg !1110
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %2 = ptrtoint %Text.0* %call.62 to i64, !dbg !1111
  call void @llvm.dbg.value(metadata i64 %2, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.90.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text to i64), i64 undef }, i64 %2, 1, !dbg !1111
  ret { i64, i64 } %ld.90.fca.1.insert, !dbg !1111

case.5:                                           ; preds = %else.214
  %call.63 = call %Condition.0* @command_line_arguments.Parser.parseIf(i8* nest undef, %Parser.0* nonnull %p), !dbg !1112
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %3 = ptrtoint %Condition.0* %call.63 to i64, !dbg !1113
  call void @llvm.dbg.value(metadata i64 %3, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.91.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition to i64), i64 undef }, i64 %3, 1, !dbg !1113
  ret { i64, i64 } %ld.91.fca.1.insert, !dbg !1113

case.6:                                           ; preds = %else.214
  %call.64 = call %Each.0* @command_line_arguments.Parser.parseEach(i8* nest undef, %Parser.0* nonnull %p), !dbg !1114
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %4 = ptrtoint %Each.0* %call.64 to i64, !dbg !1115
  call void @llvm.dbg.value(metadata i64 %4, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.92.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each to i64), i64 undef }, i64 %4, 1, !dbg !1115
  ret { i64, i64 } %ld.92.fca.1.insert, !dbg !1115

case.7:                                           ; preds = %else.214
  %call.65 = call %Block.0* @command_line_arguments.Parser.parseImport(i8* nest undef, %Parser.0* nonnull %p), !dbg !1116
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %5 = ptrtoint %Block.0* %call.65 to i64, !dbg !1117
  call void @llvm.dbg.value(metadata i64 %5, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.93.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), i64 undef }, i64 %5, 1, !dbg !1117
  ret { i64, i64 } %ld.93.fca.1.insert, !dbg !1117

case.8:                                           ; preds = %else.214
  %call.66 = call %Tag.0* @command_line_arguments.Parser.parseTag(i8* nest undef, %Parser.0* nonnull %p), !dbg !1118
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %6 = ptrtoint %Tag.0* %call.66 to i64, !dbg !1119
  call void @llvm.dbg.value(metadata i64 %6, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.94.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag to i64), i64 undef }, i64 %6, 1, !dbg !1119
  ret { i64, i64 } %ld.94.fca.1.insert, !dbg !1119

case.9:                                           ; preds = %else.214
  %call.67 = call %Assignment.0* @command_line_arguments.Parser.parseAssignment(i8* nest undef, %Parser.0* nonnull %p), !dbg !1120
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %7 = ptrtoint %Assignment.0* %call.67 to i64, !dbg !1121
  call void @llvm.dbg.value(metadata i64 %7, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.95.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment to i64), i64 undef }, i64 %7, 1, !dbg !1121
  ret { i64, i64 } %ld.95.fca.1.insert, !dbg !1121

case.10:                                          ; preds = %else.214
  %call.68 = call %Block.0* @command_line_arguments.Parser.parseNamedBlock(i8* nest undef, %Parser.0* nonnull %p), !dbg !1122
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %8 = ptrtoint %Block.0* %call.68 to i64, !dbg !1123
  call void @llvm.dbg.value(metadata i64 %8, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.96.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), i64 undef }, i64 %8, 1, !dbg !1123
  ret { i64, i64 } %ld.96.fca.1.insert, !dbg !1123

case.11:                                          ; preds = %else.214
  %call.69 = call %Block.0* @command_line_arguments.Parser.parseExtends(i8* nest undef, %Parser.0* nonnull %p), !dbg !1124
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %9 = ptrtoint %Block.0* %call.69 to i64, !dbg !1125
  call void @llvm.dbg.value(metadata i64 %9, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.97.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), i64 undef }, i64 %9, 1, !dbg !1125
  ret { i64, i64 } %ld.97.fca.1.insert, !dbg !1125

case.12:                                          ; preds = %else.214
  %call.70 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 0, i64 0), !dbg !1126
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %10 = ptrtoint %Block.0* %call.70 to i64, !dbg !1127
  call void @llvm.dbg.value(metadata i64 %10, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.100.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block to i64), i64 undef }, i64 %10, 1, !dbg !1127
  ret { i64, i64 } %ld.100.fca.1.insert, !dbg !1127

case.13:                                          ; preds = %else.214
  %call.71 = call %Mixin.0* @command_line_arguments.Parser.parseMixin(i8* nest undef, %Parser.0* nonnull %p), !dbg !1128
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %11 = ptrtoint %Mixin.0* %call.71 to i64, !dbg !1129
  call void @llvm.dbg.value(metadata i64 %11, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.101.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin to i64), i64 undef }, i64 %11, 1, !dbg !1129
  ret { i64, i64 } %ld.101.fca.1.insert, !dbg !1129

case.14:                                          ; preds = %else.214
  %call.72 = call %MixinCall.0* @command_line_arguments.Parser.parseMixinCall(i8* nest undef, %Parser.0* nonnull %p), !dbg !1130
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall to i64), metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1106
  %12 = ptrtoint %MixinCall.0* %call.72 to i64, !dbg !1131
  call void @llvm.dbg.value(metadata i64 %12, metadata !1105, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1106
  %ld.102.fca.1.insert = insertvalue { i64, i64 } { i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall to i64), i64 undef }, i64 %12, 1, !dbg !1131
  ret { i64, i64 } %ld.102.fca.1.insert, !dbg !1131

else.216:                                         ; preds = %else.214
  %call.73 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int32..d), !dbg !1132
  %cast.1393 = bitcast i8* %call.73 to i32*, !dbg !1132
  store i32 %.field.ld.41, i32* %cast.1393, align 4, !dbg !1132
  %tmp.26.sroa.0.0.cast.1395.sroa_idx = getelementptr inbounds [1 x %IPST.7], [1 x %IPST.7]* %tmpv.372, i64 0, i64 0, i32 0, !dbg !1132
  store %_type.0* @int32..d, %_type.0** %tmp.26.sroa.0.0.cast.1395.sroa_idx, align 8, !dbg !1132
  %tmp.26.sroa.2.0.cast.1395.sroa_idx41 = getelementptr inbounds [1 x %IPST.7], [1 x %IPST.7]* %tmpv.372, i64 0, i64 0, i32 1, !dbg !1132
  store i8* %call.73, i8** %tmp.26.sroa.2.0.cast.1395.sroa_idx41, align 8, !dbg !1132
  %field.284 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.27, i64 0, i32 0, !dbg !1132
  %cast.1398 = getelementptr inbounds [1 x %IPST.7], [1 x %IPST.7]* %tmpv.372, i64 0, i64 0, !dbg !1132
  store %IPST.7* %cast.1398, %IPST.7** %field.284, align 8, !dbg !1132
  %field.285 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.27, i64 0, i32 1, !dbg !1132
  store i64 1, i64* %field.285, align 8, !dbg !1132
  %field.286 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.27, i64 0, i32 2, !dbg !1132
  store i64 1, i64* %field.286, align 8, !dbg !1132
  %call.74 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([21 x i8]* @const.325 to i64), i64 20, %IPST.6* byval nonnull %tmp.27), !dbg !1132
  %call.74.fca.0.extract = extractvalue { i64, i64 } %call.74, 0, !dbg !1132
  %call.74.fca.1.extract = extractvalue { i64, i64 } %call.74, 1, !dbg !1132
  %call.75 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1133
  %tmpv.373.sroa.0.0.cast.1403.sroa_cast = bitcast { i8*, i64 }* %tmpv.375 to i64*
  store i64 %call.74.fca.0.extract, i64* %tmpv.373.sroa.0.0.cast.1403.sroa_cast, align 8
  %tmpv.373.sroa.2.0.cast.1403.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.375, i64 0, i32 1
  store i64 %call.74.fca.1.extract, i64* %tmpv.373.sroa.2.0.cast.1403.sroa_idx2, align 8
  %cast.1406 = bitcast { i8*, i64 }* %tmpv.375 to i8*, !dbg !1133
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.75, i8* nonnull %cast.1406), !dbg !1133
  %13 = ptrtoint i8* %call.75 to i64, !dbg !1133
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %13), !dbg !1133
  unreachable
}

define %Assignment.0* @command_line_arguments.Parser.parseAssignment(i8* nest nocapture readnone %nest.42, %Parser.0* %p) #0 !dbg !1134 {
entry:
  %x.addr.i = alloca { i8*, i64 }, align 8
  %expression.addr.i = alloca { i8*, i64 }, align 8
  %tmpv.647 = alloca { i8*, i64 }, align 8
  %tmpv.651 = alloca %SourcePosition.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1137, metadata !DIExpression()), !dbg !1138
  call void @llvm.dbg.value(metadata %Assignment.0* null, metadata !1139, metadata !DIExpression()), !dbg !1140
  %call.133 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -15), !dbg !1141
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.133, metadata !1143, metadata !DIExpression()), !dbg !1144
  %cast.1891 = bitcast { i8*, i64 }* %tmpv.647 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1891, i8* align 8 bitcast ({ i8*, i64 }* @const.344 to i8*), i64 16, i1 false)
  %icmp.444 = icmp eq %.command-line-arguments.token.0* %call.133, null, !dbg !1145
  br i1 %icmp.444, label %then.387, label %else.387

then.387:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1145
  unreachable

else.387:                                         ; preds = %entry
  %field.451 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.133, i64 0, i32 2, !dbg !1145
  %.field.ld.99 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.451, align 8, !dbg !1145
  %call.134 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.99, i8* nonnull %cast.1891), !dbg !1146
  %field.452 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.133, i64 0, i32 1, !dbg !1147
  %field0.101 = bitcast i8* %call.134 to i64*, !dbg !1148
  %ld.169 = load i64, i64* %field0.101, align 8, !dbg !1148
  %field1.101 = getelementptr inbounds i8, i8* %call.134, i64 8, !dbg !1148
  %0 = bitcast i8* %field1.101 to i64*, !dbg !1148
  %ld.170 = load i64, i64* %0, align 8, !dbg !1148
  %field0.102 = bitcast { i8*, i64 }* %field.452 to i64*, !dbg !1148
  %ld.171 = load i64, i64* %field0.102, align 8, !dbg !1148
  %1 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.133, i64 0, i32 1, i32 1, !dbg !1148
  %ld.172 = load i64, i64* %1, align 8, !dbg !1148
  %2 = bitcast { i8*, i64 }* %x.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast { i8*, i64 }* %expression.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3)
  %field0.16.i = bitcast { i8*, i64 }* %x.addr.i to i64*
  store i64 %ld.169, i64* %field0.16.i, align 8
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %x.addr.i, i64 0, i32 1
  store i64 %ld.170, i64* %4, align 8
  %field0.17.i = bitcast { i8*, i64 }* %expression.addr.i to i64*
  store i64 %ld.171, i64* %field0.17.i, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %expression.addr.i, i64 0, i32 1
  store i64 %ld.172, i64* %5, align 8
  call void @llvm.dbg.value(metadata %Assignment.0* null, metadata !1149, metadata !DIExpression()), !dbg !1153
  %call.17.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Assignment..d, i64 0, i32 0)), !dbg !1155
  %cast.530.i = bitcast i8* %call.17.i to %Assignment.0*, !dbg !1155
  call void @llvm.dbg.value(metadata %Assignment.0* %cast.530.i, metadata !1157, metadata !DIExpression()), !dbg !1158
  %icmp.94.i = icmp eq i8* %call.17.i, null, !dbg !1159
  br i1 %icmp.94.i, label %then.78.i, label %else.78.i

then.78.i:                                        ; preds = %else.387
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1159
  unreachable

else.78.i:                                        ; preds = %else.387
  %field.70.i = getelementptr inbounds i8, i8* %call.17.i, i64 40, !dbg !1159
  %runtime.writeBarrier.ld.16.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1160
  %icmp.96.i = icmp eq i32 %runtime.writeBarrier.ld.16.i, 0, !dbg !1160
  br i1 %icmp.96.i, label %else.81.thread.i, label %else.81.i

else.81.thread.i:                                 ; preds = %else.78.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.70.i, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1160
  %field.711.i = getelementptr inbounds i8, i8* %call.17.i, i64 56, !dbg !1161
  br label %else.83.i

else.81.i:                                        ; preds = %else.78.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.70.i, i8* nonnull %2), !dbg !1160
  %runtime.writeBarrier.ld.17.pr.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1162
  %field.71.i = getelementptr inbounds i8, i8* %call.17.i, i64 56, !dbg !1161
  %icmp.99.i = icmp eq i32 %runtime.writeBarrier.ld.17.pr.i, 0, !dbg !1162
  br i1 %icmp.99.i, label %else.83.i, label %else.82.i

else.82.i:                                        ; preds = %else.81.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.71.i, i8* nonnull %3), !dbg !1162
  br label %command_line_arguments.newAssignment.exit

else.83.i:                                        ; preds = %else.81.i, %else.81.thread.i
  %field.714.i = phi i8* [ %field.711.i, %else.81.thread.i ], [ %field.71.i, %else.81.i ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.714.i, i8* nonnull align 8 %3, i64 16, i1 false), !dbg !1162
  br label %command_line_arguments.newAssignment.exit

command_line_arguments.newAssignment.exit:        ; preds = %else.82.i, %else.83.i
  call void @llvm.dbg.value(metadata %Assignment.0* %cast.530.i, metadata !1149, metadata !DIExpression()), !dbg !1153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1163
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3), !dbg !1163
  call void @llvm.dbg.value(metadata %Assignment.0* %cast.530.i, metadata !1164, metadata !DIExpression()), !dbg !1165
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.651, i8* nest undef, %Parser.0* %p), !dbg !1166
  %cast.1900 = bitcast %SourcePosition.0* %tmpv.651 to i8*
  %runtime.writeBarrier.ld.60 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1167
  %icmp.448 = icmp eq i32 %runtime.writeBarrier.ld.60, 0, !dbg !1167
  br i1 %icmp.448, label %else.391, label %else.390

fallthrough.390:                                  ; preds = %else.390, %else.391
  call void @llvm.dbg.value(metadata %Assignment.0* %cast.530.i, metadata !1139, metadata !DIExpression()), !dbg !1140
  ret %Assignment.0* %cast.530.i, !dbg !1168

else.390:                                         ; preds = %command_line_arguments.newAssignment.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.17.i, i8* nonnull %cast.1900), !dbg !1167
  br label %fallthrough.390

else.391:                                         ; preds = %command_line_arguments.newAssignment.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.17.i, i8* nonnull align 8 %cast.1900, i64 40, i1 false), !dbg !1167
  br label %fallthrough.390
}

define %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest nocapture readnone %nest.34, %Parser.0* %p, i64 %parent.chunk0, i64 %parent.chunk1) #0 !dbg !1169 {
entry:
  %tmpv.397 = alloca %SourcePosition.0, align 8
  %cond = alloca { i8*, i64 }, align 8
  %tmpv.430 = alloca { i8*, i64 }, align 8
  %tmpv.433 = alloca %SourcePosition.0, align 8
  %tmpv.437 = alloca { i8*, i64 }, align 8
  %tmpv.440 = alloca %IPST.4, align 8
  %tmpv.443 = alloca %Attribute.0, align 8
  %sret.actual.32 = alloca %IPST.2, align 8
  %tmpv.453 = alloca %IPST.4, align 8
  %tmpv.455 = alloca %SourcePosition.0, align 8
  %tmpv.459 = alloca { i8*, i64 }, align 8
  %tmpv.462 = alloca %IPST.4, align 8
  %tmpv.465 = alloca %Attribute.0, align 8
  %sret.actual.34 = alloca %IPST.2, align 8
  %tmpv.475 = alloca %IPST.4, align 8
  %tmpv.477 = alloca %SourcePosition.0, align 8
  %tmpv.480 = alloca { i8*, i64 }, align 8
  %tmpv.483 = alloca { i8*, i64 }, align 8
  %tmpv.486 = alloca { i8*, i64 }, align 8
  %tmpv.488 = alloca { i8*, i64 }, align 8
  %tmpv.490 = alloca %IPST.4, align 8
  %tmpv.493 = alloca %Attribute.0, align 8
  %sret.actual.36 = alloca %IPST.2, align 8
  %tmpv.503 = alloca %IPST.4, align 8
  %tmpv.507 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1172, metadata !DIExpression()), !dbg !1173
  call void @llvm.dbg.value(metadata i64 %parent.chunk0, metadata !1174, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1175
  call void @llvm.dbg.value(metadata i64 %parent.chunk1, metadata !1174, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1175
  call void @llvm.dbg.value(metadata %Block.0* null, metadata !1176, metadata !DIExpression()), !dbg !1177
  %call.83 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -4), !dbg !1178
  %call.84 = call fastcc %Block.0* @command_line_arguments.newBlock(), !dbg !1180
  call void @llvm.dbg.value(metadata %Block.0* %call.84, metadata !1181, metadata !DIExpression()), !dbg !1182
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.397, i8* nest undef, %Parser.0* %p), !dbg !1183
  %cast.1441 = bitcast %SourcePosition.0* %tmpv.397 to i8*
  %icmp.267 = icmp eq %Block.0* %call.84, null, !dbg !1184
  br i1 %icmp.267, label %then.231, label %else.231

then.231:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1184
  unreachable

else.231:                                         ; preds = %entry
  %runtime.writeBarrier.ld.37 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1185
  %icmp.269 = icmp eq i32 %runtime.writeBarrier.ld.37, 0, !dbg !1185
  %cast.1445 = bitcast %Block.0* %call.84 to i8*, !dbg !1185
  br i1 %icmp.269, label %else.233, label %else.232

fallthrough.232:                                  ; preds = %else.232, %else.233
  %icmp.270 = icmp eq %Parser.0* %p, null, !dbg !1186
  br i1 %icmp.270, label %then.234, label %else.234.lr.ph

else.234.lr.ph:                                   ; preds = %fallthrough.232
  %field.302 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3
  %cond.0.sroa_cast = bitcast { i8*, i64 }* %cond to i8*
  %cast.1475 = bitcast { i8*, i64 }* %tmpv.430 to i8*
  %cast.1483 = bitcast %SourcePosition.0* %tmpv.433 to i8*
  %cast.1527 = bitcast %SourcePosition.0* %tmpv.455 to i8*
  %cast.1571 = bitcast %SourcePosition.0* %tmpv.477 to i8*
  %cast.1489 = bitcast { i8*, i64 }* %tmpv.437 to i8*
  %cast.1492 = bitcast %IPST.4* %tmpv.440 to i8*
  %field.323 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.440, i64 0, i32 1
  %cast.1494 = bitcast %Attribute.0* %tmpv.443 to i8*
  %field.325 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.443, i64 0, i32 1
  %cast.1496 = bitcast { i8*, i64 }* %field.325 to i8*
  %field.326 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.443, i64 0, i32 2
  %cast.1498 = bitcast { i8*, i64 }* %field.326 to i8*
  %field.327 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.443, i64 0, i32 3
  %field.328 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.443, i64 0, i32 4
  %cast.1500 = bitcast { i8*, i64 }* %field.328 to i8*
  %field.329 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.440, i64 0, i32 2
  %cast.1533 = bitcast { i8*, i64 }* %tmpv.459 to i8*
  %cast.1536 = bitcast %IPST.4* %tmpv.462 to i8*
  %field.343 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.462, i64 0, i32 1
  %cast.1538 = bitcast %Attribute.0* %tmpv.465 to i8*
  %field.345 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.465, i64 0, i32 1
  %cast.1540 = bitcast { i8*, i64 }* %field.345 to i8*
  %field.346 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.465, i64 0, i32 2
  %cast.1542 = bitcast { i8*, i64 }* %field.346 to i8*
  %field.347 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.465, i64 0, i32 3
  %field.348 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.465, i64 0, i32 4
  %cast.1544 = bitcast { i8*, i64 }* %field.348 to i8*
  %field.349 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.462, i64 0, i32 2
  %cast.1574 = bitcast { i8*, i64 }* %tmpv.480 to i8*
  %cast.1580 = bitcast { i8*, i64 }* %tmpv.483 to i8*
  %cast.1587 = bitcast { i8*, i64 }* %tmpv.486 to i8*
  %cast.1589 = bitcast { i8*, i64 }* %tmpv.488 to i8*
  %cast.1594 = bitcast %IPST.4* %tmpv.490 to i8*
  %field.365 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.490, i64 0, i32 1
  %cast.1596 = bitcast %Attribute.0* %tmpv.493 to i8*
  %field.367 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.493, i64 0, i32 1
  %cast.1598 = bitcast { i8*, i64 }* %field.367 to i8*
  %field.368 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.493, i64 0, i32 2
  %cast.1600 = bitcast { i8*, i64 }* %field.368 to i8*
  %field.369 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.493, i64 0, i32 3
  %field.370 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.493, i64 0, i32 4
  %cast.1602 = bitcast { i8*, i64 }* %field.370 to i8*
  %field.371 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.490, i64 0, i32 2
  %cast.1503 = bitcast %IPST.4* %tmpv.440 to %IPST.2*
  %tmpv.448.sroa.0.0.cast.1508.sroa_idx = bitcast %IPST.2* %sret.actual.32 to %Attribute.0**
  %0 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.32, i64 0, i32 1
  %1 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.32, i64 0, i32 2
  %tmpv.448.sroa.0.0.cast.1511.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.440, i64 0, i32 0
  %cast.1547 = bitcast %IPST.4* %tmpv.462 to %IPST.2*
  %tmpv.470.sroa.0.0.cast.1552.sroa_idx = bitcast %IPST.2* %sret.actual.34 to %Attribute.0**
  %2 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.34, i64 0, i32 1
  %3 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.34, i64 0, i32 2
  %tmpv.470.sroa.0.0.cast.1555.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.462, i64 0, i32 0
  %cast.1605 = bitcast %IPST.4* %tmpv.490 to %IPST.2*
  %tmpv.498.sroa.0.0.cast.1610.sroa_idx = bitcast %IPST.2* %sret.actual.36 to %Attribute.0**
  %4 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.36, i64 0, i32 1
  %5 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.36, i64 0, i32 2
  %tmpv.498.sroa.0.0.cast.1613.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.490, i64 0, i32 0
  %cast.1519 = bitcast %IPST.4* %tmpv.453 to i8*
  %cast.1563 = bitcast %IPST.4* %tmpv.475 to i8*
  %cast.1621 = bitcast %IPST.4* %tmpv.503 to i8*
  %.field.ld.4991 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.302, align 8, !dbg !1186
  %icmp.27192 = icmp eq %.command-line-arguments.token.0* %.field.ld.4991, null, !dbg !1187
  br i1 %icmp.27192, label %label.1, label %fallthrough.235

else.232:                                         ; preds = %else.231
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* %cast.1445, i8* nonnull %cast.1441), !dbg !1185
  br label %fallthrough.232

else.233:                                         ; preds = %else.231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1445, i8* nonnull align 8 %cast.1441, i64 40, i1 false), !dbg !1185
  br label %fallthrough.232

then.234:                                         ; preds = %fallthrough.232
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1186
  unreachable

fallthrough.235:                                  ; preds = %else.234.lr.ph, %label.2
  %.field.ld.4993 = phi %.command-line-arguments.token.0* [ %.field.ld.49, %label.2 ], [ %.field.ld.4991, %else.234.lr.ph ]
  %field.304 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.4993, i64 0, i32 0, !dbg !1188
  %.field.ld.51 = load i32, i32* %field.304, align 4, !dbg !1188
  switch i32 %.field.ld.51, label %else.253 [
    i32 -1, label %label.1
    i32 -5, label %label.1
    i32 -6, label %then.244
    i32 -7, label %then.253
    i32 -8, label %then.253
    i32 -11, label %then.253
  ]

label.1:                                          ; preds = %label.2, %fallthrough.235, %fallthrough.235, %else.234.lr.ph
  %call.93 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* nonnull %p, i32 -5), !dbg !1189
  call void @llvm.dbg.value(metadata %Block.0* %call.84, metadata !1176, metadata !DIExpression()), !dbg !1177
  ret %Block.0* %call.84, !dbg !1190

then.244:                                         ; preds = %fallthrough.235
  call void @command_line_arguments.Parser.advance(i8* nest undef, %Parser.0* nonnull %p), !dbg !1191
  br label %label.2

label.2:                                          ; preds = %else.293, %else.292, %else.280, %else.279, %else.257, %else.268, %else.269, %else.253, %then.244
  %.field.ld.49 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.302, align 8, !dbg !1186
  %icmp.271 = icmp eq %.command-line-arguments.token.0* %.field.ld.49, null, !dbg !1187
  br i1 %icmp.271, label %label.1, label %fallthrough.235

then.253:                                         ; preds = %fallthrough.235, %fallthrough.235, %fallthrough.235
  call void @llvm.dbg.value(metadata %Tag.0* null, metadata !1192, metadata !DIExpression()), !dbg !1194
  call void @llvm.dbg.value(metadata i8 0, metadata !1195, metadata !DIExpression()), !dbg !1194
  %call.85 = call { i64, i8 } @runtime.ifaceI2T2P(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Tag, i64 0, i32 0), i64 %parent.chunk0, i64 %parent.chunk1), !dbg !1196
  %call.85.fca.0.extract = extractvalue { i64, i8 } %call.85, 0, !dbg !1196
  %call.85.fca.1.extract = extractvalue { i64, i8 } %call.85, 1, !dbg !1196
  %cast.1472 = inttoptr i64 %call.85.fca.0.extract to %Tag.0*, !dbg !1196
  call void @llvm.dbg.value(metadata %Tag.0* %cast.1472, metadata !1192, metadata !DIExpression()), !dbg !1194
  call void @llvm.dbg.value(metadata i8 %call.85.fca.1.extract, metadata !1195, metadata !DIExpression()), !dbg !1194
  %6 = and i8 %call.85.fca.1.extract, 1, !dbg !1197
  %trunc.294 = icmp eq i8 %6, 0, !dbg !1197
  br i1 %trunc.294, label %else.254, label %then.254

else.253:                                         ; preds = %fallthrough.235
  %call.92 = call { i64, i64 } @command_line_arguments.Parser.parse(i8* nest undef, %Parser.0* nonnull %p), !dbg !1198
  %call.92.fca.0.extract = extractvalue { i64, i64 } %call.92, 0, !dbg !1198
  %call.92.fca.1.extract = extractvalue { i64, i64 } %call.92, 1, !dbg !1198
  call void @command_line_arguments.Block.push(i8* nest undef, %Block.0* nonnull %call.84, i64 %call.92.fca.0.extract, i64 %call.92.fca.1.extract), !dbg !1199
  br label %label.2

then.254:                                         ; preds = %then.253
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %cond.0.sroa_cast)
  %.field.ld.62 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.302, align 8, !dbg !1200
  %icmp.295 = icmp eq %.command-line-arguments.token.0* %.field.ld.62, null, !dbg !1202
  br i1 %icmp.295, label %then.256, label %else.256

else.254:                                         ; preds = %then.253
  %call.91 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1203
  %cast.1631 = bitcast { i8*, i64 }* %tmpv.507 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1631, i8* align 8 bitcast ({ i8*, i64 }* @const.343 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.91, i8* nonnull %cast.1631), !dbg !1203
  %7 = ptrtoint i8* %call.91 to i64, !dbg !1203
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %7), !dbg !1203
  unreachable

then.256:                                         ; preds = %then.254
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1202
  unreachable

else.256:                                         ; preds = %then.254
  %field.318 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.62, i64 0, i32 0, !dbg !1202
  %.field.ld.63 = load i32, i32* %field.318, align 4, !dbg !1202
  %call.86 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* nonnull %p, i32 %.field.ld.63), !dbg !1204
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.86, metadata !1205, metadata !DIExpression()), !dbg !1206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1475, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false)
  %icmp.296 = icmp eq %.command-line-arguments.token.0* %call.86, null, !dbg !1207
  br i1 %icmp.296, label %then.257, label %else.257

then.257:                                         ; preds = %else.256
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1207
  unreachable

else.257:                                         ; preds = %else.256
  %field.319 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.86, i64 0, i32 2, !dbg !1207
  %.field.ld.64 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.319, align 8, !dbg !1207
  %call.87 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.64, i8* nonnull %cast.1475), !dbg !1208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cond.0.sroa_cast, i8* align 8 %call.87, i64 16, i1 false)
  %field.382 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.86, i64 0, i32 0, !dbg !1209
  %.field.ld.76 = load i32, i32* %field.382, align 4, !dbg !1209
  switch i32 %.field.ld.76, label %label.2 [
    i32 -7, label %case.15
    i32 -8, label %case.16
    i32 -11, label %case.17
  ]

case.15:                                          ; preds = %else.257
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.433, i8* nest undef, %Parser.0* nonnull %p), !dbg !1210
  %icmp.297 = icmp eq i64 %call.85.fca.0.extract, 0, !dbg !1211
  br i1 %icmp.297, label %then.259, label %else.259

case.16:                                          ; preds = %else.257
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.455, i8* nest undef, %Parser.0* nonnull %p), !dbg !1212
  %icmp.313 = icmp eq i64 %call.85.fca.0.extract, 0, !dbg !1213
  br i1 %icmp.313, label %then.270, label %else.270

case.17:                                          ; preds = %else.257
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.477, i8* nest undef, %Parser.0* nonnull %p), !dbg !1214
  %icmp.329 = icmp eq i64 %call.85.fca.0.extract, 0, !dbg !1215
  br i1 %icmp.329, label %then.281, label %else.281

then.259:                                         ; preds = %case.15
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1211
  unreachable

else.259:                                         ; preds = %case.15
  %field.320 = getelementptr inbounds %Tag.0, %Tag.0* %cast.1472, i64 0, i32 4, !dbg !1211
  %field.321 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.86, i64 0, i32 1, !dbg !1216
  %cast.1490 = bitcast { i8*, i64 }* %field.321 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1489, i8* nonnull align 8 %cast.1490, i64 16, i1 false)
  %cast.1493 = bitcast %IPST.4* %field.320 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1492, i8* nonnull align 8 %cast.1493, i64 24, i1 false)
  %tmpv.440.field.ld.0 = load i64, i64* %field.323, align 8, !dbg !1217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1494, i8* nonnull align 8 %cast.1483, i64 40, i1 false), !dbg !1218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1496, i8* align 8 bitcast ({ i8*, i64 }* @const.333 to i8*), i64 16, i1 false), !dbg !1218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1498, i8* nonnull align 8 %cast.1489, i64 16, i1 false), !dbg !1218
  store i8 1, i8* %field.327, align 8, !dbg !1218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1500, i8* nonnull align 8 %cond.0.sroa_cast, i64 16, i1 false), !dbg !1218
  %add.11 = add i64 %tmpv.440.field.ld.0, 1, !dbg !1217
  %tmpv.440.field.ld.1 = load i64, i64* %field.329, align 8, !dbg !1217
  %icmp.300 = icmp ugt i64 %add.11, %tmpv.440.field.ld.1, !dbg !1217
  br i1 %icmp.300, label %then.262, label %else.262

then.262:                                         ; preds = %else.259
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.32, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.1503, i64 %add.11), !dbg !1217
  %tmpv.448.sroa.0.0.copyload = load %Attribute.0*, %Attribute.0** %tmpv.448.sroa.0.0.cast.1508.sroa_idx, align 8
  %tmpv.448.sroa.3.0.copyload = load i64, i64* %0, align 8
  %tmpv.448.sroa.4.0.copyload = load i64, i64* %1, align 8
  br label %fallthrough.262

fallthrough.262:                                  ; preds = %else.263, %then.262
  %tmpv.448.sroa.0.0 = phi %Attribute.0* [ %tmpv.448.sroa.0.0.copyload, %then.262 ], [ %tmpv.440.field.ld.3, %else.263 ]
  %tmpv.448.sroa.3.0 = phi i64 [ %tmpv.448.sroa.3.0.copyload, %then.262 ], [ %add.11, %else.263 ]
  %tmpv.448.sroa.4.0 = phi i64 [ %tmpv.448.sroa.4.0.copyload, %then.262 ], [ %tmpv.440.field.ld.1, %else.263 ]
  store %Attribute.0* %tmpv.448.sroa.0.0, %Attribute.0** %tmpv.448.sroa.0.0.cast.1511.sroa_idx, align 8, !dbg !1217
  store i64 %tmpv.448.sroa.3.0, i64* %field.323, align 8, !dbg !1217
  store i64 %tmpv.448.sroa.4.0, i64* %field.329, align 8, !dbg !1217
  %icmp.307 = icmp sge i64 %tmpv.440.field.ld.0, %tmpv.448.sroa.3.0, !dbg !1217
  %8 = icmp slt i64 %tmpv.440.field.ld.0, 0, !dbg !1217
  %ior.153 = or i1 %8, %icmp.307, !dbg !1217
  br i1 %ior.153, label %then.265, label %else.265

else.262:                                         ; preds = %else.259
  %icmp.302 = icmp sgt i64 %add.11, %tmpv.440.field.ld.1, !dbg !1217
  %add.11.lobit89 = or i64 %tmpv.440.field.ld.1, %add.11, !dbg !1217
  %9 = icmp slt i64 %add.11.lobit89, 0, !dbg !1217
  %10 = or i1 %icmp.302, %9, !dbg !1217
  br i1 %10, label %then.263, label %else.263

then.263:                                         ; preds = %else.262
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1217
  unreachable

else.263:                                         ; preds = %else.262
  %tmpv.440.field.ld.3 = load %Attribute.0*, %Attribute.0** %tmpv.448.sroa.0.0.cast.1511.sroa_idx, align 8, !dbg !1217
  br label %fallthrough.262

then.265:                                         ; preds = %fallthrough.262
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1217
  unreachable

else.265:                                         ; preds = %fallthrough.262
  %ptroff.18 = getelementptr %Attribute.0, %Attribute.0* %tmpv.448.sroa.0.0, i64 %tmpv.440.field.ld.0, !dbg !1217
  %runtime.writeBarrier.ld.38 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1217
  %icmp.310 = icmp eq i32 %runtime.writeBarrier.ld.38, 0, !dbg !1217
  br i1 %icmp.310, label %then.266, label %else.266

then.266:                                         ; preds = %else.265
  %icmp.309 = icmp eq %Attribute.0* %ptroff.18, null, !dbg !1217
  br i1 %icmp.309, label %then.267, label %else.267

fallthrough.266:                                  ; preds = %else.266, %else.267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1519, i8* nonnull align 8 %cast.1492, i64 24, i1 false)
  %runtime.writeBarrier.ld.39 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1219
  %icmp.312 = icmp eq i32 %runtime.writeBarrier.ld.39, 0, !dbg !1219
  br i1 %icmp.312, label %else.269, label %else.268

else.266:                                         ; preds = %else.265
  %cast.1517 = bitcast %Attribute.0* %ptroff.18 to i8*, !dbg !1217
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), i8* %cast.1517, i8* nonnull %cast.1494), !dbg !1217
  br label %fallthrough.266

then.267:                                         ; preds = %then.266
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1217
  unreachable

else.267:                                         ; preds = %then.266
  %cast.1514 = bitcast %Attribute.0* %ptroff.18 to i8*, !dbg !1217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1514, i8* nonnull align 8 %cast.1494, i64 96, i1 false), !dbg !1217
  br label %fallthrough.266

else.268:                                         ; preds = %fallthrough.266
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i64 0, i32 0), i8* nonnull %cast.1493, i8* nonnull %cast.1519), !dbg !1219
  br label %label.2

else.269:                                         ; preds = %fallthrough.266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1493, i8* nonnull align 8 %cast.1519, i64 24, i1 false), !dbg !1219
  br label %label.2

then.270:                                         ; preds = %case.16
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1213
  unreachable

else.270:                                         ; preds = %case.16
  %field.340 = getelementptr inbounds %Tag.0, %Tag.0* %cast.1472, i64 0, i32 4, !dbg !1213
  %field.341 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.86, i64 0, i32 1, !dbg !1220
  %cast.1534 = bitcast { i8*, i64 }* %field.341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1533, i8* nonnull align 8 %cast.1534, i64 16, i1 false)
  %cast.1537 = bitcast %IPST.4* %field.340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1536, i8* nonnull align 8 %cast.1537, i64 24, i1 false)
  %tmpv.462.field.ld.0 = load i64, i64* %field.343, align 8, !dbg !1221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1538, i8* nonnull align 8 %cast.1527, i64 40, i1 false), !dbg !1222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1540, i8* align 8 bitcast ({ i8*, i64 }* @const.335 to i8*), i64 16, i1 false), !dbg !1222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1542, i8* nonnull align 8 %cast.1533, i64 16, i1 false), !dbg !1222
  store i8 1, i8* %field.347, align 8, !dbg !1222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1544, i8* nonnull align 8 %cond.0.sroa_cast, i64 16, i1 false), !dbg !1222
  %add.13 = add i64 %tmpv.462.field.ld.0, 1, !dbg !1221
  %tmpv.462.field.ld.1 = load i64, i64* %field.349, align 8, !dbg !1221
  %icmp.316 = icmp ugt i64 %add.13, %tmpv.462.field.ld.1, !dbg !1221
  br i1 %icmp.316, label %then.273, label %else.273

then.273:                                         ; preds = %else.270
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.34, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.1547, i64 %add.13), !dbg !1221
  %tmpv.470.sroa.0.0.copyload = load %Attribute.0*, %Attribute.0** %tmpv.470.sroa.0.0.cast.1552.sroa_idx, align 8
  %tmpv.470.sroa.3.0.copyload = load i64, i64* %2, align 8
  %tmpv.470.sroa.4.0.copyload = load i64, i64* %3, align 8
  br label %fallthrough.273

fallthrough.273:                                  ; preds = %else.274, %then.273
  %tmpv.470.sroa.0.0 = phi %Attribute.0* [ %tmpv.470.sroa.0.0.copyload, %then.273 ], [ %tmpv.462.field.ld.3, %else.274 ]
  %tmpv.470.sroa.3.0 = phi i64 [ %tmpv.470.sroa.3.0.copyload, %then.273 ], [ %add.13, %else.274 ]
  %tmpv.470.sroa.4.0 = phi i64 [ %tmpv.470.sroa.4.0.copyload, %then.273 ], [ %tmpv.462.field.ld.1, %else.274 ]
  store %Attribute.0* %tmpv.470.sroa.0.0, %Attribute.0** %tmpv.470.sroa.0.0.cast.1555.sroa_idx, align 8, !dbg !1221
  store i64 %tmpv.470.sroa.3.0, i64* %field.343, align 8, !dbg !1221
  store i64 %tmpv.470.sroa.4.0, i64* %field.349, align 8, !dbg !1221
  %icmp.323 = icmp sge i64 %tmpv.462.field.ld.0, %tmpv.470.sroa.3.0, !dbg !1221
  %11 = icmp slt i64 %tmpv.462.field.ld.0, 0, !dbg !1221
  %ior.161 = or i1 %11, %icmp.323, !dbg !1221
  br i1 %ior.161, label %then.276, label %else.276

else.273:                                         ; preds = %else.270
  %icmp.318 = icmp sgt i64 %add.13, %tmpv.462.field.ld.1, !dbg !1221
  %add.13.lobit88 = or i64 %tmpv.462.field.ld.1, %add.13, !dbg !1221
  %12 = icmp slt i64 %add.13.lobit88, 0, !dbg !1221
  %13 = or i1 %icmp.318, %12, !dbg !1221
  br i1 %13, label %then.274, label %else.274

then.274:                                         ; preds = %else.273
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1221
  unreachable

else.274:                                         ; preds = %else.273
  %tmpv.462.field.ld.3 = load %Attribute.0*, %Attribute.0** %tmpv.470.sroa.0.0.cast.1555.sroa_idx, align 8, !dbg !1221
  br label %fallthrough.273

then.276:                                         ; preds = %fallthrough.273
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1221
  unreachable

else.276:                                         ; preds = %fallthrough.273
  %ptroff.20 = getelementptr %Attribute.0, %Attribute.0* %tmpv.470.sroa.0.0, i64 %tmpv.462.field.ld.0, !dbg !1221
  %runtime.writeBarrier.ld.40 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1221
  %icmp.326 = icmp eq i32 %runtime.writeBarrier.ld.40, 0, !dbg !1221
  br i1 %icmp.326, label %then.277, label %else.277

then.277:                                         ; preds = %else.276
  %icmp.325 = icmp eq %Attribute.0* %ptroff.20, null, !dbg !1221
  br i1 %icmp.325, label %then.278, label %else.278

fallthrough.277:                                  ; preds = %else.277, %else.278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1563, i8* nonnull align 8 %cast.1536, i64 24, i1 false)
  %runtime.writeBarrier.ld.41 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1223
  %icmp.328 = icmp eq i32 %runtime.writeBarrier.ld.41, 0, !dbg !1223
  br i1 %icmp.328, label %else.280, label %else.279

else.277:                                         ; preds = %else.276
  %cast.1561 = bitcast %Attribute.0* %ptroff.20 to i8*, !dbg !1221
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), i8* %cast.1561, i8* nonnull %cast.1538), !dbg !1221
  br label %fallthrough.277

then.278:                                         ; preds = %then.277
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1221
  unreachable

else.278:                                         ; preds = %then.277
  %cast.1558 = bitcast %Attribute.0* %ptroff.20 to i8*, !dbg !1221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1558, i8* nonnull align 8 %cast.1538, i64 96, i1 false), !dbg !1221
  br label %fallthrough.277

else.279:                                         ; preds = %fallthrough.277
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i64 0, i32 0), i8* nonnull %cast.1537, i8* nonnull %cast.1563), !dbg !1223
  br label %label.2

else.280:                                         ; preds = %fallthrough.277
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1537, i8* nonnull align 8 %cast.1563, i64 24, i1 false), !dbg !1223
  br label %label.2

then.281:                                         ; preds = %case.17
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1215
  unreachable

else.281:                                         ; preds = %case.17
  %field.360 = getelementptr inbounds %Tag.0, %Tag.0* %cast.1472, i64 0, i32 4, !dbg !1215
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1574, i8* align 8 bitcast ({ i8*, i64 }* @const.337 to i8*), i64 16, i1 false)
  %.field.ld.71 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.319, align 8, !dbg !1224
  %call.88 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.71, i8* nonnull %cast.1574), !dbg !1225
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1580, i8* align 8 bitcast ({ i8*, i64 }* @const.339 to i8*), i64 16, i1 false)
  %.field.ld.72 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.319, align 8, !dbg !1226
  %call.89 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.72, i8* nonnull %cast.1580), !dbg !1227
  %field.363 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.86, i64 0, i32 1, !dbg !1228
  %cast.1588 = bitcast { i8*, i64 }* %field.363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1587, i8* nonnull align 8 %cast.1588, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1589, i8* align 8 %call.88, i64 16, i1 false)
  %field0.73 = bitcast i8* %call.89 to i64*, !dbg !1229
  %ld.115 = load i64, i64* %field0.73, align 8, !dbg !1229
  %field1.73 = getelementptr inbounds i8, i8* %call.89, i64 8, !dbg !1229
  %14 = bitcast i8* %field1.73 to i64*, !dbg !1229
  %ld.116 = load i64, i64* %14, align 8, !dbg !1229
  %call.90 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.115, i64 %ld.116, i64 ptrtoint ([4 x i8]* @const.340 to i64), i64 3), !dbg !1229
  %icmp.333 = icmp eq i8 %call.90, 1, !dbg !1229
  %zext.333 = zext i1 %icmp.333 to i8, !dbg !1229
  %cast.1595 = bitcast %IPST.4* %field.360 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1594, i8* nonnull align 8 %cast.1595, i64 24, i1 false)
  %tmpv.490.field.ld.0 = load i64, i64* %field.365, align 8, !dbg !1230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1596, i8* nonnull align 8 %cast.1571, i64 40, i1 false), !dbg !1231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1598, i8* nonnull align 8 %cast.1587, i64 16, i1 false), !dbg !1231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1600, i8* nonnull align 8 %cast.1589, i64 16, i1 false), !dbg !1231
  store i8 %zext.333, i8* %field.369, align 8, !dbg !1231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1602, i8* nonnull align 8 %cond.0.sroa_cast, i64 16, i1 false), !dbg !1231
  %add.15 = add i64 %tmpv.490.field.ld.0, 1, !dbg !1230
  %tmpv.490.field.ld.1 = load i64, i64* %field.371, align 8, !dbg !1230
  %icmp.335 = icmp ugt i64 %add.15, %tmpv.490.field.ld.1, !dbg !1230
  br i1 %icmp.335, label %then.286, label %else.286

then.286:                                         ; preds = %else.281
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.36, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.1605, i64 %add.15), !dbg !1230
  %tmpv.498.sroa.0.0.copyload = load %Attribute.0*, %Attribute.0** %tmpv.498.sroa.0.0.cast.1610.sroa_idx, align 8
  %tmpv.498.sroa.3.0.copyload = load i64, i64* %4, align 8
  %tmpv.498.sroa.4.0.copyload = load i64, i64* %5, align 8
  br label %fallthrough.286

fallthrough.286:                                  ; preds = %else.287, %then.286
  %tmpv.498.sroa.0.0 = phi %Attribute.0* [ %tmpv.498.sroa.0.0.copyload, %then.286 ], [ %tmpv.490.field.ld.3, %else.287 ]
  %tmpv.498.sroa.3.0 = phi i64 [ %tmpv.498.sroa.3.0.copyload, %then.286 ], [ %add.15, %else.287 ]
  %tmpv.498.sroa.4.0 = phi i64 [ %tmpv.498.sroa.4.0.copyload, %then.286 ], [ %tmpv.490.field.ld.1, %else.287 ]
  store %Attribute.0* %tmpv.498.sroa.0.0, %Attribute.0** %tmpv.498.sroa.0.0.cast.1613.sroa_idx, align 8, !dbg !1230
  store i64 %tmpv.498.sroa.3.0, i64* %field.365, align 8, !dbg !1230
  store i64 %tmpv.498.sroa.4.0, i64* %field.371, align 8, !dbg !1230
  %icmp.342 = icmp sge i64 %tmpv.490.field.ld.0, %tmpv.498.sroa.3.0, !dbg !1230
  %15 = icmp slt i64 %tmpv.490.field.ld.0, 0, !dbg !1230
  %ior.169 = or i1 %15, %icmp.342, !dbg !1230
  br i1 %ior.169, label %then.289, label %else.289

else.286:                                         ; preds = %else.281
  %icmp.337 = icmp sgt i64 %add.15, %tmpv.490.field.ld.1, !dbg !1230
  %add.15.lobit87 = or i64 %tmpv.490.field.ld.1, %add.15, !dbg !1230
  %16 = icmp slt i64 %add.15.lobit87, 0, !dbg !1230
  %17 = or i1 %icmp.337, %16, !dbg !1230
  br i1 %17, label %then.287, label %else.287

then.287:                                         ; preds = %else.286
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1230
  unreachable

else.287:                                         ; preds = %else.286
  %tmpv.490.field.ld.3 = load %Attribute.0*, %Attribute.0** %tmpv.498.sroa.0.0.cast.1613.sroa_idx, align 8, !dbg !1230
  br label %fallthrough.286

then.289:                                         ; preds = %fallthrough.286
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1230
  unreachable

else.289:                                         ; preds = %fallthrough.286
  %ptroff.22 = getelementptr %Attribute.0, %Attribute.0* %tmpv.498.sroa.0.0, i64 %tmpv.490.field.ld.0, !dbg !1230
  %runtime.writeBarrier.ld.42 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1230
  %icmp.345 = icmp eq i32 %runtime.writeBarrier.ld.42, 0, !dbg !1230
  br i1 %icmp.345, label %then.290, label %else.290

then.290:                                         ; preds = %else.289
  %icmp.344 = icmp eq %Attribute.0* %ptroff.22, null, !dbg !1230
  br i1 %icmp.344, label %then.291, label %else.291

fallthrough.290:                                  ; preds = %else.290, %else.291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1621, i8* nonnull align 8 %cast.1594, i64 24, i1 false)
  %runtime.writeBarrier.ld.43 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1232
  %icmp.347 = icmp eq i32 %runtime.writeBarrier.ld.43, 0, !dbg !1232
  br i1 %icmp.347, label %else.293, label %else.292

else.290:                                         ; preds = %else.289
  %cast.1619 = bitcast %Attribute.0* %ptroff.22 to i8*, !dbg !1230
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), i8* %cast.1619, i8* nonnull %cast.1596), !dbg !1230
  br label %fallthrough.290

then.291:                                         ; preds = %then.290
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1230
  unreachable

else.291:                                         ; preds = %then.290
  %cast.1616 = bitcast %Attribute.0* %ptroff.22 to i8*, !dbg !1230
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1616, i8* nonnull align 8 %cast.1596, i64 96, i1 false), !dbg !1230
  br label %fallthrough.290

else.292:                                         ; preds = %fallthrough.290
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i64 0, i32 0), i8* nonnull %cast.1595, i8* nonnull %cast.1621), !dbg !1232
  br label %label.2

else.293:                                         ; preds = %fallthrough.290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1595, i8* nonnull align 8 %cast.1621, i64 24, i1 false), !dbg !1232
  br label %label.2
}

define %Comment.0* @command_line_arguments.Parser.parseComment(i8* nest nocapture readnone %nest.40, %Parser.0* %p) #0 !dbg !1233 {
entry:
  %value.addr.i = alloca { i8*, i64 }, align 8
  %tmpv.623 = alloca %SourcePosition.0, align 8
  %tmpv.627 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1236, metadata !DIExpression()), !dbg !1237
  call void @llvm.dbg.value(metadata %Comment.0* null, metadata !1238, metadata !DIExpression()), !dbg !1239
  %call.124 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -3), !dbg !1240
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.124, metadata !1242, metadata !DIExpression()), !dbg !1243
  %icmp.425 = icmp eq %.command-line-arguments.token.0* %call.124, null, !dbg !1244
  br i1 %icmp.425, label %then.370, label %else.370

then.370:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1244
  unreachable

else.370:                                         ; preds = %entry
  %field.439 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.124, i64 0, i32 1, !dbg !1244
  %field0.94 = bitcast { i8*, i64 }* %field.439 to i64*, !dbg !1245
  %ld.155 = load i64, i64* %field0.94, align 8, !dbg !1245
  %0 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.124, i64 0, i32 1, i32 1, !dbg !1245
  %ld.156 = load i64, i64* %0, align 8, !dbg !1245
  %1 = bitcast { i8*, i64 }* %value.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1)
  %field0.1.i = bitcast { i8*, i64 }* %value.addr.i to i64*
  store i64 %ld.155, i64* %field0.1.i, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %value.addr.i, i64 0, i32 1
  store i64 %ld.156, i64* %2, align 8
  call void @llvm.dbg.value(metadata %Comment.0* null, metadata !1246, metadata !DIExpression()), !dbg !1250
  %call.4.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Comment..d, i64 0, i32 0)), !dbg !1252
  %cast.177.i = bitcast i8* %call.4.i to %Comment.0*, !dbg !1252
  call void @llvm.dbg.value(metadata %Comment.0* %cast.177.i, metadata !1254, metadata !DIExpression()), !dbg !1255
  %icmp.9.i = icmp eq i8* %call.4.i, null, !dbg !1256
  br i1 %icmp.9.i, label %then.7.i, label %else.7.i

then.7.i:                                         ; preds = %else.370
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1256
  unreachable

else.7.i:                                         ; preds = %else.370
  %field.4.i = getelementptr inbounds i8, i8* %call.4.i, i64 40, !dbg !1256
  %runtime.writeBarrier.ld.2.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1257
  %icmp.11.i = icmp eq i32 %runtime.writeBarrier.ld.2.i, 0, !dbg !1257
  br i1 %icmp.11.i, label %else.10.thread.i, label %else.10.i

else.10.thread.i:                                 ; preds = %else.7.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.4.i, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !1257
  %field.51.i = getelementptr inbounds i8, i8* %call.4.i, i64 56, !dbg !1258
  br label %else.12.i

else.10.i:                                        ; preds = %else.7.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.4.i, i8* nonnull %1), !dbg !1257
  %runtime.writeBarrier.ld.3.pr.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1259
  %field.5.i = getelementptr inbounds i8, i8* %call.4.i, i64 56, !dbg !1258
  %icmp.14.i = icmp eq i32 %runtime.writeBarrier.ld.3.pr.i, 0, !dbg !1259
  br i1 %icmp.14.i, label %else.12.i, label %else.11.i

else.11.i:                                        ; preds = %else.10.i
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.5.i, i8* null), !dbg !1259
  br label %command_line_arguments.newComment.exit

else.12.i:                                        ; preds = %else.10.i, %else.10.thread.i
  %.in.i = phi i8* [ %field.51.i, %else.10.thread.i ], [ %field.5.i, %else.10.i ]
  %3 = bitcast i8* %.in.i to %Block.0**, !dbg !1258
  store %Block.0* null, %Block.0** %3, align 8, !dbg !1259
  br label %command_line_arguments.newComment.exit

command_line_arguments.newComment.exit:           ; preds = %else.11.i, %else.12.i
  %4 = getelementptr inbounds i8, i8* %call.4.i, i64 64, !dbg !1260
  store i8 0, i8* %4, align 1, !dbg !1261
  call void @llvm.dbg.value(metadata %Comment.0* %cast.177.i, metadata !1246, metadata !DIExpression()), !dbg !1250
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1), !dbg !1262
  call void @llvm.dbg.value(metadata %Comment.0* %cast.177.i, metadata !1263, metadata !DIExpression()), !dbg !1264
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.623, i8* nest undef, %Parser.0* %p), !dbg !1265
  %cast.1845 = bitcast %SourcePosition.0* %tmpv.623 to i8*
  %runtime.writeBarrier.ld.57 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1266
  %icmp.428 = icmp eq i32 %runtime.writeBarrier.ld.57, 0, !dbg !1266
  br i1 %icmp.428, label %else.373, label %else.372

fallthrough.372:                                  ; preds = %else.372, %else.373
  %cast.1854 = bitcast { i8*, i64 }* %tmpv.627 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1854, i8* align 8 bitcast ({ i8*, i64 }* @const.339 to i8*), i64 16, i1 false)
  %field.441 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.124, i64 0, i32 2, !dbg !1267
  %.field.ld.95 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.441, align 8, !dbg !1267
  %call.126 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.95, i8* nonnull %cast.1854), !dbg !1268
  %field0.95 = bitcast i8* %call.126 to i64*, !dbg !1269
  %ld.157 = load i64, i64* %field0.95, align 8, !dbg !1269
  %field1.95 = getelementptr inbounds i8, i8* %call.126, i64 8, !dbg !1269
  %5 = bitcast i8* %field1.95 to i64*, !dbg !1269
  %ld.158 = load i64, i64* %5, align 8, !dbg !1269
  %call.127 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.157, i64 %ld.158, i64 ptrtoint ([7 x i8]* @const.355 to i64), i64 6), !dbg !1269
  %icmp.431 = icmp eq i8 %call.127, 1, !dbg !1269
  %zext.431 = zext i1 %icmp.431 to i8, !dbg !1269
  store i8 %zext.431, i8* %4, align 1, !dbg !1270
  %icmp.432 = icmp eq %Parser.0* %p, null, !dbg !1271
  br i1 %icmp.432, label %then.376, label %else.376

else.372:                                         ; preds = %command_line_arguments.newComment.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.4.i, i8* nonnull %cast.1845), !dbg !1266
  br label %fallthrough.372

else.373:                                         ; preds = %command_line_arguments.newComment.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.4.i, i8* nonnull align 8 %cast.1845, i64 40, i1 false), !dbg !1266
  br label %fallthrough.372

then.376:                                         ; preds = %fallthrough.372
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1271
  unreachable

else.376:                                         ; preds = %fallthrough.372
  %field.443 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3, !dbg !1271
  %.field.ld.96 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.443, align 8, !dbg !1271
  %icmp.436 = icmp eq %.command-line-arguments.token.0* %.field.ld.96, null, !dbg !1272
  br i1 %icmp.436, label %then.377, label %else.377

then.377:                                         ; preds = %else.376
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1272
  unreachable

else.377:                                         ; preds = %else.376
  %field.447 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.96, i64 0, i32 0, !dbg !1272
  %.field.ld.97 = load i32, i32* %field.447, align 4, !dbg !1272
  %icmp.437 = icmp eq i32 %.field.ld.97, -4, !dbg !1273
  br i1 %icmp.437, label %then.378, label %fallthrough.378

then.378:                                         ; preds = %else.377
  %6 = ptrtoint i8* %call.4.i to i64, !dbg !1274
  %call.128 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment to i64), i64 %6), !dbg !1275
  %field.446 = getelementptr inbounds i8, i8* %call.4.i, i64 56, !dbg !1276
  %runtime.writeBarrier.ld.58 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1277
  %icmp.435 = icmp eq i32 %runtime.writeBarrier.ld.58, 0, !dbg !1277
  br i1 %icmp.435, label %else.381, label %else.380

fallthrough.378:                                  ; preds = %else.381, %else.380, %else.377
  call void @llvm.dbg.value(metadata %Comment.0* %cast.177.i, metadata !1238, metadata !DIExpression()), !dbg !1239
  ret %Comment.0* %cast.177.i, !dbg !1278

else.380:                                         ; preds = %then.378
  %cast.1870 = bitcast %Block.0* %call.128 to i8*, !dbg !1277
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.446, i8* %cast.1870), !dbg !1277
  br label %fallthrough.378

else.381:                                         ; preds = %then.378
  %7 = bitcast i8* %field.446 to %Block.0**, !dbg !1276
  store %Block.0* %call.128, %Block.0** %7, align 8, !dbg !1277
  br label %fallthrough.378
}

define %Doctype.0* @command_line_arguments.Parser.parseDoctype(i8* nest nocapture readnone %nest.39, %Parser.0* %p) #0 !dbg !1279 {
entry:
  %value.addr.i = alloca { i8*, i64 }, align 8
  %tmpv.618 = alloca %SourcePosition.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1282, metadata !DIExpression()), !dbg !1283
  call void @llvm.dbg.value(metadata %Doctype.0* null, metadata !1284, metadata !DIExpression()), !dbg !1285
  %call.122 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -2), !dbg !1286
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.122, metadata !1288, metadata !DIExpression()), !dbg !1289
  %icmp.421 = icmp eq %.command-line-arguments.token.0* %call.122, null, !dbg !1290
  br i1 %icmp.421, label %then.366, label %else.366

then.366:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1290
  unreachable

else.366:                                         ; preds = %entry
  %field.437 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.122, i64 0, i32 1, !dbg !1290
  %field0.93 = bitcast { i8*, i64 }* %field.437 to i64*, !dbg !1291
  %ld.153 = load i64, i64* %field0.93, align 8, !dbg !1291
  %0 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.122, i64 0, i32 1, i32 1, !dbg !1291
  %ld.154 = load i64, i64* %0, align 8, !dbg !1291
  %1 = bitcast { i8*, i64 }* %value.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1)
  %field0.0.i = bitcast { i8*, i64 }* %value.addr.i to i64*
  store i64 %ld.153, i64* %field0.0.i, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %value.addr.i, i64 0, i32 1
  store i64 %ld.154, i64* %2, align 8
  call void @llvm.dbg.value(metadata %Doctype.0* null, metadata !1292, metadata !DIExpression()), !dbg !1296
  %call.1.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Doctype..d, i64 0, i32 0)), !dbg !1298
  %cast.89.i = bitcast i8* %call.1.i to %Doctype.0*, !dbg !1298
  call void @llvm.dbg.value(metadata %Doctype.0* %cast.89.i, metadata !1300, metadata !DIExpression()), !dbg !1301
  %icmp.3.i = icmp eq i8* %call.1.i, null, !dbg !1302
  br i1 %icmp.3.i, label %then.1.i, label %else.1.i

then.1.i:                                         ; preds = %else.366
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1302
  unreachable

else.1.i:                                         ; preds = %else.366
  %field.0.i = getelementptr inbounds i8, i8* %call.1.i, i64 40, !dbg !1302
  %runtime.writeBarrier.ld.1.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1303
  %icmp.5.i = icmp eq i32 %runtime.writeBarrier.ld.1.i, 0, !dbg !1303
  br i1 %icmp.5.i, label %else.3.i, label %else.2.i

else.2.i:                                         ; preds = %else.1.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.0.i, i8* nonnull %1), !dbg !1303
  br label %command_line_arguments.newDoctype.exit

else.3.i:                                         ; preds = %else.1.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.0.i, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !1303
  br label %command_line_arguments.newDoctype.exit

command_line_arguments.newDoctype.exit:           ; preds = %else.2.i, %else.3.i
  call void @llvm.dbg.value(metadata %Doctype.0* %cast.89.i, metadata !1292, metadata !DIExpression()), !dbg !1296
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1), !dbg !1304
  call void @llvm.dbg.value(metadata %Doctype.0* %cast.89.i, metadata !1305, metadata !DIExpression()), !dbg !1306
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.618, i8* nest undef, %Parser.0* %p), !dbg !1307
  %cast.1834 = bitcast %SourcePosition.0* %tmpv.618 to i8*
  %runtime.writeBarrier.ld.56 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1308
  %icmp.424 = icmp eq i32 %runtime.writeBarrier.ld.56, 0, !dbg !1308
  br i1 %icmp.424, label %else.369, label %else.368

fallthrough.368:                                  ; preds = %else.368, %else.369
  call void @llvm.dbg.value(metadata %Doctype.0* %cast.89.i, metadata !1284, metadata !DIExpression()), !dbg !1285
  ret %Doctype.0* %cast.89.i, !dbg !1309

else.368:                                         ; preds = %command_line_arguments.newDoctype.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.1.i, i8* nonnull %cast.1834), !dbg !1308
  br label %fallthrough.368

else.369:                                         ; preds = %command_line_arguments.newDoctype.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.1.i, i8* nonnull align 8 %cast.1834, i64 40, i1 false), !dbg !1308
  br label %fallthrough.368
}

define %Each.0* @command_line_arguments.Parser.parseEach(i8* nest nocapture readnone %nest.36, %Parser.0* %p) #0 !dbg !1310 {
entry:
  %exp.addr.i = alloca { i8*, i64 }, align 8
  %tmpv.540 = alloca %SourcePosition.0, align 8
  %tmpv.546 = alloca { i8*, i64 }, align 8
  %tmpv.549 = alloca { i8*, i64 }, align 8
  %tmpv.553 = alloca { i8*, i64 }, align 8
  %tmpv.556 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1313, metadata !DIExpression()), !dbg !1314
  call void @llvm.dbg.value(metadata %Each.0* null, metadata !1315, metadata !DIExpression()), !dbg !1316
  %call.102 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -14), !dbg !1317
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.102, metadata !1319, metadata !DIExpression()), !dbg !1320
  %icmp.371 = icmp eq %.command-line-arguments.token.0* %call.102, null, !dbg !1321
  br i1 %icmp.371, label %then.316, label %else.316

then.316:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1321
  unreachable

else.316:                                         ; preds = %entry
  %field.405 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.102, i64 0, i32 1, !dbg !1321
  %field0.83 = bitcast { i8*, i64 }* %field.405 to i64*, !dbg !1322
  %ld.133 = load i64, i64* %field0.83, align 8, !dbg !1322
  %0 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.102, i64 0, i32 1, i32 1, !dbg !1322
  %ld.134 = load i64, i64* %0, align 8, !dbg !1322
  %1 = bitcast { i8*, i64 }* %exp.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1)
  %field0.15.i = bitcast { i8*, i64 }* %exp.addr.i to i64*
  store i64 %ld.133, i64* %field0.15.i, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %exp.addr.i, i64 0, i32 1
  store i64 %ld.134, i64* %2, align 8
  call void @llvm.dbg.value(metadata %Each.0* null, metadata !1323, metadata !DIExpression()), !dbg !1327
  %call.16.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Each..d, i64 0, i32 0)), !dbg !1329
  %cast.506.i = bitcast i8* %call.16.i to %Each.0*, !dbg !1329
  call void @llvm.dbg.value(metadata %Each.0* %cast.506.i, metadata !1331, metadata !DIExpression()), !dbg !1332
  %icmp.91.i = icmp eq i8* %call.16.i, null, !dbg !1333
  br i1 %icmp.91.i, label %then.75.i, label %else.75.i

then.75.i:                                        ; preds = %else.316
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1333
  unreachable

else.75.i:                                        ; preds = %else.316
  %field.69.i = getelementptr inbounds i8, i8* %call.16.i, i64 72, !dbg !1333
  %runtime.writeBarrier.ld.15.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1334
  %icmp.93.i = icmp eq i32 %runtime.writeBarrier.ld.15.i, 0, !dbg !1334
  br i1 %icmp.93.i, label %else.77.i, label %else.76.i

else.76.i:                                        ; preds = %else.75.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.69.i, i8* nonnull %1), !dbg !1334
  br label %command_line_arguments.newEach.exit

else.77.i:                                        ; preds = %else.75.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.69.i, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !1334
  br label %command_line_arguments.newEach.exit

command_line_arguments.newEach.exit:              ; preds = %else.76.i, %else.77.i
  call void @llvm.dbg.value(metadata %Each.0* %cast.506.i, metadata !1323, metadata !DIExpression()), !dbg !1327
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1), !dbg !1335
  call void @llvm.dbg.value(metadata %Each.0* %cast.506.i, metadata !1336, metadata !DIExpression()), !dbg !1337
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.540, i8* nest undef, %Parser.0* %p), !dbg !1338
  %cast.1690 = bitcast %SourcePosition.0* %tmpv.540 to i8*
  %runtime.writeBarrier.ld.48 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1339
  %icmp.374 = icmp eq i32 %runtime.writeBarrier.ld.48, 0, !dbg !1339
  br i1 %icmp.374, label %else.319, label %else.318

else.318:                                         ; preds = %command_line_arguments.newEach.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.16.i, i8* nonnull %cast.1690), !dbg !1339
  br label %else.320

else.319:                                         ; preds = %command_line_arguments.newEach.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.16.i, i8* nonnull align 8 %cast.1690, i64 40, i1 false), !dbg !1339
  br label %else.320

else.320:                                         ; preds = %else.319, %else.318
  %field.407 = getelementptr inbounds i8, i8* %call.16.i, i64 40, !dbg !1340
  %cast.1700 = bitcast { i8*, i64 }* %tmpv.546 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1700, i8* align 8 bitcast ({ i8*, i64 }* @const.344 to i8*), i64 16, i1 false)
  %field.408 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.102, i64 0, i32 2, !dbg !1341
  %.field.ld.84 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.408, align 8, !dbg !1341
  %call.104 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.84, i8* nonnull %cast.1700), !dbg !1342
  %cast.1706 = bitcast { i8*, i64 }* %tmpv.549 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1706, i8* align 8 %call.104, i64 16, i1 false)
  %runtime.writeBarrier.ld.49 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1343
  %icmp.378 = icmp eq i32 %runtime.writeBarrier.ld.49, 0, !dbg !1343
  br i1 %icmp.378, label %else.323, label %else.322

else.322:                                         ; preds = %else.320
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.407, i8* nonnull %cast.1706), !dbg !1343
  br label %else.324

else.323:                                         ; preds = %else.320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.407, i8* nonnull align 8 %cast.1706, i64 16, i1 false), !dbg !1343
  br label %else.324

else.324:                                         ; preds = %else.323, %else.322
  %field.409 = getelementptr inbounds i8, i8* %call.16.i, i64 56, !dbg !1344
  %cast.1714 = bitcast { i8*, i64 }* %tmpv.553 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1714, i8* align 8 bitcast ({ i8*, i64 }* @const.345 to i8*), i64 16, i1 false)
  %.field.ld.85 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.408, align 8, !dbg !1345
  %call.105 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.85, i8* nonnull %cast.1714), !dbg !1346
  %cast.1720 = bitcast { i8*, i64 }* %tmpv.556 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1720, i8* align 8 %call.105, i64 16, i1 false)
  %runtime.writeBarrier.ld.50 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1347
  %icmp.382 = icmp eq i32 %runtime.writeBarrier.ld.50, 0, !dbg !1347
  br i1 %icmp.382, label %else.327, label %else.326

fallthrough.326:                                  ; preds = %else.326, %else.327
  %icmp.383 = icmp eq %Parser.0* %p, null, !dbg !1348
  br i1 %icmp.383, label %then.328, label %else.328

else.326:                                         ; preds = %else.324
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.409, i8* nonnull %cast.1720), !dbg !1347
  br label %fallthrough.326

else.327:                                         ; preds = %else.324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.409, i8* nonnull align 8 %cast.1720, i64 16, i1 false), !dbg !1347
  br label %fallthrough.326

then.328:                                         ; preds = %fallthrough.326
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1348
  unreachable

else.328:                                         ; preds = %fallthrough.326
  %field.411 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3, !dbg !1348
  %.field.ld.86 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.411, align 8, !dbg !1348
  %icmp.387 = icmp eq %.command-line-arguments.token.0* %.field.ld.86, null, !dbg !1349
  br i1 %icmp.387, label %then.329, label %else.329

then.329:                                         ; preds = %else.328
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1349
  unreachable

else.329:                                         ; preds = %else.328
  %field.415 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.86, i64 0, i32 0, !dbg !1349
  %.field.ld.87 = load i32, i32* %field.415, align 4, !dbg !1349
  %icmp.388 = icmp eq i32 %.field.ld.87, -4, !dbg !1350
  br i1 %icmp.388, label %then.330, label %fallthrough.330

then.330:                                         ; preds = %else.329
  %3 = ptrtoint i8* %call.16.i to i64, !dbg !1351
  %call.106 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each to i64), i64 %3), !dbg !1352
  %field.414 = getelementptr inbounds i8, i8* %call.16.i, i64 88, !dbg !1353
  %runtime.writeBarrier.ld.51 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1354
  %icmp.386 = icmp eq i32 %runtime.writeBarrier.ld.51, 0, !dbg !1354
  br i1 %icmp.386, label %else.333, label %else.332

fallthrough.330:                                  ; preds = %else.333, %else.332, %else.329
  call void @llvm.dbg.value(metadata %Each.0* %cast.506.i, metadata !1315, metadata !DIExpression()), !dbg !1316
  ret %Each.0* %cast.506.i, !dbg !1355

else.332:                                         ; preds = %then.330
  %cast.1734 = bitcast %Block.0* %call.106 to i8*, !dbg !1354
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.414, i8* %cast.1734), !dbg !1354
  br label %fallthrough.330

else.333:                                         ; preds = %then.330
  %4 = bitcast i8* %field.414 to %Block.0**, !dbg !1353
  store %Block.0* %call.106, %Block.0** %4, align 8, !dbg !1354
  br label %fallthrough.330
}

define %Block.0* @command_line_arguments.Parser.parseExtends(i8* nest nocapture readnone %nest.33, %Parser.0* %p) #0 !dbg !1356 {
entry:
  %tmpv.389 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1357, metadata !DIExpression()), !dbg !1358
  call void @llvm.dbg.value(metadata %Block.0* null, metadata !1359, metadata !DIExpression()), !dbg !1360
  %icmp.261 = icmp eq %Parser.0* %p, null, !dbg !1361
  br i1 %icmp.261, label %then.225, label %else.225

then.225:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1361
  unreachable

else.225:                                         ; preds = %entry
  %field.298 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 5, !dbg !1361
  %.field.ld.48 = load %Parser.0*, %Parser.0** %field.298, align 8, !dbg !1361
  %icmp.262 = icmp eq %Parser.0* %.field.ld.48, null, !dbg !1363
  br i1 %icmp.262, label %else.226, label %then.226

then.226:                                         ; preds = %else.225
  %call.78 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1364
  %cast.1427 = bitcast { i8*, i64 }* %tmpv.389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1427, i8* align 8 bitcast ({ i8*, i64 }* @const.330 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.78, i8* nonnull %cast.1427), !dbg !1364
  %0 = ptrtoint i8* %call.78 to i64, !dbg !1364
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %0), !dbg !1364
  unreachable

else.226:                                         ; preds = %else.225
  %call.79 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* nonnull %p, i32 -18), !dbg !1365
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.79, metadata !1366, metadata !DIExpression()), !dbg !1367
  %icmp.263 = icmp eq %.command-line-arguments.token.0* %call.79, null, !dbg !1368
  br i1 %icmp.263, label %then.227, label %else.227

then.227:                                         ; preds = %else.226
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1368
  unreachable

else.227:                                         ; preds = %else.226
  %field.299 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.79, i64 0, i32 1, !dbg !1368
  %field0.71 = bitcast { i8*, i64 }* %field.299 to i64*, !dbg !1369
  %ld.111 = load i64, i64* %field0.71, align 8, !dbg !1369
  %1 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.79, i64 0, i32 1, i32 1, !dbg !1369
  %ld.112 = load i64, i64* %1, align 8, !dbg !1369
  %call.80 = call %Parser.0* @command_line_arguments.Parser.parseRelativeFile(i8* nest undef, %Parser.0* nonnull %p, i64 %ld.111, i64 %ld.112), !dbg !1369
  call void @llvm.dbg.value(metadata %Parser.0* %call.80, metadata !1370, metadata !DIExpression()), !dbg !1371
  %call.81 = call %Block.0* @command_line_arguments.Parser.Parse(i8* nest undef, %Parser.0* %call.80), !dbg !1372
  %runtime.writeBarrier.ld.36 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1373
  %icmp.266 = icmp eq i32 %runtime.writeBarrier.ld.36, 0, !dbg !1373
  br i1 %icmp.266, label %else.230, label %else.229

fallthrough.229:                                  ; preds = %else.229, %else.230
  %call.82 = call fastcc %Block.0* @command_line_arguments.newBlock(), !dbg !1374
  call void @llvm.dbg.value(metadata %Block.0* %call.82, metadata !1359, metadata !DIExpression()), !dbg !1360
  ret %Block.0* %call.82, !dbg !1375

else.229:                                         ; preds = %else.227
  %cast.1439 = bitcast %Parser.0** %field.298 to i8*, !dbg !1373
  %cast.1440 = bitcast %Parser.0* %call.80 to i8*, !dbg !1373
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1439, i8* %cast.1440), !dbg !1373
  br label %fallthrough.229

else.230:                                         ; preds = %else.227
  store %Parser.0* %call.80, %Parser.0** %field.298, align 8, !dbg !1373
  br label %fallthrough.229
}

define %Condition.0* @command_line_arguments.Parser.parseIf(i8* nest nocapture readnone %nest.35, %Parser.0* %p) #0 !dbg !1376 {
entry:
  %exp.addr.i = alloca { i8*, i64 }, align 8
  %tmpv.510 = alloca %SourcePosition.0, align 8
  %tmpv.535 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1379, metadata !DIExpression()), !dbg !1380
  call void @llvm.dbg.value(metadata %Condition.0* null, metadata !1381, metadata !DIExpression()), !dbg !1382
  %call.94 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -12), !dbg !1383
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.94, metadata !1385, metadata !DIExpression()), !dbg !1386
  %icmp.349 = icmp eq %.command-line-arguments.token.0* %call.94, null, !dbg !1387
  br i1 %icmp.349, label %then.294, label %else.294

then.294:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1387
  unreachable

else.294:                                         ; preds = %entry
  %field.385 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.94, i64 0, i32 1, !dbg !1387
  %field0.78 = bitcast { i8*, i64 }* %field.385 to i64*, !dbg !1388
  %ld.123 = load i64, i64* %field0.78, align 8, !dbg !1388
  %0 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.94, i64 0, i32 1, i32 1, !dbg !1388
  %ld.124 = load i64, i64* %0, align 8, !dbg !1388
  %1 = bitcast { i8*, i64 }* %exp.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1)
  %field0.14.i = bitcast { i8*, i64 }* %exp.addr.i to i64*
  store i64 %ld.123, i64* %field0.14.i, align 8
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %exp.addr.i, i64 0, i32 1
  store i64 %ld.124, i64* %2, align 8
  call void @llvm.dbg.value(metadata %Condition.0* null, metadata !1389, metadata !DIExpression()), !dbg !1393
  %call.15.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Condition..d, i64 0, i32 0)), !dbg !1395
  %cast.481.i = bitcast i8* %call.15.i to %Condition.0*, !dbg !1395
  call void @llvm.dbg.value(metadata %Condition.0* %cast.481.i, metadata !1397, metadata !DIExpression()), !dbg !1398
  %icmp.88.i = icmp eq i8* %call.15.i, null, !dbg !1399
  br i1 %icmp.88.i, label %then.72.i, label %else.72.i

then.72.i:                                        ; preds = %else.294
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1399
  unreachable

else.72.i:                                        ; preds = %else.294
  %field.68.i = getelementptr inbounds i8, i8* %call.15.i, i64 56, !dbg !1399
  %runtime.writeBarrier.ld.14.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1400
  %icmp.90.i = icmp eq i32 %runtime.writeBarrier.ld.14.i, 0, !dbg !1400
  br i1 %icmp.90.i, label %else.74.i, label %else.73.i

else.73.i:                                        ; preds = %else.72.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.68.i, i8* nonnull %1), !dbg !1400
  br label %command_line_arguments.newCondition.exit

else.74.i:                                        ; preds = %else.72.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.68.i, i8* nonnull align 8 %1, i64 16, i1 false), !dbg !1400
  br label %command_line_arguments.newCondition.exit

command_line_arguments.newCondition.exit:         ; preds = %else.73.i, %else.74.i
  call void @llvm.dbg.value(metadata %Condition.0* %cast.481.i, metadata !1389, metadata !DIExpression()), !dbg !1393
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1), !dbg !1401
  call void @llvm.dbg.value(metadata %Condition.0* %cast.481.i, metadata !1402, metadata !DIExpression()), !dbg !1403
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.510, i8* nest undef, %Parser.0* %p), !dbg !1404
  %cast.1644 = bitcast %SourcePosition.0* %tmpv.510 to i8*
  %runtime.writeBarrier.ld.44 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1405
  %icmp.352 = icmp eq i32 %runtime.writeBarrier.ld.44, 0, !dbg !1405
  br i1 %icmp.352, label %else.297, label %else.296

fallthrough.296:                                  ; preds = %else.296, %else.297
  %icmp.353 = icmp eq %Parser.0* %p, null, !dbg !1406
  br i1 %icmp.353, label %then.298, label %else.298.lr.ph

else.298.lr.ph:                                   ; preds = %fallthrough.296
  %field.387 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3
  %3 = ptrtoint i8* %call.15.i to i64
  %field.390 = getelementptr inbounds i8, i8* %call.15.i, i64 40
  %4 = bitcast i8* %field.390 to %Block.0**
  %field.392 = getelementptr inbounds i8, i8* %call.15.i, i64 48
  %5 = bitcast i8* %field.392 to %Block.0**
  %.field.ld.774 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.387, align 8, !dbg !1406
  %icmp.3705 = icmp eq %.command-line-arguments.token.0* %.field.ld.774, null, !dbg !1407
  br i1 %icmp.3705, label %then.299, label %else.299

else.296:                                         ; preds = %command_line_arguments.newCondition.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.15.i, i8* nonnull %cast.1644), !dbg !1405
  br label %fallthrough.296

else.297:                                         ; preds = %command_line_arguments.newCondition.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.15.i, i8* nonnull align 8 %cast.1644, i64 40, i1 false), !dbg !1405
  br label %fallthrough.296

then.298:                                         ; preds = %fallthrough.296
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1406
  unreachable

then.299:                                         ; preds = %label.0.backedge, %else.298.lr.ph
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1407
  unreachable

else.299:                                         ; preds = %else.298.lr.ph, %label.0.backedge
  %.field.ld.776 = phi %.command-line-arguments.token.0* [ %.field.ld.77, %label.0.backedge ], [ %.field.ld.774, %else.298.lr.ph ]
  %field.404 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.776, i64 0, i32 0, !dbg !1407
  %.field.ld.83 = load i32, i32* %field.404, align 4, !dbg !1407
  switch i32 %.field.ld.83, label %label.1 [
    i32 -4, label %case.18
    i32 -13, label %case.19
  ]

case.18:                                          ; preds = %else.299
  %call.96 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition to i64), i64 %3), !dbg !1408
  %runtime.writeBarrier.ld.45 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1409
  %icmp.356 = icmp eq i32 %runtime.writeBarrier.ld.45, 0, !dbg !1409
  br i1 %icmp.356, label %else.302, label %else.301

case.19:                                          ; preds = %else.299
  %call.97 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* nonnull %p, i32 -13), !dbg !1410
  %.field.ld.78 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.387, align 8, !dbg !1411
  %icmp.368 = icmp eq %.command-line-arguments.token.0* %.field.ld.78, null, !dbg !1412
  br i1 %icmp.368, label %then.304, label %else.304

label.0.backedge:                                 ; preds = %fallthrough.307, %else.314, %else.315, %else.302, %else.301
  %.field.ld.77 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.387, align 8, !dbg !1406
  %icmp.370 = icmp eq %.command-line-arguments.token.0* %.field.ld.77, null, !dbg !1407
  br i1 %icmp.370, label %then.299, label %else.299

else.301:                                         ; preds = %case.18
  %cast.1660 = bitcast %Block.0* %call.96 to i8*, !dbg !1409
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.390, i8* %cast.1660), !dbg !1409
  br label %label.0.backedge

else.302:                                         ; preds = %case.18
  store %Block.0* %call.96, %Block.0** %4, align 8, !dbg !1409
  br label %label.0.backedge

label.1:                                          ; preds = %else.299
  call void @llvm.dbg.value(metadata %Condition.0* %cast.481.i, metadata !1381, metadata !DIExpression()), !dbg !1382
  ret %Condition.0* %cast.481.i, !dbg !1413

then.304:                                         ; preds = %case.19
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1412
  unreachable

else.304:                                         ; preds = %case.19
  %field.403 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.78, i64 0, i32 0, !dbg !1412
  %.field.ld.82 = load i32, i32* %field.403, align 4, !dbg !1412
  switch i32 %.field.ld.82, label %else.312 [
    i32 -12, label %then.305
    i32 -4, label %then.312
  ]

then.305:                                         ; preds = %else.304
  %call.98 = call fastcc %Block.0* @command_line_arguments.newBlock(), !dbg !1414
  %runtime.writeBarrier.ld.46 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1415
  %icmp.360 = icmp eq i32 %runtime.writeBarrier.ld.46, 0, !dbg !1415
  br i1 %icmp.360, label %else.308, label %else.307

fallthrough.307:                                  ; preds = %else.307, %else.308
  %call.99 = call %Condition.0* @command_line_arguments.Parser.parseIf(i8* nest undef, %Parser.0* nonnull %p), !dbg !1416
  %.field.ld.79 = load %Block.0*, %Block.0** %5, align 8, !dbg !1417
  %6 = ptrtoint %Condition.0* %call.99 to i64, !dbg !1416
  call void @command_line_arguments.Block.push(i8* nest undef, %Block.0* %.field.ld.79, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition to i64), i64 %6), !dbg !1418
  br label %label.0.backedge

else.307:                                         ; preds = %then.305
  %cast.1665 = bitcast %Block.0* %call.98 to i8*, !dbg !1415
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.392, i8* %cast.1665), !dbg !1415
  br label %fallthrough.307

else.308:                                         ; preds = %then.305
  store %Block.0* %call.98, %Block.0** %5, align 8, !dbg !1415
  br label %fallthrough.307

then.312:                                         ; preds = %else.304
  %call.100 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition to i64), i64 %3), !dbg !1419
  %runtime.writeBarrier.ld.47 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1420
  %icmp.365 = icmp eq i32 %runtime.writeBarrier.ld.47, 0, !dbg !1420
  br i1 %icmp.365, label %else.315, label %else.314

else.312:                                         ; preds = %else.304
  %call.101 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1421
  %cast.1679 = bitcast { i8*, i64 }* %tmpv.535 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1679, i8* align 8 bitcast ({ i8*, i64 }* @const.328 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.101, i8* nonnull %cast.1679), !dbg !1421
  %7 = ptrtoint i8* %call.101 to i64, !dbg !1421
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %7), !dbg !1421
  unreachable

else.314:                                         ; preds = %then.312
  %cast.1677 = bitcast %Block.0* %call.100 to i8*, !dbg !1420
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.392, i8* %cast.1677), !dbg !1420
  br label %label.0.backedge

else.315:                                         ; preds = %then.312
  store %Block.0* %call.100, %Block.0** %5, align 8, !dbg !1420
  br label %label.0.backedge
}

define %Block.0* @command_line_arguments.Parser.parseImport(i8* nest nocapture readnone %nest.37, %Parser.0* %p) #0 !dbg !1422 {
entry:
  %tmpv.568 = alloca %SourcePosition.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1423, metadata !DIExpression()), !dbg !1424
  call void @llvm.dbg.value(metadata %Block.0* null, metadata !1425, metadata !DIExpression()), !dbg !1426
  %call.107 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -16), !dbg !1427
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.107, metadata !1429, metadata !DIExpression()), !dbg !1430
  %icmp.389 = icmp eq %.command-line-arguments.token.0* %call.107, null, !dbg !1431
  br i1 %icmp.389, label %then.334, label %else.334

then.334:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1431
  unreachable

else.334:                                         ; preds = %entry
  %field.416 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.107, i64 0, i32 1, !dbg !1431
  %field0.85 = bitcast { i8*, i64 }* %field.416 to i64*, !dbg !1432
  %ld.137 = load i64, i64* %field0.85, align 8, !dbg !1432
  %0 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.107, i64 0, i32 1, i32 1, !dbg !1432
  %ld.138 = load i64, i64* %0, align 8, !dbg !1432
  %call.108 = call %Parser.0* @command_line_arguments.Parser.parseRelativeFile(i8* nest undef, %Parser.0* %p, i64 %ld.137, i64 %ld.138), !dbg !1432
  %call.109 = call %Block.0* @command_line_arguments.Parser.Parse(i8* nest undef, %Parser.0* %call.108), !dbg !1433
  call void @llvm.dbg.value(metadata %Block.0* %call.109, metadata !1434, metadata !DIExpression()), !dbg !1435
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.568, i8* nest undef, %Parser.0* %p), !dbg !1436
  %cast.1738 = bitcast %SourcePosition.0* %tmpv.568 to i8*
  %icmp.390 = icmp eq %Block.0* %call.109, null, !dbg !1437
  br i1 %icmp.390, label %then.335, label %else.335

then.335:                                         ; preds = %else.334
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1437
  unreachable

else.335:                                         ; preds = %else.334
  %runtime.writeBarrier.ld.52 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1438
  %icmp.392 = icmp eq i32 %runtime.writeBarrier.ld.52, 0, !dbg !1438
  %cast.1742 = bitcast %Block.0* %call.109 to i8*, !dbg !1438
  br i1 %icmp.392, label %else.337, label %else.336

fallthrough.336:                                  ; preds = %else.336, %else.337
  call void @llvm.dbg.value(metadata %Block.0* %call.109, metadata !1425, metadata !DIExpression()), !dbg !1426
  ret %Block.0* %call.109, !dbg !1439

else.336:                                         ; preds = %else.335
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* %cast.1742, i8* nonnull %cast.1738), !dbg !1438
  br label %fallthrough.336

else.337:                                         ; preds = %else.335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1742, i8* nonnull align 8 %cast.1738, i64 40, i1 false), !dbg !1438
  br label %fallthrough.336
}

define %Mixin.0* @command_line_arguments.Parser.parseMixin(i8* nest nocapture readnone %nest.45, %Parser.0* %p) #0 !dbg !1440 {
entry:
  %name.addr.i = alloca { i8*, i64 }, align 8
  %sret.actual.7.i = alloca %IPST.5, align 8
  %tmpv.130.i = alloca %IPST.5, align 8
  %tmpv.134.i = alloca { i8*, i64 }, align 8
  %tmpv.151.i = alloca %IPST.5, align 8
  %tmpv.155.i = alloca %IPST.5, align 8
  %sret.actual.9.i = alloca %IPST.2, align 8
  %tmpv.164.i = alloca %IPST.5, align 8
  %tmpv.167.i = alloca %IPST.5, align 8
  %tmpv.785 = alloca { i8*, i64 }, align 8
  %tmpv.789 = alloca %SourcePosition.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1443, metadata !DIExpression()), !dbg !1444
  call void @llvm.dbg.value(metadata %Mixin.0* null, metadata !1445, metadata !DIExpression()), !dbg !1446
  %call.156 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -19), !dbg !1447
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.156, metadata !1449, metadata !DIExpression()), !dbg !1450
  %cast.2168 = bitcast { i8*, i64 }* %tmpv.785 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2168, i8* align 8 bitcast ({ i8*, i64 }* @const.362 to i8*), i64 16, i1 false)
  %icmp.533 = icmp eq %.command-line-arguments.token.0* %call.156, null, !dbg !1451
  br i1 %icmp.533, label %then.460, label %else.460

then.460:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1451
  unreachable

else.460:                                         ; preds = %entry
  %field.556 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.156, i64 0, i32 2, !dbg !1451
  %.field.ld.130 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.556, align 8, !dbg !1451
  %call.157 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.130, i8* nonnull %cast.2168), !dbg !1452
  %field.557 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.156, i64 0, i32 1, !dbg !1453
  %field0.114 = bitcast { i8*, i64 }* %field.557 to i64*, !dbg !1454
  %ld.195 = load i64, i64* %field0.114, align 8, !dbg !1454
  %0 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.156, i64 0, i32 1, i32 1, !dbg !1454
  %ld.196 = load i64, i64* %0, align 8, !dbg !1454
  %field0.115 = bitcast i8* %call.157 to i64*, !dbg !1454
  %ld.197 = load i64, i64* %field0.115, align 8, !dbg !1454
  %field1.115 = getelementptr inbounds i8, i8* %call.157, i64 8, !dbg !1454
  %1 = bitcast i8* %field1.115 to i64*, !dbg !1454
  %ld.198 = load i64, i64* %1, align 8, !dbg !1454
  %2 = bitcast { i8*, i64 }* %name.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast %IPST.5* %sret.actual.7.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %4 = bitcast %IPST.5* %tmpv.130.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %5 = bitcast { i8*, i64 }* %tmpv.134.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5)
  %6 = bitcast %IPST.5* %tmpv.151.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = bitcast %IPST.5* %tmpv.155.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7)
  %8 = bitcast %IPST.2* %sret.actual.9.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %9 = bitcast %IPST.5* %tmpv.164.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)
  %10 = bitcast %IPST.5* %tmpv.167.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10)
  %field0.23.i = bitcast { i8*, i64 }* %name.addr.i to i64*
  store i64 %ld.195, i64* %field0.23.i, align 8
  %11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %name.addr.i, i64 0, i32 1
  store i64 %ld.196, i64* %11, align 8
  call void @llvm.dbg.value(metadata i64 %ld.197, metadata !1455, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1459
  call void @llvm.dbg.value(metadata i64 %ld.198, metadata !1455, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1459
  call void @llvm.dbg.value(metadata %Mixin.0* null, metadata !1461, metadata !DIExpression()), !dbg !1462
  %call.18.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Mixin..d, i64 0, i32 0)), !dbg !1463
  %cast.561.i = bitcast i8* %call.18.i to %Mixin.0*, !dbg !1463
  call void @llvm.dbg.value(metadata %Mixin.0* %cast.561.i, metadata !1465, metadata !DIExpression()), !dbg !1466
  %icmp.100.i = icmp eq i8* %call.18.i, null, !dbg !1467
  br i1 %icmp.100.i, label %then.84.i, label %else.84.i

then.84.i:                                        ; preds = %else.460
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1467
  unreachable

else.84.i:                                        ; preds = %else.460
  %field.72.i = getelementptr inbounds i8, i8* %call.18.i, i64 48, !dbg !1467
  %runtime.writeBarrier.ld.18.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1468
  %icmp.102.i = icmp eq i32 %runtime.writeBarrier.ld.18.i, 0, !dbg !1468
  br i1 %icmp.102.i, label %else.86.i, label %else.85.i

fallthrough.85.i:                                 ; preds = %else.86.i, %else.85.i
  %call.19.i = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([4 x i8]* @const.178 to i64), i64 3), !dbg !1469
  call void @llvm.dbg.value(metadata %Regexp.0* %call.19.i, metadata !1470, metadata !DIExpression()), !dbg !1471
  call void @regexp.Regexp.Split(%IPST.5* nonnull sret %sret.actual.7.i, i8* nest undef, %Regexp.0* %call.19.i, i64 %ld.197, i64 %ld.198, i64 -1), !dbg !1472
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %3, i64 24, i1 false)
  %field.73.i = getelementptr inbounds i8, i8* %call.18.i, i64 64, !dbg !1473
  %runtime.writeBarrier.ld.19.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1474
  %icmp.105.i = icmp eq i32 %runtime.writeBarrier.ld.19.i, 0, !dbg !1474
  br i1 %icmp.105.i, label %else.89.i, label %else.88.i

else.85.i:                                        ; preds = %else.84.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.72.i, i8* nonnull %2), !dbg !1468
  br label %fallthrough.85.i

else.86.i:                                        ; preds = %else.84.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.72.i, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1468
  br label %fallthrough.85.i

fallthrough.88.i:                                 ; preds = %else.89.i, %else.88.i
  call void @llvm.dbg.value(metadata i64 0, metadata !1475, metadata !DIExpression()), !dbg !1477
  %field.122.i = getelementptr inbounds i8, i8* %call.18.i, i64 72, !dbg !1478
  %12 = bitcast i8* %field.122.i to i64*, !dbg !1478
  %.field.field.ld.15.i = load i64, i64* %12, align 8, !dbg !1478
  %icmp.1436.i = icmp sgt i64 %.field.field.ld.15.i, 0, !dbg !1479
  br i1 %icmp.1436.i, label %then.114.lr.ph.i, label %else.462

then.114.lr.ph.i:                                 ; preds = %fallthrough.88.i
  %13 = bitcast i8* %field.73.i to { i8*, i64 }**
  %tmpv.132.sroa.3.0.cast.583.sroa_idx47.i = getelementptr inbounds i8, i8* %call.18.i, i64 80
  %14 = bitcast i8* %tmpv.132.sroa.3.0.cast.583.sroa_idx47.i to i64*
  %sret.actual.8.sroa.0.0.cast.586.sroa_cast.i = bitcast { i8*, i64 }* %tmpv.134.i to i64*
  %sret.actual.8.sroa.2.0.cast.586.sroa_idx45.i = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.134.i, i64 0, i32 1
  %tmpv.153.sroa.0.0.cast.608.sroa_idx.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.151.i, i64 0, i32 0
  %tmpv.153.sroa.2.0.cast.608.sroa_idx70.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.151.i, i64 0, i32 1
  %tmpv.153.sroa.3.0.cast.608.sroa_idx71.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.151.i, i64 0, i32 2
  %tmpv.157.sroa.0.0.cast.612.sroa_idx.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.155.i, i64 0, i32 0
  %tmpv.157.sroa.2.0.cast.612.sroa_idx74.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.155.i, i64 0, i32 1
  %tmpv.157.sroa.3.0.cast.612.sroa_idx75.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.155.i, i64 0, i32 2
  %cast.614.i = bitcast %IPST.5* %tmpv.151.i to %IPST.2*
  %tmpv.163.sroa.0.0.cast.619.sroa_idx.i = bitcast %IPST.2* %sret.actual.9.i to { i8*, i64 }**
  %15 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.9.i, i64 0, i32 1
  %16 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.9.i, i64 0, i32 2
  %tmpv.166.sroa.0.0.cast.626.sroa_idx.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.164.i, i64 0, i32 0
  %tmpv.166.sroa.2.0.cast.626.sroa_idx89.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.164.i, i64 0, i32 1
  %tmpv.166.sroa.3.0.cast.626.sroa_idx90.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.164.i, i64 0, i32 2
  %cast.628.i = bitcast %IPST.5* %tmpv.164.i to %IPST.2*
  %cast.629.i = bitcast %IPST.5* %tmpv.155.i to %IPST.2*
  br label %then.114.i

else.88.i:                                        ; preds = %fallthrough.85.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %field.73.i, i8* nonnull %4), !dbg !1474
  br label %fallthrough.88.i

else.89.i:                                        ; preds = %fallthrough.85.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.73.i, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !1474
  br label %fallthrough.88.i

then.91.i:                                        ; preds = %then.114.i
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1480
  unreachable

else.91.i:                                        ; preds = %then.114.i
  %tmpv.132.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %13, align 8
  %ptroff.5.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.132.sroa.0.0.copyload.i, i64 %i.07.i, !dbg !1480
  %field0.20.i = bitcast { i8*, i64 }* %ptroff.5.i to i64*, !dbg !1481
  %ld.20.i = load i64, i64* %field0.20.i, align 8, !dbg !1481
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.132.sroa.0.0.copyload.i, i64 %i.07.i, i32 1, !dbg !1481
  %ld.21.i = load i64, i64* %17, align 8, !dbg !1481
  %call.20.i = call { i64, i64 } @strings.TrimSpace(i8* nest undef, i64 %ld.20.i, i64 %ld.21.i), !dbg !1481
  %call.20.fca.0.extract.i = extractvalue { i64, i64 } %call.20.i, 0, !dbg !1481
  %call.20.fca.1.extract.i = extractvalue { i64, i64 } %call.20.i, 1, !dbg !1481
  store i64 %call.20.fca.0.extract.i, i64* %sret.actual.8.sroa.0.0.cast.586.sroa_cast.i, align 8
  store i64 %call.20.fca.1.extract.i, i64* %sret.actual.8.sroa.2.0.cast.586.sroa_idx45.i, align 8
  %tmpv.136.sroa.2.0.copyload.i = load i64, i64* %12, align 8
  %icmp.110.i = icmp sge i64 %i.07.i, %tmpv.136.sroa.2.0.copyload.i, !dbg !1482
  %zext.110.i = zext i1 %icmp.110.i to i8, !dbg !1482
  %ior.80.i = or i8 %zext.110.i, %23, !dbg !1482
  %trunc.95.i = icmp eq i8 %ior.80.i, 0, !dbg !1482
  br i1 %trunc.95.i, label %else.93.i, label %then.93.i

then.93.i:                                        ; preds = %else.91.i
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1482
  unreachable

else.93.i:                                        ; preds = %else.91.i
  %tmpv.136.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %13, align 8
  %ptroff.6.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.136.sroa.0.0.copyload.i, i64 %i.07.i, !dbg !1482
  %runtime.writeBarrier.ld.20.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1483
  %icmp.113.i = icmp eq i32 %runtime.writeBarrier.ld.20.i, 0, !dbg !1483
  br i1 %icmp.113.i, label %then.94.i, label %else.94.i

then.94.i:                                        ; preds = %else.93.i
  %icmp.112.i = icmp eq { i8*, i64 }* %ptroff.6.i, null, !dbg !1483
  br i1 %icmp.112.i, label %then.95.i, label %else.95.i

else.94.i:                                        ; preds = %else.93.i
  %cast.594.i = bitcast { i8*, i64 }* %ptroff.6.i to i8*, !dbg !1483
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.594.i, i8* nonnull %5), !dbg !1483
  br label %else.96.i

then.95.i:                                        ; preds = %then.94.i
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1483
  unreachable

else.95.i:                                        ; preds = %then.94.i
  %cast.592.i = bitcast { i8*, i64 }* %ptroff.6.i to i8*, !dbg !1483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.592.i, i8* nonnull align 8 %5, i64 16, i1 false), !dbg !1483
  br label %else.96.i

else.96.i:                                        ; preds = %else.95.i, %else.94.i
  %tmpv.141.sroa.2.0.copyload.i = load i64, i64* %12, align 8
  %icmp.139.i = icmp sge i64 %i.07.i, %tmpv.141.sroa.2.0.copyload.i, !dbg !1484
  %zext.139.i = zext i1 %icmp.139.i to i8, !dbg !1484
  %ior.98.i = or i8 %zext.139.i, %23, !dbg !1484
  %trunc.113.i = icmp eq i8 %ior.98.i, 0, !dbg !1484
  br i1 %trunc.113.i, label %else.97.i, label %then.97.i

then.97.i:                                        ; preds = %else.96.i
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1484
  unreachable

else.97.i:                                        ; preds = %else.96.i
  %tmpv.141.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %13, align 8
  %ptroff.11.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.141.sroa.0.0.copyload.i, i64 %i.07.i, !dbg !1484
  %field0.21.i = bitcast { i8*, i64 }* %ptroff.11.i to i64*, !dbg !1485
  %ld.22.i = load i64, i64* %field0.21.i, align 8, !dbg !1485
  %18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.141.sroa.0.0.copyload.i, i64 %i.07.i, i32 1, !dbg !1485
  %ld.23.i = load i64, i64* %18, align 8, !dbg !1485
  %call.22.i = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.22.i, i64 %ld.23.i, i64 0, i64 0), !dbg !1485
  %icmp.141.i = icmp eq i8 %call.22.i, 1, !dbg !1485
  br i1 %icmp.141.i, label %else.100.i, label %fallthrough.98.i

fallthrough.98.i:                                 ; preds = %fallthrough.111.i, %else.97.i
  %i.1.i = phi i64 [ %sub.21.i, %fallthrough.111.i ], [ %i.07.i, %else.97.i ]
  call void @llvm.dbg.value(metadata i64 %i.1.i, metadata !1475, metadata !DIExpression()), !dbg !1477
  %add.7.i = add i64 %i.1.i, 1, !dbg !1486
  call void @llvm.dbg.value(metadata i64 %add.7.i, metadata !1475, metadata !DIExpression()), !dbg !1477
  %.field.field.ld.1.i = load i64, i64* %12, align 8, !dbg !1478
  %icmp.143.i = icmp slt i64 %add.7.i, %.field.field.ld.1.i, !dbg !1479
  br i1 %icmp.143.i, label %then.114.i, label %else.462

else.100.i:                                       ; preds = %else.97.i
  %tmpv.145.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %13, align 8
  %tmpv.145.sroa.236.0.copyload.i = load i64, i64* %14, align 8
  %tmpv.148.sroa.2.0.copyload.i = load i64, i64* %12, align 8
  %add.5.i = add i64 %i.07.i, 1, !dbg !1487
  %icmp.119.i = icmp sgt i64 %i.07.i, %tmpv.145.sroa.236.0.copyload.i, !dbg !1488
  %zext.119.i = zext i1 %icmp.119.i to i8, !dbg !1488
  %ior.81.i = or i8 %zext.119.i, %23, !dbg !1488
  %tmpv.145.sroa.236.0.copyload.lobit.i = lshr i64 %tmpv.145.sroa.236.0.copyload.i, 63, !dbg !1488
  %ior.851.i = or i64 %tmpv.145.sroa.236.0.copyload.lobit.i, %i.0.lobit.i, !dbg !1488
  %ior.85.i = trunc i64 %ior.851.i to i8, !dbg !1488
  %ior.86.i = or i8 %ior.81.i, %ior.85.i, !dbg !1488
  %trunc.103.i = icmp eq i8 %ior.86.i, 0, !dbg !1488
  br i1 %trunc.103.i, label %fallthrough.103.i, label %then.102.i

then.102.i:                                       ; preds = %else.100.i
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1488
  unreachable

fallthrough.103.i:                                ; preds = %else.100.i
  store { i8*, i64 }* %tmpv.145.sroa.0.0.copyload.i, { i8*, i64 }** %tmpv.153.sroa.0.0.cast.608.sroa_idx.i, align 8
  store i64 %i.07.i, i64* %tmpv.153.sroa.2.0.cast.608.sroa_idx70.i, align 8
  store i64 %tmpv.145.sroa.236.0.copyload.i, i64* %tmpv.153.sroa.3.0.cast.608.sroa_idx71.i, align 8
  %icmp.124.i = icmp slt i64 %tmpv.145.sroa.236.0.copyload.i, %add.5.i, !dbg !1489
  %19 = icmp slt i64 %add.5.i, 0, !dbg !1489
  %ior.88.i = or i1 %19, %icmp.124.i, !dbg !1489
  br i1 %ior.88.i, label %then.104.i, label %else.104.i

then.104.i:                                       ; preds = %fallthrough.103.i
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1489
  unreachable

else.104.i:                                       ; preds = %fallthrough.103.i
  %sub.12.i = sub i64 %tmpv.145.sroa.236.0.copyload.i, %add.5.i, !dbg !1489
  %icmp.126.i = icmp eq i64 %sub.12.i, 0, !dbg !1489
  %.add.5.i = select i1 %icmp.126.i, i64 0, i64 %add.5.i
  %ptroff.8.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.145.sroa.0.0.copyload.i, i64 %.add.5.i, !dbg !1489
  %sub.13.i = sub i64 %tmpv.148.sroa.2.0.copyload.i, %add.5.i, !dbg !1489
  store { i8*, i64 }* %ptroff.8.i, { i8*, i64 }** %tmpv.157.sroa.0.0.cast.612.sroa_idx.i, align 8
  store i64 %sub.13.i, i64* %tmpv.157.sroa.2.0.cast.612.sroa_idx74.i, align 8
  store i64 %sub.12.i, i64* %tmpv.157.sroa.3.0.cast.612.sroa_idx75.i, align 8
  %add.6.i = add i64 %sub.13.i, %i.07.i, !dbg !1490
  %icmp.127.i = icmp ugt i64 %add.6.i, %tmpv.145.sroa.236.0.copyload.i, !dbg !1490
  br i1 %icmp.127.i, label %then.106.i, label %else.106.i

then.106.i:                                       ; preds = %else.104.i
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.9.i, i8* nest undef, %_type.0* nonnull @string..d, %IPST.2* byval nonnull %cast.614.i, i64 %add.6.i), !dbg !1490
  %tmpv.163.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %tmpv.163.sroa.0.0.cast.619.sroa_idx.i, align 8
  %tmpv.163.sroa.3.0.copyload.i = load i64, i64* %15, align 8
  %tmpv.163.sroa.4.0.copyload.i = load i64, i64* %16, align 8
  br label %fallthrough.106.i

fallthrough.106.i:                                ; preds = %else.106.i, %then.106.i
  %tmpv.163.sroa.0.0.i = phi { i8*, i64 }* [ %tmpv.163.sroa.0.0.copyload.i, %then.106.i ], [ %tmpv.145.sroa.0.0.copyload.i, %else.106.i ]
  %tmpv.163.sroa.3.0.i = phi i64 [ %tmpv.163.sroa.3.0.copyload.i, %then.106.i ], [ %add.6.i, %else.106.i ]
  %tmpv.163.sroa.4.0.i = phi i64 [ %tmpv.163.sroa.4.0.copyload.i, %then.106.i ], [ %tmpv.145.sroa.236.0.copyload.i, %else.106.i ]
  store { i8*, i64 }* %tmpv.163.sroa.0.0.i, { i8*, i64 }** %tmpv.153.sroa.0.0.cast.608.sroa_idx.i, align 8, !dbg !1490
  store i64 %tmpv.163.sroa.3.0.i, i64* %tmpv.153.sroa.2.0.cast.608.sroa_idx70.i, align 8, !dbg !1490
  store i64 %tmpv.163.sroa.4.0.i, i64* %tmpv.153.sroa.3.0.cast.608.sroa_idx71.i, align 8, !dbg !1490
  %icmp.134.i = icmp slt i64 %tmpv.163.sroa.4.0.i, %i.07.i, !dbg !1490
  %20 = icmp slt i64 %i.07.i, 0, !dbg !1490
  %ior.96.i = or i1 %20, %icmp.134.i, !dbg !1490
  br i1 %ior.96.i, label %then.109.i, label %else.109.i

else.106.i:                                       ; preds = %else.104.i
  %icmp.129.i = icmp sgt i64 %add.6.i, %tmpv.145.sroa.236.0.copyload.i, !dbg !1490
  %add.6.lobit4.i = or i64 %add.6.i, %tmpv.145.sroa.236.0.copyload.i, !dbg !1490
  %21 = icmp slt i64 %add.6.lobit4.i, 0, !dbg !1490
  %22 = or i1 %icmp.129.i, %21, !dbg !1490
  br i1 %22, label %then.107.i, label %fallthrough.106.i

then.107.i:                                       ; preds = %else.106.i
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1490
  unreachable

then.109.i:                                       ; preds = %fallthrough.106.i
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1490
  unreachable

else.109.i:                                       ; preds = %fallthrough.106.i
  %icmp.136.i = icmp eq i64 %tmpv.163.sroa.4.0.i, %i.07.i, !dbg !1490
  %.i.0.i = select i1 %icmp.136.i, i64 0, i64 %i.07.i
  %ptroff.10.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.163.sroa.0.0.i, i64 %.i.0.i, !dbg !1490
  %sub.19.i = sub i64 %tmpv.163.sroa.3.0.i, %i.07.i, !dbg !1490
  %sub.20.i = sub i64 %tmpv.163.sroa.4.0.i, %i.07.i, !dbg !1490
  store { i8*, i64 }* %ptroff.10.i, { i8*, i64 }** %tmpv.166.sroa.0.0.cast.626.sroa_idx.i, align 8
  store i64 %sub.19.i, i64* %tmpv.166.sroa.2.0.cast.626.sroa_idx89.i, align 8
  store i64 %sub.20.i, i64* %tmpv.166.sroa.3.0.cast.626.sroa_idx90.i, align 8
  %call.21.i = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* nonnull @string..d, %IPST.2* byval nonnull %cast.628.i, %IPST.2* byval nonnull %cast.629.i), !dbg !1490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %6, i64 24, i1 false)
  %runtime.writeBarrier.ld.21.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1491
  %icmp.138.i = icmp eq i32 %runtime.writeBarrier.ld.21.i, 0, !dbg !1491
  br i1 %icmp.138.i, label %else.112.i, label %else.111.i

fallthrough.111.i:                                ; preds = %else.112.i, %else.111.i
  %sub.21.i = add i64 %i.07.i, -1, !dbg !1492
  call void @llvm.dbg.value(metadata i64 %sub.21.i, metadata !1475, metadata !DIExpression()), !dbg !1477
  br label %fallthrough.98.i

else.111.i:                                       ; preds = %else.109.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %field.73.i, i8* nonnull %10), !dbg !1491
  br label %fallthrough.111.i

else.112.i:                                       ; preds = %else.109.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.73.i, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !1491
  br label %fallthrough.111.i

then.114.i:                                       ; preds = %fallthrough.98.i, %then.114.lr.ph.i
  %.field.field.ld.18.i = phi i64 [ %.field.field.ld.15.i, %then.114.lr.ph.i ], [ %.field.field.ld.1.i, %fallthrough.98.i ]
  %i.07.i = phi i64 [ 0, %then.114.lr.ph.i ], [ %add.7.i, %fallthrough.98.i ]
  call void @llvm.dbg.value(metadata i64 %i.07.i, metadata !1475, metadata !DIExpression()), !dbg !1477
  %icmp.107.i = icmp sge i64 %i.07.i, %.field.field.ld.18.i, !dbg !1480
  %zext.107.i = zext i1 %icmp.107.i to i8, !dbg !1480
  %i.0.lobit.i = lshr i64 %i.07.i, 63, !dbg !1480
  %23 = trunc i64 %i.0.lobit.i to i8, !dbg !1480
  %ior.78.i = or i8 %zext.107.i, %23, !dbg !1480
  %trunc.93.i = icmp eq i8 %ior.78.i, 0, !dbg !1480
  br i1 %trunc.93.i, label %else.91.i, label %then.91.i

else.462:                                         ; preds = %fallthrough.98.i, %fallthrough.88.i
  call void @llvm.dbg.value(metadata %Mixin.0* %cast.561.i, metadata !1461, metadata !DIExpression()), !dbg !1462
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9), !dbg !1493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10), !dbg !1493
  call void @llvm.dbg.value(metadata %Mixin.0* %cast.561.i, metadata !1494, metadata !DIExpression()), !dbg !1495
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.789, i8* nest undef, %Parser.0* %p), !dbg !1496
  %cast.2177 = bitcast %SourcePosition.0* %tmpv.789 to i8*
  %runtime.writeBarrier.ld.70 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1497
  %icmp.537 = icmp eq i32 %runtime.writeBarrier.ld.70, 0, !dbg !1497
  br i1 %icmp.537, label %else.464, label %else.463

fallthrough.463:                                  ; preds = %else.463, %else.464
  %icmp.538 = icmp eq %Parser.0* %p, null, !dbg !1498
  br i1 %icmp.538, label %then.465, label %else.465

else.463:                                         ; preds = %else.462
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.18.i, i8* nonnull %cast.2177), !dbg !1497
  br label %fallthrough.463

else.464:                                         ; preds = %else.462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.18.i, i8* nonnull align 8 %cast.2177, i64 40, i1 false), !dbg !1497
  br label %fallthrough.463

then.465:                                         ; preds = %fallthrough.463
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1498
  unreachable

else.465:                                         ; preds = %fallthrough.463
  %field.559 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3, !dbg !1498
  %.field.ld.131 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.559, align 8, !dbg !1498
  %icmp.542 = icmp eq %.command-line-arguments.token.0* %.field.ld.131, null, !dbg !1499
  br i1 %icmp.542, label %then.466, label %else.466

then.466:                                         ; preds = %else.465
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1499
  unreachable

else.466:                                         ; preds = %else.465
  %field.563 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.131, i64 0, i32 0, !dbg !1499
  %.field.ld.132 = load i32, i32* %field.563, align 4, !dbg !1499
  %icmp.543 = icmp eq i32 %.field.ld.132, -4, !dbg !1500
  br i1 %icmp.543, label %then.467, label %fallthrough.467

then.467:                                         ; preds = %else.466
  %24 = ptrtoint i8* %call.18.i to i64, !dbg !1501
  %call.159 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin to i64), i64 %24), !dbg !1502
  %field.562 = getelementptr inbounds i8, i8* %call.18.i, i64 40, !dbg !1503
  %runtime.writeBarrier.ld.71 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1504
  %icmp.541 = icmp eq i32 %runtime.writeBarrier.ld.71, 0, !dbg !1504
  br i1 %icmp.541, label %else.470, label %else.469

fallthrough.467:                                  ; preds = %else.470, %else.469, %else.466
  call void @llvm.dbg.value(metadata %Mixin.0* %cast.561.i, metadata !1445, metadata !DIExpression()), !dbg !1446
  ret %Mixin.0* %cast.561.i, !dbg !1505

else.469:                                         ; preds = %then.467
  %cast.2193 = bitcast %Block.0* %call.159 to i8*, !dbg !1504
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.562, i8* %cast.2193), !dbg !1504
  br label %fallthrough.467

else.470:                                         ; preds = %then.467
  %25 = bitcast i8* %field.562 to %Block.0**, !dbg !1503
  store %Block.0* %call.159, %Block.0** %25, align 8, !dbg !1504
  br label %fallthrough.467
}

define %MixinCall.0* @command_line_arguments.Parser.parseMixinCall(i8* nest nocapture readnone %nest.46, %Parser.0* %p) #0 !dbg !1506 {
entry:
  %name.addr.i = alloca { i8*, i64 }, align 8
  %sret.actual.10.i = alloca %IPST.5, align 8
  %sret.actual.12.i = alloca %IPST.5, align 8
  %tmpv.177.i = alloca %IPST.5, align 8
  %tmpv.192.i = alloca { i8*, i64 }, align 8
  %tmpv.800 = alloca { i8*, i64 }, align 8
  %tmpv.804 = alloca %SourcePosition.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1509, metadata !DIExpression()), !dbg !1510
  call void @llvm.dbg.value(metadata %MixinCall.0* null, metadata !1511, metadata !DIExpression()), !dbg !1512
  %call.160 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -20), !dbg !1513
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.160, metadata !1515, metadata !DIExpression()), !dbg !1516
  %cast.2195 = bitcast { i8*, i64 }* %tmpv.800 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2195, i8* align 8 bitcast ({ i8*, i64 }* @const.362 to i8*), i64 16, i1 false)
  %icmp.544 = icmp eq %.command-line-arguments.token.0* %call.160, null, !dbg !1517
  br i1 %icmp.544, label %then.471, label %else.471

then.471:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1517
  unreachable

else.471:                                         ; preds = %entry
  %field.564 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.160, i64 0, i32 2, !dbg !1517
  %.field.ld.133 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.564, align 8, !dbg !1517
  %call.161 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.133, i8* nonnull %cast.2195), !dbg !1518
  %field.565 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.160, i64 0, i32 1, !dbg !1519
  %field0.117 = bitcast { i8*, i64 }* %field.565 to i64*, !dbg !1520
  %ld.201 = load i64, i64* %field0.117, align 8, !dbg !1520
  %0 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.160, i64 0, i32 1, i32 1, !dbg !1520
  %ld.202 = load i64, i64* %0, align 8, !dbg !1520
  %field0.118 = bitcast i8* %call.161 to i64*, !dbg !1520
  %ld.203 = load i64, i64* %field0.118, align 8, !dbg !1520
  %field1.118 = getelementptr inbounds i8, i8* %call.161, i64 8, !dbg !1520
  %1 = bitcast i8* %field1.118 to i64*, !dbg !1520
  %ld.204 = load i64, i64* %1, align 8, !dbg !1520
  %2 = bitcast { i8*, i64 }* %name.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast %IPST.5* %sret.actual.10.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %4 = bitcast %IPST.5* %sret.actual.12.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %5 = bitcast %IPST.5* %tmpv.177.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = bitcast { i8*, i64 }* %tmpv.192.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %field0.35.i = bitcast { i8*, i64 }* %name.addr.i to i64*
  store i64 %ld.201, i64* %field0.35.i, align 8
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %name.addr.i, i64 0, i32 1
  store i64 %ld.202, i64* %7, align 8
  call void @llvm.dbg.value(metadata i64 %ld.203, metadata !1521, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1525
  call void @llvm.dbg.value(metadata i64 %ld.204, metadata !1521, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1525
  call void @llvm.dbg.value(metadata %MixinCall.0* null, metadata !1527, metadata !DIExpression()), !dbg !1528
  %call.23.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.MixinCall..d, i64 0, i32 0)), !dbg !1529
  %cast.658.i = bitcast i8* %call.23.i to %MixinCall.0*, !dbg !1529
  call void @llvm.dbg.value(metadata %MixinCall.0* %cast.658.i, metadata !1531, metadata !DIExpression()), !dbg !1532
  %icmp.144.i = icmp eq i8* %call.23.i, null, !dbg !1533
  br i1 %icmp.144.i, label %then.115.i, label %else.115.i

then.115.i:                                       ; preds = %else.471
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1533
  unreachable

else.115.i:                                       ; preds = %else.471
  %field.123.i = getelementptr inbounds i8, i8* %call.23.i, i64 40, !dbg !1533
  %runtime.writeBarrier.ld.22.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1534
  %icmp.146.i = icmp eq i32 %runtime.writeBarrier.ld.22.i, 0, !dbg !1534
  br i1 %icmp.146.i, label %else.117.i, label %else.116.i

fallthrough.116.i:                                ; preds = %else.117.i, %else.116.i
  %call.28.i = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.203, i64 %ld.204, i64 0, i64 0), !dbg !1535
  %icmp.162.i = icmp eq i8 %call.28.i, 1, !dbg !1535
  br i1 %icmp.162.i, label %command_line_arguments.newMixinCall.exit, label %then.118.i

else.116.i:                                       ; preds = %else.115.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.123.i, i8* nonnull %2), !dbg !1534
  br label %fallthrough.116.i

else.117.i:                                       ; preds = %else.115.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.123.i, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1534
  br label %fallthrough.116.i

then.118.i:                                       ; preds = %fallthrough.116.i
  %call.24.i = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([8 x i8]* @const.185 to i64), i64 7), !dbg !1536
  call void @llvm.dbg.value(metadata %Regexp.0* %call.24.i, metadata !1538, metadata !DIExpression()), !dbg !1539
  %call.25.i = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([4 x i8]* @const.178 to i64), i64 3), !dbg !1540
  call void @llvm.dbg.value(metadata %Regexp.0* %call.25.i, metadata !1541, metadata !DIExpression()), !dbg !1542
  call void @regexp.Regexp.FindAllString(%IPST.5* nonnull sret %sret.actual.10.i, i8* nest undef, %Regexp.0* %call.24.i, i64 %ld.203, i64 %ld.204, i64 -1), !dbg !1543
  %quotes.sroa.0.0.cast.669.sroa_idx.i = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.10.i, i64 0, i32 0
  %quotes.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %quotes.sroa.0.0.cast.669.sroa_idx.i, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %quotes.sroa.0.0.copyload.i, metadata !1544, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1545
  %quotes.sroa.4.0.cast.669.sroa_idx34.i = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.10.i, i64 0, i32 1
  %quotes.sroa.4.0.copyload.i = load i64, i64* %quotes.sroa.4.0.cast.669.sroa_idx34.i, align 8
  call void @llvm.dbg.value(metadata i64 %quotes.sroa.4.0.copyload.i, metadata !1544, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1545
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.10.i, metadata !1544, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !1545
  %call.26.i = call { i64, i64 } @regexp.Regexp.ReplaceAllString(i8* nest undef, %Regexp.0* %call.24.i, i64 %ld.203, i64 %ld.204, i64 ptrtoint ([3 x i8]* @const.187 to i64), i64 2), !dbg !1546
  %call.26.fca.0.extract.i = extractvalue { i64, i64 } %call.26.i, 0, !dbg !1546
  %call.26.fca.1.extract.i = extractvalue { i64, i64 } %call.26.i, 1, !dbg !1546
  call void @llvm.dbg.value(metadata i64 %call.26.fca.0.extract.i, metadata !1547, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1548
  call void @llvm.dbg.value(metadata i64 %call.26.fca.1.extract.i, metadata !1547, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1548
  call void @regexp.Regexp.Split(%IPST.5* nonnull sret %sret.actual.12.i, i8* nest undef, %Regexp.0* %call.25.i, i64 %call.26.fca.0.extract.i, i64 %call.26.fca.1.extract.i, i64 -1), !dbg !1549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %4, i64 24, i1 false)
  %field.124.i = getelementptr inbounds i8, i8* %call.23.i, i64 56, !dbg !1550
  %runtime.writeBarrier.ld.23.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1551
  %icmp.149.i = icmp eq i32 %runtime.writeBarrier.ld.23.i, 0, !dbg !1551
  br i1 %icmp.149.i, label %else.121.i, label %else.120.i

else.120.i:                                       ; preds = %then.118.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %field.124.i, i8* nonnull %5), !dbg !1551
  br label %else.122.i

else.121.i:                                       ; preds = %then.118.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.124.i, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !1551
  br label %else.122.i

else.122.i:                                       ; preds = %else.121.i, %else.120.i
  call void @llvm.dbg.value(metadata i64 0, metadata !1552, metadata !DIExpression()), !dbg !1553
  call void @llvm.dbg.value(metadata i64 0, metadata !1554, metadata !DIExpression()), !dbg !1556
  %8 = bitcast i8* %field.124.i to { i8*, i64 }**
  %tmpv.179.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %8, align 8
  %tmpv.179.sroa.2.0.cast.691.sroa_idx12.i = getelementptr inbounds i8, i8* %call.23.i, i64 64
  %9 = bitcast i8* %tmpv.179.sroa.2.0.cast.691.sroa_idx12.i to i64*
  %tmpv.179.sroa.2.0.copyload.i = load i64, i64* %9, align 8
  call void @llvm.dbg.value(metadata i64 0, metadata !1552, metadata !DIExpression()), !dbg !1553
  %icmp.1611.i = icmp sgt i64 %tmpv.179.sroa.2.0.copyload.i, 0, !dbg !1557
  br i1 %icmp.1611.i, label %else.123.i, label %command_line_arguments.newMixinCall.exit

else.123.i:                                       ; preds = %else.122.i, %fallthrough.124.i
  %qi.03.i = phi i64 [ %qi.1.i, %fallthrough.124.i ], [ 0, %else.122.i ]
  %tmpv.181.02.i = phi i64 [ %add.9.i, %fallthrough.124.i ], [ 0, %else.122.i ]
  call void @llvm.dbg.value(metadata i64 %qi.03.i, metadata !1552, metadata !DIExpression()), !dbg !1553
  %ptroff.12.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.179.sroa.0.0.copyload.i, i64 %tmpv.181.02.i, !dbg !1557
  %tmpv.182.sroa.0.0.cast.697.sroa_cast.i = bitcast { i8*, i64 }* %ptroff.12.i to i64*, !dbg !1557
  %tmpv.182.sroa.0.0.copyload20.i = load i64, i64* %tmpv.182.sroa.0.0.cast.697.sroa_cast.i, align 8, !dbg !1557
  %tmpv.182.sroa.3.0.cast.697.sroa_idx21.i = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.179.sroa.0.0.copyload.i, i64 %tmpv.181.02.i, i32 1, !dbg !1557
  %tmpv.182.sroa.3.0.copyload22.i = load i64, i64* %tmpv.182.sroa.3.0.cast.697.sroa_idx21.i, align 8, !dbg !1557
  call void @llvm.dbg.value(metadata i64 %tmpv.181.02.i, metadata !1554, metadata !DIExpression()), !dbg !1556
  call void @llvm.dbg.value(metadata i64 %tmpv.182.sroa.0.0.copyload20.i, metadata !1558, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1556
  call void @llvm.dbg.value(metadata i64 %tmpv.182.sroa.3.0.copyload22.i, metadata !1558, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1556
  %call.27.i = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.182.sroa.0.0.copyload20.i, i64 %tmpv.182.sroa.3.0.copyload22.i, i64 ptrtoint ([3 x i8]* @const.187 to i64), i64 2), !dbg !1559
  %icmp.160.i = icmp eq i8 %call.27.i, 1, !dbg !1559
  br i1 %icmp.160.i, label %else.125.i, label %fallthrough.124.i

fallthrough.124.i:                                ; preds = %fallthrough.128.i, %else.123.i
  %qi.1.i = phi i64 [ %add.8.i, %fallthrough.128.i ], [ %qi.03.i, %else.123.i ]
  %add.9.i = add nuw nsw i64 %tmpv.181.02.i, 1, !dbg !1557
  call void @llvm.dbg.value(metadata i64 %qi.1.i, metadata !1552, metadata !DIExpression()), !dbg !1553
  %icmp.161.i = icmp slt i64 %add.9.i, %tmpv.179.sroa.2.0.copyload.i, !dbg !1557
  br i1 %icmp.161.i, label %else.123.i, label %command_line_arguments.newMixinCall.exit

else.125.i:                                       ; preds = %else.123.i
  %tmpv.188.sroa.2.0.copyload.i = load i64, i64* %9, align 8
  %icmp.154.i = icmp slt i64 %tmpv.181.02.i, %tmpv.188.sroa.2.0.copyload.i, !dbg !1560
  br i1 %icmp.154.i, label %else.126.i, label %then.126.i

then.126.i:                                       ; preds = %else.125.i
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1560
  unreachable

else.126.i:                                       ; preds = %else.125.i
  %tmpv.188.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %8, align 8
  %ptroff.13.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.188.sroa.0.0.copyload.i, i64 %tmpv.181.02.i, !dbg !1560
  %icmp.156.i = icmp sge i64 %qi.03.i, %quotes.sroa.4.0.copyload.i, !dbg !1561
  %10 = icmp slt i64 %qi.03.i, 0, !dbg !1561
  %ior.107.i = or i1 %icmp.156.i, %10, !dbg !1561
  br i1 %ior.107.i, label %then.127.i, label %else.127.i

then.127.i:                                       ; preds = %else.126.i
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1561
  unreachable

else.127.i:                                       ; preds = %else.126.i
  %ptroff.14.i = getelementptr { i8*, i64 }, { i8*, i64 }* %quotes.sroa.0.0.copyload.i, i64 %qi.03.i, !dbg !1561
  %cast.706.i = bitcast { i8*, i64 }* %ptroff.14.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %cast.706.i, i64 16, i1 false)
  %runtime.writeBarrier.ld.24.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1562
  %icmp.159.i = icmp eq i32 %runtime.writeBarrier.ld.24.i, 0, !dbg !1562
  br i1 %icmp.159.i, label %then.128.i, label %else.128.i

then.128.i:                                       ; preds = %else.127.i
  %icmp.158.i = icmp eq { i8*, i64 }* %ptroff.13.i, null, !dbg !1562
  br i1 %icmp.158.i, label %then.129.i, label %else.129.i

fallthrough.128.i:                                ; preds = %else.129.i, %else.128.i
  %add.8.i = add i64 %qi.03.i, 1, !dbg !1563
  call void @llvm.dbg.value(metadata i64 %add.8.i, metadata !1552, metadata !DIExpression()), !dbg !1553
  br label %fallthrough.124.i

else.128.i:                                       ; preds = %else.127.i
  %cast.710.i = bitcast { i8*, i64 }* %ptroff.13.i to i8*, !dbg !1562
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.710.i, i8* nonnull %6), !dbg !1562
  br label %fallthrough.128.i

then.129.i:                                       ; preds = %then.128.i
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1562
  unreachable

else.129.i:                                       ; preds = %then.128.i
  %cast.708.i = bitcast { i8*, i64 }* %ptroff.13.i to i8*, !dbg !1562
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.708.i, i8* nonnull align 8 %6, i64 16, i1 false), !dbg !1562
  br label %fallthrough.128.i

command_line_arguments.newMixinCall.exit:         ; preds = %fallthrough.124.i, %fallthrough.116.i, %else.122.i
  call void @llvm.dbg.value(metadata %MixinCall.0* %cast.658.i, metadata !1527, metadata !DIExpression()), !dbg !1528
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1564
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1564
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4), !dbg !1564
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5), !dbg !1564
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !1564
  call void @llvm.dbg.value(metadata %MixinCall.0* %cast.658.i, metadata !1565, metadata !DIExpression()), !dbg !1566
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.804, i8* nest undef, %Parser.0* %p), !dbg !1567
  %cast.2204 = bitcast %SourcePosition.0* %tmpv.804 to i8*
  %runtime.writeBarrier.ld.72 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1568
  %icmp.548 = icmp eq i32 %runtime.writeBarrier.ld.72, 0, !dbg !1568
  br i1 %icmp.548, label %else.475, label %else.474

fallthrough.474:                                  ; preds = %else.474, %else.475
  call void @llvm.dbg.value(metadata %MixinCall.0* %cast.658.i, metadata !1511, metadata !DIExpression()), !dbg !1512
  ret %MixinCall.0* %cast.658.i, !dbg !1569

else.474:                                         ; preds = %command_line_arguments.newMixinCall.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.23.i, i8* nonnull %cast.2204), !dbg !1568
  br label %fallthrough.474

else.475:                                         ; preds = %command_line_arguments.newMixinCall.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.23.i, i8* nonnull align 8 %cast.2204, i64 40, i1 false), !dbg !1568
  br label %fallthrough.474
}

define %Block.0* @command_line_arguments.Parser.parseNamedBlock(i8* nest nocapture readnone %nest.38, %Parser.0* %p) #0 !dbg !1570 {
entry:
  %name.addr.i = alloca { i8*, i64 }, align 8
  %sret.actual.5.i = alloca %IPST.2, align 8
  %tmpv.86.i = alloca %IPST.1, align 8
  %tmp.40 = alloca [3 x { i8*, i64 }], align 8
  %tmpv.572 = alloca { i8*, i64 }, align 8
  %tmpv.577 = alloca { i8*, i64 }, align 8
  %tmpv.581 = alloca { i8*, i64 }, align 8
  %tmpv.583 = alloca %SourcePosition.0, align 8
  %tmpv.587 = alloca { i8*, i64 }, align 8
  %tmpv.591 = alloca { i8*, i64 }, align 8
  %tmpv.601 = alloca %Block.0, align 8
  %tmpv.607 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1571, metadata !DIExpression()), !dbg !1572
  call void @llvm.dbg.value(metadata %Block.0* null, metadata !1573, metadata !DIExpression()), !dbg !1574
  %call.110 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -17), !dbg !1575
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.110, metadata !1577, metadata !DIExpression()), !dbg !1578
  %icmp.393 = icmp eq %.command-line-arguments.token.0* %call.110, null, !dbg !1579
  br i1 %icmp.393, label %then.338, label %else.338

then.338:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1579
  unreachable

else.338:                                         ; preds = %entry
  %field.418 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.110, i64 0, i32 1, !dbg !1579
  %cast.1748 = bitcast { i8*, i64 }* %tmpv.572 to i8*
  %cast.1749 = bitcast { i8*, i64 }* %field.418 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1748, i8* nonnull align 8 %cast.1749, i64 16, i1 false)
  %icmp.394 = icmp eq %Parser.0* %p, null, !dbg !1580
  br i1 %icmp.394, label %then.339, label %else.339

then.339:                                         ; preds = %else.338
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1580
  unreachable

else.339:                                         ; preds = %else.338
  %field.419 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 4, !dbg !1580
  %.field.ld.88 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.419, align 8, !dbg !1580
  %call.111 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.88, i8* nonnull %cast.1748), !dbg !1581
  %cast.1753 = bitcast i8* %call.111 to %NamedBlock.0**, !dbg !1581
  %.ld.283 = load %NamedBlock.0*, %NamedBlock.0** %cast.1753, align 8, !dbg !1581
  %icmp.396 = icmp eq %NamedBlock.0* %.ld.283, null, !dbg !1582
  br i1 %icmp.396, label %else.342, label %else.341

else.341:                                         ; preds = %else.339
  %cast.1757 = bitcast { i8*, i64 }* %tmpv.577 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1757, i8* nonnull align 8 %cast.1749, i64 16, i1 false)
  %call.112 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1583
  %cast.1762 = bitcast [3 x { i8*, i64 }]* %tmp.40 to i8*, !dbg !1584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1762, i8* align 8 bitcast ({ i8*, i64 }* @const.347 to i8*), i64 16, i1 false), !dbg !1584
  %index.18 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.40, i64 0, i64 1, !dbg !1584
  %cast.1764 = bitcast { i8*, i64 }* %index.18 to i8*, !dbg !1584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1764, i8* nonnull align 8 %cast.1757, i64 16, i1 false), !dbg !1584
  %index.19 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.40, i64 0, i64 2, !dbg !1584
  %cast.1766 = bitcast { i8*, i64 }* %index.19 to i8*, !dbg !1584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1766, i8* align 8 bitcast ({ i8*, i64 }* @const.349 to i8*), i64 16, i1 false), !dbg !1584
  %call.113 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.40), !dbg !1584
  %call.113.fca.0.extract = extractvalue { i64, i64 } %call.113, 0, !dbg !1584
  %call.113.fca.1.extract = extractvalue { i64, i64 } %call.113, 1, !dbg !1584
  %sret.actual.41.sroa.0.0.cast.1770.sroa_cast = bitcast { i8*, i64 }* %tmpv.581 to i64*
  store i64 %call.113.fca.0.extract, i64* %sret.actual.41.sroa.0.0.cast.1770.sroa_cast, align 8
  %sret.actual.41.sroa.2.0.cast.1770.sroa_idx1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.581, i64 0, i32 1
  store i64 %call.113.fca.1.extract, i64* %sret.actual.41.sroa.2.0.cast.1770.sroa_idx1, align 8
  %cast.1773 = bitcast { i8*, i64 }* %tmpv.581 to i8*, !dbg !1583
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.112, i8* nonnull %cast.1773), !dbg !1583
  %0 = ptrtoint i8* %call.112 to i64, !dbg !1583
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %0), !dbg !1583
  unreachable

else.342:                                         ; preds = %else.339
  %field0.87 = bitcast { i8*, i64 }* %field.418 to i64*, !dbg !1585
  %ld.141 = load i64, i64* %field0.87, align 8, !dbg !1585
  %1 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.110, i64 0, i32 1, i32 1, !dbg !1585
  %ld.142 = load i64, i64* %1, align 8, !dbg !1585
  %2 = bitcast { i8*, i64 }* %name.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast %IPST.2* %sret.actual.5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %4 = bitcast %IPST.1* %tmpv.86.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %field0.6.i = bitcast { i8*, i64 }* %name.addr.i to i64*
  store i64 %ld.141, i64* %field0.6.i, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %name.addr.i, i64 0, i32 1
  store i64 %ld.142, i64* %5, align 8
  call void @llvm.dbg.value(metadata %NamedBlock.0* null, metadata !1586, metadata !DIExpression()), !dbg !1590
  %call.10.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.NamedBlock..d, i64 0, i32 0)), !dbg !1592
  call void @llvm.dbg.value(metadata i8* %call.10.i, metadata !1594, metadata !DIExpression()), !dbg !1595
  %icmp.61.i = icmp eq i8* %call.10.i, null, !dbg !1596
  br i1 %icmp.61.i, label %then.48.i, label %else.48.i

then.48.i:                                        ; preds = %else.342
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1596
  unreachable

else.48.i:                                        ; preds = %else.342
  %field.57.i = getelementptr inbounds i8, i8* %call.10.i, i64 64, !dbg !1596
  %runtime.writeBarrier.ld.9.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1597
  %icmp.63.i = icmp eq i32 %runtime.writeBarrier.ld.9.i, 0, !dbg !1597
  br i1 %icmp.63.i, label %else.50.i, label %else.49.i

fallthrough.49.i:                                 ; preds = %else.50.i, %else.49.i
  call void @runtime.makeslice(%IPST.2* nonnull sret %sret.actual.5.i, i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Node..d, i64 0, i32 0), i64 0, i64 0), !dbg !1598
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %3, i64 24, i1 false)
  %field.59.i = getelementptr inbounds i8, i8* %call.10.i, i64 40, !dbg !1599
  %runtime.writeBarrier.ld.10.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1600
  %icmp.66.i = icmp eq i32 %runtime.writeBarrier.ld.10.i, 0, !dbg !1600
  br i1 %icmp.66.i, label %else.53.i, label %else.52.i

else.49.i:                                        ; preds = %else.48.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.57.i, i8* nonnull %2), !dbg !1597
  br label %fallthrough.49.i

else.50.i:                                        ; preds = %else.48.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.57.i, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1597
  br label %fallthrough.49.i

else.52.i:                                        ; preds = %fallthrough.49.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Node, i64 0, i32 0), i8* nonnull %field.59.i, i8* nonnull %4), !dbg !1600
  br label %command_line_arguments.newNamedBlock.exit

else.53.i:                                        ; preds = %fallthrough.49.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.59.i, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !1600
  br label %command_line_arguments.newNamedBlock.exit

command_line_arguments.newNamedBlock.exit:        ; preds = %else.52.i, %else.53.i
  %field.60.i = getelementptr inbounds i8, i8* %call.10.i, i64 80, !dbg !1601
  %6 = bitcast i8* %field.60.i to i64*, !dbg !1601
  store i64 0, i64* %6, align 8, !dbg !1602
  call void @llvm.dbg.value(metadata i8* %call.10.i, metadata !1586, metadata !DIExpression()), !dbg !1590
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4), !dbg !1603
  call void @llvm.dbg.value(metadata i8* %call.10.i, metadata !1604, metadata !DIExpression()), !dbg !1605
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.583, i8* nest undef, %Parser.0* nonnull %p), !dbg !1606
  %cast.1779 = bitcast %SourcePosition.0* %tmpv.583 to i8*
  %field.424 = bitcast i8* %call.10.i to %Block.0*, !dbg !1607
  %runtime.writeBarrier.ld.53 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1608
  %icmp.400 = icmp eq i32 %runtime.writeBarrier.ld.53, 0, !dbg !1608
  br i1 %icmp.400, label %else.345, label %else.344

fallthrough.344:                                  ; preds = %else.344, %else.345
  %cast.1788 = bitcast { i8*, i64 }* %tmpv.587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1788, i8* align 8 bitcast ({ i8*, i64 }* @const.350 to i8*), i64 16, i1 false)
  %field.426 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.110, i64 0, i32 2, !dbg !1609
  %.field.ld.89 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.426, align 8, !dbg !1609
  %call.115 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.89, i8* nonnull %cast.1788), !dbg !1610
  %field0.90 = bitcast i8* %call.115 to i64*, !dbg !1611
  %ld.147 = load i64, i64* %field0.90, align 8, !dbg !1611
  %field1.90 = getelementptr inbounds i8, i8* %call.115, i64 8, !dbg !1611
  %7 = bitcast i8* %field1.90 to i64*, !dbg !1611
  %ld.148 = load i64, i64* %7, align 8, !dbg !1611
  %call.118 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.147, i64 %ld.148, i64 ptrtoint ([7 x i8]* @const.351 to i64), i64 6), !dbg !1611
  %icmp.406 = icmp eq i8 %call.118, 1, !dbg !1611
  br i1 %icmp.406, label %else.352.sink.split, label %else.347

else.344:                                         ; preds = %command_line_arguments.newNamedBlock.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.10.i, i8* nonnull %cast.1779), !dbg !1608
  br label %fallthrough.344

else.345:                                         ; preds = %command_line_arguments.newNamedBlock.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.10.i, i8* nonnull align 8 %cast.1779, i64 40, i1 false), !dbg !1608
  br label %fallthrough.344

else.347:                                         ; preds = %fallthrough.344
  %cast.1795 = bitcast { i8*, i64 }* %tmpv.591 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1795, i8* align 8 bitcast ({ i8*, i64 }* @const.350 to i8*), i64 16, i1 false)
  %.field.ld.90 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.426, align 8, !dbg !1612
  %call.116 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.90, i8* nonnull %cast.1795), !dbg !1613
  %field0.88 = bitcast i8* %call.116 to i64*, !dbg !1614
  %ld.143 = load i64, i64* %field0.88, align 8, !dbg !1614
  %field1.88 = getelementptr inbounds i8, i8* %call.116, i64 8, !dbg !1614
  %8 = bitcast i8* %field1.88 to i64*, !dbg !1614
  %ld.144 = load i64, i64* %8, align 8, !dbg !1614
  %call.117 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.143, i64 %ld.144, i64 ptrtoint ([8 x i8]* @const.352 to i64), i64 7), !dbg !1614
  %icmp.405 = icmp eq i8 %call.117, 1, !dbg !1614
  br i1 %icmp.405, label %else.352.sink.split, label %else.352

else.352.sink.split:                              ; preds = %else.347, %fallthrough.344
  %.sink = phi i64 [ 1, %fallthrough.344 ], [ 2, %else.347 ]
  store i64 %.sink, i64* %6, align 8, !dbg !1615
  br label %else.352, !dbg !1616

else.352:                                         ; preds = %else.352.sink.split, %else.347
  %field.430 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3, !dbg !1616
  %.field.ld.91 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.430, align 8, !dbg !1616
  %icmp.412 = icmp eq %.command-line-arguments.token.0* %.field.ld.91, null, !dbg !1617
  br i1 %icmp.412, label %then.353, label %else.353

then.353:                                         ; preds = %else.352
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1617
  unreachable

else.353:                                         ; preds = %else.352
  %field.432 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.91, i64 0, i32 0, !dbg !1617
  %.field.ld.92 = load i32, i32* %field.432, align 4, !dbg !1617
  %icmp.413 = icmp eq i32 %.field.ld.92, -4, !dbg !1618
  br i1 %icmp.413, label %then.354, label %else.359

then.354:                                         ; preds = %else.353
  %call.119 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 0, i64 0), !dbg !1619
  %icmp.409 = icmp eq %Block.0* %call.119, null, !dbg !1620
  br i1 %icmp.409, label %then.356, label %else.356

then.356:                                         ; preds = %then.354
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1620
  unreachable

else.356:                                         ; preds = %then.354
  %cast.1811 = bitcast %Block.0* %tmpv.601 to i8*
  %cast.1812 = bitcast %Block.0* %call.119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1811, i8* align 8 %cast.1812, i64 64, i1 false)
  %runtime.writeBarrier.ld.54 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1621
  %icmp.411 = icmp eq i32 %runtime.writeBarrier.ld.54, 0, !dbg !1621
  br i1 %icmp.411, label %else.358, label %else.357

else.357:                                         ; preds = %else.356
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Block..d, i64 0, i32 0), i8* nonnull %call.10.i, i8* nonnull %cast.1811), !dbg !1621
  br label %else.359

else.358:                                         ; preds = %else.356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.10.i, i8* nonnull align 8 %cast.1811, i64 64, i1 false), !dbg !1621
  br label %else.359

else.359:                                         ; preds = %else.353, %else.357, %else.358
  %cast.1821 = bitcast { i8*, i64 }* %tmpv.607 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1821, i8* nonnull align 8 %field.57.i, i64 16, i1 false)
  %.field.ld.93 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.419, align 8, !dbg !1622
  %call.120 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.NamedBlock, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.93, i8* nonnull %cast.1821), !dbg !1623
  %runtime.writeBarrier.ld.55 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1623
  %icmp.417 = icmp eq i32 %runtime.writeBarrier.ld.55, 0, !dbg !1623
  br i1 %icmp.417, label %then.361, label %else.361

then.361:                                         ; preds = %else.359
  %icmp.416 = icmp eq i8* %call.120, null, !dbg !1623
  br i1 %icmp.416, label %then.362, label %else.362

else.361:                                         ; preds = %else.359
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.120, i8* nonnull %call.10.i), !dbg !1623
  br label %else.363

then.362:                                         ; preds = %then.361
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1623
  unreachable

else.362:                                         ; preds = %then.361
  %9 = bitcast i8* %call.120 to i8**, !dbg !1623
  store i8* %call.10.i, i8** %9, align 8, !dbg !1623
  br label %else.363

else.363:                                         ; preds = %else.362, %else.361
  %.field.ld.94 = load i64, i64* %6, align 8, !dbg !1624
  %icmp.420 = icmp eq i64 %.field.ld.94, 0, !dbg !1625
  br i1 %icmp.420, label %else.365, label %else.364

else.364:                                         ; preds = %else.363
  %call.121 = call fastcc %Block.0* @command_line_arguments.newBlock(), !dbg !1626
  call void @llvm.dbg.value(metadata %Block.0* %call.121, metadata !1573, metadata !DIExpression()), !dbg !1574
  ret %Block.0* %call.121, !dbg !1627

else.365:                                         ; preds = %else.363
  call void @llvm.dbg.value(metadata %Block.0* %field.424, metadata !1573, metadata !DIExpression()), !dbg !1574
  ret %Block.0* %field.424, !dbg !1628
}

define %Parser.0* @command_line_arguments.Parser.parseRelativeFile(i8* nest nocapture readnone %nest.29, %Parser.0* readonly %p, i64 %filename.chunk0, i64 %filename.chunk1) #0 !dbg !1629 {
entry:
  %tmp.24 = alloca [4 x { i8*, i64 }], align 8
  %tmp.23 = alloca [2 x { i8*, i64 }], align 8
  %tmp.22 = alloca %IPST.5, align 8
  %tmp.20 = alloca [3 x { i8*, i64 }], align 8
  %tmpv.324 = alloca { i8*, i64 }, align 8
  %tmpv.328 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.24 = alloca { %Parser.0*, %error.0 }, align 8
  %sret.actual.25 = alloca { %Parser.0*, %error.0 }, align 8
  %tmpv.349 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1632, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.value(metadata i64 %filename.chunk0, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1635
  call void @llvm.dbg.value(metadata i64 %filename.chunk1, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1635
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !1636, metadata !DIExpression()), !dbg !1637
  %icmp.240 = icmp eq %Parser.0* %p, null, !dbg !1638
  br i1 %icmp.240, label %then.204, label %else.204

then.204:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1638
  unreachable

else.204:                                         ; preds = %entry
  %field.233 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 1, i32 1, !dbg !1640
  %.field.field.ld.2 = load i64, i64* %field.233, align 8, !dbg !1640
  %icmp.241 = icmp eq i64 %.field.field.ld.2, 0, !dbg !1641
  br i1 %icmp.241, label %then.205, label %else.206

then.205:                                         ; preds = %else.204
  %call.50 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1642
  %cast.1240 = bitcast [3 x { i8*, i64 }]* %tmp.20 to i8*, !dbg !1643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1240, i8* align 8 bitcast ({ i8*, i64 }* @const.315 to i8*), i64 16, i1 false), !dbg !1643
  %filename.addr.sroa.0.0.cast.1242.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.20, i64 0, i64 1, !dbg !1643
  %filename.addr.sroa.0.0.cast.1242.sroa_cast = bitcast { i8*, i64 }* %filename.addr.sroa.0.0.cast.1242.sroa_idx to i64*, !dbg !1643
  store i64 %filename.chunk0, i64* %filename.addr.sroa.0.0.cast.1242.sroa_cast, align 8, !dbg !1643
  %filename.addr.sroa.10.0.cast.1242.sroa_idx38 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.20, i64 0, i64 1, i32 1, !dbg !1643
  store i64 %filename.chunk1, i64* %filename.addr.sroa.10.0.cast.1242.sroa_idx38, align 8, !dbg !1643
  %index.7 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.20, i64 0, i64 2, !dbg !1643
  %cast.1244 = bitcast { i8*, i64 }* %index.7 to i8*, !dbg !1643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1244, i8* align 8 bitcast ({ i8*, i64 }* @const.317 to i8*), i64 16, i1 false), !dbg !1643
  %call.51 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.20), !dbg !1643
  %call.51.fca.0.extract = extractvalue { i64, i64 } %call.51, 0, !dbg !1643
  %call.51.fca.1.extract = extractvalue { i64, i64 } %call.51, 1, !dbg !1643
  %sret.actual.19.sroa.0.0.cast.1248.sroa_cast = bitcast { i8*, i64 }* %tmpv.324 to i64*
  store i64 %call.51.fca.0.extract, i64* %sret.actual.19.sroa.0.0.cast.1248.sroa_cast, align 8
  %sret.actual.19.sroa.2.0.cast.1248.sroa_idx17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.324, i64 0, i32 1
  store i64 %call.51.fca.1.extract, i64* %sret.actual.19.sroa.2.0.cast.1248.sroa_idx17, align 8
  %cast.1251 = bitcast { i8*, i64 }* %tmpv.324 to i8*, !dbg !1642
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.50, i8* nonnull %cast.1251), !dbg !1642
  %0 = ptrtoint i8* %call.50 to i64, !dbg !1642
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %0), !dbg !1642
  unreachable

else.206:                                         ; preds = %else.204
  %field.232 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 1, !dbg !1638
  %field0.58 = bitcast { i8*, i64 }* %field.232 to i64*, !dbg !1644
  %ld.74 = load i64, i64* %field0.58, align 8, !dbg !1644
  %call.52 = call { i64, i64 } @path_filepath.Dir(i8* nest undef, i64 %ld.74, i64 %.field.field.ld.2), !dbg !1644
  %call.52.fca.0.extract = extractvalue { i64, i64 } %call.52, 0, !dbg !1644
  %call.52.fca.1.extract = extractvalue { i64, i64 } %call.52, 1, !dbg !1644
  %tmpv.326.sroa.0.0.cast.1260.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.328 to i64*, !dbg !1645
  store i64 %call.52.fca.0.extract, i64* %tmpv.326.sroa.0.0.cast.1260.sroa_cast, align 8, !dbg !1645
  %tmpv.326.sroa.2.0.cast.1260.sroa_idx16 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.328, i64 0, i64 0, i32 1, !dbg !1645
  store i64 %call.52.fca.1.extract, i64* %tmpv.326.sroa.2.0.cast.1260.sroa_idx16, align 8, !dbg !1645
  %filename.addr.sroa.0.0.cast.1262.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.328, i64 0, i64 1, !dbg !1645
  %filename.addr.sroa.0.0.cast.1262.sroa_cast = bitcast { i8*, i64 }* %filename.addr.sroa.0.0.cast.1262.sroa_idx to i64*, !dbg !1645
  store i64 %filename.chunk0, i64* %filename.addr.sroa.0.0.cast.1262.sroa_cast, align 8, !dbg !1645
  %filename.addr.sroa.10.0.cast.1262.sroa_idx39 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.328, i64 0, i64 1, i32 1, !dbg !1645
  store i64 %filename.chunk1, i64* %filename.addr.sroa.10.0.cast.1262.sroa_idx39, align 8, !dbg !1645
  %field.235 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.22, i64 0, i32 0, !dbg !1645
  %cast.1264 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.328, i64 0, i64 0, !dbg !1645
  store { i8*, i64 }* %cast.1264, { i8*, i64 }** %field.235, align 8, !dbg !1645
  %field.236 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.22, i64 0, i32 1, !dbg !1645
  store i64 2, i64* %field.236, align 8, !dbg !1645
  %field.237 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.22, i64 0, i32 2, !dbg !1645
  store i64 2, i64* %field.237, align 8, !dbg !1645
  %call.53 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.5* byval nonnull %tmp.22), !dbg !1645
  %call.53.fca.0.extract = extractvalue { i64, i64 } %call.53, 0, !dbg !1645
  %call.53.fca.1.extract = extractvalue { i64, i64 } %call.53, 1, !dbg !1645
  call void @llvm.dbg.value(metadata i64 %call.53.fca.0.extract, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1635
  call void @llvm.dbg.value(metadata i64 %call.53.fca.1.extract, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1635
  %call.54 = call { i64, i64 } @path_filepath.Base(i8* nest undef, i64 %call.53.fca.0.extract, i64 %call.53.fca.1.extract), !dbg !1646
  %call.54.fca.0.extract = extractvalue { i64, i64 } %call.54, 0, !dbg !1646
  %call.54.fca.1.extract = extractvalue { i64, i64 } %call.54, 1, !dbg !1646
  %call.55 = call i64 @strings.IndexRune(i8* nest undef, i64 %call.54.fca.0.extract, i64 %call.54.fca.1.extract, i32 46), !dbg !1647
  %icmp.243 = icmp slt i64 %call.55, 0, !dbg !1648
  br i1 %icmp.243, label %then.207, label %fallthrough.207

then.207:                                         ; preds = %else.206
  %filename.addr.sroa.0.0.cast.1277.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.23 to i64*, !dbg !1649
  store i64 %call.53.fca.0.extract, i64* %filename.addr.sroa.0.0.cast.1277.sroa_cast, align 8, !dbg !1649
  %filename.addr.sroa.10.0.cast.1277.sroa_idx41 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.23, i64 0, i64 0, i32 1, !dbg !1649
  store i64 %call.53.fca.1.extract, i64* %filename.addr.sroa.10.0.cast.1277.sroa_idx41, align 8, !dbg !1649
  %index.11 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.23, i64 0, i64 1, !dbg !1649
  %cast.1279 = bitcast { i8*, i64 }* %index.11 to i8*, !dbg !1649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1279, i8* align 8 bitcast ({ i8*, i64 }* @const.319 to i8*), i64 16, i1 false), !dbg !1649
  %call.56 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.23), !dbg !1649
  %call.56.fca.0.extract = extractvalue { i64, i64 } %call.56, 0, !dbg !1649
  %call.56.fca.1.extract = extractvalue { i64, i64 } %call.56, 1, !dbg !1649
  call void @llvm.dbg.value(metadata i64 %call.56.fca.0.extract, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1635
  call void @llvm.dbg.value(metadata i64 %call.56.fca.1.extract, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1635
  br label %fallthrough.207

fallthrough.207:                                  ; preds = %else.206, %then.207
  %filename.addr.sroa.0.0 = phi i64 [ %call.56.fca.0.extract, %then.207 ], [ %call.53.fca.0.extract, %else.206 ], !dbg !1650
  %filename.addr.sroa.10.0 = phi i64 [ %call.56.fca.1.extract, %then.207 ], [ %call.53.fca.1.extract, %else.206 ], !dbg !1650
  call void @llvm.dbg.value(metadata i64 %filename.addr.sroa.10.0, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1635
  call void @llvm.dbg.value(metadata i64 %filename.addr.sroa.0.0, metadata !1634, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1635
  call void @command_line_arguments.FileParser({ %Parser.0*, %error.0 }* nonnull sret %sret.actual.24, i8* nest undef, i64 %filename.addr.sroa.0.0, i64 %filename.addr.sroa.10.0), !dbg !1651
  %tmpv.333.sroa.0.0.cast.1289.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.actual.24, i64 0, i32 0, !dbg !1651
  %tmpv.333.sroa.0.0.copyload9 = load %Parser.0*, %Parser.0** %tmpv.333.sroa.0.0.cast.1289.sroa_idx, align 8, !dbg !1651
  %tmpv.333.sroa.3.sroa.0.0.tmpv.333.sroa.3.0.cast.1289.sroa_cast.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.actual.24, i64 0, i32 1, i32 0, !dbg !1651
  %tmpv.333.sroa.3.sroa.0.0.copyload30 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.333.sroa.3.sroa.0.0.tmpv.333.sroa.3.0.cast.1289.sroa_cast.sroa_idx, align 8, !dbg !1651
  call void @llvm.dbg.value(metadata %Parser.0* %tmpv.333.sroa.0.0.copyload9, metadata !1652, metadata !DIExpression()), !dbg !1653
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.333.sroa.3.sroa.0.0.copyload30, metadata !1654, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1653
  %icmp.244 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.333.sroa.3.sroa.0.0.copyload30, null, !dbg !1655
  br i1 %icmp.244, label %else.212, label %fallthrough.208

fallthrough.208:                                  ; preds = %fallthrough.207
  %tmpv.333.sroa.3.sroa.3.0.tmpv.333.sroa.3.0.cast.1289.sroa_cast.sroa_idx31 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.actual.24, i64 0, i32 1, i32 1, !dbg !1651
  %tmpv.333.sroa.3.sroa.3.0.copyload32 = load i8*, i8** %tmpv.333.sroa.3.sroa.3.0.tmpv.333.sroa.3.0.cast.1289.sroa_cast.sroa_idx31, align 8, !dbg !1651
  call void @llvm.dbg.value(metadata i8* %tmpv.333.sroa.3.sroa.3.0.copyload32, metadata !1654, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1653
  %field.242 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 2, i32 0, !dbg !1656
  %.field.field.ld.3 = load { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }*, { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }** %field.242, align 8, !dbg !1656
  %icmp.246 = icmp eq { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }* %.field.field.ld.3, null, !dbg !1656
  br i1 %icmp.246, label %then.212, label %fallthrough.210

fallthrough.210:                                  ; preds = %fallthrough.208
  %1 = ptrtoint { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }* %.field.field.ld.3 to i64
  %field1.63 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 2, i32 1, !dbg !1657
  %2 = bitcast i8** %field1.63 to i64*, !dbg !1657
  %ld.85 = load i64, i64* %2, align 8, !dbg !1657
  call void @command_line_arguments.VirtualFileParser({ %Parser.0*, %error.0 }* nonnull sret %sret.actual.25, i8* nest undef, i64 %filename.addr.sroa.0.0, i64 %filename.addr.sroa.10.0, i64 %1, i64 %ld.85), !dbg !1657
  %tmpv.338.sroa.0.0.cast.1303.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.actual.25, i64 0, i32 0, !dbg !1657
  %tmpv.338.sroa.0.0.copyload6 = load %Parser.0*, %Parser.0** %tmpv.338.sroa.0.0.cast.1303.sroa_idx, align 8, !dbg !1657
  %tmpv.338.sroa.3.sroa.0.0.tmpv.338.sroa.3.0.cast.1303.sroa_cast.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.actual.25, i64 0, i32 1, i32 0, !dbg !1657
  %tmpv.338.sroa.3.sroa.0.0.copyload26 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.338.sroa.3.sroa.0.0.tmpv.338.sroa.3.0.cast.1303.sroa_cast.sroa_idx, align 8, !dbg !1657
  %tmpv.338.sroa.3.sroa.3.0.tmpv.338.sroa.3.0.cast.1303.sroa_cast.sroa_idx27 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.actual.25, i64 0, i32 1, i32 1, !dbg !1657
  %tmpv.338.sroa.3.sroa.3.0.copyload28 = load i8*, i8** %tmpv.338.sroa.3.sroa.3.0.tmpv.338.sroa.3.0.cast.1303.sroa_cast.sroa_idx27, align 8, !dbg !1657
  call void @llvm.dbg.value(metadata %Parser.0* %tmpv.338.sroa.0.0.copyload6, metadata !1652, metadata !DIExpression()), !dbg !1653
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.338.sroa.3.sroa.0.0.copyload26, metadata !1654, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1653
  call void @llvm.dbg.value(metadata i8* %tmpv.338.sroa.3.sroa.3.0.copyload28, metadata !1654, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1653
  call void @llvm.dbg.value(metadata %Parser.0* %tmpv.338.sroa.0.0.copyload6, metadata !1652, metadata !DIExpression()), !dbg !1653
  call void @llvm.dbg.value(metadata i8* %tmpv.338.sroa.3.sroa.3.0.copyload28, metadata !1654, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1653
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.338.sroa.3.sroa.0.0.copyload26, metadata !1654, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1653
  %icmp.248 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.338.sroa.3.sroa.0.0.copyload26, null, !dbg !1658
  br i1 %icmp.248, label %else.212, label %then.212

then.212:                                         ; preds = %fallthrough.208, %fallthrough.210
  %err.sroa.7.052 = phi i8* [ %tmpv.338.sroa.3.sroa.3.0.copyload28, %fallthrough.210 ], [ %tmpv.333.sroa.3.sroa.3.0.copyload32, %fallthrough.208 ]
  %err.sroa.0.051 = phi { %_type.0*, { i64, i64 } (i8*, i8*)* }* [ %tmpv.338.sroa.3.sroa.0.0.copyload26, %fallthrough.210 ], [ %tmpv.333.sroa.3.sroa.0.0.copyload30, %fallthrough.208 ]
  %field.247 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %err.sroa.0.051, i64 0, i32 1, !dbg !1659
  %.field.ld.39 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.247, align 8, !dbg !1659
  %call.57 = call { i64, i64 } %.field.ld.39(i8* nest undef, i8* %err.sroa.7.052), !dbg !1659
  %call.57.fca.0.extract = extractvalue { i64, i64 } %call.57, 0, !dbg !1659
  %call.57.fca.1.extract = extractvalue { i64, i64 } %call.57, 1, !dbg !1659
  %call.58 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1660
  %cast.1320 = bitcast [4 x { i8*, i64 }]* %tmp.24 to i8*, !dbg !1661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1320, i8* align 8 bitcast ({ i8*, i64 }* @const.322 to i8*), i64 16, i1 false), !dbg !1661
  %filename.addr.sroa.0.0.cast.1322.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.24, i64 0, i64 1, !dbg !1661
  %filename.addr.sroa.0.0.cast.1322.sroa_cast = bitcast { i8*, i64 }* %filename.addr.sroa.0.0.cast.1322.sroa_idx to i64*, !dbg !1661
  store i64 %filename.addr.sroa.0.0, i64* %filename.addr.sroa.0.0.cast.1322.sroa_cast, align 8, !dbg !1661
  %filename.addr.sroa.10.0.cast.1322.sroa_idx43 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.24, i64 0, i64 1, i32 1, !dbg !1661
  store i64 %filename.addr.sroa.10.0, i64* %filename.addr.sroa.10.0.cast.1322.sroa_idx43, align 8, !dbg !1661
  %index.14 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.24, i64 0, i64 2, !dbg !1661
  %cast.1324 = bitcast { i8*, i64 }* %index.14 to i8*, !dbg !1661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1324, i8* align 8 bitcast ({ i8*, i64 }* @const.324 to i8*), i64 16, i1 false), !dbg !1661
  %tmpv.347.sroa.0.0.cast.1326.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.24, i64 0, i64 3, !dbg !1661
  %tmpv.347.sroa.0.0.cast.1326.sroa_cast = bitcast { i8*, i64 }* %tmpv.347.sroa.0.0.cast.1326.sroa_idx to i64*, !dbg !1661
  store i64 %call.57.fca.0.extract, i64* %tmpv.347.sroa.0.0.cast.1326.sroa_cast, align 8, !dbg !1661
  %tmpv.347.sroa.2.0.cast.1326.sroa_idx5 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.24, i64 0, i64 3, i32 1, !dbg !1661
  store i64 %call.57.fca.1.extract, i64* %tmpv.347.sroa.2.0.cast.1326.sroa_idx5, align 8, !dbg !1661
  %call.59 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.24), !dbg !1661
  %call.59.fca.0.extract = extractvalue { i64, i64 } %call.59, 0, !dbg !1661
  %call.59.fca.1.extract = extractvalue { i64, i64 } %call.59, 1, !dbg !1661
  %sret.actual.27.sroa.0.0.cast.1330.sroa_cast = bitcast { i8*, i64 }* %tmpv.349 to i64*
  store i64 %call.59.fca.0.extract, i64* %sret.actual.27.sroa.0.0.cast.1330.sroa_cast, align 8
  %sret.actual.27.sroa.2.0.cast.1330.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.349, i64 0, i32 1
  store i64 %call.59.fca.1.extract, i64* %sret.actual.27.sroa.2.0.cast.1330.sroa_idx2, align 8
  %cast.1333 = bitcast { i8*, i64 }* %tmpv.349 to i8*, !dbg !1660
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.58, i8* nonnull %cast.1333), !dbg !1660
  %3 = ptrtoint i8* %call.58 to i64, !dbg !1660
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %3), !dbg !1660
  unreachable

else.212:                                         ; preds = %fallthrough.207, %fallthrough.210
  %parser.048 = phi %Parser.0* [ %tmpv.338.sroa.0.0.copyload6, %fallthrough.210 ], [ %tmpv.333.sroa.0.0.copyload9, %fallthrough.207 ]
  call void @llvm.dbg.value(metadata %Parser.0* %tmpv.338.sroa.0.0.copyload6, metadata !1636, metadata !DIExpression()), !dbg !1637
  ret %Parser.0* %parser.048, !dbg !1662
}

define %Tag.0* @command_line_arguments.Parser.parseTag(i8* nest nocapture readnone %nest.43, %Parser.0* %p) #0 !dbg !1663 {
entry:
  %name.addr.i = alloca { i8*, i64 }, align 8
  %sret.actual.6.i = alloca %IPST.2, align 8
  %tmpv.98.i = alloca %IPST.4, align 8
  %tag = alloca %Tag.0*, align 8
  %tmpv.656 = alloca %SourcePosition.0, align 8
  %sret.actual.47 = alloca %SourcePosition.0, align 8
  %tmpv.662 = alloca { i8*, %Tag.0** }, align 8
  %tmpv.682 = alloca { i8*, i64 }, align 8
  %tmpv.686 = alloca { i8*, i64 }, align 8
  %tmpv.687 = alloca %SourcePosition.0, align 8
  %tmpv.691 = alloca { i8*, i64 }, align 8
  %tmpv.695 = alloca %IPST.4, align 8
  %tmpv.698 = alloca %Attribute.0, align 8
  %sret.actual.49 = alloca %IPST.2, align 8
  %tmpv.708 = alloca %IPST.4, align 8
  %tmpv.710 = alloca { i8*, i64 }, align 8
  %tmpv.714 = alloca { i8*, i64 }, align 8
  %tmpv.715 = alloca %SourcePosition.0, align 8
  %tmpv.719 = alloca { i8*, i64 }, align 8
  %tmpv.723 = alloca %IPST.4, align 8
  %tmpv.726 = alloca %Attribute.0, align 8
  %sret.actual.51 = alloca %IPST.2, align 8
  %tmpv.736 = alloca %IPST.4, align 8
  %tmpv.738 = alloca { i8*, i64 }, align 8
  %tmpv.742 = alloca { i8*, i64 }, align 8
  %tmpv.743 = alloca %SourcePosition.0, align 8
  %tmpv.746 = alloca { i8*, i64 }, align 8
  %tmpv.749 = alloca { i8*, i64 }, align 8
  %tmpv.752 = alloca { i8*, i64 }, align 8
  %tmpv.754 = alloca { i8*, i64 }, align 8
  %tmpv.757 = alloca %IPST.4, align 8
  %tmpv.760 = alloca %Attribute.0, align 8
  %sret.actual.53 = alloca %IPST.2, align 8
  %tmpv.770 = alloca %IPST.4, align 8
  %tmpv.774 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1666, metadata !DIExpression()), !dbg !1667
  call void @llvm.dbg.value(metadata %Tag.0* null, metadata !1668, metadata !DIExpression()), !dbg !1669
  %0 = bitcast %Tag.0** %tag to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0)
  %call.136 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -9), !dbg !1670
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.136, metadata !1672, metadata !DIExpression()), !dbg !1673
  %icmp.449 = icmp eq %.command-line-arguments.token.0* %call.136, null, !dbg !1674
  br i1 %icmp.449, label %then.392, label %else.392

then.392:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1674
  unreachable

else.392:                                         ; preds = %entry
  %field.454 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.136, i64 0, i32 1, !dbg !1674
  %field0.103 = bitcast { i8*, i64 }* %field.454 to i64*, !dbg !1675
  %ld.173 = load i64, i64* %field0.103, align 8, !dbg !1675
  %1 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.136, i64 0, i32 1, i32 1, !dbg !1675
  %ld.174 = load i64, i64* %1, align 8, !dbg !1675
  %2 = bitcast { i8*, i64 }* %name.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast %IPST.2* %sret.actual.6.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %4 = bitcast %IPST.4* %tmpv.98.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %field0.7.i = bitcast { i8*, i64 }* %name.addr.i to i64*
  store i64 %ld.173, i64* %field0.7.i, align 8
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %name.addr.i, i64 0, i32 1
  store i64 %ld.174, i64* %5, align 8
  call void @llvm.dbg.value(metadata %Tag.0* null, metadata !1676, metadata !DIExpression()), !dbg !1680
  %call.11.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Tag..d, i64 0, i32 0)), !dbg !1682
  call void @llvm.dbg.value(metadata i8* %call.11.i, metadata !1684, metadata !DIExpression()), !dbg !1685
  %icmp.68.i = icmp eq i8* %call.11.i, null, !dbg !1686
  br i1 %icmp.68.i, label %then.55.i, label %else.55.i

then.55.i:                                        ; preds = %else.392
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1686
  unreachable

else.55.i:                                        ; preds = %else.392
  %field.61.i = getelementptr inbounds i8, i8* %call.11.i, i64 40, !dbg !1686
  %runtime.writeBarrier.ld.11.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1687
  %icmp.70.i = icmp eq i32 %runtime.writeBarrier.ld.11.i, 0, !dbg !1687
  br i1 %icmp.70.i, label %else.58.thread.i, label %else.58.i

else.58.thread.i:                                 ; preds = %else.55.i
  %6 = bitcast i8* %field.61.i to %Block.0**, !dbg !1686
  store %Block.0* null, %Block.0** %6, align 8, !dbg !1687
  %field.621.i = getelementptr inbounds i8, i8* %call.11.i, i64 48, !dbg !1688
  br label %else.60.i

else.58.i:                                        ; preds = %else.55.i
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.61.i, i8* null), !dbg !1687
  %runtime.writeBarrier.ld.12.pr.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1689
  %field.62.i = getelementptr inbounds i8, i8* %call.11.i, i64 48, !dbg !1688
  %icmp.73.i = icmp eq i32 %runtime.writeBarrier.ld.12.pr.i, 0, !dbg !1689
  br i1 %icmp.73.i, label %else.60.i, label %else.59.i

fallthrough.59.i:                                 ; preds = %else.60.i, %else.59.i
  call void @runtime.makeslice(%IPST.2* nonnull sret %sret.actual.6.i, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), i64 0, i64 0), !dbg !1690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* nonnull align 8 %3, i64 24, i1 false)
  %field.63.i = getelementptr inbounds i8, i8* %call.11.i, i64 72, !dbg !1691
  %runtime.writeBarrier.ld.13.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1692
  %icmp.76.i = icmp eq i32 %runtime.writeBarrier.ld.13.i, 0, !dbg !1692
  br i1 %icmp.76.i, label %else.63.i, label %else.62.i

else.59.i:                                        ; preds = %else.58.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.62.i, i8* nonnull %2), !dbg !1689
  br label %fallthrough.59.i

else.60.i:                                        ; preds = %else.58.i, %else.58.thread.i
  %field.624.i = phi i8* [ %field.621.i, %else.58.thread.i ], [ %field.62.i, %else.58.i ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.624.i, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1689
  br label %fallthrough.59.i

else.62.i:                                        ; preds = %fallthrough.59.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i64 0, i32 0), i8* nonnull %field.63.i, i8* nonnull %4), !dbg !1692
  br label %command_line_arguments.newTag.exit

else.63.i:                                        ; preds = %fallthrough.59.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.63.i, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !1692
  br label %command_line_arguments.newTag.exit

command_line_arguments.newTag.exit:               ; preds = %else.62.i, %else.63.i
  %7 = getelementptr inbounds i8, i8* %call.11.i, i64 64, !dbg !1693
  store i8 0, i8* %7, align 1, !dbg !1694
  call void @llvm.dbg.value(metadata i8* %call.11.i, metadata !1676, metadata !DIExpression()), !dbg !1680
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1695
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1695
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4), !dbg !1695
  call void @llvm.dbg.value(metadata i8* %call.11.i, metadata !1696, metadata !DIExpression()), !dbg !1697
  %8 = bitcast %Tag.0** %tag to i8**
  store i8* %call.11.i, i8** %8, align 8
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %sret.actual.47, i8* nest undef, %Parser.0* %p), !dbg !1698
  %cast.1911 = bitcast %SourcePosition.0* %tmpv.656 to i8*
  %cast.1912 = bitcast %SourcePosition.0* %sret.actual.47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1911, i8* nonnull align 8 %cast.1912, i64 40, i1 false)
  %tag.ld.11 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1699
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.11, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.450 = icmp eq %Tag.0* %tag.ld.11, null, !dbg !1700
  br i1 %icmp.450, label %then.393, label %else.393

then.393:                                         ; preds = %command_line_arguments.newTag.exit
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1700
  unreachable

else.393:                                         ; preds = %command_line_arguments.newTag.exit
  %runtime.writeBarrier.ld.61 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1701
  %icmp.452 = icmp eq i32 %runtime.writeBarrier.ld.61, 0, !dbg !1701
  %cast.1915 = bitcast %Tag.0* %tag.ld.11 to i8*, !dbg !1701
  br i1 %icmp.452, label %else.395, label %else.394

fallthrough.394:                                  ; preds = %else.394, %else.395
  %cast.1921 = bitcast { i8*, %Tag.0** }* %tmpv.662 to i8*
  %field.456 = getelementptr inbounds { i8*, %Tag.0** }, { i8*, %Tag.0** }* %tmpv.662, i64 0, i32 0, !dbg !1702
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Parser.parseTag..func1 to i8*), i8** %field.456, align 8, !dbg !1702
  %field.457 = getelementptr inbounds { i8*, %Tag.0** }, { i8*, %Tag.0** }* %tmpv.662, i64 0, i32 1, !dbg !1702
  store %Tag.0** %tag, %Tag.0*** %field.457, align 8, !dbg !1702
  call void @llvm.dbg.value(metadata { i8*, %Tag.0** }* %tmpv.662, metadata !1703, metadata !DIExpression()), !dbg !1709
  %icmp.453 = icmp eq %Parser.0* %p, null, !dbg !1710
  br i1 %icmp.453, label %then.396, label %else.396.lr.ph

else.396.lr.ph:                                   ; preds = %fallthrough.394
  %field.458 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 3
  %cast.1953 = bitcast { i8*, i64 }* %tmpv.682 to i8*
  %cast.2012 = bitcast { i8*, i64 }* %tmpv.710 to i8*
  %cast.2071 = bitcast { i8*, i64 }* %tmpv.738 to i8*
  %cast.2145 = bitcast { i8*, i64 }* %tmpv.774 to i8*
  %9 = bitcast { i8*, %Tag.0** }* %tmpv.662 to void (i8*)**
  %cast.1966 = bitcast %SourcePosition.0* %tmpv.687 to i8*
  %cast.2025 = bitcast %SourcePosition.0* %tmpv.715 to i8*
  %cast.2084 = bitcast %SourcePosition.0* %tmpv.743 to i8*
  %cast.1972 = bitcast { i8*, i64 }* %tmpv.691 to i8*
  %cast.1977 = bitcast %IPST.4* %tmpv.695 to i8*
  %field.477 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.695, i64 0, i32 1
  %cast.1979 = bitcast %Attribute.0* %tmpv.698 to i8*
  %field.479 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.698, i64 0, i32 1
  %cast.1981 = bitcast { i8*, i64 }* %field.479 to i8*
  %field.480 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.698, i64 0, i32 2
  %cast.1983 = bitcast { i8*, i64 }* %field.480 to i8*
  %field.481 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.698, i64 0, i32 3
  %field.482 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.698, i64 0, i32 4
  %cast.1985 = bitcast { i8*, i64 }* %field.482 to i8*
  %field.483 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.695, i64 0, i32 2
  %cast.2031 = bitcast { i8*, i64 }* %tmpv.719 to i8*
  %cast.2036 = bitcast %IPST.4* %tmpv.723 to i8*
  %field.501 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.723, i64 0, i32 1
  %cast.2038 = bitcast %Attribute.0* %tmpv.726 to i8*
  %field.503 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.726, i64 0, i32 1
  %cast.2040 = bitcast { i8*, i64 }* %field.503 to i8*
  %field.504 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.726, i64 0, i32 2
  %cast.2042 = bitcast { i8*, i64 }* %field.504 to i8*
  %field.505 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.726, i64 0, i32 3
  %field.506 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.726, i64 0, i32 4
  %cast.2044 = bitcast { i8*, i64 }* %field.506 to i8*
  %field.507 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.723, i64 0, i32 2
  %cast.2087 = bitcast { i8*, i64 }* %tmpv.746 to i8*
  %cast.2093 = bitcast { i8*, i64 }* %tmpv.749 to i8*
  %cast.2100 = bitcast { i8*, i64 }* %tmpv.752 to i8*
  %cast.2102 = bitcast { i8*, i64 }* %tmpv.754 to i8*
  %cast.1988 = bitcast %IPST.4* %tmpv.695 to %IPST.2*
  %tmpv.703.sroa.0.0.cast.1993.sroa_idx = bitcast %IPST.2* %sret.actual.49 to %Attribute.0**
  %10 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.49, i64 0, i32 1
  %11 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.49, i64 0, i32 2
  %tmpv.703.sroa.0.0.cast.1996.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.695, i64 0, i32 0
  %cast.2047 = bitcast %IPST.4* %tmpv.723 to %IPST.2*
  %tmpv.731.sroa.0.0.cast.2052.sroa_idx = bitcast %IPST.2* %sret.actual.51 to %Attribute.0**
  %12 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.51, i64 0, i32 1
  %13 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.51, i64 0, i32 2
  %tmpv.731.sroa.0.0.cast.2055.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.723, i64 0, i32 0
  %cast.2109 = bitcast %IPST.4* %tmpv.757 to i8*
  %field.527 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.757, i64 0, i32 1
  %cast.2111 = bitcast %Attribute.0* %tmpv.760 to i8*
  %field.529 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.760, i64 0, i32 1
  %cast.2113 = bitcast { i8*, i64 }* %field.529 to i8*
  %field.530 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.760, i64 0, i32 2
  %cast.2115 = bitcast { i8*, i64 }* %field.530 to i8*
  %field.531 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.760, i64 0, i32 3
  %field.532 = getelementptr inbounds %Attribute.0, %Attribute.0* %tmpv.760, i64 0, i32 4
  %cast.2117 = bitcast { i8*, i64 }* %field.532 to i8*
  %field.533 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.757, i64 0, i32 2
  %cast.2120 = bitcast %IPST.4* %tmpv.757 to %IPST.2*
  %tmpv.765.sroa.0.0.cast.2125.sroa_idx = bitcast %IPST.2* %sret.actual.53 to %Attribute.0**
  %14 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.53, i64 0, i32 1
  %15 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.53, i64 0, i32 2
  %tmpv.765.sroa.0.0.cast.2128.sroa_idx = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.757, i64 0, i32 0
  %cast.2004 = bitcast %IPST.4* %tmpv.708 to i8*
  %cast.2063 = bitcast %IPST.4* %tmpv.736 to i8*
  %cast.2136 = bitcast %IPST.4* %tmpv.770 to i8*
  %.field.ld.100117 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.458, align 8, !dbg !1710
  %icmp.527118 = icmp eq %.command-line-arguments.token.0* %.field.ld.100117, null, !dbg !1711
  br i1 %icmp.527118, label %then.397, label %else.397

else.394:                                         ; preds = %else.393
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* %cast.1915, i8* nonnull %cast.1911), !dbg !1701
  br label %fallthrough.394

else.395:                                         ; preds = %else.393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1915, i8* nonnull align 8 %cast.1911, i64 40, i1 false), !dbg !1701
  br label %fallthrough.394

then.396:                                         ; preds = %fallthrough.394
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1710
  unreachable

then.397:                                         ; preds = %label.0.backedge, %else.396.lr.ph
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1711
  unreachable

else.397:                                         ; preds = %else.396.lr.ph, %label.0.backedge
  %.field.ld.100119 = phi %.command-line-arguments.token.0* [ %.field.ld.100, %label.0.backedge ], [ %.field.ld.100117, %else.396.lr.ph ]
  %field.549 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.100119, i64 0, i32 0, !dbg !1711
  %.field.ld.124 = load i32, i32* %field.549, align 4, !dbg !1711
  switch i32 %.field.ld.124, label %label.3 [
    i32 -4, label %case.20
    i32 -7, label %case.21
    i32 -8, label %case.22
    i32 -11, label %case.23
    i32 -10, label %else.451
  ]

case.20:                                          ; preds = %else.397
  %tag.ld.12 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1712
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.12, metadata !1696, metadata !DIExpression()), !dbg !1697
  %call.138 = call i8 @command_line_arguments.Tag.IsRawText(i8* nest undef, %Tag.0* %tag.ld.12), !dbg !1714
  %16 = and i8 %call.138, 1, !dbg !1715
  %trunc.401 = icmp eq i8 %16, 0, !dbg !1715
  br i1 %trunc.401, label %fallthrough.398, label %else.399

case.21:                                          ; preds = %else.397
  %call.140 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* nonnull %p, i32 -7), !dbg !1716
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.140, metadata !1718, metadata !DIExpression()), !dbg !1719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1953, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false)
  %icmp.466 = icmp eq %.command-line-arguments.token.0* %call.140, null, !dbg !1720
  br i1 %icmp.466, label %then.410, label %else.410

case.22:                                          ; preds = %else.397
  %call.143 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* nonnull %p, i32 -8), !dbg !1721
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.143, metadata !1723, metadata !DIExpression()), !dbg !1724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2012, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false)
  %icmp.484 = icmp eq %.command-line-arguments.token.0* %call.143, null, !dbg !1725
  br i1 %icmp.484, label %then.423, label %else.423

case.23:                                          ; preds = %else.397
  %call.146 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* nonnull %p, i32 -11), !dbg !1726
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.146, metadata !1728, metadata !DIExpression()), !dbg !1729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2071, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false)
  %icmp.502 = icmp eq %.command-line-arguments.token.0* %call.146, null, !dbg !1730
  br i1 %icmp.502, label %then.436, label %else.436

fallthrough.398:                                  ; preds = %case.20, %else.400
  %17 = bitcast %Tag.0** %tag to i64*, !dbg !1731
  %tag.ld.13102103 = load i64, i64* %17, align 8, !dbg !1731
  call void @llvm.dbg.value(metadata %Tag.0** %tag, metadata !1696, metadata !DIExpression(DW_OP_deref)), !dbg !1697
  %call.139 = call %Block.0* @command_line_arguments.Parser.parseBlock(i8* nest undef, %Parser.0* nonnull %p, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag to i64), i64 %tag.ld.13102103), !dbg !1732
  call void @llvm.dbg.value(metadata %Block.0* %call.139, metadata !1733, metadata !DIExpression()), !dbg !1734
  %tag.ld.16 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1735
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.16, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.464 = icmp eq %Tag.0* %tag.ld.16, null, !dbg !1736
  br i1 %icmp.464, label %then.401, label %else.401

else.399:                                         ; preds = %case.20
  %field.459 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 0, !dbg !1737
  %.field.ld.101 = load %.command-line-arguments.scanner.0*, %.command-line-arguments.scanner.0** %field.459, align 8, !dbg !1737
  %icmp.455 = icmp eq %.command-line-arguments.scanner.0* %.field.ld.101, null, !dbg !1738
  br i1 %icmp.455, label %then.400, label %else.400

then.400:                                         ; preds = %else.399
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1738
  unreachable

else.400:                                         ; preds = %else.399
  %field.460 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %.field.ld.101, i64 0, i32 10, !dbg !1738
  store i8 1, i8* %field.460, align 1, !dbg !1739
  br label %fallthrough.398

then.401:                                         ; preds = %fallthrough.398
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1736
  unreachable

else.401:                                         ; preds = %fallthrough.398
  %field.469 = getelementptr inbounds %Tag.0, %Tag.0* %tag.ld.16, i64 0, i32 1, !dbg !1736
  %.field.ld.103 = load %Block.0*, %Block.0** %field.469, align 8, !dbg !1736
  %icmp.465 = icmp eq %Block.0* %.field.ld.103, null, !dbg !1740
  br i1 %icmp.465, label %else.403, label %else.402

else.402:                                         ; preds = %else.401
  %icmp.459 = icmp eq %Block.0* %call.139, null, !dbg !1741
  br i1 %icmp.459, label %then.406, label %else.406

else.403:                                         ; preds = %else.401
  %runtime.writeBarrier.ld.62 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1743
  %icmp.458 = icmp eq i32 %runtime.writeBarrier.ld.62, 0, !dbg !1743
  br i1 %icmp.458, label %else.405, label %else.404

else.404:                                         ; preds = %else.403
  %cast.1932 = bitcast %Block.0** %field.469 to i8*, !dbg !1743
  %cast.1933 = bitcast %Block.0* %call.139 to i8*, !dbg !1743
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1932, i8* %cast.1933), !dbg !1743
  br label %label.3

else.405:                                         ; preds = %else.403
  store %Block.0* %call.139, %Block.0** %field.469, align 8, !dbg !1743
  br label %label.3

then.406:                                         ; preds = %else.402
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1741
  unreachable

else.406:                                         ; preds = %else.402
  %tmpv.672.sroa.0.0.cast.1938.sroa_idx = getelementptr inbounds %Block.0, %Block.0* %call.139, i64 0, i32 1, i32 0
  %tmpv.672.sroa.0.0.copyload = load %Node.0*, %Node.0** %tmpv.672.sroa.0.0.cast.1938.sroa_idx, align 8
  %tmpv.672.sroa.2.0.cast.1938.sroa_idx50 = getelementptr inbounds %Block.0, %Block.0* %call.139, i64 0, i32 1, i32 1
  %tmpv.672.sroa.2.0.copyload = load i64, i64* %tmpv.672.sroa.2.0.cast.1938.sroa_idx50, align 8
  %icmp.463108 = icmp sgt i64 %tmpv.672.sroa.2.0.copyload, 0, !dbg !1744
  br i1 %icmp.463108, label %else.408, label %label.3

then.408:                                         ; preds = %else.408.else.407_crit_edge
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1745
  unreachable

else.408:                                         ; preds = %else.406, %else.408.else.407_crit_edge
  %tmpv.674.0109116 = phi i64 [ %add.17, %else.408.else.407_crit_edge ], [ 0, %else.406 ]
  %tag.ld.15115 = phi %Tag.0* [ %tag.ld.15.pre, %else.408.else.407_crit_edge ], [ %tag.ld.16, %else.406 ]
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.15115, metadata !1696, metadata !DIExpression()), !dbg !1697
  %ptroff.23 = getelementptr %Node.0, %Node.0* %tmpv.672.sroa.0.0.copyload, i64 %tmpv.674.0109116, !dbg !1744
  %tmpv.675.sroa.3.0.cast.1944.sroa_idx59 = getelementptr inbounds %Node.0, %Node.0* %tmpv.672.sroa.0.0.copyload, i64 %tmpv.674.0109116, i32 1, !dbg !1744
  %tmpv.675.sroa.3.0.cast.1944.sroa_cast = bitcast i8** %tmpv.675.sroa.3.0.cast.1944.sroa_idx59 to i64*, !dbg !1744
  %tmpv.675.sroa.3.0.copyload60 = load i64, i64* %tmpv.675.sroa.3.0.cast.1944.sroa_cast, align 8, !dbg !1744
  call void @llvm.dbg.value(metadata i64 %tmpv.675.sroa.3.0.copyload60, metadata !1746, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1747
  %tmpv.675.sroa.0.0.cast.1944.sroa_cast = bitcast %Node.0* %ptroff.23 to i64*, !dbg !1744
  %tmpv.675.sroa.0.0.copyload58 = load i64, i64* %tmpv.675.sroa.0.0.cast.1944.sroa_cast, align 8, !dbg !1744
  call void @llvm.dbg.value(metadata i64 %tmpv.675.sroa.0.0.copyload58, metadata !1746, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1747
  %field.468 = getelementptr inbounds %Tag.0, %Tag.0* %tag.ld.15115, i64 0, i32 1, !dbg !1745
  %.field.ld.102 = load %Block.0*, %Block.0** %field.468, align 8, !dbg !1745
  call void @command_line_arguments.Block.push(i8* nest undef, %Block.0* %.field.ld.102, i64 %tmpv.675.sroa.0.0.copyload58, i64 %tmpv.675.sroa.3.0.copyload60), !dbg !1748
  %add.17 = add nuw nsw i64 %tmpv.674.0109116, 1, !dbg !1744
  %icmp.463 = icmp slt i64 %add.17, %tmpv.672.sroa.2.0.copyload, !dbg !1744
  br i1 %icmp.463, label %else.408.else.407_crit_edge, label %label.3

else.408.else.407_crit_edge:                      ; preds = %else.408
  %tag.ld.15.pre = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1749
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.15.pre, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.462 = icmp eq %Tag.0* %tag.ld.15.pre, null, !dbg !1745
  br i1 %icmp.462, label %then.408, label %else.408

label.3:                                          ; preds = %else.451, %else.397, %else.408, %else.406, %else.404, %else.405
  %tag.ld.24 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1750
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.24, metadata !1696, metadata !DIExpression()), !dbg !1697
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.24, metadata !1668, metadata !DIExpression()), !dbg !1669
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0), !dbg !1751
  ret %Tag.0* %tag.ld.24, !dbg !1751

then.410:                                         ; preds = %case.21
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1720
  unreachable

else.410:                                         ; preds = %case.21
  %field.470 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.140, i64 0, i32 2, !dbg !1720
  %.field.ld.104 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.470, align 8, !dbg !1720
  %call.141 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.104, i8* nonnull %cast.1953), !dbg !1752
  %field.473 = getelementptr inbounds i8, i8* %call.141, i64 8, !dbg !1753
  %18 = bitcast i8* %field.473 to i64*, !dbg !1753
  %.field.ld.105 = load i64, i64* %18, align 8, !dbg !1753
  %icmp.467 = icmp sgt i64 %.field.ld.105, 0, !dbg !1754
  br i1 %icmp.467, label %then.411, label %else.411

then.411:                                         ; preds = %else.410
  %call.142 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1755
  %cast.1960 = bitcast { i8*, i64 }* %tmpv.686 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1960, i8* align 8 bitcast ({ i8*, i64 }* @const.359 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.142, i8* nonnull %cast.1960), !dbg !1755
  %19 = ptrtoint i8* %call.142 to i64, !dbg !1755
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %19), !dbg !1755
  unreachable

else.411:                                         ; preds = %else.410
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.687, i8* nest undef, %Parser.0* nonnull %p), !dbg !1756
  %tag.ld.17 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1757
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.17, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.468 = icmp eq %Tag.0* %tag.ld.17, null, !dbg !1758
  br i1 %icmp.468, label %then.412, label %else.414

then.412:                                         ; preds = %else.411
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1758
  unreachable

else.414:                                         ; preds = %else.411
  %field.474 = getelementptr inbounds %Tag.0, %Tag.0* %tag.ld.17, i64 0, i32 4, !dbg !1758
  %field.475 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.140, i64 0, i32 1, !dbg !1759
  %cast.1973 = bitcast { i8*, i64 }* %field.475 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1972, i8* nonnull align 8 %cast.1973, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.17, metadata !1696, metadata !DIExpression()), !dbg !1697
  %cast.1978 = bitcast %IPST.4* %field.474 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1977, i8* nonnull align 8 %cast.1978, i64 24, i1 false)
  %tmpv.695.field.ld.0 = load i64, i64* %field.477, align 8, !dbg !1760
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1979, i8* nonnull align 8 %cast.1966, i64 40, i1 false), !dbg !1761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1981, i8* align 8 bitcast ({ i8*, i64 }* @const.333 to i8*), i64 16, i1 false), !dbg !1761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1983, i8* nonnull align 8 %cast.1972, i64 16, i1 false), !dbg !1761
  store i8 1, i8* %field.481, align 8, !dbg !1761
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1985, i8 0, i64 16, i1 false), !dbg !1761
  %add.18 = add i64 %tmpv.695.field.ld.0, 1, !dbg !1760
  %tmpv.695.field.ld.1 = load i64, i64* %field.483, align 8, !dbg !1760
  %icmp.471 = icmp ugt i64 %add.18, %tmpv.695.field.ld.1, !dbg !1760
  br i1 %icmp.471, label %then.415, label %else.415

then.415:                                         ; preds = %else.414
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.49, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.1988, i64 %add.18), !dbg !1760
  %tmpv.703.sroa.0.0.copyload = load %Attribute.0*, %Attribute.0** %tmpv.703.sroa.0.0.cast.1993.sroa_idx, align 8
  %tmpv.703.sroa.3.0.copyload = load i64, i64* %10, align 8
  %tmpv.703.sroa.4.0.copyload = load i64, i64* %11, align 8
  br label %fallthrough.415

fallthrough.415:                                  ; preds = %else.416, %then.415
  %tmpv.703.sroa.0.0 = phi %Attribute.0* [ %tmpv.703.sroa.0.0.copyload, %then.415 ], [ %tmpv.695.field.ld.3, %else.416 ]
  %tmpv.703.sroa.3.0 = phi i64 [ %tmpv.703.sroa.3.0.copyload, %then.415 ], [ %add.18, %else.416 ]
  %tmpv.703.sroa.4.0 = phi i64 [ %tmpv.703.sroa.4.0.copyload, %then.415 ], [ %tmpv.695.field.ld.1, %else.416 ]
  store %Attribute.0* %tmpv.703.sroa.0.0, %Attribute.0** %tmpv.703.sroa.0.0.cast.1996.sroa_idx, align 8, !dbg !1760
  store i64 %tmpv.703.sroa.3.0, i64* %field.477, align 8, !dbg !1760
  store i64 %tmpv.703.sroa.4.0, i64* %field.483, align 8, !dbg !1760
  %icmp.478 = icmp sge i64 %tmpv.695.field.ld.0, %tmpv.703.sroa.3.0, !dbg !1760
  %20 = icmp slt i64 %tmpv.695.field.ld.0, 0, !dbg !1760
  %ior.179 = or i1 %20, %icmp.478, !dbg !1760
  br i1 %ior.179, label %then.418, label %else.418

else.415:                                         ; preds = %else.414
  %icmp.473 = icmp sgt i64 %add.18, %tmpv.695.field.ld.1, !dbg !1760
  %add.18.lobit106 = or i64 %tmpv.695.field.ld.1, %add.18, !dbg !1760
  %21 = icmp slt i64 %add.18.lobit106, 0, !dbg !1760
  %22 = or i1 %icmp.473, %21, !dbg !1760
  br i1 %22, label %then.416, label %else.416

then.416:                                         ; preds = %else.415
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1760
  unreachable

else.416:                                         ; preds = %else.415
  %tmpv.695.field.ld.3 = load %Attribute.0*, %Attribute.0** %tmpv.703.sroa.0.0.cast.1996.sroa_idx, align 8, !dbg !1760
  br label %fallthrough.415

then.418:                                         ; preds = %fallthrough.415
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1760
  unreachable

else.418:                                         ; preds = %fallthrough.415
  %ptroff.25 = getelementptr %Attribute.0, %Attribute.0* %tmpv.703.sroa.0.0, i64 %tmpv.695.field.ld.0, !dbg !1760
  %runtime.writeBarrier.ld.63 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1760
  %icmp.481 = icmp eq i32 %runtime.writeBarrier.ld.63, 0, !dbg !1760
  br i1 %icmp.481, label %then.419, label %else.419

then.419:                                         ; preds = %else.418
  %icmp.480 = icmp eq %Attribute.0* %ptroff.25, null, !dbg !1760
  br i1 %icmp.480, label %then.420, label %else.420

fallthrough.419:                                  ; preds = %else.419, %else.420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2004, i8* nonnull align 8 %cast.1977, i64 24, i1 false)
  %runtime.writeBarrier.ld.64 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1762
  %icmp.483 = icmp eq i32 %runtime.writeBarrier.ld.64, 0, !dbg !1762
  br i1 %icmp.483, label %else.422, label %else.421

else.419:                                         ; preds = %else.418
  %cast.2002 = bitcast %Attribute.0* %ptroff.25 to i8*, !dbg !1760
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), i8* %cast.2002, i8* nonnull %cast.1979), !dbg !1760
  br label %fallthrough.419

then.420:                                         ; preds = %then.419
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1760
  unreachable

else.420:                                         ; preds = %then.419
  %cast.1999 = bitcast %Attribute.0* %ptroff.25 to i8*, !dbg !1760
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1999, i8* nonnull align 8 %cast.1979, i64 96, i1 false), !dbg !1760
  br label %fallthrough.419

label.0.backedge:                                 ; preds = %else.450, %else.449, %else.435, %else.434, %else.422, %else.421, %else.454
  %.field.ld.100 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %field.458, align 8, !dbg !1710
  %icmp.527 = icmp eq %.command-line-arguments.token.0* %.field.ld.100, null, !dbg !1711
  br i1 %icmp.527, label %then.397, label %else.397

else.421:                                         ; preds = %fallthrough.419
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i64 0, i32 0), i8* nonnull %cast.1978, i8* nonnull %cast.2004), !dbg !1762
  br label %label.0.backedge

else.422:                                         ; preds = %fallthrough.419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1978, i8* nonnull align 8 %cast.2004, i64 24, i1 false), !dbg !1762
  br label %label.0.backedge

then.423:                                         ; preds = %case.22
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1725
  unreachable

else.423:                                         ; preds = %case.22
  %field.494 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.143, i64 0, i32 2, !dbg !1725
  %.field.ld.109 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.494, align 8, !dbg !1725
  %call.144 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.109, i8* nonnull %cast.2012), !dbg !1763
  %field.497 = getelementptr inbounds i8, i8* %call.144, i64 8, !dbg !1764
  %23 = bitcast i8* %field.497 to i64*, !dbg !1764
  %.field.ld.110 = load i64, i64* %23, align 8, !dbg !1764
  %icmp.485 = icmp sgt i64 %.field.ld.110, 0, !dbg !1765
  br i1 %icmp.485, label %then.424, label %else.424

then.424:                                         ; preds = %else.423
  %call.145 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1766
  %cast.2019 = bitcast { i8*, i64 }* %tmpv.714 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2019, i8* align 8 bitcast ({ i8*, i64 }* @const.359 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.145, i8* nonnull %cast.2019), !dbg !1766
  %24 = ptrtoint i8* %call.145 to i64, !dbg !1766
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %24), !dbg !1766
  unreachable

else.424:                                         ; preds = %else.423
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.715, i8* nest undef, %Parser.0* nonnull %p), !dbg !1767
  %tag.ld.19 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1768
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.19, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.486 = icmp eq %Tag.0* %tag.ld.19, null, !dbg !1769
  br i1 %icmp.486, label %then.425, label %else.427

then.425:                                         ; preds = %else.424
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1769
  unreachable

else.427:                                         ; preds = %else.424
  %field.498 = getelementptr inbounds %Tag.0, %Tag.0* %tag.ld.19, i64 0, i32 4, !dbg !1769
  %field.499 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.143, i64 0, i32 1, !dbg !1770
  %cast.2032 = bitcast { i8*, i64 }* %field.499 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2031, i8* nonnull align 8 %cast.2032, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.19, metadata !1696, metadata !DIExpression()), !dbg !1697
  %cast.2037 = bitcast %IPST.4* %field.498 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2036, i8* nonnull align 8 %cast.2037, i64 24, i1 false)
  %tmpv.723.field.ld.0 = load i64, i64* %field.501, align 8, !dbg !1771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2038, i8* nonnull align 8 %cast.2025, i64 40, i1 false), !dbg !1772
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2040, i8* align 8 bitcast ({ i8*, i64 }* @const.335 to i8*), i64 16, i1 false), !dbg !1772
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2042, i8* nonnull align 8 %cast.2031, i64 16, i1 false), !dbg !1772
  store i8 1, i8* %field.505, align 8, !dbg !1772
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2044, i8 0, i64 16, i1 false), !dbg !1772
  %add.20 = add i64 %tmpv.723.field.ld.0, 1, !dbg !1771
  %tmpv.723.field.ld.1 = load i64, i64* %field.507, align 8, !dbg !1771
  %icmp.489 = icmp ugt i64 %add.20, %tmpv.723.field.ld.1, !dbg !1771
  br i1 %icmp.489, label %then.428, label %else.428

then.428:                                         ; preds = %else.427
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.51, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.2047, i64 %add.20), !dbg !1771
  %tmpv.731.sroa.0.0.copyload = load %Attribute.0*, %Attribute.0** %tmpv.731.sroa.0.0.cast.2052.sroa_idx, align 8
  %tmpv.731.sroa.3.0.copyload = load i64, i64* %12, align 8
  %tmpv.731.sroa.4.0.copyload = load i64, i64* %13, align 8
  br label %fallthrough.428

fallthrough.428:                                  ; preds = %else.429, %then.428
  %tmpv.731.sroa.0.0 = phi %Attribute.0* [ %tmpv.731.sroa.0.0.copyload, %then.428 ], [ %tmpv.723.field.ld.3, %else.429 ]
  %tmpv.731.sroa.3.0 = phi i64 [ %tmpv.731.sroa.3.0.copyload, %then.428 ], [ %add.20, %else.429 ]
  %tmpv.731.sroa.4.0 = phi i64 [ %tmpv.731.sroa.4.0.copyload, %then.428 ], [ %tmpv.723.field.ld.1, %else.429 ]
  store %Attribute.0* %tmpv.731.sroa.0.0, %Attribute.0** %tmpv.731.sroa.0.0.cast.2055.sroa_idx, align 8, !dbg !1771
  store i64 %tmpv.731.sroa.3.0, i64* %field.501, align 8, !dbg !1771
  store i64 %tmpv.731.sroa.4.0, i64* %field.507, align 8, !dbg !1771
  %icmp.496 = icmp sge i64 %tmpv.723.field.ld.0, %tmpv.731.sroa.3.0, !dbg !1771
  %25 = icmp slt i64 %tmpv.723.field.ld.0, 0, !dbg !1771
  %ior.187 = or i1 %25, %icmp.496, !dbg !1771
  br i1 %ior.187, label %then.431, label %else.431

else.428:                                         ; preds = %else.427
  %icmp.491 = icmp sgt i64 %add.20, %tmpv.723.field.ld.1, !dbg !1771
  %add.20.lobit105 = or i64 %tmpv.723.field.ld.1, %add.20, !dbg !1771
  %26 = icmp slt i64 %add.20.lobit105, 0, !dbg !1771
  %27 = or i1 %icmp.491, %26, !dbg !1771
  br i1 %27, label %then.429, label %else.429

then.429:                                         ; preds = %else.428
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1771
  unreachable

else.429:                                         ; preds = %else.428
  %tmpv.723.field.ld.3 = load %Attribute.0*, %Attribute.0** %tmpv.731.sroa.0.0.cast.2055.sroa_idx, align 8, !dbg !1771
  br label %fallthrough.428

then.431:                                         ; preds = %fallthrough.428
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1771
  unreachable

else.431:                                         ; preds = %fallthrough.428
  %ptroff.27 = getelementptr %Attribute.0, %Attribute.0* %tmpv.731.sroa.0.0, i64 %tmpv.723.field.ld.0, !dbg !1771
  %runtime.writeBarrier.ld.65 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1771
  %icmp.499 = icmp eq i32 %runtime.writeBarrier.ld.65, 0, !dbg !1771
  br i1 %icmp.499, label %then.432, label %else.432

then.432:                                         ; preds = %else.431
  %icmp.498 = icmp eq %Attribute.0* %ptroff.27, null, !dbg !1771
  br i1 %icmp.498, label %then.433, label %else.433

fallthrough.432:                                  ; preds = %else.432, %else.433
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2063, i8* nonnull align 8 %cast.2036, i64 24, i1 false)
  %runtime.writeBarrier.ld.66 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1773
  %icmp.501 = icmp eq i32 %runtime.writeBarrier.ld.66, 0, !dbg !1773
  br i1 %icmp.501, label %else.435, label %else.434

else.432:                                         ; preds = %else.431
  %cast.2061 = bitcast %Attribute.0* %ptroff.27 to i8*, !dbg !1771
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), i8* %cast.2061, i8* nonnull %cast.2038), !dbg !1771
  br label %fallthrough.432

then.433:                                         ; preds = %then.432
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1771
  unreachable

else.433:                                         ; preds = %then.432
  %cast.2058 = bitcast %Attribute.0* %ptroff.27 to i8*, !dbg !1771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2058, i8* nonnull align 8 %cast.2038, i64 96, i1 false), !dbg !1771
  br label %fallthrough.432

else.434:                                         ; preds = %fallthrough.432
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i64 0, i32 0), i8* nonnull %cast.2037, i8* nonnull %cast.2063), !dbg !1773
  br label %label.0.backedge

else.435:                                         ; preds = %fallthrough.432
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2037, i8* nonnull align 8 %cast.2063, i64 24, i1 false), !dbg !1773
  br label %label.0.backedge

then.436:                                         ; preds = %case.23
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1730
  unreachable

else.436:                                         ; preds = %case.23
  %field.518 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.146, i64 0, i32 2, !dbg !1730
  %.field.ld.114 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.518, align 8, !dbg !1730
  %call.147 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.114, i8* nonnull %cast.2071), !dbg !1774
  %field.521 = getelementptr inbounds i8, i8* %call.147, i64 8, !dbg !1775
  %28 = bitcast i8* %field.521 to i64*, !dbg !1775
  %.field.ld.115 = load i64, i64* %28, align 8, !dbg !1775
  %icmp.503 = icmp sgt i64 %.field.ld.115, 0, !dbg !1776
  br i1 %icmp.503, label %then.437, label %else.437

then.437:                                         ; preds = %else.436
  %call.148 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1777
  %cast.2078 = bitcast { i8*, i64 }* %tmpv.742 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2078, i8* align 8 bitcast ({ i8*, i64 }* @const.359 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.148, i8* nonnull %cast.2078), !dbg !1777
  %29 = ptrtoint i8* %call.148 to i64, !dbg !1777
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %29), !dbg !1777
  unreachable

else.437:                                         ; preds = %else.436
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.743, i8* nest undef, %Parser.0* nonnull %p), !dbg !1778
  %tag.ld.21 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1779
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.21, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.504 = icmp eq %Tag.0* %tag.ld.21, null, !dbg !1780
  br i1 %icmp.504, label %then.438, label %else.438

then.438:                                         ; preds = %else.437
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1780
  unreachable

else.438:                                         ; preds = %else.437
  %field.522 = getelementptr inbounds %Tag.0, %Tag.0* %tag.ld.21, i64 0, i32 4, !dbg !1780
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2087, i8* align 8 bitcast ({ i8*, i64 }* @const.337 to i8*), i64 16, i1 false)
  %.field.ld.116 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.518, align 8, !dbg !1781
  %call.149 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.116, i8* nonnull %cast.2087), !dbg !1782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2093, i8* align 8 bitcast ({ i8*, i64 }* @const.339 to i8*), i64 16, i1 false)
  %.field.ld.117 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.518, align 8, !dbg !1783
  %call.150 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.117, i8* nonnull %cast.2093), !dbg !1784
  %field.525 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.146, i64 0, i32 1, !dbg !1785
  %cast.2101 = bitcast { i8*, i64 }* %field.525 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2100, i8* nonnull align 8 %cast.2101, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2102, i8* align 8 %call.149, i64 16, i1 false)
  %field0.109 = bitcast i8* %call.150 to i64*, !dbg !1786
  %ld.185 = load i64, i64* %field0.109, align 8, !dbg !1786
  %field1.109 = getelementptr inbounds i8, i8* %call.150, i64 8, !dbg !1786
  %30 = bitcast i8* %field1.109 to i64*, !dbg !1786
  %ld.186 = load i64, i64* %30, align 8, !dbg !1786
  %call.151 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.185, i64 %ld.186, i64 ptrtoint ([4 x i8]* @const.340 to i64), i64 3), !dbg !1786
  %tag.ld.22 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1787
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.22, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.509 = icmp eq %Tag.0* %tag.ld.22, null, !dbg !1788
  br i1 %icmp.509, label %then.442, label %else.442

then.442:                                         ; preds = %else.438
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1788
  unreachable

else.442:                                         ; preds = %else.438
  %icmp.508 = icmp eq i8 %call.151, 1, !dbg !1786
  %zext.509 = zext i1 %icmp.508 to i8, !dbg !1786
  %field.526 = getelementptr inbounds %Tag.0, %Tag.0* %tag.ld.22, i64 0, i32 4, !dbg !1788
  %cast.2110 = bitcast %IPST.4* %field.526 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2109, i8* nonnull align 8 %cast.2110, i64 24, i1 false)
  %tmpv.757.field.ld.0 = load i64, i64* %field.527, align 8, !dbg !1789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2111, i8* nonnull align 8 %cast.2084, i64 40, i1 false), !dbg !1790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2113, i8* nonnull align 8 %cast.2100, i64 16, i1 false), !dbg !1790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2115, i8* nonnull align 8 %cast.2102, i64 16, i1 false), !dbg !1790
  store i8 %zext.509, i8* %field.531, align 8, !dbg !1790
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2117, i8 0, i64 16, i1 false), !dbg !1790
  %add.22 = add i64 %tmpv.757.field.ld.0, 1, !dbg !1789
  %tmpv.757.field.ld.1 = load i64, i64* %field.533, align 8, !dbg !1789
  %icmp.510 = icmp ugt i64 %add.22, %tmpv.757.field.ld.1, !dbg !1789
  br i1 %icmp.510, label %then.443, label %else.443

then.443:                                         ; preds = %else.442
  call void @runtime.growslice(%IPST.2* nonnull sret %sret.actual.53, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), %IPST.2* byval nonnull %cast.2120, i64 %add.22), !dbg !1789
  %tmpv.765.sroa.0.0.copyload = load %Attribute.0*, %Attribute.0** %tmpv.765.sroa.0.0.cast.2125.sroa_idx, align 8
  %tmpv.765.sroa.3.0.copyload = load i64, i64* %14, align 8
  %tmpv.765.sroa.4.0.copyload = load i64, i64* %15, align 8
  br label %fallthrough.443

fallthrough.443:                                  ; preds = %else.444, %then.443
  %tmpv.765.sroa.0.0 = phi %Attribute.0* [ %tmpv.765.sroa.0.0.copyload, %then.443 ], [ %tmpv.757.field.ld.3, %else.444 ]
  %tmpv.765.sroa.3.0 = phi i64 [ %tmpv.765.sroa.3.0.copyload, %then.443 ], [ %add.22, %else.444 ]
  %tmpv.765.sroa.4.0 = phi i64 [ %tmpv.765.sroa.4.0.copyload, %then.443 ], [ %tmpv.757.field.ld.1, %else.444 ]
  store %Attribute.0* %tmpv.765.sroa.0.0, %Attribute.0** %tmpv.765.sroa.0.0.cast.2128.sroa_idx, align 8, !dbg !1789
  store i64 %tmpv.765.sroa.3.0, i64* %field.527, align 8, !dbg !1789
  store i64 %tmpv.765.sroa.4.0, i64* %field.533, align 8, !dbg !1789
  %icmp.517 = icmp sge i64 %tmpv.757.field.ld.0, %tmpv.765.sroa.3.0, !dbg !1789
  %31 = icmp slt i64 %tmpv.757.field.ld.0, 0, !dbg !1789
  %ior.195 = or i1 %31, %icmp.517, !dbg !1789
  br i1 %ior.195, label %then.446, label %else.446

else.443:                                         ; preds = %else.442
  %icmp.512 = icmp sgt i64 %add.22, %tmpv.757.field.ld.1, !dbg !1789
  %add.22.lobit104 = or i64 %tmpv.757.field.ld.1, %add.22, !dbg !1789
  %32 = icmp slt i64 %add.22.lobit104, 0, !dbg !1789
  %33 = or i1 %icmp.512, %32, !dbg !1789
  br i1 %33, label %then.444, label %else.444

then.444:                                         ; preds = %else.443
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1789
  unreachable

else.444:                                         ; preds = %else.443
  %tmpv.757.field.ld.3 = load %Attribute.0*, %Attribute.0** %tmpv.765.sroa.0.0.cast.2128.sroa_idx, align 8, !dbg !1789
  br label %fallthrough.443

then.446:                                         ; preds = %fallthrough.443
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1789
  unreachable

else.446:                                         ; preds = %fallthrough.443
  %ptroff.29 = getelementptr %Attribute.0, %Attribute.0* %tmpv.765.sroa.0.0, i64 %tmpv.757.field.ld.0, !dbg !1789
  %runtime.writeBarrier.ld.67 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1789
  %icmp.520 = icmp eq i32 %runtime.writeBarrier.ld.67, 0, !dbg !1789
  br i1 %icmp.520, label %then.447, label %else.447

then.447:                                         ; preds = %else.446
  %icmp.519 = icmp eq %Attribute.0* %ptroff.29, null, !dbg !1789
  br i1 %icmp.519, label %then.448, label %else.448

fallthrough.447:                                  ; preds = %else.447, %else.448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2136, i8* nonnull align 8 %cast.2109, i64 24, i1 false)
  %runtime.writeBarrier.ld.68 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1791
  %icmp.522 = icmp eq i32 %runtime.writeBarrier.ld.68, 0, !dbg !1791
  %cast.2139 = bitcast %IPST.4* %field.522 to i8*, !dbg !1791
  br i1 %icmp.522, label %else.450, label %else.449

else.447:                                         ; preds = %else.446
  %cast.2134 = bitcast %Attribute.0* %ptroff.29 to i8*, !dbg !1789
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Attribute..d, i64 0, i32 0), i8* %cast.2134, i8* nonnull %cast.2111), !dbg !1789
  br label %fallthrough.447

then.448:                                         ; preds = %then.447
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1789
  unreachable

else.448:                                         ; preds = %then.447
  %cast.2131 = bitcast %Attribute.0* %ptroff.29 to i8*, !dbg !1789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2131, i8* nonnull align 8 %cast.2111, i64 96, i1 false), !dbg !1789
  br label %fallthrough.447

else.449:                                         ; preds = %fallthrough.447
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Attribute, i64 0, i32 0), i8* nonnull %cast.2139, i8* nonnull %cast.2136), !dbg !1791
  br label %label.0.backedge

else.450:                                         ; preds = %fallthrough.447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2139, i8* nonnull align 8 %cast.2136, i64 24, i1 false), !dbg !1791
  br label %label.0.backedge

else.451:                                         ; preds = %else.397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2145, i8* align 8 bitcast ({ i8*, i64 }* @const.339 to i8*), i64 16, i1 false)
  %field.545 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %.field.ld.100119, i64 0, i32 2, !dbg !1792
  %.field.ld.122 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.545, align 8, !dbg !1792
  %call.152 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.122, i8* nonnull %cast.2145), !dbg !1793
  %field0.112 = bitcast i8* %call.152 to i64*, !dbg !1794
  %ld.191 = load i64, i64* %field0.112, align 8, !dbg !1794
  %field1.112 = getelementptr inbounds i8, i8* %call.152, i64 8, !dbg !1794
  %34 = bitcast i8* %field1.112 to i64*, !dbg !1794
  %ld.192 = load i64, i64* %34, align 8, !dbg !1794
  %call.154 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.191, i64 %ld.192, i64 ptrtoint ([6 x i8]* @const.360 to i64), i64 5), !dbg !1794
  %icmp.526 = icmp eq i8 %call.154, 1, !dbg !1794
  br i1 %icmp.526, label %label.3, label %then.453

then.453:                                         ; preds = %else.451
  %deref.ld.098 = load void (i8*)*, void (i8*)** %9, align 8, !dbg !1795
  call void %deref.ld.098(i8* nest nonnull %cast.1921), !dbg !1795
  %call.153 = call %Text.0* @command_line_arguments.Parser.parseText(i8* nest undef, %Parser.0* nonnull %p), !dbg !1796
  %tag.ld.23 = load %Tag.0*, %Tag.0** %tag, align 8, !dbg !1797
  call void @llvm.dbg.value(metadata %Tag.0* %tag.ld.23, metadata !1696, metadata !DIExpression()), !dbg !1697
  %icmp.525 = icmp eq %Tag.0* %tag.ld.23, null, !dbg !1798
  br i1 %icmp.525, label %then.454, label %else.454

then.454:                                         ; preds = %then.453
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1798
  unreachable

else.454:                                         ; preds = %then.453
  %field.546 = getelementptr inbounds %Tag.0, %Tag.0* %tag.ld.23, i64 0, i32 1, !dbg !1798
  %.field.ld.123 = load %Block.0*, %Block.0** %field.546, align 8, !dbg !1798
  %35 = ptrtoint %Text.0* %call.153 to i64, !dbg !1796
  call void @command_line_arguments.Block.pushFront(i8* nest undef, %Block.0* %.field.ld.123, i64 ptrtoint ({ %_type.0*, void (%SourcePosition.0*, i8*, %SourcePosition.0*)* }* @pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text to i64), i64 %35), !dbg !1799
  br label %label.0.backedge
}

define %Text.0* @command_line_arguments.Parser.parseText(i8* nest nocapture readnone %nest.41, %Parser.0* %p) #0 !dbg !1800 {
entry:
  %value.addr.i = alloca { i8*, i64 }, align 8
  %tmpv.639 = alloca { i8*, i64 }, align 8
  %tmpv.643 = alloca %SourcePosition.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1803, metadata !DIExpression()), !dbg !1804
  call void @llvm.dbg.value(metadata %Text.0* null, metadata !1805, metadata !DIExpression()), !dbg !1806
  %call.129 = call %.command-line-arguments.token.0* @command_line_arguments.Parser.expect(i8* nest undef, %Parser.0* %p, i32 -10), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.129, metadata !1809, metadata !DIExpression()), !dbg !1810
  %cast.1872 = bitcast { i8*, i64 }* %tmpv.639 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1872, i8* align 8 bitcast ({ i8*, i64 }* @const.339 to i8*), i64 16, i1 false)
  %icmp.438 = icmp eq %.command-line-arguments.token.0* %call.129, null, !dbg !1811
  br i1 %icmp.438, label %then.382, label %else.382

then.382:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1811
  unreachable

else.382:                                         ; preds = %entry
  %field.448 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.129, i64 0, i32 2, !dbg !1811
  %.field.ld.98 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.448, align 8, !dbg !1811
  %call.130 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.98, i8* nonnull %cast.1872), !dbg !1812
  %field.449 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.129, i64 0, i32 1, !dbg !1813
  %field0.98 = bitcast i8* %call.130 to i64*, !dbg !1814
  %ld.163 = load i64, i64* %field0.98, align 8, !dbg !1814
  %field1.98 = getelementptr inbounds i8, i8* %call.130, i64 8, !dbg !1814
  %0 = bitcast i8* %field1.98 to i64*, !dbg !1814
  %ld.164 = load i64, i64* %0, align 8, !dbg !1814
  %call.131 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.163, i64 %ld.164, i64 ptrtoint ([4 x i8]* @const.340 to i64), i64 3), !dbg !1814
  %icmp.440 = icmp eq i8 %call.131, 1, !dbg !1814
  %zext.440 = zext i1 %icmp.440 to i8, !dbg !1814
  %field0.100 = bitcast { i8*, i64 }* %field.449 to i64*, !dbg !1815
  %ld.167 = load i64, i64* %field0.100, align 8, !dbg !1815
  %1 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.129, i64 0, i32 1, i32 1, !dbg !1815
  %ld.168 = load i64, i64* %1, align 8, !dbg !1815
  %2 = bitcast { i8*, i64 }* %value.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %field0.2.i = bitcast { i8*, i64 }* %value.addr.i to i64*
  store i64 %ld.167, i64* %field0.2.i, align 8
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %value.addr.i, i64 0, i32 1
  store i64 %ld.168, i64* %3, align 8
  call void @llvm.dbg.value(metadata i8 %zext.440, metadata !1816, metadata !DIExpression()), !dbg !1820
  call void @llvm.dbg.value(metadata %Text.0* null, metadata !1822, metadata !DIExpression()), !dbg !1823
  %call.5.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Text..d, i64 0, i32 0)), !dbg !1824
  %cast.207.i = bitcast i8* %call.5.i to %Text.0*, !dbg !1824
  call void @llvm.dbg.value(metadata %Text.0* %cast.207.i, metadata !1826, metadata !DIExpression()), !dbg !1827
  %icmp.16.i = icmp eq i8* %call.5.i, null, !dbg !1828
  br i1 %icmp.16.i, label %then.14.i, label %else.14.i

then.14.i:                                        ; preds = %else.382
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1828
  unreachable

else.14.i:                                        ; preds = %else.382
  %field.7.i = getelementptr inbounds i8, i8* %call.5.i, i64 40, !dbg !1828
  %runtime.writeBarrier.ld.4.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1829
  %icmp.18.i = icmp eq i32 %runtime.writeBarrier.ld.4.i, 0, !dbg !1829
  br i1 %icmp.18.i, label %else.16.i, label %else.15.i

else.15.i:                                        ; preds = %else.14.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.7.i, i8* nonnull %2), !dbg !1829
  br label %command_line_arguments.newText.exit

else.16.i:                                        ; preds = %else.14.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.7.i, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1829
  br label %command_line_arguments.newText.exit

command_line_arguments.newText.exit:              ; preds = %else.15.i, %else.16.i
  %4 = getelementptr inbounds i8, i8* %call.5.i, i64 56, !dbg !1830
  store i8 %zext.440, i8* %4, align 1, !dbg !1831
  call void @llvm.dbg.value(metadata %Text.0* %cast.207.i, metadata !1822, metadata !DIExpression()), !dbg !1823
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1832
  call void @llvm.dbg.value(metadata %Text.0* %cast.207.i, metadata !1833, metadata !DIExpression()), !dbg !1834
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %tmpv.643, i8* nest undef, %Parser.0* %p), !dbg !1835
  %cast.1882 = bitcast %SourcePosition.0* %tmpv.643 to i8*
  %runtime.writeBarrier.ld.59 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1836
  %icmp.443 = icmp eq i32 %runtime.writeBarrier.ld.59, 0, !dbg !1836
  br i1 %icmp.443, label %else.386, label %else.385

fallthrough.385:                                  ; preds = %else.385, %else.386
  call void @llvm.dbg.value(metadata %Text.0* %cast.207.i, metadata !1805, metadata !DIExpression()), !dbg !1806
  ret %Text.0* %cast.207.i, !dbg !1837

else.385:                                         ; preds = %command_line_arguments.newText.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.SourcePosition..d, i64 0, i32 0), i8* nonnull %call.5.i, i8* nonnull %cast.1882), !dbg !1836
  br label %fallthrough.385

else.386:                                         ; preds = %command_line_arguments.newText.exit
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.5.i, i8* nonnull align 8 %cast.1882, i64 40, i1 false), !dbg !1836
  br label %fallthrough.385
}

define void @command_line_arguments.Parser.pos(%SourcePosition.0* nocapture sret %sret.formal.5, i8* nest nocapture readnone %nest.28, %Parser.0* readonly %p) #0 !dbg !1838 {
entry:
  %pos = alloca %SourcePosition.0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* %p, metadata !1841, metadata !DIExpression()), !dbg !1842
  %pos.0.sroa_cast = bitcast %SourcePosition.0* %pos to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %pos.0.sroa_cast)
  %icmp.238 = icmp eq %Parser.0* %p, null, !dbg !1843
  br i1 %icmp.238, label %then.202, label %else.202

then.202:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1843
  unreachable

else.202:                                         ; preds = %entry
  %field.227 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 0, !dbg !1843
  %.field.ld.38 = load %.command-line-arguments.scanner.0*, %.command-line-arguments.scanner.0** %field.227, align 8, !dbg !1843
  call void @command_line_arguments.scanner.Pos(%SourcePosition.0* nonnull sret %pos, i8* nest undef, %.command-line-arguments.scanner.0* %.field.ld.38), !dbg !1845
  %field.228 = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %pos, i64 0, i32 3, !dbg !1846
  %field.229 = getelementptr inbounds %Parser.0, %Parser.0* %p, i64 0, i32 1, !dbg !1847
  %cast.1227 = bitcast { i8*, i64 }* %field.228 to i8*, !dbg !1848
  %cast.1228 = bitcast { i8*, i64 }* %field.229 to i8*, !dbg !1848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1227, i8* nonnull align 8 %cast.1228, i64 16, i1 false), !dbg !1848
  %cast.1231 = bitcast %SourcePosition.0* %sret.formal.5 to i8*, !dbg !1849
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1231, i8* nonnull align 8 %pos.0.sroa_cast, i64 40, i1 false), !dbg !1849
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %pos.0.sroa_cast), !dbg !1849
  ret void, !dbg !1849
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.Next(i8* nest nocapture readnone %nest.50, %.command-line-arguments.scanner.0* %s) #0 !dbg !1850 {
entry:
  %tmpv.848 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.850 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !1853, metadata !DIExpression()), !dbg !1854
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !1855, metadata !DIExpression()), !dbg !1856
  %icmp.573 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !1857
  br i1 %icmp.573, label %then.499, label %else.499

then.499:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1857
  unreachable

else.499:                                         ; preds = %entry
  %field.586 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 10, !dbg !1857
  %.field.ld.142 = load i8, i8* %field.586, align 1, !dbg !1857
  %0 = and i8 %.field.ld.142, 1, !dbg !1858
  %trunc.503 = icmp eq i8 %0, 0, !dbg !1858
  br i1 %trunc.503, label %else.500, label %else.501

else.500:                                         ; preds = %else.499
  call void @command_line_arguments.scanner.ensureBuffer(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1859
  %field.587 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 2, !dbg !1860
  %.field.ld.143 = load %List.0*, %List.0** %field.587, align 8, !dbg !1860
  %call.170 = call %Element.0* @container_list.List.Front(i8* nest undef, %List.0* %.field.ld.143), !dbg !1862
  call void @llvm.dbg.value(metadata %Element.0* %call.170, metadata !1863, metadata !DIExpression()), !dbg !1864
  %icmp.577 = icmp eq %Element.0* %call.170, null, !dbg !1865
  br i1 %icmp.577, label %else.506, label %else.504

else.501:                                         ; preds = %else.499
  store i8 0, i8* %field.586, align 1, !dbg !1866
  %call.169 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.NextRaw(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1867
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.169, metadata !1855, metadata !DIExpression()), !dbg !1856
  ret %.command-line-arguments.token.0* %call.169, !dbg !1868

else.504:                                         ; preds = %else.500
  %tmpv.842.sroa.0.0.cast.2264.sroa_idx = getelementptr inbounds %Element.0, %Element.0* %call.170, i64 0, i32 3, i32 0
  %tmpv.842.sroa.0.0.copyload = load %_type.0*, %_type.0** %tmpv.842.sroa.0.0.cast.2264.sroa_idx, align 8
  %tmpv.842.sroa.2.0.cast.2264.sroa_idx51 = getelementptr inbounds %Element.0, %Element.0* %call.170, i64 0, i32 3, i32 1
  %1 = bitcast i8** %tmpv.842.sroa.2.0.cast.2264.sroa_idx51 to %.command-line-arguments.token.0**
  %tmpv.842.sroa.2.0.copyload77 = load %.command-line-arguments.token.0*, %.command-line-arguments.token.0** %1, align 8
  call void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.token, i64 0, i32 0), %_type.0* %tmpv.842.sroa.0.0.copyload, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @type..interface.4.5, i64 0, i32 0)), !dbg !1869
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %tmpv.842.sroa.2.0.copyload77, metadata !1871, metadata !DIExpression()), !dbg !1872
  %.field.ld.144 = load %List.0*, %List.0** %field.587, align 8, !dbg !1873
  %call.171 = call { i64, i64 } @container_list.List.Remove(i8* nest undef, %List.0* %.field.ld.144, %Element.0* nonnull %call.170), !dbg !1874
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %tmpv.842.sroa.2.0.copyload77, metadata !1855, metadata !DIExpression()), !dbg !1856
  ret %.command-line-arguments.token.0* %tmpv.842.sroa.2.0.copyload77, !dbg !1875

else.506:                                         ; preds = %else.500
  %field.595 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 3, !dbg !1876
  %.field.ld.147 = load i32, i32* %field.595, align 4, !dbg !1876
  switch i32 %.field.ld.147, label %label.0 [
    i32 2, label %else.507
    i32 0, label %else.510
    i32 1, label %case.27
  ]

case.27:                                          ; preds = %else.506
  %call.178 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanMixin(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1877
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.178, metadata !1879, metadata !DIExpression()), !dbg !1880
  %icmp.583 = icmp eq %.command-line-arguments.token.0* %call.178, null, !dbg !1881
  br i1 %icmp.583, label %else.512, label %label.0

else.507:                                         ; preds = %else.506
  %field.592 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 1, !dbg !1882
  %.field.ld.145 = load %List.0*, %List.0** %field.592, align 8, !dbg !1882
  %call.172 = call %Element.0* @container_list.List.Back(i8* nest undef, %List.0* %.field.ld.145), !dbg !1884
  call void @llvm.dbg.value(metadata %Element.0* %call.172, metadata !1885, metadata !DIExpression()), !dbg !1886
  %icmp.580 = icmp eq %Element.0* %call.172, null, !dbg !1887
  br i1 %icmp.580, label %else.508, label %else.509

else.508:                                         ; preds = %else.507
  %call.175 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !1888
  %cast.2284 = bitcast i8* %call.175 to %.command-line-arguments.token.0*, !dbg !1888
  %cast.2285 = bitcast %.command-line-arguments.token.0* %tmpv.850 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2285, i8* align 16 bitcast (%.command-line-arguments.token.0* @const.365 to i8*), i64 32, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.175, i8* nonnull %cast.2285), !dbg !1888
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2284, metadata !1855, metadata !DIExpression()), !dbg !1856
  ret %.command-line-arguments.token.0* %cast.2284, !dbg !1889

else.509:                                         ; preds = %else.507
  %.field.ld.146 = load %List.0*, %List.0** %field.592, align 8, !dbg !1890
  %call.173 = call { i64, i64 } @container_list.List.Remove(i8* nest undef, %List.0* %.field.ld.146, %Element.0* nonnull %call.172), !dbg !1891
  %call.174 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !1892
  %cast.2276 = bitcast i8* %call.174 to %.command-line-arguments.token.0*, !dbg !1892
  %cast.2277 = bitcast %.command-line-arguments.token.0* %tmpv.848 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2277, i8* align 16 bitcast (%.command-line-arguments.token.0* @const.364 to i8*), i64 32, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.174, i8* nonnull %cast.2277), !dbg !1892
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2276, metadata !1855, metadata !DIExpression()), !dbg !1856
  ret %.command-line-arguments.token.0* %cast.2276, !dbg !1893

label.0:                                          ; preds = %else.525, %else.524, %else.523, %else.522, %else.521, %else.520, %else.519, %else.518, %else.517, %else.516, %else.515, %else.514, %else.513, %else.512, %case.27, %else.510, %else.506
  %merge = phi %.command-line-arguments.token.0* [ null, %else.506 ], [ %call.176, %else.510 ], [ %call.178, %case.27 ], [ %call.179, %else.512 ], [ %call.180, %else.513 ], [ %call.181, %else.514 ], [ %call.182, %else.515 ], [ %call.183, %else.516 ], [ %call.184, %else.517 ], [ %call.185, %else.518 ], [ %call.186, %else.519 ], [ %call.187, %else.520 ], [ %call.188, %else.521 ], [ %call.189, %else.522 ], [ %call.190, %else.523 ], [ %call.191, %else.524 ], [ %call.192, %else.525 ]
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !1855, metadata !DIExpression()), !dbg !1856
  ret %.command-line-arguments.token.0* %merge, !dbg !1894

else.510:                                         ; preds = %else.506
  store i32 1, i32* %field.595, align 4, !dbg !1895
  %call.176 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanIndent(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1896
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.176, metadata !1898, metadata !DIExpression()), !dbg !1899
  %icmp.582 = icmp eq %.command-line-arguments.token.0* %call.176, null, !dbg !1900
  br i1 %icmp.582, label %else.511, label %label.0

else.511:                                         ; preds = %else.510
  %call.177 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.Next(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1901
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.177, metadata !1855, metadata !DIExpression()), !dbg !1856
  ret %.command-line-arguments.token.0* %call.177, !dbg !1902

else.512:                                         ; preds = %case.27
  %call.179 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanMixinCall(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1903
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.179, metadata !1905, metadata !DIExpression()), !dbg !1906
  %icmp.584 = icmp eq %.command-line-arguments.token.0* %call.179, null, !dbg !1907
  br i1 %icmp.584, label %else.513, label %label.0

else.513:                                         ; preds = %else.512
  %call.180 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanDoctype(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1908
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.180, metadata !1910, metadata !DIExpression()), !dbg !1911
  %icmp.585 = icmp eq %.command-line-arguments.token.0* %call.180, null, !dbg !1912
  br i1 %icmp.585, label %else.514, label %label.0

else.514:                                         ; preds = %else.513
  %call.181 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanCondition(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1913
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.181, metadata !1915, metadata !DIExpression()), !dbg !1916
  %icmp.586 = icmp eq %.command-line-arguments.token.0* %call.181, null, !dbg !1917
  br i1 %icmp.586, label %else.515, label %label.0

else.515:                                         ; preds = %else.514
  %call.182 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanEach(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1918
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.182, metadata !1920, metadata !DIExpression()), !dbg !1921
  %icmp.587 = icmp eq %.command-line-arguments.token.0* %call.182, null, !dbg !1922
  br i1 %icmp.587, label %else.516, label %label.0

else.516:                                         ; preds = %else.515
  %call.183 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanImport(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1923
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.183, metadata !1925, metadata !DIExpression()), !dbg !1926
  %icmp.588 = icmp eq %.command-line-arguments.token.0* %call.183, null, !dbg !1927
  br i1 %icmp.588, label %else.517, label %label.0

else.517:                                         ; preds = %else.516
  %call.184 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanExtends(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1928
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.184, metadata !1930, metadata !DIExpression()), !dbg !1931
  %icmp.589 = icmp eq %.command-line-arguments.token.0* %call.184, null, !dbg !1932
  br i1 %icmp.589, label %else.518, label %label.0

else.518:                                         ; preds = %else.517
  %call.185 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanBlock(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1933
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.185, metadata !1935, metadata !DIExpression()), !dbg !1936
  %icmp.590 = icmp eq %.command-line-arguments.token.0* %call.185, null, !dbg !1937
  br i1 %icmp.590, label %else.519, label %label.0

else.519:                                         ; preds = %else.518
  %call.186 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanAssignment(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1938
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.186, metadata !1940, metadata !DIExpression()), !dbg !1941
  %icmp.591 = icmp eq %.command-line-arguments.token.0* %call.186, null, !dbg !1942
  br i1 %icmp.591, label %else.520, label %label.0

else.520:                                         ; preds = %else.519
  %call.187 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanTag(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1943
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.187, metadata !1945, metadata !DIExpression()), !dbg !1946
  %icmp.592 = icmp eq %.command-line-arguments.token.0* %call.187, null, !dbg !1947
  br i1 %icmp.592, label %else.521, label %label.0

else.521:                                         ; preds = %else.520
  %call.188 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanId(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1948
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.188, metadata !1950, metadata !DIExpression()), !dbg !1951
  %icmp.593 = icmp eq %.command-line-arguments.token.0* %call.188, null, !dbg !1952
  br i1 %icmp.593, label %else.522, label %label.0

else.522:                                         ; preds = %else.521
  %call.189 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanClassName(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1953
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.189, metadata !1955, metadata !DIExpression()), !dbg !1956
  %icmp.594 = icmp eq %.command-line-arguments.token.0* %call.189, null, !dbg !1957
  br i1 %icmp.594, label %else.523, label %label.0

else.523:                                         ; preds = %else.522
  %call.190 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanAttribute(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1958
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.190, metadata !1960, metadata !DIExpression()), !dbg !1961
  %icmp.595 = icmp eq %.command-line-arguments.token.0* %call.190, null, !dbg !1962
  br i1 %icmp.595, label %else.524, label %label.0

else.524:                                         ; preds = %else.523
  %call.191 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanComment(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1963
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.191, metadata !1965, metadata !DIExpression()), !dbg !1966
  %icmp.596 = icmp eq %.command-line-arguments.token.0* %call.191, null, !dbg !1967
  br i1 %icmp.596, label %else.525, label %label.0

else.525:                                         ; preds = %else.524
  %call.192 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanText(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1968
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.192, metadata !1970, metadata !DIExpression()), !dbg !1971
  br label %label.0
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.NextRaw(i8* nest nocapture readnone %nest.51, %.command-line-arguments.scanner.0* %s) #0 !dbg !1972 {
entry:
  %tmp.56 = alloca [2 x { i8*, i64 }], align 8
  %tmp.55 = alloca [2 x { i8*, i64 }], align 8
  %tmp.54 = alloca [2 x { i8*, i64 }], align 8
  %tmp.52 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.854 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.858 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.864 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.875 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.879 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !1973, metadata !DIExpression()), !dbg !1974
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !1975, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.value(metadata i64 0, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 0, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 0, metadata !1980, metadata !DIExpression()), !dbg !1981
  call void @command_line_arguments.scanner.ensureBuffer(i8* nest undef, %.command-line-arguments.scanner.0* %s), !dbg !1982
  %icmp.617 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !1983
  br i1 %icmp.617, label %then.527, label %else.527.lr.ph

else.527.lr.ph:                                   ; preds = %entry
  %field.617 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 3
  %result.sroa.0.0.cast.2368.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.54 to i64*
  %result.sroa.17.0.cast.2368.sroa_idx34 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.54, i64 0, i64 0, i32 1
  %index.23 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.54, i64 0, i64 1
  %cast.2370 = bitcast { i8*, i64 }* %index.23 to i8*
  %result.sroa.0.0.cast.2326.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.52 to i64*
  %result.sroa.17.0.cast.2326.sroa_idx30 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.52, i64 0, i64 0, i32 1
  %index.21 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.52, i64 0, i64 1
  %cast.2328 = bitcast { i8*, i64 }* %index.21 to i8*
  %result.sroa.0.0.cast.2378.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.55 to i64*
  %result.sroa.17.0.cast.2378.sroa_idx36 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.55, i64 0, i64 0, i32 1
  %index.25 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.55, i64 0, i64 1
  %cast.2380 = bitcast { i8*, i64 }* %index.25 to i8*
  %field.614 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4
  %cast.2388 = bitcast { i8*, i64 }* %field.614 to i8*
  %result.sroa.0.0.cast.2389.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.56 to i64*
  %result.sroa.17.0.cast.2389.sroa_idx38 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.56, i64 0, i64 0, i32 1
  %index.27 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.56, i64 0, i64 1
  %cast.2391 = bitcast { i8*, i64 }* %index.27 to i8*
  %field.616 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1
  br label %else.527

then.527:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1983
  unreachable

else.527:                                         ; preds = %label.2, %else.527.lr.ph
  %result.sroa.17.061 = phi i64 [ 0, %else.527.lr.ph ], [ %result.sroa.17.1, %label.2 ]
  %result.sroa.0.060 = phi i64 [ 0, %else.527.lr.ph ], [ %result.sroa.0.1, %label.2 ]
  %level.059 = phi i64 [ 0, %else.527.lr.ph ], [ %level.3, %label.2 ]
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %level.059, metadata !1980, metadata !DIExpression()), !dbg !1981
  %.field.ld.151 = load i32, i32* %field.617, align 4, !dbg !1983
  switch i32 %.field.ld.151, label %label.2 [
    i32 2, label %case.28
    i32 0, label %else.528
    i32 1, label %case.30
  ]

case.28:                                          ; preds = %else.527
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  %cast.2311 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.854 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2311, i8* align 16 bitcast ([1 x { { i8*, i64 }, { i8*, i64 } }]* @const.366 to i8*), i64 32, i1 false)
  %call.193 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2311), !dbg !1984
  %call.194 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !1985
  %cast.2317 = bitcast i8* %call.194 to %.command-line-arguments.token.0*, !dbg !1985
  %field.596 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.858, i64 0, i32 0, !dbg !1986
  store i32 -10, i32* %field.596, align 8, !dbg !1986
  %result.sroa.0.0.cast.2318.sroa_idx = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.858, i64 0, i32 1, !dbg !1986
  %result.sroa.0.0.cast.2318.sroa_cast = bitcast { i8*, i64 }* %result.sroa.0.0.cast.2318.sroa_idx to i64*, !dbg !1986
  store i64 %result.sroa.0.060, i64* %result.sroa.0.0.cast.2318.sroa_cast, align 8, !dbg !1986
  %result.sroa.17.0.cast.2318.sroa_idx29 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.858, i64 0, i32 1, i32 1, !dbg !1986
  store i64 %result.sroa.17.061, i64* %result.sroa.17.0.cast.2318.sroa_idx29, align 8, !dbg !1986
  %field.598 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.858, i64 0, i32 2, !dbg !1986
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.193, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.598, align 8, !dbg !1986
  %cast.2322 = bitcast %.command-line-arguments.token.0* %tmpv.858 to i8*, !dbg !1985
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.194, i8* nonnull %cast.2322), !dbg !1985
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2317, metadata !1975, metadata !DIExpression()), !dbg !1976
  ret %.command-line-arguments.token.0* %cast.2317, !dbg !1987

case.30:                                          ; preds = %else.527
  %icmp.613 = icmp sgt i64 %result.sroa.17.061, 0, !dbg !1988
  br i1 %icmp.613, label %then.540, label %fallthrough.540

else.528:                                         ; preds = %else.527
  store i32 1, i32* %field.617, align 4, !dbg !1989
  %call.195 = call %.command-line-arguments.token.0* @command_line_arguments.scanner.scanIndent(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1990
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %call.195, metadata !1992, metadata !DIExpression()), !dbg !1993
  %icmp.612 = icmp eq %.command-line-arguments.token.0* %call.195, null, !dbg !1994
  br i1 %icmp.612, label %label.2, label %else.530

else.530:                                         ; preds = %else.528
  %field.601 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %call.195, i64 0, i32 0, !dbg !1995
  %.field.ld.149 = load i32, i32* %field.601, align 4, !dbg !1995
  switch i32 %.field.ld.149, label %else.533 [
    i32 -4, label %then.531
    i32 -5, label %fallthrough.531
  ]

then.531:                                         ; preds = %else.530
  br label %fallthrough.531

fallthrough.531:                                  ; preds = %else.530, %then.531
  %.sink = phi i64 [ 1, %then.531 ], [ -1, %else.530 ]
  %sub.42 = add i64 %level.059, %.sink, !dbg !1996
  call void @llvm.dbg.value(metadata i64 %sub.42, metadata !1980, metadata !DIExpression()), !dbg !1981
  %icmp.611 = icmp slt i64 %sub.42, 0, !dbg !1997
  br i1 %icmp.611, label %then.534, label %label.2

else.533:                                         ; preds = %else.530
  store i64 %result.sroa.0.060, i64* %result.sroa.0.0.cast.2326.sroa_cast, align 8, !dbg !1998
  store i64 %result.sroa.17.061, i64* %result.sroa.17.0.cast.2326.sroa_idx30, align 8, !dbg !1998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2328, i8* align 8 bitcast ({ i8*, i64 }* @const.368 to i8*), i64 16, i1 false), !dbg !1998
  %call.196 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.52), !dbg !1998
  %call.196.fca.0.extract = extractvalue { i64, i64 } %call.196, 0, !dbg !1998
  %call.196.fca.1.extract = extractvalue { i64, i64 } %call.196, 1, !dbg !1998
  call void @llvm.dbg.value(metadata i64 %call.196.fca.0.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %call.196.fca.1.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  br label %label.2

label.2:                                          ; preds = %fallthrough.531, %else.528, %else.542, %else.527, %else.533
  %level.3 = phi i64 [ %level.059, %else.527 ], [ %level.059, %else.542 ], [ %level.059, %else.533 ], [ %sub.42, %fallthrough.531 ], [ %level.059, %else.528 ]
  %result.sroa.0.1 = phi i64 [ %result.sroa.0.060, %else.527 ], [ %call.204.fca.0.extract, %else.542 ], [ %call.196.fca.0.extract, %else.533 ], [ %result.sroa.0.060, %fallthrough.531 ], [ %result.sroa.0.060, %else.528 ]
  %result.sroa.17.1 = phi i64 [ %result.sroa.17.061, %else.527 ], [ %call.204.fca.1.extract, %else.542 ], [ %call.196.fca.1.extract, %else.533 ], [ %result.sroa.17.061, %fallthrough.531 ], [ %result.sroa.17.061, %else.528 ]
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.1, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.1, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %level.3, metadata !1980, metadata !DIExpression()), !dbg !1981
  call void @command_line_arguments.scanner.ensureBuffer(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s), !dbg !1982
  br label %else.527

then.534:                                         ; preds = %fallthrough.531
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.060, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.061, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  %call.197 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !1999
  %cast.2338 = bitcast %.command-line-arguments.token.0* %tmpv.864 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2338, i8* align 16 bitcast (%.command-line-arguments.token.0* @const.364 to i8*), i64 32, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.197, i8* nonnull %cast.2338), !dbg !1999
  %field.602 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 2, !dbg !2000
  %.field.ld.150 = load %List.0*, %List.0** %field.602, align 8, !dbg !2000
  %0 = ptrtoint i8* %call.197 to i64, !dbg !1999
  %call.198 = call %Element.0* @container_list.List.PushBack(i8* nest undef, %List.0* %.field.ld.150, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.token to i64), i64 %0), !dbg !2001
  %icmp.605 = icmp sgt i64 %result.sroa.17.061, 0, !dbg !2002
  br i1 %icmp.605, label %fallthrough.536, label %fallthrough.538

fallthrough.536:                                  ; preds = %then.534
  %sub.43 = add i64 %result.sroa.17.061, -1, !dbg !2003
  %1 = inttoptr i64 %result.sroa.0.060 to i8*, !dbg !2004
  %ptroff.30 = getelementptr i8, i8* %1, i64 %sub.43, !dbg !2004
  %.ptroff.ld.0 = load i8, i8* %ptroff.30, align 1, !dbg !2004
  %icmp.608 = icmp eq i8 %.ptroff.ld.0, 10, !dbg !2005
  br i1 %icmp.608, label %else.539, label %fallthrough.538

fallthrough.538:                                  ; preds = %then.534, %fallthrough.536, %else.539
  %result.sroa.0.2 = phi i64 [ %call.199.fca.0.extract, %else.539 ], [ %result.sroa.0.060, %fallthrough.536 ], [ %result.sroa.0.060, %then.534 ]
  %result.sroa.17.2 = phi i64 [ %call.199.fca.1.extract, %else.539 ], [ %result.sroa.17.061, %fallthrough.536 ], [ %result.sroa.17.061, %then.534 ]
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.2, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.2, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  %cast.2353 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.875 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2353, i8* align 16 bitcast ([1 x { { i8*, i64 }, { i8*, i64 } }]* @const.366 to i8*), i64 32, i1 false)
  %call.200 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2353), !dbg !2006
  %call.201 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2007
  %cast.2359 = bitcast i8* %call.201 to %.command-line-arguments.token.0*, !dbg !2007
  %field.610 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.879, i64 0, i32 0, !dbg !2008
  store i32 -10, i32* %field.610, align 8, !dbg !2008
  %result.sroa.0.0.cast.2360.sroa_idx = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.879, i64 0, i32 1, !dbg !2008
  %result.sroa.0.0.cast.2360.sroa_cast = bitcast { i8*, i64 }* %result.sroa.0.0.cast.2360.sroa_idx to i64*, !dbg !2008
  store i64 %result.sroa.0.2, i64* %result.sroa.0.0.cast.2360.sroa_cast, align 8, !dbg !2008
  %result.sroa.17.0.cast.2360.sroa_idx32 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.879, i64 0, i32 1, i32 1, !dbg !2008
  store i64 %result.sroa.17.2, i64* %result.sroa.17.0.cast.2360.sroa_idx32, align 8, !dbg !2008
  %field.612 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.879, i64 0, i32 2, !dbg !2008
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.200, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.612, align 8, !dbg !2008
  %cast.2364 = bitcast %.command-line-arguments.token.0* %tmpv.879 to i8*, !dbg !2007
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.201, i8* nonnull %cast.2364), !dbg !2007
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2359, metadata !1975, metadata !DIExpression()), !dbg !1976
  ret %.command-line-arguments.token.0* %cast.2359, !dbg !2009

else.539:                                         ; preds = %fallthrough.536
  %call.199 = call { i64, i64 } @__go_string_slice(i8* nest undef, i64 %result.sroa.0.060, i64 %result.sroa.17.061, i64 0, i64 %sub.43), !dbg !2010
  %call.199.fca.0.extract = extractvalue { i64, i64 } %call.199, 0, !dbg !2010
  %call.199.fca.1.extract = extractvalue { i64, i64 } %call.199, 1, !dbg !2010
  call void @llvm.dbg.value(metadata i64 %call.199.fca.0.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %call.199.fca.1.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  br label %fallthrough.538

then.540:                                         ; preds = %case.30
  store i64 %result.sroa.0.060, i64* %result.sroa.0.0.cast.2368.sroa_cast, align 8, !dbg !2011
  store i64 %result.sroa.17.061, i64* %result.sroa.17.0.cast.2368.sroa_idx34, align 8, !dbg !2011
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2370, i8* align 8 bitcast ({ i8*, i64 }* @const.368 to i8*), i64 16, i1 false), !dbg !2011
  %call.202 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.54), !dbg !2011
  %call.202.fca.0.extract = extractvalue { i64, i64 } %call.202, 0, !dbg !2011
  %call.202.fca.1.extract = extractvalue { i64, i64 } %call.202, 1, !dbg !2011
  call void @llvm.dbg.value(metadata i64 %call.202.fca.0.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %call.202.fca.1.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  br label %fallthrough.540

fallthrough.540:                                  ; preds = %case.30, %then.540
  %result.sroa.0.3 = phi i64 [ %call.202.fca.0.extract, %then.540 ], [ %result.sroa.0.060, %case.30 ]
  %result.sroa.17.3 = phi i64 [ %call.202.fca.1.extract, %then.540 ], [ %result.sroa.17.061, %case.30 ]
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.3, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.3, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 0, metadata !2012, metadata !DIExpression()), !dbg !2014
  %icmp.61454 = icmp sgt i64 %level.059, 0, !dbg !2015
  br i1 %icmp.61454, label %then.541, label %else.542

then.541:                                         ; preds = %fallthrough.540, %then.541
  %result.sroa.17.457 = phi i64 [ %call.203.fca.1.extract, %then.541 ], [ %result.sroa.17.3, %fallthrough.540 ]
  %result.sroa.0.456 = phi i64 [ %call.203.fca.0.extract, %then.541 ], [ %result.sroa.0.3, %fallthrough.540 ]
  %i.055 = phi i64 [ %add.27, %then.541 ], [ 0, %fallthrough.540 ]
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.457, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.456, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %i.055, metadata !2012, metadata !DIExpression()), !dbg !2014
  store i64 %result.sroa.0.456, i64* %result.sroa.0.0.cast.2378.sroa_cast, align 8, !dbg !2016
  store i64 %result.sroa.17.457, i64* %result.sroa.17.0.cast.2378.sroa_idx36, align 8, !dbg !2016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2380, i8* align 8 bitcast ({ i8*, i64 }* @const.370 to i8*), i64 16, i1 false), !dbg !2016
  %call.203 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.55), !dbg !2016
  %call.203.fca.0.extract = extractvalue { i64, i64 } %call.203, 0, !dbg !2016
  %call.203.fca.1.extract = extractvalue { i64, i64 } %call.203, 1, !dbg !2016
  %add.27 = add nuw nsw i64 %i.055, 1, !dbg !2017
  call void @llvm.dbg.value(metadata i64 %call.203.fca.1.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %call.203.fca.0.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %add.27, metadata !2012, metadata !DIExpression()), !dbg !2014
  %exitcond = icmp eq i64 %add.27, %level.059, !dbg !2015
  br i1 %exitcond, label %else.542, label %then.541

else.542:                                         ; preds = %then.541, %fallthrough.540
  %result.sroa.0.4.lcssa = phi i64 [ %result.sroa.0.3, %fallthrough.540 ], [ %call.203.fca.0.extract, %then.541 ], !dbg !2018
  %result.sroa.17.4.lcssa = phi i64 [ %result.sroa.17.3, %fallthrough.540 ], [ %call.203.fca.1.extract, %then.541 ], !dbg !2018
  call void @llvm.dbg.value(metadata i64 %result.sroa.0.4.lcssa, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  call void @llvm.dbg.value(metadata i64 %result.sroa.17.4.lcssa, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  store i64 %result.sroa.0.4.lcssa, i64* %result.sroa.0.0.cast.2389.sroa_cast, align 8, !dbg !2019
  store i64 %result.sroa.17.4.lcssa, i64* %result.sroa.17.0.cast.2389.sroa_idx38, align 8, !dbg !2019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2391, i8* nonnull align 8 %cast.2388, i64 16, i1 false), !dbg !2019
  %call.204 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.56), !dbg !2019
  %call.204.fca.1.extract = extractvalue { i64, i64 } %call.204, 1, !dbg !2019
  call void @llvm.dbg.value(metadata i64 %call.204.fca.1.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1979
  %call.204.fca.0.extract = extractvalue { i64, i64 } %call.204, 0, !dbg !2019
  call void @llvm.dbg.value(metadata i64 %call.204.fca.0.extract, metadata !1977, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1979
  %.field.field.ld.4 = load i64, i64* %field.616, align 8, !dbg !2020
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.field.ld.4), !dbg !2021
  br label %label.2
}

define void @command_line_arguments.scanner.Pos(%SourcePosition.0* nocapture sret %sret.formal.6, i8* nest nocapture readnone %nest.49, %.command-line-arguments.scanner.0* readonly %s) #0 !dbg !2022 {
entry:
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2025, metadata !DIExpression()), !dbg !2026
  %icmp.569 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2027
  br i1 %icmp.569, label %then.496, label %else.496

then.496:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2027
  unreachable

else.496:                                         ; preds = %entry
  %field.578 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 7, !dbg !2027
  %.field.ld.139 = load i64, i64* %field.578, align 8, !dbg !2027
  %add.24 = add i64 %.field.ld.139, 1, !dbg !2028
  %field.579 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 8, !dbg !2029
  %.field.ld.140 = load i64, i64* %field.579, align 8, !dbg !2029
  %add.25 = add i64 %.field.ld.140, 1, !dbg !2030
  %field.580 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 9, !dbg !2031
  %.field.ld.141 = load i64, i64* %field.580, align 8, !dbg !2031
  call void @llvm.dbg.value(metadata i64 %add.24, metadata !2032, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2033
  call void @llvm.dbg.value(metadata i64 %add.25, metadata !2032, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2033
  call void @llvm.dbg.value(metadata i64 %.field.ld.141, metadata !2032, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2033
  %"$ret45.sroa.0.0.cast.2255.sroa_idx" = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.formal.6, i64 0, i32 0, !dbg !2034
  store i64 %add.24, i64* %"$ret45.sroa.0.0.cast.2255.sroa_idx", align 8, !dbg !2034
  %"$ret45.sroa.5.0.cast.2255.sroa_idx3" = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.formal.6, i64 0, i32 1, !dbg !2034
  store i64 %add.25, i64* %"$ret45.sroa.5.0.cast.2255.sroa_idx3", align 8, !dbg !2034
  %"$ret45.sroa.6.0.cast.2255.sroa_idx6" = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.formal.6, i64 0, i32 2, !dbg !2034
  store i64 %.field.ld.141, i64* %"$ret45.sroa.6.0.cast.2255.sroa_idx6", align 8, !dbg !2034
  %"$ret45.sroa.7.0.cast.2255.sroa_idx" = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.formal.6, i64 0, i32 3, !dbg !2034
  %"$ret45.sroa.7.0.cast.2255.sroa_cast" = bitcast { i8*, i64 }* %"$ret45.sroa.7.0.cast.2255.sroa_idx" to i8*, !dbg !2034
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret45.sroa.7.0.cast.2255.sroa_cast", i8 0, i64 16, i1 false), !dbg !2034
  ret void, !dbg !2034
}

define void @command_line_arguments.scanner.consume(i8* nest nocapture readnone %nest.68, %.command-line-arguments.scanner.0* %s, i64 %runes) #0 !dbg !2035 {
entry:
  %tmp.75 = alloca %IPST.6, align 8
  %tmpv.1199 = alloca [1 x %IPST.7], align 8
  %tmpv.1202 = alloca { i8*, i64 }, align 8
  %tmpv.1213 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2038, metadata !DIExpression()), !dbg !2039
  call void @llvm.dbg.value(metadata i64 %runes, metadata !2040, metadata !DIExpression()), !dbg !2041
  %icmp.811 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2042
  br i1 %icmp.811, label %then.652, label %else.652

then.652:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2042
  unreachable

else.652:                                         ; preds = %entry
  %field.878 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2042
  %field.879 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2043
  %.field.field.ld.6 = load i64, i64* %field.879, align 8, !dbg !2043
  %icmp.812 = icmp slt i64 %.field.field.ld.6, %runes, !dbg !2044
  br i1 %icmp.812, label %then.653, label %else.655

then.653:                                         ; preds = %else.652
  %call.267 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2045
  %cast.2923 = bitcast i8* %call.267 to i64*, !dbg !2045
  store i64 %runes, i64* %cast.2923, align 8, !dbg !2045
  %tmp.74.sroa.0.0.cast.2925.sroa_idx = getelementptr inbounds [1 x %IPST.7], [1 x %IPST.7]* %tmpv.1199, i64 0, i64 0, i32 0, !dbg !2045
  store %_type.0* @int..d, %_type.0** %tmp.74.sroa.0.0.cast.2925.sroa_idx, align 8, !dbg !2045
  %tmp.74.sroa.2.0.cast.2925.sroa_idx11 = getelementptr inbounds [1 x %IPST.7], [1 x %IPST.7]* %tmpv.1199, i64 0, i64 0, i32 1, !dbg !2045
  store i8* %call.267, i8** %tmp.74.sroa.2.0.cast.2925.sroa_idx11, align 8, !dbg !2045
  %field.873 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.75, i64 0, i32 0, !dbg !2045
  %cast.2928 = getelementptr inbounds [1 x %IPST.7], [1 x %IPST.7]* %tmpv.1199, i64 0, i64 0, !dbg !2045
  store %IPST.7* %cast.2928, %IPST.7** %field.873, align 8, !dbg !2045
  %field.874 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.75, i64 0, i32 1, !dbg !2045
  store i64 1, i64* %field.874, align 8, !dbg !2045
  %field.875 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.75, i64 0, i32 2, !dbg !2045
  store i64 1, i64* %field.875, align 8, !dbg !2045
  %call.268 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([40 x i8]* @const.420 to i64), i64 39, %IPST.6* byval nonnull %tmp.75), !dbg !2045
  %call.268.fca.0.extract = extractvalue { i64, i64 } %call.268, 0, !dbg !2045
  %call.268.fca.1.extract = extractvalue { i64, i64 } %call.268, 1, !dbg !2045
  %call.269 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2046
  %tmpv.1200.sroa.0.0.cast.2933.sroa_cast = bitcast { i8*, i64 }* %tmpv.1202 to i64*
  store i64 %call.268.fca.0.extract, i64* %tmpv.1200.sroa.0.0.cast.2933.sroa_cast, align 8
  %tmpv.1200.sroa.2.0.cast.2933.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1202, i64 0, i32 1
  store i64 %call.268.fca.1.extract, i64* %tmpv.1200.sroa.2.0.cast.2933.sroa_idx5, align 8
  %cast.2936 = bitcast { i8*, i64 }* %tmpv.1202 to i8*, !dbg !2046
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.269, i8* nonnull %cast.2936), !dbg !2046
  %0 = ptrtoint i8* %call.269 to i64, !dbg !2046
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %0), !dbg !2046
  unreachable

else.655:                                         ; preds = %else.652
  %field.880 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 7, !dbg !2047
  %field.881 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 5, !dbg !2048
  %.field.ld.175 = load i64, i64* %field.881, align 8, !dbg !2048
  store i64 %.field.ld.175, i64* %field.880, align 8, !dbg !2049
  %field.882 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 8, !dbg !2050
  %field.883 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 6, !dbg !2051
  %.field.ld.176 = load i64, i64* %field.883, align 8, !dbg !2051
  store i64 %.field.ld.176, i64* %field.882, align 8, !dbg !2052
  %field.884 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 9, !dbg !2053
  store i64 %runes, i64* %field.884, align 8, !dbg !2054
  %icmp.820 = icmp slt i64 %runes, 0, !dbg !2055
  br i1 %icmp.820, label %then.661, label %else.661

then.661:                                         ; preds = %else.655
  call void @__go_runtime_error(i8* nest undef, i32 5), !dbg !2055
  unreachable

else.661:                                         ; preds = %else.655
  %tmpv.1211.sroa.0.0.cast.2948.sroa_cast = bitcast { i8*, i64 }* %field.878 to i64*
  %tmpv.1211.sroa.0.0.copyload = load i64, i64* %tmpv.1211.sroa.0.0.cast.2948.sroa_cast, align 8
  %call.270 = call { i64, i64 } @__go_string_slice(i8* nest undef, i64 %tmpv.1211.sroa.0.0.copyload, i64 %.field.field.ld.6, i64 %runes, i64 -1), !dbg !2055
  %call.270.fca.0.extract = extractvalue { i64, i64 } %call.270, 0, !dbg !2055
  %call.270.fca.1.extract = extractvalue { i64, i64 } %call.270, 1, !dbg !2055
  %tmpv.1214.sroa.0.0.cast.2953.sroa_cast = bitcast { i8*, i64 }* %tmpv.1213 to i64*
  store i64 %call.270.fca.0.extract, i64* %tmpv.1214.sroa.0.0.cast.2953.sroa_cast, align 8
  %tmpv.1214.sroa.2.0.cast.2953.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1213, i64 0, i32 1
  store i64 %call.270.fca.1.extract, i64* %tmpv.1214.sroa.2.0.cast.2953.sroa_idx2, align 8
  %runtime.writeBarrier.ld.94 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2056
  %icmp.822 = icmp eq i32 %runtime.writeBarrier.ld.94, 0, !dbg !2056
  %cast.2956 = bitcast { i8*, i64 }* %field.878 to i8*, !dbg !2056
  %cast.2957 = bitcast { i8*, i64 }* %tmpv.1213 to i8*, !dbg !2056
  br i1 %icmp.822, label %else.663, label %else.662

else.662:                                         ; preds = %else.661
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.2956, i8* nonnull %cast.2957), !dbg !2056
  br label %else.665

else.663:                                         ; preds = %else.661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2956, i8* nonnull align 8 %cast.2957, i64 16, i1 false), !dbg !2056
  br label %else.665

else.665:                                         ; preds = %else.662, %else.663
  %.field.ld.177 = load i64, i64* %field.883, align 8, !dbg !2057
  %add.28 = add i64 %.field.ld.177, %runes, !dbg !2058
  store i64 %add.28, i64* %field.883, align 8, !dbg !2058
  ret void
}

define void @command_line_arguments.scanner.ensureBuffer(i8* nest nocapture readnone %nest.69, %.command-line-arguments.scanner.0* %s) #0 !dbg !2059 {
entry:
  %buf = alloca { i8*, i64 }, align 8
  %sret.actual.85 = alloca { { i8*, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2062, metadata !DIExpression()), !dbg !2063
  %0 = bitcast { i8*, i64 }* %buf to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  %icmp.825 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2064
  br i1 %icmp.825, label %then.666, label %else.666

then.666:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2064
  unreachable

else.666:                                         ; preds = %entry
  %field.889 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2064
  %field.890 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2066
  %.field.field.ld.7 = load i64, i64* %field.890, align 8, !dbg !2066
  %icmp.826 = icmp sgt i64 %.field.field.ld.7, 0, !dbg !2067
  br i1 %icmp.826, label %then.667, label %else.667

then.667:                                         ; preds = %else.666
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !2068
  ret void, !dbg !2068

else.667:                                         ; preds = %else.666
  %field.891 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 0, !dbg !2069
  %.field.ld.178 = load %Reader.1*, %Reader.1** %field.891, align 8, !dbg !2069
  call void @bufio.Reader.ReadString({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.85, i8* nest undef, %Reader.1* %.field.ld.178, i8 zeroext 10), !dbg !2070
  %tmpv.1220.sroa.0.0.cast.2967.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.85 to i8*, !dbg !2070
  %tmpv.1220.sroa.3.0.cast.2967.sroa_idx24 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.85, i64 0, i32 1, !dbg !2070
  %tmpv.1220.sroa.3.0.cast.2967.sroa_cast = bitcast %error.0* %tmpv.1220.sroa.3.0.cast.2967.sroa_idx24 to i64*, !dbg !2070
  %tmpv.1220.sroa.3.0.copyload25 = load i64, i64* %tmpv.1220.sroa.3.0.cast.2967.sroa_cast, align 8, !dbg !2070
  %tmpv.1220.sroa.4.0.cast.2967.sroa_idx26 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.85, i64 0, i32 1, i32 1, !dbg !2070
  %tmpv.1220.sroa.4.0.cast.2967.sroa_cast = bitcast i8** %tmpv.1220.sroa.4.0.cast.2967.sroa_idx26 to i64*, !dbg !2070
  %tmpv.1220.sroa.4.0.copyload27 = load i64, i64* %tmpv.1220.sroa.4.0.cast.2967.sroa_cast, align 8, !dbg !2070
  %buf31 = bitcast { i8*, i64 }* %buf to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %buf31, i8* nonnull align 8 %tmpv.1220.sroa.0.0.cast.2967.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.1220.sroa.3.0.copyload25, metadata !2071, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2072
  call void @llvm.dbg.value(metadata i64 %tmpv.1220.sroa.4.0.copyload27, metadata !2071, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2072
  %icmp.828 = icmp ne i64 %tmpv.1220.sroa.3.0.copyload25, 0, !dbg !2073
  br i1 %icmp.828, label %fallthrough.669, label %else.670.thread

else.670.thread:                                  ; preds = %else.667
  %field.90232 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %buf, i64 0, i32 1, !dbg !2074
  %buf.field.ld.033 = load i64, i64* %field.90232, align 8, !dbg !2074
  br label %else.673

fallthrough.669:                                  ; preds = %else.667
  %ld.307 = load i64, i64* bitcast (%error.0* @io.EOF to i64*), align 8, !dbg !2075
  %ld.308 = load i64, i64* bitcast (i8** getelementptr inbounds (%error.0, %error.0* @io.EOF, i64 0, i32 1) to i64*), align 8, !dbg !2075
  %call.271 = call i8 @runtime.ifaceeq(i8* nest undef, i64 %tmpv.1220.sroa.3.0.copyload25, i64 %tmpv.1220.sroa.4.0.copyload27, i64 %ld.307, i64 %ld.308), !dbg !2075
  %icmp.829 = icmp eq i8 %call.271, 1, !dbg !2075
  br i1 %icmp.829, label %else.670, label %fallthrough.671

else.670:                                         ; preds = %fallthrough.669
  %field.902 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %buf, i64 0, i32 1, !dbg !2074
  %buf.field.ld.0 = load i64, i64* %field.902, align 8, !dbg !2074
  %icmp.832 = icmp eq i64 %buf.field.ld.0, 0, !dbg !2076
  %tmpv.1226.0.in = and i1 %icmp.828, %icmp.832
  br i1 %tmpv.1226.0.in, label %else.674, label %else.673

fallthrough.671:                                  ; preds = %fallthrough.669
  %1 = inttoptr i64 %tmpv.1220.sroa.3.0.copyload25 to i64*, !dbg !2077
  %.field.ld.17928 = load i64, i64* %1, align 8, !dbg !2077
  call void @runtime.gopanic(i8* nest undef, i64 %.field.ld.17928, i64 %tmpv.1220.sroa.4.0.copyload27), !dbg !2078
  unreachable

fallthrough.673:                                  ; preds = %else.686, %else.674
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  ret void

else.673:                                         ; preds = %else.670.thread, %else.670
  %buf.field.ld.037 = phi i64 [ %buf.field.ld.033, %else.670.thread ], [ %buf.field.ld.0, %else.670 ]
  %field.90236 = phi i64* [ %field.90232, %else.670.thread ], [ %field.902, %else.670 ]
  %sub.45 = add i64 %buf.field.ld.037, -1, !dbg !2079
  %icmp.836 = icmp eq i64 %buf.field.ld.037, -9223372036854775808, !dbg !2080
  %icmp.837 = icmp slt i64 %sub.45, 0, !dbg !2080
  %ior.306 = or i1 %icmp.836, %icmp.837, !dbg !2080
  br i1 %ior.306, label %then.675, label %else.675

else.674:                                         ; preds = %else.670
  %field.903 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 3, !dbg !2081
  store i32 2, i32* %field.903, align 4, !dbg !2082
  br label %fallthrough.673

then.675:                                         ; preds = %else.673
  call void @__go_runtime_error(i8* nest undef, i32 2), !dbg !2080
  unreachable

else.675:                                         ; preds = %else.673
  %field.907 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %buf, i64 0, i32 0, !dbg !2080
  %buf.field.ld.4 = load i8*, i8** %field.907, align 8, !dbg !2080
  %ptroff.81 = getelementptr i8, i8* %buf.field.ld.4, i64 %sub.45, !dbg !2080
  %.ptroff.ld.1 = load i8, i8* %ptroff.81, align 1, !dbg !2080
  %icmp.838 = icmp eq i8 %.ptroff.ld.1, 10, !dbg !2083
  %2 = ptrtoint i8* %buf.field.ld.4 to i64
  br i1 %icmp.838, label %fallthrough.676, label %fallthrough.678

fallthrough.676:                                  ; preds = %else.675
  %field0.174 = bitcast { i8*, i64 }* %buf to i64*, !dbg !2084
  %call.272 = call { i64, i64 } @__go_string_slice(i8* nest undef, i64 %2, i64 %buf.field.ld.037, i64 0, i64 %sub.45), !dbg !2084
  %call.272.fca.0.extract = extractvalue { i64, i64 } %call.272, 0, !dbg !2084
  %call.272.fca.1.extract = extractvalue { i64, i64 } %call.272, 1, !dbg !2084
  store i64 %call.272.fca.0.extract, i64* %field0.174, align 8, !dbg !2085
  store i64 %call.272.fca.1.extract, i64* %field.90236, align 8, !dbg !2085
  %3 = inttoptr i64 %call.272.fca.0.extract to i8*
  %icmp.839 = icmp sgt i64 %call.272.fca.1.extract, 0, !dbg !2086
  br i1 %icmp.839, label %fallthrough.678, label %else.682

fallthrough.678:                                  ; preds = %else.675, %fallthrough.676
  %buf.field.ld.541 = phi i64 [ %call.272.fca.1.extract, %fallthrough.676 ], [ %buf.field.ld.037, %else.675 ]
  %buf.field.ld.840 = phi i8* [ %3, %fallthrough.676 ], [ %buf.field.ld.4, %else.675 ]
  %ld.31339 = phi i64 [ %call.272.fca.0.extract, %fallthrough.676 ], [ %2, %else.675 ]
  %sub.47 = add i64 %buf.field.ld.541, -1, !dbg !2087
  %ptroff.82 = getelementptr i8, i8* %buf.field.ld.840, i64 %sub.47, !dbg !2088
  %.ptroff.ld.2 = load i8, i8* %ptroff.82, align 1, !dbg !2088
  %icmp.842 = icmp eq i8 %.ptroff.ld.2, 13, !dbg !2089
  br i1 %icmp.842, label %else.681, label %else.682

else.681:                                         ; preds = %fallthrough.678
  %field0.175 = bitcast { i8*, i64 }* %buf to i64*, !dbg !2090
  %call.273 = call { i64, i64 } @__go_string_slice(i8* nest undef, i64 %ld.31339, i64 %buf.field.ld.541, i64 0, i64 %sub.47), !dbg !2090
  %call.273.fca.0.extract = extractvalue { i64, i64 } %call.273, 0, !dbg !2090
  %call.273.fca.1.extract = extractvalue { i64, i64 } %call.273, 1, !dbg !2090
  store i64 %call.273.fca.0.extract, i64* %field0.175, align 8, !dbg !2091
  store i64 %call.273.fca.1.extract, i64* %field.90236, align 8, !dbg !2091
  br label %else.682

else.682:                                         ; preds = %fallthrough.676, %else.681, %fallthrough.678
  %field.913 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 3, !dbg !2092
  store i32 0, i32* %field.913, align 4, !dbg !2093
  %runtime.writeBarrier.ld.95 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2094
  %icmp.848 = icmp eq i32 %runtime.writeBarrier.ld.95, 0, !dbg !2094
  %cast.3001 = bitcast { i8*, i64 }* %field.889 to i8*, !dbg !2094
  br i1 %icmp.848, label %else.685, label %else.684

else.684:                                         ; preds = %else.682
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.3001, i8* nonnull %0), !dbg !2094
  br label %else.686

else.685:                                         ; preds = %else.682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3001, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !2094
  br label %else.686

else.686:                                         ; preds = %else.685, %else.684
  %field.915 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 5, !dbg !2095
  %.field.ld.180 = load i64, i64* %field.915, align 8, !dbg !2095
  %add.29 = add i64 %.field.ld.180, 1, !dbg !2096
  store i64 %add.29, i64* %field.915, align 8, !dbg !2096
  %field.917 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 6, !dbg !2097
  store i64 0, i64* %field.917, align 8, !dbg !2098
  br label %fallthrough.673
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanAssignment(i8* nest nocapture readnone %nest.56, %.command-line-arguments.scanner.0* %s) #0 !dbg !2099 {
entry:
  %tmp.62 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.71 = alloca %IPST.5, align 8
  %tmpv.993 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.996 = alloca { i8*, i64 }, align 8
  %tmpv.1000 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2100, metadata !DIExpression()), !dbg !2101
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2102, metadata !DIExpression()), !dbg !2103
  %icmp.682 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2104
  br i1 %icmp.682, label %then.585, label %else.585

then.585:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2104
  unreachable

else.585:                                         ; preds = %entry
  %command_line_arguments.rgxAssignment.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxAssignment, align 8, !dbg !2106
  %field.692 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2104
  %field0.141 = bitcast { i8*, i64 }* %field.692 to i64*, !dbg !2107
  %ld.245 = load i64, i64* %field0.141, align 8, !dbg !2107
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2107
  %ld.246 = load i64, i64* %0, align 8, !dbg !2107
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.71, i8* nest undef, %Regexp.0* %command_line_arguments.rgxAssignment.ld.0, i64 %ld.245, i64 %ld.246), !dbg !2107
  %sm.sroa.0.0.cast.2581.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.71, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2581.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2108, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2109
  %sm.sroa.7.0.cast.2581.sroa_idx9 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.71, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2581.sroa_idx9, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2108, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2109
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.71, metadata !2108, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2109
  %icmp.689 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2110
  br i1 %icmp.689, label %else.586, label %then.586

then.586:                                         ; preds = %else.585
  %icmp.683 = icmp slt i64 %sm.sroa.7.0.copyload, 1, !dbg !2111
  br i1 %icmp.683, label %then.587, label %else.587

else.586:                                         ; preds = %else.585
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2102, metadata !DIExpression()), !dbg !2103
  ret %.command-line-arguments.token.0* null, !dbg !2112

then.587:                                         ; preds = %then.586
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2111
  unreachable

else.587:                                         ; preds = %then.586
  %field.695 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2113
  %.field.ld.161 = load i64, i64* %field.695, align 8, !dbg !2113
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.161), !dbg !2114
  %icmp.685 = icmp eq i64 %sm.sroa.7.0.copyload, 1, !dbg !2115
  br i1 %icmp.685, label %then.588, label %else.588

then.588:                                         ; preds = %else.587
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2115
  unreachable

else.588:                                         ; preds = %else.587
  %ptroff.43 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2115
  %cast.2582 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.62 to i8*, !dbg !2116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2582, i8* align 8 bitcast ({ i8*, i64 }* @const.344 to i8*), i64 16, i1 false), !dbg !2116
  %field.699 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.62, i64 0, i32 1, !dbg !2116
  %cast.2584 = bitcast { i8*, i64 }* %field.699 to i8*, !dbg !2116
  %cast.2585 = bitcast { i8*, i64 }* %ptroff.43 to i8*, !dbg !2116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2584, i8* align 8 %cast.2585, i64 16, i1 false), !dbg !2116
  %cast.2586 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.993 to i8*, !dbg !2116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2586, i8* nonnull align 8 %cast.2582, i64 32, i1 false), !dbg !2116
  %icmp.687 = icmp slt i64 %sm.sroa.7.0.copyload, 3, !dbg !2117
  br i1 %icmp.687, label %then.589, label %else.589

then.589:                                         ; preds = %else.588
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2117
  unreachable

else.589:                                         ; preds = %else.588
  %ptroff.44 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2117
  %cast.2588 = bitcast { i8*, i64 }* %tmpv.996 to i8*
  %cast.2589 = bitcast { i8*, i64 }* %ptroff.44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2588, i8* align 8 %cast.2589, i64 16, i1 false)
  %call.231 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2586), !dbg !2116
  %call.232 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2118
  %cast.2594 = bitcast i8* %call.232 to %.command-line-arguments.token.0*, !dbg !2118
  %field.702 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1000, i64 0, i32 0, !dbg !2119
  store i32 -15, i32* %field.702, align 8, !dbg !2119
  %field.703 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1000, i64 0, i32 1, !dbg !2119
  %cast.2595 = bitcast { i8*, i64 }* %field.703 to i8*, !dbg !2119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2595, i8* nonnull align 8 %cast.2588, i64 16, i1 false), !dbg !2119
  %field.704 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1000, i64 0, i32 2, !dbg !2119
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.231, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.704, align 8, !dbg !2119
  %cast.2599 = bitcast %.command-line-arguments.token.0* %tmpv.1000 to i8*, !dbg !2118
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.232, i8* nonnull %cast.2599), !dbg !2118
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2594, metadata !2102, metadata !DIExpression()), !dbg !2103
  ret %.command-line-arguments.token.0* %cast.2594, !dbg !2120
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanAttribute(i8* nest nocapture readnone %nest.60, %.command-line-arguments.scanner.0* %s) #0 !dbg !2121 {
entry:
  %tmp.69 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmp.68 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmp.67 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmp.66 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.75 = alloca %IPST.5, align 8
  %tmpv.1067 = alloca [3 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1071 = alloca { i8*, i64 }, align 8
  %tmpv.1075 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.1079 = alloca [3 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1083 = alloca { i8*, i64 }, align 8
  %tmpv.1087 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2122, metadata !DIExpression()), !dbg !2123
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2124, metadata !DIExpression()), !dbg !2125
  %icmp.723 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2126
  br i1 %icmp.723, label %then.606, label %else.606

then.606:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2126
  unreachable

else.606:                                         ; preds = %entry
  %command_line_arguments.rgxAttribute.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxAttribute, align 8, !dbg !2128
  %field.749 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2126
  %field0.149 = bitcast { i8*, i64 }* %field.749 to i64*, !dbg !2129
  %ld.261 = load i64, i64* %field0.149, align 8, !dbg !2129
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2129
  %ld.262 = load i64, i64* %0, align 8, !dbg !2129
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.75, i8* nest undef, %Regexp.0* %command_line_arguments.rgxAttribute.ld.0, i64 %ld.261, i64 %ld.262), !dbg !2129
  %sm.sroa.0.0.cast.2693.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.75, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2693.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2131
  %sm.sroa.14.0.cast.2693.sroa_idx25 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.75, i64 0, i32 1
  %sm.sroa.14.0.copyload = load i64, i64* %sm.sroa.14.0.cast.2693.sroa_idx25, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.14.0.copyload, metadata !2130, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2131
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.75, metadata !2130, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2131
  %icmp.745 = icmp eq i64 %sm.sroa.14.0.copyload, 0, !dbg !2132
  br i1 %icmp.745, label %else.607, label %then.607

then.607:                                         ; preds = %else.606
  %icmp.724 = icmp slt i64 %sm.sroa.14.0.copyload, 1, !dbg !2133
  br i1 %icmp.724, label %then.608, label %else.608

else.607:                                         ; preds = %else.606
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2124, metadata !DIExpression()), !dbg !2125
  ret %.command-line-arguments.token.0* null, !dbg !2134

then.608:                                         ; preds = %then.607
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2133
  unreachable

else.608:                                         ; preds = %then.607
  %field.752 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2135
  %.field.ld.166 = load i64, i64* %field.752, align 8, !dbg !2135
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.166), !dbg !2136
  %icmp.726 = icmp slt i64 %sm.sroa.14.0.copyload, 4, !dbg !2137
  br i1 %icmp.726, label %then.609, label %else.609

then.609:                                         ; preds = %else.608
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2137
  unreachable

else.609:                                         ; preds = %else.608
  %ptroff.55 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 3, !dbg !2137
  %field.755 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 3, i32 1, !dbg !2138
  %.field.ld.167 = load i64, i64* %field.755, align 8, !dbg !2138
  %icmp.728 = icmp eq i64 %.field.ld.167, 0, !dbg !2139
  br i1 %icmp.728, label %fallthrough.610, label %else.613

fallthrough.610:                                  ; preds = %else.609
  %ptroff.56 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2140
  %field0.150 = bitcast { i8*, i64 }* %ptroff.56 to i64*, !dbg !2141
  %ld.263 = load i64, i64* %field0.150, align 8, !dbg !2141
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, i32 1, !dbg !2141
  %ld.264 = load i64, i64* %1, align 8, !dbg !2141
  %call.243 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.263, i64 %ld.264, i64 0, i64 0), !dbg !2141
  %icmp.731 = icmp eq i8 %call.243, 1, !dbg !2141
  br i1 %icmp.731, label %else.613, label %else.612

else.612:                                         ; preds = %fallthrough.610
  %icmp.739 = icmp slt i64 %sm.sroa.14.0.copyload, 5, !dbg !2142
  br i1 %icmp.739, label %then.616, label %else.616

else.613:                                         ; preds = %else.609, %fallthrough.610
  %cast.2696 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.66 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2696, i8* align 8 bitcast ({ i8*, i64 }* @const.337 to i8*), i64 16, i1 false), !dbg !2143
  %field.763 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.66, i64 0, i32 1, !dbg !2143
  %cast.2698 = bitcast { i8*, i64 }* %field.763 to i8*, !dbg !2143
  %cast.2699 = bitcast { i8*, i64 }* %ptroff.55 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2698, i8* align 8 %cast.2699, i64 16, i1 false), !dbg !2143
  %icmp.735 = icmp slt i64 %sm.sroa.14.0.copyload, 6, !dbg !2144
  br i1 %icmp.735, label %then.614, label %else.614

then.614:                                         ; preds = %else.613
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2144
  unreachable

else.614:                                         ; preds = %else.613
  %ptroff.58 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 5, !dbg !2144
  %cast.2700 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.67 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2700, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false), !dbg !2143
  %field.765 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.67, i64 0, i32 1, !dbg !2143
  %cast.2702 = bitcast { i8*, i64 }* %field.765 to i8*, !dbg !2143
  %cast.2703 = bitcast { i8*, i64 }* %ptroff.58 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2702, i8* align 8 %cast.2703, i64 16, i1 false), !dbg !2143
  %cast.2704 = bitcast [3 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1067 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2704, i8* nonnull align 8 %cast.2696, i64 32, i1 false), !dbg !2143
  %index.35 = getelementptr inbounds [3 x { { i8*, i64 }, { i8*, i64 } }], [3 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1067, i64 0, i64 1, !dbg !2143
  %cast.2706 = bitcast { { i8*, i64 }, { i8*, i64 } }* %index.35 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2706, i8* align 16 bitcast ({ { i8*, i64 }, { i8*, i64 } }* @const.399 to i8*), i64 32, i1 false), !dbg !2143
  %index.36 = getelementptr inbounds [3 x { { i8*, i64 }, { i8*, i64 } }], [3 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1067, i64 0, i64 2, !dbg !2143
  %cast.2708 = bitcast { { i8*, i64 }, { i8*, i64 } }* %index.36 to i8*, !dbg !2143
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2708, i8* nonnull align 8 %cast.2700, i64 32, i1 false), !dbg !2143
  %ptroff.59 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2145
  %cast.2710 = bitcast { i8*, i64 }* %tmpv.1071 to i8*
  %cast.2711 = bitcast { i8*, i64 }* %ptroff.59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2710, i8* align 8 %cast.2711, i64 16, i1 false)
  %call.244 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 3, i64 32, i64 16, i8* nonnull %cast.2704), !dbg !2143
  %call.245 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2146
  %cast.2716 = bitcast i8* %call.245 to %.command-line-arguments.token.0*, !dbg !2146
  %field.768 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1075, i64 0, i32 0, !dbg !2147
  store i32 -11, i32* %field.768, align 8, !dbg !2147
  %field.769 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1075, i64 0, i32 1, !dbg !2147
  %cast.2717 = bitcast { i8*, i64 }* %field.769 to i8*, !dbg !2147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2717, i8* nonnull align 8 %cast.2710, i64 16, i1 false), !dbg !2147
  %field.770 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1075, i64 0, i32 2, !dbg !2147
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.244, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.770, align 8, !dbg !2147
  %cast.2721 = bitcast %.command-line-arguments.token.0* %tmpv.1075 to i8*, !dbg !2146
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.245, i8* nonnull %cast.2721), !dbg !2146
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2716, metadata !2124, metadata !DIExpression()), !dbg !2125
  ret %.command-line-arguments.token.0* %cast.2716, !dbg !2148

then.616:                                         ; preds = %else.612
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2142
  unreachable

else.616:                                         ; preds = %else.612
  %ptroff.60 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 4, !dbg !2142
  %cast.2722 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.68 to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2722, i8* align 8 bitcast ({ i8*, i64 }* @const.337 to i8*), i64 16, i1 false), !dbg !2149
  %field.776 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.68, i64 0, i32 1, !dbg !2149
  %cast.2724 = bitcast { i8*, i64 }* %field.776 to i8*, !dbg !2149
  %cast.2725 = bitcast { i8*, i64 }* %ptroff.60 to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2724, i8* align 8 %cast.2725, i64 16, i1 false), !dbg !2149
  %icmp.741 = icmp eq i64 %sm.sroa.14.0.copyload, 5, !dbg !2150
  br i1 %icmp.741, label %then.617, label %else.618

then.617:                                         ; preds = %else.616
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2150
  unreachable

else.618:                                         ; preds = %else.616
  %ptroff.61 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 5, !dbg !2150
  %cast.2726 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.69 to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2726, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false), !dbg !2149
  %field.778 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.69, i64 0, i32 1, !dbg !2149
  %cast.2728 = bitcast { i8*, i64 }* %field.778 to i8*, !dbg !2149
  %cast.2729 = bitcast { i8*, i64 }* %ptroff.61 to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2728, i8* align 8 %cast.2729, i64 16, i1 false), !dbg !2149
  %cast.2730 = bitcast [3 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1079 to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2730, i8* nonnull align 8 %cast.2722, i64 32, i1 false), !dbg !2149
  %index.38 = getelementptr inbounds [3 x { { i8*, i64 }, { i8*, i64 } }], [3 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1079, i64 0, i64 1, !dbg !2149
  %cast.2732 = bitcast { { i8*, i64 }, { i8*, i64 } }* %index.38 to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2732, i8* align 16 bitcast ({ { i8*, i64 }, { i8*, i64 } }* @const.401 to i8*), i64 32, i1 false), !dbg !2149
  %index.39 = getelementptr inbounds [3 x { { i8*, i64 }, { i8*, i64 } }], [3 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1079, i64 0, i64 2, !dbg !2149
  %cast.2734 = bitcast { { i8*, i64 }, { i8*, i64 } }* %index.39 to i8*, !dbg !2149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2734, i8* nonnull align 8 %cast.2726, i64 32, i1 false), !dbg !2149
  %ptroff.62 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2151
  %cast.2736 = bitcast { i8*, i64 }* %tmpv.1083 to i8*
  %cast.2737 = bitcast { i8*, i64 }* %ptroff.62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2736, i8* align 8 %cast.2737, i64 16, i1 false)
  %call.246 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 3, i64 32, i64 16, i8* nonnull %cast.2730), !dbg !2149
  %call.247 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2152
  %cast.2742 = bitcast i8* %call.247 to %.command-line-arguments.token.0*, !dbg !2152
  %field.781 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1087, i64 0, i32 0, !dbg !2153
  store i32 -11, i32* %field.781, align 8, !dbg !2153
  %field.782 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1087, i64 0, i32 1, !dbg !2153
  %cast.2743 = bitcast { i8*, i64 }* %field.782 to i8*, !dbg !2153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2743, i8* nonnull align 8 %cast.2736, i64 16, i1 false), !dbg !2153
  %field.783 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1087, i64 0, i32 2, !dbg !2153
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.246, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.783, align 8, !dbg !2153
  %cast.2747 = bitcast %.command-line-arguments.token.0* %tmpv.1087 to i8*, !dbg !2152
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.247, i8* nonnull %cast.2747), !dbg !2152
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2742, metadata !2124, metadata !DIExpression()), !dbg !2125
  ret %.command-line-arguments.token.0* %cast.2742, !dbg !2154
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanBlock(i8* nest nocapture readnone %nest.63, %.command-line-arguments.scanner.0* %s) #0 !dbg !2155 {
entry:
  %tmp.70 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.78 = alloca %IPST.5, align 8
  %tmpv.1125 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1128 = alloca { i8*, i64 }, align 8
  %tmpv.1132 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2156, metadata !DIExpression()), !dbg !2157
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2158, metadata !DIExpression()), !dbg !2159
  %icmp.764 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2160
  br i1 %icmp.764, label %then.627, label %else.627

then.627:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2160
  unreachable

else.627:                                         ; preds = %entry
  %command_line_arguments.rgxBlock.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxBlock, align 8, !dbg !2162
  %field.805 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2160
  %field0.157 = bitcast { i8*, i64 }* %field.805 to i64*, !dbg !2163
  %ld.277 = load i64, i64* %field0.157, align 8, !dbg !2163
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2163
  %ld.278 = load i64, i64* %0, align 8, !dbg !2163
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.78, i8* nest undef, %Regexp.0* %command_line_arguments.rgxBlock.ld.0, i64 %ld.277, i64 %ld.278), !dbg !2163
  %sm.sroa.0.0.cast.2796.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.78, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2796.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2164, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2165
  %sm.sroa.7.0.cast.2796.sroa_idx9 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.78, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2796.sroa_idx9, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2164, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2165
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.78, metadata !2164, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2165
  %icmp.771 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2166
  br i1 %icmp.771, label %else.628, label %then.628

then.628:                                         ; preds = %else.627
  %icmp.765 = icmp slt i64 %sm.sroa.7.0.copyload, 1, !dbg !2167
  br i1 %icmp.765, label %then.629, label %else.629

else.628:                                         ; preds = %else.627
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2158, metadata !DIExpression()), !dbg !2159
  ret %.command-line-arguments.token.0* null, !dbg !2168

then.629:                                         ; preds = %then.628
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2167
  unreachable

else.629:                                         ; preds = %then.628
  %field.808 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2169
  %.field.ld.170 = load i64, i64* %field.808, align 8, !dbg !2169
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.170), !dbg !2170
  %icmp.767 = icmp eq i64 %sm.sroa.7.0.copyload, 1, !dbg !2171
  br i1 %icmp.767, label %then.630, label %else.630

then.630:                                         ; preds = %else.629
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2171
  unreachable

else.630:                                         ; preds = %else.629
  %ptroff.68 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2171
  %cast.2797 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.70 to i8*, !dbg !2172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2797, i8* align 8 bitcast ({ i8*, i64 }* @const.350 to i8*), i64 16, i1 false), !dbg !2172
  %field.812 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.70, i64 0, i32 1, !dbg !2172
  %cast.2799 = bitcast { i8*, i64 }* %field.812 to i8*, !dbg !2172
  %cast.2800 = bitcast { i8*, i64 }* %ptroff.68 to i8*, !dbg !2172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2799, i8* align 8 %cast.2800, i64 16, i1 false), !dbg !2172
  %cast.2801 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1125 to i8*, !dbg !2172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2801, i8* nonnull align 8 %cast.2797, i64 32, i1 false), !dbg !2172
  %icmp.769 = icmp slt i64 %sm.sroa.7.0.copyload, 3, !dbg !2173
  br i1 %icmp.769, label %then.631, label %else.631

then.631:                                         ; preds = %else.630
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2173
  unreachable

else.631:                                         ; preds = %else.630
  %ptroff.69 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2173
  %cast.2803 = bitcast { i8*, i64 }* %tmpv.1128 to i8*
  %cast.2804 = bitcast { i8*, i64 }* %ptroff.69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2803, i8* align 8 %cast.2804, i64 16, i1 false)
  %call.253 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2801), !dbg !2172
  %call.254 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2174
  %cast.2809 = bitcast i8* %call.254 to %.command-line-arguments.token.0*, !dbg !2174
  %field.815 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1132, i64 0, i32 0, !dbg !2175
  store i32 -17, i32* %field.815, align 8, !dbg !2175
  %field.816 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1132, i64 0, i32 1, !dbg !2175
  %cast.2810 = bitcast { i8*, i64 }* %field.816 to i8*, !dbg !2175
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2810, i8* nonnull align 8 %cast.2803, i64 16, i1 false), !dbg !2175
  %field.817 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1132, i64 0, i32 2, !dbg !2175
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.253, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.817, align 8, !dbg !2175
  %cast.2814 = bitcast %.command-line-arguments.token.0* %tmpv.1132 to i8*, !dbg !2174
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.254, i8* nonnull %cast.2814), !dbg !2174
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2809, metadata !2158, metadata !DIExpression()), !dbg !2159
  ret %.command-line-arguments.token.0* %cast.2809, !dbg !2176
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanClassName(i8* nest nocapture readnone %nest.59, %.command-line-arguments.scanner.0* %s) #0 !dbg !2177 {
entry:
  %tmp.65 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.74 = alloca %IPST.5, align 8
  %tmpv.1044 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1047 = alloca { i8*, i64 }, align 8
  %tmpv.1051 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2178, metadata !DIExpression()), !dbg !2179
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2180, metadata !DIExpression()), !dbg !2181
  %icmp.713 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2182
  br i1 %icmp.713, label %then.601, label %else.601

then.601:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2182
  unreachable

else.601:                                         ; preds = %entry
  %command_line_arguments.rgxClassName.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxClassName, align 8, !dbg !2184
  %field.735 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2182
  %field0.147 = bitcast { i8*, i64 }* %field.735 to i64*, !dbg !2185
  %ld.257 = load i64, i64* %field0.147, align 8, !dbg !2185
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2185
  %ld.258 = load i64, i64* %0, align 8, !dbg !2185
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.74, i8* nest undef, %Regexp.0* %command_line_arguments.rgxClassName.ld.0, i64 %ld.257, i64 %ld.258), !dbg !2185
  %sm.sroa.0.0.cast.2666.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.74, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2666.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2186, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2187
  %sm.sroa.7.0.cast.2666.sroa_idx9 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.74, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2666.sroa_idx9, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2186, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2187
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.74, metadata !2186, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2187
  %icmp.720 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2188
  br i1 %icmp.720, label %else.602, label %then.602

then.602:                                         ; preds = %else.601
  %icmp.714 = icmp slt i64 %sm.sroa.7.0.copyload, 1, !dbg !2189
  br i1 %icmp.714, label %then.603, label %else.603

else.602:                                         ; preds = %else.601
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2180, metadata !DIExpression()), !dbg !2181
  ret %.command-line-arguments.token.0* null, !dbg !2190

then.603:                                         ; preds = %then.602
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2189
  unreachable

else.603:                                         ; preds = %then.602
  %field.738 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2191
  %.field.ld.165 = load i64, i64* %field.738, align 8, !dbg !2191
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.165), !dbg !2192
  %icmp.716 = icmp slt i64 %sm.sroa.7.0.copyload, 3, !dbg !2193
  br i1 %icmp.716, label %then.604, label %else.604

then.604:                                         ; preds = %else.603
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2193
  unreachable

else.604:                                         ; preds = %else.603
  %ptroff.52 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2193
  %cast.2667 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.65 to i8*, !dbg !2194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2667, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false), !dbg !2194
  %field.742 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.65, i64 0, i32 1, !dbg !2194
  %cast.2669 = bitcast { i8*, i64 }* %field.742 to i8*, !dbg !2194
  %cast.2670 = bitcast { i8*, i64 }* %ptroff.52 to i8*, !dbg !2194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2669, i8* align 8 %cast.2670, i64 16, i1 false), !dbg !2194
  %cast.2671 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1044 to i8*, !dbg !2194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2671, i8* nonnull align 8 %cast.2667, i64 32, i1 false), !dbg !2194
  %ptroff.53 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2195
  %cast.2673 = bitcast { i8*, i64 }* %tmpv.1047 to i8*
  %cast.2674 = bitcast { i8*, i64 }* %ptroff.53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2673, i8* align 8 %cast.2674, i64 16, i1 false)
  %call.240 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2671), !dbg !2194
  %call.241 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2196
  %cast.2679 = bitcast i8* %call.241 to %.command-line-arguments.token.0*, !dbg !2196
  %field.745 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1051, i64 0, i32 0, !dbg !2197
  store i32 -8, i32* %field.745, align 8, !dbg !2197
  %field.746 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1051, i64 0, i32 1, !dbg !2197
  %cast.2680 = bitcast { i8*, i64 }* %field.746 to i8*, !dbg !2197
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2680, i8* nonnull align 8 %cast.2673, i64 16, i1 false), !dbg !2197
  %field.747 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1051, i64 0, i32 2, !dbg !2197
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.240, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.747, align 8, !dbg !2197
  %cast.2684 = bitcast %.command-line-arguments.token.0* %tmpv.1051 to i8*, !dbg !2196
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.241, i8* nonnull %cast.2684), !dbg !2196
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2679, metadata !2180, metadata !DIExpression()), !dbg !2181
  ret %.command-line-arguments.token.0* %cast.2679, !dbg !2198
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanComment(i8* nest nocapture readnone %nest.57, %.command-line-arguments.scanner.0* %s) #0 !dbg !2199 {
entry:
  %tmp.63 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.72 = alloca %IPST.5, align 8
  %mode = alloca { i8*, i64 }, align 8
  %tmpv.1011 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1013 = alloca { i8*, i64 }, align 8
  %tmpv.1017 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2200, metadata !DIExpression()), !dbg !2201
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2202, metadata !DIExpression()), !dbg !2203
  %icmp.692 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2204
  br i1 %icmp.692, label %then.590, label %else.590

then.590:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2204
  unreachable

else.590:                                         ; preds = %entry
  %command_line_arguments.rgxComment.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxComment, align 8, !dbg !2206
  %field.706 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2204
  %field0.143 = bitcast { i8*, i64 }* %field.706 to i64*, !dbg !2207
  %ld.249 = load i64, i64* %field0.143, align 8, !dbg !2207
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2207
  %ld.250 = load i64, i64* %0, align 8, !dbg !2207
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.72, i8* nest undef, %Regexp.0* %command_line_arguments.rgxComment.ld.0, i64 %ld.249, i64 %ld.250), !dbg !2207
  %sm.sroa.0.0.cast.2608.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.72, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2608.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2208, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2209
  %sm.sroa.7.0.cast.2608.sroa_idx10 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.72, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2608.sroa_idx10, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2208, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2209
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.72, metadata !2208, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2209
  %icmp.700 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2210
  br i1 %icmp.700, label %else.591, label %then.591

then.591:                                         ; preds = %else.590
  %mode.0.sroa_cast = bitcast { i8*, i64 }* %mode to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %mode.0.sroa_cast)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %mode.0.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.392 to i8*), i64 16, i1 false)
  %icmp.693 = icmp slt i64 %sm.sroa.7.0.copyload, 2, !dbg !2211
  br i1 %icmp.693, label %then.592, label %else.592

else.591:                                         ; preds = %else.590
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2202, metadata !DIExpression()), !dbg !2203
  ret %.command-line-arguments.token.0* null, !dbg !2213

then.592:                                         ; preds = %then.591
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2211
  unreachable

else.592:                                         ; preds = %then.591
  %field.709 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, i32 1, !dbg !2214
  %.field.ld.162 = load i64, i64* %field.709, align 8, !dbg !2214
  %icmp.695 = icmp eq i64 %.field.ld.162, 0, !dbg !2215
  br i1 %icmp.695, label %else.594, label %then.593

then.593:                                         ; preds = %else.592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %mode.0.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.356 to i8*), i64 16, i1 false), !dbg !2216
  br label %else.594

else.594:                                         ; preds = %then.593, %else.592
  %field.712 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2217
  %.field.ld.163 = load i64, i64* %field.712, align 8, !dbg !2217
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.163), !dbg !2218
  %cast.2613 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.63 to i8*, !dbg !2219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2613, i8* align 8 bitcast ({ i8*, i64 }* @const.339 to i8*), i64 16, i1 false), !dbg !2219
  %field.714 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.63, i64 0, i32 1, !dbg !2219
  %cast.2615 = bitcast { i8*, i64 }* %field.714 to i8*, !dbg !2219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2615, i8* nonnull align 8 %mode.0.sroa_cast, i64 16, i1 false), !dbg !2219
  %cast.2617 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1011 to i8*, !dbg !2219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2617, i8* nonnull align 8 %cast.2613, i64 32, i1 false), !dbg !2219
  %icmp.698 = icmp slt i64 %sm.sroa.7.0.copyload, 3, !dbg !2220
  br i1 %icmp.698, label %then.595, label %else.595

then.595:                                         ; preds = %else.594
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2220
  unreachable

else.595:                                         ; preds = %else.594
  %ptroff.47 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2220
  %cast.2619 = bitcast { i8*, i64 }* %tmpv.1013 to i8*
  %cast.2620 = bitcast { i8*, i64 }* %ptroff.47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2619, i8* align 8 %cast.2620, i64 16, i1 false)
  %call.234 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2617), !dbg !2219
  %call.235 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2221
  %cast.2625 = bitcast i8* %call.235 to %.command-line-arguments.token.0*, !dbg !2221
  %field.717 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1017, i64 0, i32 0, !dbg !2222
  store i32 -3, i32* %field.717, align 8, !dbg !2222
  %field.718 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1017, i64 0, i32 1, !dbg !2222
  %cast.2626 = bitcast { i8*, i64 }* %field.718 to i8*, !dbg !2222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2626, i8* nonnull align 8 %cast.2619, i64 16, i1 false), !dbg !2222
  %field.719 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1017, i64 0, i32 2, !dbg !2222
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.234, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.719, align 8, !dbg !2222
  %cast.2630 = bitcast %.command-line-arguments.token.0* %tmpv.1017 to i8*, !dbg !2221
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.235, i8* nonnull %cast.2630), !dbg !2221
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2625, metadata !2202, metadata !DIExpression()), !dbg !2203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %mode.0.sroa_cast), !dbg !2223
  ret %.command-line-arguments.token.0* %cast.2625, !dbg !2223
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanCondition(i8* nest nocapture readnone %nest.54, %.command-line-arguments.scanner.0* %s) #0 !dbg !2224 {
entry:
  %sret.actual.68 = alloca %IPST.5, align 8
  %tmpv.954 = alloca { i8*, i64 }, align 8
  %tmpv.958 = alloca %.command-line-arguments.token.0, align 8
  %sret.actual.69 = alloca %IPST.5, align 8
  %tmpv.964 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2225, metadata !DIExpression()), !dbg !2226
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2227, metadata !DIExpression()), !dbg !2228
  %icmp.658 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2229
  br i1 %icmp.658, label %then.572, label %else.572

then.572:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2229
  unreachable

else.572:                                         ; preds = %entry
  %command_line_arguments.rgxIf.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxIf, align 8, !dbg !2231
  %field.659 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2229
  %field0.136 = bitcast { i8*, i64 }* %field.659 to i64*, !dbg !2232
  %ld.235 = load i64, i64* %field0.136, align 8, !dbg !2232
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2232
  %ld.236 = load i64, i64* %0, align 8, !dbg !2232
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.68, i8* nest undef, %Regexp.0* %command_line_arguments.rgxIf.ld.0, i64 %ld.235, i64 %ld.236), !dbg !2232
  %sm.sroa.0.0.cast.2517.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.68, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2517.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2233, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2234
  %sm.sroa.6.0.cast.2517.sroa_idx18 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.68, i64 0, i32 1
  %sm.sroa.6.0.copyload = load i64, i64* %sm.sroa.6.0.cast.2517.sroa_idx18, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.6.0.copyload, metadata !2233, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2234
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.68, metadata !2233, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2234
  %icmp.663 = icmp eq i64 %sm.sroa.6.0.copyload, 0, !dbg !2235
  br i1 %icmp.663, label %else.576, label %then.573

then.573:                                         ; preds = %else.572
  %icmp.659 = icmp slt i64 %sm.sroa.6.0.copyload, 1, !dbg !2236
  br i1 %icmp.659, label %then.574, label %else.574

then.574:                                         ; preds = %then.573
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2236
  unreachable

else.574:                                         ; preds = %then.573
  %field.662 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2237
  %.field.ld.158 = load i64, i64* %field.662, align 8, !dbg !2237
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.158), !dbg !2238
  %icmp.661 = icmp eq i64 %sm.sroa.6.0.copyload, 1, !dbg !2239
  br i1 %icmp.661, label %then.575, label %else.575

then.575:                                         ; preds = %else.574
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2239
  unreachable

else.575:                                         ; preds = %else.574
  %ptroff.36 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2239
  %cast.2518 = bitcast { i8*, i64 }* %tmpv.954 to i8*
  %cast.2519 = bitcast { i8*, i64 }* %ptroff.36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2518, i8* align 8 %cast.2519, i64 16, i1 false)
  %call.225 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2240
  %cast.2522 = bitcast i8* %call.225 to %.command-line-arguments.token.0*, !dbg !2240
  %field.665 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.958, i64 0, i32 0, !dbg !2241
  store i32 -12, i32* %field.665, align 8, !dbg !2241
  %field.666 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.958, i64 0, i32 1, !dbg !2241
  %cast.2524 = bitcast { i8*, i64 }* %field.666 to i8*, !dbg !2241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2524, i8* nonnull align 8 %cast.2518, i64 16, i1 false), !dbg !2241
  %field.667 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.958, i64 0, i32 2, !dbg !2241
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.667, align 8, !dbg !2241
  %cast.2528 = bitcast %.command-line-arguments.token.0* %tmpv.958 to i8*, !dbg !2240
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.225, i8* nonnull %cast.2528), !dbg !2240
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2522, metadata !2227, metadata !DIExpression()), !dbg !2228
  ret %.command-line-arguments.token.0* %cast.2522, !dbg !2242

else.576:                                         ; preds = %else.572
  %command_line_arguments.rgxElse.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxElse, align 8, !dbg !2243
  %ld.237 = load i64, i64* %field0.136, align 8, !dbg !2245
  %ld.238 = load i64, i64* %0, align 8, !dbg !2245
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.69, i8* nest undef, %Regexp.0* %command_line_arguments.rgxElse.ld.0, i64 %ld.237, i64 %ld.238), !dbg !2245
  %sm1.sroa.0.0.cast.2532.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.69, i64 0, i32 0
  %sm1.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm1.sroa.0.0.cast.2532.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm1.sroa.0.0.copyload, metadata !2246, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2247
  %sm1.sroa.5.0.cast.2532.sroa_idx6 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.69, i64 0, i32 1
  %sm1.sroa.5.0.copyload = load i64, i64* %sm1.sroa.5.0.cast.2532.sroa_idx6, align 8
  call void @llvm.dbg.value(metadata i64 %sm1.sroa.5.0.copyload, metadata !2246, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2247
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.69, metadata !2246, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2247
  %icmp.667 = icmp eq i64 %sm1.sroa.5.0.copyload, 0, !dbg !2248
  br i1 %icmp.667, label %else.577, label %then.577

then.577:                                         ; preds = %else.576
  %icmp.665 = icmp slt i64 %sm1.sroa.5.0.copyload, 1, !dbg !2249
  br i1 %icmp.665, label %then.578, label %else.578

else.577:                                         ; preds = %else.576
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2227, metadata !DIExpression()), !dbg !2228
  ret %.command-line-arguments.token.0* null, !dbg !2250

then.578:                                         ; preds = %then.577
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2249
  unreachable

else.578:                                         ; preds = %then.577
  %field.672 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm1.sroa.0.0.copyload, i64 0, i32 1, !dbg !2251
  %.field.ld.159 = load i64, i64* %field.672, align 8, !dbg !2251
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.159), !dbg !2252
  %call.226 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2253
  %cast.2534 = bitcast i8* %call.226 to %.command-line-arguments.token.0*, !dbg !2253
  %cast.2535 = bitcast %.command-line-arguments.token.0* %tmpv.964 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2535, i8* align 16 bitcast (%.command-line-arguments.token.0* @const.384 to i8*), i64 32, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.226, i8* nonnull %cast.2535), !dbg !2253
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2534, metadata !2227, metadata !DIExpression()), !dbg !2228
  ret %.command-line-arguments.token.0* %cast.2534, !dbg !2254
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanDoctype(i8* nest nocapture readnone %nest.53, %.command-line-arguments.scanner.0* %s) #0 !dbg !2255 {
entry:
  %sret.actual.67 = alloca %IPST.5, align 8
  %tmpv.937 = alloca { i8*, i64 }, align 8
  %tmpv.941 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2256, metadata !DIExpression()), !dbg !2257
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2258, metadata !DIExpression()), !dbg !2259
  %icmp.641 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2260
  br i1 %icmp.641, label %then.563, label %else.563

then.563:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2260
  unreachable

else.563:                                         ; preds = %entry
  %command_line_arguments.rgxDoctype.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxDoctype, align 8, !dbg !2262
  %field.644 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2260
  %field0.133 = bitcast { i8*, i64 }* %field.644 to i64*, !dbg !2263
  %ld.229 = load i64, i64* %field0.133, align 8, !dbg !2263
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2263
  %ld.230 = load i64, i64* %0, align 8, !dbg !2263
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.67, i8* nest undef, %Regexp.0* %command_line_arguments.rgxDoctype.ld.0, i64 %ld.229, i64 %ld.230), !dbg !2263
  %sm.sroa.0.0.cast.2488.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.67, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2488.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2264, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2265
  %sm.sroa.8.0.cast.2488.sroa_idx11 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.67, i64 0, i32 1
  %sm.sroa.8.0.copyload = load i64, i64* %sm.sroa.8.0.cast.2488.sroa_idx11, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.8.0.copyload, metadata !2264, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2265
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.67, metadata !2264, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2265
  %icmp.653 = icmp eq i64 %sm.sroa.8.0.copyload, 0, !dbg !2266
  br i1 %icmp.653, label %else.564, label %then.564

then.564:                                         ; preds = %else.563
  %icmp.646 = icmp slt i64 %sm.sroa.8.0.copyload, 3, !dbg !2267
  br i1 %icmp.646, label %then.565, label %else.565

else.564:                                         ; preds = %else.563
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2258, metadata !DIExpression()), !dbg !2259
  ret %.command-line-arguments.token.0* null, !dbg !2268

then.565:                                         ; preds = %then.564
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2267
  unreachable

else.565:                                         ; preds = %then.564
  %ptroff.32 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2267
  %field.649 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, i32 1, !dbg !2269
  %.field.ld.156 = load i64, i64* %field.649, align 8, !dbg !2269
  %icmp.648 = icmp eq i64 %.field.ld.156, 0, !dbg !2270
  br i1 %icmp.648, label %else.567, label %else.565.else.570_crit_edge

else.565.else.570_crit_edge:                      ; preds = %else.565
  %.pre = bitcast { i8*, i64 }* %ptroff.32 to i8*
  br label %else.570

else.567:                                         ; preds = %else.565
  %runtime.writeBarrier.ld.78 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2271
  %icmp.645 = icmp eq i32 %runtime.writeBarrier.ld.78, 0, !dbg !2271
  br i1 %icmp.645, label %then.568, label %else.568

then.568:                                         ; preds = %else.567
  %icmp.644 = icmp eq { i8*, i64 }* %ptroff.32, null, !dbg !2271
  br i1 %icmp.644, label %then.569, label %else.569

else.568:                                         ; preds = %else.567
  %cast.2492 = bitcast { i8*, i64 }* %ptroff.32 to i8*, !dbg !2271
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.2492, i8* bitcast ({ i8*, i64 }* @const.379 to i8*)), !dbg !2271
  br label %else.570

then.569:                                         ; preds = %then.568
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2271
  unreachable

else.569:                                         ; preds = %then.568
  %cast.2490 = bitcast { i8*, i64 }* %ptroff.32 to i8*, !dbg !2271
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2490, i8* align 8 bitcast ({ i8*, i64 }* @const.379 to i8*), i64 16, i1 false), !dbg !2271
  br label %else.570

else.570:                                         ; preds = %else.565.else.570_crit_edge, %else.568, %else.569
  %cast.2495.pre-phi = phi i8* [ %.pre, %else.565.else.570_crit_edge ], [ %cast.2492, %else.568 ], [ %cast.2490, %else.569 ]
  %field.652 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2272
  %.field.ld.157 = load i64, i64* %field.652, align 8, !dbg !2272
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.157), !dbg !2273
  %cast.2494 = bitcast { i8*, i64 }* %tmpv.937 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2494, i8* align 8 %cast.2495.pre-phi, i64 16, i1 false)
  %call.222 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2274
  %cast.2498 = bitcast i8* %call.222 to %.command-line-arguments.token.0*, !dbg !2274
  %field.655 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.941, i64 0, i32 0, !dbg !2275
  store i32 -2, i32* %field.655, align 8, !dbg !2275
  %field.656 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.941, i64 0, i32 1, !dbg !2275
  %cast.2500 = bitcast { i8*, i64 }* %field.656 to i8*, !dbg !2275
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2500, i8* nonnull align 8 %cast.2494, i64 16, i1 false), !dbg !2275
  %field.657 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.941, i64 0, i32 2, !dbg !2275
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.657, align 8, !dbg !2275
  %cast.2504 = bitcast %.command-line-arguments.token.0* %tmpv.941 to i8*, !dbg !2274
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.222, i8* nonnull %cast.2504), !dbg !2274
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2498, metadata !2258, metadata !DIExpression()), !dbg !2259
  ret %.command-line-arguments.token.0* %cast.2498, !dbg !2276
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanEach(i8* nest nocapture readnone %nest.55, %.command-line-arguments.scanner.0* %s) #0 !dbg !2277 {
entry:
  %tmp.61 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmp.60 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.70 = alloca %IPST.5, align 8
  %tmpv.975 = alloca [2 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.979 = alloca { i8*, i64 }, align 8
  %tmpv.983 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2278, metadata !DIExpression()), !dbg !2279
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2280, metadata !DIExpression()), !dbg !2281
  %icmp.670 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2282
  br i1 %icmp.670, label %then.579, label %else.579

then.579:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2282
  unreachable

else.579:                                         ; preds = %entry
  %command_line_arguments.rgxEach.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxEach, align 8, !dbg !2284
  %field.674 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2282
  %field0.139 = bitcast { i8*, i64 }* %field.674 to i64*, !dbg !2285
  %ld.241 = load i64, i64* %field0.139, align 8, !dbg !2285
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2285
  %ld.242 = load i64, i64* %0, align 8, !dbg !2285
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.70, i8* nest undef, %Regexp.0* %command_line_arguments.rgxEach.ld.0, i64 %ld.241, i64 %ld.242), !dbg !2285
  %sm.sroa.0.0.cast.2548.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.70, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2548.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2286, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2287
  %sm.sroa.8.0.cast.2548.sroa_idx11 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.70, i64 0, i32 1
  %sm.sroa.8.0.copyload = load i64, i64* %sm.sroa.8.0.cast.2548.sroa_idx11, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.8.0.copyload, metadata !2286, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2287
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.70, metadata !2286, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2287
  %icmp.679 = icmp eq i64 %sm.sroa.8.0.copyload, 0, !dbg !2288
  br i1 %icmp.679, label %else.580, label %then.580

then.580:                                         ; preds = %else.579
  %icmp.671 = icmp slt i64 %sm.sroa.8.0.copyload, 1, !dbg !2289
  br i1 %icmp.671, label %then.581, label %else.581

else.580:                                         ; preds = %else.579
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2280, metadata !DIExpression()), !dbg !2281
  ret %.command-line-arguments.token.0* null, !dbg !2290

then.581:                                         ; preds = %then.580
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2289
  unreachable

else.581:                                         ; preds = %then.580
  %field.677 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2291
  %.field.ld.160 = load i64, i64* %field.677, align 8, !dbg !2291
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.160), !dbg !2292
  %icmp.673 = icmp eq i64 %sm.sroa.8.0.copyload, 1, !dbg !2293
  br i1 %icmp.673, label %then.582, label %else.582

then.582:                                         ; preds = %else.581
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2293
  unreachable

else.582:                                         ; preds = %else.581
  %ptroff.39 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2293
  %cast.2549 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.60 to i8*, !dbg !2294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2549, i8* align 8 bitcast ({ i8*, i64 }* @const.344 to i8*), i64 16, i1 false), !dbg !2294
  %field.683 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.60, i64 0, i32 1, !dbg !2294
  %cast.2551 = bitcast { i8*, i64 }* %field.683 to i8*, !dbg !2294
  %cast.2552 = bitcast { i8*, i64 }* %ptroff.39 to i8*, !dbg !2294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2551, i8* align 8 %cast.2552, i64 16, i1 false), !dbg !2294
  %icmp.675 = icmp slt i64 %sm.sroa.8.0.copyload, 3, !dbg !2295
  br i1 %icmp.675, label %then.583, label %else.583

then.583:                                         ; preds = %else.582
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2295
  unreachable

else.583:                                         ; preds = %else.582
  %ptroff.40 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2295
  %cast.2553 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.61 to i8*, !dbg !2294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2553, i8* align 8 bitcast ({ i8*, i64 }* @const.345 to i8*), i64 16, i1 false), !dbg !2294
  %field.685 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.61, i64 0, i32 1, !dbg !2294
  %cast.2555 = bitcast { i8*, i64 }* %field.685 to i8*, !dbg !2294
  %cast.2556 = bitcast { i8*, i64 }* %ptroff.40 to i8*, !dbg !2294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2555, i8* align 8 %cast.2556, i64 16, i1 false), !dbg !2294
  %cast.2557 = bitcast [2 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.975 to i8*, !dbg !2294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2557, i8* nonnull align 8 %cast.2549, i64 32, i1 false), !dbg !2294
  %index.29 = getelementptr inbounds [2 x { { i8*, i64 }, { i8*, i64 } }], [2 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.975, i64 0, i64 1, !dbg !2294
  %cast.2559 = bitcast { { i8*, i64 }, { i8*, i64 } }* %index.29 to i8*, !dbg !2294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2559, i8* nonnull align 8 %cast.2553, i64 32, i1 false), !dbg !2294
  %icmp.677 = icmp eq i64 %sm.sroa.8.0.copyload, 3, !dbg !2296
  br i1 %icmp.677, label %then.584, label %else.584

then.584:                                         ; preds = %else.583
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2296
  unreachable

else.584:                                         ; preds = %else.583
  %ptroff.41 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 3, !dbg !2296
  %cast.2561 = bitcast { i8*, i64 }* %tmpv.979 to i8*
  %cast.2562 = bitcast { i8*, i64 }* %ptroff.41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2561, i8* align 8 %cast.2562, i64 16, i1 false)
  %call.228 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 2, i64 32, i64 16, i8* nonnull %cast.2557), !dbg !2294
  %call.229 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2297
  %cast.2567 = bitcast i8* %call.229 to %.command-line-arguments.token.0*, !dbg !2297
  %field.688 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.983, i64 0, i32 0, !dbg !2298
  store i32 -14, i32* %field.688, align 8, !dbg !2298
  %field.689 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.983, i64 0, i32 1, !dbg !2298
  %cast.2568 = bitcast { i8*, i64 }* %field.689 to i8*, !dbg !2298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2568, i8* nonnull align 8 %cast.2561, i64 16, i1 false), !dbg !2298
  %field.690 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.983, i64 0, i32 2, !dbg !2298
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.228, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.690, align 8, !dbg !2298
  %cast.2572 = bitcast %.command-line-arguments.token.0* %tmpv.983 to i8*, !dbg !2297
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.229, i8* nonnull %cast.2572), !dbg !2297
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2567, metadata !2280, metadata !DIExpression()), !dbg !2281
  ret %.command-line-arguments.token.0* %cast.2567, !dbg !2299
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanExtends(i8* nest nocapture readnone %nest.62, %.command-line-arguments.scanner.0* %s) #0 !dbg !2300 {
entry:
  %sret.actual.77 = alloca %IPST.5, align 8
  %tmpv.1111 = alloca { i8*, i64 }, align 8
  %tmpv.1115 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2301, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2303, metadata !DIExpression()), !dbg !2304
  %icmp.756 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2305
  br i1 %icmp.756, label %then.623, label %else.623

then.623:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2305
  unreachable

else.623:                                         ; preds = %entry
  %command_line_arguments.rgxExtends.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxExtends, align 8, !dbg !2307
  %field.795 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2305
  %field0.155 = bitcast { i8*, i64 }* %field.795 to i64*, !dbg !2308
  %ld.273 = load i64, i64* %field0.155, align 8, !dbg !2308
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2308
  %ld.274 = load i64, i64* %0, align 8, !dbg !2308
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.77, i8* nest undef, %Regexp.0* %command_line_arguments.rgxExtends.ld.0, i64 %ld.273, i64 %ld.274), !dbg !2308
  %sm.sroa.0.0.cast.2776.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.77, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2776.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2309, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2310
  %sm.sroa.6.0.cast.2776.sroa_idx7 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.77, i64 0, i32 1
  %sm.sroa.6.0.copyload = load i64, i64* %sm.sroa.6.0.cast.2776.sroa_idx7, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.6.0.copyload, metadata !2309, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2310
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.77, metadata !2309, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2310
  %icmp.761 = icmp eq i64 %sm.sroa.6.0.copyload, 0, !dbg !2311
  br i1 %icmp.761, label %else.624, label %then.624

then.624:                                         ; preds = %else.623
  %icmp.757 = icmp slt i64 %sm.sroa.6.0.copyload, 1, !dbg !2312
  br i1 %icmp.757, label %then.625, label %else.625

else.624:                                         ; preds = %else.623
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2303, metadata !DIExpression()), !dbg !2304
  ret %.command-line-arguments.token.0* null, !dbg !2313

then.625:                                         ; preds = %then.624
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2312
  unreachable

else.625:                                         ; preds = %then.624
  %field.798 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2314
  %.field.ld.169 = load i64, i64* %field.798, align 8, !dbg !2314
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.169), !dbg !2315
  %icmp.759 = icmp eq i64 %sm.sroa.6.0.copyload, 1, !dbg !2316
  br i1 %icmp.759, label %then.626, label %else.626

then.626:                                         ; preds = %else.625
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2316
  unreachable

else.626:                                         ; preds = %else.625
  %ptroff.66 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2316
  %cast.2777 = bitcast { i8*, i64 }* %tmpv.1111 to i8*
  %cast.2778 = bitcast { i8*, i64 }* %ptroff.66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2777, i8* align 8 %cast.2778, i64 16, i1 false)
  %call.251 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2317
  %cast.2781 = bitcast i8* %call.251 to %.command-line-arguments.token.0*, !dbg !2317
  %field.801 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1115, i64 0, i32 0, !dbg !2318
  store i32 -18, i32* %field.801, align 8, !dbg !2318
  %field.802 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1115, i64 0, i32 1, !dbg !2318
  %cast.2783 = bitcast { i8*, i64 }* %field.802 to i8*, !dbg !2318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2783, i8* nonnull align 8 %cast.2777, i64 16, i1 false), !dbg !2318
  %field.803 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1115, i64 0, i32 2, !dbg !2318
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.803, align 8, !dbg !2318
  %cast.2787 = bitcast %.command-line-arguments.token.0* %tmpv.1115 to i8*, !dbg !2317
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.251, i8* nonnull %cast.2787), !dbg !2317
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2781, metadata !2303, metadata !DIExpression()), !dbg !2304
  ret %.command-line-arguments.token.0* %cast.2781, !dbg !2319
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanId(i8* nest nocapture readnone %nest.58, %.command-line-arguments.scanner.0* %s) #0 !dbg !2320 {
entry:
  %tmp.64 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.73 = alloca %IPST.5, align 8
  %tmpv.1027 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1030 = alloca { i8*, i64 }, align 8
  %tmpv.1034 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2321, metadata !DIExpression()), !dbg !2322
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2323, metadata !DIExpression()), !dbg !2324
  %icmp.703 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2325
  br i1 %icmp.703, label %then.596, label %else.596

then.596:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2325
  unreachable

else.596:                                         ; preds = %entry
  %command_line_arguments.rgxId.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxId, align 8, !dbg !2327
  %field.721 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2325
  %field0.145 = bitcast { i8*, i64 }* %field.721 to i64*, !dbg !2328
  %ld.253 = load i64, i64* %field0.145, align 8, !dbg !2328
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2328
  %ld.254 = load i64, i64* %0, align 8, !dbg !2328
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.73, i8* nest undef, %Regexp.0* %command_line_arguments.rgxId.ld.0, i64 %ld.253, i64 %ld.254), !dbg !2328
  %sm.sroa.0.0.cast.2639.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.73, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2639.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2329, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2330
  %sm.sroa.7.0.cast.2639.sroa_idx9 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.73, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2639.sroa_idx9, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2329, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2330
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.73, metadata !2329, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2330
  %icmp.710 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2331
  br i1 %icmp.710, label %else.597, label %then.597

then.597:                                         ; preds = %else.596
  %icmp.704 = icmp slt i64 %sm.sroa.7.0.copyload, 1, !dbg !2332
  br i1 %icmp.704, label %then.598, label %else.598

else.597:                                         ; preds = %else.596
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2323, metadata !DIExpression()), !dbg !2324
  ret %.command-line-arguments.token.0* null, !dbg !2333

then.598:                                         ; preds = %then.597
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2332
  unreachable

else.598:                                         ; preds = %then.597
  %field.724 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2334
  %.field.ld.164 = load i64, i64* %field.724, align 8, !dbg !2334
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.164), !dbg !2335
  %icmp.706 = icmp slt i64 %sm.sroa.7.0.copyload, 3, !dbg !2336
  br i1 %icmp.706, label %then.599, label %else.599

then.599:                                         ; preds = %else.598
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2336
  unreachable

else.599:                                         ; preds = %else.598
  %ptroff.49 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2336
  %cast.2640 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.64 to i8*, !dbg !2337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2640, i8* align 8 bitcast ({ i8*, i64 }* @const.331 to i8*), i64 16, i1 false), !dbg !2337
  %field.728 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.64, i64 0, i32 1, !dbg !2337
  %cast.2642 = bitcast { i8*, i64 }* %field.728 to i8*, !dbg !2337
  %cast.2643 = bitcast { i8*, i64 }* %ptroff.49 to i8*, !dbg !2337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2642, i8* align 8 %cast.2643, i64 16, i1 false), !dbg !2337
  %cast.2644 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1027 to i8*, !dbg !2337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2644, i8* nonnull align 8 %cast.2640, i64 32, i1 false), !dbg !2337
  %ptroff.50 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2338
  %cast.2646 = bitcast { i8*, i64 }* %tmpv.1030 to i8*
  %cast.2647 = bitcast { i8*, i64 }* %ptroff.50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2646, i8* align 8 %cast.2647, i64 16, i1 false)
  %call.237 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2644), !dbg !2337
  %call.238 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2339
  %cast.2652 = bitcast i8* %call.238 to %.command-line-arguments.token.0*, !dbg !2339
  %field.731 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1034, i64 0, i32 0, !dbg !2340
  store i32 -7, i32* %field.731, align 8, !dbg !2340
  %field.732 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1034, i64 0, i32 1, !dbg !2340
  %cast.2653 = bitcast { i8*, i64 }* %field.732 to i8*, !dbg !2340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2653, i8* nonnull align 8 %cast.2646, i64 16, i1 false), !dbg !2340
  %field.733 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1034, i64 0, i32 2, !dbg !2340
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.237, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.733, align 8, !dbg !2340
  %cast.2657 = bitcast %.command-line-arguments.token.0* %tmpv.1034 to i8*, !dbg !2339
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.238, i8* nonnull %cast.2657), !dbg !2339
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2652, metadata !2323, metadata !DIExpression()), !dbg !2324
  ret %.command-line-arguments.token.0* %cast.2652, !dbg !2341
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanImport(i8* nest nocapture readnone %nest.61, %.command-line-arguments.scanner.0* %s) #0 !dbg !2342 {
entry:
  %sret.actual.76 = alloca %IPST.5, align 8
  %tmpv.1097 = alloca { i8*, i64 }, align 8
  %tmpv.1101 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2343, metadata !DIExpression()), !dbg !2344
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2345, metadata !DIExpression()), !dbg !2346
  %icmp.748 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2347
  br i1 %icmp.748, label %then.619, label %else.619

then.619:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2347
  unreachable

else.619:                                         ; preds = %entry
  %command_line_arguments.rgxImport.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxImport, align 8, !dbg !2349
  %field.785 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2347
  %field0.153 = bitcast { i8*, i64 }* %field.785 to i64*, !dbg !2350
  %ld.269 = load i64, i64* %field0.153, align 8, !dbg !2350
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2350
  %ld.270 = load i64, i64* %0, align 8, !dbg !2350
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.76, i8* nest undef, %Regexp.0* %command_line_arguments.rgxImport.ld.0, i64 %ld.269, i64 %ld.270), !dbg !2350
  %sm.sroa.0.0.cast.2756.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.76, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2756.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2351, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2352
  %sm.sroa.6.0.cast.2756.sroa_idx7 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.76, i64 0, i32 1
  %sm.sroa.6.0.copyload = load i64, i64* %sm.sroa.6.0.cast.2756.sroa_idx7, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.6.0.copyload, metadata !2351, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2352
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.76, metadata !2351, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2352
  %icmp.753 = icmp eq i64 %sm.sroa.6.0.copyload, 0, !dbg !2353
  br i1 %icmp.753, label %else.620, label %then.620

then.620:                                         ; preds = %else.619
  %icmp.749 = icmp slt i64 %sm.sroa.6.0.copyload, 1, !dbg !2354
  br i1 %icmp.749, label %then.621, label %else.621

else.620:                                         ; preds = %else.619
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2345, metadata !DIExpression()), !dbg !2346
  ret %.command-line-arguments.token.0* null, !dbg !2355

then.621:                                         ; preds = %then.620
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2354
  unreachable

else.621:                                         ; preds = %then.620
  %field.788 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2356
  %.field.ld.168 = load i64, i64* %field.788, align 8, !dbg !2356
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.168), !dbg !2357
  %icmp.751 = icmp eq i64 %sm.sroa.6.0.copyload, 1, !dbg !2358
  br i1 %icmp.751, label %then.622, label %else.622

then.622:                                         ; preds = %else.621
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2358
  unreachable

else.622:                                         ; preds = %else.621
  %ptroff.64 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2358
  %cast.2757 = bitcast { i8*, i64 }* %tmpv.1097 to i8*
  %cast.2758 = bitcast { i8*, i64 }* %ptroff.64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2757, i8* align 8 %cast.2758, i64 16, i1 false)
  %call.249 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2359
  %cast.2761 = bitcast i8* %call.249 to %.command-line-arguments.token.0*, !dbg !2359
  %field.791 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1101, i64 0, i32 0, !dbg !2360
  store i32 -16, i32* %field.791, align 8, !dbg !2360
  %field.792 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1101, i64 0, i32 1, !dbg !2360
  %cast.2763 = bitcast { i8*, i64 }* %field.792 to i8*, !dbg !2360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2763, i8* nonnull align 8 %cast.2757, i64 16, i1 false), !dbg !2360
  %field.793 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1101, i64 0, i32 2, !dbg !2360
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.793, align 8, !dbg !2360
  %cast.2767 = bitcast %.command-line-arguments.token.0* %tmpv.1101 to i8*, !dbg !2359
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.249, i8* nonnull %cast.2767), !dbg !2359
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2761, metadata !2345, metadata !DIExpression()), !dbg !2346
  ret %.command-line-arguments.token.0* %cast.2761, !dbg !2361
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanIndent(i8* nest nocapture readnone %nest.52, %.command-line-arguments.scanner.0* %s) #0 !dbg !2362 {
entry:
  %tmpv.891 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.910 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.914 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.916 = alloca %.command-line-arguments.token.0, align 8
  %tmpv.921 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2363, metadata !DIExpression()), !dbg !2364
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2365, metadata !DIExpression()), !dbg !2366
  %icmp.620 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2367
  br i1 %icmp.620, label %then.544, label %else.544

then.544:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2367
  unreachable

else.544:                                         ; preds = %entry
  %field.619 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2369
  %.field.field.ld.5 = load i64, i64* %field.619, align 8, !dbg !2369
  %icmp.621 = icmp eq i64 %.field.field.ld.5, 0, !dbg !2370
  br i1 %icmp.621, label %then.545, label %else.546

then.545:                                         ; preds = %else.544
  %call.206 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2371
  %cast.2405 = bitcast i8* %call.206 to %.command-line-arguments.token.0*, !dbg !2371
  %cast.2406 = bitcast %.command-line-arguments.token.0* %tmpv.891 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2406, i8* align 16 bitcast (%.command-line-arguments.token.0* @const.373 to i8*), i64 32, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.206, i8* nonnull %cast.2406), !dbg !2371
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2405, metadata !2365, metadata !DIExpression()), !dbg !2366
  ret %.command-line-arguments.token.0* %cast.2405, !dbg !2372

else.546:                                         ; preds = %else.544
  %field.618 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2367
  call void @llvm.dbg.value(metadata %Element.0* null, metadata !2373, metadata !DIExpression()), !dbg !2374
  %field.620 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 1, !dbg !2375
  %.field.ld.152 = load %List.0*, %List.0** %field.620, align 8, !dbg !2375
  %call.207 = call %Element.0* @container_list.List.Front(i8* nest undef, %List.0* %.field.ld.152), !dbg !2376
  call void @llvm.dbg.value(metadata %Element.0* %call.207, metadata !2373, metadata !DIExpression()), !dbg !2374
  %icmp.62639 = icmp eq %Element.0* %call.207, null, !dbg !2377
  %.pre = bitcast { i8*, i64 }* %field.618 to i64*
  br i1 %icmp.62639, label %else.551, label %then.550

then.549:                                         ; preds = %then.550
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %call.208.fca.1.extract), !dbg !2378
  %call.209 = call %Element.0* @container_list.Element.Next(i8* nest undef, %Element.0* nonnull %head.040), !dbg !2381
  call void @llvm.dbg.value(metadata %Element.0* %call.209, metadata !2373, metadata !DIExpression()), !dbg !2374
  %icmp.626 = icmp eq %Element.0* %call.209, null, !dbg !2377
  br i1 %icmp.626, label %else.551, label %then.550

then.550:                                         ; preds = %else.546, %then.549
  %head.040 = phi %Element.0* [ %call.209, %then.549 ], [ %call.207, %else.546 ]
  call void @llvm.dbg.value(metadata %Element.0* %head.040, metadata !2373, metadata !DIExpression()), !dbg !2374
  %tmpv.895.sroa.0.0.cast.2415.sroa_idx = getelementptr inbounds %Element.0, %Element.0* %head.040, i64 0, i32 3, i32 0
  %tmpv.895.sroa.0.0.copyload = load %_type.0*, %_type.0** %tmpv.895.sroa.0.0.cast.2415.sroa_idx, align 8
  %tmpv.895.sroa.2.0.cast.2415.sroa_idx12 = getelementptr inbounds %Element.0, %Element.0* %head.040, i64 0, i32 3, i32 1
  %0 = bitcast i8** %tmpv.895.sroa.2.0.cast.2415.sroa_idx12 to %Regexp.0**
  %tmpv.895.sroa.2.0.copyload35 = load %Regexp.0*, %Regexp.0** %0, align 8
  call void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1regexp.Regexp, i64 0, i32 0), %_type.0* %tmpv.895.sroa.0.0.copyload, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @type..interface.4.5, i64 0, i32 0)), !dbg !2382
  call void @llvm.dbg.value(metadata %Regexp.0* %tmpv.895.sroa.2.0.copyload35, metadata !2383, metadata !DIExpression()), !dbg !2384
  %ld.213 = load i64, i64* %.pre, align 8, !dbg !2385
  %ld.214 = load i64, i64* %field.619, align 8, !dbg !2385
  %call.208 = call { i64, i64 } @regexp.Regexp.FindString(i8* nest undef, %Regexp.0* %tmpv.895.sroa.2.0.copyload35, i64 %ld.213, i64 %ld.214), !dbg !2385
  %call.208.fca.1.extract = extractvalue { i64, i64 } %call.208, 1, !dbg !2385
  call void @llvm.dbg.value(metadata i64 %call.208.fca.1.extract, metadata !2386, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2387
  %icmp.625 = icmp eq i64 %call.208.fca.1.extract, 0, !dbg !2388
  br i1 %icmp.625, label %else.551, label %then.549

else.551:                                         ; preds = %then.550, %then.549, %else.546
  %head.0.lcssa = phi %Element.0* [ null, %else.546 ], [ null, %then.549 ], [ %head.040, %then.550 ], !dbg !2389
  %icmp.626.lcssa = phi i1 [ false, %else.546 ], [ false, %then.549 ], [ true, %then.550 ], !dbg !2377
  call void @llvm.dbg.value(metadata %Element.0* %head.0.lcssa, metadata !2373, metadata !DIExpression()), !dbg !2374
  call void @llvm.dbg.value(metadata %Element.0* %head.0.lcssa, metadata !2373, metadata !DIExpression()), !dbg !2374
  %command_line_arguments.rgxIndent.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxIndent, align 8, !dbg !2390
  %ld.215 = load i64, i64* %.pre, align 8, !dbg !2391
  %ld.216 = load i64, i64* %field.619, align 8, !dbg !2391
  %call.210 = call { i64, i64 } @regexp.Regexp.FindString(i8* nest undef, %Regexp.0* %command_line_arguments.rgxIndent.ld.0, i64 %ld.215, i64 %ld.216), !dbg !2391
  %call.210.fca.0.extract = extractvalue { i64, i64 } %call.210, 0, !dbg !2391
  %call.210.fca.1.extract = extractvalue { i64, i64 } %call.210, 1, !dbg !2391
  call void @llvm.dbg.value(metadata i64 %call.210.fca.0.extract, metadata !2392, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2393
  call void @llvm.dbg.value(metadata i64 %call.210.fca.1.extract, metadata !2392, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2393
  %icmp.628 = icmp ne i64 %call.210.fca.1.extract, 0, !dbg !2394
  %icmp.629 = icmp eq %Element.0* %head.0.lcssa, null, !dbg !2395
  %spec.select = and i1 %icmp.629, %icmp.628
  br i1 %spec.select, label %then.553, label %else.553

then.553:                                         ; preds = %else.551
  %call.211 = call { i64, i64 } @regexp.QuoteMeta(i8* nest undef, i64 %call.210.fca.0.extract, i64 %call.210.fca.1.extract), !dbg !2396
  %call.211.fca.0.extract = extractvalue { i64, i64 } %call.211, 0, !dbg !2396
  %call.211.fca.1.extract = extractvalue { i64, i64 } %call.211, 1, !dbg !2396
  %call.212 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 %call.211.fca.0.extract, i64 %call.211.fca.1.extract), !dbg !2397
  %.field.ld.153 = load %List.0*, %List.0** %field.620, align 8, !dbg !2398
  %1 = ptrtoint %Regexp.0* %call.212 to i64, !dbg !2397
  %call.213 = call %Element.0* @container_list.List.PushBack(i8* nest undef, %List.0* %.field.ld.153, i64 ptrtoint (%PtrType.0* @type...1regexp.Regexp to i64), i64 %1), !dbg !2399
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %call.210.fca.1.extract), !dbg !2400
  %call.214 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2401
  %cast.2442 = bitcast i8* %call.214 to %.command-line-arguments.token.0*, !dbg !2401
  %field.633 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.910, i64 0, i32 0, !dbg !2402
  store i32 -4, i32* %field.633, align 8, !dbg !2402
  %newIndent.sroa.0.0.cast.2444.sroa_idx = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.910, i64 0, i32 1, !dbg !2402
  %newIndent.sroa.0.0.cast.2444.sroa_cast = bitcast { i8*, i64 }* %newIndent.sroa.0.0.cast.2444.sroa_idx to i64*, !dbg !2402
  store i64 %call.210.fca.0.extract, i64* %newIndent.sroa.0.0.cast.2444.sroa_cast, align 8, !dbg !2402
  %newIndent.sroa.8.0.cast.2444.sroa_idx18 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.910, i64 0, i32 1, i32 1, !dbg !2402
  store i64 %call.210.fca.1.extract, i64* %newIndent.sroa.8.0.cast.2444.sroa_idx18, align 8, !dbg !2402
  %field.635 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.910, i64 0, i32 2, !dbg !2402
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.635, align 8, !dbg !2402
  %cast.2448 = bitcast %.command-line-arguments.token.0* %tmpv.910 to i8*, !dbg !2401
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.214, i8* nonnull %cast.2448), !dbg !2401
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2442, metadata !2365, metadata !DIExpression()), !dbg !2366
  ret %.command-line-arguments.token.0* %cast.2442, !dbg !2403

else.553:                                         ; preds = %else.551
  %icmp.631 = icmp eq i64 %call.210.fca.1.extract, 0, !dbg !2404
  %spec.select36 = and i1 %icmp.626.lcssa, %icmp.631
  call void @llvm.dbg.value(metadata %Element.0* %head.0.lcssa, metadata !2373, metadata !DIExpression()), !dbg !2374
  call void @llvm.dbg.value(metadata %Element.0* %head.0.lcssa, metadata !2373, metadata !DIExpression()), !dbg !2374
  br i1 %spec.select36, label %label.3.preheader, label %fallthrough.556

label.3.preheader:                                ; preds = %else.553
  br i1 %icmp.629, label %else.562, label %then.560.lr.ph

then.560.lr.ph:                                   ; preds = %label.3.preheader
  %cast.2461 = bitcast %.command-line-arguments.token.0* %tmpv.916 to i8*
  %field.638 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 2
  call void @llvm.dbg.value(metadata %Element.0* %head.0.lcssa, metadata !2373, metadata !DIExpression()), !dbg !2374
  %call.21547 = call %Element.0* @container_list.Element.Next(i8* nest undef, %Element.0* nonnull %head.0.lcssa), !dbg !2405
  call void @llvm.dbg.value(metadata %Element.0* %call.21547, metadata !2407, metadata !DIExpression()), !dbg !2408
  %.field.ld.15448 = load %List.0*, %List.0** %field.620, align 8, !dbg !2409
  %call.21649 = call { i64, i64 } @container_list.List.Remove(i8* nest undef, %List.0* %.field.ld.15448, %Element.0* nonnull %head.0.lcssa), !dbg !2410
  %icmp.63550 = icmp eq %Element.0* %call.21547, null, !dbg !2411
  %call.21751 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2412
  br i1 %icmp.63550, label %then.558, label %else.558

fallthrough.556:                                  ; preds = %else.553
  %icmp.638 = icmp ne %Element.0* %head.0.lcssa, null, !dbg !2413
  %tmpv.919.0.in = and i1 %icmp.628, %icmp.638
  br i1 %tmpv.919.0.in, label %then.562, label %else.562

then.558:                                         ; preds = %else.558, %then.560.lr.ph
  %call.217.lcssa = phi i8* [ %call.21751, %then.560.lr.ph ], [ %call.217, %else.558 ], !dbg !2412
  %cast.2453 = bitcast i8* %call.217.lcssa to %.command-line-arguments.token.0*, !dbg !2412
  %cast.2454 = bitcast %.command-line-arguments.token.0* %tmpv.914 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2454, i8* align 16 bitcast (%.command-line-arguments.token.0* @const.364 to i8*), i64 32, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.217.lcssa, i8* nonnull %cast.2454), !dbg !2414
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2453, metadata !2365, metadata !DIExpression()), !dbg !2366
  ret %.command-line-arguments.token.0* %cast.2453, !dbg !2415

else.558:                                         ; preds = %then.560.lr.ph, %else.558
  %call.21753 = phi i8* [ %call.217, %else.558 ], [ %call.21751, %then.560.lr.ph ]
  %call.21552 = phi %Element.0* [ %call.215, %else.558 ], [ %call.21547, %then.560.lr.ph ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2461, i8* align 16 bitcast (%.command-line-arguments.token.0* @const.364 to i8*), i64 32, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.21753, i8* nonnull %cast.2461), !dbg !2416
  %.field.ld.155 = load %List.0*, %List.0** %field.638, align 8, !dbg !2417
  %2 = ptrtoint i8* %call.21753 to i64, !dbg !2416
  %call.219 = call %Element.0* @container_list.List.PushBack(i8* nest undef, %List.0* %.field.ld.155, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.token to i64), i64 %2), !dbg !2418
  call void @llvm.dbg.value(metadata %Element.0* %call.21552, metadata !2373, metadata !DIExpression()), !dbg !2374
  %call.215 = call %Element.0* @container_list.Element.Next(i8* nest undef, %Element.0* nonnull %call.21552), !dbg !2405
  call void @llvm.dbg.value(metadata %Element.0* %call.215, metadata !2407, metadata !DIExpression()), !dbg !2408
  %.field.ld.154 = load %List.0*, %List.0** %field.620, align 8, !dbg !2409
  %call.216 = call { i64, i64 } @container_list.List.Remove(i8* nest undef, %List.0* %.field.ld.154, %Element.0* nonnull %call.21552), !dbg !2410
  %icmp.635 = icmp eq %Element.0* %call.215, null, !dbg !2411
  %call.217 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2412
  br i1 %icmp.635, label %then.558, label %else.558

then.562:                                         ; preds = %fallthrough.556
  %call.220 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2419
  %cast.2474 = bitcast { i8*, i64 }* %tmpv.921 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2474, i8* align 8 bitcast ({ i8*, i64 }* @const.375 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.220, i8* nonnull %cast.2474), !dbg !2419
  %3 = ptrtoint i8* %call.220 to i64, !dbg !2419
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %3), !dbg !2419
  unreachable

else.562:                                         ; preds = %label.3.preheader, %fallthrough.556
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2365, metadata !DIExpression()), !dbg !2366
  ret %.command-line-arguments.token.0* null, !dbg !2420
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanMixin(i8* nest nocapture readnone %nest.65, %.command-line-arguments.scanner.0* %s) #0 !dbg !2421 {
entry:
  %tmp.71 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.80 = alloca %IPST.5, align 8
  %tmpv.1156 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1159 = alloca { i8*, i64 }, align 8
  %tmpv.1163 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2422, metadata !DIExpression()), !dbg !2423
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2424, metadata !DIExpression()), !dbg !2425
  %icmp.782 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2426
  br i1 %icmp.782, label %then.636, label %else.636

then.636:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2426
  unreachable

else.636:                                         ; preds = %entry
  %command_line_arguments.rgxMixin.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxMixin, align 8, !dbg !2428
  %field.829 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2426
  %field0.161 = bitcast { i8*, i64 }* %field.829 to i64*, !dbg !2429
  %ld.285 = load i64, i64* %field0.161, align 8, !dbg !2429
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2429
  %ld.286 = load i64, i64* %0, align 8, !dbg !2429
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.80, i8* nest undef, %Regexp.0* %command_line_arguments.rgxMixin.ld.0, i64 %ld.285, i64 %ld.286), !dbg !2429
  %sm.sroa.0.0.cast.2843.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.80, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2843.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2430, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2431
  %sm.sroa.7.0.cast.2843.sroa_idx9 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.80, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2843.sroa_idx9, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2430, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2431
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.80, metadata !2430, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2431
  %icmp.789 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2432
  br i1 %icmp.789, label %else.637, label %then.637

then.637:                                         ; preds = %else.636
  %icmp.783 = icmp slt i64 %sm.sroa.7.0.copyload, 1, !dbg !2433
  br i1 %icmp.783, label %then.638, label %else.638

else.637:                                         ; preds = %else.636
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2424, metadata !DIExpression()), !dbg !2425
  ret %.command-line-arguments.token.0* null, !dbg !2434

then.638:                                         ; preds = %then.637
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2433
  unreachable

else.638:                                         ; preds = %then.637
  %field.832 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2435
  %.field.ld.172 = load i64, i64* %field.832, align 8, !dbg !2435
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.172), !dbg !2436
  %icmp.785 = icmp slt i64 %sm.sroa.7.0.copyload, 4, !dbg !2437
  br i1 %icmp.785, label %then.639, label %else.639

then.639:                                         ; preds = %else.638
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2437
  unreachable

else.639:                                         ; preds = %else.638
  %ptroff.73 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 3, !dbg !2437
  %cast.2844 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.71 to i8*, !dbg !2438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2844, i8* align 8 bitcast ({ i8*, i64 }* @const.362 to i8*), i64 16, i1 false), !dbg !2438
  %field.836 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.71, i64 0, i32 1, !dbg !2438
  %cast.2846 = bitcast { i8*, i64 }* %field.836 to i8*, !dbg !2438
  %cast.2847 = bitcast { i8*, i64 }* %ptroff.73 to i8*, !dbg !2438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2846, i8* align 8 %cast.2847, i64 16, i1 false), !dbg !2438
  %cast.2848 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1156 to i8*, !dbg !2438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2848, i8* nonnull align 8 %cast.2844, i64 32, i1 false), !dbg !2438
  %ptroff.74 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2439
  %cast.2850 = bitcast { i8*, i64 }* %tmpv.1159 to i8*
  %cast.2851 = bitcast { i8*, i64 }* %ptroff.74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2850, i8* align 8 %cast.2851, i64 16, i1 false)
  %call.258 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2848), !dbg !2438
  %call.259 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2440
  %cast.2856 = bitcast i8* %call.259 to %.command-line-arguments.token.0*, !dbg !2440
  %field.839 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1163, i64 0, i32 0, !dbg !2441
  store i32 -19, i32* %field.839, align 8, !dbg !2441
  %field.840 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1163, i64 0, i32 1, !dbg !2441
  %cast.2857 = bitcast { i8*, i64 }* %field.840 to i8*, !dbg !2441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2857, i8* nonnull align 8 %cast.2850, i64 16, i1 false), !dbg !2441
  %field.841 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1163, i64 0, i32 2, !dbg !2441
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.258, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.841, align 8, !dbg !2441
  %cast.2861 = bitcast %.command-line-arguments.token.0* %tmpv.1163 to i8*, !dbg !2440
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.259, i8* nonnull %cast.2861), !dbg !2440
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2856, metadata !2424, metadata !DIExpression()), !dbg !2425
  ret %.command-line-arguments.token.0* %cast.2856, !dbg !2442
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanMixinCall(i8* nest nocapture readnone %nest.66, %.command-line-arguments.scanner.0* %s) #0 !dbg !2443 {
entry:
  %tmp.72 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.81 = alloca %IPST.5, align 8
  %tmpv.1173 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1176 = alloca { i8*, i64 }, align 8
  %tmpv.1180 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2444, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2446, metadata !DIExpression()), !dbg !2447
  %icmp.792 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2448
  br i1 %icmp.792, label %then.641, label %else.641

then.641:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2448
  unreachable

else.641:                                         ; preds = %entry
  %command_line_arguments.rgxMixinCall.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxMixinCall, align 8, !dbg !2450
  %field.843 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2448
  %field0.163 = bitcast { i8*, i64 }* %field.843 to i64*, !dbg !2451
  %ld.289 = load i64, i64* %field0.163, align 8, !dbg !2451
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2451
  %ld.290 = load i64, i64* %0, align 8, !dbg !2451
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.81, i8* nest undef, %Regexp.0* %command_line_arguments.rgxMixinCall.ld.0, i64 %ld.289, i64 %ld.290), !dbg !2451
  %sm.sroa.0.0.cast.2870.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.81, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2870.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2452, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2453
  %sm.sroa.7.0.cast.2870.sroa_idx9 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.81, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2870.sroa_idx9, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2452, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2453
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.81, metadata !2452, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2453
  %icmp.799 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2454
  br i1 %icmp.799, label %else.642, label %then.642

then.642:                                         ; preds = %else.641
  %icmp.793 = icmp slt i64 %sm.sroa.7.0.copyload, 1, !dbg !2455
  br i1 %icmp.793, label %then.643, label %else.643

else.642:                                         ; preds = %else.641
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2446, metadata !DIExpression()), !dbg !2447
  ret %.command-line-arguments.token.0* null, !dbg !2456

then.643:                                         ; preds = %then.642
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2455
  unreachable

else.643:                                         ; preds = %then.642
  %field.846 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2457
  %.field.ld.173 = load i64, i64* %field.846, align 8, !dbg !2457
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.173), !dbg !2458
  %icmp.795 = icmp slt i64 %sm.sroa.7.0.copyload, 4, !dbg !2459
  br i1 %icmp.795, label %then.644, label %else.644

then.644:                                         ; preds = %else.643
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2459
  unreachable

else.644:                                         ; preds = %else.643
  %ptroff.76 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 3, !dbg !2459
  %cast.2871 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.72 to i8*, !dbg !2460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2871, i8* align 8 bitcast ({ i8*, i64 }* @const.362 to i8*), i64 16, i1 false), !dbg !2460
  %field.850 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.72, i64 0, i32 1, !dbg !2460
  %cast.2873 = bitcast { i8*, i64 }* %field.850 to i8*, !dbg !2460
  %cast.2874 = bitcast { i8*, i64 }* %ptroff.76 to i8*, !dbg !2460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2873, i8* align 8 %cast.2874, i64 16, i1 false), !dbg !2460
  %cast.2875 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1173 to i8*, !dbg !2460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2875, i8* nonnull align 8 %cast.2871, i64 32, i1 false), !dbg !2460
  %ptroff.77 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2461
  %cast.2877 = bitcast { i8*, i64 }* %tmpv.1176 to i8*
  %cast.2878 = bitcast { i8*, i64 }* %ptroff.77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2877, i8* align 8 %cast.2878, i64 16, i1 false)
  %call.261 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2875), !dbg !2460
  %call.262 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2462
  %cast.2883 = bitcast i8* %call.262 to %.command-line-arguments.token.0*, !dbg !2462
  %field.853 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1180, i64 0, i32 0, !dbg !2463
  store i32 -20, i32* %field.853, align 8, !dbg !2463
  %field.854 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1180, i64 0, i32 1, !dbg !2463
  %cast.2884 = bitcast { i8*, i64 }* %field.854 to i8*, !dbg !2463
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2884, i8* nonnull align 8 %cast.2877, i64 16, i1 false), !dbg !2463
  %field.855 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1180, i64 0, i32 2, !dbg !2463
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.261, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.855, align 8, !dbg !2463
  %cast.2888 = bitcast %.command-line-arguments.token.0* %tmpv.1180 to i8*, !dbg !2462
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.262, i8* nonnull %cast.2888), !dbg !2462
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2883, metadata !2446, metadata !DIExpression()), !dbg !2447
  ret %.command-line-arguments.token.0* %cast.2883, !dbg !2464
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanTag(i8* nest nocapture readnone %nest.64, %.command-line-arguments.scanner.0* %s) #0 !dbg !2465 {
entry:
  %sret.actual.79 = alloca %IPST.5, align 8
  %tmpv.1142 = alloca { i8*, i64 }, align 8
  %tmpv.1146 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2466, metadata !DIExpression()), !dbg !2467
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2468, metadata !DIExpression()), !dbg !2469
  %icmp.774 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2470
  br i1 %icmp.774, label %then.632, label %else.632

then.632:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2470
  unreachable

else.632:                                         ; preds = %entry
  %command_line_arguments.rgxTag.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxTag, align 8, !dbg !2472
  %field.819 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2470
  %field0.159 = bitcast { i8*, i64 }* %field.819 to i64*, !dbg !2473
  %ld.281 = load i64, i64* %field0.159, align 8, !dbg !2473
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2473
  %ld.282 = load i64, i64* %0, align 8, !dbg !2473
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.79, i8* nest undef, %Regexp.0* %command_line_arguments.rgxTag.ld.0, i64 %ld.281, i64 %ld.282), !dbg !2473
  %sm.sroa.0.0.cast.2823.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.79, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2823.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2474, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2475
  %sm.sroa.6.0.cast.2823.sroa_idx7 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.79, i64 0, i32 1
  %sm.sroa.6.0.copyload = load i64, i64* %sm.sroa.6.0.cast.2823.sroa_idx7, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.6.0.copyload, metadata !2474, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2475
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.79, metadata !2474, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2475
  %icmp.779 = icmp eq i64 %sm.sroa.6.0.copyload, 0, !dbg !2476
  br i1 %icmp.779, label %else.633, label %then.633

then.633:                                         ; preds = %else.632
  %icmp.775 = icmp slt i64 %sm.sroa.6.0.copyload, 1, !dbg !2477
  br i1 %icmp.775, label %then.634, label %else.634

else.633:                                         ; preds = %else.632
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2468, metadata !DIExpression()), !dbg !2469
  ret %.command-line-arguments.token.0* null, !dbg !2478

then.634:                                         ; preds = %then.633
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2477
  unreachable

else.634:                                         ; preds = %then.633
  %field.822 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2479
  %.field.ld.171 = load i64, i64* %field.822, align 8, !dbg !2479
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.171), !dbg !2480
  %icmp.777 = icmp eq i64 %sm.sroa.6.0.copyload, 1, !dbg !2481
  br i1 %icmp.777, label %then.635, label %else.635

then.635:                                         ; preds = %else.634
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2481
  unreachable

else.635:                                         ; preds = %else.634
  %ptroff.71 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2481
  %cast.2824 = bitcast { i8*, i64 }* %tmpv.1142 to i8*
  %cast.2825 = bitcast { i8*, i64 }* %ptroff.71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2824, i8* align 8 %cast.2825, i64 16, i1 false)
  %call.256 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2482
  %cast.2828 = bitcast i8* %call.256 to %.command-line-arguments.token.0*, !dbg !2482
  %field.825 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1146, i64 0, i32 0, !dbg !2483
  store i32 -9, i32* %field.825, align 8, !dbg !2483
  %field.826 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1146, i64 0, i32 1, !dbg !2483
  %cast.2830 = bitcast { i8*, i64 }* %field.826 to i8*, !dbg !2483
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2830, i8* nonnull align 8 %cast.2824, i64 16, i1 false), !dbg !2483
  %field.827 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1146, i64 0, i32 2, !dbg !2483
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.827, align 8, !dbg !2483
  %cast.2834 = bitcast %.command-line-arguments.token.0* %tmpv.1146 to i8*, !dbg !2482
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.256, i8* nonnull %cast.2834), !dbg !2482
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2828, metadata !2468, metadata !DIExpression()), !dbg !2469
  ret %.command-line-arguments.token.0* %cast.2828, !dbg !2484
}

define %.command-line-arguments.token.0* @command_line_arguments.scanner.scanText(i8* nest nocapture readnone %nest.67, %.command-line-arguments.scanner.0* %s) #0 !dbg !2485 {
entry:
  %tmp.73 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.82 = alloca %IPST.5, align 8
  %mode = alloca { i8*, i64 }, align 8
  %tmpv.1191 = alloca [1 x { { i8*, i64 }, { i8*, i64 } }], align 8
  %tmpv.1193 = alloca { i8*, i64 }, align 8
  %tmpv.1197 = alloca %.command-line-arguments.token.0, align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* %s, metadata !2486, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2488, metadata !DIExpression()), !dbg !2489
  %icmp.802 = icmp eq %.command-line-arguments.scanner.0* %s, null, !dbg !2490
  br i1 %icmp.802, label %then.646, label %else.646

then.646:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2490
  unreachable

else.646:                                         ; preds = %entry
  %command_line_arguments.rgxText.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.rgxText, align 8, !dbg !2492
  %field.857 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, !dbg !2490
  %field0.165 = bitcast { i8*, i64 }* %field.857 to i64*, !dbg !2493
  %ld.293 = load i64, i64* %field0.165, align 8, !dbg !2493
  %0 = getelementptr inbounds %.command-line-arguments.scanner.0, %.command-line-arguments.scanner.0* %s, i64 0, i32 4, i32 1, !dbg !2493
  %ld.294 = load i64, i64* %0, align 8, !dbg !2493
  call void @regexp.Regexp.FindStringSubmatch(%IPST.5* nonnull sret %sret.actual.82, i8* nest undef, %Regexp.0* %command_line_arguments.rgxText.ld.0, i64 %ld.293, i64 %ld.294), !dbg !2493
  %sm.sroa.0.0.cast.2897.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.82, i64 0, i32 0
  %sm.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %sm.sroa.0.0.cast.2897.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %sm.sroa.0.0.copyload, metadata !2494, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2495
  %sm.sroa.7.0.cast.2897.sroa_idx10 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.82, i64 0, i32 1
  %sm.sroa.7.0.copyload = load i64, i64* %sm.sroa.7.0.cast.2897.sroa_idx10, align 8
  call void @llvm.dbg.value(metadata i64 %sm.sroa.7.0.copyload, metadata !2494, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2495
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.82, metadata !2494, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2495
  %icmp.810 = icmp eq i64 %sm.sroa.7.0.copyload, 0, !dbg !2496
  br i1 %icmp.810, label %else.647, label %then.647

then.647:                                         ; preds = %else.646
  %mode.0.sroa_cast = bitcast { i8*, i64 }* %mode to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %mode.0.sroa_cast)
  %icmp.803 = icmp slt i64 %sm.sroa.7.0.copyload, 1, !dbg !2497
  br i1 %icmp.803, label %then.648, label %else.648

else.647:                                         ; preds = %else.646
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* null, metadata !2488, metadata !DIExpression()), !dbg !2489
  ret %.command-line-arguments.token.0* null, !dbg !2499

then.648:                                         ; preds = %then.647
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2497
  unreachable

else.648:                                         ; preds = %then.647
  %field.860 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 0, i32 1, !dbg !2500
  %.field.ld.174 = load i64, i64* %field.860, align 8, !dbg !2500
  call void @command_line_arguments.scanner.consume(i8* nest undef, %.command-line-arguments.scanner.0* nonnull %s, i64 %.field.ld.174), !dbg !2501
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %mode.0.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.417 to i8*), i64 16, i1 false)
  %icmp.805 = icmp eq i64 %sm.sroa.7.0.copyload, 1, !dbg !2502
  br i1 %icmp.805, label %then.649, label %else.649

then.649:                                         ; preds = %else.648
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2502
  unreachable

else.649:                                         ; preds = %else.648
  %ptroff.79 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, !dbg !2502
  %field0.166 = bitcast { i8*, i64 }* %ptroff.79 to i64*, !dbg !2503
  %ld.295 = load i64, i64* %field0.166, align 8, !dbg !2503
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 1, i32 1, !dbg !2503
  %ld.296 = load i64, i64* %1, align 8, !dbg !2503
  %call.264 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.295, i64 %ld.296, i64 ptrtoint ([2 x i8]* @const.418 to i64), i64 1), !dbg !2503
  %icmp.807 = icmp eq i8 %call.264, 1, !dbg !2503
  br i1 %icmp.807, label %then.650, label %fallthrough.650

then.650:                                         ; preds = %else.649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %mode.0.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.361 to i8*), i64 16, i1 false), !dbg !2504
  br label %fallthrough.650

fallthrough.650:                                  ; preds = %else.649, %then.650
  %cast.2904 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.73 to i8*, !dbg !2505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2904, i8* align 8 bitcast ({ i8*, i64 }* @const.339 to i8*), i64 16, i1 false), !dbg !2505
  %field.864 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.73, i64 0, i32 1, !dbg !2505
  %cast.2906 = bitcast { i8*, i64 }* %field.864 to i8*, !dbg !2505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2906, i8* nonnull align 8 %mode.0.sroa_cast, i64 16, i1 false), !dbg !2505
  %cast.2908 = bitcast [1 x { { i8*, i64 }, { i8*, i64 } }]* %tmpv.1191 to i8*, !dbg !2505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2908, i8* nonnull align 8 %cast.2904, i64 32, i1 false), !dbg !2505
  %icmp.808 = icmp slt i64 %sm.sroa.7.0.copyload, 3, !dbg !2506
  br i1 %icmp.808, label %then.651, label %else.651

then.651:                                         ; preds = %fallthrough.650
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2506
  unreachable

else.651:                                         ; preds = %fallthrough.650
  %ptroff.80 = getelementptr { i8*, i64 }, { i8*, i64 }* %sm.sroa.0.0.copyload, i64 2, !dbg !2506
  %cast.2910 = bitcast { i8*, i64 }* %tmpv.1193 to i8*
  %cast.2911 = bitcast { i8*, i64 }* %ptroff.80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2910, i8* align 8 %cast.2911, i64 16, i1 false)
  %call.265 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 1, i64 32, i64 16, i8* nonnull %cast.2908), !dbg !2505
  %call.266 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0)), !dbg !2507
  %cast.2916 = bitcast i8* %call.266 to %.command-line-arguments.token.0*, !dbg !2507
  %field.867 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1197, i64 0, i32 0, !dbg !2508
  store i32 -10, i32* %field.867, align 8, !dbg !2508
  %field.868 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1197, i64 0, i32 1, !dbg !2508
  %cast.2917 = bitcast { i8*, i64 }* %field.868 to i8*, !dbg !2508
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2917, i8* nonnull align 8 %cast.2910, i64 16, i1 false), !dbg !2508
  %field.869 = getelementptr inbounds %.command-line-arguments.token.0, %.command-line-arguments.token.0* %tmpv.1197, i64 0, i32 2, !dbg !2508
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.265, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.869, align 8, !dbg !2508
  %cast.2921 = bitcast %.command-line-arguments.token.0* %tmpv.1197 to i8*, !dbg !2507
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.token..d, i64 0, i32 0), i8* %call.266, i8* nonnull %cast.2921), !dbg !2507
  call void @llvm.dbg.value(metadata %.command-line-arguments.token.0* %cast.2916, metadata !2488, metadata !DIExpression()), !dbg !2489
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %mode.0.sroa_cast), !dbg !2509
  ret %.command-line-arguments.token.0* %cast.2916, !dbg !2509
}

define i64 @command_line_arguments.command_line_arguments.scanner..hash(i8* nest nocapture readnone %nest.105, i8* %key, i64 %seed) #0 !dbg !2510 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !2511, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata i64 %seed, metadata !2513, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata i64 0, metadata !2514, metadata !DIExpression()), !dbg !2512
  %pticast.33 = ptrtoint i8* %key to i64, !dbg !2512
  %call.343 = call i64 @runtime.memhash64(i8* nest undef, i8* %key, i64 %seed), !dbg !2512
  %add.63 = add i64 %pticast.33, 8, !dbg !2512
  %itpcast.32 = inttoptr i64 %add.63 to i8*, !dbg !2512
  %call.344 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.32, i64 %call.343), !dbg !2512
  %add.64 = add i64 %pticast.33, 16, !dbg !2512
  %itpcast.33 = inttoptr i64 %add.64 to i8*, !dbg !2512
  %call.345 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.33, i64 %call.344), !dbg !2512
  %add.65 = add i64 %pticast.33, 24, !dbg !2512
  %itpcast.34 = inttoptr i64 %add.65 to i8*, !dbg !2512
  %call.346 = call i64 @runtime.memhash32(i8* nest undef, i8* %itpcast.34, i64 %call.345), !dbg !2512
  %add.66 = add i64 %pticast.33, 32, !dbg !2512
  %itpcast.35 = inttoptr i64 %add.66 to i8*, !dbg !2512
  %call.347 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.35, i64 %call.346), !dbg !2512
  %add.67 = add i64 %pticast.33, 48, !dbg !2512
  %itpcast.36 = inttoptr i64 %add.67 to i8*, !dbg !2512
  %call.348 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.36, i64 %call.347), !dbg !2512
  %add.68 = add i64 %pticast.33, 56, !dbg !2512
  %itpcast.37 = inttoptr i64 %add.68 to i8*, !dbg !2512
  %call.349 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.37, i64 %call.348), !dbg !2512
  %add.69 = add i64 %pticast.33, 64, !dbg !2512
  %itpcast.38 = inttoptr i64 %add.69 to i8*, !dbg !2512
  %call.350 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.38, i64 %call.349), !dbg !2512
  %add.70 = add i64 %pticast.33, 72, !dbg !2512
  %itpcast.39 = inttoptr i64 %add.70 to i8*, !dbg !2512
  %call.351 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.39, i64 %call.350), !dbg !2512
  %add.71 = add i64 %pticast.33, 80, !dbg !2512
  %itpcast.40 = inttoptr i64 %add.71 to i8*, !dbg !2512
  %call.352 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.40, i64 %call.351), !dbg !2512
  %add.72 = add i64 %pticast.33, 88, !dbg !2512
  %itpcast.41 = inttoptr i64 %add.72 to i8*, !dbg !2512
  %call.353 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.41, i64 %call.352), !dbg !2512
  call void @llvm.dbg.value(metadata i64 %call.353, metadata !2514, metadata !DIExpression()), !dbg !2512
  ret i64 %call.353, !dbg !2512
}

define i8 @command_line_arguments.command_line_arguments.scanner..eq(i8* nest nocapture readnone %nest.106, i8* readonly %key1, i8* readonly %key2) #0 !dbg !2515 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !2516, metadata !DIExpression()), !dbg !2517
  call void @llvm.dbg.value(metadata i8* %key2, metadata !2518, metadata !DIExpression()), !dbg !2517
  call void @llvm.dbg.value(metadata i8 0, metadata !2519, metadata !DIExpression()), !dbg !2517
  %icmp.999 = icmp eq i8* %key1, null, !dbg !2517
  br i1 %icmp.999, label %then.808, label %else.808

then.808:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2517
  unreachable

else.808:                                         ; preds = %entry
  %icmp.1000 = icmp eq i8* %key2, null, !dbg !2517
  br i1 %icmp.1000, label %then.809, label %else.809

then.809:                                         ; preds = %else.808
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2517
  unreachable

else.809:                                         ; preds = %else.808
  %field.1087 = bitcast i8* %key1 to %Reader.1**, !dbg !2517
  %.field.ld.204 = load %Reader.1*, %Reader.1** %field.1087, align 8, !dbg !2517
  %field.1088 = bitcast i8* %key2 to %Reader.1**, !dbg !2517
  %.field.ld.205 = load %Reader.1*, %Reader.1** %field.1088, align 8, !dbg !2517
  %icmp.1001 = icmp eq %Reader.1* %.field.ld.204, %.field.ld.205, !dbg !2517
  br i1 %icmp.1001, label %else.812, label %then.810

then.810:                                         ; preds = %else.836, %else.833, %else.830, %else.827, %else.824, %else.821, %else.818, %else.815, %else.812, %else.809
  call void @llvm.dbg.value(metadata i8 0, metadata !2519, metadata !DIExpression()), !dbg !2517
  ret i8 0, !dbg !2517

else.812:                                         ; preds = %else.809
  %field.1089 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !2517
  %0 = bitcast i8* %field.1089 to %List.0**, !dbg !2517
  %.field.ld.206 = load %List.0*, %List.0** %0, align 8, !dbg !2517
  %field.1090 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !2517
  %1 = bitcast i8* %field.1090 to %List.0**, !dbg !2517
  %.field.ld.207 = load %List.0*, %List.0** %1, align 8, !dbg !2517
  %icmp.1004 = icmp eq %List.0* %.field.ld.206, %.field.ld.207, !dbg !2517
  br i1 %icmp.1004, label %else.815, label %then.810

else.815:                                         ; preds = %else.812
  %field.1091 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !2517
  %2 = bitcast i8* %field.1091 to %List.0**, !dbg !2517
  %.field.ld.208 = load %List.0*, %List.0** %2, align 8, !dbg !2517
  %field.1092 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !2517
  %3 = bitcast i8* %field.1092 to %List.0**, !dbg !2517
  %.field.ld.209 = load %List.0*, %List.0** %3, align 8, !dbg !2517
  %icmp.1007 = icmp eq %List.0* %.field.ld.208, %.field.ld.209, !dbg !2517
  br i1 %icmp.1007, label %else.818, label %then.810

else.818:                                         ; preds = %else.815
  %field.1093 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !2517
  %4 = bitcast i8* %field.1093 to i32*, !dbg !2517
  %.field.ld.210 = load i32, i32* %4, align 4, !dbg !2517
  %field.1094 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !2517
  %5 = bitcast i8* %field.1094 to i32*, !dbg !2517
  %.field.ld.211 = load i32, i32* %5, align 4, !dbg !2517
  %icmp.1010 = icmp eq i32 %.field.ld.210, %.field.ld.211, !dbg !2517
  br i1 %icmp.1010, label %else.821, label %then.810

else.821:                                         ; preds = %else.818
  %field.1095 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !2517
  %field.1096 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !2517
  %field0.231 = bitcast i8* %field.1095 to i64*, !dbg !2517
  %ld.421 = load i64, i64* %field0.231, align 8, !dbg !2517
  %field1.231 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !2517
  %6 = bitcast i8* %field1.231 to i64*, !dbg !2517
  %ld.422 = load i64, i64* %6, align 8, !dbg !2517
  %field0.232 = bitcast i8* %field.1096 to i64*, !dbg !2517
  %ld.423 = load i64, i64* %field0.232, align 8, !dbg !2517
  %field1.232 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !2517
  %7 = bitcast i8* %field1.232 to i64*, !dbg !2517
  %ld.424 = load i64, i64* %7, align 8, !dbg !2517
  %call.354 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.421, i64 %ld.422, i64 %ld.423, i64 %ld.424), !dbg !2517
  %icmp.1013 = icmp eq i8 %call.354, 1, !dbg !2517
  br i1 %icmp.1013, label %else.824, label %then.810

else.824:                                         ; preds = %else.821
  %field.1097 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !2517
  %8 = bitcast i8* %field.1097 to i64*, !dbg !2517
  %.field.ld.212 = load i64, i64* %8, align 8, !dbg !2517
  %field.1098 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !2517
  %9 = bitcast i8* %field.1098 to i64*, !dbg !2517
  %.field.ld.213 = load i64, i64* %9, align 8, !dbg !2517
  %icmp.1016 = icmp eq i64 %.field.ld.212, %.field.ld.213, !dbg !2517
  br i1 %icmp.1016, label %else.827, label %then.810

else.827:                                         ; preds = %else.824
  %field.1099 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !2517
  %10 = bitcast i8* %field.1099 to i64*, !dbg !2517
  %.field.ld.214 = load i64, i64* %10, align 8, !dbg !2517
  %field.1100 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !2517
  %11 = bitcast i8* %field.1100 to i64*, !dbg !2517
  %.field.ld.215 = load i64, i64* %11, align 8, !dbg !2517
  %icmp.1019 = icmp eq i64 %.field.ld.214, %.field.ld.215, !dbg !2517
  br i1 %icmp.1019, label %else.830, label %then.810

else.830:                                         ; preds = %else.827
  %field.1101 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !2517
  %12 = bitcast i8* %field.1101 to i64*, !dbg !2517
  %.field.ld.216 = load i64, i64* %12, align 8, !dbg !2517
  %field.1102 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !2517
  %13 = bitcast i8* %field.1102 to i64*, !dbg !2517
  %.field.ld.217 = load i64, i64* %13, align 8, !dbg !2517
  %icmp.1022 = icmp eq i64 %.field.ld.216, %.field.ld.217, !dbg !2517
  br i1 %icmp.1022, label %else.833, label %then.810

else.833:                                         ; preds = %else.830
  %field.1103 = getelementptr inbounds i8, i8* %key1, i64 72, !dbg !2517
  %14 = bitcast i8* %field.1103 to i64*, !dbg !2517
  %.field.ld.218 = load i64, i64* %14, align 8, !dbg !2517
  %field.1104 = getelementptr inbounds i8, i8* %key2, i64 72, !dbg !2517
  %15 = bitcast i8* %field.1104 to i64*, !dbg !2517
  %.field.ld.219 = load i64, i64* %15, align 8, !dbg !2517
  %icmp.1025 = icmp eq i64 %.field.ld.218, %.field.ld.219, !dbg !2517
  br i1 %icmp.1025, label %else.836, label %then.810

else.836:                                         ; preds = %else.833
  %field.1105 = getelementptr inbounds i8, i8* %key1, i64 80, !dbg !2517
  %16 = bitcast i8* %field.1105 to i64*, !dbg !2517
  %.field.ld.220 = load i64, i64* %16, align 8, !dbg !2517
  %field.1106 = getelementptr inbounds i8, i8* %key2, i64 80, !dbg !2517
  %17 = bitcast i8* %field.1106 to i64*, !dbg !2517
  %.field.ld.221 = load i64, i64* %17, align 8, !dbg !2517
  %icmp.1028 = icmp eq i64 %.field.ld.220, %.field.ld.221, !dbg !2517
  br i1 %icmp.1028, label %else.839, label %then.810

else.839:                                         ; preds = %else.836
  %18 = getelementptr inbounds i8, i8* %key1, i64 88, !dbg !2517
  %.field.ld.222 = load i8, i8* %18, align 1, !dbg !2517
  %19 = getelementptr inbounds i8, i8* %key2, i64 88, !dbg !2517
  %.field.ld.223 = load i8, i8* %19, align 1, !dbg !2517
  %icmp.1031 = icmp eq i8 %.field.ld.222, %.field.ld.223, !dbg !2517
  %spec.select = zext i1 %icmp.1031 to i8
  ret i8 %spec.select
}

define internal fastcc %Parser.0* @command_line_arguments.newParser(i64 %rdr.chunk1) unnamed_addr #0 !dbg !2520 {
entry:
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader to i64), metadata !2523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2524
  call void @llvm.dbg.value(metadata i64 %rdr.chunk1, metadata !2523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2524
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2525, metadata !DIExpression()), !dbg !2526
  %call.29 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Parser..d, i64 0, i32 0)), !dbg !2527
  %cast.952 = bitcast i8* %call.29 to %Parser.0*, !dbg !2527
  call void @llvm.dbg.value(metadata %Parser.0* %cast.952, metadata !2529, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader to i64), metadata !2531, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2535
  call void @llvm.dbg.value(metadata i64 %rdr.chunk1, metadata !2531, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2535
  call void @llvm.dbg.value(metadata %.command-line-arguments.scanner.0* null, metadata !2537, metadata !DIExpression()), !dbg !2538
  %call.165.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.scanner..d, i64 0, i32 0)), !dbg !2539
  call void @llvm.dbg.value(metadata i8* %call.165.i, metadata !2541, metadata !DIExpression()), !dbg !2542
  %call.166.i = call %Reader.1* @bufio.NewReader(i8* nest undef, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader to i64), i64 %rdr.chunk1), !dbg !2543
  %icmp.557.i = icmp eq i8* %call.165.i, null, !dbg !2544
  br i1 %icmp.557.i, label %then.484.i, label %else.484.i

then.484.i:                                       ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2544
  unreachable

else.484.i:                                       ; preds = %entry
  %runtime.writeBarrier.ld.73.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2545
  %icmp.559.i = icmp eq i32 %runtime.writeBarrier.ld.73.i, 0, !dbg !2545
  br i1 %icmp.559.i, label %else.486.i, label %else.485.i

fallthrough.485.i:                                ; preds = %else.486.i, %else.485.i
  %call.167.i = call %List.0* @container_list.New(i8* nest undef), !dbg !2546
  %field.573.i = getelementptr inbounds i8, i8* %call.165.i, i64 8, !dbg !2547
  %runtime.writeBarrier.ld.74.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2548
  %icmp.562.i = icmp eq i32 %runtime.writeBarrier.ld.74.i, 0, !dbg !2548
  br i1 %icmp.562.i, label %else.489.i, label %else.488.i

else.485.i:                                       ; preds = %else.484.i
  %cast.2235.i = bitcast %Reader.1* %call.166.i to i8*, !dbg !2545
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %call.165.i, i8* %cast.2235.i), !dbg !2545
  br label %fallthrough.485.i

else.486.i:                                       ; preds = %else.484.i
  %field.572.i = bitcast i8* %call.165.i to %Reader.1**, !dbg !2544
  store %Reader.1* %call.166.i, %Reader.1** %field.572.i, align 8, !dbg !2545
  br label %fallthrough.485.i

fallthrough.488.i:                                ; preds = %else.489.i, %else.488.i
  %call.168.i = call %List.0* @container_list.New(i8* nest undef), !dbg !2549
  %field.574.i = getelementptr inbounds i8, i8* %call.165.i, i64 16, !dbg !2550
  %runtime.writeBarrier.ld.75.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2551
  %icmp.565.i = icmp eq i32 %runtime.writeBarrier.ld.75.i, 0, !dbg !2551
  br i1 %icmp.565.i, label %else.492.i, label %else.491.i

else.488.i:                                       ; preds = %fallthrough.485.i
  %cast.2239.i = bitcast %List.0* %call.167.i to i8*, !dbg !2548
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.573.i, i8* %cast.2239.i), !dbg !2548
  br label %fallthrough.488.i

else.489.i:                                       ; preds = %fallthrough.485.i
  %0 = bitcast i8* %field.573.i to %List.0**, !dbg !2547
  store %List.0* %call.167.i, %List.0** %0, align 8, !dbg !2548
  br label %fallthrough.488.i

else.491.i:                                       ; preds = %fallthrough.488.i
  %cast.2243.i = bitcast %List.0* %call.168.i to i8*, !dbg !2551
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.574.i, i8* %cast.2243.i), !dbg !2551
  br label %command_line_arguments.newScanner.exit

else.492.i:                                       ; preds = %fallthrough.488.i
  %1 = bitcast i8* %field.574.i to %List.0**, !dbg !2550
  store %List.0* %call.168.i, %List.0** %1, align 8, !dbg !2551
  br label %command_line_arguments.newScanner.exit

command_line_arguments.newScanner.exit:           ; preds = %else.491.i, %else.492.i
  %field.575.i = getelementptr inbounds i8, i8* %call.165.i, i64 24, !dbg !2552
  %2 = bitcast i8* %field.575.i to i32*, !dbg !2552
  store i32 0, i32* %2, align 4, !dbg !2553
  %field.576.i = getelementptr inbounds i8, i8* %call.165.i, i64 48, !dbg !2554
  %3 = bitcast i8* %field.576.i to i64*, !dbg !2554
  store i64 -1, i64* %3, align 8, !dbg !2555
  %field.577.i = getelementptr inbounds i8, i8* %call.165.i, i64 56, !dbg !2556
  %4 = bitcast i8* %field.577.i to i64*, !dbg !2556
  store i64 0, i64* %4, align 8, !dbg !2557
  call void @llvm.dbg.value(metadata i8* %call.165.i, metadata !2537, metadata !DIExpression()), !dbg !2538
  %icmp.163 = icmp eq i8* %call.29, null, !dbg !2558
  br i1 %icmp.163, label %then.131, label %else.131

then.131:                                         ; preds = %command_line_arguments.newScanner.exit
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2558
  unreachable

else.131:                                         ; preds = %command_line_arguments.newScanner.exit
  %runtime.writeBarrier.ld.25 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2559
  %icmp.165 = icmp eq i32 %runtime.writeBarrier.ld.25, 0, !dbg !2559
  br i1 %icmp.165, label %else.133, label %else.132

fallthrough.132:                                  ; preds = %else.132, %else.133
  %call.31 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !2560
  %field.135 = getelementptr inbounds i8, i8* %call.29, i64 48, !dbg !2561
  %runtime.writeBarrier.ld.26 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2562
  %icmp.168 = icmp eq i32 %runtime.writeBarrier.ld.26, 0, !dbg !2562
  br i1 %icmp.168, label %else.136, label %else.135

else.132:                                         ; preds = %else.131
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %call.29, i8* nonnull %call.165.i), !dbg !2559
  br label %fallthrough.132

else.133:                                         ; preds = %else.131
  %5 = bitcast i8* %call.29 to i8**, !dbg !2559
  store i8* %call.165.i, i8** %5, align 8, !dbg !2559
  br label %fallthrough.132

fallthrough.135:                                  ; preds = %else.135, %else.136
  call void @llvm.dbg.value(metadata %Parser.0* %cast.952, metadata !2525, metadata !DIExpression()), !dbg !2526
  ret %Parser.0* %cast.952, !dbg !2563

else.135:                                         ; preds = %fallthrough.132
  %cast.961 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.31 to i8*, !dbg !2562
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.135, i8* %cast.961), !dbg !2562
  br label %fallthrough.135

else.136:                                         ; preds = %fallthrough.132
  %6 = bitcast i8* %field.135 to { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, !dbg !2561
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.31, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %6, align 8, !dbg !2562
  br label %fallthrough.135
}

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8*) local_unnamed_addr #0

define void @command_line_arguments.StringParser({ %Parser.0*, %error.0 }* nocapture sret %sret.formal.1, i8* nest nocapture readnone %nest.20, i64 %input.chunk0, i64 %input.chunk1) #0 !dbg !2564 {
entry:
  %sret.actual.13 = alloca %IPST.2, align 8
  call void @llvm.dbg.value(metadata i64 %input.chunk0, metadata !2571, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2572
  call void @llvm.dbg.value(metadata i64 %input.chunk1, metadata !2571, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2572
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2573, metadata !DIExpression()), !dbg !2574
  call void @runtime.stringtoslicebyte(%IPST.2* nonnull sret %sret.actual.13, i8* nest undef, i8* null, i64 %input.chunk0, i64 %input.chunk1), !dbg !2575
  %cast.965 = bitcast %IPST.2* %sret.actual.13 to { i8*, i64, i64 }*, !dbg !2575
  %call.32 = call %Reader.2* @bytes.NewReader(i8* nest undef, { i8*, i64, i64 }* byval nonnull %cast.965), !dbg !2576
  %0 = ptrtoint %Reader.2* %call.32 to i64, !dbg !2576
  %call.33 = call fastcc %Parser.0* @command_line_arguments.newParser(i64 %0), !dbg !2577
  call void @llvm.dbg.value(metadata %Parser.0* %call.33, metadata !2573, metadata !DIExpression()), !dbg !2574
  %tmp.9.sroa.0.0.cast.976.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.1, i64 0, i32 0, !dbg !2578
  store %Parser.0* %call.33, %Parser.0** %tmp.9.sroa.0.0.cast.976.sroa_idx, align 8, !dbg !2578
  %tmp.9.sroa.2.0.cast.976.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !2578
  %tmp.9.sroa.2.0.cast.976.sroa_cast = bitcast %error.0* %tmp.9.sroa.2.0.cast.976.sroa_idx to i8*, !dbg !2578
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmp.9.sroa.2.0.cast.976.sroa_cast, i8 0, i64 16, i1 false), !dbg !2578
  ret void, !dbg !2578
}

declare void @runtime.stringtoslicebyte(%IPST.2*, i8*, i8*, i64, i64) local_unnamed_addr #0

declare %Reader.2* @bytes.NewReader(i8*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare void @bytes.Reader.Read({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*) #0

define void @command_line_arguments.ByteParser({ %Parser.0*, %error.0 }* nocapture sret %sret.formal.2, i8* nest nocapture readnone %nest.21, { i8*, i64, i64 }* byval %input) #0 !dbg !2579 {
entry:
  call void @llvm.dbg.declare(metadata { i8*, i64, i64 }* %input, metadata !2582, metadata !DIExpression()), !dbg !2583
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2584, metadata !DIExpression()), !dbg !2585
  %call.34 = call %Reader.2* @bytes.NewReader(i8* nest undef, { i8*, i64, i64 }* byval nonnull %input), !dbg !2586
  %0 = ptrtoint %Reader.2* %call.34 to i64, !dbg !2586
  %call.35 = call fastcc %Parser.0* @command_line_arguments.newParser(i64 %0), !dbg !2587
  call void @llvm.dbg.value(metadata %Parser.0* %call.35, metadata !2584, metadata !DIExpression()), !dbg !2585
  %tmp.11.sroa.0.0.cast.990.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !2588
  store %Parser.0* %call.35, %Parser.0** %tmp.11.sroa.0.0.cast.990.sroa_idx, align 8, !dbg !2588
  %tmp.11.sroa.2.0.cast.990.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !2588
  %tmp.11.sroa.2.0.cast.990.sroa_cast = bitcast %error.0* %tmp.11.sroa.2.0.cast.990.sroa_idx to i8*, !dbg !2588
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmp.11.sroa.2.0.cast.990.sroa_cast, i8 0, i64 16, i1 false), !dbg !2588
  ret void, !dbg !2588
}

define void @command_line_arguments.FileParser({ %Parser.0*, %error.0 }* nocapture sret %sret.formal.3, i8* nest nocapture readnone %nest.24, i64 %filename.chunk0, i64 %filename.chunk1) #0 !dbg !2589 {
entry:
  %filename.addr = alloca { i8*, i64 }, align 8
  %data = alloca { i8*, i64, i64 }, align 8
  %sret.actual.14 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %field0.47 = bitcast { i8*, i64 }* %filename.addr to i64*
  store i64 %filename.chunk0, i64* %field0.47, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %filename.addr, i64 0, i32 1
  store i64 %filename.chunk1, i64* %0, align 8
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2590, metadata !DIExpression()), !dbg !2591
  %1 = bitcast { i8*, i64, i64 }* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  call void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.14, i8* nest undef, i64 %filename.chunk0, i64 %filename.chunk1), !dbg !2592
  %tmpv.219.sroa.0.0.cast.1013.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.14 to i8*, !dbg !2592
  %tmpv.219.sroa.3.0.cast.1013.sroa_idx16 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.14, i64 0, i32 1, i32 0, !dbg !2592
  %tmpv.219.sroa.3.0.copyload17 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.219.sroa.3.0.cast.1013.sroa_idx16, align 8, !dbg !2592
  %tmpv.219.sroa.4.0.cast.1013.sroa_idx18 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.14, i64 0, i32 1, i32 1, !dbg !2592
  %2 = bitcast i8** %tmpv.219.sroa.4.0.cast.1013.sroa_idx18 to i64*, !dbg !2592
  %tmpv.219.sroa.4.0.copyload1939 = load i64, i64* %2, align 8, !dbg !2592
  %data40 = bitcast { i8*, i64, i64 }* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %data40, i8* nonnull align 8 %tmpv.219.sroa.0.0.cast.1013.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.219.sroa.3.0.copyload17, metadata !2594, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2595
  call void @llvm.dbg.value(metadata i8** %tmpv.219.sroa.4.0.cast.1013.sroa_idx18, metadata !2594, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2595
  %icmp.175 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.219.sroa.3.0.copyload17, null, !dbg !2596
  br i1 %icmp.175, label %else.143, label %then.143

then.143:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2590, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.219.sroa.3.0.copyload17, metadata !2597, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2598
  call void @llvm.dbg.value(metadata i8** %tmpv.219.sroa.4.0.cast.1013.sroa_idx18, metadata !2597, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2598
  %tmp.12.sroa.0.0.cast.1029.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.3, i64 0, i32 0, !dbg !2599
  store %Parser.0* null, %Parser.0** %tmp.12.sroa.0.0.cast.1029.sroa_idx, align 8, !dbg !2599
  %tmp.12.sroa.2.0.cast.1029.sroa_idx35 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 0, !dbg !2599
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.219.sroa.3.0.copyload17, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.12.sroa.2.0.cast.1029.sroa_idx35, align 8, !dbg !2599
  %tmp.12.sroa.3.0.cast.1029.sroa_idx36 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 1, !dbg !2599
  %3 = bitcast i8** %tmp.12.sroa.3.0.cast.1029.sroa_idx36 to i64*, !dbg !2599
  store i64 %tmpv.219.sroa.4.0.copyload1939, i64* %3, align 8, !dbg !2599
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !2599
  ret void, !dbg !2599

else.143:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %data, metadata !2600, metadata !DIExpression(DW_OP_deref)), !dbg !2595
  %call.36 = call %Reader.2* @bytes.NewReader(i8* nest undef, { i8*, i64, i64 }* byval nonnull %data), !dbg !2601
  %4 = ptrtoint %Reader.2* %call.36 to i64, !dbg !2601
  %call.37 = call fastcc %Parser.0* @command_line_arguments.newParser(i64 %4), !dbg !2602
  call void @llvm.dbg.value(metadata %Parser.0* %call.37, metadata !2603, metadata !DIExpression()), !dbg !2604
  %icmp.176 = icmp eq %Parser.0* %call.37, null, !dbg !2605
  br i1 %icmp.176, label %then.144, label %else.144

then.144:                                         ; preds = %else.143
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2605
  unreachable

else.144:                                         ; preds = %else.143
  %field.153 = getelementptr inbounds %Parser.0, %Parser.0* %call.37, i64 0, i32 1, !dbg !2605
  %runtime.writeBarrier.ld.29 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2606
  %icmp.178 = icmp eq i32 %runtime.writeBarrier.ld.29, 0, !dbg !2606
  %cast.1037 = bitcast { i8*, i64 }* %field.153 to i8*, !dbg !2606
  %cast.1038 = bitcast { i8*, i64 }* %filename.addr to i8*, !dbg !2606
  br i1 %icmp.178, label %else.146, label %else.145

fallthrough.145:                                  ; preds = %else.145, %else.146
  call void @llvm.dbg.value(metadata %Parser.0* %call.37, metadata !2590, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2597, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2598
  call void @llvm.dbg.value(metadata i8* null, metadata !2597, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2598
  %tmp.14.sroa.0.0.cast.1047.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.3, i64 0, i32 0, !dbg !2607
  store %Parser.0* %call.37, %Parser.0** %tmp.14.sroa.0.0.cast.1047.sroa_idx, align 8, !dbg !2607
  %tmp.14.sroa.2.0.cast.1047.sroa_idx37 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 0, !dbg !2607
  %5 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.14.sroa.2.0.cast.1047.sroa_idx37 to i8*, !dbg !2607
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false), !dbg !2607
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !2607
  ret void, !dbg !2607

else.145:                                         ; preds = %else.144
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.1037, i8* nonnull %cast.1038), !dbg !2606
  br label %fallthrough.145

else.146:                                         ; preds = %else.144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1037, i8* nonnull align 8 %cast.1038, i64 16, i1 false), !dbg !2606
  br label %fallthrough.145
}

declare void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.VirtualFileParser({ %Parser.0*, %error.0 }* nocapture sret %sret.formal.4, i8* nest nocapture readnone %nest.25, i64 %filename.chunk0, i64 %filename.chunk1, i64 %fs.chunk0, i64 %fs.chunk1) #0 !dbg !2608 {
entry:
  %filename.addr = alloca { i8*, i64 }, align 8
  %fs.addr = alloca %FileSystem.0, align 8
  %data = alloca { i8*, i64, i64 }, align 8
  %sret.actual.15 = alloca { %File.0, %error.0 }, align 8
  %sret.actual.16 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %field0.51 = bitcast { i8*, i64 }* %filename.addr to i64*
  store i64 %filename.chunk0, i64* %field0.51, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %filename.addr, i64 0, i32 1
  store i64 %filename.chunk1, i64* %0, align 8
  %field0.52 = bitcast %FileSystem.0* %fs.addr to i64*
  store i64 %fs.chunk0, i64* %field0.52, align 8
  %field0.522 = getelementptr inbounds %FileSystem.0, %FileSystem.0* %fs.addr, i64 0, i32 1
  %1 = bitcast i8** %field0.522 to i64*
  store i64 %fs.chunk1, i64* %1, align 8
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2611, metadata !DIExpression()), !dbg !2612
  %2 = bitcast { i8*, i64, i64 }* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  %3 = inttoptr i64 %fs.chunk0 to { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }*, !dbg !2613
  %field.157 = getelementptr inbounds { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }, { %_type.0*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)* }* %3, i64 0, i32 1, !dbg !2613
  %.field.ld.19 = load void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %File.0, %error.0 }*, i8*, i8*, i64, i64)** %field.157, align 8, !dbg !2613
  %4 = inttoptr i64 %fs.chunk1 to i8*, !dbg !2613
  call void %.field.ld.19({ %File.0, %error.0 }* nonnull sret %sret.actual.15, i8* nest undef, i8* %4, i64 %filename.chunk0, i64 %filename.chunk1), !dbg !2613
  %tmpv.231.sroa.0.sroa.0.0.tmpv.231.sroa.0.0.cast.1056.sroa_cast.sroa_idx = getelementptr inbounds { %File.0, %error.0 }, { %File.0, %error.0 }* %sret.actual.15, i64 0, i32 0, i32 0, !dbg !2613
  %tmpv.231.sroa.0.sroa.0.0.copyload46 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i8*, i64)*, void ({ i64, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %FileInfo.0, %error.0 }*, i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i8*, i64)*, void ({ i64, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %FileInfo.0, %error.0 }*, i8*, i8*)* }** %tmpv.231.sroa.0.sroa.0.0.tmpv.231.sroa.0.0.cast.1056.sroa_cast.sroa_idx, align 8, !dbg !2613
  %tmpv.231.sroa.0.sroa.3.0.tmpv.231.sroa.0.0.cast.1056.sroa_cast.sroa_idx47 = getelementptr inbounds { %File.0, %error.0 }, { %File.0, %error.0 }* %sret.actual.15, i64 0, i32 0, i32 1, !dbg !2613
  %5 = bitcast i8** %tmpv.231.sroa.0.sroa.3.0.tmpv.231.sroa.0.0.cast.1056.sroa_cast.sroa_idx47 to i64*, !dbg !2613
  %tmpv.231.sroa.0.sroa.3.0.copyload4876 = load i64, i64* %5, align 8, !dbg !2613
  %tmpv.231.sroa.3.0.cast.1056.sroa_idx34 = getelementptr inbounds { %File.0, %error.0 }, { %File.0, %error.0 }* %sret.actual.15, i64 0, i32 1, i32 0, !dbg !2613
  %tmpv.231.sroa.3.0.copyload35 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.231.sroa.3.0.cast.1056.sroa_idx34, align 8, !dbg !2613
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i8*, i64)*, void ({ i64, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %FileInfo.0, %error.0 }*, i8*, i8*)* }* %tmpv.231.sroa.0.sroa.0.0.copyload46, metadata !2615, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2616
  call void @llvm.dbg.value(metadata i8** %tmpv.231.sroa.0.sroa.3.0.tmpv.231.sroa.0.0.cast.1056.sroa_cast.sroa_idx47, metadata !2615, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2616
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.231.sroa.3.0.copyload35, metadata !2617, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2616
  %icmp.179 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.231.sroa.3.0.copyload35, null, !dbg !2618
  br i1 %icmp.179, label %else.147, label %then.147

then.147:                                         ; preds = %entry
  %tmpv.231.sroa.4.0.cast.1056.sroa_idx36 = getelementptr inbounds { %File.0, %error.0 }, { %File.0, %error.0 }* %sret.actual.15, i64 0, i32 1, i32 1, !dbg !2613
  %6 = bitcast i8** %tmpv.231.sroa.4.0.cast.1056.sroa_idx36 to i64*, !dbg !2613
  %tmpv.231.sroa.4.0.copyload3777 = load i64, i64* %6, align 8, !dbg !2613
  call void @llvm.dbg.value(metadata i8** %tmpv.231.sroa.4.0.cast.1056.sroa_idx36, metadata !2617, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2616
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2611, metadata !DIExpression()), !dbg !2612
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.231.sroa.3.0.copyload35, metadata !2619, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2620
  call void @llvm.dbg.value(metadata i8** %tmpv.231.sroa.4.0.cast.1056.sroa_idx36, metadata !2619, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2620
  %tmp.15.sroa.0.0.cast.1072.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 0, !dbg !2621
  store %Parser.0* null, %Parser.0** %tmp.15.sroa.0.0.cast.1072.sroa_idx, align 8, !dbg !2621
  %tmp.15.sroa.2.0.cast.1072.sroa_idx70 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, i32 0, !dbg !2621
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.231.sroa.3.0.copyload35, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.15.sroa.2.0.cast.1072.sroa_idx70, align 8, !dbg !2621
  %tmp.15.sroa.3.0.cast.1072.sroa_idx71 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, i32 1, !dbg !2621
  %7 = bitcast i8** %tmp.15.sroa.3.0.cast.1072.sroa_idx71 to i64*, !dbg !2621
  store i64 %tmpv.231.sroa.4.0.copyload3777, i64* %7, align 8, !dbg !2621
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2), !dbg !2621
  ret void, !dbg !2621

else.147:                                         ; preds = %entry
  %icmp.180 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i8*, i64)*, void ({ i64, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %FileInfo.0, %error.0 }*, i8*, i8*)* }* %tmpv.231.sroa.0.sroa.0.0.copyload46, null, !dbg !2622
  br i1 %icmp.180, label %fallthrough.148, label %else.148

fallthrough.148:                                  ; preds = %else.147, %else.148
  %tmpv.237.0 = phi %_type.0* [ %.field.ld.20, %else.148 ], [ null, %else.147 ]
  %call.38 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.237.0), !dbg !2622
  %8 = ptrtoint i8* %call.38 to i64, !dbg !2622
  call void @io_ioutil.ReadAll({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.16, i8* nest undef, i64 %8, i64 %tmpv.231.sroa.0.sroa.3.0.copyload4876), !dbg !2623
  %tmpv.236.sroa.0.0.cast.1083.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.16 to i8*, !dbg !2623
  %tmpv.236.sroa.3.0.cast.1083.sroa_idx26 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.16, i64 0, i32 1, i32 0, !dbg !2623
  %tmpv.236.sroa.3.0.copyload27 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.236.sroa.3.0.cast.1083.sroa_idx26, align 8, !dbg !2623
  %tmpv.236.sroa.4.0.cast.1083.sroa_idx28 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.16, i64 0, i32 1, i32 1, !dbg !2623
  %9 = bitcast i8** %tmpv.236.sroa.4.0.cast.1083.sroa_idx28 to i64*, !dbg !2623
  %tmpv.236.sroa.4.0.copyload2978 = load i64, i64* %9, align 8, !dbg !2623
  %data80 = bitcast { i8*, i64, i64 }* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %data80, i8* nonnull align 8 %tmpv.236.sroa.0.0.cast.1083.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.236.sroa.3.0.copyload27, metadata !2617, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2616
  call void @llvm.dbg.value(metadata i8** %tmpv.236.sroa.4.0.cast.1083.sroa_idx28, metadata !2617, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2616
  %icmp.181 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.236.sroa.3.0.copyload27, null, !dbg !2624
  br i1 %icmp.181, label %else.149, label %then.149

else.148:                                         ; preds = %else.147
  %field.166 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i8*, i64)*, void ({ i64, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %FileInfo.0, %error.0 }*, i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i8*, i64)*, void ({ i64, %error.0 }*, i8*, i8*, i64, i64)*, void ({ %FileInfo.0, %error.0 }*, i8*, i8*)* }* %tmpv.231.sroa.0.sroa.0.0.copyload46, i64 0, i32 0, !dbg !2622
  %.field.ld.20 = load %_type.0*, %_type.0** %field.166, align 8, !dbg !2622
  br label %fallthrough.148

then.149:                                         ; preds = %fallthrough.148
  call void @llvm.dbg.value(metadata %Parser.0* null, metadata !2611, metadata !DIExpression()), !dbg !2612
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.236.sroa.3.0.copyload27, metadata !2619, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2620
  call void @llvm.dbg.value(metadata i8** %tmpv.236.sroa.4.0.cast.1083.sroa_idx28, metadata !2619, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2620
  %tmp.17.sroa.0.0.cast.1099.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 0, !dbg !2625
  store %Parser.0* null, %Parser.0** %tmp.17.sroa.0.0.cast.1099.sroa_idx, align 8, !dbg !2625
  %tmp.17.sroa.2.0.cast.1099.sroa_idx72 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, i32 0, !dbg !2625
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.236.sroa.3.0.copyload27, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.17.sroa.2.0.cast.1099.sroa_idx72, align 8, !dbg !2625
  %tmp.17.sroa.3.0.cast.1099.sroa_idx73 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, i32 1, !dbg !2625
  %10 = bitcast i8** %tmp.17.sroa.3.0.cast.1099.sroa_idx73 to i64*, !dbg !2625
  store i64 %tmpv.236.sroa.4.0.copyload2978, i64* %10, align 8, !dbg !2625
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2), !dbg !2625
  ret void, !dbg !2625

else.149:                                         ; preds = %fallthrough.148
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %data, metadata !2626, metadata !DIExpression(DW_OP_deref)), !dbg !2627
  %call.39 = call %Reader.2* @bytes.NewReader(i8* nest undef, { i8*, i64, i64 }* byval nonnull %data), !dbg !2628
  %11 = ptrtoint %Reader.2* %call.39 to i64, !dbg !2628
  %call.40 = call fastcc %Parser.0* @command_line_arguments.newParser(i64 %11), !dbg !2629
  call void @llvm.dbg.value(metadata %Parser.0* %call.40, metadata !2630, metadata !DIExpression()), !dbg !2631
  %icmp.182 = icmp eq %Parser.0* %call.40, null, !dbg !2632
  br i1 %icmp.182, label %then.150, label %else.150

then.150:                                         ; preds = %else.149
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2632
  unreachable

else.150:                                         ; preds = %else.149
  %field.177 = getelementptr inbounds %Parser.0, %Parser.0* %call.40, i64 0, i32 1, !dbg !2632
  %runtime.writeBarrier.ld.30 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2633
  %icmp.184 = icmp eq i32 %runtime.writeBarrier.ld.30, 0, !dbg !2633
  %cast.1107 = bitcast { i8*, i64 }* %field.177 to i8*, !dbg !2633
  %cast.1108 = bitcast { i8*, i64 }* %filename.addr to i8*, !dbg !2633
  br i1 %icmp.184, label %else.153.thread, label %else.153

else.153.thread:                                  ; preds = %else.150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1107, i8* nonnull align 8 %cast.1108, i64 16, i1 false), !dbg !2633
  %field.17881 = getelementptr inbounds %Parser.0, %Parser.0* %call.40, i64 0, i32 2, !dbg !2634
  %cast.111382 = bitcast %FileSystem.0* %field.17881 to i8*, !dbg !2635
  %cast.111483 = bitcast %FileSystem.0* %fs.addr to i8*, !dbg !2635
  br label %else.155

else.153:                                         ; preds = %else.150
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.1107, i8* nonnull %cast.1108), !dbg !2633
  %runtime.writeBarrier.ld.31.pre = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2635
  %phitmp = icmp eq i32 %runtime.writeBarrier.ld.31.pre, 0
  %field.178 = getelementptr inbounds %Parser.0, %Parser.0* %call.40, i64 0, i32 2, !dbg !2634
  %cast.1113 = bitcast %FileSystem.0* %field.178 to i8*, !dbg !2635
  %cast.1114 = bitcast %FileSystem.0* %fs.addr to i8*, !dbg !2635
  br i1 %phitmp, label %else.155, label %else.154

fallthrough.154:                                  ; preds = %else.154, %else.155
  call void @llvm.dbg.value(metadata %Parser.0* %call.40, metadata !2611, metadata !DIExpression()), !dbg !2612
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2619, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2620
  call void @llvm.dbg.value(metadata i8* null, metadata !2619, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2620
  %tmp.19.sroa.0.0.cast.1124.sroa_idx = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 0, !dbg !2636
  store %Parser.0* %call.40, %Parser.0** %tmp.19.sroa.0.0.cast.1124.sroa_idx, align 8, !dbg !2636
  %tmp.19.sroa.2.0.cast.1124.sroa_idx74 = getelementptr inbounds { %Parser.0*, %error.0 }, { %Parser.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, i32 0, !dbg !2636
  %12 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.19.sroa.2.0.cast.1124.sroa_idx74 to i8*, !dbg !2636
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false), !dbg !2636
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2), !dbg !2636
  ret void, !dbg !2636

else.154:                                         ; preds = %else.153
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net_http.FileSystem..d, i64 0, i32 0), i8* nonnull %cast.1113, i8* nonnull %cast.1114), !dbg !2635
  br label %fallthrough.154

else.155:                                         ; preds = %else.153.thread, %else.153
  %cast.111485 = phi i8* [ %cast.111483, %else.153.thread ], [ %cast.1114, %else.153 ]
  %cast.111384 = phi i8* [ %cast.111382, %else.153.thread ], [ %cast.1113, %else.153 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.111384, i8* nonnull align 8 %cast.111485, i64 16, i1 false), !dbg !2635
  br label %fallthrough.154
}

declare i8* @runtime.requireitab(i8*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare void @io_ioutil.ReadAll({ { i8*, i64, i64 }, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal void @command_line_arguments..1command_line_arguments.Parser.Parse..func1(i8* nest nocapture readonly %closure.1) #4 !dbg !2637 {
entry:
  %call.48 = call i8* @llvm.returnaddress(i32 0), !dbg !2638
  %call.49 = call i8 @runtime.canrecover(i8* nest undef, i8* %call.48), !dbg !2638
  call fastcc void @command_line_arguments..1command_line_arguments.Parser.Parse..func1..r(i8* %closure.1, i8 zeroext %call.49), !dbg !2638
  ret void
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk0(i8* nest nocapture readnone %nest.86, { %__go_descriptor.16* }* nocapture readonly %__go_thunk_parameter) #5 !dbg !2639 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.16* }* %__go_thunk_parameter, metadata !2646, metadata !DIExpression()), !dbg !2647
  call void @llvm.dbg.value(metadata i8 0, metadata !2648, metadata !DIExpression()), !dbg !2647
  %call.290 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk0, %label.0)), !dbg !2647
  %0 = and i8 %call.290, 1, !dbg !2647
  %trunc.746 = icmp eq i8 %0, 0, !dbg !2647
  br i1 %trunc.746, label %else.710, label %label.0

else.710:                                         ; preds = %entry
  %field.969 = getelementptr inbounds { %__go_descriptor.16* }, { %__go_descriptor.16* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2647
  %.field.ld.182 = load %__go_descriptor.16*, %__go_descriptor.16** %field.969, align 8, !dbg !2647
  %1 = getelementptr inbounds %__go_descriptor.16, %__go_descriptor.16* %.field.ld.182, i64 0, i32 0, !dbg !2647
  %deref.ld.31 = load void (i8*)*, void (i8*)** %1, align 8, !dbg !2647
  %cast.3213 = bitcast %__go_descriptor.16* %.field.ld.182 to i8*, !dbg !2647
  call void %deref.ld.31(i8* nest %cast.3213), !dbg !2647
  br label %label.0

label.0:                                          ; preds = %entry, %else.710
  call void @llvm.dbg.value(metadata i8 0, metadata !2648, metadata !DIExpression()), !dbg !2647
  ret i8 0, !dbg !2647
}

declare void @runtime.deferproc(i8*, i8*, %__go_descriptor.116*, i8*) local_unnamed_addr #0

declare void @runtime.mapiterinit(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare i8* @runtime.mapassign(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.mapiternext(i8*, i8*) local_unnamed_addr #0

declare void @runtime.checkdefer(i8*, i8*) local_unnamed_addr #0

declare void @runtime.deferreturn(i8*, i8*) local_unnamed_addr #0

declare i32 @__gccgo_personality_v0(i32, i32, i64, i8*, i8*)

; Function Attrs: nounwind readnone
declare i8* @llvm.returnaddress(i32) #6

declare i8 @runtime.canrecover(i8*, i8*) local_unnamed_addr #0

; Function Attrs: noinline
define internal fastcc void @command_line_arguments..1command_line_arguments.Parser.Parse..func1..r(i8* nocapture readonly %"$closure", i8 zeroext %pr.0) unnamed_addr #5 !dbg !2649 {
entry:
  %tmp.87 = alloca %IPST.6, align 8
  %tmp.82 = alloca %IPST.6, align 8
  %tmpv.1281 = alloca { i8*, i64 }, align 8
  %sret.actual.102 = alloca %SourcePosition.0, align 8
  %tmpv.1292 = alloca { i8*, i64 }, align 8
  %tmpv.1296 = alloca [5 x %IPST.7], align 8
  %tmpv.1299 = alloca { i8*, i64 }, align 8
  %tmpv.1306 = alloca [4 x %IPST.7], align 8
  %tmpv.1309 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata i8 %pr.0, metadata !2652, metadata !DIExpression()), !dbg !2653
  %0 = and i8 %pr.0, 1, !dbg !2654
  %trunc.740 = icmp eq i8 %0, 0, !dbg !2654
  br i1 %trunc.740, label %else.705, label %fallthrough.704

fallthrough.704:                                  ; preds = %entry
  %call.275 = call { i64, i64 } @runtime.gorecover(i8* nest undef), !dbg !2654
  %call.275.fca.0.extract = extractvalue { i64, i64 } %call.275, 0, !dbg !2654
  %call.275.fca.1.extract = extractvalue { i64, i64 } %call.275, 1, !dbg !2654
  call void @llvm.dbg.value(metadata i64 %call.275.fca.0.extract, metadata !2656, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2657
  call void @llvm.dbg.value(metadata i64 %call.275.fca.1.extract, metadata !2656, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2657
  %icmp.871 = icmp eq i64 %call.275.fca.0.extract, 0, !dbg !2658
  br i1 %icmp.871, label %else.705, label %then.705

then.705:                                         ; preds = %fallthrough.704
  call void @llvm.dbg.value(metadata i8 0, metadata !2659, metadata !DIExpression()), !dbg !2662
  %cast.3132 = bitcast { i8*, i64 }* %tmpv.1281 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.3132, i8 0, i64 16, i1 false)
  %call.276 = call i8 @runtime.ifaceE2T2(i8* nest undef, %_type.0* nonnull @string..d, i64 %call.275.fca.0.extract, i64 %call.275.fca.1.extract, i8* nonnull %cast.3132), !dbg !2663
  call void @llvm.dbg.value(metadata i8 %call.276, metadata !2659, metadata !DIExpression()), !dbg !2662
  %1 = and i8 %call.276, 1, !dbg !2664
  %trunc.742 = icmp eq i8 %1, 0, !dbg !2664
  br i1 %trunc.742, label %fallthrough.706, label %else.707

else.705:                                         ; preds = %entry, %fallthrough.704
  ret void

fallthrough.706:                                  ; preds = %then.705, %else.707
  %tmpv.1283.0 = phi i8 [ %zext.871, %else.707 ], [ %call.276, %then.705 ]
  %2 = and i8 %tmpv.1283.0, 1, !dbg !2665
  %trunc.743 = icmp eq i8 %2, 0, !dbg !2665
  br i1 %trunc.743, label %else.708, label %then.708

else.707:                                         ; preds = %then.705
  %rs.sroa.5.0.cast.3137.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1281, i64 0, i32 1, !dbg !2663
  %rs.sroa.5.0.copyload12 = load i64, i64* %rs.sroa.5.0.cast.3137.sroa_idx11, align 8, !dbg !2663
  call void @llvm.dbg.value(metadata i64 %rs.sroa.5.0.copyload12, metadata !2666, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2662
  %rs.sroa.0.0.cast.3137.sroa_cast = bitcast { i8*, i64 }* %tmpv.1281 to i64*, !dbg !2663
  %rs.sroa.0.0.copyload9 = load i64, i64* %rs.sroa.0.0.cast.3137.sroa_cast, align 8, !dbg !2663
  call void @llvm.dbg.value(metadata i64 %rs.sroa.0.0.copyload9, metadata !2666, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2662
  %call.277 = call { i64, i64 } @__go_string_slice(i8* nest undef, i64 %rs.sroa.0.0.copyload9, i64 %rs.sroa.5.0.copyload12, i64 0, i64 11), !dbg !2667
  %call.277.fca.0.extract = extractvalue { i64, i64 } %call.277, 0, !dbg !2667
  %call.277.fca.1.extract = extractvalue { i64, i64 } %call.277, 1, !dbg !2667
  %call.278 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.277.fca.0.extract, i64 %call.277.fca.1.extract, i64 ptrtoint ([12 x i8]* @const.424 to i64), i64 11), !dbg !2668
  %icmp.869 = icmp eq i8 %call.278, 1, !dbg !2668
  %zext.871 = zext i1 %icmp.869 to i8, !dbg !2668
  br label %fallthrough.706

then.708:                                         ; preds = %fallthrough.706
  call void @runtime.gopanic(i8* nest undef, i64 %call.275.fca.0.extract, i64 %call.275.fca.1.extract), !dbg !2669
  unreachable

else.708:                                         ; preds = %fallthrough.706
  %field.934 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !2670
  %3 = bitcast i8* %field.934 to %Parser.0***, !dbg !2670
  %.field.ld.181 = load %Parser.0**, %Parser.0*** %3, align 8, !dbg !2670
  %.ld.560 = load %Parser.0*, %Parser.0** %.field.ld.181, align 8, !dbg !2670
  call void @command_line_arguments.Parser.pos(%SourcePosition.0* nonnull sret %sret.actual.102, i8* nest undef, %Parser.0* %.ld.560), !dbg !2671
  %pos.sroa.0.0.cast.3146.sroa_idx = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.actual.102, i64 0, i32 0
  %pos.sroa.0.0.copyload = load i64, i64* %pos.sroa.0.0.cast.3146.sroa_idx, align 8
  call void @llvm.dbg.value(metadata i64 %pos.sroa.0.0.copyload, metadata !2672, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2673
  %pos.sroa.4.0.cast.3146.sroa_idx14 = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.actual.102, i64 0, i32 1
  %pos.sroa.4.0.copyload = load i64, i64* %pos.sroa.4.0.cast.3146.sroa_idx14, align 8
  call void @llvm.dbg.value(metadata i64 %pos.sroa.4.0.copyload, metadata !2672, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2673
  %pos.sroa.6.0.cast.3146.sroa_idx15 = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.actual.102, i64 0, i32 2
  %pos.sroa.6.0.copyload = load i64, i64* %pos.sroa.6.0.cast.3146.sroa_idx15, align 8
  call void @llvm.dbg.value(metadata i64 %pos.sroa.6.0.copyload, metadata !2672, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2673
  %pos.sroa.9.0.cast.3146.sroa_idx17 = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.actual.102, i64 0, i32 3, i32 1
  %pos.sroa.9.0.copyload = load i64, i64* %pos.sroa.9.0.cast.3146.sroa_idx17, align 8
  call void @llvm.dbg.value(metadata i64 %pos.sroa.9.0.copyload, metadata !2672, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !2673
  %icmp.870 = icmp sgt i64 %pos.sroa.9.0.copyload, 0, !dbg !2674
  br i1 %icmp.870, label %then.709, label %else.709

then.709:                                         ; preds = %else.708
  %pos.sroa.8.0.cast.3146.sroa_idx16 = getelementptr inbounds %SourcePosition.0, %SourcePosition.0* %sret.actual.102, i64 0, i32 3, i32 0
  %4 = bitcast i8** %pos.sroa.8.0.cast.3146.sroa_idx16 to i64*
  %pos.sroa.8.0.copyload38 = load i64, i64* %4, align 8
  call void @llvm.dbg.value(metadata i8** %pos.sroa.8.0.cast.3146.sroa_idx16, metadata !2672, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 192, 64)), !dbg !2673
  %call.279 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2675
  %5 = bitcast { i8*, i64 }* %tmpv.1292 to i64*
  store i64 %pos.sroa.8.0.copyload38, i64* %5, align 8
  %tmpv.1287.sroa.2.0.cast.3150.sroa_idx19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1292, i64 0, i32 1
  store i64 %pos.sroa.9.0.copyload, i64* %tmpv.1287.sroa.2.0.cast.3150.sroa_idx19, align 8
  %cast.3153 = bitcast { i8*, i64 }* %tmpv.1292 to i8*, !dbg !2675
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.279, i8* nonnull %cast.3153), !dbg !2675
  %call.280 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2675
  %cast.3154 = bitcast i8* %call.280 to i64*, !dbg !2675
  store i64 %pos.sroa.0.0.copyload, i64* %cast.3154, align 8, !dbg !2675
  %call.281 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2675
  %cast.3155 = bitcast i8* %call.281 to i64*, !dbg !2675
  store i64 %pos.sroa.4.0.copyload, i64* %cast.3155, align 8, !dbg !2675
  %call.282 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2675
  %cast.3156 = bitcast i8* %call.282 to i64*, !dbg !2675
  store i64 %pos.sroa.6.0.copyload, i64* %cast.3156, align 8, !dbg !2675
  %tmp.78.sroa.0.0.cast.3161.sroa_idx = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 0, i32 0, !dbg !2675
  store %_type.0* @string..d, %_type.0** %tmp.78.sroa.0.0.cast.3161.sroa_idx, align 8, !dbg !2675
  %tmp.78.sroa.2.0.cast.3161.sroa_idx31 = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 0, i32 1, !dbg !2675
  store i8* %call.279, i8** %tmp.78.sroa.2.0.cast.3161.sroa_idx31, align 8, !dbg !2675
  %r.sroa.0.0.cast.3163.sroa_idx = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 1, !dbg !2675
  %r.sroa.0.0.cast.3163.sroa_cast = bitcast %IPST.7* %r.sroa.0.0.cast.3163.sroa_idx to i64*, !dbg !2675
  store i64 %call.275.fca.0.extract, i64* %r.sroa.0.0.cast.3163.sroa_cast, align 8, !dbg !2675
  %r.sroa.8.0.cast.3163.sroa_idx26 = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 1, i32 1, !dbg !2675
  %r.sroa.8.0.cast.3163.sroa_cast = bitcast i8** %r.sroa.8.0.cast.3163.sroa_idx26 to i64*, !dbg !2675
  store i64 %call.275.fca.1.extract, i64* %r.sroa.8.0.cast.3163.sroa_cast, align 8, !dbg !2675
  %tmp.79.sroa.0.0.cast.3165.sroa_idx = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 2, i32 0, !dbg !2675
  store %_type.0* @int..d, %_type.0** %tmp.79.sroa.0.0.cast.3165.sroa_idx, align 8, !dbg !2675
  %tmp.79.sroa.2.0.cast.3165.sroa_idx32 = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 2, i32 1, !dbg !2675
  store i8* %call.280, i8** %tmp.79.sroa.2.0.cast.3165.sroa_idx32, align 8, !dbg !2675
  %tmp.80.sroa.0.0.cast.3167.sroa_idx = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 3, i32 0, !dbg !2675
  store %_type.0* @int..d, %_type.0** %tmp.80.sroa.0.0.cast.3167.sroa_idx, align 8, !dbg !2675
  %tmp.80.sroa.2.0.cast.3167.sroa_idx33 = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 3, i32 1, !dbg !2675
  store i8* %call.281, i8** %tmp.80.sroa.2.0.cast.3167.sroa_idx33, align 8, !dbg !2675
  %tmp.81.sroa.0.0.cast.3169.sroa_idx = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 4, i32 0, !dbg !2675
  store %_type.0* @int..d, %_type.0** %tmp.81.sroa.0.0.cast.3169.sroa_idx, align 8, !dbg !2675
  %tmp.81.sroa.2.0.cast.3169.sroa_idx34 = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 4, i32 1, !dbg !2675
  store i8* %call.282, i8** %tmp.81.sroa.2.0.cast.3169.sroa_idx34, align 8, !dbg !2675
  %field.947 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.82, i64 0, i32 0, !dbg !2675
  %cast.3172 = getelementptr inbounds [5 x %IPST.7], [5 x %IPST.7]* %tmpv.1296, i64 0, i64 0, !dbg !2675
  store %IPST.7* %cast.3172, %IPST.7** %field.947, align 8, !dbg !2675
  %field.948 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.82, i64 0, i32 1, !dbg !2675
  store i64 5, i64* %field.948, align 8, !dbg !2675
  %field.949 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.82, i64 0, i32 2, !dbg !2675
  store i64 5, i64* %field.949, align 8, !dbg !2675
  %call.283 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([59 x i8]* @const.426 to i64), i64 58, %IPST.6* byval nonnull %tmp.82), !dbg !2675
  %call.283.fca.0.extract = extractvalue { i64, i64 } %call.283, 0, !dbg !2675
  %call.283.fca.1.extract = extractvalue { i64, i64 } %call.283, 1, !dbg !2675
  %call.284 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2676
  %tmpv.1297.sroa.0.0.cast.3177.sroa_cast = bitcast { i8*, i64 }* %tmpv.1299 to i64*
  store i64 %call.283.fca.0.extract, i64* %tmpv.1297.sroa.0.0.cast.3177.sroa_cast, align 8
  %tmpv.1297.sroa.2.0.cast.3177.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1299, i64 0, i32 1
  store i64 %call.283.fca.1.extract, i64* %tmpv.1297.sroa.2.0.cast.3177.sroa_idx4, align 8
  %cast.3180 = bitcast { i8*, i64 }* %tmpv.1299 to i8*, !dbg !2676
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.284, i8* nonnull %cast.3180), !dbg !2676
  %6 = ptrtoint i8* %call.284 to i64, !dbg !2676
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %6), !dbg !2676
  unreachable

else.709:                                         ; preds = %else.708
  %call.285 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2677
  %cast.3183 = bitcast i8* %call.285 to i64*, !dbg !2677
  store i64 %pos.sroa.0.0.copyload, i64* %cast.3183, align 8, !dbg !2677
  %call.286 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2677
  %cast.3184 = bitcast i8* %call.286 to i64*, !dbg !2677
  store i64 %pos.sroa.4.0.copyload, i64* %cast.3184, align 8, !dbg !2677
  %call.287 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d), !dbg !2677
  %cast.3185 = bitcast i8* %call.287 to i64*, !dbg !2677
  store i64 %pos.sroa.6.0.copyload, i64* %cast.3185, align 8, !dbg !2677
  %r.sroa.0.0.cast.3189.sroa_cast = bitcast [4 x %IPST.7]* %tmpv.1306 to i64*, !dbg !2677
  store i64 %call.275.fca.0.extract, i64* %r.sroa.0.0.cast.3189.sroa_cast, align 8, !dbg !2677
  %r.sroa.8.0.cast.3189.sroa_idx27 = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 0, i32 1, !dbg !2677
  %r.sroa.8.0.cast.3189.sroa_cast = bitcast i8** %r.sroa.8.0.cast.3189.sroa_idx27 to i64*, !dbg !2677
  store i64 %call.275.fca.1.extract, i64* %r.sroa.8.0.cast.3189.sroa_cast, align 8, !dbg !2677
  %tmp.84.sroa.0.0.cast.3191.sroa_idx = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 1, i32 0, !dbg !2677
  store %_type.0* @int..d, %_type.0** %tmp.84.sroa.0.0.cast.3191.sroa_idx, align 8, !dbg !2677
  %tmp.84.sroa.2.0.cast.3191.sroa_idx35 = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 1, i32 1, !dbg !2677
  store i8* %call.285, i8** %tmp.84.sroa.2.0.cast.3191.sroa_idx35, align 8, !dbg !2677
  %tmp.85.sroa.0.0.cast.3193.sroa_idx = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 2, i32 0, !dbg !2677
  store %_type.0* @int..d, %_type.0** %tmp.85.sroa.0.0.cast.3193.sroa_idx, align 8, !dbg !2677
  %tmp.85.sroa.2.0.cast.3193.sroa_idx36 = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 2, i32 1, !dbg !2677
  store i8* %call.286, i8** %tmp.85.sroa.2.0.cast.3193.sroa_idx36, align 8, !dbg !2677
  %tmp.86.sroa.0.0.cast.3195.sroa_idx = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 3, i32 0, !dbg !2677
  store %_type.0* @int..d, %_type.0** %tmp.86.sroa.0.0.cast.3195.sroa_idx, align 8, !dbg !2677
  %tmp.86.sroa.2.0.cast.3195.sroa_idx37 = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 3, i32 1, !dbg !2677
  store i8* %call.287, i8** %tmp.86.sroa.2.0.cast.3195.sroa_idx37, align 8, !dbg !2677
  %field.961 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.87, i64 0, i32 0, !dbg !2677
  %cast.3198 = getelementptr inbounds [4 x %IPST.7], [4 x %IPST.7]* %tmpv.1306, i64 0, i64 0, !dbg !2677
  store %IPST.7* %cast.3198, %IPST.7** %field.961, align 8, !dbg !2677
  %field.962 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.87, i64 0, i32 1, !dbg !2677
  store i64 4, i64* %field.962, align 8, !dbg !2677
  %field.963 = getelementptr inbounds %IPST.6, %IPST.6* %tmp.87, i64 0, i32 2, !dbg !2677
  store i64 4, i64* %field.963, align 8, !dbg !2677
  %call.288 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([51 x i8]* @const.428 to i64), i64 50, %IPST.6* byval nonnull %tmp.87), !dbg !2677
  %call.288.fca.0.extract = extractvalue { i64, i64 } %call.288, 0, !dbg !2677
  %call.288.fca.1.extract = extractvalue { i64, i64 } %call.288, 1, !dbg !2677
  %call.289 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2678
  %tmpv.1307.sroa.0.0.cast.3203.sroa_cast = bitcast { i8*, i64 }* %tmpv.1309 to i64*
  store i64 %call.288.fca.0.extract, i64* %tmpv.1307.sroa.0.0.cast.3203.sroa_cast, align 8
  %tmpv.1307.sroa.2.0.cast.3203.sroa_idx2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1309, i64 0, i32 1
  store i64 %call.288.fca.1.extract, i64* %tmpv.1307.sroa.2.0.cast.3203.sroa_idx2, align 8
  %cast.3206 = bitcast { i8*, i64 }* %tmpv.1309 to i8*, !dbg !2678
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.289, i8* nonnull %cast.3206), !dbg !2678
  %7 = ptrtoint i8* %call.289 to i64, !dbg !2678
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %7), !dbg !2678
  unreachable
}

; Function Attrs: noreturn
declare void @runtime.gopanic(i8*, i64, i64) local_unnamed_addr #2

declare { i64, i64 } @path_filepath.Dir(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @path_filepath.Join(i8*, %IPST.5*) local_unnamed_addr #0

declare { i64, i64 } @path_filepath.Base(i8*, i64, i64) local_unnamed_addr #0

declare i64 @strings.IndexRune(i8*, i64, i64, i32) local_unnamed_addr #0

declare { i64, i64 } @runtime.concatstring2(i8*, i8*, [2 x { i8*, i64 }]*) local_unnamed_addr #0

declare { i64, i64 } @runtime.concatstring4(i8*, i8*, [4 x { i8*, i64 }]*) local_unnamed_addr #0

declare { i64, i64 } @fmt.Sprintf(i8*, i64, i64, %IPST.6*) local_unnamed_addr #0

define internal void @command_line_arguments..1command_line_arguments.Parser.parseTag..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !2679 {
entry:
  %field.553 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !2680
  %0 = bitcast i8* %field.553 to %Tag.0***, !dbg !2680
  %.field.ld.127 = load %Tag.0**, %Tag.0*** %0, align 8, !dbg !2680
  %.ld.384 = load %Tag.0*, %Tag.0** %.field.ld.127, align 8, !dbg !2680
  %icmp.531 = icmp eq %Tag.0* %.ld.384, null, !dbg !2681
  br i1 %icmp.531, label %then.455, label %else.455

then.455:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2681
  unreachable

else.455:                                         ; preds = %entry
  %field.555 = getelementptr inbounds %Tag.0, %Tag.0* %.ld.384, i64 0, i32 1, !dbg !2681
  %.field.ld.129 = load %Block.0*, %Block.0** %field.555, align 8, !dbg !2681
  %icmp.532 = icmp eq %Block.0* %.field.ld.129, null, !dbg !2682
  br i1 %icmp.532, label %then.456, label %fallthrough.456

then.456:                                         ; preds = %else.455
  %call.155 = call fastcc %Block.0* @command_line_arguments.newBlock(), !dbg !2683
  %.field.ld.125 = load %Tag.0**, %Tag.0*** %0, align 8, !dbg !2684
  %.ld.381 = load %Tag.0*, %Tag.0** %.field.ld.125, align 8, !dbg !2684
  %icmp.528 = icmp eq %Tag.0* %.ld.381, null, !dbg !2685
  br i1 %icmp.528, label %then.457, label %else.457

fallthrough.456:                                  ; preds = %else.459, %else.458, %else.455
  ret void

then.457:                                         ; preds = %then.456
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2685
  unreachable

else.457:                                         ; preds = %then.456
  %field.552 = getelementptr inbounds %Tag.0, %Tag.0* %.ld.381, i64 0, i32 1, !dbg !2685
  %runtime.writeBarrier.ld.69 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2686
  %icmp.530 = icmp eq i32 %runtime.writeBarrier.ld.69, 0, !dbg !2686
  br i1 %icmp.530, label %else.459, label %else.458

else.458:                                         ; preds = %else.457
  %cast.2163 = bitcast %Block.0** %field.552 to i8*, !dbg !2686
  %cast.2164 = bitcast %Block.0* %call.155 to i8*, !dbg !2686
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.2163, i8* %cast.2164), !dbg !2686
  br label %fallthrough.456

else.459:                                         ; preds = %else.457
  store %Block.0* %call.155, %Block.0** %field.552, align 8, !dbg !2686
  br label %fallthrough.456
}

declare %Reader.1* @bufio.NewReader(i8*, i64, i64) local_unnamed_addr #0

declare %List.0* @container_list.New(i8*) local_unnamed_addr #0

declare %Element.0* @container_list.List.Front(i8*, %List.0*) local_unnamed_addr #0

declare void @runtime.assertI2T(i8*, %_type.0*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare { i64, i64 } @container_list.List.Remove(i8*, %List.0*, %Element.0*) local_unnamed_addr #0

declare %Element.0* @container_list.List.Back(i8*, %List.0*) local_unnamed_addr #0

declare %Element.0* @container_list.List.PushBack(i8*, %List.0*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @__go_string_slice(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @regexp.Regexp.FindString(i8*, %Regexp.0*, i64, i64) local_unnamed_addr #0

declare %Element.0* @container_list.Element.Next(i8*, %Element.0*) local_unnamed_addr #0

declare { i64, i64 } @regexp.QuoteMeta(i8*, i64, i64) local_unnamed_addr #0

declare void @regexp.Regexp.FindStringSubmatch(%IPST.5*, i8*, %Regexp.0*, i64, i64) local_unnamed_addr #0

declare void @bufio.Reader.ReadString({ { i8*, i64 }, %error.0 }*, i8*, %Reader.1*, i8) local_unnamed_addr #0

declare i8 @runtime.ifaceeq(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @runtime.gorecover(i8*) local_unnamed_addr #0

declare i8 @runtime.ifaceE2T2(i8*, %_type.0*, i64, i64, i8*) local_unnamed_addr #0

declare i8 @runtime.setdeferretaddr(i8*, i8*) local_unnamed_addr #0

declare i64 @runtime.strhash(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.memhash64(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.memhash8(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.memhash32(i8*, i8*, i64) local_unnamed_addr #0

declare void @runtime.registerGCRoots(i8*, i8*) local_unnamed_addr #0

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #1

attributes #0 = { "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { noinline "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #5 = { noinline "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #6 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 7, !"PIC Level", i32 0}
!1 = distinct !DICompileUnit(language: DW_LANG_Go, file: !2, producer: "llvm-goc", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, globals: !4)
!2 = !DIFile(filename: "./nodes.go", directory: "/home/wangcong/go_path/src/github.com/eknkc/amber/parser")
!3 = !{}
!4 = !{!5, !19, !38, !40, !262, !264, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !286, !288, !290, !292, !294}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "command_line_arguments.selfClosingTags", linkageName: "command_line_arguments.selfClosingTags", scope: !1, file: !7, line: 8, type: !8, isLocal: true, isDefinition: true)
!7 = !DIFile(filename: "nodes.go", directory: ".")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 1280, align: 8, elements: !17)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", file: !10, line: 1, size: 128, align: 8, elements: !11)
!10 = !DIFile(filename: "<built-in>", directory: "")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !10, line: 1, baseType: !13, size: 64, align: 64)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIBasicType(name: "uint8", size: 8, encoding: DW_ATE_unsigned)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !10, line: 1, baseType: !16, size: 64, align: 64, offset: 64)
!16 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!17 = !{!18}
!18 = !DISubrange(count: 10)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "command_line_arguments.doctypes", linkageName: "command_line_arguments.doctypes", scope: !1, file: !7, line: 21, type: !21, isLocal: true, isDefinition: true)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DICompositeType(tag: DW_TAG_structure_type, name: "runtime.hmap", file: !10, line: 1, size: 384, align: 8, elements: !23)
!23 = !{!24, !25, !26, !27, !29, !31, !34, !35, !37}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "count", file: !10, line: 1, baseType: !16, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "flags", file: !10, line: 1, baseType: !14, size: 8, align: 8, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "B", file: !10, line: 1, baseType: !14, size: 8, align: 8, offset: 72)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "noverflow", file: !10, line: 1, baseType: !28, size: 16, align: 16, offset: 80)
!28 = !DIBasicType(name: "uint16", size: 16, encoding: DW_ATE_unsigned)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "hash0", file: !10, line: 1, baseType: !30, size: 32, align: 32, offset: 96)
!30 = !DIBasicType(name: "uint32", size: 32, encoding: DW_ATE_unsigned)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 128)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!33 = !DIBasicType(name: "void")
!34 = !DIDerivedType(tag: DW_TAG_member, name: "oldbuckets", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 192)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "nevacuate", file: !10, line: 1, baseType: !36, size: 64, align: 64, offset: 256)
!36 = !DIBasicType(name: "uintptr", size: 64, encoding: DW_ATE_unsigned)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "extra", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 320)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "runtime.writeBarrier", linkageName: "runtime.writeBarrier", scope: !1, file: !10, line: 1, type: !30, isLocal: false, isDefinition: true)
!40 = !DIGlobalVariableExpression(var: !41, expr: !DIExpression())
!41 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxIndent", linkageName: "command_line_arguments.rgxIndent", scope: !1, file: !42, line: 223, type: !43, isLocal: true, isDefinition: true)
!42 = !DIFile(filename: "scanner.go", directory: ".")
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DICompositeType(tag: DW_TAG_structure_type, name: "Regexp", file: !7, line: 4, size: 1280, align: 8, elements: !45)
!45 = !{!46, !111, !116}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "regexpRO", file: !7, line: 4, baseType: !47, size: 1024, align: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.regexpRO", file: !7, line: 4, size: 1024, align: 8, elements: !48)
!48 = !{!49, !50, !76, !93, !94, !98, !100, !101, !102, !104, !105, !110}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "expr", file: !7, line: 4, baseType: !9, size: 128, align: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "prog", file: !7, line: 4, baseType: !51, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "Prog", file: !7, line: 4, size: 320, align: 8, elements: !53)
!53 = !{!54, !74, !75}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "Inst", file: !7, line: 4, baseType: !55, size: 192, align: 64)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Inst,int,int}", file: !56, size: 192, align: 8, elements: !57)
!56 = !DIFile(filename: "", directory: "")
!57 = !{!58, !72, !73}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !59, size: 64, align: 64)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DICompositeType(tag: DW_TAG_structure_type, name: "Inst", file: !7, line: 4, size: 320, align: 8, elements: !61)
!61 = !{!62, !64, !65, !66}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "Op", file: !7, line: 4, baseType: !63, size: 8, align: 8)
!63 = !DIBasicType(name: "InstOp", size: 8, encoding: DW_ATE_unsigned)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "Out", file: !7, line: 4, baseType: !30, size: 32, align: 32, offset: 32)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "Arg", file: !7, line: 4, baseType: !30, size: 32, align: 32, offset: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "Rune", file: !7, line: 4, baseType: !67, size: 192, align: 64, offset: 128)
!67 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*int32,int,int}", file: !56, size: 192, align: 8, elements: !68)
!68 = !{!69, !72, !73}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !70, size: 64, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !56, line: 1, baseType: !16, size: 64, align: 64, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !56, line: 1, baseType: !16, size: 64, align: 64, offset: 128)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "Start", file: !7, line: 4, baseType: !16, size: 64, align: 64, offset: 192)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "NumCap", file: !7, line: 4, baseType: !16, size: 64, align: 64, offset: 256)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "onepass", file: !7, line: 4, baseType: !77, size: 64, align: 64, offset: 192)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.onePassProg", file: !7, line: 4, size: 320, align: 8, elements: !79)
!79 = !{!80, !74, !75}
!80 = !DIDerivedType(tag: DW_TAG_member, name: "Inst", file: !7, line: 4, baseType: !81, size: 192, align: 64)
!81 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.regexp.onePassInst,int,int}", file: !56, size: 192, align: 8, elements: !82)
!82 = !{!83, !72, !73}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !84, size: 64, align: 64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.onePassInst", file: !7, line: 4, size: 512, align: 8, elements: !86)
!86 = !{!87, !88}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "Inst", file: !7, line: 4, baseType: !60, size: 320, align: 64)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "Next", file: !7, line: 4, baseType: !89, size: 192, align: 64, offset: 320)
!89 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint32,int,int}", file: !56, size: 192, align: 8, elements: !90)
!90 = !{!91, !72, !73}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !92, size: 64, align: 64)
!92 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", file: !7, line: 4, baseType: !9, size: 128, align: 64, offset: 256)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "prefixBytes", file: !7, line: 4, baseType: !95, size: 192, align: 64, offset: 384)
!95 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint8,int,int}", file: !56, size: 192, align: 8, elements: !96)
!96 = !{!97, !72, !73}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !13, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "prefixComplete", file: !7, line: 4, baseType: !99, size: 8, align: 8, offset: 576)
!99 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_unsigned)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "prefixRune", file: !7, line: 4, baseType: !71, size: 32, align: 32, offset: 608)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "prefixEnd", file: !7, line: 4, baseType: !30, size: 32, align: 32, offset: 640)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "cond", file: !7, line: 4, baseType: !103, size: 8, align: 8, offset: 672)
!103 = !DIBasicType(name: "EmptyOp", size: 8, encoding: DW_ATE_unsigned)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "numSubexp", file: !7, line: 4, baseType: !16, size: 64, align: 64, offset: 704)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "subexpNames", file: !7, line: 4, baseType: !106, size: 192, align: 64, offset: 768)
!106 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*string,int,int}", file: !56, size: 192, align: 8, elements: !107)
!107 = !{!108, !72, !73}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !109, size: 64, align: 64)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "longest", file: !7, line: 4, baseType: !99, size: 8, align: 8, offset: 960)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "mu", file: !7, line: 4, baseType: !112, size: 64, align: 32, offset: 1024)
!112 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex", file: !7, line: 4, size: 64, align: 8, elements: !113)
!113 = !{!114, !115}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !7, line: 4, baseType: !71, size: 32, align: 32)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "sema", file: !7, line: 4, baseType: !30, size: 32, align: 32, offset: 32)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "machine", file: !7, line: 4, baseType: !117, size: 192, align: 64, offset: 1088)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**.regexp.machine,int,int}", file: !56, size: 192, align: 8, elements: !118)
!118 = !{!119, !72, !73}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !120, size: 64, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.machine", file: !7, line: 4, size: 2112, align: 8, elements: !123)
!123 = !{!124, !125, !126, !127, !128, !150, !167, !168, !173, !174, !175, !179, !183}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "re", file: !7, line: 4, baseType: !32, size: 64, align: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "p", file: !7, line: 4, baseType: !51, size: 64, align: 64, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "op", file: !7, line: 4, baseType: !77, size: 64, align: 64, offset: 128)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "maxBitStateLen", file: !7, line: 4, baseType: !16, size: 64, align: 64, offset: 192)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !7, line: 4, baseType: !129, size: 64, align: 64, offset: 256)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.bitState", file: !7, line: 4, size: 704, align: 8, elements: !131)
!131 = !{!132, !133, !134, !139, !149}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "prog", file: !7, line: 4, baseType: !51, size: 64, align: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "end", file: !7, line: 4, baseType: !16, size: 64, align: 64, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "cap", file: !7, line: 4, baseType: !135, size: 192, align: 64, offset: 128)
!135 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*int,int,int}", file: !56, size: 192, align: 8, elements: !136)
!136 = !{!137, !72, !73}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !138, size: 64, align: 64)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", file: !7, line: 4, baseType: !140, size: 192, align: 64, offset: 320)
!140 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.regexp.job,int,int}", file: !56, size: 192, align: 8, elements: !141)
!141 = !{!142, !72, !73}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !143, size: 64, align: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.job", file: !7, line: 4, size: 128, align: 8, elements: !145)
!145 = !{!146, !147, !148}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pc", file: !7, line: 4, baseType: !30, size: 32, align: 32)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "arg", file: !7, line: 4, baseType: !99, size: 8, align: 8, offset: 32)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "pos", file: !7, line: 4, baseType: !16, size: 64, align: 64, offset: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "visited", file: !7, line: 4, baseType: !89, size: 192, align: 64, offset: 512)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "q0", file: !7, line: 4, baseType: !151, size: 384, align: 64, offset: 320)
!151 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.queue", file: !7, line: 4, size: 384, align: 8, elements: !152)
!152 = !{!153, !154}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "sparse", file: !7, line: 4, baseType: !89, size: 192, align: 64)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "dense", file: !7, line: 4, baseType: !155, size: 192, align: 64, offset: 192)
!155 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.regexp.entry,int,int}", file: !56, size: 192, align: 8, elements: !156)
!156 = !{!157, !72, !73}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !158, size: 64, align: 64)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.entry", file: !7, line: 4, size: 128, align: 8, elements: !160)
!160 = !{!146, !161}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "t", file: !7, line: 4, baseType: !162, size: 64, align: 64, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.thread", file: !7, line: 4, size: 256, align: 8, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "inst", file: !7, line: 4, baseType: !59, size: 64, align: 64)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "cap", file: !7, line: 4, baseType: !135, size: 192, align: 64, offset: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "q1", file: !7, line: 4, baseType: !151, size: 384, align: 64, offset: 704)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "pool", file: !7, line: 4, baseType: !169, size: 192, align: 64, offset: 1088)
!169 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**.regexp.thread,int,int}", file: !56, size: 192, align: 8, elements: !170)
!170 = !{!171, !72, !73}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !172, size: 64, align: 64)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "matched", file: !7, line: 4, baseType: !99, size: 8, align: 8, offset: 1280)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "matchcap", file: !7, line: 4, baseType: !135, size: 192, align: 64, offset: 1344)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "inputBytes", file: !7, line: 4, baseType: !176, size: 192, align: 64, offset: 1536)
!176 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.inputBytes", file: !7, line: 4, size: 192, align: 8, elements: !177)
!177 = !{!178}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "str", file: !7, line: 4, baseType: !95, size: 192, align: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "inputString", file: !7, line: 4, baseType: !180, size: 128, align: 64, offset: 1728)
!180 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.inputString", file: !7, line: 4, size: 128, align: 8, elements: !181)
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "str", file: !7, line: 4, baseType: !9, size: 128, align: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "inputReader", file: !7, line: 4, baseType: !184, size: 256, align: 64, offset: 1856)
!184 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.inputReader", file: !7, line: 4, size: 256, align: 8, elements: !185)
!185 = !{!186, !260, !261}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !7, line: 4, baseType: !187, size: 128, align: 64)
!187 = !DICompositeType(tag: DW_TAG_structure_type, name: "RuneReader", file: !7, line: 4, size: 128, align: 8, elements: !188)
!188 = !{!189, !259}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 4, baseType: !190, size: 64, align: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{int32,int,error}}", file: !56, size: 128, align: 8, elements: !192)
!192 = !{!193, !238}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !56, line: 4, baseType: !194, size: 64, align: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "_type", file: !10, line: 1, size: 576, align: 8, elements: !196)
!196 = !{!197, !198, !199, !200, !201, !202, !203, !211, !219, !220, !221, !237}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !10, line: 1, baseType: !36, size: 64, align: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "ptrdata", file: !10, line: 1, baseType: !36, size: 64, align: 64, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "hash", file: !10, line: 1, baseType: !30, size: 32, align: 32, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "kind", file: !10, line: 1, baseType: !14, size: 8, align: 8, offset: 160)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "align", file: !10, line: 1, baseType: !14, size: 8, align: 8, offset: 168)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fieldAlign", file: !10, line: 1, baseType: !14, size: 8, align: 8, offset: 176)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", file: !10, line: 1, baseType: !204, size: 64, align: 64, offset: 192)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 1, size: 64, align: 8, elements: !206)
!206 = !{!207}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 1, baseType: !208, size: 64, align: 64)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!209 = !DISubroutineType(types: !210)
!210 = !{!36, !32, !36}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "equalfn", file: !10, line: 1, baseType: !212, size: 64, align: 64, offset: 256)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 1, size: 64, align: 8, elements: !214)
!214 = !{!215}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 1, baseType: !216, size: 64, align: 64)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DISubroutineType(types: !218)
!218 = !{!99, !32, !32}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "gcdata", file: !10, line: 1, baseType: !13, size: 64, align: 64, offset: 320)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "string", file: !10, line: 1, baseType: !109, size: 64, align: 64, offset: 384)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "uncommonType", file: !10, line: 1, baseType: !222, size: 64, align: 64, offset: 448)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncommonType", file: !10, line: 1, size: 320, align: 8, elements: !224)
!224 = !{!225, !226, !227}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !10, line: 1, baseType: !109, size: 64, align: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "pkgPath", file: !10, line: 1, baseType: !109, size: 64, align: 64, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "methods", file: !10, line: 1, baseType: !228, size: 192, align: 64, offset: 128)
!228 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*method,int,int}", file: !56, size: 192, align: 8, elements: !229)
!229 = !{!230, !72, !73}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !231, size: 64, align: 64)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = !DICompositeType(tag: DW_TAG_structure_type, name: "method", file: !10, line: 1, size: 320, align: 8, elements: !233)
!233 = !{!225, !226, !234, !235, !236}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 192)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "tfn", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 256)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "ptrToThis", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 512)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "ReadRune", file: !56, line: 4, baseType: !239, size: 64, align: 64, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{!242, !32}
!242 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int32,int,error}", file: !56, size: 256, align: 8, elements: !243)
!243 = !{!244, !245, !246}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !56, line: 4, baseType: !71, size: 32, align: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !56, line: 4, baseType: !16, size: 64, align: 64, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !56, line: 4, baseType: !247, size: 128, align: 64, offset: 128)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "error", file: !10, line: 1, size: 128, align: 8, elements: !248)
!248 = !{!249, !258}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 1, baseType: !250, size: 64, align: 64)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string}", file: !56, size: 128, align: 8, elements: !252)
!252 = !{!253, !254}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !56, line: 1, baseType: !194, size: 64, align: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "Error", file: !56, line: 1, baseType: !255, size: 64, align: 64, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!9, !32}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !10, line: 1, baseType: !32, size: 64, align: 64, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !7, line: 1, baseType: !32, size: 64, align: 64, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "atEOT", file: !7, line: 4, baseType: !99, size: 8, align: 8, offset: 128)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "pos", file: !7, line: 4, baseType: !16, size: 64, align: 64, offset: 192)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxDoctype", linkageName: "command_line_arguments.rgxDoctype", scope: !1, file: !42, line: 269, type: !43, isLocal: true, isDefinition: true)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxIf", linkageName: "command_line_arguments.rgxIf", scope: !1, file: !42, line: 284, type: !43, isLocal: true, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxElse", linkageName: "command_line_arguments.rgxElse", scope: !1, file: !42, line: 285, type: !43, isLocal: true, isDefinition: true)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxEach", linkageName: "command_line_arguments.rgxEach", scope: !1, file: !42, line: 301, type: !43, isLocal: true, isDefinition: true)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxAssignment", linkageName: "command_line_arguments.rgxAssignment", scope: !1, file: !42, line: 312, type: !43, isLocal: true, isDefinition: true)
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxComment", linkageName: "command_line_arguments.rgxComment", scope: !1, file: !42, line: 323, type: !43, isLocal: true, isDefinition: true)
!274 = !DIGlobalVariableExpression(var: !275, expr: !DIExpression())
!275 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxId", linkageName: "command_line_arguments.rgxId", scope: !1, file: !42, line: 339, type: !43, isLocal: true, isDefinition: true)
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxClassName", linkageName: "command_line_arguments.rgxClassName", scope: !1, file: !42, line: 350, type: !43, isLocal: true, isDefinition: true)
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxAttribute", linkageName: "command_line_arguments.rgxAttribute", scope: !1, file: !42, line: 361, type: !43, isLocal: true, isDefinition: true)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxImport", linkageName: "command_line_arguments.rgxImport", scope: !1, file: !42, line: 377, type: !43, isLocal: true, isDefinition: true)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxExtends", linkageName: "command_line_arguments.rgxExtends", scope: !1, file: !42, line: 388, type: !43, isLocal: true, isDefinition: true)
!284 = !DIGlobalVariableExpression(var: !285, expr: !DIExpression())
!285 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxBlock", linkageName: "command_line_arguments.rgxBlock", scope: !1, file: !42, line: 399, type: !43, isLocal: true, isDefinition: true)
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxTag", linkageName: "command_line_arguments.rgxTag", scope: !1, file: !42, line: 410, type: !43, isLocal: true, isDefinition: true)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxMixin", linkageName: "command_line_arguments.rgxMixin", scope: !1, file: !42, line: 421, type: !43, isLocal: true, isDefinition: true)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxMixinCall", linkageName: "command_line_arguments.rgxMixinCall", scope: !1, file: !42, line: 432, type: !43, isLocal: true, isDefinition: true)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "command_line_arguments.rgxText", linkageName: "command_line_arguments.rgxText", scope: !1, file: !42, line: 443, type: !43, isLocal: true, isDefinition: true)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "io.EOF", linkageName: "io.EOF", scope: !1, file: !296, line: 6, type: !247, isLocal: false, isDefinition: true)
!296 = !DIFile(filename: "parser.go", directory: ".")
!297 = distinct !DISubprogram(name: "parser.command_line_arguments..import", linkageName: "command_line_arguments..import", scope: null, file: !7, line: 1, type: !298, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!298 = !DISubroutineType(types: !299)
!299 = !{!33}
!300 = !DILocation(line: 1, column: 1, scope: !301)
!301 = !DILexicalBlockFile(scope: !297, file: !10, discriminator: 0)
!302 = !DILocation(line: 21, column: 16, scope: !303)
!303 = !DILexicalBlockFile(scope: !297, file: !7, discriminator: 0)
!304 = !DILocation(line: 21, column: 5, scope: !303)
!305 = !DILocation(line: 223, column: 24, scope: !306)
!306 = !DILexicalBlockFile(scope: !297, file: !42, discriminator: 0)
!307 = !DILocation(line: 223, column: 5, scope: !306)
!308 = !DILocation(line: 269, column: 25, scope: !306)
!309 = !DILocation(line: 269, column: 5, scope: !306)
!310 = !DILocation(line: 284, column: 20, scope: !306)
!311 = !DILocation(line: 284, column: 5, scope: !306)
!312 = !DILocation(line: 285, column: 22, scope: !306)
!313 = !DILocation(line: 285, column: 5, scope: !306)
!314 = !DILocation(line: 301, column: 22, scope: !306)
!315 = !DILocation(line: 301, column: 5, scope: !306)
!316 = !DILocation(line: 312, column: 28, scope: !306)
!317 = !DILocation(line: 312, column: 5, scope: !306)
!318 = !DILocation(line: 323, column: 25, scope: !306)
!319 = !DILocation(line: 323, column: 5, scope: !306)
!320 = !DILocation(line: 339, column: 20, scope: !306)
!321 = !DILocation(line: 339, column: 5, scope: !306)
!322 = !DILocation(line: 350, column: 27, scope: !306)
!323 = !DILocation(line: 350, column: 5, scope: !306)
!324 = !DILocation(line: 361, column: 27, scope: !306)
!325 = !DILocation(line: 361, column: 5, scope: !306)
!326 = !DILocation(line: 377, column: 24, scope: !306)
!327 = !DILocation(line: 377, column: 5, scope: !306)
!328 = !DILocation(line: 388, column: 25, scope: !306)
!329 = !DILocation(line: 388, column: 5, scope: !306)
!330 = !DILocation(line: 399, column: 23, scope: !306)
!331 = !DILocation(line: 399, column: 5, scope: !306)
!332 = !DILocation(line: 410, column: 21, scope: !306)
!333 = !DILocation(line: 410, column: 5, scope: !306)
!334 = !DILocation(line: 421, column: 23, scope: !306)
!335 = !DILocation(line: 421, column: 5, scope: !306)
!336 = !DILocation(line: 432, column: 27, scope: !306)
!337 = !DILocation(line: 432, column: 5, scope: !306)
!338 = !DILocation(line: 443, column: 22, scope: !306)
!339 = !DILocation(line: 443, column: 5, scope: !306)
!340 = distinct !DISubprogram(name: "parser.command_line_arguments.SourcePosition..hash", linkageName: "command_line_arguments.command_line_arguments.SourcePosition..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!341 = !DILocalVariable(name: "key", arg: 1, scope: !340, file: !10, line: 1, type: !32)
!342 = !DILocation(line: 1, column: 1, scope: !340)
!343 = !DILocalVariable(name: "seed", arg: 2, scope: !340, file: !10, line: 1, type: !36)
!344 = !DILocalVariable(name: "$ret80", scope: !340, file: !10, line: 1, type: !36)
!345 = distinct !DISubprogram(name: "parser.command_line_arguments.SourcePosition..eq", linkageName: "command_line_arguments.command_line_arguments.SourcePosition..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!346 = !DILocalVariable(name: "key1", arg: 1, scope: !345, file: !10, line: 1, type: !32)
!347 = !DILocation(line: 1, column: 1, scope: !345)
!348 = !DILocalVariable(name: "key2", arg: 2, scope: !345, file: !10, line: 1, type: !32)
!349 = !DILocalVariable(name: "$ret81", scope: !345, file: !10, line: 1, type: !99)
!350 = distinct !DISubprogram(name: "parser.Pos..1command_line_arguments.SourcePosition", linkageName: "command_line_arguments.SourcePosition.Pos", scope: null, file: !7, line: 44, type: !351, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!351 = !DISubroutineType(types: !352)
!352 = !{!353, !359, !359}
!353 = !DICompositeType(tag: DW_TAG_structure_type, name: "SourcePosition", file: !7, line: 37, size: 320, align: 8, elements: !354)
!354 = !{!355, !356, !357, !358}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "LineNum", file: !7, line: 38, baseType: !16, size: 64, align: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ColNum", file: !7, line: 39, baseType: !16, size: 64, align: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "TokenLength", file: !7, line: 40, baseType: !16, size: 64, align: 64, offset: 128)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "Filename", file: !7, line: 41, baseType: !9, size: 128, align: 64, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!360 = !DILocalVariable(name: "s", arg: 1, scope: !350, file: !7, line: 44, type: !359)
!361 = !DILocation(line: 44, column: 1, scope: !350)
!362 = !DILocation(line: 45, column: 9, scope: !350)
!363 = !DILocation(line: 45, column: 2, scope: !350)
!364 = distinct !DISubprogram(name: "parser.command_line_arguments.Doctype..hash", linkageName: "command_line_arguments.command_line_arguments.Doctype..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!365 = !DILocalVariable(name: "key", arg: 1, scope: !364, file: !10, line: 1, type: !32)
!366 = !DILocation(line: 1, column: 1, scope: !364)
!367 = !DILocalVariable(name: "seed", arg: 2, scope: !364, file: !10, line: 1, type: !36)
!368 = !DILocalVariable(name: "$ret82", scope: !364, file: !10, line: 1, type: !36)
!369 = distinct !DISubprogram(name: "parser.command_line_arguments.Doctype..eq", linkageName: "command_line_arguments.command_line_arguments.Doctype..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!370 = !DILocalVariable(name: "key1", arg: 1, scope: !369, file: !10, line: 1, type: !32)
!371 = !DILocation(line: 1, column: 1, scope: !369)
!372 = !DILocalVariable(name: "key2", arg: 2, scope: !369, file: !10, line: 1, type: !32)
!373 = !DILocalVariable(name: "$ret83", scope: !369, file: !10, line: 1, type: !99)
!374 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Doctype", linkageName: "command_line_arguments.Doctype.Pos..stub", scope: null, file: !7, line: 44, type: !375, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!375 = !DISubroutineType(types: !376)
!376 = !{!353, !377, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Doctype", file: !7, line: 48, size: 448, align: 8, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 49, baseType: !353, size: 320, align: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !7, line: 50, baseType: !9, size: 128, align: 64, offset: 320)
!382 = !DILocalVariable(name: "$this0", arg: 1, scope: !374, file: !7, line: 44, type: !377)
!383 = !DILocation(line: 44, column: 29, scope: !374)
!384 = !DILocation(line: 48, column: 6, scope: !374)
!385 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !386)
!386 = distinct !DILocation(line: 48, column: 6, scope: !374)
!387 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !386)
!388 = distinct !DISubprogram(name: "parser.String..1command_line_arguments.Doctype", linkageName: "command_line_arguments.Doctype.String", scope: null, file: !7, line: 59, type: !389, isLocal: false, isDefinition: true, scopeLine: 59, isOptimized: false, unit: !1, retainedNodes: !3)
!389 = !DISubroutineType(types: !390)
!390 = !{!9, !377, !377}
!391 = !DILocalVariable(name: "d", arg: 1, scope: !388, file: !7, line: 59, type: !377)
!392 = !DILocation(line: 59, column: 1, scope: !388)
!393 = !DILocation(line: 60, column: 26, scope: !394)
!394 = distinct !DILexicalBlock(scope: !388, file: !7, line: 60, column: 2)
!395 = !DILocation(line: 60, column: 16, scope: !394)
!396 = !DILocation(line: 60, column: 24, scope: !394)
!397 = !DILocalVariable(name: "defined", scope: !394, file: !7, line: 60, type: !9)
!398 = !DILocation(line: 60, column: 5, scope: !388)
!399 = !DILocation(line: 60, column: 48, scope: !394)
!400 = !DILocalVariable(name: "$ret2", scope: !388, file: !7, line: 59, type: !9)
!401 = !DILocation(line: 59, column: 28, scope: !388)
!402 = !DILocation(line: 61, column: 3, scope: !394)
!403 = !DILocation(line: 64, column: 9, scope: !388)
!404 = !DILocation(line: 64, column: 2, scope: !388)
!405 = distinct !DISubprogram(name: "parser.command_line_arguments.Comment..hash", linkageName: "command_line_arguments.command_line_arguments.Comment..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!406 = !DILocalVariable(name: "key", arg: 1, scope: !405, file: !10, line: 1, type: !32)
!407 = !DILocation(line: 1, column: 1, scope: !405)
!408 = !DILocalVariable(name: "seed", arg: 2, scope: !405, file: !10, line: 1, type: !36)
!409 = !DILocalVariable(name: "$ret84", scope: !405, file: !10, line: 1, type: !36)
!410 = distinct !DISubprogram(name: "parser.command_line_arguments.Comment..eq", linkageName: "command_line_arguments.command_line_arguments.Comment..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!411 = !DILocalVariable(name: "key1", arg: 1, scope: !410, file: !10, line: 1, type: !32)
!412 = !DILocation(line: 1, column: 1, scope: !410)
!413 = !DILocalVariable(name: "key2", arg: 2, scope: !410, file: !10, line: 1, type: !32)
!414 = !DILocalVariable(name: "$ret85", scope: !410, file: !10, line: 1, type: !99)
!415 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Comment", linkageName: "command_line_arguments.Comment.Pos..stub", scope: null, file: !7, line: 44, type: !416, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!416 = !DISubroutineType(types: !417)
!417 = !{!353, !418, !418}
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = !DICompositeType(tag: DW_TAG_structure_type, name: "Comment", file: !7, line: 67, size: 576, align: 8, elements: !420)
!420 = !{!421, !422, !423, !444}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 68, baseType: !353, size: 320, align: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !7, line: 69, baseType: !9, size: 128, align: 64, offset: 320)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "Block", file: !7, line: 70, baseType: !424, size: 64, align: 64, offset: 448)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_structure_type, name: "Block", file: !7, line: 95, size: 512, align: 8, elements: !426)
!426 = !{!427, !428}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 96, baseType: !353, size: 320, align: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "Children", file: !7, line: 97, baseType: !429, size: 192, align: 64, offset: 320)
!429 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Node,int,int}", file: !56, size: 192, align: 8, elements: !430)
!430 = !{!431, !72, !73}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !432, size: 64, align: 64)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "Node", file: !7, line: 33, size: 128, align: 8, elements: !434)
!434 = !{!435, !259}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 33, baseType: !436, size: 64, align: 64)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)SourcePosition}", file: !56, size: 128, align: 8, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !56, line: 33, baseType: !194, size: 64, align: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "Pos", file: !56, line: 33, baseType: !441, size: 64, align: 64, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{!353, !32}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "Silent", file: !7, line: 71, baseType: !99, size: 8, align: 8, offset: 512)
!445 = !DILocalVariable(name: "$this1", arg: 1, scope: !415, file: !7, line: 44, type: !418)
!446 = !DILocation(line: 44, column: 29, scope: !415)
!447 = !DILocation(line: 67, column: 6, scope: !415)
!448 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !449)
!449 = distinct !DILocation(line: 67, column: 6, scope: !415)
!450 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !449)
!451 = distinct !DISubprogram(name: "parser.CanInline..1command_line_arguments.Block", linkageName: "command_line_arguments.Block.CanInline", scope: null, file: !7, line: 114, type: !452, isLocal: false, isDefinition: true, scopeLine: 114, isOptimized: false, unit: !1, retainedNodes: !3)
!452 = !DISubroutineType(types: !453)
!453 = !{!99, !424, !424}
!454 = !DILocalVariable(name: "b", arg: 1, scope: !451, file: !7, line: 114, type: !424)
!455 = !DILocation(line: 114, column: 1, scope: !451)
!456 = !DILocalVariable(name: "$ret6", scope: !451, file: !7, line: 114, type: !99)
!457 = !DILocation(line: 114, column: 29, scope: !451)
!458 = !DILocation(line: 115, column: 10, scope: !459)
!459 = distinct !DILexicalBlock(scope: !451, file: !7, line: 114, column: 1)
!460 = !DILocation(line: 115, column: 21, scope: !459)
!461 = !DILocation(line: 116, column: 3, scope: !459)
!462 = !DILocalVariable(name: "allText", scope: !459, file: !7, line: 119, type: !99)
!463 = !DILocation(line: 119, column: 2, scope: !451)
!464 = !DILocation(line: 121, column: 2, scope: !465)
!465 = distinct !DILexicalBlock(scope: !459, file: !7, line: 121, column: 2)
!466 = !DILocalVariable(name: "child", scope: !465, file: !7, line: 121, type: !433)
!467 = !DILocation(line: 121, column: 6, scope: !459)
!468 = !DILocalVariable(name: "txt", scope: !469, file: !7, line: 122, type: !470)
!469 = distinct !DILexicalBlock(scope: !465, file: !7, line: 122, column: 3)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !7, line: 82, size: 512, align: 8, elements: !472)
!472 = !{!473, !474, !475}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 83, baseType: !353, size: 320, align: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !7, line: 84, baseType: !9, size: 128, align: 64, offset: 320)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "Raw", file: !7, line: 85, baseType: !99, size: 8, align: 8, offset: 448)
!476 = !DILocation(line: 122, column: 6, scope: !465)
!477 = !DILocalVariable(name: "ok", scope: !469, file: !7, line: 122, type: !99)
!478 = !DILocation(line: 122, column: 6, scope: !469)
!479 = !DILocation(line: 122, column: 32, scope: !469)
!480 = !DILocation(line: 122, column: 42, scope: !469)
!481 = !DILocation(line: 122, column: 3, scope: !469)
!482 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Block", linkageName: "command_line_arguments.Block.Pos..stub", scope: null, file: !7, line: 44, type: !483, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!483 = !DISubroutineType(types: !484)
!484 = !{!353, !424, !424}
!485 = !DILocalVariable(name: "$this2", arg: 1, scope: !482, file: !7, line: 44, type: !424)
!486 = !DILocation(line: 44, column: 29, scope: !482)
!487 = !DILocation(line: 95, column: 6, scope: !482)
!488 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !489)
!489 = distinct !DILocation(line: 95, column: 6, scope: !482)
!490 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !489)
!491 = distinct !DISubprogram(name: "parser.push..1command_line_arguments.Block", linkageName: "command_line_arguments.Block.push", scope: null, file: !7, line: 106, type: !492, isLocal: false, isDefinition: true, scopeLine: 106, isOptimized: false, unit: !1, retainedNodes: !3)
!492 = !DISubroutineType(types: !493)
!493 = !{!33, !424, !424, !433}
!494 = !DILocalVariable(name: "b", arg: 1, scope: !491, file: !7, line: 106, type: !424)
!495 = !DILocation(line: 106, column: 1, scope: !491)
!496 = !DILocation(line: 107, column: 3, scope: !491)
!497 = !DILocation(line: 107, column: 15, scope: !491)
!498 = !DILocation(line: 107, column: 13, scope: !491)
!499 = distinct !DISubprogram(name: "parser.pushFront..1command_line_arguments.Block", linkageName: "command_line_arguments.Block.pushFront", scope: null, file: !7, line: 110, type: !492, isLocal: false, isDefinition: true, scopeLine: 110, isOptimized: false, unit: !1, retainedNodes: !3)
!500 = !DILocalVariable(name: "b", arg: 1, scope: !499, file: !7, line: 110, type: !424)
!501 = !DILocation(line: 110, column: 1, scope: !499)
!502 = !DILocalVariable(name: "node", arg: 2, scope: !499, file: !7, line: 110, type: !433)
!503 = !DILocation(line: 110, column: 27, scope: !499)
!504 = !DILocation(line: 111, column: 3, scope: !499)
!505 = !DILocation(line: 111, column: 22, scope: !499)
!506 = !DILocation(line: 111, column: 15, scope: !499)
!507 = !DILocation(line: 111, column: 13, scope: !499)
!508 = distinct !DISubprogram(name: "parser.command_line_arguments.Text..hash", linkageName: "command_line_arguments.command_line_arguments.Text..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!509 = !DILocalVariable(name: "key", arg: 1, scope: !508, file: !10, line: 1, type: !32)
!510 = !DILocation(line: 1, column: 1, scope: !508)
!511 = !DILocalVariable(name: "seed", arg: 2, scope: !508, file: !10, line: 1, type: !36)
!512 = !DILocalVariable(name: "$ret86", scope: !508, file: !10, line: 1, type: !36)
!513 = distinct !DISubprogram(name: "parser.command_line_arguments.Text..eq", linkageName: "command_line_arguments.command_line_arguments.Text..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!514 = !DILocalVariable(name: "key1", arg: 1, scope: !513, file: !10, line: 1, type: !32)
!515 = !DILocation(line: 1, column: 1, scope: !513)
!516 = !DILocalVariable(name: "key2", arg: 2, scope: !513, file: !10, line: 1, type: !32)
!517 = !DILocalVariable(name: "$ret87", scope: !513, file: !10, line: 1, type: !99)
!518 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Text", linkageName: "command_line_arguments.Text.Pos..stub", scope: null, file: !7, line: 44, type: !519, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!519 = !DISubroutineType(types: !520)
!520 = !{!353, !470, !470}
!521 = !DILocalVariable(name: "$this3", arg: 1, scope: !518, file: !7, line: 44, type: !470)
!522 = !DILocation(line: 44, column: 29, scope: !518)
!523 = !DILocation(line: 82, column: 6, scope: !518)
!524 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !525)
!525 = distinct !DILocation(line: 82, column: 6, scope: !518)
!526 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !525)
!527 = distinct !DISubprogram(name: "parser.newBlock", scope: null, file: !7, line: 100, type: !528, isLocal: true, isDefinition: true, scopeLine: 100, isOptimized: false, unit: !1, retainedNodes: !3)
!528 = !DISubroutineType(types: !529)
!529 = !{!424}
!530 = !DILocalVariable(name: "$ret5", scope: !527, file: !7, line: 100, type: !424)
!531 = !DILocation(line: 100, column: 17, scope: !527)
!532 = !DILocation(line: 101, column: 11, scope: !533)
!533 = distinct !DILexicalBlock(scope: !527, file: !7, line: 100, column: 1)
!534 = !DILocalVariable(name: "block", scope: !533, file: !7, line: 101, type: !424)
!535 = !DILocation(line: 101, column: 2, scope: !527)
!536 = !DILocation(line: 102, column: 19, scope: !533)
!537 = !DILocation(line: 102, column: 7, scope: !533)
!538 = !DILocation(line: 102, column: 17, scope: !533)
!539 = !DILocation(line: 103, column: 2, scope: !533)
!540 = distinct !DISubprogram(name: "parser.CanInline..stub..1command_line_arguments.NamedBlock", linkageName: "command_line_arguments.NamedBlock.CanInline..stub", scope: null, file: !7, line: 114, type: !541, isLocal: false, isDefinition: true, scopeLine: 114, isOptimized: false, unit: !1, retainedNodes: !3)
!541 = !DISubroutineType(types: !542)
!542 = !{!99, !543, !543}
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "NamedBlock", file: !7, line: 137, size: 704, align: 8, elements: !545)
!545 = !{!546, !547, !548}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "Block", file: !7, line: 138, baseType: !425, size: 512, align: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !7, line: 139, baseType: !9, size: 128, align: 64, offset: 512)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "Modifier", file: !7, line: 140, baseType: !16, size: 64, align: 64, offset: 640)
!549 = !DILocalVariable(name: "$this4", arg: 1, scope: !540, file: !7, line: 114, type: !543)
!550 = !DILocation(line: 114, column: 26, scope: !540)
!551 = !DILocalVariable(name: "$ret68", scope: !540, file: !7, line: 114, type: !99)
!552 = !DILocation(line: 114, column: 29, scope: !540)
!553 = !DILocation(line: 137, column: 6, scope: !540)
!554 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.NamedBlock", linkageName: "command_line_arguments.NamedBlock.Pos..stub", scope: null, file: !7, line: 44, type: !555, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!555 = !DISubroutineType(types: !556)
!556 = !{!353, !543, !543}
!557 = !DILocalVariable(name: "$this5", arg: 1, scope: !554, file: !7, line: 44, type: !543)
!558 = !DILocation(line: 44, column: 29, scope: !554)
!559 = !DILocation(line: 137, column: 6, scope: !554)
!560 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !561)
!561 = distinct !DILocation(line: 137, column: 6, scope: !554)
!562 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !561)
!563 = distinct !DISubprogram(name: "parser.push..stub..1command_line_arguments.NamedBlock", linkageName: "command_line_arguments.NamedBlock.push..stub", scope: null, file: !7, line: 106, type: !564, isLocal: false, isDefinition: true, scopeLine: 106, isOptimized: false, unit: !1, retainedNodes: !3)
!564 = !DISubroutineType(types: !565)
!565 = !{!33, !543, !543, !433}
!566 = !DILocalVariable(name: "$this8", arg: 1, scope: !563, file: !7, line: 106, type: !543)
!567 = !DILocation(line: 106, column: 21, scope: !563)
!568 = !DILocalVariable(name: "$p9", arg: 2, scope: !563, file: !7, line: 106, type: !433)
!569 = !DILocation(line: 106, column: 22, scope: !563)
!570 = !DILocation(line: 137, column: 6, scope: !563)
!571 = distinct !DISubprogram(name: "parser.pushFront..stub..1command_line_arguments.NamedBlock", linkageName: "command_line_arguments.NamedBlock.pushFront..stub", scope: null, file: !7, line: 110, type: !564, isLocal: false, isDefinition: true, scopeLine: 110, isOptimized: false, unit: !1, retainedNodes: !3)
!572 = !DILocalVariable(name: "$this6", arg: 1, scope: !571, file: !7, line: 110, type: !543)
!573 = !DILocation(line: 110, column: 26, scope: !571)
!574 = !DILocalVariable(name: "$p7", arg: 2, scope: !571, file: !7, line: 110, type: !433)
!575 = !DILocation(line: 110, column: 27, scope: !571)
!576 = !DILocation(line: 137, column: 6, scope: !571)
!577 = distinct !DISubprogram(name: "parser.command_line_arguments.Attribute..hash", linkageName: "command_line_arguments.command_line_arguments.Attribute..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!578 = !DILocalVariable(name: "key", arg: 1, scope: !577, file: !10, line: 1, type: !32)
!579 = !DILocation(line: 1, column: 1, scope: !577)
!580 = !DILocalVariable(name: "seed", arg: 2, scope: !577, file: !10, line: 1, type: !36)
!581 = !DILocalVariable(name: "$ret88", scope: !577, file: !10, line: 1, type: !36)
!582 = distinct !DISubprogram(name: "parser.command_line_arguments.Attribute..eq", linkageName: "command_line_arguments.command_line_arguments.Attribute..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!583 = !DILocalVariable(name: "key1", arg: 1, scope: !582, file: !10, line: 1, type: !32)
!584 = !DILocation(line: 1, column: 1, scope: !582)
!585 = !DILocalVariable(name: "key2", arg: 2, scope: !582, file: !10, line: 1, type: !32)
!586 = !DILocalVariable(name: "$ret89", scope: !582, file: !10, line: 1, type: !99)
!587 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Attribute", linkageName: "command_line_arguments.Attribute.Pos..stub", scope: null, file: !7, line: 44, type: !588, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!588 = !DISubroutineType(types: !589)
!589 = !{!353, !590, !590}
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DICompositeType(tag: DW_TAG_structure_type, name: "Attribute", file: !7, line: 151, size: 768, align: 8, elements: !592)
!592 = !{!593, !594, !595, !596, !597}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 152, baseType: !353, size: 320, align: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !7, line: 153, baseType: !9, size: 128, align: 64, offset: 320)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !7, line: 154, baseType: !9, size: 128, align: 64, offset: 448)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "IsRaw", file: !7, line: 155, baseType: !99, size: 8, align: 8, offset: 576)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "Condition", file: !7, line: 156, baseType: !9, size: 128, align: 64, offset: 640)
!598 = !DILocalVariable(name: "$this10", arg: 1, scope: !587, file: !7, line: 44, type: !590)
!599 = !DILocation(line: 44, column: 29, scope: !587)
!600 = !DILocation(line: 151, column: 6, scope: !587)
!601 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !602)
!602 = distinct !DILocation(line: 151, column: 6, scope: !587)
!603 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !602)
!604 = distinct !DISubprogram(name: "parser.IsRawText..1command_line_arguments.Tag", linkageName: "command_line_arguments.Tag.IsRawText", scope: null, file: !7, line: 187, type: !605, isLocal: false, isDefinition: true, scopeLine: 187, isOptimized: false, unit: !1, retainedNodes: !3)
!605 = !DISubroutineType(types: !606)
!606 = !{!99, !607, !607}
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "Tag", file: !7, line: 159, size: 768, align: 8, elements: !609)
!609 = !{!610, !611, !612, !613, !614}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 160, baseType: !353, size: 320, align: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "Block", file: !7, line: 161, baseType: !424, size: 64, align: 64, offset: 320)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !7, line: 162, baseType: !9, size: 128, align: 64, offset: 384)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "IsInterpolated", file: !7, line: 163, baseType: !99, size: 8, align: 8, offset: 512)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "Attributes", file: !7, line: 164, baseType: !615, size: 192, align: 64, offset: 576)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Attribute,int,int}", file: !56, size: 192, align: 8, elements: !616)
!616 = !{!617, !72, !73}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !590, size: 64, align: 64)
!618 = !DILocalVariable(name: "t", arg: 1, scope: !604, file: !7, line: 187, type: !607)
!619 = !DILocation(line: 187, column: 1, scope: !604)
!620 = !DILocalVariable(name: "$ret10", scope: !604, file: !7, line: 187, type: !99)
!621 = !DILocation(line: 187, column: 27, scope: !604)
!622 = !DILocation(line: 188, column: 10, scope: !604)
!623 = !DILocation(line: 188, column: 16, scope: !604)
!624 = !DILocation(line: 188, column: 2, scope: !604)
!625 = !DILocation(line: 188, column: 37, scope: !604)
!626 = distinct !DISubprogram(name: "parser.IsSelfClosing..1command_line_arguments.Tag", linkageName: "command_line_arguments.Tag.IsSelfClosing", scope: null, file: !7, line: 177, type: !605, isLocal: false, isDefinition: true, scopeLine: 177, isOptimized: false, unit: !1, retainedNodes: !3)
!627 = !DILocalVariable(name: "t", arg: 1, scope: !626, file: !7, line: 177, type: !607)
!628 = !DILocation(line: 177, column: 1, scope: !626)
!629 = !DILocalVariable(name: "$ret9", scope: !626, file: !7, line: 177, type: !99)
!630 = !DILocation(line: 177, column: 31, scope: !626)
!631 = !DILocation(line: 178, column: 2, scope: !632)
!632 = distinct !DILexicalBlock(scope: !626, file: !7, line: 178, column: 2)
!633 = !DILocation(line: 179, column: 14, scope: !632)
!634 = !DILocalVariable(name: "tag", scope: !632, file: !7, line: 178, type: !9)
!635 = !DILocation(line: 178, column: 6, scope: !626)
!636 = !DILocation(line: 179, column: 10, scope: !632)
!637 = !DILocation(line: 180, column: 4, scope: !632)
!638 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Tag", linkageName: "command_line_arguments.Tag.Pos..stub", scope: null, file: !7, line: 44, type: !639, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!639 = !DISubroutineType(types: !640)
!640 = !{!353, !607, !607}
!641 = !DILocalVariable(name: "$this11", arg: 1, scope: !638, file: !7, line: 44, type: !607)
!642 = !DILocation(line: 44, column: 29, scope: !638)
!643 = !DILocation(line: 159, column: 6, scope: !638)
!644 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !645)
!645 = distinct !DILocation(line: 159, column: 6, scope: !638)
!646 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !645)
!647 = distinct !DISubprogram(name: "parser.command_line_arguments.Condition..hash", linkageName: "command_line_arguments.command_line_arguments.Condition..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!648 = !DILocalVariable(name: "key", arg: 1, scope: !647, file: !10, line: 1, type: !32)
!649 = !DILocation(line: 1, column: 1, scope: !647)
!650 = !DILocalVariable(name: "seed", arg: 2, scope: !647, file: !10, line: 1, type: !36)
!651 = !DILocalVariable(name: "$ret90", scope: !647, file: !10, line: 1, type: !36)
!652 = distinct !DISubprogram(name: "parser.command_line_arguments.Condition..eq", linkageName: "command_line_arguments.command_line_arguments.Condition..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!653 = !DILocalVariable(name: "key1", arg: 1, scope: !652, file: !10, line: 1, type: !32)
!654 = !DILocation(line: 1, column: 1, scope: !652)
!655 = !DILocalVariable(name: "key2", arg: 2, scope: !652, file: !10, line: 1, type: !32)
!656 = !DILocalVariable(name: "$ret91", scope: !652, file: !10, line: 1, type: !99)
!657 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Condition", linkageName: "command_line_arguments.Condition.Pos..stub", scope: null, file: !7, line: 44, type: !658, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!658 = !DISubroutineType(types: !659)
!659 = !{!353, !660, !660}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DICompositeType(tag: DW_TAG_structure_type, name: "Condition", file: !7, line: 191, size: 576, align: 8, elements: !662)
!662 = !{!663, !664, !665, !666}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 192, baseType: !353, size: 320, align: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "Positive", file: !7, line: 193, baseType: !424, size: 64, align: 64, offset: 320)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "Negative", file: !7, line: 194, baseType: !424, size: 64, align: 64, offset: 384)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "Expression", file: !7, line: 195, baseType: !9, size: 128, align: 64, offset: 448)
!667 = !DILocalVariable(name: "$this12", arg: 1, scope: !657, file: !7, line: 44, type: !660)
!668 = !DILocation(line: 44, column: 29, scope: !657)
!669 = !DILocation(line: 191, column: 6, scope: !657)
!670 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !671)
!671 = distinct !DILocation(line: 191, column: 6, scope: !657)
!672 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !671)
!673 = distinct !DISubprogram(name: "parser.command_line_arguments.Each..hash", linkageName: "command_line_arguments.command_line_arguments.Each..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!674 = !DILocalVariable(name: "key", arg: 1, scope: !673, file: !10, line: 1, type: !32)
!675 = !DILocation(line: 1, column: 1, scope: !673)
!676 = !DILocalVariable(name: "seed", arg: 2, scope: !673, file: !10, line: 1, type: !36)
!677 = !DILocalVariable(name: "$ret92", scope: !673, file: !10, line: 1, type: !36)
!678 = distinct !DISubprogram(name: "parser.command_line_arguments.Each..eq", linkageName: "command_line_arguments.command_line_arguments.Each..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!679 = !DILocalVariable(name: "key1", arg: 1, scope: !678, file: !10, line: 1, type: !32)
!680 = !DILocation(line: 1, column: 1, scope: !678)
!681 = !DILocalVariable(name: "key2", arg: 2, scope: !678, file: !10, line: 1, type: !32)
!682 = !DILocalVariable(name: "$ret93", scope: !678, file: !10, line: 1, type: !99)
!683 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Each", linkageName: "command_line_arguments.Each.Pos..stub", scope: null, file: !7, line: 44, type: !684, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!684 = !DISubroutineType(types: !685)
!685 = !{!353, !686, !686}
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DICompositeType(tag: DW_TAG_structure_type, name: "Each", file: !7, line: 204, size: 768, align: 8, elements: !688)
!688 = !{!689, !690, !691, !692, !693}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 205, baseType: !353, size: 320, align: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "X", file: !7, line: 206, baseType: !9, size: 128, align: 64, offset: 320)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "Y", file: !7, line: 207, baseType: !9, size: 128, align: 64, offset: 448)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "Expression", file: !7, line: 208, baseType: !9, size: 128, align: 64, offset: 576)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "Block", file: !7, line: 209, baseType: !424, size: 64, align: 64, offset: 704)
!694 = !DILocalVariable(name: "$this13", arg: 1, scope: !683, file: !7, line: 44, type: !686)
!695 = !DILocation(line: 44, column: 29, scope: !683)
!696 = !DILocation(line: 204, column: 6, scope: !683)
!697 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !698)
!698 = distinct !DILocation(line: 204, column: 6, scope: !683)
!699 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !698)
!700 = distinct !DISubprogram(name: "parser.command_line_arguments.Assignment..hash", linkageName: "command_line_arguments.command_line_arguments.Assignment..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!701 = !DILocalVariable(name: "key", arg: 1, scope: !700, file: !10, line: 1, type: !32)
!702 = !DILocation(line: 1, column: 1, scope: !700)
!703 = !DILocalVariable(name: "seed", arg: 2, scope: !700, file: !10, line: 1, type: !36)
!704 = !DILocalVariable(name: "$ret94", scope: !700, file: !10, line: 1, type: !36)
!705 = distinct !DISubprogram(name: "parser.command_line_arguments.Assignment..eq", linkageName: "command_line_arguments.command_line_arguments.Assignment..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!706 = !DILocalVariable(name: "key1", arg: 1, scope: !705, file: !10, line: 1, type: !32)
!707 = !DILocation(line: 1, column: 1, scope: !705)
!708 = !DILocalVariable(name: "key2", arg: 2, scope: !705, file: !10, line: 1, type: !32)
!709 = !DILocalVariable(name: "$ret95", scope: !705, file: !10, line: 1, type: !99)
!710 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Assignment", linkageName: "command_line_arguments.Assignment.Pos..stub", scope: null, file: !7, line: 44, type: !711, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!711 = !DISubroutineType(types: !712)
!712 = !{!353, !713, !713}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "Assignment", file: !7, line: 218, size: 576, align: 8, elements: !715)
!715 = !{!716, !717, !718}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 219, baseType: !353, size: 320, align: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "X", file: !7, line: 220, baseType: !9, size: 128, align: 64, offset: 320)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "Expression", file: !7, line: 221, baseType: !9, size: 128, align: 64, offset: 448)
!719 = !DILocalVariable(name: "$this14", arg: 1, scope: !710, file: !7, line: 44, type: !713)
!720 = !DILocation(line: 44, column: 29, scope: !710)
!721 = !DILocation(line: 218, column: 6, scope: !710)
!722 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !723)
!723 = distinct !DILocation(line: 218, column: 6, scope: !710)
!724 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !723)
!725 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.Mixin", linkageName: "command_line_arguments.Mixin.Pos..stub", scope: null, file: !7, line: 44, type: !726, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!726 = !DISubroutineType(types: !727)
!727 = !{!353, !728, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mixin", file: !7, line: 231, size: 704, align: 8, elements: !730)
!730 = !{!731, !732, !733, !734}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 232, baseType: !353, size: 320, align: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "Block", file: !7, line: 233, baseType: !424, size: 64, align: 64, offset: 320)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !7, line: 234, baseType: !9, size: 128, align: 64, offset: 384)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "Args", file: !7, line: 235, baseType: !106, size: 192, align: 64, offset: 512)
!735 = !DILocalVariable(name: "$this15", arg: 1, scope: !725, file: !7, line: 44, type: !728)
!736 = !DILocation(line: 44, column: 29, scope: !725)
!737 = !DILocation(line: 231, column: 6, scope: !725)
!738 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !739)
!739 = distinct !DILocation(line: 231, column: 6, scope: !725)
!740 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !739)
!741 = distinct !DISubprogram(name: "parser.Pos..stub..1command_line_arguments.MixinCall", linkageName: "command_line_arguments.MixinCall.Pos..stub", scope: null, file: !7, line: 44, type: !742, isLocal: false, isDefinition: true, scopeLine: 44, isOptimized: false, unit: !1, retainedNodes: !3)
!742 = !DISubroutineType(types: !743)
!743 = !{!353, !744, !744}
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DICompositeType(tag: DW_TAG_structure_type, name: "MixinCall", file: !7, line: 256, size: 640, align: 8, elements: !746)
!746 = !{!747, !748, !749}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "SourcePosition", file: !7, line: 257, baseType: !353, size: 320, align: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !7, line: 258, baseType: !9, size: 128, align: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "Args", file: !7, line: 259, baseType: !106, size: 192, align: 64, offset: 448)
!750 = !DILocalVariable(name: "$this16", arg: 1, scope: !741, file: !7, line: 44, type: !744)
!751 = !DILocation(line: 44, column: 29, scope: !741)
!752 = !DILocation(line: 256, column: 6, scope: !741)
!753 = !DILocation(line: 44, column: 1, scope: !350, inlinedAt: !754)
!754 = distinct !DILocation(line: 256, column: 6, scope: !741)
!755 = !DILocation(line: 45, column: 2, scope: !350, inlinedAt: !754)
!756 = distinct !DISubprogram(name: "parser.Parse..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.Parse", scope: null, file: !296, line: 75, type: !757, isLocal: false, isDefinition: true, scopeLine: 75, isOptimized: false, unit: !1, retainedNodes: !3)
!757 = !DISubroutineType(types: !758)
!758 = !{!424, !759, !759}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DICompositeType(tag: DW_TAG_structure_type, name: "Parser", file: !296, line: 13, size: 576, align: 8, elements: !761)
!761 = !{!762, !817, !818, !935, !942, !943, !944}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "scanner", file: !296, line: 14, baseType: !763, size: 64, align: 64)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.scanner", file: !42, line: 40, size: 768, align: 8, elements: !765)
!765 = !{!766, !792, !808, !809, !810, !811, !812, !813, !814, !815, !816}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "reader", file: !42, line: 41, baseType: !767, size: 64, align: 64)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !296, line: 8, size: 704, align: 8, elements: !769)
!769 = !{!770, !771, !787, !788, !789, !790, !791}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !296, line: 8, baseType: !95, size: 192, align: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "rd", file: !296, line: 8, baseType: !772, size: 128, align: 64, offset: 192)
!772 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !296, line: 4, size: 128, align: 8, elements: !773)
!773 = !{!774, !786}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !296, line: 4, baseType: !775, size: 64, align: 64)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !56, size: 128, align: 8, elements: !777)
!777 = !{!193, !778}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !56, line: 4, baseType: !779, size: 64, align: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!782, !32, !95}
!782 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !56, size: 192, align: 8, elements: !783)
!783 = !{!784, !785}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !56, line: 4, baseType: !16, size: 64, align: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !56, line: 4, baseType: !247, size: 128, align: 64, offset: 64)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !296, line: 1, baseType: !32, size: 64, align: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !296, line: 8, baseType: !16, size: 64, align: 64, offset: 320)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !296, line: 8, baseType: !16, size: 64, align: 64, offset: 384)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !296, line: 8, baseType: !247, size: 128, align: 64, offset: 448)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "lastByte", file: !296, line: 8, baseType: !16, size: 64, align: 64, offset: 576)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "lastRuneSize", file: !296, line: 8, baseType: !16, size: 64, align: 64, offset: 640)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "indentStack", file: !42, line: 42, baseType: !793, size: 64, align: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "List", file: !296, line: 8, size: 384, align: 8, elements: !795)
!795 = !{!796, !807}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "root", file: !296, line: 8, baseType: !797, size: 320, align: 64)
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "Element", file: !296, line: 8, size: 320, align: 8, elements: !798)
!798 = !{!799, !801, !802, !803}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "next", file: !296, line: 8, baseType: !800, size: 64, align: 64)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "prev", file: !296, line: 8, baseType: !800, size: 64, align: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "list", file: !296, line: 8, baseType: !32, size: 64, align: 64, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !296, line: 8, baseType: !804, size: 128, align: 64, offset: 192)
!804 = !DICompositeType(tag: DW_TAG_structure_type, name: "PrivateKey", file: !296, line: 8, size: 128, align: 8, elements: !805)
!805 = !{!806, !786}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !296, line: 1, baseType: !194, size: 64, align: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "len", file: !296, line: 8, baseType: !16, size: 64, align: 64, offset: 320)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "stash", file: !42, line: 43, baseType: !793, size: 64, align: 64, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !42, line: 45, baseType: !71, size: 32, align: 32, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", file: !42, line: 46, baseType: !9, size: 128, align: 64, offset: 256)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "line", file: !42, line: 48, baseType: !16, size: 64, align: 64, offset: 384)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "col", file: !42, line: 49, baseType: !16, size: 64, align: 64, offset: 448)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "lastTokenLine", file: !42, line: 50, baseType: !16, size: 64, align: 64, offset: 512)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "lastTokenCol", file: !42, line: 51, baseType: !16, size: 64, align: 64, offset: 576)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "lastTokenSize", file: !42, line: 52, baseType: !16, size: 64, align: 64, offset: 640)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "readRaw", file: !42, line: 54, baseType: !99, size: 8, align: 8, offset: 704)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "filename", file: !296, line: 15, baseType: !9, size: 128, align: 64, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "fs", file: !296, line: 16, baseType: !819, size: 128, align: 64, offset: 192)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileSystem", file: !296, line: 8, size: 128, align: 8, elements: !820)
!820 = !{!821, !786}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !296, line: 8, baseType: !822, size: 64, align: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,string)struct{File,error}}", file: !56, size: 128, align: 8, elements: !824)
!824 = !{!825, !826}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !56, line: 8, baseType: !194, size: 64, align: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "Open", file: !56, line: 8, baseType: !827, size: 64, align: 64, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!830, !32, !9}
!830 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{File,error}", file: !56, size: 256, align: 8, elements: !831)
!831 = !{!832, !934}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 8, baseType: !833, size: 128, align: 64)
!833 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", file: !296, line: 8, size: 128, align: 8, elements: !834)
!834 = !{!835, !786}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !296, line: 8, baseType: !836, size: 64, align: 64)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,int)struct{struct{*FileInfo,int,int},error},*func(*void,int64,int)struct{int64,error},*func(*void)struct{FileInfo,error}}", file: !56, size: 384, align: 8, elements: !838)
!838 = !{!825, !839, !843, !844, !919, !927}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !56, line: 8, baseType: !840, size: 64, align: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!247, !32}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !56, line: 8, baseType: !779, size: 64, align: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "Readdir", file: !56, line: 8, baseType: !845, size: 64, align: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!848, !32, !16}
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{struct{*FileInfo,int,int},error}", file: !56, size: 320, align: 8, elements: !849)
!849 = !{!850, !918}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 8, baseType: !851, size: 192, align: 64)
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*FileInfo,int,int}", file: !56, size: 192, align: 8, elements: !852)
!852 = !{!853, !72, !73}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !854, size: 64, align: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileInfo", file: !296, line: 7, size: 128, align: 8, elements: !856)
!856 = !{!857, !786}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !296, line: 7, baseType: !858, size: 64, align: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)bool,*func(*void)Time,*func(*void)FileMode,*func(*void)string,*func(*void)int64,*func(*void)PrivateKey}", file: !56, size: 448, align: 8, elements: !860)
!860 = !{!861, !862, !866, !904, !909, !910, !914}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !56, line: 7, baseType: !194, size: 64, align: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "IsDir", file: !56, line: 7, baseType: !863, size: 64, align: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!99, !32}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "ModTime", file: !56, line: 7, baseType: !867, size: 64, align: 64, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!870, !32}
!870 = !DICompositeType(tag: DW_TAG_structure_type, name: "Time", file: !296, line: 7, size: 192, align: 8, elements: !871)
!871 = !{!872, !874, !876}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "wall", file: !296, line: 7, baseType: !873, size: 64, align: 64)
!873 = !DIBasicType(name: "uint64", size: 64, encoding: DW_ATE_unsigned)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "ext", file: !296, line: 7, baseType: !875, size: 64, align: 64, offset: 64)
!875 = !DIBasicType(name: "int64", size: 64, encoding: DW_ATE_signed)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "loc", file: !296, line: 7, baseType: !877, size: 64, align: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", file: !296, line: 7, size: 704, align: 8, elements: !879)
!879 = !{!880, !881, !890, !901, !902, !903}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !296, line: 7, baseType: !9, size: 128, align: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "zone", file: !296, line: 7, baseType: !882, size: 192, align: 64, offset: 128)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zone,int,int}", file: !56, size: 192, align: 8, elements: !883)
!883 = !{!884, !72, !73}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !885, size: 64, align: 64)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zone", file: !296, line: 7, size: 256, align: 8, elements: !887)
!887 = !{!880, !888, !889}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !296, line: 7, baseType: !16, size: 64, align: 64, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "isDST", file: !296, line: 7, baseType: !99, size: 8, align: 8, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "tx", file: !296, line: 7, baseType: !891, size: 192, align: 64, offset: 320)
!891 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zoneTrans,int,int}", file: !56, size: 192, align: 8, elements: !892)
!892 = !{!893, !72, !73}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !56, line: 1, baseType: !894, size: 64, align: 64)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zoneTrans", file: !296, line: 7, size: 128, align: 8, elements: !896)
!896 = !{!897, !898, !899, !900}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "when", file: !296, line: 7, baseType: !875, size: 64, align: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "index", file: !296, line: 7, baseType: !14, size: 8, align: 8, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "isstd", file: !296, line: 7, baseType: !99, size: 8, align: 8, offset: 72)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "isutc", file: !296, line: 7, baseType: !99, size: 8, align: 8, offset: 80)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "cacheStart", file: !296, line: 7, baseType: !875, size: 64, align: 64, offset: 512)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cacheEnd", file: !296, line: 7, baseType: !875, size: 64, align: 64, offset: 576)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "cacheZone", file: !296, line: 7, baseType: !885, size: 64, align: 64, offset: 640)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", file: !56, line: 7, baseType: !905, size: 64, align: 64, offset: 192)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!908, !32}
!908 = !DIBasicType(name: "FileMode", size: 32, encoding: DW_ATE_unsigned)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !56, line: 7, baseType: !255, size: 64, align: 64, offset: 256)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "Size", file: !56, line: 7, baseType: !911, size: 64, align: 64, offset: 320)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!875, !32}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "Sys", file: !56, line: 7, baseType: !915, size: 64, align: 64, offset: 384)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!804, !32}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 8, baseType: !247, size: 128, align: 64, offset: 192)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "Seek", file: !56, line: 8, baseType: !920, size: 64, align: 64, offset: 256)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!923, !32, !875, !16}
!923 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int64,error}", file: !56, size: 192, align: 8, elements: !924)
!924 = !{!925, !926}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 6, baseType: !875, size: 64, align: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 6, baseType: !247, size: 128, align: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "Stat", file: !56, line: 8, baseType: !928, size: 64, align: 64, offset: 320)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!931, !32}
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{FileInfo,error}", file: !56, size: 256, align: 8, elements: !932)
!932 = !{!933, !934}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 8, baseType: !855, size: 128, align: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 8, baseType: !247, size: 128, align: 64, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "currenttoken", file: !296, line: 17, baseType: !936, size: 64, align: 64, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.token", file: !42, line: 57, size: 256, align: 8, elements: !938)
!938 = !{!939, !940, !941}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "Kind", file: !42, line: 58, baseType: !71, size: 32, align: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !42, line: 59, baseType: !9, size: 128, align: 64, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "Data", file: !42, line: 60, baseType: !21, size: 64, align: 64, offset: 192)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "namedBlocks", file: !296, line: 18, baseType: !21, size: 64, align: 64, offset: 384)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "parent", file: !296, line: 19, baseType: !32, size: 64, align: 64, offset: 448)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "result", file: !296, line: 20, baseType: !424, size: 64, align: 64, offset: 512)
!945 = !DILocalVariable(name: "p", arg: 1, scope: !756, file: !296, line: 75, type: !759)
!946 = !DILocation(line: 75, column: 1, scope: !756)
!947 = !DILocalVariable(name: "$ret25", scope: !756, file: !296, line: 75, type: !424)
!948 = !DILocation(line: 75, column: 26, scope: !756)
!949 = !DILocation(line: 76, column: 6, scope: !950)
!950 = distinct !DILexicalBlock(scope: !756, file: !296, line: 75, column: 1)
!951 = !DILocation(line: 145, column: 1, scope: !756)
!952 = !DILocation(line: 76, column: 14, scope: !950)
!953 = !DILocation(line: 77, column: 10, scope: !950)
!954 = !DILocation(line: 77, column: 11, scope: !950)
!955 = !DILocation(line: 80, column: 8, scope: !950)
!956 = !DILocation(line: 80, column: 2, scope: !950)
!957 = !DILocation(line: 96, column: 11, scope: !950)
!958 = !DILocalVariable(name: "block", scope: !950, file: !296, line: 96, type: !424)
!959 = !DILocation(line: 96, column: 2, scope: !756)
!960 = !DILocation(line: 97, column: 2, scope: !950)
!961 = !DILocation(line: 97, column: 3, scope: !950)
!962 = !DILocation(line: 100, column: 6, scope: !950)
!963 = !DILocation(line: 100, column: 7, scope: !950)
!964 = !DILocation(line: 0, scope: !950)
!965 = !DILocation(line: 100, column: 21, scope: !950)
!966 = !DILocation(line: 100, column: 45, scope: !950)
!967 = !DILocation(line: 100, column: 51, scope: !950)
!968 = !DILocation(line: 100, column: 32, scope: !950)
!969 = !DILocation(line: 104, column: 7, scope: !950)
!970 = !DILocation(line: 104, column: 20, scope: !950)
!971 = !DILocation(line: 104, column: 26, scope: !950)
!972 = !DILocation(line: 105, column: 5, scope: !950)
!973 = !DILocation(line: 109, column: 15, scope: !950)
!974 = !DILocation(line: 109, column: 8, scope: !950)
!975 = !DILocation(line: 112, column: 6, scope: !950)
!976 = !DILocation(line: 112, column: 14, scope: !950)
!977 = !DILocation(line: 113, column: 3, scope: !950)
!978 = !DILocation(line: 113, column: 4, scope: !950)
!979 = !DILocation(line: 143, column: 2, scope: !950)
!980 = !DILocation(line: 143, column: 3, scope: !950)
!981 = !DILocation(line: 113, column: 11, scope: !950)
!982 = !DILocalVariable(name: "prev", scope: !983, file: !296, line: 115, type: !543)
!983 = distinct !DILexicalBlock(scope: !950, file: !296, line: 115, column: 3)
!984 = !DILocation(line: 115, column: 7, scope: !950)
!985 = !DILocation(line: 115, column: 24, scope: !983)
!986 = !DILocation(line: 115, column: 25, scope: !983)
!987 = !DILocation(line: 115, column: 32, scope: !983)
!988 = !DILocation(line: 115, column: 3, scope: !983)
!989 = !DILocation(line: 116, column: 30, scope: !990)
!990 = distinct !DILexicalBlock(scope: !983, file: !296, line: 115, column: 45)
!991 = !DILocation(line: 116, column: 12, scope: !990)
!992 = !DILocation(line: 116, column: 13, scope: !990)
!993 = !DILocation(line: 116, column: 25, scope: !990)
!994 = !DILocalVariable(name: "ours", scope: !990, file: !296, line: 116, type: !543)
!995 = !DILocation(line: 116, column: 4, scope: !983)
!996 = !DILocation(line: 118, column: 12, scope: !990)
!997 = !DILocation(line: 0, scope: !990)
!998 = !DILocation(line: 120, column: 23, scope: !990)
!999 = !DILocation(line: 120, column: 6, scope: !990)
!1000 = !DILocation(line: 120, column: 30, scope: !990)
!1001 = !DILocation(line: 124, column: 50, scope: !990)
!1002 = !DILocation(line: 124, column: 11, scope: !990)
!1003 = !DILocation(line: 466, column: 38, scope: !1004, inlinedAt: !1007)
!1004 = distinct !DISubprogram(name: "parser.findTopmostParentWithNamedBlock", scope: null, file: !296, line: 466, type: !1005, isLocal: true, isDefinition: true, scopeLine: 466, isOptimized: false, unit: !1, retainedNodes: !3)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!759, !759, !9}
!1007 = distinct !DILocation(line: 124, column: 11, scope: !990)
!1008 = !DILocalVariable(name: "p", arg: 1, scope: !1004, file: !296, line: 466, type: !759)
!1009 = !DILocalVariable(name: "$ret43", scope: !1004, file: !296, line: 466, type: !759)
!1010 = !DILocation(line: 466, column: 62, scope: !1004, inlinedAt: !1007)
!1011 = !DILocalVariable(name: "top", scope: !1012, file: !296, line: 467, type: !759)
!1012 = distinct !DILexicalBlock(scope: !1004, file: !296, line: 466, column: 1)
!1013 = !DILocation(line: 467, column: 2, scope: !1004, inlinedAt: !1007)
!1014 = !DILocation(line: 470, column: 9, scope: !1012, inlinedAt: !1007)
!1015 = !DILocation(line: 470, column: 21, scope: !1012, inlinedAt: !1007)
!1016 = !DILocation(line: 470, column: 28, scope: !1012, inlinedAt: !1007)
!1017 = !DILocation(line: 473, column: 9, scope: !1012, inlinedAt: !1007)
!1018 = !DILocation(line: 473, column: 17, scope: !1012, inlinedAt: !1007)
!1019 = !DILocation(line: 476, column: 16, scope: !1012, inlinedAt: !1007)
!1020 = !DILocation(line: 476, column: 28, scope: !1012, inlinedAt: !1007)
!1021 = !DILocation(line: 476, column: 35, scope: !1012, inlinedAt: !1007)
!1022 = !DILocation(line: 477, column: 13, scope: !1012, inlinedAt: !1007)
!1023 = !DILocation(line: 471, column: 4, scope: !1012, inlinedAt: !1007)
!1024 = !DILocalVariable(name: "top", scope: !990, file: !296, line: 124, type: !759)
!1025 = !DILocation(line: 124, column: 4, scope: !983)
!1026 = !DILocation(line: 125, column: 30, scope: !990)
!1027 = !DILocation(line: 125, column: 13, scope: !990)
!1028 = !DILocation(line: 125, column: 25, scope: !990)
!1029 = !DILocalVariable(name: "nb", scope: !990, file: !296, line: 125, type: !543)
!1030 = !DILocation(line: 125, column: 4, scope: !983)
!1031 = !DILocation(line: 126, column: 15, scope: !990)
!1032 = !DILocalVariable(name: "i", scope: !1033, file: !296, line: 128, type: !16)
!1033 = distinct !DILexicalBlock(scope: !990, file: !296, line: 128, column: 5)
!1034 = !DILocation(line: 128, column: 9, scope: !990)
!1035 = !DILocation(line: 128, column: 29, scope: !1033)
!1036 = !DILocation(line: 128, column: 19, scope: !1033)
!1037 = !DILocation(line: 136, column: 7, scope: !990)
!1038 = !DILocation(line: 129, column: 27, scope: !1033)
!1039 = !DILocation(line: 129, column: 8, scope: !1033)
!1040 = !DILocation(line: 128, column: 41, scope: !1033)
!1041 = !DILocation(line: 132, column: 22, scope: !1042)
!1042 = distinct !DILexicalBlock(scope: !990, file: !296, line: 132, column: 5)
!1043 = !DILocalVariable(name: "i", scope: !1042, file: !296, line: 132, type: !16)
!1044 = !DILocation(line: 132, column: 9, scope: !990)
!1045 = !DILocation(line: 0, scope: !1042)
!1046 = !DILocation(line: 132, column: 40, scope: !1042)
!1047 = !DILocation(line: 133, column: 32, scope: !1042)
!1048 = !DILocation(line: 133, column: 8, scope: !1042)
!1049 = !DILocation(line: 136, column: 23, scope: !990)
!1050 = !DILocation(line: 136, column: 17, scope: !990)
!1051 = !DILocation(line: 140, column: 11, scope: !950)
!1052 = !DILocation(line: 140, column: 12, scope: !950)
!1053 = !DILocation(line: 140, column: 19, scope: !950)
!1054 = !DILocation(line: 143, column: 11, scope: !950)
!1055 = !DILocation(line: 77, column: 3, scope: !756)
!1056 = distinct !DISubprogram(name: "parser.SetFilename..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.SetFilename", scope: null, file: !296, line: 38, type: !1057, isLocal: false, isDefinition: true, scopeLine: 38, isOptimized: false, unit: !1, retainedNodes: !3)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!33, !759, !759, !9}
!1059 = !DILocalVariable(name: "p", arg: 1, scope: !1056, file: !296, line: 38, type: !759)
!1060 = !DILocation(line: 38, column: 1, scope: !1056)
!1061 = !DILocation(line: 39, column: 3, scope: !1056)
!1062 = !DILocation(line: 39, column: 13, scope: !1056)
!1063 = distinct !DISubprogram(name: "parser.SetVirtualFilesystem..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.SetVirtualFilesystem", scope: null, file: !296, line: 42, type: !1064, isLocal: false, isDefinition: true, scopeLine: 42, isOptimized: false, unit: !1, retainedNodes: !3)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!33, !759, !759, !819}
!1066 = !DILocalVariable(name: "p", arg: 1, scope: !1063, file: !296, line: 42, type: !759)
!1067 = !DILocation(line: 42, column: 1, scope: !1063)
!1068 = !DILocation(line: 43, column: 3, scope: !1063)
!1069 = !DILocation(line: 43, column: 7, scope: !1063)
!1070 = distinct !DISubprogram(name: "parser.advance..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.advance", scope: null, file: !296, line: 217, type: !1071, isLocal: false, isDefinition: true, scopeLine: 217, isOptimized: false, unit: !1, retainedNodes: !3)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!33, !759, !759}
!1073 = !DILocalVariable(name: "p", arg: 1, scope: !1070, file: !296, line: 217, type: !759)
!1074 = !DILocation(line: 217, column: 1, scope: !1070)
!1075 = !DILocation(line: 218, column: 20, scope: !1070)
!1076 = !DILocation(line: 218, column: 28, scope: !1070)
!1077 = !DILocation(line: 218, column: 3, scope: !1070)
!1078 = !DILocation(line: 218, column: 17, scope: !1070)
!1079 = distinct !DISubprogram(name: "parser.expect..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.expect", scope: null, file: !296, line: 208, type: !1080, isLocal: false, isDefinition: true, scopeLine: 208, isOptimized: false, unit: !1, retainedNodes: !3)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!936, !759, !759, !71}
!1082 = !DILocalVariable(name: "p", arg: 1, scope: !1079, file: !296, line: 208, type: !759)
!1083 = !DILocation(line: 208, column: 1, scope: !1079)
!1084 = !DILocalVariable(name: "typ", arg: 2, scope: !1079, file: !296, line: 208, type: !71)
!1085 = !DILocation(line: 208, column: 25, scope: !1079)
!1086 = !DILocalVariable(name: "$ret29", scope: !1079, file: !296, line: 208, type: !936)
!1087 = !DILocation(line: 208, column: 35, scope: !1079)
!1088 = !DILocation(line: 209, column: 6, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1079, file: !296, line: 208, column: 1)
!1090 = !DILocation(line: 209, column: 19, scope: !1089)
!1091 = !DILocation(line: 209, column: 25, scope: !1089)
!1092 = !DILocation(line: 210, column: 3, scope: !1089)
!1093 = !DILocalVariable(name: "curtok", scope: !1089, file: !296, line: 212, type: !936)
!1094 = !DILocation(line: 212, column: 2, scope: !1079)
!1095 = !DILocation(line: 213, column: 3, scope: !1089)
!1096 = !DILocation(line: 214, column: 2, scope: !1089)
!1097 = distinct !DISubprogram(name: "parser.parse..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parse", scope: null, file: !296, line: 175, type: !1098, isLocal: false, isDefinition: true, scopeLine: 175, isOptimized: false, unit: !1, retainedNodes: !3)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!433, !759, !759}
!1100 = !DILocalVariable(name: "p", arg: 1, scope: !1097, file: !296, line: 175, type: !759)
!1101 = !DILocation(line: 175, column: 1, scope: !1097)
!1102 = !DILocation(line: 176, column: 10, scope: !1097)
!1103 = !DILocation(line: 176, column: 23, scope: !1097)
!1104 = !DILocation(line: 178, column: 11, scope: !1097)
!1105 = !DILocalVariable(name: "$ret28", scope: !1097, file: !296, line: 175, type: !433)
!1106 = !DILocation(line: 175, column: 26, scope: !1097)
!1107 = !DILocation(line: 178, column: 3, scope: !1097)
!1108 = !DILocation(line: 180, column: 11, scope: !1097)
!1109 = !DILocation(line: 180, column: 3, scope: !1097)
!1110 = !DILocation(line: 182, column: 11, scope: !1097)
!1111 = !DILocation(line: 182, column: 3, scope: !1097)
!1112 = !DILocation(line: 184, column: 11, scope: !1097)
!1113 = !DILocation(line: 184, column: 3, scope: !1097)
!1114 = !DILocation(line: 186, column: 11, scope: !1097)
!1115 = !DILocation(line: 186, column: 3, scope: !1097)
!1116 = !DILocation(line: 188, column: 11, scope: !1097)
!1117 = !DILocation(line: 188, column: 3, scope: !1097)
!1118 = !DILocation(line: 190, column: 11, scope: !1097)
!1119 = !DILocation(line: 190, column: 3, scope: !1097)
!1120 = !DILocation(line: 192, column: 11, scope: !1097)
!1121 = !DILocation(line: 192, column: 3, scope: !1097)
!1122 = !DILocation(line: 194, column: 11, scope: !1097)
!1123 = !DILocation(line: 194, column: 3, scope: !1097)
!1124 = !DILocation(line: 196, column: 11, scope: !1097)
!1125 = !DILocation(line: 196, column: 3, scope: !1097)
!1126 = !DILocation(line: 198, column: 11, scope: !1097)
!1127 = !DILocation(line: 198, column: 3, scope: !1097)
!1128 = !DILocation(line: 200, column: 11, scope: !1097)
!1129 = !DILocation(line: 200, column: 3, scope: !1097)
!1130 = !DILocation(line: 202, column: 11, scope: !1097)
!1131 = !DILocation(line: 202, column: 3, scope: !1097)
!1132 = !DILocation(line: 205, column: 12, scope: !1097)
!1133 = !DILocation(line: 205, column: 2, scope: !1097)
!1134 = distinct !DISubprogram(name: "parser.parseAssignment..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseAssignment", scope: null, file: !296, line: 382, type: !1135, isLocal: false, isDefinition: true, scopeLine: 382, isOptimized: false, unit: !1, retainedNodes: !3)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!713, !759, !759}
!1137 = !DILocalVariable(name: "p", arg: 1, scope: !1134, file: !296, line: 382, type: !759)
!1138 = !DILocation(line: 382, column: 1, scope: !1134)
!1139 = !DILocalVariable(name: "$ret39", scope: !1134, file: !296, line: 382, type: !713)
!1140 = !DILocation(line: 382, column: 36, scope: !1134)
!1141 = !DILocation(line: 383, column: 10, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1134, file: !296, line: 382, column: 1)
!1143 = !DILocalVariable(name: "tok", scope: !1142, file: !296, line: 383, type: !936)
!1144 = !DILocation(line: 383, column: 2, scope: !1134)
!1145 = !DILocation(line: 384, column: 27, scope: !1142)
!1146 = !DILocation(line: 384, column: 32, scope: !1142)
!1147 = !DILocation(line: 384, column: 42, scope: !1142)
!1148 = !DILocation(line: 384, column: 10, scope: !1142)
!1149 = !DILocalVariable(name: "$ret13", scope: !1150, file: !7, line: 224, type: !713)
!1150 = distinct !DISubprogram(name: "parser.newAssignment", scope: null, file: !7, line: 224, type: !1151, isLocal: true, isDefinition: true, scopeLine: 224, isOptimized: false, unit: !1, retainedNodes: !3)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!713, !9, !9}
!1153 = !DILocation(line: 224, column: 42, scope: !1150, inlinedAt: !1154)
!1154 = distinct !DILocation(line: 384, column: 10, scope: !1142)
!1155 = !DILocation(line: 225, column: 11, scope: !1156, inlinedAt: !1154)
!1156 = distinct !DILexicalBlock(scope: !1150, file: !7, line: 224, column: 1)
!1157 = !DILocalVariable(name: "assgn", scope: !1156, file: !7, line: 225, type: !713)
!1158 = !DILocation(line: 225, column: 2, scope: !1150, inlinedAt: !1154)
!1159 = !DILocation(line: 226, column: 7, scope: !1156, inlinedAt: !1154)
!1160 = !DILocation(line: 226, column: 10, scope: !1156, inlinedAt: !1154)
!1161 = !DILocation(line: 227, column: 7, scope: !1156, inlinedAt: !1154)
!1162 = !DILocation(line: 227, column: 19, scope: !1156, inlinedAt: !1154)
!1163 = !DILocation(line: 228, column: 2, scope: !1156, inlinedAt: !1154)
!1164 = !DILocalVariable(name: "node", scope: !1142, file: !296, line: 384, type: !713)
!1165 = !DILocation(line: 384, column: 2, scope: !1134)
!1166 = !DILocation(line: 385, column: 25, scope: !1142)
!1167 = !DILocation(line: 385, column: 22, scope: !1142)
!1168 = !DILocation(line: 386, column: 2, scope: !1142)
!1169 = distinct !DISubprogram(name: "parser.parseBlock..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseBlock", scope: null, file: !296, line: 233, type: !1170, isLocal: false, isDefinition: true, scopeLine: 233, isOptimized: false, unit: !1, retainedNodes: !3)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!424, !759, !759, !433}
!1172 = !DILocalVariable(name: "p", arg: 1, scope: !1169, file: !296, line: 233, type: !759)
!1173 = !DILocation(line: 233, column: 1, scope: !1169)
!1174 = !DILocalVariable(name: "parent", arg: 2, scope: !1169, file: !296, line: 233, type: !433)
!1175 = !DILocation(line: 233, column: 29, scope: !1169)
!1176 = !DILocalVariable(name: "$ret31", scope: !1169, file: !296, line: 233, type: !424)
!1177 = !DILocation(line: 233, column: 42, scope: !1169)
!1178 = !DILocation(line: 234, column: 3, scope: !1179)
!1179 = distinct !DILexicalBlock(scope: !1169, file: !296, line: 233, column: 1)
!1180 = !DILocation(line: 235, column: 11, scope: !1179)
!1181 = !DILocalVariable(name: "block", scope: !1179, file: !296, line: 235, type: !424)
!1182 = !DILocation(line: 235, column: 2, scope: !1169)
!1183 = !DILocation(line: 236, column: 26, scope: !1179)
!1184 = !DILocation(line: 236, column: 7, scope: !1179)
!1185 = !DILocation(line: 236, column: 23, scope: !1179)
!1186 = !DILocation(line: 239, column: 7, scope: !1179)
!1187 = !DILocation(line: 239, column: 21, scope: !1179)
!1188 = !DILocation(line: 239, column: 45, scope: !1179)
!1189 = !DILocation(line: 274, column: 3, scope: !1179)
!1190 = !DILocation(line: 276, column: 2, scope: !1179)
!1191 = !DILocation(line: 244, column: 5, scope: !1179)
!1192 = !DILocalVariable(name: "tag", scope: !1193, file: !296, line: 252, type: !607)
!1193 = distinct !DILexicalBlock(scope: !1179, file: !296, line: 252, column: 4)
!1194 = !DILocation(line: 252, column: 7, scope: !1179)
!1195 = !DILocalVariable(name: "ok", scope: !1193, file: !296, line: 252, type: !99)
!1196 = !DILocation(line: 252, column: 7, scope: !1193)
!1197 = !DILocation(line: 252, column: 4, scope: !1193)
!1198 = !DILocation(line: 271, column: 15, scope: !1179)
!1199 = !DILocation(line: 271, column: 8, scope: !1179)
!1200 = !DILocation(line: 253, column: 23, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1193, file: !296, line: 252, column: 36)
!1202 = !DILocation(line: 253, column: 36, scope: !1201)
!1203 = !DILocation(line: 267, column: 5, scope: !1193)
!1204 = !DILocation(line: 253, column: 14, scope: !1201)
!1205 = !DILocalVariable(name: "attr", scope: !1201, file: !296, line: 253, type: !936)
!1206 = !DILocation(line: 253, column: 5, scope: !1193)
!1207 = !DILocation(line: 254, column: 17, scope: !1201)
!1208 = !DILocation(line: 254, column: 22, scope: !1201)
!1209 = !DILocation(line: 256, column: 16, scope: !1201)
!1210 = !DILocation(line: 258, column: 57, scope: !1201)
!1211 = !DILocation(line: 258, column: 9, scope: !1201)
!1212 = !DILocation(line: 260, column: 57, scope: !1201)
!1213 = !DILocation(line: 260, column: 9, scope: !1201)
!1214 = !DILocation(line: 262, column: 57, scope: !1201)
!1215 = !DILocation(line: 262, column: 9, scope: !1201)
!1216 = !DILocation(line: 258, column: 75, scope: !1201)
!1217 = !DILocation(line: 258, column: 23, scope: !1201)
!1218 = !DILocation(line: 258, column: 46, scope: !1201)
!1219 = !DILocation(line: 258, column: 21, scope: !1201)
!1220 = !DILocation(line: 260, column: 78, scope: !1201)
!1221 = !DILocation(line: 260, column: 23, scope: !1201)
!1222 = !DILocation(line: 260, column: 46, scope: !1201)
!1223 = !DILocation(line: 260, column: 21, scope: !1201)
!1224 = !DILocation(line: 262, column: 81, scope: !1201)
!1225 = !DILocation(line: 262, column: 86, scope: !1201)
!1226 = !DILocation(line: 262, column: 103, scope: !1201)
!1227 = !DILocation(line: 262, column: 108, scope: !1201)
!1228 = !DILocation(line: 262, column: 69, scope: !1201)
!1229 = !DILocation(line: 262, column: 117, scope: !1201)
!1230 = !DILocation(line: 262, column: 23, scope: !1201)
!1231 = !DILocation(line: 262, column: 46, scope: !1201)
!1232 = !DILocation(line: 262, column: 21, scope: !1201)
!1233 = distinct !DISubprogram(name: "parser.parseComment..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseComment", scope: null, file: !296, line: 362, type: !1234, isLocal: false, isDefinition: true, scopeLine: 362, isOptimized: false, unit: !1, retainedNodes: !3)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!418, !759, !759}
!1236 = !DILocalVariable(name: "p", arg: 1, scope: !1233, file: !296, line: 362, type: !759)
!1237 = !DILocation(line: 362, column: 1, scope: !1233)
!1238 = !DILocalVariable(name: "$ret37", scope: !1233, file: !296, line: 362, type: !418)
!1239 = !DILocation(line: 362, column: 33, scope: !1233)
!1240 = !DILocation(line: 363, column: 10, scope: !1241)
!1241 = distinct !DILexicalBlock(scope: !1233, file: !296, line: 362, column: 1)
!1242 = !DILocalVariable(name: "tok", scope: !1241, file: !296, line: 363, type: !936)
!1243 = !DILocation(line: 363, column: 2, scope: !1233)
!1244 = !DILocation(line: 364, column: 24, scope: !1241)
!1245 = !DILocation(line: 364, column: 10, scope: !1241)
!1246 = !DILocalVariable(name: "$ret3", scope: !1247, file: !7, line: 74, type: !418)
!1247 = distinct !DISubprogram(name: "parser.newComment", scope: null, file: !7, line: 74, type: !1248, isLocal: true, isDefinition: true, scopeLine: 74, isOptimized: false, unit: !1, retainedNodes: !3)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!418, !9}
!1250 = !DILocation(line: 74, column: 31, scope: !1247, inlinedAt: !1251)
!1251 = distinct !DILocation(line: 364, column: 10, scope: !1241)
!1252 = !DILocation(line: 75, column: 8, scope: !1253, inlinedAt: !1251)
!1253 = distinct !DILexicalBlock(scope: !1247, file: !7, line: 74, column: 1)
!1254 = !DILocalVariable(name: "dt", scope: !1253, file: !7, line: 75, type: !418)
!1255 = !DILocation(line: 75, column: 2, scope: !1247, inlinedAt: !1251)
!1256 = !DILocation(line: 76, column: 4, scope: !1253, inlinedAt: !1251)
!1257 = !DILocation(line: 76, column: 11, scope: !1253, inlinedAt: !1251)
!1258 = !DILocation(line: 77, column: 4, scope: !1253, inlinedAt: !1251)
!1259 = !DILocation(line: 77, column: 11, scope: !1253, inlinedAt: !1251)
!1260 = !DILocation(line: 78, column: 4, scope: !1253, inlinedAt: !1251)
!1261 = !DILocation(line: 78, column: 12, scope: !1253, inlinedAt: !1251)
!1262 = !DILocation(line: 79, column: 2, scope: !1253, inlinedAt: !1251)
!1263 = !DILocalVariable(name: "cmnt", scope: !1241, file: !296, line: 364, type: !418)
!1264 = !DILocation(line: 364, column: 2, scope: !1233)
!1265 = !DILocation(line: 365, column: 25, scope: !1241)
!1266 = !DILocation(line: 365, column: 22, scope: !1241)
!1267 = !DILocation(line: 366, column: 19, scope: !1241)
!1268 = !DILocation(line: 366, column: 24, scope: !1241)
!1269 = !DILocation(line: 366, column: 33, scope: !1241)
!1270 = !DILocation(line: 366, column: 14, scope: !1241)
!1271 = !DILocation(line: 368, column: 6, scope: !1241)
!1272 = !DILocation(line: 368, column: 19, scope: !1241)
!1273 = !DILocation(line: 368, column: 25, scope: !1241)
!1274 = !DILocation(line: 369, column: 29, scope: !1241)
!1275 = !DILocation(line: 369, column: 17, scope: !1241)
!1276 = !DILocation(line: 369, column: 7, scope: !1241)
!1277 = !DILocation(line: 369, column: 14, scope: !1241)
!1278 = !DILocation(line: 372, column: 2, scope: !1241)
!1279 = distinct !DISubprogram(name: "parser.parseDoctype..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseDoctype", scope: null, file: !296, line: 355, type: !1280, isLocal: false, isDefinition: true, scopeLine: 355, isOptimized: false, unit: !1, retainedNodes: !3)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!377, !759, !759}
!1282 = !DILocalVariable(name: "p", arg: 1, scope: !1279, file: !296, line: 355, type: !759)
!1283 = !DILocation(line: 355, column: 1, scope: !1279)
!1284 = !DILocalVariable(name: "$ret36", scope: !1279, file: !296, line: 355, type: !377)
!1285 = !DILocation(line: 355, column: 33, scope: !1279)
!1286 = !DILocation(line: 356, column: 10, scope: !1287)
!1287 = distinct !DILexicalBlock(scope: !1279, file: !296, line: 355, column: 1)
!1288 = !DILocalVariable(name: "tok", scope: !1287, file: !296, line: 356, type: !936)
!1289 = !DILocation(line: 356, column: 2, scope: !1279)
!1290 = !DILocation(line: 357, column: 24, scope: !1287)
!1291 = !DILocation(line: 357, column: 10, scope: !1287)
!1292 = !DILocalVariable(name: "$ret1", scope: !1293, file: !7, line: 53, type: !377)
!1293 = distinct !DISubprogram(name: "parser.newDoctype", scope: null, file: !7, line: 53, type: !1294, isLocal: true, isDefinition: true, scopeLine: 53, isOptimized: false, unit: !1, retainedNodes: !3)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!377, !9}
!1296 = !DILocation(line: 53, column: 31, scope: !1293, inlinedAt: !1297)
!1297 = distinct !DILocation(line: 357, column: 10, scope: !1287)
!1298 = !DILocation(line: 54, column: 8, scope: !1299, inlinedAt: !1297)
!1299 = distinct !DILexicalBlock(scope: !1293, file: !7, line: 53, column: 1)
!1300 = !DILocalVariable(name: "dt", scope: !1299, file: !7, line: 54, type: !377)
!1301 = !DILocation(line: 54, column: 2, scope: !1293, inlinedAt: !1297)
!1302 = !DILocation(line: 55, column: 4, scope: !1299, inlinedAt: !1297)
!1303 = !DILocation(line: 55, column: 11, scope: !1299, inlinedAt: !1297)
!1304 = !DILocation(line: 56, column: 2, scope: !1299, inlinedAt: !1297)
!1305 = !DILocalVariable(name: "node", scope: !1287, file: !296, line: 357, type: !377)
!1306 = !DILocation(line: 357, column: 2, scope: !1279)
!1307 = !DILocation(line: 358, column: 25, scope: !1287)
!1308 = !DILocation(line: 358, column: 22, scope: !1287)
!1309 = !DILocation(line: 359, column: 2, scope: !1287)
!1310 = distinct !DISubprogram(name: "parser.parseEach..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseEach", scope: null, file: !296, line: 305, type: !1311, isLocal: false, isDefinition: true, scopeLine: 305, isOptimized: false, unit: !1, retainedNodes: !3)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!686, !759, !759}
!1313 = !DILocalVariable(name: "p", arg: 1, scope: !1310, file: !296, line: 305, type: !759)
!1314 = !DILocation(line: 305, column: 1, scope: !1310)
!1315 = !DILocalVariable(name: "$ret33", scope: !1310, file: !296, line: 305, type: !686)
!1316 = !DILocation(line: 305, column: 30, scope: !1310)
!1317 = !DILocation(line: 306, column: 10, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1310, file: !296, line: 305, column: 1)
!1319 = !DILocalVariable(name: "tok", scope: !1318, file: !296, line: 306, type: !936)
!1320 = !DILocation(line: 306, column: 2, scope: !1310)
!1321 = !DILocation(line: 307, column: 20, scope: !1318)
!1322 = !DILocation(line: 307, column: 9, scope: !1318)
!1323 = !DILocalVariable(name: "$ret12", scope: !1324, file: !7, line: 212, type: !686)
!1324 = distinct !DISubprogram(name: "parser.newEach", scope: null, file: !7, line: 212, type: !1325, isLocal: true, isDefinition: true, scopeLine: 212, isOptimized: false, unit: !1, retainedNodes: !3)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!686, !9}
!1327 = !DILocation(line: 212, column: 26, scope: !1324, inlinedAt: !1328)
!1328 = distinct !DILocation(line: 307, column: 9, scope: !1318)
!1329 = !DILocation(line: 213, column: 10, scope: !1330, inlinedAt: !1328)
!1330 = distinct !DILexicalBlock(scope: !1324, file: !7, line: 212, column: 1)
!1331 = !DILocalVariable(name: "each", scope: !1330, file: !7, line: 213, type: !686)
!1332 = !DILocation(line: 213, column: 2, scope: !1324, inlinedAt: !1328)
!1333 = !DILocation(line: 214, column: 6, scope: !1330, inlinedAt: !1328)
!1334 = !DILocation(line: 214, column: 18, scope: !1330, inlinedAt: !1328)
!1335 = !DILocation(line: 215, column: 2, scope: !1330, inlinedAt: !1328)
!1336 = !DILocalVariable(name: "ech", scope: !1318, file: !296, line: 307, type: !686)
!1337 = !DILocation(line: 307, column: 2, scope: !1310)
!1338 = !DILocation(line: 308, column: 24, scope: !1318)
!1339 = !DILocation(line: 308, column: 21, scope: !1318)
!1340 = !DILocation(line: 309, column: 5, scope: !1318)
!1341 = !DILocation(line: 309, column: 13, scope: !1318)
!1342 = !DILocation(line: 309, column: 18, scope: !1318)
!1343 = !DILocation(line: 309, column: 8, scope: !1318)
!1344 = !DILocation(line: 310, column: 5, scope: !1318)
!1345 = !DILocation(line: 310, column: 13, scope: !1318)
!1346 = !DILocation(line: 310, column: 18, scope: !1318)
!1347 = !DILocation(line: 310, column: 8, scope: !1318)
!1348 = !DILocation(line: 312, column: 6, scope: !1318)
!1349 = !DILocation(line: 312, column: 19, scope: !1318)
!1350 = !DILocation(line: 312, column: 25, scope: !1318)
!1351 = !DILocation(line: 313, column: 28, scope: !1318)
!1352 = !DILocation(line: 313, column: 16, scope: !1318)
!1353 = !DILocation(line: 313, column: 6, scope: !1318)
!1354 = !DILocation(line: 313, column: 13, scope: !1318)
!1355 = !DILocation(line: 316, column: 2, scope: !1318)
!1356 = distinct !DISubprogram(name: "parser.parseExtends..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseExtends", scope: null, file: !296, line: 221, type: !757, isLocal: false, isDefinition: true, scopeLine: 221, isOptimized: false, unit: !1, retainedNodes: !3)
!1357 = !DILocalVariable(name: "p", arg: 1, scope: !1356, file: !296, line: 221, type: !759)
!1358 = !DILocation(line: 221, column: 1, scope: !1356)
!1359 = !DILocalVariable(name: "$ret30", scope: !1356, file: !296, line: 221, type: !424)
!1360 = !DILocation(line: 221, column: 33, scope: !1356)
!1361 = !DILocation(line: 222, column: 6, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1356, file: !296, line: 221, column: 1)
!1363 = !DILocation(line: 222, column: 14, scope: !1362)
!1364 = !DILocation(line: 223, column: 3, scope: !1362)
!1365 = !DILocation(line: 226, column: 10, scope: !1362)
!1366 = !DILocalVariable(name: "tok", scope: !1362, file: !296, line: 226, type: !936)
!1367 = !DILocation(line: 226, column: 2, scope: !1356)
!1368 = !DILocation(line: 227, column: 35, scope: !1362)
!1369 = !DILocation(line: 227, column: 13, scope: !1362)
!1370 = !DILocalVariable(name: "parser", scope: !1362, file: !296, line: 227, type: !759)
!1371 = !DILocation(line: 227, column: 2, scope: !1356)
!1372 = !DILocation(line: 228, column: 8, scope: !1362)
!1373 = !DILocation(line: 229, column: 11, scope: !1362)
!1374 = !DILocation(line: 230, column: 9, scope: !1362)
!1375 = !DILocation(line: 230, column: 2, scope: !1362)
!1376 = distinct !DISubprogram(name: "parser.parseIf..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseIf", scope: null, file: !296, line: 279, type: !1377, isLocal: false, isDefinition: true, scopeLine: 279, isOptimized: false, unit: !1, retainedNodes: !3)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!660, !759, !759}
!1379 = !DILocalVariable(name: "p", arg: 1, scope: !1376, file: !296, line: 279, type: !759)
!1380 = !DILocation(line: 279, column: 1, scope: !1376)
!1381 = !DILocalVariable(name: "$ret32", scope: !1376, file: !296, line: 279, type: !660)
!1382 = !DILocation(line: 279, column: 28, scope: !1376)
!1383 = !DILocation(line: 280, column: 10, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1376, file: !296, line: 279, column: 1)
!1385 = !DILocalVariable(name: "tok", scope: !1384, file: !296, line: 280, type: !936)
!1386 = !DILocation(line: 280, column: 2, scope: !1376)
!1387 = !DILocation(line: 281, column: 25, scope: !1384)
!1388 = !DILocation(line: 281, column: 9, scope: !1384)
!1389 = !DILocalVariable(name: "$ret11", scope: !1390, file: !7, line: 198, type: !660)
!1390 = distinct !DISubprogram(name: "parser.newCondition", scope: null, file: !7, line: 198, type: !1391, isLocal: true, isDefinition: true, scopeLine: 198, isOptimized: false, unit: !1, retainedNodes: !3)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!660, !9}
!1393 = !DILocation(line: 198, column: 31, scope: !1390, inlinedAt: !1394)
!1394 = distinct !DILocation(line: 281, column: 9, scope: !1384)
!1395 = !DILocation(line: 199, column: 10, scope: !1396, inlinedAt: !1394)
!1396 = distinct !DILexicalBlock(scope: !1390, file: !7, line: 198, column: 1)
!1397 = !DILocalVariable(name: "cond", scope: !1396, file: !7, line: 199, type: !660)
!1398 = !DILocation(line: 199, column: 2, scope: !1390, inlinedAt: !1394)
!1399 = !DILocation(line: 200, column: 6, scope: !1396, inlinedAt: !1394)
!1400 = !DILocation(line: 200, column: 18, scope: !1396, inlinedAt: !1394)
!1401 = !DILocation(line: 201, column: 2, scope: !1396, inlinedAt: !1394)
!1402 = !DILocalVariable(name: "cnd", scope: !1384, file: !296, line: 281, type: !660)
!1403 = !DILocation(line: 281, column: 2, scope: !1376)
!1404 = !DILocation(line: 282, column: 24, scope: !1384)
!1405 = !DILocation(line: 282, column: 21, scope: !1384)
!1406 = !DILocation(line: 285, column: 10, scope: !1384)
!1407 = !DILocation(line: 285, column: 23, scope: !1384)
!1408 = !DILocation(line: 287, column: 19, scope: !1384)
!1409 = !DILocation(line: 287, column: 16, scope: !1384)
!1410 = !DILocation(line: 290, column: 4, scope: !1384)
!1411 = !DILocation(line: 291, column: 7, scope: !1384)
!1412 = !DILocation(line: 291, column: 20, scope: !1384)
!1413 = !DILocation(line: 302, column: 2, scope: !1384)
!1414 = !DILocation(line: 292, column: 19, scope: !1384)
!1415 = !DILocation(line: 292, column: 17, scope: !1384)
!1416 = !DILocation(line: 293, column: 23, scope: !1384)
!1417 = !DILocation(line: 293, column: 7, scope: !1384)
!1418 = !DILocation(line: 293, column: 16, scope: !1384)
!1419 = !DILocation(line: 295, column: 20, scope: !1384)
!1420 = !DILocation(line: 295, column: 17, scope: !1384)
!1421 = !DILocation(line: 297, column: 4, scope: !1384)
!1422 = distinct !DISubprogram(name: "parser.parseImport..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseImport", scope: null, file: !296, line: 319, type: !757, isLocal: false, isDefinition: true, scopeLine: 319, isOptimized: false, unit: !1, retainedNodes: !3)
!1423 = !DILocalVariable(name: "p", arg: 1, scope: !1422, file: !296, line: 319, type: !759)
!1424 = !DILocation(line: 319, column: 1, scope: !1422)
!1425 = !DILocalVariable(name: "$ret34", scope: !1422, file: !296, line: 319, type: !424)
!1426 = !DILocation(line: 319, column: 32, scope: !1422)
!1427 = !DILocation(line: 320, column: 10, scope: !1428)
!1428 = distinct !DILexicalBlock(scope: !1422, file: !296, line: 319, column: 1)
!1429 = !DILocalVariable(name: "tok", scope: !1428, file: !296, line: 320, type: !936)
!1430 = !DILocation(line: 320, column: 2, scope: !1422)
!1431 = !DILocation(line: 321, column: 33, scope: !1428)
!1432 = !DILocation(line: 321, column: 11, scope: !1428)
!1433 = !DILocation(line: 321, column: 40, scope: !1428)
!1434 = !DILocalVariable(name: "node", scope: !1428, file: !296, line: 321, type: !424)
!1435 = !DILocation(line: 321, column: 2, scope: !1422)
!1436 = !DILocation(line: 322, column: 25, scope: !1428)
!1437 = !DILocation(line: 322, column: 6, scope: !1428)
!1438 = !DILocation(line: 322, column: 22, scope: !1428)
!1439 = !DILocation(line: 323, column: 2, scope: !1428)
!1440 = distinct !DISubprogram(name: "parser.parseMixin..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseMixin", scope: null, file: !296, line: 447, type: !1441, isLocal: false, isDefinition: true, scopeLine: 447, isOptimized: false, unit: !1, retainedNodes: !3)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{!728, !759, !759}
!1443 = !DILocalVariable(name: "p", arg: 1, scope: !1440, file: !296, line: 447, type: !759)
!1444 = !DILocation(line: 447, column: 1, scope: !1440)
!1445 = !DILocalVariable(name: "$ret41", scope: !1440, file: !296, line: 447, type: !728)
!1446 = !DILocation(line: 447, column: 31, scope: !1440)
!1447 = !DILocation(line: 448, column: 10, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1440, file: !296, line: 447, column: 1)
!1449 = !DILocalVariable(name: "tok", scope: !1448, file: !296, line: 448, type: !936)
!1450 = !DILocation(line: 448, column: 2, scope: !1440)
!1451 = !DILocation(line: 449, column: 34, scope: !1448)
!1452 = !DILocation(line: 449, column: 39, scope: !1448)
!1453 = !DILocation(line: 449, column: 23, scope: !1448)
!1454 = !DILocation(line: 449, column: 11, scope: !1448)
!1455 = !DILocalVariable(name: "args", arg: 2, scope: !1456, file: !7, line: 238, type: !9)
!1456 = distinct !DISubprogram(name: "parser.newMixin", scope: null, file: !7, line: 238, type: !1457, isLocal: true, isDefinition: true, scopeLine: 238, isOptimized: false, unit: !1, retainedNodes: !3)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!728, !9, !9}
!1459 = !DILocation(line: 238, column: 21, scope: !1456, inlinedAt: !1460)
!1460 = distinct !DILocation(line: 449, column: 11, scope: !1448)
!1461 = !DILocalVariable(name: "$ret14", scope: !1456, file: !7, line: 238, type: !728)
!1462 = !DILocation(line: 238, column: 34, scope: !1456, inlinedAt: !1460)
!1463 = !DILocation(line: 239, column: 11, scope: !1464, inlinedAt: !1460)
!1464 = distinct !DILexicalBlock(scope: !1456, file: !7, line: 238, column: 1)
!1465 = !DILocalVariable(name: "mixin", scope: !1464, file: !7, line: 239, type: !728)
!1466 = !DILocation(line: 239, column: 2, scope: !1456, inlinedAt: !1460)
!1467 = !DILocation(line: 240, column: 7, scope: !1464, inlinedAt: !1460)
!1468 = !DILocation(line: 240, column: 13, scope: !1464, inlinedAt: !1460)
!1469 = !DILocation(line: 242, column: 19, scope: !1464, inlinedAt: !1460)
!1470 = !DILocalVariable(name: "delExp", scope: !1464, file: !7, line: 242, type: !43)
!1471 = !DILocation(line: 242, column: 2, scope: !1456, inlinedAt: !1460)
!1472 = !DILocation(line: 243, column: 21, scope: !1464, inlinedAt: !1460)
!1473 = !DILocation(line: 243, column: 7, scope: !1464, inlinedAt: !1460)
!1474 = !DILocation(line: 243, column: 13, scope: !1464, inlinedAt: !1460)
!1475 = !DILocalVariable(name: "i", scope: !1476, file: !7, line: 245, type: !16)
!1476 = distinct !DILexicalBlock(scope: !1464, file: !7, line: 245, column: 2)
!1477 = !DILocation(line: 245, column: 6, scope: !1464, inlinedAt: !1460)
!1478 = !DILocation(line: 245, column: 27, scope: !1476, inlinedAt: !1460)
!1479 = !DILocation(line: 245, column: 16, scope: !1476, inlinedAt: !1460)
!1480 = !DILocation(line: 246, column: 47, scope: !1476, inlinedAt: !1460)
!1481 = !DILocation(line: 246, column: 27, scope: !1476, inlinedAt: !1460)
!1482 = !DILocation(line: 246, column: 13, scope: !1476, inlinedAt: !1460)
!1483 = !DILocation(line: 246, column: 17, scope: !1476, inlinedAt: !1460)
!1484 = !DILocation(line: 247, column: 16, scope: !1476, inlinedAt: !1460)
!1485 = !DILocation(line: 247, column: 20, scope: !1476, inlinedAt: !1460)
!1486 = !DILocation(line: 245, column: 35, scope: !1476, inlinedAt: !1460)
!1487 = !DILocation(line: 248, column: 52, scope: !1476, inlinedAt: !1460)
!1488 = !DILocation(line: 248, column: 34, scope: !1476, inlinedAt: !1460)
!1489 = !DILocation(line: 248, column: 50, scope: !1476, inlinedAt: !1460)
!1490 = !DILocation(line: 248, column: 17, scope: !1476, inlinedAt: !1460)
!1491 = !DILocation(line: 248, column: 15, scope: !1476, inlinedAt: !1460)
!1492 = !DILocation(line: 249, column: 4, scope: !1476, inlinedAt: !1460)
!1493 = !DILocation(line: 253, column: 2, scope: !1464, inlinedAt: !1460)
!1494 = !DILocalVariable(name: "mixin", scope: !1448, file: !296, line: 449, type: !728)
!1495 = !DILocation(line: 449, column: 2, scope: !1440)
!1496 = !DILocation(line: 450, column: 26, scope: !1448)
!1497 = !DILocation(line: 450, column: 23, scope: !1448)
!1498 = !DILocation(line: 452, column: 6, scope: !1448)
!1499 = !DILocation(line: 452, column: 19, scope: !1448)
!1500 = !DILocation(line: 452, column: 25, scope: !1448)
!1501 = !DILocation(line: 453, column: 30, scope: !1448)
!1502 = !DILocation(line: 453, column: 18, scope: !1448)
!1503 = !DILocation(line: 453, column: 8, scope: !1448)
!1504 = !DILocation(line: 453, column: 15, scope: !1448)
!1505 = !DILocation(line: 456, column: 2, scope: !1448)
!1506 = distinct !DISubprogram(name: "parser.parseMixinCall..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseMixinCall", scope: null, file: !296, line: 459, type: !1507, isLocal: false, isDefinition: true, scopeLine: 459, isOptimized: false, unit: !1, retainedNodes: !3)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!744, !759, !759}
!1509 = !DILocalVariable(name: "p", arg: 1, scope: !1506, file: !296, line: 459, type: !759)
!1510 = !DILocation(line: 459, column: 1, scope: !1506)
!1511 = !DILocalVariable(name: "$ret42", scope: !1506, file: !296, line: 459, type: !744)
!1512 = !DILocation(line: 459, column: 35, scope: !1506)
!1513 = !DILocation(line: 460, column: 10, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1506, file: !296, line: 459, column: 1)
!1515 = !DILocalVariable(name: "tok", scope: !1514, file: !296, line: 460, type: !936)
!1516 = !DILocation(line: 460, column: 2, scope: !1506)
!1517 = !DILocation(line: 461, column: 42, scope: !1514)
!1518 = !DILocation(line: 461, column: 47, scope: !1514)
!1519 = !DILocation(line: 461, column: 31, scope: !1514)
!1520 = !DILocation(line: 461, column: 15, scope: !1514)
!1521 = !DILocalVariable(name: "args", arg: 2, scope: !1522, file: !7, line: 262, type: !9)
!1522 = distinct !DISubprogram(name: "parser.newMixinCall", scope: null, file: !7, line: 262, type: !1523, isLocal: true, isDefinition: true, scopeLine: 262, isOptimized: false, unit: !1, retainedNodes: !3)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!744, !9, !9}
!1525 = !DILocation(line: 262, column: 25, scope: !1522, inlinedAt: !1526)
!1526 = distinct !DILocation(line: 461, column: 15, scope: !1514)
!1527 = !DILocalVariable(name: "$ret15", scope: !1522, file: !7, line: 262, type: !744)
!1528 = !DILocation(line: 262, column: 38, scope: !1522, inlinedAt: !1526)
!1529 = !DILocation(line: 263, column: 15, scope: !1530, inlinedAt: !1526)
!1530 = distinct !DILexicalBlock(scope: !1522, file: !7, line: 262, column: 1)
!1531 = !DILocalVariable(name: "mixinCall", scope: !1530, file: !7, line: 263, type: !744)
!1532 = !DILocation(line: 263, column: 2, scope: !1522, inlinedAt: !1526)
!1533 = !DILocation(line: 264, column: 11, scope: !1530, inlinedAt: !1526)
!1534 = !DILocation(line: 264, column: 17, scope: !1530, inlinedAt: !1526)
!1535 = !DILocation(line: 266, column: 10, scope: !1530, inlinedAt: !1526)
!1536 = !DILocation(line: 268, column: 22, scope: !1537, inlinedAt: !1526)
!1537 = distinct !DILexicalBlock(scope: !1530, file: !7, line: 266, column: 16)
!1538 = !DILocalVariable(name: "quoteExp", scope: !1537, file: !7, line: 268, type: !43)
!1539 = !DILocation(line: 268, column: 3, scope: !1530, inlinedAt: !1526)
!1540 = !DILocation(line: 269, column: 20, scope: !1537, inlinedAt: !1526)
!1541 = !DILocalVariable(name: "delExp", scope: !1537, file: !7, line: 269, type: !43)
!1542 = !DILocation(line: 269, column: 3, scope: !1530, inlinedAt: !1526)
!1543 = !DILocation(line: 271, column: 21, scope: !1537, inlinedAt: !1526)
!1544 = !DILocalVariable(name: "quotes", scope: !1537, file: !7, line: 271, type: !106)
!1545 = !DILocation(line: 271, column: 3, scope: !1530, inlinedAt: !1526)
!1546 = !DILocation(line: 272, column: 23, scope: !1537, inlinedAt: !1526)
!1547 = !DILocalVariable(name: "replaced", scope: !1537, file: !7, line: 272, type: !9)
!1548 = !DILocation(line: 272, column: 3, scope: !1530, inlinedAt: !1526)
!1549 = !DILocation(line: 273, column: 26, scope: !1537, inlinedAt: !1526)
!1550 = !DILocation(line: 273, column: 12, scope: !1537, inlinedAt: !1526)
!1551 = !DILocation(line: 273, column: 18, scope: !1537, inlinedAt: !1526)
!1552 = !DILocalVariable(name: "qi", scope: !1537, file: !7, line: 275, type: !16)
!1553 = !DILocation(line: 275, column: 3, scope: !1530, inlinedAt: !1526)
!1554 = !DILocalVariable(name: "i", scope: !1555, file: !7, line: 276, type: !16)
!1555 = distinct !DILexicalBlock(scope: !1537, file: !7, line: 276, column: 3)
!1556 = !DILocation(line: 276, column: 7, scope: !1537, inlinedAt: !1526)
!1557 = !DILocation(line: 276, column: 3, scope: !1555, inlinedAt: !1526)
!1558 = !DILocalVariable(name: "arg", scope: !1555, file: !7, line: 276, type: !9)
!1559 = !DILocation(line: 277, column: 11, scope: !1555, inlinedAt: !1526)
!1560 = !DILocation(line: 278, column: 19, scope: !1555, inlinedAt: !1526)
!1561 = !DILocation(line: 278, column: 31, scope: !1555, inlinedAt: !1526)
!1562 = !DILocation(line: 278, column: 23, scope: !1555, inlinedAt: !1526)
!1563 = !DILocation(line: 279, column: 5, scope: !1555, inlinedAt: !1526)
!1564 = !DILocation(line: 284, column: 2, scope: !1530, inlinedAt: !1526)
!1565 = !DILocalVariable(name: "mixinCall", scope: !1514, file: !296, line: 461, type: !744)
!1566 = !DILocation(line: 461, column: 2, scope: !1506)
!1567 = !DILocation(line: 462, column: 30, scope: !1514)
!1568 = !DILocation(line: 462, column: 27, scope: !1514)
!1569 = !DILocation(line: 463, column: 2, scope: !1514)
!1570 = distinct !DISubprogram(name: "parser.parseNamedBlock..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseNamedBlock", scope: null, file: !296, line: 326, type: !757, isLocal: false, isDefinition: true, scopeLine: 326, isOptimized: false, unit: !1, retainedNodes: !3)
!1571 = !DILocalVariable(name: "p", arg: 1, scope: !1570, file: !296, line: 326, type: !759)
!1572 = !DILocation(line: 326, column: 1, scope: !1570)
!1573 = !DILocalVariable(name: "$ret35", scope: !1570, file: !296, line: 326, type: !424)
!1574 = !DILocation(line: 326, column: 36, scope: !1570)
!1575 = !DILocation(line: 327, column: 10, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1570, file: !296, line: 326, column: 1)
!1577 = !DILocalVariable(name: "tok", scope: !1576, file: !296, line: 327, type: !936)
!1578 = !DILocation(line: 327, column: 2, scope: !1570)
!1579 = !DILocation(line: 329, column: 22, scope: !1576)
!1580 = !DILocation(line: 329, column: 6, scope: !1576)
!1581 = !DILocation(line: 329, column: 18, scope: !1576)
!1582 = !DILocation(line: 329, column: 30, scope: !1576)
!1583 = !DILocation(line: 330, column: 3, scope: !1576)
!1584 = !DILocation(line: 330, column: 71, scope: !1576)
!1585 = !DILocation(line: 333, column: 11, scope: !1576)
!1586 = !DILocalVariable(name: "$ret7", scope: !1587, file: !7, line: 143, type: !543)
!1587 = distinct !DISubprogram(name: "parser.newNamedBlock", scope: null, file: !7, line: 143, type: !1588, isLocal: true, isDefinition: true, scopeLine: 143, isOptimized: false, unit: !1, retainedNodes: !3)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!543, !9}
!1590 = !DILocation(line: 143, column: 33, scope: !1587, inlinedAt: !1591)
!1591 = distinct !DILocation(line: 333, column: 11, scope: !1576)
!1592 = !DILocation(line: 144, column: 8, scope: !1593, inlinedAt: !1591)
!1593 = distinct !DILexicalBlock(scope: !1587, file: !7, line: 143, column: 1)
!1594 = !DILocalVariable(name: "bb", scope: !1593, file: !7, line: 144, type: !543)
!1595 = !DILocation(line: 144, column: 2, scope: !1587, inlinedAt: !1591)
!1596 = !DILocation(line: 145, column: 4, scope: !1593, inlinedAt: !1591)
!1597 = !DILocation(line: 145, column: 10, scope: !1593, inlinedAt: !1591)
!1598 = !DILocation(line: 146, column: 22, scope: !1593, inlinedAt: !1591)
!1599 = !DILocation(line: 146, column: 10, scope: !1593, inlinedAt: !1591)
!1600 = !DILocation(line: 146, column: 20, scope: !1593, inlinedAt: !1591)
!1601 = !DILocation(line: 147, column: 4, scope: !1593, inlinedAt: !1591)
!1602 = !DILocation(line: 147, column: 14, scope: !1593, inlinedAt: !1591)
!1603 = !DILocation(line: 148, column: 2, scope: !1593, inlinedAt: !1591)
!1604 = !DILocalVariable(name: "block", scope: !1576, file: !296, line: 333, type: !543)
!1605 = !DILocation(line: 333, column: 2, scope: !1570)
!1606 = !DILocation(line: 334, column: 26, scope: !1576)
!1607 = !DILocation(line: 334, column: 7, scope: !1576)
!1608 = !DILocation(line: 334, column: 23, scope: !1576)
!1609 = !DILocation(line: 336, column: 8, scope: !1576)
!1610 = !DILocation(line: 336, column: 13, scope: !1576)
!1611 = !DILocation(line: 336, column: 26, scope: !1576)
!1612 = !DILocation(line: 338, column: 15, scope: !1576)
!1613 = !DILocation(line: 338, column: 20, scope: !1576)
!1614 = !DILocation(line: 338, column: 33, scope: !1576)
!1615 = !DILocation(line: 0, scope: !1576)
!1616 = !DILocation(line: 342, column: 6, scope: !1576)
!1617 = !DILocation(line: 342, column: 19, scope: !1576)
!1618 = !DILocation(line: 342, column: 25, scope: !1576)
!1619 = !DILocation(line: 343, column: 20, scope: !1576)
!1620 = !DILocation(line: 343, column: 17, scope: !1576)
!1621 = !DILocation(line: 343, column: 15, scope: !1576)
!1622 = !DILocation(line: 346, column: 3, scope: !1576)
!1623 = !DILocation(line: 346, column: 28, scope: !1576)
!1624 = !DILocation(line: 348, column: 10, scope: !1576)
!1625 = !DILocation(line: 348, column: 20, scope: !1576)
!1626 = !DILocation(line: 352, column: 9, scope: !1576)
!1627 = !DILocation(line: 352, column: 2, scope: !1576)
!1628 = !DILocation(line: 349, column: 3, scope: !1576)
!1629 = distinct !DISubprogram(name: "parser.parseRelativeFile..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseRelativeFile", scope: null, file: !296, line: 153, type: !1630, isLocal: false, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !1, retainedNodes: !3)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!759, !759, !759, !9}
!1632 = !DILocalVariable(name: "p", arg: 1, scope: !1629, file: !296, line: 153, type: !759)
!1633 = !DILocation(line: 153, column: 1, scope: !1629)
!1634 = !DILocalVariable(name: "filename", arg: 2, scope: !1629, file: !296, line: 153, type: !9)
!1635 = !DILocation(line: 153, column: 36, scope: !1629)
!1636 = !DILocalVariable(name: "$ret27", scope: !1629, file: !296, line: 153, type: !759)
!1637 = !DILocation(line: 153, column: 53, scope: !1629)
!1638 = !DILocation(line: 154, column: 10, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1629, file: !296, line: 153, column: 1)
!1640 = !DILocation(line: 154, column: 5, scope: !1639)
!1641 = !DILocation(line: 154, column: 21, scope: !1639)
!1642 = !DILocation(line: 155, column: 3, scope: !1639)
!1643 = !DILocation(line: 155, column: 36, scope: !1639)
!1644 = !DILocation(line: 158, column: 36, scope: !1639)
!1645 = !DILocation(line: 158, column: 22, scope: !1639)
!1646 = !DILocation(line: 160, column: 32, scope: !1639)
!1647 = !DILocation(line: 160, column: 13, scope: !1639)
!1648 = !DILocation(line: 160, column: 53, scope: !1639)
!1649 = !DILocation(line: 161, column: 14, scope: !1639)
!1650 = !DILocation(line: 0, scope: !1639)
!1651 = !DILocation(line: 164, column: 17, scope: !1639)
!1652 = !DILocalVariable(name: "parser", scope: !1639, file: !296, line: 164, type: !759)
!1653 = !DILocation(line: 164, column: 2, scope: !1629)
!1654 = !DILocalVariable(name: "err", scope: !1639, file: !296, line: 164, type: !247)
!1655 = !DILocation(line: 165, column: 9, scope: !1639)
!1656 = !DILocation(line: 165, column: 24, scope: !1639)
!1657 = !DILocation(line: 166, column: 17, scope: !1639)
!1658 = !DILocation(line: 168, column: 9, scope: !1639)
!1659 = !DILocation(line: 169, column: 64, scope: !1639)
!1660 = !DILocation(line: 169, column: 3, scope: !1639)
!1661 = !DILocation(line: 169, column: 24, scope: !1639)
!1662 = !DILocation(line: 172, column: 2, scope: !1639)
!1663 = distinct !DISubprogram(name: "parser.parseTag..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseTag", scope: null, file: !296, line: 389, type: !1664, isLocal: false, isDefinition: true, scopeLine: 389, isOptimized: false, unit: !1, retainedNodes: !3)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!607, !759, !759}
!1666 = !DILocalVariable(name: "p", arg: 1, scope: !1663, file: !296, line: 389, type: !759)
!1667 = !DILocation(line: 389, column: 1, scope: !1663)
!1668 = !DILocalVariable(name: "$ret40", scope: !1663, file: !296, line: 389, type: !607)
!1669 = !DILocation(line: 389, column: 29, scope: !1663)
!1670 = !DILocation(line: 390, column: 10, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !1663, file: !296, line: 389, column: 1)
!1672 = !DILocalVariable(name: "tok", scope: !1671, file: !296, line: 390, type: !936)
!1673 = !DILocation(line: 390, column: 2, scope: !1663)
!1674 = !DILocation(line: 391, column: 19, scope: !1671)
!1675 = !DILocation(line: 391, column: 9, scope: !1671)
!1676 = !DILocalVariable(name: "$ret8", scope: !1677, file: !7, line: 167, type: !607)
!1677 = distinct !DISubprogram(name: "parser.newTag", scope: null, file: !7, line: 167, type: !1678, isLocal: true, isDefinition: true, scopeLine: 167, isOptimized: false, unit: !1, retainedNodes: !3)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!607, !9}
!1680 = !DILocation(line: 167, column: 26, scope: !1677, inlinedAt: !1681)
!1681 = distinct !DILocation(line: 391, column: 9, scope: !1671)
!1682 = !DILocation(line: 168, column: 9, scope: !1683, inlinedAt: !1681)
!1683 = distinct !DILexicalBlock(scope: !1677, file: !7, line: 167, column: 1)
!1684 = !DILocalVariable(name: "tag", scope: !1683, file: !7, line: 168, type: !607)
!1685 = !DILocation(line: 168, column: 2, scope: !1677, inlinedAt: !1681)
!1686 = !DILocation(line: 169, column: 5, scope: !1683, inlinedAt: !1681)
!1687 = !DILocation(line: 169, column: 12, scope: !1683, inlinedAt: !1681)
!1688 = !DILocation(line: 170, column: 5, scope: !1683, inlinedAt: !1681)
!1689 = !DILocation(line: 170, column: 11, scope: !1683, inlinedAt: !1681)
!1690 = !DILocation(line: 171, column: 19, scope: !1683, inlinedAt: !1681)
!1691 = !DILocation(line: 171, column: 5, scope: !1683, inlinedAt: !1681)
!1692 = !DILocation(line: 171, column: 17, scope: !1683, inlinedAt: !1681)
!1693 = !DILocation(line: 172, column: 5, scope: !1683, inlinedAt: !1681)
!1694 = !DILocation(line: 172, column: 21, scope: !1683, inlinedAt: !1681)
!1695 = !DILocation(line: 173, column: 2, scope: !1683, inlinedAt: !1681)
!1696 = !DILocalVariable(name: "tag", scope: !1671, file: !296, line: 391, type: !607)
!1697 = !DILocation(line: 391, column: 2, scope: !1663)
!1698 = !DILocation(line: 392, column: 24, scope: !1671)
!1699 = !DILocation(line: 392, column: 2, scope: !1671)
!1700 = !DILocation(line: 392, column: 5, scope: !1671)
!1701 = !DILocation(line: 392, column: 21, scope: !1671)
!1702 = !DILocation(line: 394, column: 17, scope: !1671)
!1703 = !DILocalVariable(name: "ensureBlock", scope: !1671, file: !296, line: 394, type: !1704)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !296, line: 8, size: 64, align: 8, elements: !1706)
!1706 = !{!1707}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !296, line: 8, baseType: !1708, size: 64, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!1709 = !DILocation(line: 394, column: 2, scope: !1663)
!1710 = !DILocation(line: 401, column: 10, scope: !1671)
!1711 = !DILocation(line: 401, column: 23, scope: !1671)
!1712 = !DILocation(line: 403, column: 6, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1671, file: !296, line: 403, column: 3)
!1714 = !DILocation(line: 403, column: 9, scope: !1713)
!1715 = !DILocation(line: 403, column: 3, scope: !1713)
!1716 = !DILocation(line: 416, column: 10, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1671, file: !296, line: 416, column: 3)
!1718 = !DILocalVariable(name: "id", scope: !1717, file: !296, line: 416, type: !936)
!1719 = !DILocation(line: 416, column: 3, scope: !1671)
!1720 = !DILocation(line: 417, column: 12, scope: !1717)
!1721 = !DILocation(line: 423, column: 11, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1671, file: !296, line: 423, column: 3)
!1723 = !DILocalVariable(name: "cls", scope: !1722, file: !296, line: 423, type: !936)
!1724 = !DILocation(line: 423, column: 3, scope: !1671)
!1725 = !DILocation(line: 424, column: 13, scope: !1722)
!1726 = !DILocation(line: 430, column: 12, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1671, file: !296, line: 430, column: 3)
!1728 = !DILocalVariable(name: "attr", scope: !1727, file: !296, line: 430, type: !936)
!1729 = !DILocation(line: 430, column: 3, scope: !1671)
!1730 = !DILocation(line: 431, column: 14, scope: !1727)
!1731 = !DILocation(line: 407, column: 25, scope: !1713)
!1732 = !DILocation(line: 407, column: 13, scope: !1713)
!1733 = !DILocalVariable(name: "block", scope: !1713, file: !296, line: 407, type: !424)
!1734 = !DILocation(line: 407, column: 3, scope: !1671)
!1735 = !DILocation(line: 408, column: 6, scope: !1713)
!1736 = !DILocation(line: 408, column: 9, scope: !1713)
!1737 = !DILocation(line: 404, column: 5, scope: !1713)
!1738 = !DILocation(line: 404, column: 13, scope: !1713)
!1739 = !DILocation(line: 404, column: 22, scope: !1713)
!1740 = !DILocation(line: 408, column: 16, scope: !1713)
!1741 = !DILocation(line: 411, column: 27, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !1713, file: !296, line: 411, column: 4)
!1743 = !DILocation(line: 409, column: 14, scope: !1713)
!1744 = !DILocation(line: 411, column: 4, scope: !1742)
!1745 = !DILocation(line: 412, column: 8, scope: !1742)
!1746 = !DILocalVariable(name: "c", scope: !1742, file: !296, line: 411, type: !433)
!1747 = !DILocation(line: 411, column: 8, scope: !1713)
!1748 = !DILocation(line: 412, column: 14, scope: !1742)
!1749 = !DILocation(line: 412, column: 5, scope: !1742)
!1750 = !DILocation(line: 444, column: 9, scope: !1671)
!1751 = !DILocation(line: 444, column: 2, scope: !1671)
!1752 = !DILocation(line: 417, column: 17, scope: !1717)
!1753 = !DILocation(line: 417, column: 6, scope: !1717)
!1754 = !DILocation(line: 417, column: 32, scope: !1717)
!1755 = !DILocation(line: 418, column: 4, scope: !1717)
!1756 = !DILocation(line: 420, column: 54, scope: !1717)
!1757 = !DILocation(line: 420, column: 3, scope: !1717)
!1758 = !DILocation(line: 420, column: 6, scope: !1717)
!1759 = !DILocation(line: 420, column: 70, scope: !1717)
!1760 = !DILocation(line: 420, column: 20, scope: !1717)
!1761 = !DILocation(line: 420, column: 43, scope: !1717)
!1762 = !DILocation(line: 420, column: 18, scope: !1717)
!1763 = !DILocation(line: 424, column: 18, scope: !1722)
!1764 = !DILocation(line: 424, column: 6, scope: !1722)
!1765 = !DILocation(line: 424, column: 33, scope: !1722)
!1766 = !DILocation(line: 425, column: 4, scope: !1722)
!1767 = !DILocation(line: 427, column: 54, scope: !1722)
!1768 = !DILocation(line: 427, column: 3, scope: !1722)
!1769 = !DILocation(line: 427, column: 6, scope: !1722)
!1770 = !DILocation(line: 427, column: 74, scope: !1722)
!1771 = !DILocation(line: 427, column: 20, scope: !1722)
!1772 = !DILocation(line: 427, column: 43, scope: !1722)
!1773 = !DILocation(line: 427, column: 18, scope: !1722)
!1774 = !DILocation(line: 431, column: 19, scope: !1727)
!1775 = !DILocation(line: 431, column: 6, scope: !1727)
!1776 = !DILocation(line: 431, column: 34, scope: !1727)
!1777 = !DILocation(line: 432, column: 4, scope: !1727)
!1778 = !DILocation(line: 434, column: 54, scope: !1727)
!1779 = !DILocation(line: 434, column: 3, scope: !1727)
!1780 = !DILocation(line: 434, column: 6, scope: !1727)
!1781 = !DILocation(line: 434, column: 78, scope: !1727)
!1782 = !DILocation(line: 434, column: 83, scope: !1727)
!1783 = !DILocation(line: 434, column: 100, scope: !1727)
!1784 = !DILocation(line: 434, column: 105, scope: !1727)
!1785 = !DILocation(line: 434, column: 66, scope: !1727)
!1786 = !DILocation(line: 434, column: 114, scope: !1727)
!1787 = !DILocation(line: 434, column: 27, scope: !1727)
!1788 = !DILocation(line: 434, column: 30, scope: !1727)
!1789 = !DILocation(line: 434, column: 20, scope: !1727)
!1790 = !DILocation(line: 434, column: 43, scope: !1727)
!1791 = !DILocation(line: 434, column: 18, scope: !1727)
!1792 = !DILocation(line: 437, column: 20, scope: !1671)
!1793 = !DILocation(line: 437, column: 25, scope: !1671)
!1794 = !DILocation(line: 437, column: 34, scope: !1671)
!1795 = !DILocation(line: 438, column: 4, scope: !1671)
!1796 = !DILocation(line: 439, column: 25, scope: !1671)
!1797 = !DILocation(line: 439, column: 4, scope: !1671)
!1798 = !DILocation(line: 439, column: 7, scope: !1671)
!1799 = !DILocation(line: 439, column: 13, scope: !1671)
!1800 = distinct !DISubprogram(name: "parser.parseText..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.parseText", scope: null, file: !296, line: 375, type: !1801, isLocal: false, isDefinition: true, scopeLine: 375, isOptimized: false, unit: !1, retainedNodes: !3)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!470, !759, !759}
!1803 = !DILocalVariable(name: "p", arg: 1, scope: !1800, file: !296, line: 375, type: !759)
!1804 = !DILocation(line: 375, column: 1, scope: !1800)
!1805 = !DILocalVariable(name: "$ret38", scope: !1800, file: !296, line: 375, type: !470)
!1806 = !DILocation(line: 375, column: 30, scope: !1800)
!1807 = !DILocation(line: 376, column: 10, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1800, file: !296, line: 375, column: 1)
!1809 = !DILocalVariable(name: "tok", scope: !1808, file: !296, line: 376, type: !936)
!1810 = !DILocation(line: 376, column: 2, scope: !1800)
!1811 = !DILocation(line: 377, column: 32, scope: !1808)
!1812 = !DILocation(line: 377, column: 37, scope: !1808)
!1813 = !DILocation(line: 377, column: 21, scope: !1808)
!1814 = !DILocation(line: 377, column: 46, scope: !1808)
!1815 = !DILocation(line: 377, column: 10, scope: !1808)
!1816 = !DILocalVariable(name: "raw", arg: 2, scope: !1817, file: !7, line: 88, type: !99)
!1817 = distinct !DISubprogram(name: "parser.newText", scope: null, file: !7, line: 88, type: !1818, isLocal: true, isDefinition: true, scopeLine: 88, isOptimized: false, unit: !1, retainedNodes: !3)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!470, !9, !99}
!1820 = !DILocation(line: 88, column: 28, scope: !1817, inlinedAt: !1821)
!1821 = distinct !DILocation(line: 377, column: 10, scope: !1808)
!1822 = !DILocalVariable(name: "$ret4", scope: !1817, file: !7, line: 88, type: !470)
!1823 = !DILocation(line: 88, column: 38, scope: !1817, inlinedAt: !1821)
!1824 = !DILocation(line: 89, column: 8, scope: !1825, inlinedAt: !1821)
!1825 = distinct !DILexicalBlock(scope: !1817, file: !7, line: 88, column: 1)
!1826 = !DILocalVariable(name: "dt", scope: !1825, file: !7, line: 89, type: !470)
!1827 = !DILocation(line: 89, column: 2, scope: !1817, inlinedAt: !1821)
!1828 = !DILocation(line: 90, column: 4, scope: !1825, inlinedAt: !1821)
!1829 = !DILocation(line: 90, column: 11, scope: !1825, inlinedAt: !1821)
!1830 = !DILocation(line: 91, column: 4, scope: !1825, inlinedAt: !1821)
!1831 = !DILocation(line: 91, column: 9, scope: !1825, inlinedAt: !1821)
!1832 = !DILocation(line: 92, column: 2, scope: !1825, inlinedAt: !1821)
!1833 = !DILocalVariable(name: "node", scope: !1808, file: !296, line: 377, type: !470)
!1834 = !DILocation(line: 377, column: 2, scope: !1800)
!1835 = !DILocation(line: 378, column: 25, scope: !1808)
!1836 = !DILocation(line: 378, column: 22, scope: !1808)
!1837 = !DILocation(line: 379, column: 2, scope: !1808)
!1838 = distinct !DISubprogram(name: "parser.pos..1command_line_arguments.Parser", linkageName: "command_line_arguments.Parser.pos", scope: null, file: !296, line: 147, type: !1839, isLocal: false, isDefinition: true, scopeLine: 147, isOptimized: false, unit: !1, retainedNodes: !3)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!353, !759, !759}
!1841 = !DILocalVariable(name: "p", arg: 1, scope: !1838, file: !296, line: 147, type: !759)
!1842 = !DILocation(line: 147, column: 1, scope: !1838)
!1843 = !DILocation(line: 148, column: 10, scope: !1844)
!1844 = distinct !DILexicalBlock(scope: !1838, file: !296, line: 147, column: 1)
!1845 = !DILocation(line: 148, column: 18, scope: !1844)
!1846 = !DILocation(line: 149, column: 5, scope: !1844)
!1847 = !DILocation(line: 149, column: 18, scope: !1844)
!1848 = !DILocation(line: 149, column: 15, scope: !1844)
!1849 = !DILocation(line: 150, column: 2, scope: !1844)
!1850 = distinct !DISubprogram(name: "parser.Next..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.Next", scope: null, file: !42, line: 80, type: !1851, isLocal: false, isDefinition: true, scopeLine: 80, isOptimized: false, unit: !1, retainedNodes: !3)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!936, !763, !763}
!1853 = !DILocalVariable(name: "s", arg: 1, scope: !1850, file: !42, line: 80, type: !763)
!1854 = !DILocation(line: 80, column: 1, scope: !1850)
!1855 = !DILocalVariable(name: "$ret46", scope: !1850, file: !42, line: 80, type: !936)
!1856 = !DILocation(line: 80, column: 26, scope: !1850)
!1857 = !DILocation(line: 81, column: 6, scope: !1850)
!1858 = !DILocation(line: 81, column: 2, scope: !1850)
!1859 = !DILocation(line: 86, column: 3, scope: !1850)
!1860 = !DILocation(line: 88, column: 17, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 88, column: 2)
!1862 = !DILocation(line: 88, column: 23, scope: !1861)
!1863 = !DILocalVariable(name: "stashed", scope: !1861, file: !42, line: 88, type: !800)
!1864 = !DILocation(line: 88, column: 5, scope: !1850)
!1865 = !DILocation(line: 88, column: 41, scope: !1861)
!1866 = !DILocation(line: 82, column: 13, scope: !1850)
!1867 = !DILocation(line: 83, column: 11, scope: !1850)
!1868 = !DILocation(line: 83, column: 3, scope: !1850)
!1869 = !DILocation(line: 89, column: 23, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1861, file: !42, line: 88, column: 48)
!1871 = !DILocalVariable(name: "tok", scope: !1870, file: !42, line: 89, type: !936)
!1872 = !DILocation(line: 89, column: 3, scope: !1861)
!1873 = !DILocation(line: 90, column: 4, scope: !1870)
!1874 = !DILocation(line: 90, column: 10, scope: !1870)
!1875 = !DILocation(line: 91, column: 3, scope: !1870)
!1876 = !DILocation(line: 94, column: 10, scope: !1850)
!1877 = !DILocation(line: 111, column: 14, scope: !1878)
!1878 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 111, column: 3)
!1879 = !DILocalVariable(name: "tok", scope: !1878, file: !42, line: 111, type: !936)
!1880 = !DILocation(line: 111, column: 6, scope: !1850)
!1881 = !DILocation(line: 111, column: 32, scope: !1878)
!1882 = !DILocation(line: 96, column: 18, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 96, column: 3)
!1884 = !DILocation(line: 96, column: 30, scope: !1883)
!1885 = !DILocalVariable(name: "outdent", scope: !1883, file: !42, line: 96, type: !800)
!1886 = !DILocation(line: 96, column: 6, scope: !1850)
!1887 = !DILocation(line: 96, column: 47, scope: !1883)
!1888 = !DILocation(line: 101, column: 10, scope: !1850)
!1889 = !DILocation(line: 101, column: 3, scope: !1850)
!1890 = !DILocation(line: 97, column: 5, scope: !1883)
!1891 = !DILocation(line: 97, column: 17, scope: !1883)
!1892 = !DILocation(line: 98, column: 11, scope: !1883)
!1893 = !DILocation(line: 98, column: 4, scope: !1883)
!1894 = !DILocation(line: 172, column: 2, scope: !1850)
!1895 = !DILocation(line: 103, column: 11, scope: !1850)
!1896 = !DILocation(line: 105, column: 14, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 105, column: 3)
!1898 = !DILocalVariable(name: "tok", scope: !1897, file: !42, line: 105, type: !936)
!1899 = !DILocation(line: 105, column: 6, scope: !1850)
!1900 = !DILocation(line: 105, column: 33, scope: !1897)
!1901 = !DILocation(line: 109, column: 11, scope: !1850)
!1902 = !DILocation(line: 109, column: 3, scope: !1850)
!1903 = !DILocation(line: 115, column: 14, scope: !1904)
!1904 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 115, column: 3)
!1905 = !DILocalVariable(name: "tok", scope: !1904, file: !42, line: 115, type: !936)
!1906 = !DILocation(line: 115, column: 6, scope: !1850)
!1907 = !DILocation(line: 115, column: 36, scope: !1904)
!1908 = !DILocation(line: 119, column: 14, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 119, column: 3)
!1910 = !DILocalVariable(name: "tok", scope: !1909, file: !42, line: 119, type: !936)
!1911 = !DILocation(line: 119, column: 6, scope: !1850)
!1912 = !DILocation(line: 119, column: 34, scope: !1909)
!1913 = !DILocation(line: 123, column: 14, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 123, column: 3)
!1915 = !DILocalVariable(name: "tok", scope: !1914, file: !42, line: 123, type: !936)
!1916 = !DILocation(line: 123, column: 6, scope: !1850)
!1917 = !DILocation(line: 123, column: 36, scope: !1914)
!1918 = !DILocation(line: 127, column: 14, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 127, column: 3)
!1920 = !DILocalVariable(name: "tok", scope: !1919, file: !42, line: 127, type: !936)
!1921 = !DILocation(line: 127, column: 6, scope: !1850)
!1922 = !DILocation(line: 127, column: 31, scope: !1919)
!1923 = !DILocation(line: 131, column: 14, scope: !1924)
!1924 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 131, column: 3)
!1925 = !DILocalVariable(name: "tok", scope: !1924, file: !42, line: 131, type: !936)
!1926 = !DILocation(line: 131, column: 6, scope: !1850)
!1927 = !DILocation(line: 131, column: 33, scope: !1924)
!1928 = !DILocation(line: 135, column: 14, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 135, column: 3)
!1930 = !DILocalVariable(name: "tok", scope: !1929, file: !42, line: 135, type: !936)
!1931 = !DILocation(line: 135, column: 6, scope: !1850)
!1932 = !DILocation(line: 135, column: 34, scope: !1929)
!1933 = !DILocation(line: 139, column: 14, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 139, column: 3)
!1935 = !DILocalVariable(name: "tok", scope: !1934, file: !42, line: 139, type: !936)
!1936 = !DILocation(line: 139, column: 6, scope: !1850)
!1937 = !DILocation(line: 139, column: 32, scope: !1934)
!1938 = !DILocation(line: 143, column: 14, scope: !1939)
!1939 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 143, column: 3)
!1940 = !DILocalVariable(name: "tok", scope: !1939, file: !42, line: 143, type: !936)
!1941 = !DILocation(line: 143, column: 6, scope: !1850)
!1942 = !DILocation(line: 143, column: 37, scope: !1939)
!1943 = !DILocation(line: 147, column: 14, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 147, column: 3)
!1945 = !DILocalVariable(name: "tok", scope: !1944, file: !42, line: 147, type: !936)
!1946 = !DILocation(line: 147, column: 6, scope: !1850)
!1947 = !DILocation(line: 147, column: 30, scope: !1944)
!1948 = !DILocation(line: 151, column: 14, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 151, column: 3)
!1950 = !DILocalVariable(name: "tok", scope: !1949, file: !42, line: 151, type: !936)
!1951 = !DILocation(line: 151, column: 6, scope: !1850)
!1952 = !DILocation(line: 151, column: 29, scope: !1949)
!1953 = !DILocation(line: 155, column: 14, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 155, column: 3)
!1955 = !DILocalVariable(name: "tok", scope: !1954, file: !42, line: 155, type: !936)
!1956 = !DILocation(line: 155, column: 6, scope: !1850)
!1957 = !DILocation(line: 155, column: 36, scope: !1954)
!1958 = !DILocation(line: 159, column: 14, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 159, column: 3)
!1960 = !DILocalVariable(name: "tok", scope: !1959, file: !42, line: 159, type: !936)
!1961 = !DILocation(line: 159, column: 6, scope: !1850)
!1962 = !DILocation(line: 159, column: 36, scope: !1959)
!1963 = !DILocation(line: 163, column: 14, scope: !1964)
!1964 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 163, column: 3)
!1965 = !DILocalVariable(name: "tok", scope: !1964, file: !42, line: 163, type: !936)
!1966 = !DILocation(line: 163, column: 6, scope: !1850)
!1967 = !DILocation(line: 163, column: 34, scope: !1964)
!1968 = !DILocation(line: 167, column: 14, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1850, file: !42, line: 167, column: 3)
!1970 = !DILocalVariable(name: "tok", scope: !1969, file: !42, line: 167, type: !936)
!1971 = !DILocation(line: 167, column: 6, scope: !1850)
!1972 = distinct !DISubprogram(name: "parser.NextRaw..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.NextRaw", scope: null, file: !42, line: 175, type: !1851, isLocal: false, isDefinition: true, scopeLine: 175, isOptimized: false, unit: !1, retainedNodes: !3)
!1973 = !DILocalVariable(name: "s", arg: 1, scope: !1972, file: !42, line: 175, type: !763)
!1974 = !DILocation(line: 175, column: 1, scope: !1972)
!1975 = !DILocalVariable(name: "$ret47", scope: !1972, file: !42, line: 175, type: !936)
!1976 = !DILocation(line: 175, column: 29, scope: !1972)
!1977 = !DILocalVariable(name: "result", scope: !1978, file: !42, line: 176, type: !9)
!1978 = distinct !DILexicalBlock(scope: !1972, file: !42, line: 175, column: 1)
!1979 = !DILocation(line: 176, column: 2, scope: !1972)
!1980 = !DILocalVariable(name: "level", scope: !1978, file: !42, line: 177, type: !16)
!1981 = !DILocation(line: 177, column: 2, scope: !1972)
!1982 = !DILocation(line: 180, column: 4, scope: !1978)
!1983 = !DILocation(line: 182, column: 11, scope: !1978)
!1984 = !DILocation(line: 184, column: 35, scope: !1978)
!1985 = !DILocation(line: 184, column: 11, scope: !1978)
!1986 = !DILocation(line: 184, column: 12, scope: !1978)
!1987 = !DILocation(line: 184, column: 4, scope: !1978)
!1988 = !DILocation(line: 209, column: 19, scope: !1978)
!1989 = !DILocation(line: 186, column: 12, scope: !1978)
!1990 = !DILocation(line: 188, column: 15, scope: !1991)
!1991 = distinct !DILexicalBlock(scope: !1978, file: !42, line: 188, column: 4)
!1992 = !DILocalVariable(name: "tok", scope: !1991, file: !42, line: 188, type: !936)
!1993 = !DILocation(line: 188, column: 7, scope: !1978)
!1994 = !DILocation(line: 188, column: 34, scope: !1991)
!1995 = !DILocation(line: 189, column: 11, scope: !1991)
!1996 = !DILocation(line: 0, scope: !1991)
!1997 = !DILocation(line: 198, column: 14, scope: !1991)
!1998 = !DILocation(line: 194, column: 15, scope: !1991)
!1999 = !DILocation(line: 199, column: 23, scope: !1991)
!2000 = !DILocation(line: 199, column: 7, scope: !1991)
!2001 = !DILocation(line: 199, column: 13, scope: !1991)
!2002 = !DILocation(line: 201, column: 21, scope: !1991)
!2003 = !DILocation(line: 201, column: 46, scope: !1991)
!2004 = !DILocation(line: 201, column: 34, scope: !1991)
!2005 = !DILocation(line: 201, column: 50, scope: !1991)
!2006 = !DILocation(line: 205, column: 37, scope: !1991)
!2007 = !DILocation(line: 205, column: 13, scope: !1991)
!2008 = !DILocation(line: 205, column: 14, scope: !1991)
!2009 = !DILocation(line: 205, column: 6, scope: !1991)
!2010 = !DILocation(line: 202, column: 22, scope: !1991)
!2011 = !DILocation(line: 210, column: 14, scope: !1978)
!2012 = !DILocalVariable(name: "i", scope: !2013, file: !42, line: 212, type: !16)
!2013 = distinct !DILexicalBlock(scope: !1978, file: !42, line: 212, column: 4)
!2014 = !DILocation(line: 212, column: 8, scope: !1978)
!2015 = !DILocation(line: 212, column: 18, scope: !2013)
!2016 = !DILocation(line: 213, column: 5, scope: !2013)
!2017 = !DILocation(line: 212, column: 27, scope: !2013)
!2018 = !DILocation(line: 0, scope: !2013)
!2019 = !DILocation(line: 215, column: 13, scope: !1978)
!2020 = !DILocation(line: 216, column: 14, scope: !1978)
!2021 = !DILocation(line: 216, column: 5, scope: !1978)
!2022 = distinct !DISubprogram(name: "parser.Pos..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.Pos", scope: null, file: !42, line: 75, type: !2023, isLocal: false, isDefinition: true, scopeLine: 75, isOptimized: false, unit: !1, retainedNodes: !3)
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!353, !763, !763}
!2025 = !DILocalVariable(name: "s", arg: 1, scope: !2022, file: !42, line: 75, type: !763)
!2026 = !DILocation(line: 75, column: 1, scope: !2022)
!2027 = !DILocation(line: 76, column: 25, scope: !2022)
!2028 = !DILocation(line: 76, column: 40, scope: !2022)
!2029 = !DILocation(line: 76, column: 46, scope: !2022)
!2030 = !DILocation(line: 76, column: 60, scope: !2022)
!2031 = !DILocation(line: 76, column: 66, scope: !2022)
!2032 = !DILocalVariable(name: "$ret45", scope: !2022, file: !42, line: 75, type: !353)
!2033 = !DILocation(line: 75, column: 25, scope: !2022)
!2034 = !DILocation(line: 76, column: 2, scope: !2022)
!2035 = distinct !DISubprogram(name: "parser.consume..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.consume", scope: null, file: !42, line: 461, type: !2036, isLocal: false, isDefinition: true, scopeLine: 461, isOptimized: false, unit: !1, retainedNodes: !3)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!33, !763, !763, !16}
!2038 = !DILocalVariable(name: "s", arg: 1, scope: !2035, file: !42, line: 461, type: !763)
!2039 = !DILocation(line: 461, column: 1, scope: !2035)
!2040 = !DILocalVariable(name: "runes", arg: 2, scope: !2035, file: !42, line: 461, type: !16)
!2041 = !DILocation(line: 461, column: 27, scope: !2035)
!2042 = !DILocation(line: 462, column: 10, scope: !2035)
!2043 = !DILocation(line: 462, column: 5, scope: !2035)
!2044 = !DILocation(line: 462, column: 19, scope: !2035)
!2045 = !DILocation(line: 463, column: 13, scope: !2035)
!2046 = !DILocation(line: 463, column: 3, scope: !2035)
!2047 = !DILocation(line: 466, column: 3, scope: !2035)
!2048 = !DILocation(line: 466, column: 21, scope: !2035)
!2049 = !DILocation(line: 466, column: 18, scope: !2035)
!2050 = !DILocation(line: 467, column: 3, scope: !2035)
!2051 = !DILocation(line: 467, column: 20, scope: !2035)
!2052 = !DILocation(line: 467, column: 17, scope: !2035)
!2053 = !DILocation(line: 468, column: 3, scope: !2035)
!2054 = !DILocation(line: 468, column: 18, scope: !2035)
!2055 = !DILocation(line: 470, column: 21, scope: !2035)
!2056 = !DILocation(line: 470, column: 11, scope: !2035)
!2057 = !DILocation(line: 471, column: 3, scope: !2035)
!2058 = !DILocation(line: 471, column: 8, scope: !2035)
!2059 = distinct !DISubprogram(name: "parser.ensureBuffer..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.ensureBuffer", scope: null, file: !42, line: 475, type: !2060, isLocal: false, isDefinition: true, scopeLine: 475, isOptimized: false, unit: !1, retainedNodes: !3)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!33, !763, !763}
!2062 = !DILocalVariable(name: "s", arg: 1, scope: !2059, file: !42, line: 475, type: !763)
!2063 = !DILocation(line: 475, column: 1, scope: !2059)
!2064 = !DILocation(line: 476, column: 10, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2059, file: !42, line: 475, column: 1)
!2066 = !DILocation(line: 476, column: 5, scope: !2065)
!2067 = !DILocation(line: 476, column: 19, scope: !2065)
!2068 = !DILocation(line: 477, column: 3, scope: !2065)
!2069 = !DILocation(line: 480, column: 15, scope: !2065)
!2070 = !DILocation(line: 480, column: 22, scope: !2065)
!2071 = !DILocalVariable(name: "err", scope: !2065, file: !42, line: 480, type: !247)
!2072 = !DILocation(line: 480, column: 2, scope: !2059)
!2073 = !DILocation(line: 482, column: 9, scope: !2065)
!2074 = !DILocation(line: 484, column: 26, scope: !2065)
!2075 = !DILocation(line: 482, column: 23, scope: !2065)
!2076 = !DILocation(line: 484, column: 35, scope: !2065)
!2077 = !DILocation(line: 483, column: 9, scope: !2065)
!2078 = !DILocation(line: 483, column: 3, scope: !2065)
!2079 = !DILocation(line: 488, column: 18, scope: !2065)
!2080 = !DILocation(line: 488, column: 9, scope: !2065)
!2081 = !DILocation(line: 485, column: 4, scope: !2065)
!2082 = !DILocation(line: 485, column: 11, scope: !2065)
!2083 = !DILocation(line: 488, column: 22, scope: !2065)
!2084 = !DILocation(line: 489, column: 13, scope: !2065)
!2085 = !DILocation(line: 489, column: 8, scope: !2065)
!2086 = !DILocation(line: 492, column: 15, scope: !2065)
!2087 = !DILocation(line: 492, column: 34, scope: !2065)
!2088 = !DILocation(line: 492, column: 25, scope: !2065)
!2089 = !DILocation(line: 492, column: 38, scope: !2065)
!2090 = !DILocation(line: 493, column: 13, scope: !2065)
!2091 = !DILocation(line: 493, column: 8, scope: !2065)
!2092 = !DILocation(line: 496, column: 4, scope: !2065)
!2093 = !DILocation(line: 496, column: 11, scope: !2065)
!2094 = !DILocation(line: 497, column: 12, scope: !2065)
!2095 = !DILocation(line: 498, column: 4, scope: !2065)
!2096 = !DILocation(line: 498, column: 10, scope: !2065)
!2097 = !DILocation(line: 499, column: 4, scope: !2065)
!2098 = !DILocation(line: 499, column: 9, scope: !2065)
!2099 = distinct !DISubprogram(name: "parser.scanAssignment..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanAssignment", scope: null, file: !42, line: 314, type: !1851, isLocal: false, isDefinition: true, scopeLine: 314, isOptimized: false, unit: !1, retainedNodes: !3)
!2100 = !DILocalVariable(name: "s", arg: 1, scope: !2099, file: !42, line: 314, type: !763)
!2101 = !DILocation(line: 314, column: 1, scope: !2099)
!2102 = !DILocalVariable(name: "$ret52", scope: !2099, file: !42, line: 314, type: !936)
!2103 = !DILocation(line: 314, column: 36, scope: !2099)
!2104 = !DILocation(line: 315, column: 45, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2099, file: !42, line: 315, column: 2)
!2106 = !DILocation(line: 315, column: 11, scope: !2105)
!2107 = !DILocation(line: 315, column: 24, scope: !2105)
!2108 = !DILocalVariable(name: "sm", scope: !2105, file: !42, line: 315, type: !106)
!2109 = !DILocation(line: 315, column: 5, scope: !2099)
!2110 = !DILocation(line: 315, column: 63, scope: !2105)
!2111 = !DILocation(line: 316, column: 19, scope: !2105)
!2112 = !DILocation(line: 320, column: 2, scope: !2099)
!2113 = !DILocation(line: 316, column: 13, scope: !2105)
!2114 = !DILocation(line: 316, column: 4, scope: !2105)
!2115 = !DILocation(line: 317, column: 64, scope: !2105)
!2116 = !DILocation(line: 317, column: 39, scope: !2105)
!2117 = !DILocation(line: 317, column: 34, scope: !2105)
!2118 = !DILocation(line: 317, column: 10, scope: !2105)
!2119 = !DILocation(line: 317, column: 11, scope: !2105)
!2120 = !DILocation(line: 317, column: 3, scope: !2105)
!2121 = distinct !DISubprogram(name: "parser.scanAttribute..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanAttribute", scope: null, file: !42, line: 363, type: !1851, isLocal: false, isDefinition: true, scopeLine: 363, isOptimized: false, unit: !1, retainedNodes: !3)
!2122 = !DILocalVariable(name: "s", arg: 1, scope: !2121, file: !42, line: 363, type: !763)
!2123 = !DILocation(line: 363, column: 1, scope: !2121)
!2124 = !DILocalVariable(name: "$ret56", scope: !2121, file: !42, line: 363, type: !936)
!2125 = !DILocation(line: 363, column: 35, scope: !2121)
!2126 = !DILocation(line: 364, column: 44, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2121, file: !42, line: 364, column: 2)
!2128 = !DILocation(line: 364, column: 11, scope: !2127)
!2129 = !DILocation(line: 364, column: 23, scope: !2127)
!2130 = !DILocalVariable(name: "sm", scope: !2127, file: !42, line: 364, type: !106)
!2131 = !DILocation(line: 364, column: 5, scope: !2121)
!2132 = !DILocation(line: 364, column: 62, scope: !2127)
!2133 = !DILocation(line: 365, column: 19, scope: !2127)
!2134 = !DILocation(line: 374, column: 2, scope: !2121)
!2135 = !DILocation(line: 365, column: 13, scope: !2127)
!2136 = !DILocation(line: 365, column: 4, scope: !2127)
!2137 = !DILocation(line: 367, column: 12, scope: !2127)
!2138 = !DILocation(line: 367, column: 6, scope: !2127)
!2139 = !DILocation(line: 367, column: 17, scope: !2127)
!2140 = !DILocation(line: 367, column: 27, scope: !2127)
!2141 = !DILocation(line: 367, column: 31, scope: !2127)
!2142 = !DILocation(line: 371, column: 69, scope: !2127)
!2143 = !DILocation(line: 368, column: 39, scope: !2127)
!2144 = !DILocation(line: 368, column: 105, scope: !2127)
!2145 = !DILocation(line: 368, column: 34, scope: !2127)
!2146 = !DILocation(line: 368, column: 11, scope: !2127)
!2147 = !DILocation(line: 368, column: 12, scope: !2127)
!2148 = !DILocation(line: 368, column: 4, scope: !2127)
!2149 = !DILocation(line: 371, column: 38, scope: !2127)
!2150 = !DILocation(line: 371, column: 111, scope: !2127)
!2151 = !DILocation(line: 371, column: 33, scope: !2127)
!2152 = !DILocation(line: 371, column: 10, scope: !2127)
!2153 = !DILocation(line: 371, column: 11, scope: !2127)
!2154 = !DILocation(line: 371, column: 3, scope: !2127)
!2155 = distinct !DISubprogram(name: "parser.scanBlock..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanBlock", scope: null, file: !42, line: 401, type: !1851, isLocal: false, isDefinition: true, scopeLine: 401, isOptimized: false, unit: !1, retainedNodes: !3)
!2156 = !DILocalVariable(name: "s", arg: 1, scope: !2155, file: !42, line: 401, type: !763)
!2157 = !DILocation(line: 401, column: 1, scope: !2155)
!2158 = !DILocalVariable(name: "$ret59", scope: !2155, file: !42, line: 401, type: !936)
!2159 = !DILocation(line: 401, column: 31, scope: !2155)
!2160 = !DILocation(line: 402, column: 40, scope: !2161)
!2161 = distinct !DILexicalBlock(scope: !2155, file: !42, line: 402, column: 2)
!2162 = !DILocation(line: 402, column: 11, scope: !2161)
!2163 = !DILocation(line: 402, column: 19, scope: !2161)
!2164 = !DILocalVariable(name: "sm", scope: !2161, file: !42, line: 402, type: !106)
!2165 = !DILocation(line: 402, column: 5, scope: !2155)
!2166 = !DILocation(line: 402, column: 58, scope: !2161)
!2167 = !DILocation(line: 403, column: 19, scope: !2161)
!2168 = !DILocation(line: 407, column: 2, scope: !2155)
!2169 = !DILocation(line: 403, column: 13, scope: !2161)
!2170 = !DILocation(line: 403, column: 4, scope: !2161)
!2171 = !DILocation(line: 404, column: 71, scope: !2161)
!2172 = !DILocation(line: 404, column: 39, scope: !2161)
!2173 = !DILocation(line: 404, column: 34, scope: !2161)
!2174 = !DILocation(line: 404, column: 10, scope: !2161)
!2175 = !DILocation(line: 404, column: 11, scope: !2161)
!2176 = !DILocation(line: 404, column: 3, scope: !2161)
!2177 = distinct !DISubprogram(name: "parser.scanClassName..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanClassName", scope: null, file: !42, line: 352, type: !1851, isLocal: false, isDefinition: true, scopeLine: 352, isOptimized: false, unit: !1, retainedNodes: !3)
!2178 = !DILocalVariable(name: "s", arg: 1, scope: !2177, file: !42, line: 352, type: !763)
!2179 = !DILocation(line: 352, column: 1, scope: !2177)
!2180 = !DILocalVariable(name: "$ret55", scope: !2177, file: !42, line: 352, type: !936)
!2181 = !DILocation(line: 352, column: 35, scope: !2177)
!2182 = !DILocation(line: 353, column: 44, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2177, file: !42, line: 353, column: 2)
!2184 = !DILocation(line: 353, column: 11, scope: !2183)
!2185 = !DILocation(line: 353, column: 23, scope: !2183)
!2186 = !DILocalVariable(name: "sm", scope: !2183, file: !42, line: 353, type: !106)
!2187 = !DILocation(line: 353, column: 5, scope: !2177)
!2188 = !DILocation(line: 353, column: 62, scope: !2183)
!2189 = !DILocation(line: 354, column: 19, scope: !2183)
!2190 = !DILocation(line: 358, column: 2, scope: !2177)
!2191 = !DILocation(line: 354, column: 13, scope: !2183)
!2192 = !DILocation(line: 354, column: 4, scope: !2183)
!2193 = !DILocation(line: 355, column: 71, scope: !2183)
!2194 = !DILocation(line: 355, column: 38, scope: !2183)
!2195 = !DILocation(line: 355, column: 33, scope: !2183)
!2196 = !DILocation(line: 355, column: 10, scope: !2183)
!2197 = !DILocation(line: 355, column: 11, scope: !2183)
!2198 = !DILocation(line: 355, column: 3, scope: !2183)
!2199 = distinct !DISubprogram(name: "parser.scanComment..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanComment", scope: null, file: !42, line: 325, type: !1851, isLocal: false, isDefinition: true, scopeLine: 325, isOptimized: false, unit: !1, retainedNodes: !3)
!2200 = !DILocalVariable(name: "s", arg: 1, scope: !2199, file: !42, line: 325, type: !763)
!2201 = !DILocation(line: 325, column: 1, scope: !2199)
!2202 = !DILocalVariable(name: "$ret53", scope: !2199, file: !42, line: 325, type: !936)
!2203 = !DILocation(line: 325, column: 33, scope: !2199)
!2204 = !DILocation(line: 326, column: 42, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2199, file: !42, line: 326, column: 2)
!2206 = !DILocation(line: 326, column: 11, scope: !2205)
!2207 = !DILocation(line: 326, column: 21, scope: !2205)
!2208 = !DILocalVariable(name: "sm", scope: !2205, file: !42, line: 326, type: !106)
!2209 = !DILocation(line: 326, column: 5, scope: !2199)
!2210 = !DILocation(line: 326, column: 60, scope: !2205)
!2211 = !DILocation(line: 328, column: 12, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2205, file: !42, line: 326, column: 65)
!2213 = !DILocation(line: 336, column: 2, scope: !2199)
!2214 = !DILocation(line: 328, column: 6, scope: !2212)
!2215 = !DILocation(line: 328, column: 17, scope: !2212)
!2216 = !DILocation(line: 329, column: 9, scope: !2212)
!2217 = !DILocation(line: 332, column: 13, scope: !2212)
!2218 = !DILocation(line: 332, column: 4, scope: !2212)
!2219 = !DILocation(line: 333, column: 36, scope: !2212)
!2220 = !DILocation(line: 333, column: 31, scope: !2212)
!2221 = !DILocation(line: 333, column: 10, scope: !2212)
!2222 = !DILocation(line: 333, column: 11, scope: !2212)
!2223 = !DILocation(line: 333, column: 3, scope: !2212)
!2224 = distinct !DISubprogram(name: "parser.scanCondition..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanCondition", scope: null, file: !42, line: 287, type: !1851, isLocal: false, isDefinition: true, scopeLine: 287, isOptimized: false, unit: !1, retainedNodes: !3)
!2225 = !DILocalVariable(name: "s", arg: 1, scope: !2224, file: !42, line: 287, type: !763)
!2226 = !DILocation(line: 287, column: 1, scope: !2224)
!2227 = !DILocalVariable(name: "$ret50", scope: !2224, file: !42, line: 287, type: !936)
!2228 = !DILocation(line: 287, column: 35, scope: !2224)
!2229 = !DILocation(line: 288, column: 37, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2224, file: !42, line: 288, column: 2)
!2231 = !DILocation(line: 288, column: 11, scope: !2230)
!2232 = !DILocation(line: 288, column: 16, scope: !2230)
!2233 = !DILocalVariable(name: "sm", scope: !2230, file: !42, line: 288, type: !106)
!2234 = !DILocation(line: 288, column: 5, scope: !2224)
!2235 = !DILocation(line: 288, column: 55, scope: !2230)
!2236 = !DILocation(line: 289, column: 19, scope: !2230)
!2237 = !DILocation(line: 289, column: 13, scope: !2230)
!2238 = !DILocation(line: 289, column: 4, scope: !2230)
!2239 = !DILocation(line: 290, column: 26, scope: !2230)
!2240 = !DILocation(line: 290, column: 10, scope: !2230)
!2241 = !DILocation(line: 290, column: 11, scope: !2230)
!2242 = !DILocation(line: 290, column: 3, scope: !2230)
!2243 = !DILocation(line: 293, column: 11, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2224, file: !42, line: 293, column: 2)
!2245 = !DILocation(line: 293, column: 18, scope: !2244)
!2246 = !DILocalVariable(name: "sm", scope: !2244, file: !42, line: 293, type: !106)
!2247 = !DILocation(line: 293, column: 5, scope: !2224)
!2248 = !DILocation(line: 293, column: 57, scope: !2244)
!2249 = !DILocation(line: 294, column: 19, scope: !2244)
!2250 = !DILocation(line: 298, column: 2, scope: !2224)
!2251 = !DILocation(line: 294, column: 13, scope: !2244)
!2252 = !DILocation(line: 294, column: 4, scope: !2244)
!2253 = !DILocation(line: 295, column: 10, scope: !2244)
!2254 = !DILocation(line: 295, column: 3, scope: !2244)
!2255 = distinct !DISubprogram(name: "parser.scanDoctype..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanDoctype", scope: null, file: !42, line: 271, type: !1851, isLocal: false, isDefinition: true, scopeLine: 271, isOptimized: false, unit: !1, retainedNodes: !3)
!2256 = !DILocalVariable(name: "s", arg: 1, scope: !2255, file: !42, line: 271, type: !763)
!2257 = !DILocation(line: 271, column: 1, scope: !2255)
!2258 = !DILocalVariable(name: "$ret49", scope: !2255, file: !42, line: 271, type: !936)
!2259 = !DILocation(line: 271, column: 33, scope: !2255)
!2260 = !DILocation(line: 272, column: 42, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2255, file: !42, line: 272, column: 2)
!2262 = !DILocation(line: 272, column: 11, scope: !2261)
!2263 = !DILocation(line: 272, column: 21, scope: !2261)
!2264 = !DILocalVariable(name: "sm", scope: !2261, file: !42, line: 272, type: !106)
!2265 = !DILocation(line: 272, column: 5, scope: !2255)
!2266 = !DILocation(line: 272, column: 60, scope: !2261)
!2267 = !DILocation(line: 273, column: 12, scope: !2261)
!2268 = !DILocation(line: 281, column: 2, scope: !2255)
!2269 = !DILocation(line: 273, column: 6, scope: !2261)
!2270 = !DILocation(line: 273, column: 17, scope: !2261)
!2271 = !DILocation(line: 274, column: 10, scope: !2261)
!2272 = !DILocation(line: 277, column: 13, scope: !2261)
!2273 = !DILocation(line: 277, column: 4, scope: !2261)
!2274 = !DILocation(line: 278, column: 10, scope: !2261)
!2275 = !DILocation(line: 278, column: 11, scope: !2261)
!2276 = !DILocation(line: 278, column: 3, scope: !2261)
!2277 = distinct !DISubprogram(name: "parser.scanEach..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanEach", scope: null, file: !42, line: 303, type: !1851, isLocal: false, isDefinition: true, scopeLine: 303, isOptimized: false, unit: !1, retainedNodes: !3)
!2278 = !DILocalVariable(name: "s", arg: 1, scope: !2277, file: !42, line: 303, type: !763)
!2279 = !DILocation(line: 303, column: 1, scope: !2277)
!2280 = !DILocalVariable(name: "$ret51", scope: !2277, file: !42, line: 303, type: !936)
!2281 = !DILocation(line: 303, column: 30, scope: !2277)
!2282 = !DILocation(line: 304, column: 39, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2277, file: !42, line: 304, column: 2)
!2284 = !DILocation(line: 304, column: 11, scope: !2283)
!2285 = !DILocation(line: 304, column: 18, scope: !2283)
!2286 = !DILocalVariable(name: "sm", scope: !2283, file: !42, line: 304, type: !106)
!2287 = !DILocation(line: 304, column: 5, scope: !2277)
!2288 = !DILocation(line: 304, column: 57, scope: !2283)
!2289 = !DILocation(line: 305, column: 19, scope: !2283)
!2290 = !DILocation(line: 309, column: 2, scope: !2277)
!2291 = !DILocation(line: 305, column: 13, scope: !2283)
!2292 = !DILocation(line: 305, column: 4, scope: !2283)
!2293 = !DILocation(line: 306, column: 58, scope: !2283)
!2294 = !DILocation(line: 306, column: 33, scope: !2283)
!2295 = !DILocation(line: 306, column: 70, scope: !2283)
!2296 = !DILocation(line: 306, column: 28, scope: !2283)
!2297 = !DILocation(line: 306, column: 10, scope: !2283)
!2298 = !DILocation(line: 306, column: 11, scope: !2283)
!2299 = !DILocation(line: 306, column: 3, scope: !2283)
!2300 = distinct !DISubprogram(name: "parser.scanExtends..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanExtends", scope: null, file: !42, line: 390, type: !1851, isLocal: false, isDefinition: true, scopeLine: 390, isOptimized: false, unit: !1, retainedNodes: !3)
!2301 = !DILocalVariable(name: "s", arg: 1, scope: !2300, file: !42, line: 390, type: !763)
!2302 = !DILocation(line: 390, column: 1, scope: !2300)
!2303 = !DILocalVariable(name: "$ret58", scope: !2300, file: !42, line: 390, type: !936)
!2304 = !DILocation(line: 390, column: 33, scope: !2300)
!2305 = !DILocation(line: 391, column: 42, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2300, file: !42, line: 391, column: 2)
!2307 = !DILocation(line: 391, column: 11, scope: !2306)
!2308 = !DILocation(line: 391, column: 21, scope: !2306)
!2309 = !DILocalVariable(name: "sm", scope: !2306, file: !42, line: 391, type: !106)
!2310 = !DILocation(line: 391, column: 5, scope: !2300)
!2311 = !DILocation(line: 391, column: 60, scope: !2306)
!2312 = !DILocation(line: 392, column: 19, scope: !2306)
!2313 = !DILocation(line: 396, column: 2, scope: !2300)
!2314 = !DILocation(line: 392, column: 13, scope: !2306)
!2315 = !DILocation(line: 392, column: 4, scope: !2306)
!2316 = !DILocation(line: 393, column: 31, scope: !2306)
!2317 = !DILocation(line: 393, column: 10, scope: !2306)
!2318 = !DILocation(line: 393, column: 11, scope: !2306)
!2319 = !DILocation(line: 393, column: 3, scope: !2306)
!2320 = distinct !DISubprogram(name: "parser.scanId..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanId", scope: null, file: !42, line: 341, type: !1851, isLocal: false, isDefinition: true, scopeLine: 341, isOptimized: false, unit: !1, retainedNodes: !3)
!2321 = !DILocalVariable(name: "s", arg: 1, scope: !2320, file: !42, line: 341, type: !763)
!2322 = !DILocation(line: 341, column: 1, scope: !2320)
!2323 = !DILocalVariable(name: "$ret54", scope: !2320, file: !42, line: 341, type: !936)
!2324 = !DILocation(line: 341, column: 28, scope: !2320)
!2325 = !DILocation(line: 342, column: 37, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2320, file: !42, line: 342, column: 2)
!2327 = !DILocation(line: 342, column: 11, scope: !2326)
!2328 = !DILocation(line: 342, column: 16, scope: !2326)
!2329 = !DILocalVariable(name: "sm", scope: !2326, file: !42, line: 342, type: !106)
!2330 = !DILocation(line: 342, column: 5, scope: !2320)
!2331 = !DILocation(line: 342, column: 55, scope: !2326)
!2332 = !DILocation(line: 343, column: 19, scope: !2326)
!2333 = !DILocation(line: 347, column: 2, scope: !2320)
!2334 = !DILocation(line: 343, column: 13, scope: !2326)
!2335 = !DILocation(line: 343, column: 4, scope: !2326)
!2336 = !DILocation(line: 344, column: 64, scope: !2326)
!2337 = !DILocation(line: 344, column: 31, scope: !2326)
!2338 = !DILocation(line: 344, column: 26, scope: !2326)
!2339 = !DILocation(line: 344, column: 10, scope: !2326)
!2340 = !DILocation(line: 344, column: 11, scope: !2326)
!2341 = !DILocation(line: 344, column: 3, scope: !2326)
!2342 = distinct !DISubprogram(name: "parser.scanImport..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanImport", scope: null, file: !42, line: 379, type: !1851, isLocal: false, isDefinition: true, scopeLine: 379, isOptimized: false, unit: !1, retainedNodes: !3)
!2343 = !DILocalVariable(name: "s", arg: 1, scope: !2342, file: !42, line: 379, type: !763)
!2344 = !DILocation(line: 379, column: 1, scope: !2342)
!2345 = !DILocalVariable(name: "$ret57", scope: !2342, file: !42, line: 379, type: !936)
!2346 = !DILocation(line: 379, column: 32, scope: !2342)
!2347 = !DILocation(line: 380, column: 41, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2342, file: !42, line: 380, column: 2)
!2349 = !DILocation(line: 380, column: 11, scope: !2348)
!2350 = !DILocation(line: 380, column: 20, scope: !2348)
!2351 = !DILocalVariable(name: "sm", scope: !2348, file: !42, line: 380, type: !106)
!2352 = !DILocation(line: 380, column: 5, scope: !2342)
!2353 = !DILocation(line: 380, column: 59, scope: !2348)
!2354 = !DILocation(line: 381, column: 19, scope: !2348)
!2355 = !DILocation(line: 385, column: 2, scope: !2342)
!2356 = !DILocation(line: 381, column: 13, scope: !2348)
!2357 = !DILocation(line: 381, column: 4, scope: !2348)
!2358 = !DILocation(line: 382, column: 30, scope: !2348)
!2359 = !DILocation(line: 382, column: 10, scope: !2348)
!2360 = !DILocation(line: 382, column: 11, scope: !2348)
!2361 = !DILocation(line: 382, column: 3, scope: !2348)
!2362 = distinct !DISubprogram(name: "parser.scanIndent..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanIndent", scope: null, file: !42, line: 225, type: !1851, isLocal: false, isDefinition: true, scopeLine: 225, isOptimized: false, unit: !1, retainedNodes: !3)
!2363 = !DILocalVariable(name: "s", arg: 1, scope: !2362, file: !42, line: 225, type: !763)
!2364 = !DILocation(line: 225, column: 1, scope: !2362)
!2365 = !DILocalVariable(name: "$ret48", scope: !2362, file: !42, line: 225, type: !936)
!2366 = !DILocation(line: 225, column: 32, scope: !2362)
!2367 = !DILocation(line: 226, column: 10, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2362, file: !42, line: 225, column: 1)
!2369 = !DILocation(line: 226, column: 5, scope: !2368)
!2370 = !DILocation(line: 226, column: 19, scope: !2368)
!2371 = !DILocation(line: 227, column: 10, scope: !2368)
!2372 = !DILocation(line: 227, column: 3, scope: !2368)
!2373 = !DILocalVariable(name: "head", scope: !2368, file: !42, line: 230, type: !800)
!2374 = !DILocation(line: 230, column: 6, scope: !2362)
!2375 = !DILocation(line: 231, column: 14, scope: !2368)
!2376 = !DILocation(line: 231, column: 26, scope: !2368)
!2377 = !DILocation(line: 231, column: 41, scope: !2368)
!2378 = !DILocation(line: 235, column: 5, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !42, line: 234, column: 3)
!2380 = distinct !DILexicalBlock(scope: !2368, file: !42, line: 231, column: 68)
!2381 = !DILocation(line: 231, column: 60, scope: !2368)
!2382 = !DILocation(line: 232, column: 22, scope: !2380)
!2383 = !DILocalVariable(name: "value", scope: !2380, file: !42, line: 232, type: !43)
!2384 = !DILocation(line: 232, column: 3, scope: !2368)
!2385 = !DILocation(line: 234, column: 20, scope: !2379)
!2386 = !DILocalVariable(name: "match", scope: !2379, file: !42, line: 234, type: !9)
!2387 = !DILocation(line: 234, column: 6, scope: !2380)
!2388 = !DILocation(line: 234, column: 54, scope: !2379)
!2389 = !DILocation(line: 0, scope: !2368)
!2390 = !DILocation(line: 241, column: 15, scope: !2368)
!2391 = !DILocation(line: 241, column: 24, scope: !2368)
!2392 = !DILocalVariable(name: "newIndent", scope: !2368, file: !42, line: 241, type: !9)
!2393 = !DILocation(line: 241, column: 2, scope: !2362)
!2394 = !DILocation(line: 243, column: 20, scope: !2368)
!2395 = !DILocation(line: 243, column: 33, scope: !2368)
!2396 = !DILocation(line: 244, column: 52, scope: !2368)
!2397 = !DILocation(line: 244, column: 33, scope: !2368)
!2398 = !DILocation(line: 244, column: 4, scope: !2368)
!2399 = !DILocation(line: 244, column: 16, scope: !2368)
!2400 = !DILocation(line: 245, column: 4, scope: !2368)
!2401 = !DILocation(line: 246, column: 10, scope: !2368)
!2402 = !DILocation(line: 246, column: 11, scope: !2368)
!2403 = !DILocation(line: 246, column: 3, scope: !2368)
!2404 = !DILocation(line: 249, column: 20, scope: !2368)
!2405 = !DILocation(line: 251, column: 16, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2368, file: !42, line: 250, column: 19)
!2407 = !DILocalVariable(name: "next", scope: !2406, file: !42, line: 251, type: !800)
!2408 = !DILocation(line: 251, column: 4, scope: !2368)
!2409 = !DILocation(line: 252, column: 5, scope: !2406)
!2410 = !DILocation(line: 252, column: 17, scope: !2406)
!2411 = !DILocation(line: 253, column: 12, scope: !2406)
!2412 = !DILocation(line: 0, scope: !2406)
!2413 = !DILocation(line: 262, column: 33, scope: !2368)
!2414 = !DILocation(line: 254, column: 12, scope: !2406)
!2415 = !DILocation(line: 254, column: 5, scope: !2406)
!2416 = !DILocation(line: 256, column: 22, scope: !2406)
!2417 = !DILocation(line: 256, column: 6, scope: !2406)
!2418 = !DILocation(line: 256, column: 12, scope: !2406)
!2419 = !DILocation(line: 263, column: 3, scope: !2368)
!2420 = !DILocation(line: 266, column: 2, scope: !2368)
!2421 = distinct !DISubprogram(name: "parser.scanMixin..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanMixin", scope: null, file: !42, line: 423, type: !1851, isLocal: false, isDefinition: true, scopeLine: 423, isOptimized: false, unit: !1, retainedNodes: !3)
!2422 = !DILocalVariable(name: "s", arg: 1, scope: !2421, file: !42, line: 423, type: !763)
!2423 = !DILocation(line: 423, column: 1, scope: !2421)
!2424 = !DILocalVariable(name: "$ret61", scope: !2421, file: !42, line: 423, type: !936)
!2425 = !DILocation(line: 423, column: 31, scope: !2421)
!2426 = !DILocation(line: 424, column: 40, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2421, file: !42, line: 424, column: 2)
!2428 = !DILocation(line: 424, column: 11, scope: !2427)
!2429 = !DILocation(line: 424, column: 19, scope: !2427)
!2430 = !DILocalVariable(name: "sm", scope: !2427, file: !42, line: 424, type: !106)
!2431 = !DILocation(line: 424, column: 5, scope: !2421)
!2432 = !DILocation(line: 424, column: 58, scope: !2427)
!2433 = !DILocation(line: 425, column: 19, scope: !2427)
!2434 = !DILocation(line: 429, column: 2, scope: !2421)
!2435 = !DILocation(line: 425, column: 13, scope: !2427)
!2436 = !DILocation(line: 425, column: 4, scope: !2427)
!2437 = !DILocation(line: 426, column: 62, scope: !2427)
!2438 = !DILocation(line: 426, column: 34, scope: !2427)
!2439 = !DILocation(line: 426, column: 29, scope: !2427)
!2440 = !DILocation(line: 426, column: 10, scope: !2427)
!2441 = !DILocation(line: 426, column: 11, scope: !2427)
!2442 = !DILocation(line: 426, column: 3, scope: !2427)
!2443 = distinct !DISubprogram(name: "parser.scanMixinCall..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanMixinCall", scope: null, file: !42, line: 434, type: !1851, isLocal: false, isDefinition: true, scopeLine: 434, isOptimized: false, unit: !1, retainedNodes: !3)
!2444 = !DILocalVariable(name: "s", arg: 1, scope: !2443, file: !42, line: 434, type: !763)
!2445 = !DILocation(line: 434, column: 1, scope: !2443)
!2446 = !DILocalVariable(name: "$ret62", scope: !2443, file: !42, line: 434, type: !936)
!2447 = !DILocation(line: 434, column: 35, scope: !2443)
!2448 = !DILocation(line: 435, column: 44, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2443, file: !42, line: 435, column: 2)
!2450 = !DILocation(line: 435, column: 11, scope: !2449)
!2451 = !DILocation(line: 435, column: 23, scope: !2449)
!2452 = !DILocalVariable(name: "sm", scope: !2449, file: !42, line: 435, type: !106)
!2453 = !DILocation(line: 435, column: 5, scope: !2443)
!2454 = !DILocation(line: 435, column: 62, scope: !2449)
!2455 = !DILocation(line: 436, column: 19, scope: !2449)
!2456 = !DILocation(line: 440, column: 2, scope: !2443)
!2457 = !DILocation(line: 436, column: 13, scope: !2449)
!2458 = !DILocation(line: 436, column: 4, scope: !2449)
!2459 = !DILocation(line: 437, column: 66, scope: !2449)
!2460 = !DILocation(line: 437, column: 38, scope: !2449)
!2461 = !DILocation(line: 437, column: 33, scope: !2449)
!2462 = !DILocation(line: 437, column: 10, scope: !2449)
!2463 = !DILocation(line: 437, column: 11, scope: !2449)
!2464 = !DILocation(line: 437, column: 3, scope: !2449)
!2465 = distinct !DISubprogram(name: "parser.scanTag..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanTag", scope: null, file: !42, line: 412, type: !1851, isLocal: false, isDefinition: true, scopeLine: 412, isOptimized: false, unit: !1, retainedNodes: !3)
!2466 = !DILocalVariable(name: "s", arg: 1, scope: !2465, file: !42, line: 412, type: !763)
!2467 = !DILocation(line: 412, column: 1, scope: !2465)
!2468 = !DILocalVariable(name: "$ret60", scope: !2465, file: !42, line: 412, type: !936)
!2469 = !DILocation(line: 412, column: 29, scope: !2465)
!2470 = !DILocation(line: 413, column: 38, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2465, file: !42, line: 413, column: 2)
!2472 = !DILocation(line: 413, column: 11, scope: !2471)
!2473 = !DILocation(line: 413, column: 17, scope: !2471)
!2474 = !DILocalVariable(name: "sm", scope: !2471, file: !42, line: 413, type: !106)
!2475 = !DILocation(line: 413, column: 5, scope: !2465)
!2476 = !DILocation(line: 413, column: 56, scope: !2471)
!2477 = !DILocation(line: 414, column: 19, scope: !2471)
!2478 = !DILocation(line: 418, column: 2, scope: !2465)
!2479 = !DILocation(line: 414, column: 13, scope: !2471)
!2480 = !DILocation(line: 414, column: 4, scope: !2471)
!2481 = !DILocation(line: 415, column: 27, scope: !2471)
!2482 = !DILocation(line: 415, column: 10, scope: !2471)
!2483 = !DILocation(line: 415, column: 11, scope: !2471)
!2484 = !DILocation(line: 415, column: 3, scope: !2471)
!2485 = distinct !DISubprogram(name: "parser.scanText..1command_line_arguments.scanner", linkageName: "command_line_arguments.scanner.scanText", scope: null, file: !42, line: 445, type: !1851, isLocal: false, isDefinition: true, scopeLine: 445, isOptimized: false, unit: !1, retainedNodes: !3)
!2486 = !DILocalVariable(name: "s", arg: 1, scope: !2485, file: !42, line: 445, type: !763)
!2487 = !DILocation(line: 445, column: 1, scope: !2485)
!2488 = !DILocalVariable(name: "$ret63", scope: !2485, file: !42, line: 445, type: !936)
!2489 = !DILocation(line: 445, column: 30, scope: !2485)
!2490 = !DILocation(line: 446, column: 39, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2485, file: !42, line: 446, column: 2)
!2492 = !DILocation(line: 446, column: 11, scope: !2491)
!2493 = !DILocation(line: 446, column: 18, scope: !2491)
!2494 = !DILocalVariable(name: "sm", scope: !2491, file: !42, line: 446, type: !106)
!2495 = !DILocation(line: 446, column: 5, scope: !2485)
!2496 = !DILocation(line: 446, column: 57, scope: !2491)
!2497 = !DILocation(line: 447, column: 19, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2491, file: !42, line: 446, column: 62)
!2499 = !DILocation(line: 457, column: 2, scope: !2485)
!2500 = !DILocation(line: 447, column: 13, scope: !2498)
!2501 = !DILocation(line: 447, column: 4, scope: !2498)
!2502 = !DILocation(line: 450, column: 8, scope: !2498)
!2503 = !DILocation(line: 450, column: 12, scope: !2498)
!2504 = !DILocation(line: 451, column: 9, scope: !2498)
!2505 = !DILocation(line: 454, column: 33, scope: !2498)
!2506 = !DILocation(line: 454, column: 28, scope: !2498)
!2507 = !DILocation(line: 454, column: 10, scope: !2498)
!2508 = !DILocation(line: 454, column: 11, scope: !2498)
!2509 = !DILocation(line: 454, column: 3, scope: !2498)
!2510 = distinct !DISubprogram(name: "parser.command_line_arguments.scanner..hash", linkageName: "command_line_arguments.command_line_arguments.scanner..hash", scope: null, file: !10, line: 1, type: !209, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!2511 = !DILocalVariable(name: "key", arg: 1, scope: !2510, file: !10, line: 1, type: !32)
!2512 = !DILocation(line: 1, column: 1, scope: !2510)
!2513 = !DILocalVariable(name: "seed", arg: 2, scope: !2510, file: !10, line: 1, type: !36)
!2514 = !DILocalVariable(name: "$ret96", scope: !2510, file: !10, line: 1, type: !36)
!2515 = distinct !DISubprogram(name: "parser.command_line_arguments.scanner..eq", linkageName: "command_line_arguments.command_line_arguments.scanner..eq", scope: null, file: !10, line: 1, type: !217, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!2516 = !DILocalVariable(name: "key1", arg: 1, scope: !2515, file: !10, line: 1, type: !32)
!2517 = !DILocation(line: 1, column: 1, scope: !2515)
!2518 = !DILocalVariable(name: "key2", arg: 2, scope: !2515, file: !10, line: 1, type: !32)
!2519 = !DILocalVariable(name: "$ret97", scope: !2515, file: !10, line: 1, type: !99)
!2520 = distinct !DISubprogram(name: "parser.newParser", scope: null, file: !296, line: 23, type: !2521, isLocal: true, isDefinition: true, scopeLine: 23, isOptimized: false, unit: !1, retainedNodes: !3)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!759, !772}
!2523 = !DILocalVariable(name: "rdr", arg: 1, scope: !2520, file: !296, line: 23, type: !772)
!2524 = !DILocation(line: 23, column: 16, scope: !2520)
!2525 = !DILocalVariable(name: "$ret16", scope: !2520, file: !296, line: 23, type: !759)
!2526 = !DILocation(line: 23, column: 31, scope: !2520)
!2527 = !DILocation(line: 24, column: 7, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2520, file: !296, line: 23, column: 1)
!2529 = !DILocalVariable(name: "p", scope: !2528, file: !296, line: 24, type: !759)
!2530 = !DILocation(line: 24, column: 2, scope: !2520)
!2531 = !DILocalVariable(name: "r", arg: 1, scope: !2532, file: !42, line: 63, type: !772)
!2532 = distinct !DISubprogram(name: "parser.newScanner", scope: null, file: !42, line: 63, type: !2533, isLocal: true, isDefinition: true, scopeLine: 63, isOptimized: false, unit: !1, retainedNodes: !3)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!763, !772}
!2535 = !DILocation(line: 63, column: 17, scope: !2532, inlinedAt: !2536)
!2536 = distinct !DILocation(line: 25, column: 14, scope: !2528)
!2537 = !DILocalVariable(name: "$ret44", scope: !2532, file: !42, line: 63, type: !763)
!2538 = !DILocation(line: 63, column: 30, scope: !2532, inlinedAt: !2536)
!2539 = !DILocation(line: 64, column: 7, scope: !2540, inlinedAt: !2536)
!2540 = distinct !DILexicalBlock(scope: !2532, file: !42, line: 63, column: 1)
!2541 = !DILocalVariable(name: "s", scope: !2540, file: !42, line: 64, type: !763)
!2542 = !DILocation(line: 64, column: 2, scope: !2532, inlinedAt: !2536)
!2543 = !DILocation(line: 65, column: 19, scope: !2540, inlinedAt: !2536)
!2544 = !DILocation(line: 65, column: 3, scope: !2540, inlinedAt: !2536)
!2545 = !DILocation(line: 65, column: 11, scope: !2540, inlinedAt: !2536)
!2546 = !DILocation(line: 66, column: 23, scope: !2540, inlinedAt: !2536)
!2547 = !DILocation(line: 66, column: 3, scope: !2540, inlinedAt: !2536)
!2548 = !DILocation(line: 66, column: 16, scope: !2540, inlinedAt: !2536)
!2549 = !DILocation(line: 67, column: 17, scope: !2540, inlinedAt: !2536)
!2550 = !DILocation(line: 67, column: 3, scope: !2540, inlinedAt: !2536)
!2551 = !DILocation(line: 67, column: 10, scope: !2540, inlinedAt: !2536)
!2552 = !DILocation(line: 68, column: 3, scope: !2540, inlinedAt: !2536)
!2553 = !DILocation(line: 68, column: 10, scope: !2540, inlinedAt: !2536)
!2554 = !DILocation(line: 69, column: 3, scope: !2540, inlinedAt: !2536)
!2555 = !DILocation(line: 69, column: 9, scope: !2540, inlinedAt: !2536)
!2556 = !DILocation(line: 70, column: 3, scope: !2540, inlinedAt: !2536)
!2557 = !DILocation(line: 70, column: 8, scope: !2540, inlinedAt: !2536)
!2558 = !DILocation(line: 25, column: 3, scope: !2528)
!2559 = !DILocation(line: 25, column: 12, scope: !2528)
!2560 = !DILocation(line: 26, column: 18, scope: !2528)
!2561 = !DILocation(line: 26, column: 3, scope: !2528)
!2562 = !DILocation(line: 26, column: 16, scope: !2528)
!2563 = !DILocation(line: 27, column: 2, scope: !2528)
!2564 = distinct !DISubprogram(name: "parser.StringParser", linkageName: "command_line_arguments.StringParser", scope: null, file: !296, line: 30, type: !2565, isLocal: false, isDefinition: true, scopeLine: 30, isOptimized: false, unit: !1, retainedNodes: !3)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!2567, !9}
!2567 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Parser,error}", file: !56, size: 192, align: 8, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 30, baseType: !759, size: 64, align: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !56, line: 30, baseType: !247, size: 128, align: 64, offset: 64)
!2571 = !DILocalVariable(name: "input", arg: 1, scope: !2564, file: !296, line: 30, type: !9)
!2572 = !DILocation(line: 30, column: 19, scope: !2564)
!2573 = !DILocalVariable(name: "$ret17", scope: !2564, file: !296, line: 30, type: !759)
!2574 = !DILocation(line: 30, column: 34, scope: !2564)
!2575 = !DILocation(line: 31, column: 41, scope: !2564)
!2576 = !DILocation(line: 31, column: 25, scope: !2564)
!2577 = !DILocation(line: 31, column: 9, scope: !2564)
!2578 = !DILocation(line: 31, column: 2, scope: !2564)
!2579 = distinct !DISubprogram(name: "parser.ByteParser", linkageName: "command_line_arguments.ByteParser", scope: null, file: !296, line: 34, type: !2580, isLocal: false, isDefinition: true, scopeLine: 34, isOptimized: false, unit: !1, retainedNodes: !3)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!2567, !95}
!2582 = !DILocalVariable(name: "input", arg: 1, scope: !2579, file: !296, line: 34, type: !95)
!2583 = !DILocation(line: 34, column: 17, scope: !2579)
!2584 = !DILocalVariable(name: "$ret19", scope: !2579, file: !296, line: 34, type: !759)
!2585 = !DILocation(line: 34, column: 32, scope: !2579)
!2586 = !DILocation(line: 35, column: 25, scope: !2579)
!2587 = !DILocation(line: 35, column: 9, scope: !2579)
!2588 = !DILocation(line: 35, column: 2, scope: !2579)
!2589 = distinct !DISubprogram(name: "parser.FileParser", linkageName: "command_line_arguments.FileParser", scope: null, file: !296, line: 46, type: !2565, isLocal: false, isDefinition: true, scopeLine: 46, isOptimized: false, unit: !1, retainedNodes: !3)
!2590 = !DILocalVariable(name: "$ret21", scope: !2589, file: !296, line: 46, type: !759)
!2591 = !DILocation(line: 46, column: 35, scope: !2589)
!2592 = !DILocation(line: 47, column: 22, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2589, file: !296, line: 46, column: 1)
!2594 = !DILocalVariable(name: "err", scope: !2593, file: !296, line: 47, type: !247)
!2595 = !DILocation(line: 47, column: 2, scope: !2589)
!2596 = !DILocation(line: 49, column: 9, scope: !2593)
!2597 = !DILocalVariable(name: "$ret22", scope: !2589, file: !296, line: 46, type: !247)
!2598 = !DILocation(line: 46, column: 44, scope: !2589)
!2599 = !DILocation(line: 50, column: 3, scope: !2593)
!2600 = !DILocalVariable(name: "data", scope: !2593, file: !296, line: 47, type: !95)
!2601 = !DILocation(line: 53, column: 28, scope: !2593)
!2602 = !DILocation(line: 53, column: 12, scope: !2593)
!2603 = !DILocalVariable(name: "parser", scope: !2593, file: !296, line: 53, type: !759)
!2604 = !DILocation(line: 53, column: 2, scope: !2589)
!2605 = !DILocation(line: 54, column: 8, scope: !2593)
!2606 = !DILocation(line: 54, column: 18, scope: !2593)
!2607 = !DILocation(line: 55, column: 2, scope: !2593)
!2608 = distinct !DISubprogram(name: "parser.VirtualFileParser", linkageName: "command_line_arguments.VirtualFileParser", scope: null, file: !296, line: 58, type: !2609, isLocal: false, isDefinition: true, scopeLine: 58, isOptimized: false, unit: !1, retainedNodes: !3)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!2567, !9, !819}
!2611 = !DILocalVariable(name: "$ret23", scope: !2608, file: !296, line: 58, type: !759)
!2612 = !DILocation(line: 58, column: 62, scope: !2608)
!2613 = !DILocation(line: 59, column: 17, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2608, file: !296, line: 58, column: 1)
!2615 = !DILocalVariable(name: "file", scope: !2614, file: !296, line: 59, type: !833)
!2616 = !DILocation(line: 59, column: 2, scope: !2608)
!2617 = !DILocalVariable(name: "err", scope: !2614, file: !296, line: 59, type: !247)
!2618 = !DILocation(line: 60, column: 9, scope: !2614)
!2619 = !DILocalVariable(name: "$ret24", scope: !2608, file: !296, line: 58, type: !247)
!2620 = !DILocation(line: 58, column: 71, scope: !2608)
!2621 = !DILocation(line: 61, column: 3, scope: !2614)
!2622 = !DILocation(line: 64, column: 30, scope: !2614)
!2623 = !DILocation(line: 64, column: 22, scope: !2614)
!2624 = !DILocation(line: 65, column: 9, scope: !2614)
!2625 = !DILocation(line: 66, column: 3, scope: !2614)
!2626 = !DILocalVariable(name: "data", scope: !2614, file: !296, line: 64, type: !95)
!2627 = !DILocation(line: 64, column: 2, scope: !2608)
!2628 = !DILocation(line: 69, column: 28, scope: !2614)
!2629 = !DILocation(line: 69, column: 12, scope: !2614)
!2630 = !DILocalVariable(name: "parser", scope: !2614, file: !296, line: 69, type: !759)
!2631 = !DILocation(line: 69, column: 2, scope: !2608)
!2632 = !DILocation(line: 70, column: 8, scope: !2614)
!2633 = !DILocation(line: 70, column: 18, scope: !2614)
!2634 = !DILocation(line: 71, column: 8, scope: !2614)
!2635 = !DILocation(line: 71, column: 12, scope: !2614)
!2636 = !DILocation(line: 72, column: 2, scope: !2614)
!2637 = distinct !DISubprogram(name: "parser.func1", scope: null, file: !296, line: 80, type: !298, isLocal: true, isDefinition: true, scopeLine: 80, isOptimized: false, unit: !1, retainedNodes: !3)
!2638 = !DILocation(line: 80, column: 8, scope: !2637)
!2639 = distinct !DISubprogram(name: "parser.command_line_arguments..thunk0", scope: null, file: !296, line: 80, type: !2640, isLocal: true, isDefinition: true, scopeLine: 80, isOptimized: false, unit: !1, retainedNodes: !3)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!99, !2642}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*__go_descriptor}", file: !56, size: 64, align: 8, elements: !2644)
!2644 = !{!2645}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "fn", file: !56, line: 80, baseType: !1704, size: 64, align: 64)
!2646 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2639, file: !296, line: 80, type: !2642)
!2647 = !DILocation(line: 80, column: 2, scope: !2639)
!2648 = !DILocalVariable(name: "$ret77", scope: !2639, file: !296, line: 80, type: !99)
!2649 = distinct !DISubprogram(name: "parser.r", scope: null, file: !296, line: 80, type: !2650, isLocal: true, isDefinition: true, scopeLine: 80, isOptimized: false, unit: !1, retainedNodes: !3)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{!33, !99}
!2652 = !DILocalVariable(name: "pr.0", arg: 1, scope: !2649, file: !296, line: 80, type: !99)
!2653 = !DILocation(line: 80, column: 8, scope: !2649)
!2654 = !DILocation(line: 81, column: 11, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2649, file: !296, line: 81, column: 3)
!2656 = !DILocalVariable(name: "r", scope: !2655, file: !296, line: 81, type: !804)
!2657 = !DILocation(line: 81, column: 6, scope: !2649)
!2658 = !DILocation(line: 81, column: 24, scope: !2655)
!2659 = !DILocalVariable(name: "ok", scope: !2660, file: !296, line: 82, type: !99)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !296, line: 82, column: 4)
!2661 = distinct !DILexicalBlock(scope: !2655, file: !296, line: 81, column: 31)
!2662 = !DILocation(line: 82, column: 7, scope: !2661)
!2663 = !DILocation(line: 82, column: 7, scope: !2660)
!2664 = !DILocation(line: 82, column: 32, scope: !2660)
!2665 = !DILocation(line: 82, column: 4, scope: !2660)
!2666 = !DILocalVariable(name: "rs", scope: !2660, file: !296, line: 82, type: !9)
!2667 = !DILocation(line: 82, column: 37, scope: !2660)
!2668 = !DILocation(line: 82, column: 59, scope: !2660)
!2669 = !DILocation(line: 83, column: 5, scope: !2660)
!2670 = !DILocation(line: 86, column: 11, scope: !2661)
!2671 = !DILocation(line: 86, column: 12, scope: !2661)
!2672 = !DILocalVariable(name: "pos", scope: !2661, file: !296, line: 86, type: !353)
!2673 = !DILocation(line: 86, column: 4, scope: !2655)
!2674 = !DILocation(line: 88, column: 25, scope: !2661)
!2675 = !DILocation(line: 89, column: 15, scope: !2661)
!2676 = !DILocation(line: 89, column: 5, scope: !2661)
!2677 = !DILocation(line: 91, column: 15, scope: !2661)
!2678 = !DILocation(line: 91, column: 5, scope: !2661)
!2679 = distinct !DISubprogram(name: "parser.func1", scope: null, file: !296, line: 394, type: !298, isLocal: true, isDefinition: true, scopeLine: 394, isOptimized: false, unit: !1, retainedNodes: !3)
!2680 = !DILocation(line: 395, column: 6, scope: !2679)
!2681 = !DILocation(line: 395, column: 9, scope: !2679)
!2682 = !DILocation(line: 395, column: 16, scope: !2679)
!2683 = !DILocation(line: 396, column: 16, scope: !2679)
!2684 = !DILocation(line: 396, column: 4, scope: !2679)
!2685 = !DILocation(line: 396, column: 7, scope: !2679)
!2686 = !DILocation(line: 396, column: 14, scope: !2679)
	.text
	.file	"gomodule"

	.section ".go_export","e",@progbits
	.ascii "v2;\n"
	.ascii "package "
	.ascii "parser"
	.ascii ";\n"
	.ascii "pkgpath "
	.ascii "command-line-arguments"
	.ascii ";\n"
	.ascii "import "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio"
	.ascii " \""
	.ascii "bufio"
	.ascii "\";\n"
	.ascii "import "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes"
	.ascii " \""
	.ascii "bytes"
	.ascii "\";\n"
	.ascii "import "
	.ascii "list"
	.ascii " "
	.ascii "container/list"
	.ascii " \""
	.ascii "container/list"
	.ascii "\";\n"
	.ascii "import "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt"
	.ascii " \""
	.ascii "fmt"
	.ascii "\";\n"
	.ascii "import "
	.ascii "io"
	.ascii " "
	.ascii "io"
	.ascii " \""
	.ascii "io"
	.ascii "\";\n"
	.ascii "import "
	.ascii "ioutil"
	.ascii " "
	.ascii "io/ioutil"
	.ascii " \""
	.ascii "io/ioutil"
	.ascii "\";\n"
	.ascii "import "
	.ascii "http"
	.ascii " "
	.ascii "net/http"
	.ascii " \""
	.ascii "net/http"
	.ascii "\";\n"
	.ascii "import "
	.ascii "filepath"
	.ascii " "
	.ascii "path/filepath"
	.ascii " \""
	.ascii "path/filepath"
	.ascii "\";\n"
	.ascii "import "
	.ascii "regexp"
	.ascii " "
	.ascii "regexp"
	.ascii " \""
	.ascii "regexp"
	.ascii "\";\n"
	.ascii "import "
	.ascii "strings"
	.ascii " "
	.ascii "strings"
	.ascii " \""
	.ascii "strings"
	.ascii "\";\n"
	.ascii "init"
	.ascii " "
	.ascii "parser"
	.ascii " "
	.ascii "command_line_arguments..import"
	.ascii " "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio..import"
	.ascii " "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes..import"
	.ascii " "
	.ascii "flate"
	.ascii " "
	.ascii "compress_flate..import"
	.ascii " "
	.ascii "gzip"
	.ascii " "
	.ascii "compress_gzip..import"
	.ascii " "
	.ascii "context"
	.ascii " "
	.ascii "context..import"
	.ascii " "
	.ascii "crypto"
	.ascii " "
	.ascii "crypto..import"
	.ascii " "
	.ascii "cipher"
	.ascii " "
	.ascii "crypto_cipher..import"
	.ascii " "
	.ascii "des"
	.ascii " "
	.ascii "crypto_des..import"
	.ascii " "
	.ascii "dsa"
	.ascii " "
	.ascii "crypto_dsa..import"
	.ascii " "
	.ascii "ecdsa"
	.ascii " "
	.ascii "crypto_ecdsa..import"
	.ascii " "
	.ascii "elliptic"
	.ascii " "
	.ascii "crypto_elliptic..import"
	.ascii " "
	.ascii "md5"
	.ascii " "
	.ascii "crypto_md5..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "crypto_rand..import"
	.ascii " "
	.ascii "rsa"
	.ascii " "
	.ascii "crypto_rsa..import"
	.ascii " "
	.ascii "sha1"
	.ascii " "
	.ascii "crypto_sha1..import"
	.ascii " "
	.ascii "sha256"
	.ascii " "
	.ascii "crypto_sha256..import"
	.ascii " "
	.ascii "sha512"
	.ascii " "
	.ascii "crypto_sha512..import"
	.ascii " "
	.ascii "tls"
	.ascii " "
	.ascii "crypto_tls..import"
	.ascii " "
	.ascii "x509"
	.ascii " "
	.ascii "crypto_x509..import"
	.ascii " "
	.ascii "pkix"
	.ascii " "
	.ascii "crypto_x509_pkix..import"
	.ascii " "
	.ascii "asn1"
	.ascii " "
	.ascii "encoding_asn1..import"
	.ascii " "
	.ascii "base64"
	.ascii " "
	.ascii "encoding_base64..import"
	.ascii " "
	.ascii "binary"
	.ascii " "
	.ascii "encoding_binary..import"
	.ascii " "
	.ascii "hex"
	.ascii " "
	.ascii "encoding_hex..import"
	.ascii " "
	.ascii "pem"
	.ascii " "
	.ascii "encoding_pem..import"
	.ascii " "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt..import"
	.ascii " "
	.ascii "crc32"
	.ascii " "
	.ascii "hash_crc32..import"
	.ascii " "
	.ascii "poll"
	.ascii " "
	.ascii "internal_poll..import"
	.ascii " "
	.ascii "testlog"
	.ascii " "
	.ascii "internal_testlog..import"
	.ascii " "
	.ascii "io"
	.ascii " "
	.ascii "io..import"
	.ascii " "
	.ascii "ioutil"
	.ascii " "
	.ascii "io_ioutil..import"
	.ascii " "
	.ascii "log"
	.ascii " "
	.ascii "log..import"
	.ascii " "
	.ascii "big"
	.ascii " "
	.ascii "math_big..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "math_rand..import"
	.ascii " "
	.ascii "mime"
	.ascii " "
	.ascii "mime..import"
	.ascii " "
	.ascii "multipart"
	.ascii " "
	.ascii "mime_multipart..import"
	.ascii " "
	.ascii "quotedprintable"
	.ascii " "
	.ascii "mime_quotedprintable..import"
	.ascii " "
	.ascii "net"
	.ascii " "
	.ascii "net..import"
	.ascii " "
	.ascii "http"
	.ascii " "
	.ascii "net_http..import"
	.ascii " "
	.ascii "internal"
	.ascii " "
	.ascii "net_http_internal..import"
	.ascii " "
	.ascii "textproto"
	.ascii " "
	.ascii "net_textproto..import"
	.ascii " "
	.ascii "os"
	.ascii " "
	.ascii "os..import"
	.ascii " "
	.ascii "path"
	.ascii " "
	.ascii "path..import"
	.ascii " "
	.ascii "filepath"
	.ascii " "
	.ascii "path_filepath..import"
	.ascii " "
	.ascii "reflect"
	.ascii " "
	.ascii "reflect..import"
	.ascii " "
	.ascii "regexp"
	.ascii " "
	.ascii "regexp..import"
	.ascii " "
	.ascii "syntax"
	.ascii " "
	.ascii "regexp_syntax..import"
	.ascii " "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime..import"
	.ascii " "
	.ascii "sys"
	.ascii " "
	.ascii "runtime_internal_sys..import"
	.ascii " "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv..import"
	.ascii " "
	.ascii "sync"
	.ascii " "
	.ascii "sync..import"
	.ascii " "
	.ascii "syscall"
	.ascii " "
	.ascii "syscall..import"
	.ascii " "
	.ascii "time"
	.ascii " "
	.ascii "time..import"
	.ascii " "
	.ascii "unicode"
	.ascii " "
	.ascii "unicode..import"
	.ascii " "
	.ascii "chacha20poly1305"
	.ascii " "
	.ascii "vendor_golang_org_x_crypto_chacha20poly1305..import"
	.ascii " "
	.ascii "cryptobyte"
	.ascii " "
	.ascii "vendor_golang_org_x_crypto_cryptobyte..import"
	.ascii " "
	.ascii "hpack"
	.ascii " "
	.ascii "vendor_golang_org_x_net_http2_hpack..import"
	.ascii " "
	.ascii "idna"
	.ascii " "
	.ascii "vendor_golang_org_x_net_idna..import"
	.ascii " "
	.ascii "proxy"
	.ascii " "
	.ascii "vendor_golang_org_x_net_proxy..import"
	.ascii " "
	.ascii "bidirule"
	.ascii " "
	.ascii "vendor_golang_org_x_text_secure_bidirule..import"
	.ascii " "
	.ascii "transform"
	.ascii " "
	.ascii "vendor_golang_org_x_text_transform..import"
	.ascii " "
	.ascii "bidi"
	.ascii " "
	.ascii "vendor_golang_org_x_text_unicode_bidi..import"
	.ascii " "
	.ascii "norm"
	.ascii " "
	.ascii "vendor_golang_org_x_text_unicode_norm..import"
	.ascii ";\n"
	.ascii "init_graph"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "41"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "43"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "44"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "46"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "47"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "55"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "56"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "57"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "58"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "59"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "60"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "61"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "62"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "42"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "45"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "48"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "49"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "50"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "51"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "52"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "53"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "54"
	.ascii " "
	.ascii "63"
	.ascii " "
	.ascii "61"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 1 "
	.ascii "\"Assignment\" "
	.ascii "<type 2 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3 "
	.ascii "\"SourcePosition\" "
	.ascii "<type 4 "
	.ascii "struct { "
	.ascii "LineNum"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "ColNum"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "TokenLength"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 5 "
	.ascii "*"
	.ascii "<type 3>"
	.ascii ">"
	.ascii ") "
	.ascii "Pos"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "X"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Expression"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 6 "
	.ascii "\"Attribute\" "
	.ascii "<type 7 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "IsRaw"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Condition"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 8 "
	.ascii "\"Block\" "
	.ascii "<type 9 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Children"
	.ascii " "
	.ascii "<type 10 "
	.ascii "["
	.ascii "] "
	.ascii "<type 11 "
	.ascii "\"Node\" "
	.ascii "<type 12 "
	.ascii "interface { "
	.ascii "Pos"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 13 "
	.ascii "*"
	.ascii "<type 8>"
	.ascii ">"
	.ascii ") "
	.ascii ".command-line-arguments.push"
	.ascii " ("
	.ascii "node"
	.ascii " "
	.ascii "<type 11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 13>"
	.ascii ") "
	.ascii ".command-line-arguments.pushFront"
	.ascii " ("
	.ascii "node"
	.ascii " "
	.ascii "<type 11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 13>"
	.ascii ") "
	.ascii "CanInline"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "ByteParser"
	.ascii " ("
	.ascii "input"
	.ascii " "
	.ascii "<type 14 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 15 "
	.ascii "*"
	.ascii "<type 16 "
	.ascii "\"Parser\" "
	.ascii "<type 17 "
	.ascii "struct { "
	.ascii ".command-line-arguments.scanner"
	.ascii " "
	.ascii "<type 18 "
	.ascii "*"
	.ascii "<type 19 "
	.ascii "\".command-line-arguments.scanner\" "
	.ascii "<type 20 "
	.ascii "struct { "
	.ascii ".command-line-arguments.reader"
	.ascii " "
	.ascii "<type 21 "
	.ascii "*"
	.ascii "<type 22 "
	.ascii "\"bufio.Reader\" "
	.ascii "<type 23 "
	.ascii "struct { "
	.ascii ".bufio.buf"
	.ascii " "
	.ascii "<type 24 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bufio.rd"
	.ascii " "
	.ascii "<type 25 "
	.ascii "\"io.Reader\" "
	.ascii "<type 26 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 27 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".bufio.r"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.w"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".bufio.lastByte"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.lastRuneSize"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 28 "
	.ascii "*"
	.ascii "<type 22>"
	.ascii ">"
	.ascii ") "
	.ascii "Buffered"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "ReadString"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x82a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "ReadLine"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 29 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "isPrefix"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x80a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "ReadRune"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "Peek"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 30 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "Discard"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "discarded"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "ReadBytes"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 31 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "UnreadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii ".bufio.readErr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii ".bufio.reset"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<type 32 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 25>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 25>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "UnreadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "ReadSlice"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 33 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 34 "
	.ascii "\"io.Writer\" "
	.ascii "<type 35 "
	.ascii "interface { "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 36 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 37 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii ".bufio.writeBuf"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 34>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 28>"
	.ascii ") "
	.ascii ".bufio.fill"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.indentStack"
	.ascii " "
	.ascii "<type 38 "
	.ascii "*"
	.ascii "<type 39 "
	.ascii "\"container/list.List\" "
	.ascii "<type 40 "
	.ascii "struct { "
	.ascii ".container/list.root"
	.ascii " "
	.ascii "<type 41 "
	.ascii "\"container/list.Element\" "
	.ascii "<type 42 "
	.ascii "struct { "
	.ascii ".container/list.next"
	.ascii " "
	.ascii "<type 43 "
	.ascii "*"
	.ascii "<type 41>"
	.ascii ">"
	.ascii "; "
	.ascii ".container/list.prev"
	.ascii " "
	.ascii "<type 43>"
	.ascii "; "
	.ascii ".container/list.list"
	.ascii " "
	.ascii "<type 44 "
	.ascii "*"
	.ascii "<type 39>"
	.ascii ">"
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type 45 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 43>"
	.ascii ") "
	.ascii "Next"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 43>"
	.ascii ") "
	.ascii "Prev"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".container/list.len"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "Remove"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii " "
	.ascii "<type 46 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii ".container/list.remove"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii ".container/list.insertValue"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type 47 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "at"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii ".container/list.lazyInit"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "Init"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 44>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "PushBackList"
	.ascii " ("
	.ascii "other"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "MoveToBack"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "MoveBefore"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 43>"
	.ascii ", "
	.ascii "mark"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "InsertAfter"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type 48 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "mark"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "MoveAfter"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 43>"
	.ascii ", "
	.ascii "mark"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "InsertBefore"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type 49 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "mark"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "MoveToFront"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "PushBack"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type 50 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii ".container/list.insert"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 43>"
	.ascii ", "
	.ascii "at"
	.ascii " "
	.ascii "<type 43>"
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "PushFront"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type 51 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "Front"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "Back"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 44>"
	.ascii ") "
	.ascii "PushFrontList"
	.ascii " ("
	.ascii "other"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 44>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.stash"
	.ascii " "
	.ascii "<type 38>"
	.ascii "; "
	.ascii ".command-line-arguments.state"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".command-line-arguments.buffer"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.line"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".command-line-arguments.col"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".command-line-arguments.lastTokenLine"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".command-line-arguments.lastTokenCol"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".command-line-arguments.lastTokenSize"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".command-line-arguments.readRaw"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 52 "
	.ascii "*"
	.ascii "<type 19>"
	.ascii ">"
	.ascii ") "
	.ascii "Pos"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x4a>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii "Next"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53 "
	.ascii "*"
	.ascii "<type 54 "
	.ascii "\".command-line-arguments.token\" "
	.ascii "<type 55 "
	.ascii "struct { "
	.ascii "Kind"
	.ascii " "
	.ascii "<type -21>"
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Data"
	.ascii " "
	.ascii "<type 56 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii "NextRaw"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanIndent"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanDoctype"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanCondition"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanEach"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanAssignment"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanComment"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanId"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanClassName"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanAttribute"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanImport"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanExtends"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanBlock"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanTag"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanMixin"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanMixinCall"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.scanText"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 53>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.consume"
	.ascii " ("
	.ascii "runes"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ") "
	.ascii ".command-line-arguments.ensureBuffer"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.fs"
	.ascii " "
	.ascii "<type 57 "
	.ascii "\"net/http.FileSystem\" "
	.ascii "<type 58 "
	.ascii "interface { "
	.ascii "Open"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 59 "
	.ascii "\"net/http.File\" "
	.ascii "<type 60 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 61 "
	.ascii "\"io.Closer\" "
	.ascii "<type 62 "
	.ascii "interface { "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 25>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 63 "
	.ascii "\"io.Seeker\" "
	.ascii "<type 64 "
	.ascii "interface { "
	.ascii "Seek"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "whence"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Readdir"
	.ascii " ("
	.ascii "count"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 65 "
	.ascii "["
	.ascii "] "
	.ascii "<type 66 "
	.ascii "\"os.FileInfo\" "
	.ascii "\""
	.ascii "os"
	.ascii "\" "
	.ascii "<type 67 "
	.ascii "interface { "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Mode"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 68 "
	.ascii "\"os.FileMode\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "IsRegular"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 68>"
	.ascii ") "
	.ascii "Perm"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 68>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "ModTime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 69 "
	.ascii "\"time.Time\" "
	.ascii "\""
	.ascii "time"
	.ascii "\" "
	.ascii "<type 70 "
	.ascii "struct { "
	.ascii ".time.wall"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".time.ext"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.loc"
	.ascii " "
	.ascii "<type 71 "
	.ascii "*"
	.ascii "<type 72 "
	.ascii "\"time.Location\" "
	.ascii "<type 73 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.zone"
	.ascii " "
	.ascii "<type 74 "
	.ascii "["
	.ascii "] "
	.ascii "<type 75 "
	.ascii "\".time.zone\" "
	.ascii "<type 76 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".time.isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.tx"
	.ascii " "
	.ascii "<type 77 "
	.ascii "["
	.ascii "] "
	.ascii "<type 78 "
	.ascii "\".time.zoneTrans\" "
	.ascii "<type 79 "
	.ascii "struct { "
	.ascii ".time.when"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.index"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".time.isstd"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".time.isutc"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.cacheStart"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheEnd"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheZone"
	.ascii " "
	.ascii "<type 80 "
	.ascii "*"
	.ascii "<type 75>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 81 "
	.ascii "*"
	.ascii "<type 72>"
	.ascii ">"
	.ascii ") "
	.ascii ".time.firstZoneUsed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 81>"
	.ascii ") "
	.ascii ".time.lookupName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "unix"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 81>"
	.ascii ") "
	.ascii ".time.lookup"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "start"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "end"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 81>"
	.ascii ") "
	.ascii ".time.get"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 81>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 81>"
	.ascii ") "
	.ascii ".time.lookupFirstZone"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 81>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "YearDay"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "UnixNano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "MarshalBinary"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 82 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Nanosecond"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Minute"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83 "
	.ascii "*"
	.ascii "<type 69>"
	.ascii ">"
	.ascii ") "
	.ascii "GobDecode"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 84 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii ".time.locabs"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "abs"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.stripMono"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii ".time.abs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Zone"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 71>"
	.ascii ")"
	.ascii " "
	.ascii "<type 69>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.setMono"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 85 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Weekday"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 86 "
	.ascii "\"time.Weekday\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 86>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Location"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 71>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "UnmarshalJSON"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 87 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.sec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Sub"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88 "
	.ascii "\"time.Duration\" "
	.ascii "<type -4>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Nanoseconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Minutes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Seconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Hours"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Day"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii " "
	.ascii "<type 69>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "UnmarshalBinary"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 89 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Local"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 69>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "After"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.addSec"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.setLoc"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 71>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "GobEncode"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 90 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Before"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.unixSec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii " "
	.ascii "<type 69>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Date"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 91 "
	.ascii "\"time.Month\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 91>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 92 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 93 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "IsZero"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Format"
	.ascii " ("
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii " "
	.ascii "<type 69>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Year"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "UTC"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 69>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii ".time.date"
	.ascii " ("
	.ascii "full"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 91>"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "yday"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "ISOWeek"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "week"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "AppendFormat"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 94 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 95 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.nsec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "AddDate"
	.ascii " ("
	.ascii "years"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "months"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "days"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 69>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Month"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 91>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Second"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".time.mono"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Clock"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "hour"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "min"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "sec"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 69>"
	.ascii ") "
	.ascii "Hour"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Sys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 96 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Stat"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 66>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.currenttoken"
	.ascii " "
	.ascii "<type 97 "
	.ascii "*"
	.ascii "<type 54>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.namedBlocks"
	.ascii " "
	.ascii "<type 98 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 99 "
	.ascii "*"
	.ascii "<type 100 "
	.ascii "\"NamedBlock\" "
	.ascii "<type 101 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 8>"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Modifier"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.parent"
	.ascii " "
	.ascii "<type 102 "
	.ascii "*"
	.ascii "<type 16>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.result"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 103 "
	.ascii "*"
	.ascii "<type 16>"
	.ascii ">"
	.ascii ") "
	.ascii "SetFilename"
	.ascii " ("
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii "SetVirtualFilesystem"
	.ascii " ("
	.ascii "fs"
	.ascii " "
	.ascii "<type 57>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii "Parse"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.pos"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseRelativeFile"
	.ascii " ("
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 103>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parse"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.expect"
	.ascii " ("
	.ascii "typ"
	.ascii " "
	.ascii "<type -21>"
	.ascii ")"
	.ascii " "
	.ascii "<type 104 "
	.ascii "*"
	.ascii "<type 54>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.advance"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseExtends"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseBlock"
	.ascii " ("
	.ascii "parent"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseIf"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 105 "
	.ascii "*"
	.ascii "<type 106 "
	.ascii "\"Condition\" "
	.ascii "<type 107 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Positive"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii "Negative"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii "Expression"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseEach"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 108 "
	.ascii "*"
	.ascii "<type 109 "
	.ascii "\"Each\" "
	.ascii "<type 110 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "X"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Y"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Expression"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Block"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseImport"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseNamedBlock"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseDoctype"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 111 "
	.ascii "*"
	.ascii "<type 112 "
	.ascii "\"Doctype\" "
	.ascii "<type 113 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 114 "
	.ascii "*"
	.ascii "<type 112>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseComment"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 115 "
	.ascii "*"
	.ascii "<type 116 "
	.ascii "\"Comment\" "
	.ascii "<type 117 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Block"
	.ascii " "
	.ascii "<type 118 "
	.ascii "*"
	.ascii "<type 8>"
	.ascii ">"
	.ascii "; "
	.ascii "Silent"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseText"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 119 "
	.ascii "*"
	.ascii "<type 120 "
	.ascii "\"Text\" "
	.ascii "<type 121 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Value"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Raw"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseAssignment"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 122 "
	.ascii "*"
	.ascii "<type 1>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseTag"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 123 "
	.ascii "*"
	.ascii "<type 124 "
	.ascii "\"Tag\" "
	.ascii "<type 125 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Block"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "IsInterpolated"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Attributes"
	.ascii " "
	.ascii "<type 126 "
	.ascii "["
	.ascii "] "
	.ascii "<type 6>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127 "
	.ascii "*"
	.ascii "<type 124>"
	.ascii ">"
	.ascii ") "
	.ascii "IsSelfClosing"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 127>"
	.ascii ") "
	.ascii "IsRawText"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseMixin"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 128 "
	.ascii "*"
	.ascii "<type 129 "
	.ascii "\"Mixin\" "
	.ascii "<type 130 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Block"
	.ascii " "
	.ascii "<type 13>"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Args"
	.ascii " "
	.ascii "<type 131 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103>"
	.ascii ") "
	.ascii ".command-line-arguments.parseMixinCall"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 132 "
	.ascii "*"
	.ascii "<type 133 "
	.ascii "\"MixinCall\" "
	.ascii "<type 134 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Args"
	.ascii " "
	.ascii "<type 135 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 116>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 106>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 112>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 109>"
	.ascii ";\n"
	.ascii "func "
	.ascii "FileParser"
	.ascii " ("
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 15>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 129>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 133>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 100>"
	.ascii ";\n"
	.ascii "const "
	.ascii "NamedBlockAppend"
	.ascii " "
	.ascii "= "
	.ascii "1"
	.ascii " "
	.ascii ";\n"
	.ascii "const "
	.ascii "NamedBlockDefault"
	.ascii " "
	.ascii "= "
	.ascii "0"
	.ascii " "
	.ascii ";\n"
	.ascii "const "
	.ascii "NamedBlockPrepend"
	.ascii " "
	.ascii "= "
	.ascii "2"
	.ascii " "
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 11>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 16>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii "func "
	.ascii "StringParser"
	.ascii " ("
	.ascii "input"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 15>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 124>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 120>"
	.ascii ";\n"
	.ascii "func "
	.ascii "VirtualFileParser"
	.ascii " ("
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "fs"
	.ascii " "
	.ascii "<type 57>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 15>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "checksum 2162283A77D9A33CF061D7B2B9FFE9B5DBA07B4B;\n"
	.text


	.file	1 "<built-in>"
	.file	2 "./nodes.go"
	.file	3 "<stdin>"
	.file	4 "./scanner.go"
	.file	5 "./parser.go"
	.section	.text.command_line_arguments..import,"ax",@progbits
	.globl	command_line_arguments..import
	.p2align	4, 0x90
	.type	command_line_arguments..import,@function
command_line_arguments..import:
.Lfunc_begin0:
	.loc	2 1 0
	.cfi_startproc
	leaq	-296(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB0_2
	movq	%r10, %rax
	movabsq	$296, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB0_2:
.Ltmp0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$288, %rsp
	.cfi_def_cfa_offset 304
	.cfi_offset %rbx, -16
	.loc	1 1 1 prologue_end
	movl	$go..C0, %edi
	callq	runtime.registerGCRoots
	movq	%rsp, %rbx
	movl	$.Lconst.27, %esi
	movl	$288, %edx
	movq	%rbx, %rdi
	callq	memcpy
	.loc	2 21 16
	movl	$type..map.6string.7string, %edi
	movl	$9, %esi
	movl	$32, %edx
	movl	$16, %ecx
	movq	%rbx, %r8
	callq	__go_construct_map
	.loc	2 21 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_39
	movl	$command_line_arguments.doctypes, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_4
.LBB0_39:
	movq	%rax, command_line_arguments.doctypes(%rip)
.LBB0_4:
	.loc	4 223 24 is_stmt 1
	movl	$.Lconst.371, %edi
	movl	$6, %esi
	callq	regexp.MustCompile
	.loc	4 223 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_40
	movl	$command_line_arguments.rgxIndent, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_6
.LBB0_40:
	movq	%rax, command_line_arguments.rgxIndent(%rip)
.LBB0_6:
	.loc	4 269 25 is_stmt 1
	movl	$.Lconst.376, %edi
	movl	$21, %esi
	callq	regexp.MustCompile
	.loc	4 269 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_41
	movl	$command_line_arguments.rgxDoctype, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_8
.LBB0_41:
	movq	%rax, command_line_arguments.rgxDoctype(%rip)
.LBB0_8:
	.loc	4 284 20 is_stmt 1
	movl	$.Lconst.380, %edi
	movl	$11, %esi
	callq	regexp.MustCompile
	.loc	4 284 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_42
	movl	$command_line_arguments.rgxIf, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_10
.LBB0_42:
	movq	%rax, command_line_arguments.rgxIf(%rip)
.LBB0_10:
	.loc	4 285 22 is_stmt 1
	movl	$.Lconst.382, %edi
	movl	$8, %esi
	callq	regexp.MustCompile
	.loc	4 285 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_43
	movl	$command_line_arguments.rgxElse, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_12
.LBB0_43:
	movq	%rax, command_line_arguments.rgxElse(%rip)
.LBB0_12:
	.loc	4 301 22 is_stmt 1
	movl	$.Lconst.385, %edi
	movl	$63, %esi
	callq	regexp.MustCompile
	.loc	4 301 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_44
	movl	$command_line_arguments.rgxEach, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_14
.LBB0_44:
	movq	%rax, command_line_arguments.rgxEach(%rip)
.LBB0_14:
	.loc	4 312 28 is_stmt 1
	movl	$.Lconst.387, %edi
	movl	$29, %esi
	callq	regexp.MustCompile
	.loc	4 312 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_45
	movl	$command_line_arguments.rgxAssignment, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_16
.LBB0_45:
	movq	%rax, command_line_arguments.rgxAssignment(%rip)
.LBB0_16:
	.loc	4 323 25 is_stmt 1
	movl	$.Lconst.389, %edi
	movl	$17, %esi
	callq	regexp.MustCompile
	.loc	4 323 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_46
	movl	$command_line_arguments.rgxComment, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_18
.LBB0_46:
	movq	%rax, command_line_arguments.rgxComment(%rip)
.LBB0_18:
	.loc	4 339 20 is_stmt 1
	movl	$.Lconst.393, %edi
	movl	$28, %esi
	callq	regexp.MustCompile
	.loc	4 339 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_47
	movl	$command_line_arguments.rgxId, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_20
.LBB0_47:
	movq	%rax, command_line_arguments.rgxId(%rip)
.LBB0_20:
	.loc	4 350 27 is_stmt 1
	movl	$.Lconst.395, %edi
	movl	$29, %esi
	callq	regexp.MustCompile
	.loc	4 350 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_48
	movl	$command_line_arguments.rgxClassName, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_22
.LBB0_48:
	movq	%rax, command_line_arguments.rgxClassName(%rip)
.LBB0_22:
	.loc	4 361 27 is_stmt 1
	movl	$.Lconst.397, %edi
	movl	$73, %esi
	callq	regexp.MustCompile
	.loc	4 361 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_49
	movl	$command_line_arguments.rgxAttribute, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_24
.LBB0_49:
	movq	%rax, command_line_arguments.rgxAttribute(%rip)
.LBB0_24:
	.loc	4 377 24 is_stmt 1
	movl	$.Lconst.402, %edi
	movl	$33, %esi
	callq	regexp.MustCompile
	.loc	4 377 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_50
	movl	$command_line_arguments.rgxImport, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_26
.LBB0_50:
	movq	%rax, command_line_arguments.rgxImport(%rip)
.LBB0_26:
	.loc	4 388 25 is_stmt 1
	movl	$.Lconst.404, %edi
	movl	$34, %esi
	callq	regexp.MustCompile
	.loc	4 388 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_51
	movl	$command_line_arguments.rgxExtends, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_28
.LBB0_51:
	movq	%rax, command_line_arguments.rgxExtends(%rip)
.LBB0_28:
	.loc	4 399 23 is_stmt 1
	movl	$.Lconst.406, %edi
	movl	$56, %esi
	callq	regexp.MustCompile
	.loc	4 399 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_52
	movl	$command_line_arguments.rgxBlock, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_30
.LBB0_52:
	movq	%rax, command_line_arguments.rgxBlock(%rip)
.LBB0_30:
	.loc	4 410 21 is_stmt 1
	movl	$.Lconst.408, %edi
	movl	$12, %esi
	callq	regexp.MustCompile
	.loc	4 410 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_53
	movl	$command_line_arguments.rgxTag, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_32
.LBB0_53:
	movq	%rax, command_line_arguments.rgxTag(%rip)
.LBB0_32:
	.loc	4 421 23 is_stmt 1
	movl	$.Lconst.410, %edi
	movl	$47, %esi
	callq	regexp.MustCompile
	.loc	4 421 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_54
	movl	$command_line_arguments.rgxMixin, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_34
.LBB0_54:
	movq	%rax, command_line_arguments.rgxMixin(%rip)
.LBB0_34:
	.loc	4 432 27 is_stmt 1
	movl	$.Lconst.412, %edi
	movl	$38, %esi
	callq	regexp.MustCompile
	.loc	4 432 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_55
	movl	$command_line_arguments.rgxMixinCall, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_36
.LBB0_55:
	movq	%rax, command_line_arguments.rgxMixinCall(%rip)
.LBB0_36:
	.loc	4 443 22 is_stmt 1
	movl	$.Lconst.414, %edi
	movl	$13, %esi
	callq	regexp.MustCompile
	.loc	4 443 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_56
	movl	$command_line_arguments.rgxText, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_38
.LBB0_56:
	movq	%rax, command_line_arguments.rgxText(%rip)
.Ltmp1:
.LBB0_38:
	.loc	4 0 5
	addq	$288, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end0:
	.size	command_line_arguments..import, .Lfunc_end0-command_line_arguments..import
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.SourcePosition..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.SourcePosition..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.SourcePosition..hash,@function
command_line_arguments.command_line_arguments.SourcePosition..hash:
.Lfunc_begin1:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB1_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB1_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp2:
	.loc	1 1 1 prologue_end
	callq	runtime.memhash64
	leaq	8(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	16(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	addq	$24, %rbx
.Ltmp3:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp4:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp5:
.Lfunc_end1:
	.size	command_line_arguments.command_line_arguments.SourcePosition..hash, .Lfunc_end1-command_line_arguments.command_line_arguments.SourcePosition..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.SourcePosition..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.SourcePosition..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.SourcePosition..eq,@function
command_line_arguments.command_line_arguments.SourcePosition..eq:
.Lfunc_begin2:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB2_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB2_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp6:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB2_8
.Ltmp7:
	testq	%rsi, %rsi
	je	.LBB2_8
.Ltmp8:
	movq	(%rdi), %rax
	cmpq	(%rsi), %rax
	jne	.LBB2_9
.Ltmp9:
	movq	8(%rdi), %rax
	cmpq	8(%rsi), %rax
	jne	.LBB2_9
.Ltmp10:
	movq	16(%rdi), %rax
	cmpq	16(%rsi), %rax
	jne	.LBB2_9
.Ltmp11:
	movq	24(%rdi), %rax
	movq	32(%rdi), %r8
	movq	24(%rsi), %rdx
	movq	32(%rsi), %rcx
	movq	%rax, %rdi
.Ltmp12:
	movq	%r8, %rsi
.Ltmp13:
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB2_9:
	.cfi_def_cfa_offset 16
.Ltmp14:
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp15:
.LBB2_8:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
.Ltmp16:
	callq	__go_runtime_error
.Ltmp17:
.Lfunc_end2:
	.size	command_line_arguments.command_line_arguments.SourcePosition..eq, .Lfunc_end2-command_line_arguments.command_line_arguments.SourcePosition..eq
	.cfi_endproc

	.section	.text.command_line_arguments.SourcePosition.Pos,"ax",@progbits
	.globl	command_line_arguments.SourcePosition.Pos
	.p2align	4, 0x90
	.type	command_line_arguments.SourcePosition.Pos,@function
command_line_arguments.SourcePosition.Pos:
.Lfunc_begin3:
	.loc	2 44 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB3_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB3_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp18:
	.loc	2 45 9 prologue_end
	testq	%rsi, %rsi
	je	.LBB3_4
.Ltmp19:
	.loc	2 45 2 is_stmt 0
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp20:
.LBB3_4:
	.cfi_def_cfa_offset 16
	.loc	2 45 9
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp21:
.Lfunc_end3:
	.size	command_line_arguments.SourcePosition.Pos, .Lfunc_end3-command_line_arguments.SourcePosition.Pos
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Doctype..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Doctype..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Doctype..hash,@function
command_line_arguments.command_line_arguments.Doctype..hash:
.Lfunc_begin4:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB4_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB4_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp22:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.SourcePosition..hash
	addq	$40, %rbx
.Ltmp23:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp24:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp25:
.Lfunc_end4:
	.size	command_line_arguments.command_line_arguments.Doctype..hash, .Lfunc_end4-command_line_arguments.command_line_arguments.Doctype..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Doctype..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Doctype..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Doctype..eq,@function
command_line_arguments.command_line_arguments.Doctype..eq:
.Lfunc_begin5:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB5_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB5_2:
.Ltmp26:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp27:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB5_11
.Ltmp28:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp29:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB5_11
.Ltmp30:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp31:
	.loc	1 1 1
	movq	32(%rdi), %rsi
	movq	24(%rdi), %rdi
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	(%rbx), %r15
	movq	8(%rbx), %r13
	movq	8(%r14), %rbp
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	movq	(%r14), %r12
	callq	runtime.eqstring
	cmpq	%r12, %r15
	jne	.LBB5_8
.Ltmp32:
	.loc	1 0 1
	cmpq	%rbp, %r13
	jne	.LBB5_8
.Ltmp33:
	movq	8(%rsp), %rcx
	cmpq	%rcx, 16(%rsp)
	jne	.LBB5_8
.Ltmp34:
	cmpb	$1, %al
	jne	.LBB5_8
.Ltmp35:
	.loc	1 1 1
	movq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	movq	40(%r14), %rdx
	movq	48(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	jmp	.LBB5_9
.Ltmp36:
.LBB5_8:
	xorl	%eax, %eax
.Ltmp37:
.LBB5_9:
	.loc	1 0 1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp38:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp39:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB5_11:
	.cfi_def_cfa_offset 80
.Ltmp40:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp41:
	callq	__go_runtime_error
.Ltmp42:
.Lfunc_end5:
	.size	command_line_arguments.command_line_arguments.Doctype..eq, .Lfunc_end5-command_line_arguments.command_line_arguments.Doctype..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Doctype.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Doctype.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Doctype.Pos..stub,@function
command_line_arguments.Doctype.Pos..stub:
.Lfunc_begin6:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB6_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB6_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp43:
	.loc	2 48 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB6_4
.Ltmp44:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp45:
.LBB6_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp46:
.Lfunc_end6:
	.size	command_line_arguments.Doctype.Pos..stub, .Lfunc_end6-command_line_arguments.Doctype.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Doctype.String,"ax",@progbits
	.globl	command_line_arguments.Doctype.String
	.p2align	4, 0x90
	.type	command_line_arguments.Doctype.String,@function
command_line_arguments.Doctype.String:
.Lfunc_begin7:
	.loc	2 59 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB7_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB7_2:
.Ltmp47:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$112, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -16
	.loc	2 60 26 prologue_end
	testq	%rdi, %rdi
	je	.LBB7_7
.Ltmp48:
	.loc	2 0 26 is_stmt 0
	movq	%rdi, %rbx
.Ltmp49:
	movups	40(%rdi), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	2 60 16
	movq	command_line_arguments.doctypes(%rip), %rsi
	leaq	48(%rsp), %rdx
	.loc	2 60 24
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	movq	8(%rax), %rdx
.Ltmp50:
	.loc	2 60 48
	testq	%rdx, %rdx
	je	.LBB7_6
.Ltmp51:
	.loc	2 0 48
	movq	(%rax), %rax
.Ltmp52:
	jmp	.LBB7_5
.Ltmp53:
.LBB7_6:
	addq	$40, %rbx
.Ltmp54:
	.loc	2 64 9 is_stmt 1
	movups	.Lconst.87(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	.Lconst.89(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	80(%rsp), %xmm1
	movaps	96(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
.Ltmp55:
.LBB7_5:
	.loc	2 0 9 is_stmt 0
	addq	$112, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp56:
.LBB7_7:
	.cfi_def_cfa_offset 128
	.loc	2 60 26 is_stmt 1
	movl	$6, %edi
.Ltmp57:
	callq	__go_runtime_error
.Ltmp58:
.Lfunc_end7:
	.size	command_line_arguments.Doctype.String, .Lfunc_end7-command_line_arguments.Doctype.String
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Comment..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Comment..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Comment..hash,@function
command_line_arguments.command_line_arguments.Comment..hash:
.Lfunc_begin8:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB8_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB8_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp59:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.SourcePosition..hash
	leaq	40(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	56(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	addq	$64, %rbx
.Ltmp60:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
.Ltmp61:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp62:
.Lfunc_end8:
	.size	command_line_arguments.command_line_arguments.Comment..hash, .Lfunc_end8-command_line_arguments.command_line_arguments.Comment..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Comment..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Comment..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Comment..eq,@function
command_line_arguments.command_line_arguments.Comment..eq:
.Lfunc_begin9:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB9_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB9_2:
.Ltmp63:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp64:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB9_13
.Ltmp65:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp66:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB9_13
.Ltmp67:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp68:
	.loc	1 1 1
	movq	32(%rdi), %rsi
	movq	24(%rdi), %rdi
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	(%rbx), %r15
	movq	8(%rbx), %r13
	movq	8(%r14), %rbp
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	movq	(%r14), %r12
	callq	runtime.eqstring
	cmpq	%r12, %r15
	jne	.LBB9_8
.Ltmp69:
	.loc	1 0 1
	cmpq	%rbp, %r13
	jne	.LBB9_8
.Ltmp70:
	movq	8(%rsp), %rcx
	cmpq	%rcx, 16(%rsp)
	jne	.LBB9_8
.Ltmp71:
	cmpb	$1, %al
	jne	.LBB9_8
.Ltmp72:
	.loc	1 1 1
	movq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	movq	40(%r14), %rdx
	movq	48(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB9_8
.Ltmp73:
	movq	56(%rbx), %rax
	cmpq	56(%r14), %rax
	je	.LBB9_12
.Ltmp74:
.LBB9_8:
	xorl	%eax, %eax
.Ltmp75:
.LBB9_9:
	.loc	1 0 1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp76:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp77:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB9_12:
	.cfi_def_cfa_offset 80
.Ltmp78:
	.loc	1 1 1
	movb	64(%rbx), %al
	cmpb	64(%r14), %al
	sete	%al
	jmp	.LBB9_9
.Ltmp79:
.LBB9_13:
	movl	$6, %edi
.Ltmp80:
	callq	__go_runtime_error
.Ltmp81:
.Lfunc_end9:
	.size	command_line_arguments.command_line_arguments.Comment..eq, .Lfunc_end9-command_line_arguments.command_line_arguments.Comment..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Comment.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Comment.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Comment.Pos..stub,@function
command_line_arguments.Comment.Pos..stub:
.Lfunc_begin10:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB10_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB10_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp82:
	.loc	2 67 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB10_4
.Ltmp83:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp84:
.LBB10_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp85:
.Lfunc_end10:
	.size	command_line_arguments.Comment.Pos..stub, .Lfunc_end10-command_line_arguments.Comment.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Block.CanInline,"ax",@progbits
	.globl	command_line_arguments.Block.CanInline
	.p2align	4, 0x90
	.type	command_line_arguments.Block.CanInline,@function
command_line_arguments.Block.CanInline:
.Lfunc_begin11:
	.loc	2 114 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB11_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB11_2:
.Ltmp86:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp87:
	.loc	2 115 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB11_13
.Ltmp88:
	movq	48(%rdi), %r15
	movb	$1, %r14b
	.loc	2 115 21 is_stmt 0
	testq	%r15, %r15
	je	.LBB11_12
.Ltmp89:
	.loc	2 0 21
	jle	.LBB11_12
.Ltmp90:
	movq	40(%rdi), %rbp
.Ltmp91:
	.loc	2 121 2 is_stmt 1
	addq	$8, %rbp
	xorl	%ebx, %ebx
.Ltmp92:
	.p2align	4, 0x90
.LBB11_7:
	movq	-8(%rbp), %rsi
.Ltmp93:
	movq	(%rbp), %rdx
.Ltmp94:
	.loc	2 122 6
	movl	$type...1command_line_arguments.Text, %edi
.Ltmp95:
	callq	runtime.ifaceI2T2P
.Ltmp96:
	.loc	2 122 32 is_stmt 0
	testb	%dl, %dl
	sete	%cl
	je	.LBB11_10
.Ltmp97:
	.loc	2 122 42
	testq	%rax, %rax
	je	.LBB11_13
.Ltmp98:
	movzbl	56(%rax), %ecx
.Ltmp99:
.LBB11_10:
	.loc	2 122 3
	testb	$1, %cl
	jne	.LBB11_11
.Ltmp100:
	.loc	2 121 2 is_stmt 1
	addq	$1, %rbx
	addq	$16, %rbp
	cmpq	%r15, %rbx
	jl	.LBB11_7
	jmp	.LBB11_12
.Ltmp101:
.LBB11_11:
	.loc	2 0 2 is_stmt 0
	xorl	%r14d, %r14d
.LBB11_12:
	.loc	2 116 3 is_stmt 1
	movl	%r14d, %eax
.Ltmp102:
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp103:
.LBB11_13:
	.cfi_def_cfa_offset 48
	.loc	2 0 3 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end11:
	.size	command_line_arguments.Block.CanInline, .Lfunc_end11-command_line_arguments.Block.CanInline
	.cfi_endproc

	.section	.text.command_line_arguments.Block.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Block.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Block.Pos..stub,@function
command_line_arguments.Block.Pos..stub:
.Lfunc_begin12:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB12_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB12_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp104:
	.loc	2 95 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB12_4
.Ltmp105:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp106:
.LBB12_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp107:
.Lfunc_end12:
	.size	command_line_arguments.Block.Pos..stub, .Lfunc_end12-command_line_arguments.Block.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Block.push,"ax",@progbits
	.globl	command_line_arguments.Block.push
	.p2align	4, 0x90
	.type	command_line_arguments.Block.push,@function
command_line_arguments.Block.push:
.Lfunc_begin13:
	.loc	2 106 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB13_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB13_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$136, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, 64(%rsp)
	movq	%rdx, 72(%rsp)
.Ltmp108:
	.loc	2 107 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB13_19
.Ltmp109:
	.loc	2 0 3 is_stmt 0
	movq	%rdi, %r14
.Ltmp110:
	movups	40(%rdi), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	56(%rdi), %rax
	movq	%rax, 48(%rsp)
	.loc	2 107 15
	movq	40(%rsp), %rbx
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB13_8
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	112(%rsp), %rdi
	movl	$command_line_arguments.Node..d, %esi
	callq	runtime.growslice
	movq	112(%rsp), %rsi
	movq	120(%rsp), %rdx
	movq	128(%rsp), %rax
	jmp	.LBB13_5
.LBB13_8:
	cmpq	%rax, %rdx
	jg	.LBB13_20
	.loc	2 0 15
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB13_20
	.loc	2 107 15
	movq	32(%rsp), %rsi
.LBB13_5:
	movq	%rsi, 32(%rsp)
	movq	%rdx, 40(%rsp)
	movq	%rax, 48(%rsp)
	testq	%rbx, %rbx
	js	.LBB13_7
	.loc	2 0 15
	cmpq	%rdx, %rbx
	jge	.LBB13_7
	.loc	2 107 15
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_12
	.loc	2 0 15
	leaq	64(%rsp), %rdx
	.loc	2 107 15
	movl	$command_line_arguments.Node..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB13_15
.LBB13_12:
	testq	%rsi, %rsi
	je	.LBB13_19
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.LBB13_15:
	.loc	2 0 15
	addq	$40, %r14
	movq	48(%rsp), %rax
	movq	%rax, 96(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	2 107 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_18
	.loc	2 0 13
	leaq	80(%rsp), %rdx
	.loc	2 107 13
	movl	$type...6.7command_line_arguments.Node, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB13_17
.LBB13_18:
	movq	96(%rsp), %rax
	movq	%rax, 16(%r14)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%r14)
.LBB13_17:
	.loc	2 0 13
	addq	$136, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB13_7:
	.cfi_def_cfa_offset 160
	.loc	2 107 15
	xorl	%edi, %edi
	callq	__go_runtime_error
.LBB13_19:
	.loc	2 0 15
	movl	$6, %edi
	callq	__go_runtime_error
.LBB13_20:
	.loc	2 107 15
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp111:
.Lfunc_end13:
	.size	command_line_arguments.Block.push, .Lfunc_end13-command_line_arguments.Block.push
	.cfi_endproc

	.section	.text.command_line_arguments.Block.pushFront,"ax",@progbits
	.globl	command_line_arguments.Block.pushFront
	.p2align	4, 0x90
	.type	command_line_arguments.Block.pushFront,@function
command_line_arguments.Block.pushFront:
.Lfunc_begin14:
	.loc	2 110 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB14_2
	movq	%r10, %rax
	movabsq	$232, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB14_2:
.Ltmp112:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$200, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	2 111 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB14_13
.Ltmp113:
	.loc	2 0 3 is_stmt 0
	movq	%rdx, %r12
.Ltmp114:
	movq	%rsi, %rbx
.Ltmp115:
	movq	%rdi, %r14
.Ltmp116:
	.loc	2 111 22
	movl	$type...61x.7command_line_arguments.Node, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movq	%rbx, 160(%rsp)
	movq	%r12, 168(%rsp)
	leaq	160(%rsp), %rdx
	movl	$type...61x.7command_line_arguments.Node, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%r15, 56(%rsp)
	movq	$1, 64(%rsp)
	movq	$1, 72(%rsp)
	movups	40(%r14), %xmm0
	movaps	%xmm0, 112(%rsp)
	movq	56(%r14), %rax
	movq	%rax, 128(%rsp)
	.loc	2 111 15
	movq	120(%rsp), %rdx
	addq	$1, %rdx
	cmpq	$2, %rdx
	jb	.LBB14_7
.Ltmp117:
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	176(%rsp), %rdi
	movl	$command_line_arguments.Node..d, %esi
	callq	runtime.growslice
	movq	176(%rsp), %r15
	movq	184(%rsp), %rdx
	movq	192(%rsp), %rax
	movq	%r15, 56(%rsp)
	movq	%rdx, 64(%rsp)
	movq	%rax, 72(%rsp)
	testq	%rax, %rax
	jle	.LBB14_14
.Ltmp118:
	cmpq	$1, %rax
	je	.LBB14_8
.Ltmp119:
	.loc	2 0 15
	movl	$1, %ecx
	jmp	.LBB14_9
.Ltmp120:
.LBB14_7:
	.loc	2 111 15
	movq	%rdx, 64(%rsp)
	movq	$1, 72(%rsp)
.Ltmp121:
.LBB14_8:
	.loc	2 0 15
	xorl	%ecx, %ecx
	movl	$1, %eax
.Ltmp122:
.LBB14_9:
	addq	$40, %r14
.Ltmp123:
	.loc	2 111 15
	shlq	$4, %rcx
	addq	%r15, %rcx
	addq	$-1, %rdx
	addq	$-1, %rax
	movq	%rcx, 136(%rsp)
	movq	%rdx, 144(%rsp)
	movq	%rax, 152(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	112(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Node..d, %edi
	callq	runtime.typedslicecopy
	movups	56(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 96(%rsp)
	.loc	2 111 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB14_12
.Ltmp124:
	.loc	2 0 13
	leaq	80(%rsp), %rdx
	.loc	2 111 13
	movl	$type...6.7command_line_arguments.Node, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB14_11
.Ltmp125:
.LBB14_12:
	movq	96(%rsp), %rax
	movq	%rax, 16(%r14)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%r14)
.Ltmp126:
.LBB14_11:
	.loc	2 0 13
	addq	$200, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp127:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB14_13:
	.cfi_def_cfa_offset 240
.Ltmp128:
	.loc	2 111 3
	movl	$6, %edi
.Ltmp129:
	callq	__go_runtime_error
.Ltmp130:
.LBB14_14:
	.loc	2 111 15
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp131:
.Lfunc_end14:
	.size	command_line_arguments.Block.pushFront, .Lfunc_end14-command_line_arguments.Block.pushFront
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Text..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Text..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Text..hash,@function
command_line_arguments.command_line_arguments.Text..hash:
.Lfunc_begin15:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB15_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB15_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp132:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.SourcePosition..hash
	leaq	40(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	addq	$56, %rbx
.Ltmp133:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
.Ltmp134:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp135:
.Lfunc_end15:
	.size	command_line_arguments.command_line_arguments.Text..hash, .Lfunc_end15-command_line_arguments.command_line_arguments.Text..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Text..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Text..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Text..eq,@function
command_line_arguments.command_line_arguments.Text..eq:
.Lfunc_begin16:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB16_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB16_2:
.Ltmp136:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp137:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB16_12
.Ltmp138:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp139:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB16_12
.Ltmp140:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp141:
	.loc	1 1 1
	movq	32(%rdi), %rsi
	movq	24(%rdi), %rdi
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	(%rbx), %r15
	movq	8(%rbx), %r13
	movq	8(%r14), %rbp
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	movq	(%r14), %r12
	callq	runtime.eqstring
	cmpq	%r12, %r15
	jne	.LBB16_8
.Ltmp142:
	.loc	1 0 1
	cmpq	%rbp, %r13
	jne	.LBB16_8
.Ltmp143:
	movq	8(%rsp), %rcx
	cmpq	%rcx, 16(%rsp)
	jne	.LBB16_8
.Ltmp144:
	cmpb	$1, %al
	jne	.LBB16_8
.Ltmp145:
	.loc	1 1 1
	movq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	movq	40(%r14), %rdx
	movq	48(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB16_8
.Ltmp146:
	movb	56(%rbx), %al
	cmpb	56(%r14), %al
	sete	%al
	jmp	.LBB16_9
.Ltmp147:
.LBB16_8:
	xorl	%eax, %eax
.Ltmp148:
.LBB16_9:
	.loc	1 0 1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp149:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp150:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB16_12:
	.cfi_def_cfa_offset 80
.Ltmp151:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp152:
	callq	__go_runtime_error
.Ltmp153:
.Lfunc_end16:
	.size	command_line_arguments.command_line_arguments.Text..eq, .Lfunc_end16-command_line_arguments.command_line_arguments.Text..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Text.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Text.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Text.Pos..stub,@function
command_line_arguments.Text.Pos..stub:
.Lfunc_begin17:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB17_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB17_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp154:
	.loc	2 82 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB17_4
.Ltmp155:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp156:
.LBB17_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp157:
.Lfunc_end17:
	.size	command_line_arguments.Text.Pos..stub, .Lfunc_end17-command_line_arguments.Text.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.newBlock,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.newBlock,@function
command_line_arguments.newBlock:
.Lfunc_begin18:
	.loc	2 100 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB18_2
	movabsq	$88, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB18_2:
.Ltmp158:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$80, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -16
	.loc	2 101 11 prologue_end
	movl	$command_line_arguments.Block..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp159:
	.loc	2 0 11 is_stmt 0
	leaq	56(%rsp), %rdi
	.loc	2 102 19 is_stmt 1
	movl	$command_line_arguments.Node..d, %esi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.makeslice
	movq	72(%rsp), %rax
	movq	%rax, 48(%rsp)
	movups	56(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	.loc	2 102 7 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB18_7
.Ltmp160:
	movq	%rbx, %rsi
	addq	$40, %rsi
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	2 102 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB18_6
.Ltmp161:
	.loc	2 0 17
	movq	%rsp, %rdx
	.loc	2 102 17
	movl	$type...6.7command_line_arguments.Node, %edi
	callq	runtime.typedmemmove
	jmp	.LBB18_5
.Ltmp162:
.LBB18_6:
	movq	16(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp163:
.LBB18_5:
	.loc	2 103 2 is_stmt 1
	movq	%rbx, %rax
	addq	$80, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
.Ltmp164:
	.cfi_def_cfa_offset 8
	retq
.LBB18_7:
	.cfi_def_cfa_offset 96
.Ltmp165:
	.loc	2 102 7
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp166:
.Lfunc_end18:
	.size	command_line_arguments.newBlock, .Lfunc_end18-command_line_arguments.newBlock
	.cfi_endproc

	.section	.text.command_line_arguments.NamedBlock.CanInline..stub,"ax",@progbits
	.globl	command_line_arguments.NamedBlock.CanInline..stub
	.p2align	4, 0x90
	.type	command_line_arguments.NamedBlock.CanInline..stub,@function
command_line_arguments.NamedBlock.CanInline..stub:
.Lfunc_begin19:
	.loc	2 114 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB19_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB19_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp167:
	.loc	2 137 6 prologue_end
	testq	%rdi, %rdi
	je	.LBB19_4
.Ltmp168:
	callq	command_line_arguments.Block.CanInline
.Ltmp169:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp170:
.LBB19_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
.Ltmp171:
	callq	__go_runtime_error
.Ltmp172:
.Lfunc_end19:
	.size	command_line_arguments.NamedBlock.CanInline..stub, .Lfunc_end19-command_line_arguments.NamedBlock.CanInline..stub
	.cfi_endproc

	.section	.text.command_line_arguments.NamedBlock.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.NamedBlock.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.NamedBlock.Pos..stub,@function
command_line_arguments.NamedBlock.Pos..stub:
.Lfunc_begin20:
	.loc	2 44 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB20_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB20_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp173:
	.loc	2 137 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB20_4
.Ltmp174:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp175:
.LBB20_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp176:
.Lfunc_end20:
	.size	command_line_arguments.NamedBlock.Pos..stub, .Lfunc_end20-command_line_arguments.NamedBlock.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.NamedBlock.push..stub,"ax",@progbits
	.globl	command_line_arguments.NamedBlock.push..stub
	.p2align	4, 0x90
	.type	command_line_arguments.NamedBlock.push..stub,@function
command_line_arguments.NamedBlock.push..stub:
.Lfunc_begin21:
	.loc	2 106 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB21_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB21_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp177:
	.loc	2 137 6 prologue_end
	testq	%rdi, %rdi
	je	.LBB21_4
.Ltmp178:
	callq	command_line_arguments.Block.push
.Ltmp179:
	.loc	2 0 6 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB21_4:
	.cfi_def_cfa_offset 16
.Ltmp180:
	.loc	2 137 6
	movl	$6, %edi
.Ltmp181:
	callq	__go_runtime_error
.Ltmp182:
.Lfunc_end21:
	.size	command_line_arguments.NamedBlock.push..stub, .Lfunc_end21-command_line_arguments.NamedBlock.push..stub
	.cfi_endproc

	.section	.text.command_line_arguments.NamedBlock.pushFront..stub,"ax",@progbits
	.globl	command_line_arguments.NamedBlock.pushFront..stub
	.p2align	4, 0x90
	.type	command_line_arguments.NamedBlock.pushFront..stub,@function
command_line_arguments.NamedBlock.pushFront..stub:
.Lfunc_begin22:
	.loc	2 110 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB22_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB22_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp183:
	.loc	2 137 6 prologue_end
	testq	%rdi, %rdi
	je	.LBB22_4
.Ltmp184:
	callq	command_line_arguments.Block.pushFront
.Ltmp185:
	.loc	2 0 6 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB22_4:
	.cfi_def_cfa_offset 16
.Ltmp186:
	.loc	2 137 6
	movl	$6, %edi
.Ltmp187:
	callq	__go_runtime_error
.Ltmp188:
.Lfunc_end22:
	.size	command_line_arguments.NamedBlock.pushFront..stub, .Lfunc_end22-command_line_arguments.NamedBlock.pushFront..stub
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Attribute..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Attribute..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Attribute..hash,@function
command_line_arguments.command_line_arguments.Attribute..hash:
.Lfunc_begin23:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB23_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB23_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp189:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.SourcePosition..hash
	leaq	40(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	56(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	72(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	addq	$80, %rbx
.Ltmp190:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp191:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp192:
.Lfunc_end23:
	.size	command_line_arguments.command_line_arguments.Attribute..hash, .Lfunc_end23-command_line_arguments.command_line_arguments.Attribute..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Attribute..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Attribute..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Attribute..eq,@function
command_line_arguments.command_line_arguments.Attribute..eq:
.Lfunc_begin24:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB24_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB24_2:
.Ltmp193:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp194:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB24_14
.Ltmp195:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp196:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB24_14
.Ltmp197:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp198:
	.loc	1 1 1
	movq	32(%rdi), %rsi
	movq	24(%rdi), %rdi
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	(%rbx), %r15
	movq	8(%rbx), %r13
	movq	8(%r14), %rbp
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	movq	(%r14), %r12
	callq	runtime.eqstring
	cmpq	%r12, %r15
	jne	.LBB24_8
.Ltmp199:
	.loc	1 0 1
	cmpq	%rbp, %r13
	jne	.LBB24_8
.Ltmp200:
	movq	8(%rsp), %rcx
	cmpq	%rcx, 16(%rsp)
	jne	.LBB24_8
.Ltmp201:
	cmpb	$1, %al
	jne	.LBB24_8
.Ltmp202:
	.loc	1 1 1
	movq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	movq	40(%r14), %rdx
	movq	48(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB24_8
.Ltmp203:
	movq	56(%rbx), %rdi
	movq	64(%rbx), %rsi
	movq	56(%r14), %rdx
	movq	64(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB24_8
.Ltmp204:
	movb	72(%rbx), %al
	cmpb	72(%r14), %al
	jne	.LBB24_8
.Ltmp205:
	movq	80(%rbx), %rdi
	movq	88(%rbx), %rsi
	movq	80(%r14), %rdx
	movq	88(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	jmp	.LBB24_9
.Ltmp206:
.LBB24_8:
	xorl	%eax, %eax
.Ltmp207:
.LBB24_9:
	.loc	1 0 1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp208:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp209:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB24_14:
	.cfi_def_cfa_offset 80
.Ltmp210:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp211:
	callq	__go_runtime_error
.Ltmp212:
.Lfunc_end24:
	.size	command_line_arguments.command_line_arguments.Attribute..eq, .Lfunc_end24-command_line_arguments.command_line_arguments.Attribute..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Attribute.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Attribute.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Attribute.Pos..stub,@function
command_line_arguments.Attribute.Pos..stub:
.Lfunc_begin25:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB25_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB25_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp213:
	.loc	2 151 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB25_4
.Ltmp214:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp215:
.LBB25_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp216:
.Lfunc_end25:
	.size	command_line_arguments.Attribute.Pos..stub, .Lfunc_end25-command_line_arguments.Attribute.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Tag.IsRawText,"ax",@progbits
	.globl	command_line_arguments.Tag.IsRawText
	.p2align	4, 0x90
	.type	command_line_arguments.Tag.IsRawText,@function
command_line_arguments.Tag.IsRawText:
.Lfunc_begin26:
	.loc	2 187 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB26_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB26_2:
.Ltmp217:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp218:
	.loc	2 188 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB26_6
.Ltmp219:
	.loc	2 0 10 is_stmt 0
	movq	%rdi, %rbx
.Ltmp220:
	.loc	2 188 16
	movq	48(%rdi), %rdi
	movq	56(%rbx), %rsi
	movl	$.Lconst.149, %edx
	movl	$5, %ecx
	callq	runtime.eqstring
	movl	%eax, %ecx
	movb	$1, %al
	cmpb	$1, %cl
	je	.LBB26_5
.Ltmp221:
	.loc	2 188 37
	movq	48(%rbx), %rdi
	movq	56(%rbx), %rsi
	movl	$.Lconst.151, %edx
	movl	$6, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
.Ltmp222:
.LBB26_5:
	.loc	2 188 2
	popq	%rbx
.Ltmp223:
	.cfi_def_cfa_offset 8
	retq
.LBB26_6:
	.cfi_def_cfa_offset 16
.Ltmp224:
	.loc	2 188 10
	movl	$6, %edi
.Ltmp225:
	callq	__go_runtime_error
.Ltmp226:
.Lfunc_end26:
	.size	command_line_arguments.Tag.IsRawText, .Lfunc_end26-command_line_arguments.Tag.IsRawText
	.cfi_endproc

	.section	.text.command_line_arguments.Tag.IsSelfClosing,"ax",@progbits
	.globl	command_line_arguments.Tag.IsSelfClosing
	.p2align	4, 0x90
	.type	command_line_arguments.Tag.IsSelfClosing,@function
command_line_arguments.Tag.IsSelfClosing:
.Lfunc_begin27:
	.loc	2 177 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB27_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB27_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$160, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
.Ltmp227:
	movq	%rsp, %rdi
	movl	$command_line_arguments.selfClosingTags, %esi
	movl	$160, %edx
	callq	memcpy
	leaq	8(%rsp), %rbx
	xorl	%r15d, %r15d
.Ltmp228:
	.p2align	4, 0x90
.LBB27_3:
	testq	%r14, %r14
	je	.LBB27_4
.Ltmp229:
	.loc	2 178 2 prologue_end
	movq	-8(%rbx), %rdi
.Ltmp230:
	movq	(%rbx), %rsi
.Ltmp231:
	.loc	2 179 10
	movq	48(%r14), %rdx
	movq	56(%r14), %rcx
	callq	runtime.eqstring
.Ltmp232:
	cmpb	$1, %al
	je	.LBB27_8
.Ltmp233:
	.loc	2 178 2
	addq	$1, %r15
	addq	$16, %rbx
	cmpq	$9, %r15
	jbe	.LBB27_3
.Ltmp234:
	.loc	2 0 2 is_stmt 0
	xorl	%eax, %eax
	jmp	.LBB27_9
.Ltmp235:
.LBB27_8:
	movb	$1, %al
.Ltmp236:
.LBB27_9:
	.loc	2 180 4 is_stmt 1
	addq	$160, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp237:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB27_4:
	.cfi_def_cfa_offset 192
.Ltmp238:
	.loc	2 179 14
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp239:
.Lfunc_end27:
	.size	command_line_arguments.Tag.IsSelfClosing, .Lfunc_end27-command_line_arguments.Tag.IsSelfClosing
	.cfi_endproc

	.section	.text.command_line_arguments.Tag.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Tag.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Tag.Pos..stub,@function
command_line_arguments.Tag.Pos..stub:
.Lfunc_begin28:
	.loc	2 44 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB28_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB28_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp240:
	.loc	2 159 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB28_4
.Ltmp241:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp242:
.LBB28_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp243:
.Lfunc_end28:
	.size	command_line_arguments.Tag.Pos..stub, .Lfunc_end28-command_line_arguments.Tag.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Condition..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Condition..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Condition..hash,@function
command_line_arguments.command_line_arguments.Condition..hash:
.Lfunc_begin29:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB29_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB29_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp244:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.SourcePosition..hash
	leaq	40(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	48(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	addq	$56, %rbx
.Ltmp245:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp246:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp247:
.Lfunc_end29:
	.size	command_line_arguments.command_line_arguments.Condition..hash, .Lfunc_end29-command_line_arguments.command_line_arguments.Condition..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Condition..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Condition..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Condition..eq,@function
command_line_arguments.command_line_arguments.Condition..eq:
.Lfunc_begin30:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB30_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB30_2:
.Ltmp248:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp249:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB30_13
.Ltmp250:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp251:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB30_13
.Ltmp252:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp253:
	.loc	1 1 1
	movq	32(%rdi), %rsi
	movq	24(%rdi), %rdi
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	(%rbx), %r15
	movq	8(%rbx), %r13
	movq	8(%r14), %rbp
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	movq	(%r14), %r12
	callq	runtime.eqstring
	cmpq	%r12, %r15
	jne	.LBB30_8
.Ltmp254:
	.loc	1 0 1
	cmpq	%rbp, %r13
	jne	.LBB30_8
.Ltmp255:
	movq	8(%rsp), %rcx
	cmpq	%rcx, 16(%rsp)
	jne	.LBB30_8
.Ltmp256:
	cmpb	$1, %al
	jne	.LBB30_8
.Ltmp257:
	.loc	1 1 1
	movq	40(%rbx), %rax
	cmpq	40(%r14), %rax
	jne	.LBB30_8
.Ltmp258:
	movq	48(%rbx), %rax
	cmpq	48(%r14), %rax
	je	.LBB30_12
.Ltmp259:
.LBB30_8:
	xorl	%eax, %eax
.Ltmp260:
.LBB30_9:
	.loc	1 0 1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp261:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp262:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB30_12:
	.cfi_def_cfa_offset 80
.Ltmp263:
	.loc	1 1 1
	movq	56(%rbx), %rdi
	movq	64(%rbx), %rsi
	movq	56(%r14), %rdx
	movq	64(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	jmp	.LBB30_9
.Ltmp264:
.LBB30_13:
	movl	$6, %edi
.Ltmp265:
	callq	__go_runtime_error
.Ltmp266:
.Lfunc_end30:
	.size	command_line_arguments.command_line_arguments.Condition..eq, .Lfunc_end30-command_line_arguments.command_line_arguments.Condition..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Condition.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Condition.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Condition.Pos..stub,@function
command_line_arguments.Condition.Pos..stub:
.Lfunc_begin31:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB31_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB31_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp267:
	.loc	2 191 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB31_4
.Ltmp268:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp269:
.LBB31_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp270:
.Lfunc_end31:
	.size	command_line_arguments.Condition.Pos..stub, .Lfunc_end31-command_line_arguments.Condition.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Each..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Each..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Each..hash,@function
command_line_arguments.command_line_arguments.Each..hash:
.Lfunc_begin32:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB32_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB32_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp271:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.SourcePosition..hash
	leaq	40(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	56(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	72(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	addq	$88, %rbx
.Ltmp272:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
.Ltmp273:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp274:
.Lfunc_end32:
	.size	command_line_arguments.command_line_arguments.Each..hash, .Lfunc_end32-command_line_arguments.command_line_arguments.Each..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Each..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Each..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Each..eq,@function
command_line_arguments.command_line_arguments.Each..eq:
.Lfunc_begin33:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB33_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB33_2:
.Ltmp275:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp276:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB33_14
.Ltmp277:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp278:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB33_14
.Ltmp279:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp280:
	.loc	1 1 1
	movq	32(%rdi), %rsi
	movq	24(%rdi), %rdi
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	(%rbx), %r15
	movq	8(%rbx), %r13
	movq	8(%r14), %rbp
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	movq	(%r14), %r12
	callq	runtime.eqstring
	cmpq	%r12, %r15
	jne	.LBB33_8
.Ltmp281:
	.loc	1 0 1
	cmpq	%rbp, %r13
	jne	.LBB33_8
.Ltmp282:
	movq	8(%rsp), %rcx
	cmpq	%rcx, 16(%rsp)
	jne	.LBB33_8
.Ltmp283:
	cmpb	$1, %al
	jne	.LBB33_8
.Ltmp284:
	.loc	1 1 1
	movq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	movq	40(%r14), %rdx
	movq	48(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB33_8
.Ltmp285:
	movq	56(%rbx), %rdi
	movq	64(%rbx), %rsi
	movq	56(%r14), %rdx
	movq	64(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB33_8
.Ltmp286:
	movq	72(%rbx), %rdi
	movq	80(%rbx), %rsi
	movq	72(%r14), %rdx
	movq	80(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB33_8
.Ltmp287:
	movq	88(%rbx), %rax
	cmpq	88(%r14), %rax
	sete	%al
	jmp	.LBB33_9
.Ltmp288:
.LBB33_8:
	xorl	%eax, %eax
.Ltmp289:
.LBB33_9:
	.loc	1 0 1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp290:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp291:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB33_14:
	.cfi_def_cfa_offset 80
.Ltmp292:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp293:
	callq	__go_runtime_error
.Ltmp294:
.Lfunc_end33:
	.size	command_line_arguments.command_line_arguments.Each..eq, .Lfunc_end33-command_line_arguments.command_line_arguments.Each..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Each.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Each.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Each.Pos..stub,@function
command_line_arguments.Each.Pos..stub:
.Lfunc_begin34:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB34_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB34_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp295:
	.loc	2 204 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB34_4
.Ltmp296:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp297:
.LBB34_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp298:
.Lfunc_end34:
	.size	command_line_arguments.Each.Pos..stub, .Lfunc_end34-command_line_arguments.Each.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Assignment..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Assignment..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Assignment..hash,@function
command_line_arguments.command_line_arguments.Assignment..hash:
.Lfunc_begin35:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB35_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB35_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp299:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.SourcePosition..hash
	leaq	40(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	addq	$56, %rbx
.Ltmp300:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp301:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp302:
.Lfunc_end35:
	.size	command_line_arguments.command_line_arguments.Assignment..hash, .Lfunc_end35-command_line_arguments.command_line_arguments.Assignment..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Assignment..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Assignment..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Assignment..eq,@function
command_line_arguments.command_line_arguments.Assignment..eq:
.Lfunc_begin36:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB36_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB36_2:
.Ltmp303:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp304:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB36_12
.Ltmp305:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp306:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB36_12
.Ltmp307:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp308:
	.loc	1 1 1
	movq	32(%rdi), %rsi
	movq	24(%rdi), %rdi
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	(%rbx), %r15
	movq	8(%rbx), %r13
	movq	8(%r14), %rbp
	movq	16(%r14), %rax
	movq	%rax, 8(%rsp)
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	movq	(%r14), %r12
	callq	runtime.eqstring
	cmpq	%r12, %r15
	jne	.LBB36_8
.Ltmp309:
	.loc	1 0 1
	cmpq	%rbp, %r13
	jne	.LBB36_8
.Ltmp310:
	movq	8(%rsp), %rcx
	cmpq	%rcx, 16(%rsp)
	jne	.LBB36_8
.Ltmp311:
	cmpb	$1, %al
	jne	.LBB36_8
.Ltmp312:
	.loc	1 1 1
	movq	40(%rbx), %rdi
	movq	48(%rbx), %rsi
	movq	40(%r14), %rdx
	movq	48(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB36_8
.Ltmp313:
	movq	56(%rbx), %rdi
	movq	64(%rbx), %rsi
	movq	56(%r14), %rdx
	movq	64(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	jmp	.LBB36_9
.Ltmp314:
.LBB36_8:
	xorl	%eax, %eax
.Ltmp315:
.LBB36_9:
	.loc	1 0 1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp316:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp317:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB36_12:
	.cfi_def_cfa_offset 80
.Ltmp318:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp319:
	callq	__go_runtime_error
.Ltmp320:
.Lfunc_end36:
	.size	command_line_arguments.command_line_arguments.Assignment..eq, .Lfunc_end36-command_line_arguments.command_line_arguments.Assignment..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Assignment.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Assignment.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Assignment.Pos..stub,@function
command_line_arguments.Assignment.Pos..stub:
.Lfunc_begin37:
	.loc	2 44 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB37_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB37_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp321:
	.loc	2 218 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB37_4
.Ltmp322:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp323:
.LBB37_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp324:
.Lfunc_end37:
	.size	command_line_arguments.Assignment.Pos..stub, .Lfunc_end37-command_line_arguments.Assignment.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Mixin.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.Mixin.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Mixin.Pos..stub,@function
command_line_arguments.Mixin.Pos..stub:
.Lfunc_begin38:
	.loc	2 44 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB38_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB38_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp325:
	.loc	2 231 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB38_4
.Ltmp326:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp327:
.LBB38_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp328:
.Lfunc_end38:
	.size	command_line_arguments.Mixin.Pos..stub, .Lfunc_end38-command_line_arguments.Mixin.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.MixinCall.Pos..stub,"ax",@progbits
	.globl	command_line_arguments.MixinCall.Pos..stub
	.p2align	4, 0x90
	.type	command_line_arguments.MixinCall.Pos..stub,@function
command_line_arguments.MixinCall.Pos..stub:
.Lfunc_begin39:
	.loc	2 44 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB39_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB39_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp329:
	.loc	2 256 6 prologue_end
	testq	%rsi, %rsi
	je	.LBB39_4
.Ltmp330:
	movups	(%rsi), %xmm0
	movups	16(%rsi), %xmm1
	movq	32(%rsi), %rax
	movq	%rax, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp331:
.LBB39_4:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp332:
.Lfunc_end39:
	.size	command_line_arguments.MixinCall.Pos..stub, .Lfunc_end39-command_line_arguments.MixinCall.Pos..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.Parse,"ax",@progbits
	.globl	command_line_arguments.Parser.Parse
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.Parse,@function
command_line_arguments.Parser.Parse:
.Lfunc_begin40:
	.loc	5 75 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception0
	leaq	-392(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB40_2
	movq	%r10, %rax
	movabsq	$392, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB40_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$344, %rsp
	.cfi_def_cfa_offset 400
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	%rdi, 32(%rsp)
	movb	$0, 15(%rsp)
.Ltmp435:
	.loc	5 76 6 prologue_end
	testq	%rdi, %rdi
	jne	.LBB40_4
.Ltmp436:
.Ltmp333:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp334:
.Ltmp437:
.LBB40_4:
	.loc	5 76 14 is_stmt 0
	cmpq	$0, 64(%rbx)
	je	.LBB40_8
.Ltmp438:
	.loc	5 77 10 is_stmt 1
	movq	32(%rsp), %rbx
.Ltmp439:
	.loc	5 77 11 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB40_7
.Ltmp440:
.Ltmp335:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp336:
.Ltmp441:
.LBB40_7:
	movq	64(%rbx), %rax
.Ltmp442:
	.loc	5 0 11
	movq	%rax, 16(%rsp)
	movb	$1, %bl
.Ltmp443:
	leaq	15(%rsp), %rbp
	jmp	.LBB40_124
.Ltmp444:
.LBB40_8:
	.loc	5 80 8 is_stmt 1
	movq	$command_line_arguments..1command_line_arguments.Parser.Parse..func1, 160(%rsp)
	leaq	32(%rsp), %rax
	movq	%rax, 168(%rsp)
	leaq	160(%rsp), %rax
	.loc	5 80 2 is_stmt 0
	movq	%rax, 120(%rsp)
.Ltmp337:
	leaq	15(%rsp), %rdi
	leaq	120(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk0, %esi
	callq	runtime.deferproc
.Ltmp338:
.Ltmp445:
.Ltmp339:
	.loc	5 96 11 is_stmt 1
	callq	command_line_arguments.newBlock
	movq	%rax, 16(%rsp)
.Ltmp340:
.Ltmp446:
	.loc	5 97 2
	movq	32(%rsp), %rdi
.Ltmp447:
.Ltmp341:
	.loc	5 97 3 is_stmt 0
	callq	command_line_arguments.Parser.advance
.Ltmp448:
.Ltmp342:
	.p2align	4, 0x90
.LBB40_12:
	.loc	5 100 6 is_stmt 1
	movq	32(%rsp), %r12
.Ltmp449:
	.loc	5 0 6 is_stmt 0
	movq	%r12, %rax
	.loc	5 100 7
	testq	%r12, %r12
	jne	.LBB40_15
.Ltmp450:
.Ltmp343:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp344:
.Ltmp451:
	.loc	5 0 0
	movq	32(%rsp), %r12
.Ltmp452:
	movq	%rbp, %rax
.LBB40_15:
.Ltmp453:
	.loc	5 100 21
	cmpq	$0, 40(%rax)
	je	.LBB40_29
.Ltmp454:
	.loc	5 0 21
	movq	%rax, 24(%rsp)
	testq	%r12, %r12
	jne	.LBB40_18
.Ltmp455:
.Ltmp345:
	.loc	5 100 32
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp346:
	movq	%rbx, %r12
.Ltmp456:
.LBB40_18:
	movq	40(%r12), %r15
	.loc	5 100 45
	testq	%r15, %r15
	jne	.LBB40_20
.Ltmp347:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp348:
	movq	%r14, %r15
.LBB40_20:
	.loc	5 100 51
	cmpl	$-1, (%r15)
	.loc	5 0 0
	movq	32(%rsp), %rbx
.Ltmp457:
	je	.LBB40_31
.Ltmp458:
	testq	%rbx, %rbx
	jne	.LBB40_23
.Ltmp459:
.Ltmp349:
	.loc	5 104 7 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp350:
	movq	%r13, %rbx
.Ltmp460:
.LBB40_23:
	movq	40(%rbx), %rbp
	.loc	5 104 20 is_stmt 0
	testq	%rbp, %rbp
	jne	.LBB40_25
.Ltmp351:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp352:
	movq	40(%rsp), %rbp
.LBB40_25:
	.loc	5 104 26
	cmpl	$-6, (%rbp)
	.loc	5 0 0
	movq	32(%rsp), %rdi
.Ltmp461:
	jne	.LBB40_27
.Ltmp462:
.Ltmp357:
	.loc	5 105 5 is_stmt 1
	callq	command_line_arguments.Parser.advance
.Ltmp463:
.Ltmp358:
	.loc	5 0 5 is_stmt 0
	movq	%rbp, 40(%rsp)
	movq	%rbx, %r13
	movq	%r15, %r14
	movq	%r12, %rbx
	movq	24(%rsp), %rbp
	.loc	5 105 5
	jmp	.LBB40_12
	.p2align	4, 0x90
.LBB40_27:
.Ltmp464:
.Ltmp353:
	.loc	5 109 15 is_stmt 1
	callq	command_line_arguments.Parser.parse
.Ltmp465:
.Ltmp354:
.Ltmp355:
	.loc	5 109 8 is_stmt 0
	movq	16(%rsp), %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.Block.push
.Ltmp356:
	movq	%rbp, 40(%rsp)
	movq	%rbx, %r13
	movq	%r15, %r14
	movq	%r12, %rbx
	movq	24(%rsp), %rbp
	jmp	.LBB40_12
.Ltmp466:
.LBB40_29:
	.loc	5 0 0
	testq	%r12, %r12
	je	.LBB40_32
.Ltmp467:
.LBB40_30:
	.loc	5 112 14 is_stmt 1
	cmpq	$0, 56(%r12)
	jne	.LBB40_34
	jmp	.LBB40_106
.LBB40_31:
.Ltmp468:
	.loc	5 0 14 is_stmt 0
	movq	%rbx, %r12
	testq	%rbx, %rbx
	jne	.LBB40_30
.Ltmp469:
.LBB40_32:
.Ltmp360:
	.loc	5 112 6
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp361:
	.loc	5 0 6
	xorl	%r12d, %r12d
	.loc	5 112 14
	cmpq	$0, 56(%r12)
	je	.LBB40_106
.LBB40_34:
	.loc	5 113 3 is_stmt 1
	movq	32(%rsp), %rbx
.Ltmp470:
	.loc	5 113 4 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB40_36
.Ltmp471:
.Ltmp362:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp363:
.Ltmp472:
.LBB40_36:
	movq	56(%rbx), %rdi
.Ltmp364:
	.loc	5 113 11
	callq	command_line_arguments.Parser.Parse
.Ltmp365:
.Ltmp473:
	.loc	5 115 24 is_stmt 1
	movq	32(%rsp), %rbx
.Ltmp474:
	.loc	5 115 25 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB40_39
.Ltmp475:
.Ltmp366:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp367:
.Ltmp476:
.LBB40_39:
	movq	56(%rbx), %rbx
.Ltmp477:
	.loc	5 115 32
	testq	%rbx, %rbx
	jne	.LBB40_41
.Ltmp368:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp369:
.LBB40_41:
	movq	48(%rbx), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 320(%rsp)
	movaps	%xmm0, 304(%rsp)
	movaps	%xmm0, 288(%rsp)
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movaps	%xmm0, 240(%rsp)
.Ltmp370:
	leaq	240(%rsp), %rdx
	.loc	5 115 3
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	callq	runtime.mapiterinit
.Ltmp371:
	.p2align	4, 0x90
.LBB40_43:
	cmpq	$0, 240(%rsp)
	je	.LBB40_101
	movq	248(%rsp), %rax
	movq	(%rax), %rcx
.Ltmp478:
	.loc	5 0 3
	movq	%rcx, %rax
	movq	%rcx, 24(%rsp)
.Ltmp479:
	.loc	5 116 30 is_stmt 1
	testq	%rcx, %rcx
	jne	.LBB40_46
.Ltmp480:
.Ltmp372:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp373:
	movq	112(%rsp), %rax
.Ltmp481:
.LBB40_46:
	.loc	5 0 30 is_stmt 0
	movq	%rax, 112(%rsp)
	movups	64(%rax), %xmm0
	movaps	%xmm0, 208(%rsp)
	.loc	5 116 12
	movq	32(%rsp), %rax
.Ltmp482:
	.loc	5 116 13
	testq	%rax, %rax
	jne	.LBB40_48
.Ltmp483:
.Ltmp374:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp484:
.Ltmp375:
	.loc	5 0 13
	movq	104(%rsp), %rax
.Ltmp485:
.LBB40_48:
	movq	%rax, 104(%rsp)
	.loc	5 116 13
	movq	48(%rax), %rsi
.Ltmp376:
	.loc	5 116 25
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	leaq	208(%rsp), %rdx
	callq	runtime.mapaccess1
.Ltmp377:
.Ltmp486:
	movq	(%rax), %r15
.Ltmp487:
	.loc	5 0 0
	movq	32(%rsp), %r13
.Ltmp488:
	.loc	5 118 12 is_stmt 1
	testq	%r15, %r15
	je	.LBB40_59
.Ltmp489:
	.loc	5 0 12 is_stmt 0
	movq	24(%rsp), %rax
	movq	%rax, 40(%rsp)
	.loc	5 116 30 is_stmt 1
	testq	%rax, %rax
	jne	.LBB40_52
.Ltmp490:
.Ltmp378:
	.loc	5 124 50
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp379:
	movq	64(%rsp), %rax
	movq	%rax, 40(%rsp)
.Ltmp491:
.LBB40_52:
	.loc	5 124 11 is_stmt 0
	movq	40(%rsp), %rax
	movups	64(%rax), %xmm0
	movups	%xmm0, 224(%rsp)
.Ltmp492:
	.loc	5 470 9 is_stmt 1
	testq	%r13, %r13
	leaq	224(%rsp), %rbx
	je	.LBB40_112
.Ltmp493:
	.p2align	4, 0x90
.LBB40_53:
	movq	48(%r13), %rsi
.Ltmp380:
	.loc	5 470 21 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	movq	%rbx, %rdx
	callq	runtime.mapaccess1
.Ltmp381:
.Ltmp494:
	.loc	5 470 28
	cmpq	$0, (%rax)
	je	.LBB40_66
.Ltmp495:
	.loc	5 473 9 is_stmt 1
	movq	56(%r13), %rax
	.loc	5 473 17 is_stmt 0
	testq	%rax, %rax
	je	.LBB40_67
.Ltmp496:
	.loc	5 476 16 is_stmt 1
	movq	48(%rax), %rsi
.Ltmp382:
	.loc	5 476 28 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	movq	%rbx, %rdx
	callq	runtime.mapaccess1
.Ltmp383:
.Ltmp497:
	.loc	5 476 35
	cmpq	$0, (%rax)
	je	.LBB40_67
.Ltmp498:
	.loc	5 477 13 is_stmt 1
	movq	56(%r13), %r13
.Ltmp499:
	.loc	5 470 9
	testq	%r13, %r13
	jne	.LBB40_53
	jmp	.LBB40_112
.Ltmp500:
	.p2align	4, 0x90
.LBB40_59:
	.loc	5 0 9 is_stmt 0
	movq	24(%rsp), %rax
	movq	%rax, %rbx
	.loc	5 116 30 is_stmt 1
	testq	%rax, %rax
	jne	.LBB40_61
.Ltmp501:
.Ltmp407:
	.loc	5 120 23
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp408:
	movq	48(%rsp), %rbx
.Ltmp502:
.LBB40_61:
	.loc	5 0 23 is_stmt 0
	movups	64(%rbx), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	5 120 6
	testq	%r13, %r13
	jne	.LBB40_63
.Ltmp503:
.Ltmp409:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp410:
	movq	16(%rsp), %r13
.Ltmp504:
.LBB40_63:
	movq	48(%r13), %rsi
.Ltmp411:
	.loc	5 120 30
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	leaq	192(%rsp), %rdx
	callq	runtime.mapassign
.Ltmp412:
.Ltmp505:
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_93
.Ltmp506:
.Ltmp413:
	movq	%rax, %rdi
	movq	24(%rsp), %rsi
	callq	runtime.writebarrierptr
.Ltmp414:
	jmp	.LBB40_100
.Ltmp507:
	.p2align	4, 0x90
.LBB40_66:
	.loc	5 0 30
	xorl	%r13d, %r13d
.Ltmp508:
.LBB40_67:
	.loc	5 116 30 is_stmt 1
	cmpq	$0, 24(%rsp)
	jne	.LBB40_69
.Ltmp509:
.Ltmp385:
	.loc	5 125 30
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp386:
	movq	56(%rsp), %rax
	movq	%rax, 24(%rsp)
.Ltmp510:
.LBB40_69:
	.loc	5 0 30 is_stmt 0
	movq	24(%rsp), %rax
	movups	64(%rax), %xmm0
	movaps	%xmm0, 176(%rsp)
	.loc	5 125 13
	testq	%r13, %r13
	jne	.LBB40_71
.Ltmp511:
.Ltmp387:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp388:
	movq	%r14, %r13
.Ltmp512:
.LBB40_71:
	movq	48(%r13), %rsi
.Ltmp389:
	.loc	5 125 25
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	leaq	176(%rsp), %rdx
	callq	runtime.mapaccess1
.Ltmp390:
	movq	(%rax), %r14
.Ltmp513:
	.loc	5 126 15 is_stmt 1
	movq	80(%r15), %rax
	cmpq	$2, %rax
	je	.LBB40_81
.Ltmp514:
	.loc	5 0 15 is_stmt 0
	cmpq	$1, %rax
	jne	.LBB40_89
.Ltmp515:
	.loc	5 128 29 is_stmt 1
	movq	48(%r15), %rax
	.loc	5 128 19 is_stmt 0
	testq	%rax, %rax
	jle	.LBB40_96
	.loc	5 0 19
	movq	%r13, 72(%rsp)
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB40_76:
.Ltmp516:
	movq	40(%r15), %r13
	movq	%rbx, %rbp
	.loc	5 129 27 is_stmt 1
	cmpq	%rax, %rbx
	jl	.LBB40_78
.Ltmp517:
.Ltmp396:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp397:
	movq	%r12, %rbp
.Ltmp518:
.LBB40_78:
	movq	%rbp, %rax
	shlq	$4, %rax
	.loc	5 129 8 is_stmt 0
	movq	(%r13,%rax), %rsi
	movq	8(%r13,%rax), %rdx
.Ltmp398:
	movq	%r14, %rdi
	callq	command_line_arguments.NamedBlock.push..stub
.Ltmp399:
.Ltmp519:
	.loc	5 128 41 is_stmt 1
	addq	$1, %rbx
.Ltmp520:
	.loc	5 128 29 is_stmt 0
	movq	48(%r15), %rax
	movq	%rbp, %r12
	.loc	5 128 19
	cmpq	%rax, %rbx
	jl	.LBB40_76
.Ltmp521:
	.loc	5 0 19
	movq	48(%rsp), %rbx
	movq	16(%rsp), %r13
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	72(%rsp), %r14
	movq	%rbp, %r12
	jmp	.LBB40_100
	.p2align	4, 0x90
.LBB40_81:
.Ltmp522:
	movq	%r13, 72(%rsp)
.Ltmp523:
	.loc	5 132 22 is_stmt 1
	movq	48(%r15), %rax
.Ltmp524:
	.loc	5 132 40 is_stmt 0
	movq	%rax, %rcx
	addq	$-1, %rcx
	js	.LBB40_97
.Ltmp525:
	.loc	5 0 40
	leaq	-2(%rax), %r13
	movq	96(%rsp), %rcx
	jmp	.LBB40_84
	.p2align	4, 0x90
.LBB40_83:
	movq	48(%r15), %rax
	addq	$-1, %r13
	movq	%rbp, %rcx
.LBB40_84:
	leaq	1(%r13), %rbp
	movq	40(%r15), %rbx
	.loc	5 133 32 is_stmt 1
	cmpq	%rax, %rbp
	jl	.LBB40_86
.Ltmp391:
	xorl	%edi, %edi
	movq	%rcx, %rbp
	callq	__go_runtime_error
.Ltmp392:
.LBB40_86:
	movq	%rbp, %rax
	shlq	$4, %rax
	.loc	5 133 8 is_stmt 0
	movq	(%rbx,%rax), %rsi
	movq	8(%rbx,%rax), %rdx
.Ltmp393:
	movq	%r14, %rdi
	callq	command_line_arguments.NamedBlock.pushFront..stub
.Ltmp394:
.Ltmp526:
	.loc	5 132 40 is_stmt 1
	testq	%r13, %r13
	jns	.LBB40_83
.Ltmp527:
	.loc	5 0 40 is_stmt 0
	movq	48(%rsp), %rbx
	movq	16(%rsp), %r13
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	72(%rsp), %r14
	movq	%rbp, 96(%rsp)
	jmp	.LBB40_100
	.p2align	4, 0x90
.LBB40_89:
	.loc	5 136 7 is_stmt 1
	testq	%r14, %r14
	jne	.LBB40_91
.Ltmp401:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp402:
	movq	80(%rsp), %r14
.LBB40_91:
	.loc	5 0 7 is_stmt 0
	movq	%r13, %rbp
	.loc	5 136 7
	leaq	40(%r14), %rsi
	movq	56(%r15), %rax
	movq	%rax, 144(%rsp)
	movups	40(%r15), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	5 136 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_98
.Ltmp403:
	movl	$type...6.7command_line_arguments.Node, %edi
	leaq	128(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp404:
	movq	48(%rsp), %rbx
	movq	16(%rsp), %r13
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	%rbp, %rax
	movq	%r14, 80(%rsp)
	movq	%rbp, %r14
	jmp	.LBB40_100
.LBB40_93:
.Ltmp528:
	.loc	5 120 30 is_stmt 1
	testq	%rax, %rax
	jne	.LBB40_95
.Ltmp529:
.Ltmp415:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp416:
	movq	88(%rsp), %rax
.Ltmp530:
.LBB40_95:
	movq	24(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 88(%rsp)
	jmp	.LBB40_100
.Ltmp531:
.LBB40_96:
	.loc	5 0 30 is_stmt 0
	movq	48(%rsp), %rbx
	movq	%r13, %rbp
	movq	16(%rsp), %r13
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB40_99
.LBB40_97:
	movq	48(%rsp), %rbx
	movq	16(%rsp), %r13
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	72(%rsp), %r14
	jmp	.LBB40_100
.LBB40_98:
	.loc	5 136 17 is_stmt 1
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	movq	48(%rsp), %rbx
	movq	16(%rsp), %r13
	movq	40(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	%rbp, %rax
	movq	%r14, 80(%rsp)
.Ltmp532:
.LBB40_99:
	.loc	5 0 17 is_stmt 0
	movq	%rbp, %r14
	.p2align	4, 0x90
.LBB40_100:
.Ltmp417:
	.loc	5 115 3 is_stmt 1
	leaq	240(%rsp), %rdi
	callq	runtime.mapiternext
.Ltmp418:
	movq	%rbx, 48(%rsp)
	movq	%r13, 16(%rsp)
	jmp	.LBB40_43
.Ltmp533:
.LBB40_101:
	.loc	5 140 11
	movq	32(%rsp), %rbx
.Ltmp534:
	.loc	5 140 12 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB40_103
.Ltmp535:
.Ltmp420:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp421:
.Ltmp536:
.LBB40_103:
	movq	56(%rbx), %rbx
.Ltmp537:
	.loc	5 140 19
	testq	%rbx, %rbx
	jne	.LBB40_105
.Ltmp422:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp423:
.LBB40_105:
	movq	64(%rbx), %rax
.Ltmp538:
	.loc	5 0 19
	movq	%rax, 16(%rsp)
.Ltmp539:
.LBB40_106:
	.loc	5 143 2 is_stmt 1
	movq	32(%rsp), %rbp
.Ltmp540:
	.loc	5 143 3 is_stmt 0
	testq	%rbp, %rbp
	jne	.LBB40_108
.Ltmp541:
.Ltmp424:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp425:
.Ltmp542:
.LBB40_108:
	addq	$64, %rbp
.Ltmp543:
	.loc	5 143 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_111
.Ltmp544:
.Ltmp426:
	movq	%rbp, %rdi
	movq	16(%rsp), %rsi
	callq	runtime.writebarrierptr
.Ltmp427:
.Ltmp545:
	.loc	5 0 11
	movb	$1, %bl
.Ltmp546:
	leaq	15(%rsp), %rbp
	jmp	.LBB40_124
.Ltmp547:
.LBB40_111:
	.loc	5 143 11
	movq	16(%rsp), %rax
	movq	%rax, (%rbp)
	movb	$1, %bl
.Ltmp548:
	.loc	5 0 11
	leaq	15(%rsp), %rbp
	jmp	.LBB40_124
.Ltmp549:
.LBB40_112:
.Ltmp405:
	.loc	5 470 9 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp406:
.Ltmp550:
.LBB40_114:
.Ltmp428:
	.loc	5 0 9 is_stmt 0
	jmp	.LBB40_120
.LBB40_115:
.Ltmp359:
	jmp	.LBB40_120
.LBB40_116:
.Ltmp419:
	jmp	.LBB40_120
.LBB40_117:
.Ltmp395:
	jmp	.LBB40_120
.LBB40_118:
.Ltmp400:
	jmp	.LBB40_120
.LBB40_119:
.Ltmp551:
.Ltmp384:
.LBB40_120:
.Ltmp429:
	leaq	15(%rsp), %rdi
	.loc	5 145 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp430:
	.loc	5 0 1 is_stmt 0
	movb	$1, %bl
	xorl	%eax, %eax
	movq	%rax, 16(%rsp)
.Ltmp552:
	leaq	15(%rsp), %rbp
	jmp	.LBB40_124
.Ltmp553:
.LBB40_122:
.Ltmp431:
	movq	%rax, %r14
	xorl	%eax, %eax
	movq	%rax, 16(%rsp)
	xorl	%ebx, %ebx
.Ltmp554:
	leaq	15(%rsp), %rbp
	jmp	.LBB40_124
.Ltmp555:
.LBB40_123:
.Ltmp434:
	.loc	5 145 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp556:
	.p2align	4, 0x90
.LBB40_124:
.Ltmp432:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp433:
.Ltmp557:
	.loc	5 0 1
	testb	%bl, %bl
	je	.LBB40_127
.Ltmp558:
	.loc	5 77 3 is_stmt 1
	movq	16(%rsp), %rax
	addq	$344, %rsp
.Ltmp559:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp560:
.LBB40_127:
	.cfi_def_cfa_offset 400
	.loc	5 0 3 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end40:
	.size	command_line_arguments.Parser.Parse, .Lfunc_end40-command_line_arguments.Parser.Parse
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table40:
.Lexception0:
	.byte	255
	.byte	3
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40
	.uleb128 .Ltmp333-.Lfunc_begin40
	.byte	0
	.byte	0
	.uleb128 .Ltmp333-.Lfunc_begin40
	.uleb128 .Ltmp342-.Ltmp333
	.uleb128 .Ltmp428-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp343-.Lfunc_begin40
	.uleb128 .Ltmp356-.Ltmp343
	.uleb128 .Ltmp359-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp360-.Lfunc_begin40
	.uleb128 .Ltmp371-.Ltmp360
	.uleb128 .Ltmp428-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp372-.Lfunc_begin40
	.uleb128 .Ltmp379-.Ltmp372
	.uleb128 .Ltmp419-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp380-.Lfunc_begin40
	.uleb128 .Ltmp383-.Ltmp380
	.uleb128 .Ltmp384-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp407-.Lfunc_begin40
	.uleb128 .Ltmp390-.Ltmp407
	.uleb128 .Ltmp419-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp396-.Lfunc_begin40
	.uleb128 .Ltmp399-.Ltmp396
	.uleb128 .Ltmp400-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp391-.Lfunc_begin40
	.uleb128 .Ltmp394-.Ltmp391
	.uleb128 .Ltmp395-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp401-.Lfunc_begin40
	.uleb128 .Ltmp418-.Ltmp401
	.uleb128 .Ltmp419-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp420-.Lfunc_begin40
	.uleb128 .Ltmp406-.Ltmp420
	.uleb128 .Ltmp428-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp429-.Lfunc_begin40
	.uleb128 .Ltmp430-.Ltmp429
	.uleb128 .Ltmp431-.Lfunc_begin40
	.byte	0
	.uleb128 .Ltmp430-.Lfunc_begin40
	.uleb128 .Ltmp432-.Ltmp430
	.byte	0
	.byte	0
	.uleb128 .Ltmp432-.Lfunc_begin40
	.uleb128 .Ltmp433-.Ltmp432
	.uleb128 .Ltmp434-.Lfunc_begin40
	.byte	1
	.uleb128 .Ltmp433-.Lfunc_begin40
	.uleb128 .Lfunc_end40-.Ltmp433
	.byte	0
	.byte	0
.Lcst_end0:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase0:
	.p2align	2

	.section	.text.command_line_arguments.Parser.SetFilename,"ax",@progbits
	.globl	command_line_arguments.Parser.SetFilename
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.SetFilename,@function
command_line_arguments.Parser.SetFilename:
.Lfunc_begin41:
	.loc	5 38 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB41_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB41_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
.Ltmp561:
	.loc	5 39 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB41_7
.Ltmp562:
	.loc	5 0 3 is_stmt 0
	movq	%rdi, %rax
.Ltmp563:
	.loc	5 39 3
	addq	$8, %rax
	.loc	5 39 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB41_6
	.loc	5 0 13
	leaq	8(%rsp), %rdx
	.loc	5 39 13
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB41_6:
	.cfi_def_cfa_offset 32
	movups	8(%rsp), %xmm0
	movups	%xmm0, (%rax)
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB41_7:
	.cfi_def_cfa_offset 32
.Ltmp564:
	.loc	5 39 3
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp565:
.Lfunc_end41:
	.size	command_line_arguments.Parser.SetFilename, .Lfunc_end41-command_line_arguments.Parser.SetFilename
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.SetVirtualFilesystem,"ax",@progbits
	.globl	command_line_arguments.Parser.SetVirtualFilesystem
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.SetVirtualFilesystem,@function
command_line_arguments.Parser.SetVirtualFilesystem:
.Lfunc_begin42:
	.loc	5 42 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB42_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB42_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
.Ltmp566:
	.loc	5 43 3 prologue_end
	testq	%rdi, %rdi
	je	.LBB42_7
.Ltmp567:
	.loc	5 0 3 is_stmt 0
	movq	%rdi, %rax
.Ltmp568:
	.loc	5 43 3
	addq	$24, %rax
	.loc	5 43 7
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB42_6
	.loc	5 0 7
	leaq	8(%rsp), %rdx
	.loc	5 43 7
	movl	$net_http.FileSystem..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB42_6:
	.cfi_def_cfa_offset 32
	movups	8(%rsp), %xmm0
	movups	%xmm0, (%rax)
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB42_7:
	.cfi_def_cfa_offset 32
.Ltmp569:
	.loc	5 43 3
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp570:
.Lfunc_end42:
	.size	command_line_arguments.Parser.SetVirtualFilesystem, .Lfunc_end42-command_line_arguments.Parser.SetVirtualFilesystem
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.advance,"ax",@progbits
	.globl	command_line_arguments.Parser.advance
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.advance,@function
command_line_arguments.Parser.advance:
.Lfunc_begin43:
	.loc	5 217 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB43_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB43_2:
.Ltmp571:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	5 218 20 prologue_end
	testq	%rdi, %rdi
	je	.LBB43_7
.Ltmp572:
	.loc	5 0 20 is_stmt 0
	movq	%rdi, %rbx
.Ltmp573:
	.loc	5 218 20
	movq	(%rdi), %rdi
	.loc	5 218 28
	callq	command_line_arguments.scanner.Next
	.loc	5 218 3
	addq	$40, %rbx
.Ltmp574:
	.loc	5 218 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB43_6
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB43_6:
	.cfi_def_cfa_offset 16
	movq	%rax, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB43_7:
	.cfi_def_cfa_offset 16
.Ltmp575:
	.loc	5 218 20
	movl	$6, %edi
.Ltmp576:
	callq	__go_runtime_error
.Ltmp577:
.Lfunc_end43:
	.size	command_line_arguments.Parser.advance, .Lfunc_end43-command_line_arguments.Parser.advance
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.expect,"ax",@progbits
	.globl	command_line_arguments.Parser.expect
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.expect,@function
command_line_arguments.Parser.expect:
.Lfunc_begin44:
	.loc	5 208 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB44_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB44_2:
.Ltmp578:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	.loc	5 209 6 prologue_end
	testq	%rdi, %rdi
	je	.LBB44_6
.Ltmp579:
	movq	40(%rdi), %rbx
.Ltmp580:
	.loc	5 209 19 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB44_6
.Ltmp581:
	.loc	5 209 25
	cmpl	%esi, (%rbx)
	jne	.LBB44_7
.Ltmp582:
	.loc	5 213 3 is_stmt 1
	callq	command_line_arguments.Parser.advance
.Ltmp583:
	.loc	5 214 2
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
.Ltmp584:
	.cfi_def_cfa_offset 8
	retq
.LBB44_6:
	.cfi_def_cfa_offset 32
.Ltmp585:
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
.Ltmp586:
	callq	__go_runtime_error
.Ltmp587:
.LBB44_7:
	.loc	5 210 3 is_stmt 1
	movl	$string..d, %edi
.Ltmp588:
	callq	runtime.newobject
.Ltmp589:
	movq	%rax, %rbx
.Ltmp590:
	.loc	5 0 3 is_stmt 0
	movups	.Lconst.328(%rip), %xmm0
	movaps	%xmm0, (%rsp)
	movq	%rsp, %rdx
	.loc	5 210 3
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp591:
.Lfunc_end44:
	.size	command_line_arguments.Parser.expect, .Lfunc_end44-command_line_arguments.Parser.expect
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parse,"ax",@progbits
	.globl	command_line_arguments.Parser.parse
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parse,@function
command_line_arguments.Parser.parse:
.Lfunc_begin45:
	.loc	5 175 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB45_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB45_2:
.Ltmp592:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	5 176 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB45_22
.Ltmp593:
	movq	40(%rdi), %rax
	.loc	5 176 23 is_stmt 0
	testq	%rax, %rax
	je	.LBB45_22
.Ltmp594:
	movl	(%rax), %ebx
	leal	20(%rbx), %eax
	cmpl	$18, %eax
	ja	.LBB45_21
.Ltmp595:
	.loc	5 0 23
	jmpq	*.LJTI45_0(,%rax,8)
.Ltmp596:
.LBB45_20:
	.loc	5 202 11 is_stmt 1
	callq	command_line_arguments.Parser.parseMixinCall
.Ltmp597:
	movq	%rax, %rcx
.Ltmp598:
	.loc	5 202 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall, %eax
	jmp	.LBB45_13
.Ltmp599:
.LBB45_14:
	.loc	5 190 11 is_stmt 1
	callq	command_line_arguments.Parser.parseTag
.Ltmp600:
	movq	%rax, %rcx
.Ltmp601:
	.loc	5 190 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag, %eax
	jmp	.LBB45_13
.Ltmp602:
.LBB45_7:
	.loc	5 180 11 is_stmt 1
	callq	command_line_arguments.Parser.parseComment
.Ltmp603:
	movq	%rax, %rcx
.Ltmp604:
	.loc	5 180 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment, %eax
	jmp	.LBB45_13
.Ltmp605:
.LBB45_6:
	.loc	5 178 11 is_stmt 1
	callq	command_line_arguments.Parser.parseDoctype
.Ltmp606:
	movq	%rax, %rcx
.Ltmp607:
	.loc	5 178 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype, %eax
	jmp	.LBB45_13
.Ltmp608:
.LBB45_19:
	.loc	5 200 11 is_stmt 1
	callq	command_line_arguments.Parser.parseMixin
.Ltmp609:
	movq	%rax, %rcx
.Ltmp610:
	.loc	5 200 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin, %eax
	jmp	.LBB45_13
.Ltmp611:
.LBB45_9:
	.loc	5 184 11 is_stmt 1
	callq	command_line_arguments.Parser.parseIf
.Ltmp612:
	movq	%rax, %rcx
.Ltmp613:
	.loc	5 184 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition, %eax
	jmp	.LBB45_13
.Ltmp614:
.LBB45_17:
	.loc	5 196 11 is_stmt 1
	callq	command_line_arguments.Parser.parseExtends
.Ltmp615:
	.loc	5 0 11 is_stmt 0
	jmp	.LBB45_12
.LBB45_16:
.Ltmp616:
	.loc	5 194 11 is_stmt 1
	callq	command_line_arguments.Parser.parseNamedBlock
.Ltmp617:
	.loc	5 0 11 is_stmt 0
	jmp	.LBB45_12
.LBB45_11:
.Ltmp618:
	.loc	5 188 11 is_stmt 1
	callq	command_line_arguments.Parser.parseImport
.Ltmp619:
	.loc	5 0 11 is_stmt 0
	jmp	.LBB45_12
.LBB45_15:
.Ltmp620:
	.loc	5 192 11 is_stmt 1
	callq	command_line_arguments.Parser.parseAssignment
.Ltmp621:
	movq	%rax, %rcx
.Ltmp622:
	.loc	5 192 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment, %eax
	jmp	.LBB45_13
.Ltmp623:
.LBB45_10:
	.loc	5 186 11 is_stmt 1
	callq	command_line_arguments.Parser.parseEach
.Ltmp624:
	movq	%rax, %rcx
.Ltmp625:
	.loc	5 186 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each, %eax
	jmp	.LBB45_13
.Ltmp626:
.LBB45_8:
	.loc	5 182 11 is_stmt 1
	callq	command_line_arguments.Parser.parseText
.Ltmp627:
	movq	%rax, %rcx
.Ltmp628:
	.loc	5 182 3 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text, %eax
	jmp	.LBB45_13
.Ltmp629:
.LBB45_18:
	.loc	5 198 11 is_stmt 1
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	command_line_arguments.Parser.parseBlock
.Ltmp630:
.LBB45_12:
	.loc	5 0 11 is_stmt 0
	movq	%rax, %rcx
.Ltmp631:
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block, %eax
.Ltmp632:
.LBB45_13:
	movq	%rcx, %rdx
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp633:
.LBB45_21:
	.cfi_def_cfa_offset 112
	.loc	5 205 12 is_stmt 1
	movl	$int32..d, %edi
.Ltmp634:
	callq	runtime.newobject
	movl	%ebx, (%rax)
	movq	$int32..d, 64(%rsp)
	movq	%rax, 72(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.325, %edi
	movl	$20, %esi
	callq	fmt.Sprintf
	movq	%rax, %r15
	movq	%rdx, %r14
	.loc	5 205 2 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 48(%rsp)
	movq	%r14, 56(%rsp)
	leaq	48(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp635:
.LBB45_22:
	.loc	5 0 2
	movl	$6, %edi
.Ltmp636:
	callq	__go_runtime_error
.Lfunc_end45:
	.size	command_line_arguments.Parser.parse, .Lfunc_end45-command_line_arguments.Parser.parse
	.cfi_endproc
	.section	.rodata.command_line_arguments.Parser.parse,"a",@progbits
	.p2align	3
.LJTI45_0:
	.quad	.LBB45_20
	.quad	.LBB45_19
	.quad	.LBB45_17
	.quad	.LBB45_16
	.quad	.LBB45_11
	.quad	.LBB45_15
	.quad	.LBB45_10
	.quad	.LBB45_21
	.quad	.LBB45_9
	.quad	.LBB45_21
	.quad	.LBB45_8
	.quad	.LBB45_14
	.quad	.LBB45_21
	.quad	.LBB45_21
	.quad	.LBB45_21
	.quad	.LBB45_21
	.quad	.LBB45_18
	.quad	.LBB45_7
	.quad	.LBB45_6

	.section	.text.command_line_arguments.Parser.parseAssignment,"ax",@progbits
	.globl	command_line_arguments.Parser.parseAssignment
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseAssignment,@function
command_line_arguments.Parser.parseAssignment:
.Lfunc_begin46:
	.loc	5 382 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB46_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB46_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$88, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
.Ltmp637:
	.loc	5 383 10 prologue_end
	movl	$-15, %esi
	callq	command_line_arguments.Parser.expect
	movups	.Lconst.344(%rip), %xmm0
	movaps	%xmm0, 32(%rsp)
	.loc	5 384 27
	testq	%rax, %rax
	je	.LBB46_13
.Ltmp638:
	.loc	5 0 27 is_stmt 0
	movq	%rax, %rbx
.Ltmp639:
	.loc	5 384 27
	movq	24(%rax), %rsi
	leaq	32(%rsp), %rdx
	.loc	5 384 32
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	.loc	5 384 10
	movups	(%rax), %xmm0
	movups	8(%rbx), %xmm1
	movups	%xmm0, 16(%rsp)
	movups	%xmm1, (%rsp)
.Ltmp640:
	.loc	2 225 11 is_stmt 1
	movl	$command_line_arguments.Assignment..d, %edi
	callq	runtime.newobject
	.loc	2 226 7
	testq	%rax, %rax
	je	.LBB46_13
.Ltmp641:
	.loc	2 0 7 is_stmt 0
	movq	%rax, %rbx
.Ltmp642:
	.loc	2 226 7
	leaq	40(%rax), %rsi
	.loc	2 226 10
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB46_5
.Ltmp643:
	.loc	2 0 10
	leaq	16(%rsp), %rdx
	.loc	2 226 10
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	.loc	2 227 7 is_stmt 1
	leaq	56(%rbx), %rsi
	.loc	2 227 19 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB46_6
.Ltmp644:
	.loc	2 0 19
	movq	%rsp, %rdx
	.loc	2 227 19
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB46_9
.Ltmp645:
.LBB46_5:
	.loc	2 226 10 is_stmt 1
	movups	16(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	2 227 7
	leaq	56(%rbx), %rsi
.Ltmp646:
.LBB46_6:
	.loc	2 227 19 is_stmt 0
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp647:
.LBB46_9:
	.loc	2 0 19
	leaq	48(%rsp), %rdi
	.loc	5 385 25 is_stmt 1
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 385 22 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB46_12
.Ltmp648:
	.loc	5 0 22
	leaq	48(%rsp), %rdx
	.loc	5 385 22
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB46_11
.Ltmp649:
.LBB46_12:
	movq	80(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	48(%rsp), %xmm0
	movups	64(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp650:
.LBB46_11:
	.loc	5 386 2 is_stmt 1
	movq	%rbx, %rax
	addq	$88, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp651:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp652:
	.cfi_def_cfa_offset 8
	retq
.Ltmp653:
.LBB46_13:
	.cfi_def_cfa_offset 112
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end46:
	.size	command_line_arguments.Parser.parseAssignment, .Lfunc_end46-command_line_arguments.Parser.parseAssignment
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseBlock,"ax",@progbits
	.globl	command_line_arguments.Parser.parseBlock
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseBlock,@function
command_line_arguments.Parser.parseBlock:
.Lfunc_begin47:
	.loc	5 233 0 is_stmt 1
	.cfi_startproc
	leaq	-952(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB47_2
	movq	%r10, %rax
	movabsq	$952, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB47_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$904, %rsp
	.cfi_def_cfa_offset 960
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r12
	movq	%rsi, %r15
	movq	%rdi, %r14
.Ltmp654:
	.loc	5 234 3 prologue_end
	movl	$-4, %esi
	callq	command_line_arguments.Parser.expect
	.loc	5 235 11
	callq	command_line_arguments.newBlock
	movq	%rax, %rbx
.Ltmp655:
	.loc	5 0 11 is_stmt 0
	leaq	744(%rsp), %rdi
	.loc	5 236 26 is_stmt 1
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	movq	%rbx, 24(%rsp)
.Ltmp656:
	.loc	5 236 7 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB47_68
.Ltmp657:
	.loc	5 236 23
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB47_5
.Ltmp658:
	.loc	5 0 23
	leaq	744(%rsp), %rdx
	.loc	5 236 23
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	24(%rsp), %rsi
	callq	runtime.typedmemmove
	.loc	5 239 7 is_stmt 1
	testq	%r14, %r14
	jne	.LBB47_6
	jmp	.LBB47_68
.Ltmp659:
.LBB47_5:
	.loc	5 236 23
	movq	776(%rsp), %rax
	movq	24(%rsp), %rcx
	movq	%rax, 32(%rcx)
	movups	744(%rsp), %xmm0
	movups	760(%rsp), %xmm1
	movups	%xmm1, 16(%rcx)
	movups	%xmm0, (%rcx)
	.loc	5 239 7
	testq	%r14, %r14
	je	.LBB47_68
.Ltmp660:
.LBB47_6:
	movq	40(%r14), %rax
	.loc	5 239 21 is_stmt 0
	testq	%rax, %rax
	je	.LBB47_67
.Ltmp661:
	.loc	5 0 21
	movl	$25, %ebx
	movq	%r15, 152(%rsp)
.Ltmp662:
	.p2align	4, 0x90
.LBB47_8:
	.loc	5 239 45
	movl	(%rax), %eax
	addl	$11, %eax
	cmpl	$10, %eax
	ja	.LBB47_28
.Ltmp663:
	.loc	5 0 45
	btl	%eax, %ebx
	jae	.LBB47_19
.Ltmp664:
	.loc	5 252 7 is_stmt 1
	movl	$type...1command_line_arguments.Tag, %edi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	runtime.ifaceI2T2P
.Ltmp665:
	.loc	5 252 4 is_stmt 0
	testb	$1, %dl
	je	.LBB47_70
.Ltmp666:
	.loc	5 0 4
	movq	%rax, %rbp
.Ltmp667:
	.loc	5 253 23 is_stmt 1
	movq	40(%r14), %rax
	.loc	5 253 36 is_stmt 0
	testq	%rax, %rax
	je	.LBB47_68
.Ltmp668:
	movl	(%rax), %esi
	.loc	5 253 14
	movq	%r14, %rdi
	callq	command_line_arguments.Parser.expect
.Ltmp669:
	.loc	5 0 14
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 720(%rsp)
	.loc	5 254 17 is_stmt 1
	testq	%rax, %rax
	je	.LBB47_68
.Ltmp670:
	.loc	5 0 17 is_stmt 0
	movq	%rax, %r13
.Ltmp671:
	.loc	5 254 17
	movq	24(%rax), %rsi
	.loc	5 254 22
	movl	$type..map.6string.7string, %edi
	leaq	720(%rsp), %rdx
	callq	runtime.mapaccess1
	movups	(%rax), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	5 256 16 is_stmt 1
	movl	(%r13), %eax
	cmpl	$-11, %eax
	je	.LBB47_24
.Ltmp672:
	.loc	5 0 16 is_stmt 0
	cmpl	$-8, %eax
	je	.LBB47_21
.Ltmp673:
	cmpl	$-7, %eax
	jne	.LBB47_66
.Ltmp674:
	.loc	5 258 57 is_stmt 1
	leaq	864(%rsp), %rdi
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 258 9 is_stmt 0
	testq	%rbp, %rbp
	je	.LBB47_68
.Ltmp675:
	.loc	5 0 9
	movups	8(%r13), %xmm0
	movaps	%xmm0, 704(%rsp)
	movups	72(%rbp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	88(%rbp), %rax
	movq	%rax, 112(%rsp)
	.loc	5 258 23
	movq	104(%rsp), %rbx
	.loc	5 258 46
	movups	864(%rsp), %xmm0
	movups	880(%rsp), %xmm1
	movaps	%xmm0, 608(%rsp)
	movaps	%xmm1, 624(%rsp)
	movq	896(%rsp), %rax
	movq	%rax, 640(%rsp)
	movups	.Lconst.333(%rip), %xmm0
	leaq	648(%rsp), %rax
	movups	%xmm0, (%rax)
	movaps	704(%rsp), %xmm0
	movups	%xmm0, 16(%rax)
	movb	$1, 680(%rsp)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, 40(%rax)
	.loc	5 258 23
	leaq	1(%rbx), %rdx
	movq	112(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB47_36
.Ltmp676:
	movq	112(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Attribute..d, %esi
	leaq	296(%rsp), %rdi
	callq	runtime.growslice
	movq	296(%rsp), %rsi
	movq	304(%rsp), %rdx
	movq	312(%rsp), %rax
	jmp	.LBB47_39
.Ltmp677:
	.p2align	4, 0x90
.LBB47_19:
	.loc	5 0 23
	cmpl	$5, %eax
	jne	.LBB47_27
.Ltmp678:
	.loc	5 244 5 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.Parser.advance
	jmp	.LBB47_66
.Ltmp679:
.LBB47_21:
	.loc	5 260 57
	leaq	824(%rsp), %rdi
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 260 9 is_stmt 0
	testq	%rbp, %rbp
	je	.LBB47_68
.Ltmp680:
	.loc	5 0 9
	movups	8(%r13), %xmm0
	movaps	%xmm0, 592(%rsp)
	movups	72(%rbp), %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	88(%rbp), %rax
	movq	%rax, 80(%rsp)
	.loc	5 260 23
	movq	72(%rsp), %rbx
	.loc	5 260 46
	movups	824(%rsp), %xmm0
	movups	840(%rsp), %xmm1
	movaps	%xmm0, 496(%rsp)
	movaps	%xmm1, 512(%rsp)
	movq	856(%rsp), %rax
	movq	%rax, 528(%rsp)
	movups	.Lconst.335(%rip), %xmm0
	leaq	536(%rsp), %rax
	movups	%xmm0, (%rax)
	movaps	592(%rsp), %xmm0
	movups	%xmm0, 16(%rax)
	movb	$1, 568(%rsp)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, 40(%rax)
	.loc	5 260 23
	leaq	1(%rbx), %rdx
	movq	80(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB47_29
.Ltmp681:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Attribute..d, %esi
	leaq	272(%rsp), %rdi
	callq	runtime.growslice
	movq	272(%rsp), %rsi
	movq	280(%rsp), %rdx
	movq	288(%rsp), %rax
	jmp	.LBB47_32
.Ltmp682:
.LBB47_24:
	.loc	5 0 23
	movq	%r12, %r15
.Ltmp683:
	.loc	5 262 57 is_stmt 1
	leaq	784(%rsp), %rdi
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 262 9 is_stmt 0
	testq	%rbp, %rbp
	je	.LBB47_68
.Ltmp684:
	.loc	5 0 9
	movups	.Lconst.337(%rip), %xmm0
	movaps	%xmm0, 480(%rsp)
	.loc	5 262 81
	movq	24(%r13), %rsi
	.loc	5 262 86
	movl	$type..map.6string.7string, %edi
	leaq	480(%rsp), %rdx
	callq	runtime.mapaccess1
	movq	%rax, %r12
	movups	.Lconst.339(%rip), %xmm0
	movaps	%xmm0, 464(%rsp)
	.loc	5 262 103
	movq	24(%r13), %rsi
	.loc	5 262 108
	movl	$type..map.6string.7string, %edi
	leaq	464(%rsp), %rdx
	callq	runtime.mapaccess1
	movups	8(%r13), %xmm0
	movaps	%xmm0, 448(%rsp)
	movups	(%r12), %xmm0
	movaps	%xmm0, 432(%rsp)
	.loc	5 262 117
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movl	$.Lconst.340, %edx
	movl	$3, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	movups	72(%rbp), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	88(%rbp), %rax
	movq	%rax, 48(%rsp)
	.loc	5 262 23
	movq	40(%rsp), %rbx
	.loc	5 262 46
	movups	784(%rsp), %xmm0
	movups	800(%rsp), %xmm1
	movaps	%xmm0, 336(%rsp)
	movaps	%xmm1, 352(%rsp)
	movq	816(%rsp), %rax
	movq	%rax, 368(%rsp)
	movaps	448(%rsp), %xmm0
	leaq	376(%rsp), %rax
	movups	%xmm0, (%rax)
	movaps	432(%rsp), %xmm0
	movups	%xmm0, 16(%rax)
	sete	408(%rsp)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, 40(%rax)
	.loc	5 262 23
	leaq	1(%rbx), %rdx
	movq	48(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB47_43
.Ltmp685:
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Attribute..d, %esi
	leaq	248(%rsp), %rdi
	callq	runtime.growslice
	movq	248(%rsp), %rsi
	movq	256(%rsp), %rdx
	movq	264(%rsp), %rax
	jmp	.LBB47_46
.Ltmp686:
.LBB47_27:
	.loc	5 0 23
	movl	$1088, %ecx
	btl	%eax, %ecx
	jb	.LBB47_67
.Ltmp687:
.LBB47_28:
	.loc	5 271 15 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.Parser.parse
	.loc	5 271 8 is_stmt 0
	movq	24(%rsp), %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.Block.push
	jmp	.LBB47_66
.Ltmp688:
.LBB47_29:
	.loc	5 260 23 is_stmt 1
	cmpq	%rax, %rdx
	jg	.LBB47_71
.Ltmp689:
	.loc	5 0 23 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB47_71
.Ltmp690:
	.loc	5 260 23
	movq	64(%rsp), %rsi
.Ltmp691:
.LBB47_32:
	movq	%rsi, 64(%rsp)
	movq	%rdx, 72(%rsp)
	movq	%rax, 80(%rsp)
	testq	%rbx, %rbx
	js	.LBB47_69
.Ltmp692:
	.loc	5 0 23
	cmpq	%rdx, %rbx
	jge	.LBB47_69
.Ltmp693:
	.loc	5 260 23
	leaq	(%rbx,%rbx,2), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB47_50
.Ltmp694:
	movl	$command_line_arguments.Attribute..d, %edi
	leaq	496(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$25, %ebx
	jmp	.LBB47_52
.Ltmp695:
.LBB47_36:
	.loc	5 258 23 is_stmt 1
	cmpq	%rax, %rdx
	jg	.LBB47_71
.Ltmp696:
	.loc	5 0 23 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB47_71
.Ltmp697:
	.loc	5 258 23
	movq	96(%rsp), %rsi
.Ltmp698:
.LBB47_39:
	movq	%rsi, 96(%rsp)
	movq	%rdx, 104(%rsp)
	movq	%rax, 112(%rsp)
	testq	%rbx, %rbx
	js	.LBB47_69
.Ltmp699:
	.loc	5 0 23
	cmpq	%rdx, %rbx
	jge	.LBB47_69
.Ltmp700:
	.loc	5 258 23
	leaq	(%rbx,%rbx,2), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB47_60
.Ltmp701:
	movl	$command_line_arguments.Attribute..d, %edi
	leaq	608(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$25, %ebx
	jmp	.LBB47_62
.Ltmp702:
.LBB47_43:
	.loc	5 262 23 is_stmt 1
	cmpq	%rax, %rdx
	jg	.LBB47_71
.Ltmp703:
	.loc	5 0 23 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB47_71
.Ltmp704:
	.loc	5 262 23
	movq	32(%rsp), %rsi
.Ltmp705:
.LBB47_46:
	.loc	5 0 23
	movq	%r15, %r12
	.loc	5 262 23
	movq	%rsi, 32(%rsp)
	movq	%rdx, 40(%rsp)
	movq	%rax, 48(%rsp)
	testq	%rbx, %rbx
	movq	152(%rsp), %r15
	js	.LBB47_69
.Ltmp706:
	.loc	5 0 23
	cmpq	%rdx, %rbx
	jge	.LBB47_69
.Ltmp707:
	.loc	5 262 23
	leaq	(%rbx,%rbx,2), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB47_55
.Ltmp708:
	movl	$command_line_arguments.Attribute..d, %edi
	leaq	336(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$25, %ebx
	jmp	.LBB47_57
.Ltmp709:
.LBB47_50:
	.loc	5 260 23 is_stmt 1
	testq	%rsi, %rsi
	movl	$25, %ebx
	je	.LBB47_68
.Ltmp710:
	movaps	576(%rsp), %xmm0
	movups	%xmm0, 80(%rsi)
	movaps	560(%rsp), %xmm0
	movups	%xmm0, 64(%rsi)
	movaps	496(%rsp), %xmm0
	movaps	512(%rsp), %xmm1
	movaps	528(%rsp), %xmm2
	movaps	544(%rsp), %xmm3
	movups	%xmm3, 48(%rsi)
	movups	%xmm2, 32(%rsi)
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp711:
.LBB47_52:
	.loc	5 0 23 is_stmt 0
	addq	$72, %rbp
	movq	80(%rsp), %rax
	movq	%rax, 208(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	5 260 21
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB47_54
.Ltmp712:
	movl	$type...6.7command_line_arguments.Attribute, %edi
	movq	%rbp, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB47_66
.Ltmp713:
.LBB47_54:
	movq	208(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	192(%rsp), %xmm0
	jmp	.LBB47_65
.Ltmp714:
.LBB47_55:
	.loc	5 262 23 is_stmt 1
	testq	%rsi, %rsi
	movl	$25, %ebx
	je	.LBB47_68
.Ltmp715:
	movaps	416(%rsp), %xmm0
	movups	%xmm0, 80(%rsi)
	movaps	400(%rsp), %xmm0
	movups	%xmm0, 64(%rsi)
	movaps	336(%rsp), %xmm0
	movaps	352(%rsp), %xmm1
	movaps	368(%rsp), %xmm2
	movaps	384(%rsp), %xmm3
	movups	%xmm3, 48(%rsi)
	movups	%xmm2, 32(%rsi)
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp716:
.LBB47_57:
	.loc	5 0 23 is_stmt 0
	addq	$72, %rbp
	movq	48(%rsp), %rax
	movq	%rax, 176(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
	.loc	5 262 21
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB47_59
.Ltmp717:
	movl	$type...6.7command_line_arguments.Attribute, %edi
	movq	%rbp, %rsi
	leaq	160(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB47_66
.Ltmp718:
.LBB47_59:
	movq	176(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	160(%rsp), %xmm0
	jmp	.LBB47_65
.Ltmp719:
.LBB47_60:
	.loc	5 258 23 is_stmt 1
	testq	%rsi, %rsi
	movl	$25, %ebx
	je	.LBB47_68
.Ltmp720:
	movaps	688(%rsp), %xmm0
	movups	%xmm0, 80(%rsi)
	movaps	672(%rsp), %xmm0
	movups	%xmm0, 64(%rsi)
	movaps	608(%rsp), %xmm0
	movaps	624(%rsp), %xmm1
	movaps	640(%rsp), %xmm2
	movaps	656(%rsp), %xmm3
	movups	%xmm3, 48(%rsi)
	movups	%xmm2, 32(%rsi)
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp721:
.LBB47_62:
	.loc	5 0 23 is_stmt 0
	addq	$72, %rbp
	movq	112(%rsp), %rax
	movq	%rax, 240(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 224(%rsp)
	.loc	5 258 21
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB47_64
.Ltmp722:
	movl	$type...6.7command_line_arguments.Attribute, %edi
	movq	%rbp, %rsi
	leaq	224(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB47_66
.Ltmp723:
.LBB47_64:
	movq	240(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	224(%rsp), %xmm0
.Ltmp724:
.LBB47_65:
	.loc	5 0 21
	movups	%xmm0, (%rbp)
.Ltmp725:
	.p2align	4, 0x90
.LBB47_66:
	.loc	5 239 7 is_stmt 1
	movq	40(%r14), %rax
	.loc	5 239 21 is_stmt 0
	testq	%rax, %rax
	jne	.LBB47_8
.Ltmp726:
.LBB47_67:
	.loc	5 274 3 is_stmt 1
	movl	$-5, %esi
	movq	%r14, %rdi
	callq	command_line_arguments.Parser.expect
	.loc	5 276 2
	movq	24(%rsp), %rax
	addq	$904, %rsp
.Ltmp727:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp728:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB47_68:
	.cfi_def_cfa_offset 960
.Ltmp729:
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp730:
.LBB47_69:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp731:
.LBB47_70:
	.loc	5 267 5 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp732:
	movq	%rax, %rbx
	movups	.Lconst.343(%rip), %xmm0
	movaps	%xmm0, 320(%rsp)
	leaq	320(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp733:
.LBB47_71:
	.loc	5 0 5 is_stmt 0
	movl	$3, %edi
	callq	__go_runtime_error
.Lfunc_end47:
	.size	command_line_arguments.Parser.parseBlock, .Lfunc_end47-command_line_arguments.Parser.parseBlock
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseComment,"ax",@progbits
	.globl	command_line_arguments.Parser.parseComment
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseComment,@function
command_line_arguments.Parser.parseComment:
.Lfunc_begin48:
	.loc	5 362 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB48_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB48_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
.Ltmp734:
	.loc	5 363 10 prologue_end
	movl	$-3, %esi
	callq	command_line_arguments.Parser.expect
	.loc	5 364 24
	testq	%rax, %rax
	je	.LBB48_18
.Ltmp735:
	.loc	5 0 24 is_stmt 0
	movq	%rax, %r15
.Ltmp736:
	.loc	5 364 10
	movups	8(%rax), %xmm0
	movups	%xmm0, (%rsp)
.Ltmp737:
	.loc	2 75 8 is_stmt 1
	movl	$command_line_arguments.Comment..d, %edi
	callq	runtime.newobject
	.loc	2 76 4
	testq	%rax, %rax
	je	.LBB48_18
.Ltmp738:
	.loc	2 0 4 is_stmt 0
	movq	%rax, %rbx
.Ltmp739:
	.loc	2 76 4
	leaq	40(%rax), %rsi
	.loc	2 76 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB48_5
.Ltmp740:
	.loc	2 0 11
	movq	%rsp, %rdx
	.loc	2 76 11
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	.loc	2 77 4 is_stmt 1
	leaq	56(%rbx), %rdi
	.loc	2 77 11 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB48_6
.Ltmp741:
	xorl	%esi, %esi
	callq	runtime.writebarrierptr
	jmp	.LBB48_9
.Ltmp742:
.LBB48_5:
	.loc	2 76 11 is_stmt 1
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	2 77 4
	leaq	56(%rbx), %rdi
.Ltmp743:
.LBB48_6:
	.loc	2 77 11 is_stmt 0
	movq	$0, (%rdi)
.Ltmp744:
.LBB48_9:
	.loc	2 78 12 is_stmt 1
	movb	$0, 64(%rbx)
	leaq	40(%rsp), %rdi
.Ltmp745:
	.loc	5 365 25
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 365 22 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB48_19
.Ltmp746:
	.loc	5 0 22
	leaq	40(%rsp), %rdx
	.loc	5 365 22
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB48_11
.Ltmp747:
.LBB48_19:
	movq	72(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	40(%rsp), %xmm0
	movups	56(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp748:
.LBB48_11:
	.loc	5 0 22
	movups	.Lconst.339(%rip), %xmm0
	movaps	%xmm0, 16(%rsp)
	.loc	5 366 19 is_stmt 1
	movq	24(%r15), %rsi
	leaq	16(%rsp), %rdx
	.loc	5 366 24 is_stmt 0
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	.loc	5 366 33
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movl	$.Lconst.355, %edx
	movl	$6, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	.loc	5 366 14
	sete	64(%rbx)
	.loc	5 368 6 is_stmt 1
	testq	%r14, %r14
	je	.LBB48_18
.Ltmp749:
	movq	40(%r14), %rax
	.loc	5 368 19 is_stmt 0
	testq	%rax, %rax
	je	.LBB48_18
.Ltmp750:
	.loc	5 368 25
	cmpl	$-4, (%rax)
	jne	.LBB48_16
.Ltmp751:
	.loc	5 369 17 is_stmt 1
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment, %esi
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	command_line_arguments.Parser.parseBlock
	.loc	5 369 7 is_stmt 0
	movq	%rbx, %rdi
	addq	$56, %rdi
	.loc	5 369 14
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB48_17
.Ltmp752:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB48_16
.Ltmp753:
.LBB48_17:
	movq	%rax, (%rdi)
.Ltmp754:
.LBB48_16:
	.loc	5 372 2 is_stmt 1
	movq	%rbx, %rax
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp755:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp756:
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp757:
	.cfi_def_cfa_offset 8
	retq
.Ltmp758:
.LBB48_18:
	.cfi_def_cfa_offset 112
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end48:
	.size	command_line_arguments.Parser.parseComment, .Lfunc_end48-command_line_arguments.Parser.parseComment
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseDoctype,"ax",@progbits
	.globl	command_line_arguments.Parser.parseDoctype
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseDoctype,@function
command_line_arguments.Parser.parseDoctype:
.Lfunc_begin49:
	.loc	5 355 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB49_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB49_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$56, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
.Ltmp759:
	.loc	5 356 10 prologue_end
	movl	$-2, %esi
	callq	command_line_arguments.Parser.expect
.Ltmp760:
	.loc	5 357 24
	testq	%rax, %rax
	je	.LBB49_11
.Ltmp761:
	.loc	5 357 10 is_stmt 0
	movups	8(%rax), %xmm0
	movups	%xmm0, (%rsp)
.Ltmp762:
	.loc	2 54 8 is_stmt 1
	movl	$command_line_arguments.Doctype..d, %edi
	callq	runtime.newobject
.Ltmp763:
	.loc	2 55 4
	testq	%rax, %rax
	je	.LBB49_11
.Ltmp764:
	.loc	2 0 4 is_stmt 0
	movq	%rax, %rbx
.Ltmp765:
	.loc	2 55 4
	leaq	40(%rax), %rsi
	.loc	2 55 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB49_6
.Ltmp766:
	.loc	2 0 11
	movq	%rsp, %rdx
	.loc	2 55 11
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB49_7
.Ltmp767:
.LBB49_6:
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp768:
.LBB49_7:
	.loc	2 0 11
	leaq	16(%rsp), %rdi
	.loc	5 358 25 is_stmt 1
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 358 22 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB49_10
.Ltmp769:
	.loc	5 0 22
	leaq	16(%rsp), %rdx
	.loc	5 358 22
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB49_9
.Ltmp770:
.LBB49_10:
	movq	48(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	16(%rsp), %xmm0
	movups	32(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp771:
.LBB49_9:
	.loc	5 359 2 is_stmt 1
	movq	%rbx, %rax
	addq	$56, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp772:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp773:
	.cfi_def_cfa_offset 8
	retq
.Ltmp774:
.LBB49_11:
	.cfi_def_cfa_offset 80
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end49:
	.size	command_line_arguments.Parser.parseDoctype, .Lfunc_end49-command_line_arguments.Parser.parseDoctype
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseEach,"ax",@progbits
	.globl	command_line_arguments.Parser.parseEach
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseEach,@function
command_line_arguments.Parser.parseEach:
.Lfunc_begin50:
	.loc	5 305 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB50_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB50_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$120, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
.Ltmp775:
	.loc	5 306 10 prologue_end
	movl	$-14, %esi
	callq	command_line_arguments.Parser.expect
	.loc	5 307 20
	testq	%rax, %rax
	je	.LBB50_22
.Ltmp776:
	.loc	5 0 20 is_stmt 0
	movq	%rax, %r15
.Ltmp777:
	.loc	5 307 9
	movups	8(%rax), %xmm0
	movups	%xmm0, 32(%rsp)
.Ltmp778:
	.loc	2 213 10 is_stmt 1
	movl	$command_line_arguments.Each..d, %edi
	callq	runtime.newobject
	.loc	2 214 6
	testq	%rax, %rax
	je	.LBB50_22
.Ltmp779:
	.loc	2 0 6 is_stmt 0
	movq	%rax, %rbx
.Ltmp780:
	.loc	2 214 6
	leaq	72(%rax), %rsi
	.loc	2 214 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB50_6
.Ltmp781:
	.loc	2 0 18
	leaq	32(%rsp), %rdx
	.loc	2 214 18
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB50_7
.Ltmp782:
.LBB50_6:
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp783:
.LBB50_7:
	.loc	2 0 18
	leaq	80(%rsp), %rdi
	.loc	5 308 24 is_stmt 1
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 308 21 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB50_9
.Ltmp784:
	.loc	5 0 21
	leaq	80(%rsp), %rdx
	.loc	5 308 21
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB50_10
.Ltmp785:
.LBB50_9:
	movq	112(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	80(%rsp), %xmm0
	movups	96(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp786:
.LBB50_10:
	.loc	5 309 5 is_stmt 1
	leaq	40(%rbx), %r12
	movups	.Lconst.344(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	5 309 13 is_stmt 0
	movq	24(%r15), %rsi
	leaq	64(%rsp), %rdx
	.loc	5 309 18
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	movups	(%rax), %xmm0
	movaps	%xmm0, 16(%rsp)
	.loc	5 309 8
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB50_12
.Ltmp787:
	.loc	5 0 8
	leaq	16(%rsp), %rdx
	.loc	5 309 8
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB50_13
.Ltmp788:
.LBB50_12:
	movaps	16(%rsp), %xmm0
	movups	%xmm0, (%r12)
.Ltmp789:
.LBB50_13:
	.loc	5 310 5 is_stmt 1
	leaq	56(%rbx), %r12
	movups	.Lconst.345(%rip), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	5 310 13 is_stmt 0
	movq	24(%r15), %rsi
	leaq	48(%rsp), %rdx
	.loc	5 310 18
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	movups	(%rax), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	5 310 8
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB50_23
.Ltmp790:
	.loc	5 0 8
	movq	%rsp, %rdx
	.loc	5 310 8
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	.loc	5 312 6 is_stmt 1
	testq	%r14, %r14
	jne	.LBB50_16
	jmp	.LBB50_22
.Ltmp791:
.LBB50_23:
	.loc	5 310 8
	movaps	(%rsp), %xmm0
	movups	%xmm0, (%r12)
	.loc	5 312 6
	testq	%r14, %r14
	je	.LBB50_22
.Ltmp792:
.LBB50_16:
	movq	40(%r14), %rax
	.loc	5 312 19 is_stmt 0
	testq	%rax, %rax
	je	.LBB50_22
.Ltmp793:
	.loc	5 312 25
	cmpl	$-4, (%rax)
	jne	.LBB50_20
.Ltmp794:
	.loc	5 313 16 is_stmt 1
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each, %esi
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	command_line_arguments.Parser.parseBlock
	.loc	5 313 6 is_stmt 0
	movq	%rbx, %rdi
	addq	$88, %rdi
	.loc	5 313 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB50_21
.Ltmp795:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB50_20
.Ltmp796:
.LBB50_21:
	movq	%rax, (%rdi)
.Ltmp797:
.LBB50_20:
	.loc	5 316 2 is_stmt 1
	movq	%rbx, %rax
	addq	$120, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp798:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp799:
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp800:
	.cfi_def_cfa_offset 8
	retq
.Ltmp801:
.LBB50_22:
	.cfi_def_cfa_offset 160
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end50:
	.size	command_line_arguments.Parser.parseEach, .Lfunc_end50-command_line_arguments.Parser.parseEach
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseExtends,"ax",@progbits
	.globl	command_line_arguments.Parser.parseExtends
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseExtends,@function
command_line_arguments.Parser.parseExtends:
.Lfunc_begin51:
	.loc	5 221 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB51_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB51_2:
.Ltmp802:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	.loc	5 222 6 prologue_end
	testq	%rdi, %rdi
	je	.LBB51_9
.Ltmp803:
	.loc	5 0 6 is_stmt 0
	movq	%rdi, %rbx
.Ltmp804:
	.loc	5 222 14
	cmpq	$0, 56(%rdi)
	jne	.LBB51_10
.Ltmp805:
	.loc	5 226 10 is_stmt 1
	movl	$-18, %esi
	movq	%rbx, %rdi
	callq	command_line_arguments.Parser.expect
.Ltmp806:
	.loc	5 227 35
	testq	%rax, %rax
	je	.LBB51_9
.Ltmp807:
	.loc	5 227 13 is_stmt 0
	movq	8(%rax), %rsi
	movq	16(%rax), %rdx
	leaq	56(%rbx), %r14
	movq	%rbx, %rdi
	callq	command_line_arguments.Parser.parseRelativeFile
.Ltmp808:
	movq	%rax, %rbx
.Ltmp809:
	.loc	5 228 8 is_stmt 1
	movq	%rax, %rdi
	callq	command_line_arguments.Parser.Parse
	.loc	5 229 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB51_8
.Ltmp810:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB51_7
.Ltmp811:
.LBB51_8:
	movq	%rbx, (%r14)
.Ltmp812:
.LBB51_7:
	.loc	5 230 9
	callq	command_line_arguments.newBlock
.Ltmp813:
	.loc	5 230 2 is_stmt 0
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp814:
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Ltmp815:
.LBB51_9:
	.cfi_def_cfa_offset 48
	.loc	5 0 2
	movl	$6, %edi
	callq	__go_runtime_error
.LBB51_10:
.Ltmp816:
	.loc	5 223 3 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp817:
	.loc	5 0 3 is_stmt 0
	movups	.Lconst.330(%rip), %xmm0
	movaps	%xmm0, (%rsp)
	movq	%rsp, %rdx
	.loc	5 223 3
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp818:
.Lfunc_end51:
	.size	command_line_arguments.Parser.parseExtends, .Lfunc_end51-command_line_arguments.Parser.parseExtends
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseIf,"ax",@progbits
	.globl	command_line_arguments.Parser.parseIf
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseIf,@function
command_line_arguments.Parser.parseIf:
.Lfunc_begin52:
	.loc	5 279 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB52_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB52_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
.Ltmp819:
	.loc	5 280 10 prologue_end
	movl	$-12, %esi
	callq	command_line_arguments.Parser.expect
.Ltmp820:
	.loc	5 281 25
	testq	%rax, %rax
	je	.LBB52_32
.Ltmp821:
	.loc	5 281 9 is_stmt 0
	movups	8(%rax), %xmm0
	movups	%xmm0, (%rsp)
.Ltmp822:
	.loc	2 199 10 is_stmt 1
	movl	$command_line_arguments.Condition..d, %edi
	callq	runtime.newobject
.Ltmp823:
	.loc	2 200 6
	testq	%rax, %rax
	je	.LBB52_32
.Ltmp824:
	.loc	2 0 6 is_stmt 0
	movq	%rax, %r14
.Ltmp825:
	.loc	2 200 6
	leaq	56(%rax), %rsi
	.loc	2 200 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB52_6
.Ltmp826:
	.loc	2 0 18
	movq	%rsp, %rdx
	.loc	2 200 18
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB52_7
.Ltmp827:
.LBB52_6:
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp828:
.LBB52_7:
	.loc	2 0 18
	leaq	32(%rsp), %rdi
	.loc	5 282 24 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 282 21 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB52_17
.Ltmp829:
	.loc	5 0 21
	leaq	32(%rsp), %rdx
	.loc	5 282 21
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	.loc	5 285 10 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB52_10
	jmp	.LBB52_32
.Ltmp830:
.LBB52_17:
	.loc	5 282 21
	movq	64(%rsp), %rax
	movq	%rax, 32(%r14)
	movups	32(%rsp), %xmm0
	movups	48(%rsp), %xmm1
	movups	%xmm1, 16(%r14)
	movups	%xmm0, (%r14)
	.loc	5 285 10
	testq	%rbx, %rbx
	je	.LBB52_32
.Ltmp831:
.LBB52_10:
	movq	40(%rbx), %rax
	.loc	5 285 23 is_stmt 0
	testq	%rax, %rax
	je	.LBB52_32
.Ltmp832:
	.loc	5 0 23
	leaq	40(%r14), %r15
	movq	%r14, %r12
	addq	$48, %r12
.Ltmp833:
	.p2align	4, 0x90
.LBB52_12:
	.loc	5 285 23
	movl	(%rax), %eax
	cmpl	$-13, %eax
	je	.LBB52_20
.Ltmp834:
	.loc	5 0 23
	cmpl	$-4, %eax
	jne	.LBB52_19
.Ltmp835:
	.loc	5 287 19 is_stmt 1
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition, %esi
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	command_line_arguments.Parser.parseBlock
	.loc	5 287 16 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB52_18
.Ltmp836:
	movq	%r15, %rdi
	jmp	.LBB52_16
.Ltmp837:
	.p2align	4, 0x90
.LBB52_20:
	.loc	5 290 4 is_stmt 1
	movl	$-13, %esi
	movq	%rbx, %rdi
	callq	command_line_arguments.Parser.expect
	.loc	5 291 7
	movq	40(%rbx), %rax
	.loc	5 291 20 is_stmt 0
	testq	%rax, %rax
	je	.LBB52_32
.Ltmp838:
	movl	(%rax), %eax
	cmpl	$-4, %eax
	je	.LBB52_29
.Ltmp839:
	.loc	5 0 20
	cmpl	$-12, %eax
	jne	.LBB52_27
.Ltmp840:
	.loc	5 292 19 is_stmt 1
	callq	command_line_arguments.newBlock
	.loc	5 292 17 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB52_26
.Ltmp841:
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB52_25
.Ltmp842:
	.p2align	4, 0x90
.LBB52_29:
	.loc	5 295 20 is_stmt 1
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition, %esi
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	command_line_arguments.Parser.parseBlock
	.loc	5 295 17 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB52_30
.Ltmp843:
	movq	%r12, %rdi
.Ltmp844:
.LBB52_16:
	.loc	5 0 17
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB52_31
.Ltmp845:
.LBB52_18:
	.loc	5 287 16 is_stmt 1
	movq	%rax, (%r15)
	jmp	.LBB52_31
.Ltmp846:
.LBB52_26:
	.loc	5 292 17
	movq	%rax, (%r12)
.Ltmp847:
.LBB52_25:
	.loc	5 293 23
	movq	%rbx, %rdi
	callq	command_line_arguments.Parser.parseIf
	.loc	5 293 7 is_stmt 0
	movq	(%r12), %rdi
	.loc	5 293 16
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition, %esi
	movq	%rax, %rdx
	callq	command_line_arguments.Block.push
	jmp	.LBB52_31
.Ltmp848:
.LBB52_30:
	.loc	5 295 17 is_stmt 1
	movq	%rax, (%r12)
.Ltmp849:
	.p2align	4, 0x90
.LBB52_31:
	.loc	5 285 10
	movq	40(%rbx), %rax
	.loc	5 285 23 is_stmt 0
	testq	%rax, %rax
	jne	.LBB52_12
.Ltmp850:
.LBB52_32:
	.loc	5 0 23
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp851:
.LBB52_19:
	.loc	5 302 2 is_stmt 1
	movq	%r14, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp852:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp853:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB52_27:
	.cfi_def_cfa_offset 112
.Ltmp854:
	.loc	5 297 4
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp855:
	.loc	5 0 4 is_stmt 0
	movups	.Lconst.328(%rip), %xmm0
	movaps	%xmm0, 16(%rsp)
	leaq	16(%rsp), %rdx
	.loc	5 297 4
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp856:
.Lfunc_end52:
	.size	command_line_arguments.Parser.parseIf, .Lfunc_end52-command_line_arguments.Parser.parseIf
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseImport,"ax",@progbits
	.globl	command_line_arguments.Parser.parseImport
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseImport,@function
command_line_arguments.Parser.parseImport:
.Lfunc_begin53:
	.loc	5 319 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB53_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB53_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
.Ltmp857:
	.loc	5 320 10 prologue_end
	movl	$-16, %esi
	callq	command_line_arguments.Parser.expect
.Ltmp858:
	.loc	5 321 33
	testq	%rax, %rax
	je	.LBB53_8
.Ltmp859:
	.loc	5 321 11 is_stmt 0
	movq	8(%rax), %rsi
	movq	16(%rax), %rdx
	movq	%r14, %rdi
	callq	command_line_arguments.Parser.parseRelativeFile
.Ltmp860:
	.loc	5 321 40
	movq	%rax, %rdi
	callq	command_line_arguments.Parser.Parse
	movq	%rax, %rbx
.Ltmp861:
	.loc	5 0 40
	movq	%rsp, %rdi
	.loc	5 322 25 is_stmt 1
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 322 6 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB53_8
.Ltmp862:
	.loc	5 322 22
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB53_7
.Ltmp863:
	.loc	5 0 22
	movq	%rsp, %rdx
	.loc	5 322 22
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB53_6
.Ltmp864:
.LBB53_7:
	movq	32(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	(%rsp), %xmm0
	movups	16(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp865:
.LBB53_6:
	.loc	5 323 2 is_stmt 1
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp866:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp867:
	.cfi_def_cfa_offset 8
	retq
.Ltmp868:
.LBB53_8:
	.cfi_def_cfa_offset 64
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end53:
	.size	command_line_arguments.Parser.parseImport, .Lfunc_end53-command_line_arguments.Parser.parseImport
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseMixin,"ax",@progbits
	.globl	command_line_arguments.Parser.parseMixin
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseMixin,@function
command_line_arguments.Parser.parseMixin:
.Lfunc_begin54:
	.loc	5 447 0 is_stmt 1
	.cfi_startproc
	leaq	-376(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB54_2
	movq	%r10, %rax
	movabsq	$376, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB54_2:
.Ltmp869:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$328, %rsp
	.cfi_def_cfa_offset 384
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	5 448 10 prologue_end
	movl	$-19, %esi
	movq	%rdi, 72(%rsp)
.Ltmp870:
	callq	command_line_arguments.Parser.expect
	movups	.Lconst.362(%rip), %xmm0
	movaps	%xmm0, 240(%rsp)
	.loc	5 449 34
	testq	%rax, %rax
	je	.LBB54_45
.Ltmp871:
	.loc	5 0 34 is_stmt 0
	movq	%rax, %rbx
.Ltmp872:
	.loc	5 449 34
	movq	24(%rax), %rsi
	leaq	240(%rsp), %rdx
	.loc	5 449 39
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	.loc	5 449 11
	movups	8(%rbx), %xmm0
	movq	(%rax), %r15
	movq	8(%rax), %rbp
	movups	%xmm0, 200(%rsp)
.Ltmp873:
	.loc	2 239 11 is_stmt 1
	movl	$command_line_arguments.Mixin..d, %edi
	callq	runtime.newobject
	.loc	2 240 7
	testq	%rax, %rax
	je	.LBB54_45
.Ltmp874:
	.loc	2 0 7 is_stmt 0
	movq	%rax, %r12
.Ltmp875:
	.loc	2 240 7
	leaq	48(%rax), %rsi
	.loc	2 240 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB54_6
.Ltmp876:
	.loc	2 0 13
	leaq	200(%rsp), %rdx
	.loc	2 240 13
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB54_7
.Ltmp877:
.LBB54_6:
	movups	200(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp878:
.LBB54_7:
	.loc	2 242 19 is_stmt 1
	movl	$.Lconst.178, %edi
	movl	$3, %esi
	callq	regexp.MustCompile
.Ltmp879:
	.loc	2 0 19 is_stmt 0
	leaq	304(%rsp), %rdi
	.loc	2 243 21 is_stmt 1
	movq	$-1, %r8
	movq	%rax, %rsi
	movq	%r15, %rdx
	movq	%rbp, %rcx
	callq	regexp.Regexp.Split
.Ltmp880:
	.loc	2 0 21 is_stmt 0
	movq	320(%rsp), %rax
	movq	%rax, 144(%rsp)
	movups	304(%rsp), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	2 243 7
	leaq	64(%r12), %r15
.Ltmp881:
	.loc	2 243 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB54_9
.Ltmp882:
	.loc	2 0 13
	leaq	128(%rsp), %rdx
	.loc	2 243 13
	movl	$type...6.7string, %edi
	movq	%r15, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB54_10
.Ltmp883:
.LBB54_9:
	movq	144(%rsp), %rax
	movq	%rax, 16(%r15)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, (%r15)
.Ltmp884:
.LBB54_10:
	.loc	2 245 27 is_stmt 1
	movq	72(%r12), %rax
	.loc	2 245 16 is_stmt 0
	testq	%rax, %rax
	jle	.LBB54_34
.Ltmp885:
	.loc	2 0 16
	xorl	%ebp, %ebp
.Ltmp886:
	.p2align	4, 0x90
.LBB54_12:
	.loc	2 246 47 is_stmt 1
	cmpq	%rax, %rbp
	setge	%al
	movq	%rbp, %r14
	shrq	$63, %r14
	orb	%r14b, %al
	jne	.LBB54_43
.Ltmp887:
	.loc	2 0 47 is_stmt 0
	movq	64(%r12), %rax
	.loc	2 246 47
	movq	%rbp, %r13
	shlq	$4, %r13
	.loc	2 246 27
	movq	(%rax,%r13), %rdi
	movq	8(%rax,%r13), %rsi
	callq	strings.TrimSpace
	movq	%rax, 80(%rsp)
	movq	%rdx, 88(%rsp)
	.loc	2 246 13
	cmpq	72(%r12), %rbp
	setge	%al
	orb	%r14b, %al
	jne	.LBB54_43
.Ltmp888:
	.loc	2 0 13
	movq	(%r15), %rsi
	.loc	2 246 13
	addq	%r13, %rsi
	.loc	2 246 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB54_16
.Ltmp889:
	movl	$string..d, %edi
	leaq	80(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB54_18
.Ltmp890:
	.p2align	4, 0x90
.LBB54_16:
	testq	%rsi, %rsi
	je	.LBB54_45
.Ltmp891:
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp892:
.LBB54_18:
	.loc	2 247 16 is_stmt 1
	cmpq	72(%r12), %rbp
	setge	%al
	orb	%r14b, %al
	jne	.LBB54_43
.Ltmp893:
	.loc	2 0 16 is_stmt 0
	movq	(%r15), %rax
	.loc	2 247 20
	movq	(%rax,%r13), %rdi
	movq	8(%rax,%r13), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB54_33
.Ltmp894:
	.loc	2 0 20
	movq	80(%r12), %rax
	.loc	2 248 34 is_stmt 1
	cmpq	%rax, %rbp
	setg	%cl
	orb	%r14b, %cl
	movq	%rax, %rdx
	shrq	$63, %rdx
	orl	%r14d, %edx
	orb	%cl, %dl
	jne	.LBB54_44
.Ltmp895:
	.loc	2 0 34 is_stmt 0
	movq	64(%r12), %r8
	movq	72(%r12), %rdx
	movq	%rbp, %rsi
	addq	$1, %rsi
	movq	%r8, 48(%rsp)
	movq	%rbp, 56(%rsp)
	movq	%rax, 64(%rsp)
	js	.LBB54_44
.Ltmp896:
	movq	%rax, %rdi
	subq	%rsi, %rdi
	jl	.LBB54_44
.Ltmp897:
	movq	%rsi, %rbx
.Ltmp898:
	movl	$0, %ecx
	cmoveq	%rcx, %rbx
	.loc	2 248 50
	shlq	$4, %rbx
	addq	%r8, %rbx
	subq	%rsi, %rdx
	movq	%rbx, 176(%rsp)
	movq	%rdx, 184(%rsp)
	movq	%rdi, 192(%rsp)
	.loc	2 248 17
	addq	%rbp, %rdx
	cmpq	%rax, %rdx
	jbe	.LBB54_25
.Ltmp899:
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	216(%rsp), %rdi
	callq	runtime.growslice
	movq	216(%rsp), %r8
	movq	224(%rsp), %rdx
	movq	232(%rsp), %rax
	jmp	.LBB54_27
.Ltmp900:
	.p2align	4, 0x90
.LBB54_25:
	cmpq	%rax, %rdx
	jg	.LBB54_44
.Ltmp901:
	.loc	2 0 17
	movq	%rdx, %rsi
	orq	%rax, %rsi
	js	.LBB54_44
.Ltmp902:
.LBB54_27:
	.loc	2 248 17
	movq	%r8, 48(%rsp)
	movq	%rdx, 56(%rsp)
	movq	%rax, 64(%rsp)
	testq	%rbp, %rbp
	js	.LBB54_44
.Ltmp903:
	.loc	2 0 17
	subq	%rbp, %rax
	jl	.LBB54_44
.Ltmp904:
	movq	%rbp, %rsi
	movl	$0, %edi
	cmoveq	%rdi, %rsi
	.loc	2 248 17
	shlq	$4, %rsi
	addq	%rsi, %r8
	subq	%rbp, %rdx
	movq	%r8, 152(%rsp)
	movq	%rdx, 160(%rsp)
	movq	%rax, 168(%rsp)
	movq	192(%rsp), %rax
	movq	%rax, 40(%rsp)
	movups	176(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %edi
	callq	runtime.typedslicecopy
	movups	48(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 112(%rsp)
	.loc	2 248 15
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB54_31
.Ltmp905:
	movl	$type...6.7string, %edi
	movq	%r15, %rsi
	leaq	96(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB54_32
.Ltmp906:
.LBB54_31:
	movq	112(%rsp), %rax
	movq	%rax, 16(%r15)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%r15)
.Ltmp907:
.LBB54_32:
	.loc	2 249 4 is_stmt 1
	addq	$-1, %rbp
.Ltmp908:
.LBB54_33:
	.loc	2 245 35
	addq	$1, %rbp
.Ltmp909:
	.loc	2 245 27 is_stmt 0
	movq	72(%r12), %rax
	.loc	2 245 16
	cmpq	%rax, %rbp
	jl	.LBB54_12
.Ltmp910:
.LBB54_34:
	.loc	2 0 16
	leaq	264(%rsp), %rdi
	movq	72(%rsp), %rbx
	.loc	5 450 26 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 450 23 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB54_36
.Ltmp911:
	.loc	5 0 23
	leaq	264(%rsp), %rdx
	.loc	5 450 23
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	.loc	5 452 6 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB54_37
	jmp	.LBB54_45
.Ltmp912:
.LBB54_36:
	.loc	5 450 23
	movq	296(%rsp), %rax
	movq	%rax, 32(%r12)
	movups	264(%rsp), %xmm0
	movups	280(%rsp), %xmm1
	movups	%xmm1, 16(%r12)
	movups	%xmm0, (%r12)
	.loc	5 452 6
	testq	%rbx, %rbx
	je	.LBB54_45
.Ltmp913:
.LBB54_37:
	movq	40(%rbx), %rax
	.loc	5 452 19 is_stmt 0
	testq	%rax, %rax
	je	.LBB54_45
.Ltmp914:
	.loc	5 452 25
	cmpl	$-4, (%rax)
	jne	.LBB54_42
.Ltmp915:
	.loc	5 453 18 is_stmt 1
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin, %esi
	movq	%rbx, %rdi
	movq	%r12, %rdx
	callq	command_line_arguments.Parser.parseBlock
	.loc	5 453 8 is_stmt 0
	movq	%r12, %rdi
	addq	$40, %rdi
	.loc	5 453 15
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB54_41
.Ltmp916:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB54_42
.Ltmp917:
.LBB54_41:
	movq	%rax, (%rdi)
.Ltmp918:
.LBB54_42:
	.loc	5 456 2 is_stmt 1
	movq	%r12, %rax
	addq	$328, %rsp
.Ltmp919:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp920:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp921:
.LBB54_43:
	.cfi_def_cfa_offset 384
	.loc	5 0 2 is_stmt 0
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp922:
.LBB54_44:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp923:
.LBB54_45:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end54:
	.size	command_line_arguments.Parser.parseMixin, .Lfunc_end54-command_line_arguments.Parser.parseMixin
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseMixinCall,"ax",@progbits
	.globl	command_line_arguments.Parser.parseMixinCall
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseMixinCall,@function
command_line_arguments.Parser.parseMixinCall:
.Lfunc_begin55:
	.loc	5 459 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB55_2
	movq	%r10, %rax
	movabsq	$248, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB55_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$200, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbp
.Ltmp924:
	.loc	5 460 10 prologue_end
	movl	$-20, %esi
	callq	command_line_arguments.Parser.expect
	movups	.Lconst.362(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	.loc	5 461 42
	testq	%rax, %rax
	je	.LBB55_28
.Ltmp925:
	.loc	5 0 42 is_stmt 0
	movq	%rax, %rbx
.Ltmp926:
	.loc	5 461 42
	movq	24(%rax), %rsi
	leaq	96(%rsp), %rdx
	.loc	5 461 47
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	.loc	5 461 15
	movups	8(%rbx), %xmm0
	movq	(%rax), %r14
	movq	8(%rax), %r13
	movups	%xmm0, 80(%rsp)
.Ltmp927:
	.loc	2 263 15 is_stmt 1
	movl	$command_line_arguments.MixinCall..d, %edi
	callq	runtime.newobject
.Ltmp928:
	.loc	2 264 11
	testq	%rax, %rax
	je	.LBB55_28
.Ltmp929:
	.loc	2 0 11 is_stmt 0
	movq	%rbp, 8(%rsp)
.Ltmp930:
	.loc	2 264 11
	leaq	40(%rax), %rsi
	.loc	2 264 17
	cmpl	$0, runtime.writeBarrier(%rip)
	movq	%rax, (%rsp)
.Ltmp931:
	.loc	2 0 17
	je	.LBB55_6
.Ltmp932:
	leaq	80(%rsp), %rdx
	.loc	2 264 17
	movl	$string..d, %edi
	callq	runtime.typedmemmove
.Ltmp933:
	.loc	2 0 17
	jmp	.LBB55_7
.Ltmp934:
.LBB55_6:
	.loc	2 264 17
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp935:
.LBB55_7:
	.loc	2 266 10 is_stmt 1
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB55_23
.Ltmp936:
	.loc	2 268 22
	movl	$.Lconst.185, %edi
	movl	$7, %esi
	callq	regexp.MustCompile
	movq	%rax, %rbx
.Ltmp937:
	.loc	2 269 20
	movl	$.Lconst.178, %edi
	movl	$3, %esi
	callq	regexp.MustCompile
	movq	%rax, %rbp
.Ltmp938:
	.loc	2 0 20 is_stmt 0
	leaq	176(%rsp), %rdi
.Ltmp939:
	.loc	2 271 21 is_stmt 1
	movq	$-1, %r8
	movq	%rbx, %rsi
	movq	%r14, %rdx
	movq	%r13, %rcx
	callq	regexp.Regexp.FindAllString
	movq	176(%rsp), %rax
.Ltmp940:
	.loc	2 0 21 is_stmt 0
	movq	%rax, 24(%rsp)
	movq	184(%rsp), %rax
.Ltmp941:
	.loc	2 272 23 is_stmt 1
	movq	%rax, 16(%rsp)
	movl	$.Lconst.187, %ecx
	movl	$2, %r8d
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	regexp.Regexp.ReplaceAllString
.Ltmp942:
	movq	%rdx, %rcx
.Ltmp943:
	.loc	2 0 23 is_stmt 0
	leaq	152(%rsp), %rdi
	.loc	2 273 26 is_stmt 1
	movq	$-1, %r8
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	regexp.Regexp.Split
.Ltmp944:
	.loc	2 0 26 is_stmt 0
	movq	168(%rsp), %rax
	movq	%rax, 48(%rsp)
	movups	152(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	(%rsp), %rbp
.Ltmp945:
	.loc	2 273 12
	movq	%rbp, %rbx
.Ltmp946:
	addq	$56, %rbx
	.loc	2 273 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB55_10
.Ltmp947:
	.loc	2 0 18
	leaq	32(%rsp), %rdx
	.loc	2 273 18
	movl	$type...6.7string, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB55_11
.Ltmp948:
.LBB55_10:
	movq	48(%rsp), %rax
	movq	%rax, 16(%rbx)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rbx)
.Ltmp949:
.LBB55_11:
	.loc	2 0 18
	movq	64(%rbp), %rbp
.Ltmp950:
	.loc	2 276 3 is_stmt 1
	testq	%rbp, %rbp
	jle	.LBB55_23
.Ltmp951:
	.loc	2 0 3 is_stmt 0
	movq	(%rsp), %rax
	movq	56(%rax), %r13
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
.Ltmp952:
	.p2align	4, 0x90
.LBB55_13:
	.loc	2 276 3
	movq	(%r13,%r14), %rdi
.Ltmp953:
	movq	8(%r13,%r14), %rsi
.Ltmp954:
	.loc	2 277 11 is_stmt 1
	movl	$.Lconst.187, %edx
	movl	$2, %ecx
	callq	runtime.eqstring
.Ltmp955:
	cmpb	$1, %al
	jne	.LBB55_22
.Ltmp956:
	.loc	2 278 19
	movq	(%rsp), %rax
	cmpq	64(%rax), %r15
	jge	.LBB55_27
.Ltmp957:
	.loc	2 278 31 is_stmt 0
	cmpq	16(%rsp), %r12
	jge	.LBB55_27
.Ltmp958:
	.loc	2 0 31
	testq	%r12, %r12
	js	.LBB55_27
.Ltmp959:
	movq	(%rbx), %rax
	leaq	(%rax,%r14), %rsi
	.loc	2 278 31
	movq	%r12, %rcx
	shlq	$4, %rcx
	movq	24(%rsp), %rdx
	movups	(%rdx,%rcx), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	2 278 23
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB55_19
.Ltmp960:
	movl	$string..d, %edi
	leaq	64(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB55_21
.Ltmp961:
.LBB55_19:
	testq	%rsi, %rsi
	je	.LBB55_28
.Ltmp962:
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rax,%r14)
.Ltmp963:
.LBB55_21:
	.loc	2 279 5 is_stmt 1
	addq	$1, %r12
.Ltmp964:
.LBB55_22:
	.loc	2 276 3
	addq	$1, %r15
	addq	$16, %r14
	cmpq	%rbp, %r15
	jl	.LBB55_13
.Ltmp965:
.LBB55_23:
	.loc	2 0 3 is_stmt 0
	leaq	112(%rsp), %rdi
	.loc	5 462 30 is_stmt 1
	movq	8(%rsp), %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 462 27 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB55_25
.Ltmp966:
	.loc	5 0 27
	leaq	112(%rsp), %rdx
	.loc	5 462 27
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	(%rsp), %rbx
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB55_26
.Ltmp967:
.LBB55_25:
	movq	144(%rsp), %rax
	movq	(%rsp), %rbx
	movq	%rax, 32(%rbx)
	movups	112(%rsp), %xmm0
	movups	128(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp968:
.LBB55_26:
	.loc	5 463 2 is_stmt 1
	movq	%rbx, %rax
	addq	$200, %rsp
.Ltmp969:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp970:
.LBB55_27:
	.cfi_def_cfa_offset 256
	.loc	5 0 2 is_stmt 0
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp971:
.LBB55_28:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end55:
	.size	command_line_arguments.Parser.parseMixinCall, .Lfunc_end55-command_line_arguments.Parser.parseMixinCall
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseNamedBlock,"ax",@progbits
	.globl	command_line_arguments.Parser.parseNamedBlock
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseNamedBlock,@function
command_line_arguments.Parser.parseNamedBlock:
.Lfunc_begin56:
	.loc	5 326 0 is_stmt 1
	.cfi_startproc
	leaq	-408(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB56_2
	movq	%r10, %rax
	movabsq	$408, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB56_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$376, %rsp
	.cfi_def_cfa_offset 416
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
.Ltmp972:
	.loc	5 327 10 prologue_end
	movl	$-17, %esi
	callq	command_line_arguments.Parser.expect
	.loc	5 329 22
	testq	%rax, %rax
	je	.LBB56_32
.Ltmp973:
	.loc	5 0 22 is_stmt 0
	movq	%rax, %r12
.Ltmp974:
	movups	8(%rax), %xmm0
	movaps	%xmm0, 240(%rsp)
	.loc	5 329 6
	testq	%r14, %r14
	je	.LBB56_32
.Ltmp975:
	movq	48(%r14), %rsi
	leaq	240(%rsp), %rdx
	.loc	5 329 18
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	callq	runtime.mapaccess1
	.loc	5 329 30
	cmpq	$0, (%rax)
	jne	.LBB56_33
.Ltmp976:
	.loc	5 333 11 is_stmt 1
	movups	8(%r12), %xmm0
	movups	%xmm0, 96(%rsp)
.Ltmp977:
	.loc	2 144 8
	movl	$command_line_arguments.NamedBlock..d, %edi
	callq	runtime.newobject
	.loc	2 145 4
	testq	%rax, %rax
	je	.LBB56_32
.Ltmp978:
	.loc	2 0 4 is_stmt 0
	movq	%rax, %rbx
.Ltmp979:
	.loc	2 145 4
	leaq	64(%rax), %r15
	.loc	2 145 10
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB56_34
.Ltmp980:
	.loc	2 0 10
	leaq	96(%rsp), %rdx
	.loc	2 145 10
	movl	$string..d, %edi
	movq	%r15, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB56_8
.Ltmp981:
.LBB56_34:
	movups	96(%rsp), %xmm0
	movups	%xmm0, (%r15)
.Ltmp982:
.LBB56_8:
	.loc	2 0 10
	leaq	352(%rsp), %rdi
	.loc	2 146 22 is_stmt 1
	movl	$command_line_arguments.Node..d, %esi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.makeslice
	movq	368(%rsp), %rax
	movq	%rax, 64(%rsp)
	movups	352(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	2 146 10 is_stmt 0
	movq	%rbx, %rsi
	addq	$40, %rsi
	.loc	2 146 20
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB56_10
.Ltmp983:
	.loc	2 0 20
	leaq	48(%rsp), %rdx
	.loc	2 146 20
	movl	$type...6.7command_line_arguments.Node, %edi
	callq	runtime.typedmemmove
	jmp	.LBB56_11
.Ltmp984:
.LBB56_10:
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp985:
.LBB56_11:
	.loc	2 147 14 is_stmt 1
	movq	$0, 80(%rbx)
	leaq	312(%rsp), %rdi
.Ltmp986:
	.loc	5 334 26
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 334 23 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB56_15
.Ltmp987:
	.loc	5 0 23
	leaq	312(%rsp), %rdx
	.loc	5 334 23
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB56_13
.Ltmp988:
.LBB56_15:
	movq	344(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	312(%rsp), %xmm0
	movups	328(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp989:
.LBB56_13:
	.loc	5 0 23
	movups	.Lconst.350(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
	.loc	5 336 8 is_stmt 1
	movq	24(%r12), %rsi
	leaq	208(%rsp), %rdx
	.loc	5 336 13 is_stmt 0
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	.loc	5 336 26
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movl	$.Lconst.351, %edx
	movl	$6, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB56_16
.Ltmp990:
	.loc	5 0 26
	movl	$1, %eax
	jmp	.LBB56_18
.Ltmp991:
.LBB56_16:
	movups	.Lconst.350(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	5 338 15 is_stmt 1
	movq	24(%r12), %rsi
	leaq	192(%rsp), %rdx
	.loc	5 338 20 is_stmt 0
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	.loc	5 338 33
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movl	$.Lconst.352, %edx
	movl	$7, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB56_19
.Ltmp992:
	.loc	5 0 33
	movl	$2, %eax
.Ltmp993:
.LBB56_18:
	movq	%rax, 80(%rbx)
.Ltmp994:
.LBB56_19:
	.loc	5 342 6 is_stmt 1
	movq	40(%r14), %rax
	.loc	5 342 19 is_stmt 0
	testq	%rax, %rax
	je	.LBB56_32
.Ltmp995:
	.loc	5 342 25
	cmpl	$-4, (%rax)
	jne	.LBB56_25
.Ltmp996:
	.loc	5 343 20 is_stmt 1
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%r14, %rdi
	callq	command_line_arguments.Parser.parseBlock
	.loc	5 343 17 is_stmt 0
	testq	%rax, %rax
	je	.LBB56_32
.Ltmp997:
	.loc	5 0 17
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movups	48(%rax), %xmm3
	movaps	%xmm3, 160(%rsp)
	movaps	%xmm2, 144(%rsp)
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	.loc	5 343 15
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB56_24
.Ltmp998:
	.loc	5 0 15
	leaq	112(%rsp), %rdx
	.loc	5 343 15
	movl	$command_line_arguments.Block..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB56_25
.Ltmp999:
.LBB56_24:
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
	movaps	144(%rsp), %xmm2
	movaps	160(%rsp), %xmm3
	movups	%xmm3, 48(%rbx)
	movups	%xmm2, 32(%rbx)
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp1000:
.LBB56_25:
	.loc	5 0 15
	movups	(%r15), %xmm0
	movaps	%xmm0, 176(%rsp)
	.loc	5 346 3 is_stmt 1
	movq	48(%r14), %rsi
	leaq	176(%rsp), %rdx
	.loc	5 346 28 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.NamedBlock, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB56_26
.Ltmp1001:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	runtime.writebarrierptr
	.loc	5 348 20 is_stmt 1
	cmpq	$0, 80(%rbx)
	je	.LBB56_30
.Ltmp1002:
.LBB56_29:
	.loc	5 352 9
	callq	command_line_arguments.newBlock
	jmp	.LBB56_31
.Ltmp1003:
.LBB56_26:
	.loc	5 346 28
	testq	%rax, %rax
	je	.LBB56_32
.Ltmp1004:
	movq	%rbx, (%rax)
	.loc	5 348 20
	cmpq	$0, 80(%rbx)
	jne	.LBB56_29
.Ltmp1005:
.LBB56_30:
	.loc	5 349 3
	movq	%rbx, %rax
.Ltmp1006:
.LBB56_31:
	.loc	5 0 3 is_stmt 0
	addq	$376, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp1007:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp1008:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1009:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB56_32:
	.cfi_def_cfa_offset 416
.Ltmp1010:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1011:
.LBB56_33:
	addq	$8, %r12
.Ltmp1012:
	movups	(%r12), %xmm0
	movaps	%xmm0, 224(%rsp)
	.loc	5 330 3 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	.loc	5 330 71 is_stmt 0
	movups	.Lconst.347(%rip), %xmm0
	movaps	%xmm0, 256(%rsp)
	movaps	224(%rsp), %xmm0
	movaps	%xmm0, 272(%rsp)
	movups	.Lconst.349(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	movaps	256(%rsp), %xmm0
	movaps	272(%rsp), %xmm1
	movaps	288(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	movq	%rax, 80(%rsp)
	movq	%rdx, 88(%rsp)
	leaq	80(%rsp), %rdx
	.loc	5 330 3
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp1013:
.Lfunc_end56:
	.size	command_line_arguments.Parser.parseNamedBlock, .Lfunc_end56-command_line_arguments.Parser.parseNamedBlock
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.parseRelativeFile,"ax",@progbits
	.globl	command_line_arguments.Parser.parseRelativeFile
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseRelativeFile,@function
command_line_arguments.Parser.parseRelativeFile:
.Lfunc_begin57:
	.loc	5 153 0 is_stmt 1
	.cfi_startproc
	leaq	-392(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB57_2
	movq	%r10, %rax
	movabsq	$392, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB57_2:
.Ltmp1014:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$352, %rsp
	.cfi_def_cfa_offset 400
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	5 154 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB57_15
.Ltmp1015:
	.loc	5 0 10 is_stmt 0
	movq	%rdx, %r14
.Ltmp1016:
	movq	%rsi, %r15
.Ltmp1017:
	movq	%rdi, %rbx
.Ltmp1018:
	.loc	5 154 5
	movq	16(%rdi), %rsi
	.loc	5 154 21
	testq	%rsi, %rsi
	je	.LBB57_16
.Ltmp1019:
	.loc	5 158 36 is_stmt 1
	movq	8(%rbx), %rdi
	callq	path_filepath.Dir
	.loc	5 158 22 is_stmt 0
	movq	%rax, 240(%rsp)
	movq	%rdx, 248(%rsp)
	movq	%r15, 256(%rsp)
	movq	%r14, 264(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 72(%rsp)
	movq	$2, 80(%rsp)
	movq	$2, 88(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, %r14
.Ltmp1020:
	movq	%rdx, %r15
.Ltmp1021:
	.loc	5 160 32 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	path_filepath.Base
	movq	%rdx, %rcx
	.loc	5 160 13 is_stmt 0
	movl	$46, %edx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	strings.IndexRune
	.loc	5 160 53
	testq	%rax, %rax
	jns	.LBB57_6
.Ltmp1022:
	.loc	5 161 14 is_stmt 1
	movq	%r14, 272(%rsp)
	movq	%r15, 280(%rsp)
	movups	.Lconst.319(%rip), %xmm0
	movups	%xmm0, 288(%rsp)
	movups	272(%rsp), %xmm0
	movups	288(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %r14
.Ltmp1023:
	movq	%rdx, %r15
.Ltmp1024:
.LBB57_6:
	.loc	5 0 14 is_stmt 0
	leaq	152(%rsp), %rdi
	.loc	5 164 17 is_stmt 1
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	command_line_arguments.FileParser
	movq	160(%rsp), %rsi
.Ltmp1025:
	.loc	5 165 9
	testq	%rsi, %rsi
	je	.LBB57_7
.Ltmp1026:
	.loc	5 165 24 is_stmt 0
	movq	24(%rbx), %rcx
	testq	%rcx, %rcx
	je	.LBB57_10
.Ltmp1027:
	.loc	5 166 17 is_stmt 1
	movq	32(%rbx), %r8
	leaq	128(%rsp), %rdi
	movq	%r14, %rsi
.Ltmp1028:
	movq	%r15, %rdx
	callq	command_line_arguments.VirtualFileParser
	movq	136(%rsp), %rsi
.Ltmp1029:
	.loc	5 168 9
	testq	%rsi, %rsi
	jne	.LBB57_13
.Ltmp1030:
	.loc	5 0 9 is_stmt 0
	movq	128(%rsp), %rax
.Ltmp1031:
	jmp	.LBB57_8
.Ltmp1032:
.LBB57_7:
	movq	152(%rsp), %rax
.Ltmp1033:
.LBB57_8:
	.loc	5 172 2 is_stmt 1
	addq	$352, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp1034:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp1035:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1036:
.LBB57_15:
	.cfi_def_cfa_offset 400
	.loc	5 154 10
	movl	$6, %edi
.Ltmp1037:
	callq	__go_runtime_error
.Ltmp1038:
.LBB57_16:
	.loc	5 155 3
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1039:
	.loc	5 155 36 is_stmt 0
	movups	.Lconst.315(%rip), %xmm0
	movaps	%xmm0, 304(%rsp)
	movq	%r15, 320(%rsp)
	movq	%r14, 328(%rsp)
	movups	.Lconst.317(%rip), %xmm0
	movaps	%xmm0, 336(%rsp)
	movaps	304(%rsp), %xmm0
	movaps	320(%rsp), %xmm1
	movaps	336(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	movq	%rax, 112(%rsp)
	movq	%rdx, 120(%rsp)
	leaq	112(%rsp), %rdx
	.loc	5 155 3
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp1040:
.LBB57_10:
	.loc	5 0 3
	movq	168(%rsp), %rdi
.Ltmp1041:
	jmp	.LBB57_14
.Ltmp1042:
.LBB57_13:
	movq	144(%rsp), %rdi
.Ltmp1043:
.LBB57_14:
	.loc	5 169 64 is_stmt 1
	callq	*8(%rsi)
.Ltmp1044:
	movq	%rax, %rbx
.Ltmp1045:
	movq	%rdx, %r13
	.loc	5 169 3 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	.loc	5 169 24
	movups	.Lconst.322(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	%r14, 192(%rsp)
	movq	%r15, 200(%rsp)
	movups	.Lconst.324(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	%rbx, 224(%rsp)
	movq	%r13, 232(%rsp)
	movaps	176(%rsp), %xmm0
	movaps	192(%rsp), %xmm1
	movaps	208(%rsp), %xmm2
	movaps	224(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring4
	movq	%rax, 96(%rsp)
	movq	%rdx, 104(%rsp)
	leaq	96(%rsp), %rdx
	.loc	5 169 3
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.gopanic
.Ltmp1046:
.Lfunc_end57:
	.size	command_line_arguments.Parser.parseRelativeFile, .Lfunc_end57-command_line_arguments.Parser.parseRelativeFile
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI58_0:
	.zero	16
	.section	.text.command_line_arguments.Parser.parseTag,"ax",@progbits
	.globl	command_line_arguments.Parser.parseTag
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseTag,@function
command_line_arguments.Parser.parseTag:
.Lfunc_begin58:
	.loc	5 389 0 is_stmt 1
	.cfi_startproc
	leaq	-1128(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB58_2
	movq	%r10, %rax
	movabsq	$1128, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB58_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1080, %rsp
	.cfi_def_cfa_offset 1136
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r12
.Ltmp1047:
	.loc	5 390 10 prologue_end
	movl	$-9, %esi
	callq	command_line_arguments.Parser.expect
.Ltmp1048:
	.loc	5 391 19
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1049:
	.loc	5 391 9 is_stmt 0
	movups	8(%rax), %xmm0
	movups	%xmm0, 288(%rsp)
.Ltmp1050:
	.loc	2 168 9 is_stmt 1
	movl	$command_line_arguments.Tag..d, %edi
	callq	runtime.newobject
.Ltmp1051:
	.loc	2 169 5
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1052:
	.loc	2 0 5 is_stmt 0
	movq	%rax, %rbp
.Ltmp1053:
	movq	%rax, %rbx
	.loc	2 169 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_7
.Ltmp1054:
	.loc	2 0 12
	leaq	40(%rbp), %rdi
	.loc	2 169 12
	xorl	%esi, %esi
	callq	runtime.writebarrierptr
	.loc	2 170 5 is_stmt 1
	leaq	48(%rbp), %rsi
	.loc	2 170 11 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_8
.Ltmp1055:
	.loc	2 0 11
	leaq	288(%rsp), %rdx
	.loc	2 170 11
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB58_9
.Ltmp1056:
.LBB58_7:
	.loc	2 169 12 is_stmt 1
	movq	$0, 40(%rbx)
	.loc	2 170 5
	leaq	48(%rbp), %rsi
.Ltmp1057:
.LBB58_8:
	.loc	2 170 11 is_stmt 0
	movups	288(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1058:
.LBB58_9:
	.loc	2 0 11
	leaq	24(%rsp), %r14
	.loc	2 171 19 is_stmt 1
	movl	$command_line_arguments.Attribute..d, %esi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rdi
	callq	runtime.makeslice
	movq	40(%rsp), %rax
	movq	%rax, 272(%rsp)
	movups	24(%rsp), %xmm0
	movaps	%xmm0, 256(%rsp)
	.loc	2 171 5 is_stmt 0
	addq	$72, %rbp
.Ltmp1059:
	.loc	2 171 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_11
.Ltmp1060:
	.loc	2 0 17
	leaq	256(%rsp), %rdx
	.loc	2 171 17
	movl	$type...6.7command_line_arguments.Attribute, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB58_12
.Ltmp1061:
.LBB58_11:
	movq	272(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	256(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp1062:
.LBB58_12:
	.loc	2 172 21 is_stmt 1
	movb	$0, 64(%rbx)
	movq	%rbx, 24(%rsp)
	leaq	1040(%rsp), %rdi
.Ltmp1063:
	.loc	5 392 24
	movq	%r12, %rsi
	callq	command_line_arguments.Parser.pos
	movq	1072(%rsp), %rax
	movq	%rax, 336(%rsp)
	movups	1040(%rsp), %xmm0
	movups	1056(%rsp), %xmm1
	movaps	%xmm1, 320(%rsp)
	movaps	%xmm0, 304(%rsp)
	.loc	5 392 2 is_stmt 0
	movq	24(%rsp), %rsi
.Ltmp1064:
	.loc	5 392 5
	testq	%rsi, %rsi
	je	.LBB58_78
.Ltmp1065:
	.loc	5 392 21
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_15
.Ltmp1066:
	.loc	5 0 21
	leaq	304(%rsp), %rdx
	.loc	5 392 21
	movl	$command_line_arguments.SourcePosition..d, %edi
	callq	runtime.typedmemmove
.Ltmp1067:
	.loc	5 0 21
	jmp	.LBB58_16
.Ltmp1068:
.LBB58_15:
	.loc	5 392 21
	movq	336(%rsp), %rax
	movq	%rax, 32(%rsi)
	movaps	304(%rsp), %xmm0
	movaps	320(%rsp), %xmm1
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp1069:
.LBB58_16:
	.loc	5 394 17 is_stmt 1
	movq	$command_line_arguments..1command_line_arguments.Parser.parseTag..func1, 144(%rsp)
	movq	%r14, 152(%rsp)
	.loc	5 401 10
	testq	%r12, %r12
	je	.LBB58_78
.Ltmp1070:
	movq	40(%r12), %rax
	.loc	5 401 23 is_stmt 0
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1071:
	.loc	5 0 23
	leaq	664(%rsp), %r13
	leaq	472(%rsp), %r14
.Ltmp1072:
	.p2align	4, 0x90
.LBB58_19:
	.loc	5 401 23
	movl	(%rax), %ecx
	addl	$11, %ecx
	cmpl	$7, %ecx
	ja	.LBB58_92
.Ltmp1073:
	.loc	5 0 23
	jmpq	*.LJTI58_0(,%rcx,8)
.Ltmp1074:
.LBB58_21:
	.loc	5 430 12 is_stmt 1
	movl	$-11, %esi
	movq	%r12, %rdi
	callq	command_line_arguments.Parser.expect
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 608(%rsp)
	.loc	5 431 14
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1075:
	.loc	5 0 14 is_stmt 0
	movq	%rax, %r15
.Ltmp1076:
	.loc	5 431 14
	movq	24(%rax), %rsi
	.loc	5 431 19
	movl	$type..map.6string.7string, %edi
	leaq	608(%rsp), %rdx
	callq	runtime.mapaccess1
	.loc	5 431 34
	cmpq	$0, 8(%rax)
	jg	.LBB58_95
.Ltmp1077:
	.loc	5 434 54 is_stmt 1
	leaq	920(%rsp), %rdi
	movq	%r12, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 434 3 is_stmt 0
	movq	24(%rsp), %rbp
.Ltmp1078:
	.loc	5 434 6
	testq	%rbp, %rbp
	je	.LBB58_78
.Ltmp1079:
	.loc	5 0 6
	movups	.Lconst.337(%rip), %xmm0
	movaps	%xmm0, 576(%rsp)
	.loc	5 434 78
	movq	24(%r15), %rsi
	.loc	5 434 83
	movl	$type..map.6string.7string, %edi
	leaq	576(%rsp), %rdx
	callq	runtime.mapaccess1
	movq	%rax, %rbx
	movups	.Lconst.339(%rip), %xmm0
	movaps	%xmm0, 560(%rsp)
	.loc	5 434 100
	movq	24(%r15), %rsi
	.loc	5 434 105
	movl	$type..map.6string.7string, %edi
	leaq	560(%rsp), %rdx
	callq	runtime.mapaccess1
	movups	8(%r15), %xmm0
	movaps	%xmm0, 544(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 528(%rsp)
	.loc	5 434 114
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movl	$.Lconst.340, %edx
	movl	$3, %ecx
	callq	runtime.eqstring
	.loc	5 434 27
	movq	24(%rsp), %rcx
.Ltmp1080:
	.loc	5 434 30
	testq	%rcx, %rcx
	je	.LBB58_78
.Ltmp1081:
	.loc	5 434 114
	cmpb	$1, %al
	movups	72(%rcx), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	88(%rcx), %rax
	movq	%rax, 64(%rsp)
	.loc	5 434 20
	movq	56(%rsp), %rbx
	.loc	5 434 43
	movups	920(%rsp), %xmm0
	movups	936(%rsp), %xmm1
	movaps	%xmm0, 432(%rsp)
	movaps	%xmm1, 448(%rsp)
	movq	952(%rsp), %rax
	movq	%rax, 464(%rsp)
	movaps	544(%rsp), %xmm0
	movups	%xmm0, (%r14)
	movaps	528(%rsp), %xmm0
	movups	%xmm0, 16(%r14)
	sete	504(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%r14)
	.loc	5 434 20
	leaq	1(%rbx), %rdx
	movq	64(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB58_47
.Ltmp1082:
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Attribute..d, %esi
	leaq	344(%rsp), %rdi
	callq	runtime.growslice
.Ltmp1083:
	.loc	5 0 20
	movq	344(%rsp), %rsi
	movq	352(%rsp), %rdx
	movq	360(%rsp), %rax
	jmp	.LBB58_50
.Ltmp1084:
	.p2align	4, 0x90
.LBB58_27:
	.loc	5 416 10 is_stmt 1
	movl	$-7, %esi
	movq	%r12, %rdi
	callq	command_line_arguments.Parser.expect
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 896(%rsp)
	.loc	5 417 12
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1085:
	.loc	5 0 12 is_stmt 0
	movq	%rax, %rbx
.Ltmp1086:
	.loc	5 417 12
	movq	24(%rax), %rsi
	.loc	5 417 17
	movl	$type..map.6string.7string, %edi
	leaq	896(%rsp), %rdx
	callq	runtime.mapaccess1
	.loc	5 417 32
	cmpq	$0, 8(%rax)
	jg	.LBB58_96
.Ltmp1087:
	.loc	5 420 54 is_stmt 1
	leaq	1000(%rsp), %rdi
	movq	%r12, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 420 3 is_stmt 0
	movq	24(%rsp), %rbp
.Ltmp1088:
	.loc	5 420 6
	testq	%rbp, %rbp
	je	.LBB58_78
.Ltmp1089:
	.loc	5 0 6
	movups	8(%rbx), %xmm0
	movaps	%xmm0, 864(%rsp)
	movups	72(%rbp), %xmm0
	movaps	%xmm0, 112(%rsp)
	movq	88(%rbp), %rax
	movq	%rax, 128(%rsp)
	.loc	5 420 20
	movq	120(%rsp), %rbx
.Ltmp1090:
	.loc	5 420 43
	movups	1000(%rsp), %xmm0
	movups	1016(%rsp), %xmm1
	movaps	%xmm0, 768(%rsp)
	movaps	%xmm1, 784(%rsp)
	movq	1032(%rsp), %rax
	movq	%rax, 800(%rsp)
	movups	.Lconst.333(%rip), %xmm0
	leaq	808(%rsp), %rax
	movups	%xmm0, (%rax)
	movaps	864(%rsp), %xmm0
	movups	%xmm0, 16(%rax)
	movb	$1, 840(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%rax)
	.loc	5 420 20
	leaq	1(%rbx), %rdx
	movq	128(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB58_40
.Ltmp1091:
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Attribute..d, %esi
	leaq	392(%rsp), %rdi
	callq	runtime.growslice
	movq	392(%rsp), %rsi
	movq	400(%rsp), %rdx
	movq	408(%rsp), %rax
	jmp	.LBB58_43
.Ltmp1092:
	.p2align	4, 0x90
.LBB58_32:
	.loc	5 0 20
	movups	.Lconst.339(%rip), %xmm0
	movaps	%xmm0, 416(%rsp)
	.loc	5 437 20 is_stmt 1
	movq	24(%rax), %rsi
	.loc	5 437 25 is_stmt 0
	movl	$type..map.6string.7string, %edi
	leaq	416(%rsp), %rdx
	callq	runtime.mapaccess1
	.loc	5 437 34
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movl	$.Lconst.360, %edx
	movl	$5, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB58_92
.Ltmp1093:
	.loc	5 438 4 is_stmt 1
	leaq	144(%rsp), %r10
	callq	*144(%rsp)
	.loc	5 439 25
	movq	%r12, %rdi
	callq	command_line_arguments.Parser.parseText
	.loc	5 439 4 is_stmt 0
	movq	24(%rsp), %rcx
.Ltmp1094:
	.loc	5 439 7
	testq	%rcx, %rcx
	je	.LBB58_78
.Ltmp1095:
	movq	40(%rcx), %rdi
	.loc	5 439 13
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text, %esi
	movq	%rax, %rdx
	callq	command_line_arguments.Block.pushFront
.Ltmp1096:
	.loc	5 0 13
	jmp	.LBB58_77
.Ltmp1097:
	.p2align	4, 0x90
.LBB58_35:
	.loc	5 423 11 is_stmt 1
	movl	$-8, %esi
	movq	%r12, %rdi
	callq	command_line_arguments.Parser.expect
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 752(%rsp)
	.loc	5 424 13
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1098:
	.loc	5 0 13 is_stmt 0
	movq	%rax, %rbx
.Ltmp1099:
	.loc	5 424 13
	movq	24(%rax), %rsi
	.loc	5 424 18
	movl	$type..map.6string.7string, %edi
	leaq	752(%rsp), %rdx
	callq	runtime.mapaccess1
	.loc	5 424 33
	cmpq	$0, 8(%rax)
	jg	.LBB58_97
.Ltmp1100:
	.loc	5 427 54 is_stmt 1
	leaq	960(%rsp), %rdi
	movq	%r12, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 427 3 is_stmt 0
	movq	24(%rsp), %rbp
.Ltmp1101:
	.loc	5 427 6
	testq	%rbp, %rbp
	je	.LBB58_78
.Ltmp1102:
	.loc	5 0 6
	movups	8(%rbx), %xmm0
	movaps	%xmm0, 720(%rsp)
	movups	72(%rbp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	88(%rbp), %rax
	movq	%rax, 96(%rsp)
	.loc	5 427 20
	movq	88(%rsp), %rbx
.Ltmp1103:
	.loc	5 427 43
	movups	960(%rsp), %xmm0
	movups	976(%rsp), %xmm1
	movaps	%xmm0, 624(%rsp)
	movaps	%xmm1, 640(%rsp)
	movq	992(%rsp), %rax
	movq	%rax, 656(%rsp)
	movups	.Lconst.335(%rip), %xmm0
	movups	%xmm0, (%r13)
	movaps	720(%rsp), %xmm0
	movups	%xmm0, 16(%r13)
	movb	$1, 696(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%r13)
	.loc	5 427 20
	leaq	1(%rbx), %rdx
	movq	96(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB58_54
.Ltmp1104:
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Attribute..d, %esi
	leaq	368(%rsp), %rdi
	callq	runtime.growslice
	movq	368(%rsp), %rsi
	movq	376(%rsp), %rdx
	movq	384(%rsp), %rax
	jmp	.LBB58_57
.Ltmp1105:
.LBB58_40:
	.loc	5 420 20 is_stmt 1
	cmpq	%rax, %rdx
	jg	.LBB58_94
.Ltmp1106:
	.loc	5 0 20 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB58_94
.Ltmp1107:
	.loc	5 420 20
	movq	112(%rsp), %rsi
.Ltmp1108:
.LBB58_43:
	movq	%rsi, 112(%rsp)
	movq	%rdx, 120(%rsp)
	movq	%rax, 128(%rsp)
	testq	%rbx, %rbx
	js	.LBB58_93
.Ltmp1109:
	.loc	5 0 20
	cmpq	%rdx, %rbx
	jge	.LBB58_93
.Ltmp1110:
	.loc	5 420 20
	leaq	(%rbx,%rbx,2), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_61
.Ltmp1111:
	movl	$command_line_arguments.Attribute..d, %edi
	leaq	768(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB58_63
.Ltmp1112:
.LBB58_47:
	.loc	5 434 20 is_stmt 1
	cmpq	%rax, %rdx
	jg	.LBB58_94
.Ltmp1113:
	.loc	5 0 20 is_stmt 0
	movq	%rax, %rcx
.Ltmp1114:
	orq	%rdx, %rcx
	js	.LBB58_94
.Ltmp1115:
	.loc	5 434 20
	movq	48(%rsp), %rsi
.Ltmp1116:
.LBB58_50:
	movq	%rsi, 48(%rsp)
	movq	%rdx, 56(%rsp)
	movq	%rax, 64(%rsp)
	testq	%rbx, %rbx
	js	.LBB58_93
.Ltmp1117:
	.loc	5 0 20
	cmpq	%rdx, %rbx
	jge	.LBB58_93
.Ltmp1118:
	.loc	5 434 20
	leaq	(%rbx,%rbx,2), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_66
.Ltmp1119:
	movl	$command_line_arguments.Attribute..d, %edi
	leaq	432(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB58_68
.Ltmp1120:
.LBB58_54:
	.loc	5 427 20 is_stmt 1
	cmpq	%rax, %rdx
	jg	.LBB58_94
.Ltmp1121:
	.loc	5 0 20 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB58_94
.Ltmp1122:
	.loc	5 427 20
	movq	80(%rsp), %rsi
.Ltmp1123:
.LBB58_57:
	movq	%rsi, 80(%rsp)
	movq	%rdx, 88(%rsp)
	movq	%rax, 96(%rsp)
	testq	%rbx, %rbx
	js	.LBB58_93
.Ltmp1124:
	.loc	5 0 20
	cmpq	%rdx, %rbx
	jge	.LBB58_93
.Ltmp1125:
	.loc	5 427 20
	leaq	(%rbx,%rbx,2), %rax
	shlq	$5, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_71
.Ltmp1126:
	movl	$command_line_arguments.Attribute..d, %edi
	leaq	624(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB58_73
.Ltmp1127:
.LBB58_61:
	.loc	5 420 20 is_stmt 1
	testq	%rsi, %rsi
	je	.LBB58_78
.Ltmp1128:
	movaps	848(%rsp), %xmm0
	movups	%xmm0, 80(%rsi)
	movaps	832(%rsp), %xmm0
	movups	%xmm0, 64(%rsi)
	movaps	768(%rsp), %xmm0
	movaps	784(%rsp), %xmm1
	movaps	800(%rsp), %xmm2
	movaps	816(%rsp), %xmm3
	movups	%xmm3, 48(%rsi)
	movups	%xmm2, 32(%rsi)
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp1129:
.LBB58_63:
	.loc	5 0 20 is_stmt 0
	addq	$72, %rbp
.Ltmp1130:
	movq	128(%rsp), %rax
	movq	%rax, 240(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 224(%rsp)
	.loc	5 420 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_65
.Ltmp1131:
	movl	$type...6.7command_line_arguments.Attribute, %edi
	movq	%rbp, %rsi
	leaq	224(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB58_77
.Ltmp1132:
.LBB58_65:
	movq	240(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	224(%rsp), %xmm0
	jmp	.LBB58_76
.Ltmp1133:
.LBB58_66:
	.loc	5 434 20 is_stmt 1
	testq	%rsi, %rsi
	je	.LBB58_78
.Ltmp1134:
	movaps	512(%rsp), %xmm0
	movups	%xmm0, 80(%rsi)
	movaps	496(%rsp), %xmm0
	movups	%xmm0, 64(%rsi)
	movaps	432(%rsp), %xmm0
	movaps	448(%rsp), %xmm1
	movaps	464(%rsp), %xmm2
	movaps	480(%rsp), %xmm3
	movups	%xmm3, 48(%rsi)
	movups	%xmm2, 32(%rsi)
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp1135:
.LBB58_68:
	.loc	5 0 20 is_stmt 0
	addq	$72, %rbp
	movq	64(%rsp), %rax
	movq	%rax, 176(%rsp)
	movaps	48(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
	.loc	5 434 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_70
.Ltmp1136:
	movl	$type...6.7command_line_arguments.Attribute, %edi
	movq	%rbp, %rsi
	leaq	160(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB58_77
.Ltmp1137:
.LBB58_70:
	movq	176(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	160(%rsp), %xmm0
	jmp	.LBB58_76
.Ltmp1138:
.LBB58_71:
	.loc	5 427 20 is_stmt 1
	testq	%rsi, %rsi
	je	.LBB58_78
.Ltmp1139:
	movaps	704(%rsp), %xmm0
	movups	%xmm0, 80(%rsi)
	movaps	688(%rsp), %xmm0
	movups	%xmm0, 64(%rsi)
	movaps	624(%rsp), %xmm0
	movaps	640(%rsp), %xmm1
	movaps	656(%rsp), %xmm2
	movaps	672(%rsp), %xmm3
	movups	%xmm3, 48(%rsi)
	movups	%xmm2, 32(%rsi)
	movups	%xmm1, 16(%rsi)
	movups	%xmm0, (%rsi)
.Ltmp1140:
.LBB58_73:
	.loc	5 0 20 is_stmt 0
	addq	$72, %rbp
.Ltmp1141:
	movq	96(%rsp), %rax
	movq	%rax, 208(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	5 427 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_75
.Ltmp1142:
	movl	$type...6.7command_line_arguments.Attribute, %edi
	movq	%rbp, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB58_77
.Ltmp1143:
.LBB58_75:
	movq	208(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	192(%rsp), %xmm0
.Ltmp1144:
.LBB58_76:
	.loc	5 0 18
	movups	%xmm0, (%rbp)
.Ltmp1145:
.LBB58_77:
	.loc	5 401 10 is_stmt 1
	movq	40(%r12), %rax
	.loc	5 401 23 is_stmt 0
	testq	%rax, %rax
	jne	.LBB58_19
.Ltmp1146:
.LBB58_78:
	.loc	5 0 23
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1147:
.LBB58_79:
	.loc	5 403 6 is_stmt 1
	movq	24(%rsp), %rdi
.Ltmp1148:
	.loc	5 403 9 is_stmt 0
	callq	command_line_arguments.Tag.IsRawText
.Ltmp1149:
	.loc	5 403 3
	testb	$1, %al
	je	.LBB58_82
.Ltmp1150:
	.loc	5 404 5 is_stmt 1
	movq	(%r12), %rax
	.loc	5 404 13 is_stmt 0
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1151:
	.loc	5 404 22
	movb	$1, 88(%rax)
.Ltmp1152:
.LBB58_82:
	.loc	5 407 25 is_stmt 1
	movq	24(%rsp), %rdx
	.loc	5 407 13 is_stmt 0
	movl	$pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag, %esi
	movq	%r12, %rdi
	callq	command_line_arguments.Parser.parseBlock
.Ltmp1153:
	.loc	5 408 6 is_stmt 1
	movq	24(%rsp), %rdi
.Ltmp1154:
	.loc	5 408 9 is_stmt 0
	testq	%rdi, %rdi
	je	.LBB58_78
.Ltmp1155:
	.loc	5 408 16
	cmpq	$0, 40(%rdi)
	je	.LBB58_89
.Ltmp1156:
	.loc	5 411 27 is_stmt 1
	testq	%rax, %rax
	je	.LBB58_78
.Ltmp1157:
	.loc	5 0 27 is_stmt 0
	movq	48(%rax), %r14
	.loc	5 411 4
	testq	%r14, %r14
	jle	.LBB58_92
.Ltmp1158:
	.loc	5 0 4
	movq	40(%rax), %rbp
	.loc	5 411 4
	addq	$8, %rbp
	xorl	%ebx, %ebx
.Ltmp1159:
	.p2align	4, 0x90
.LBB58_87:
	movq	-8(%rbp), %rsi
.Ltmp1160:
	movq	(%rbp), %rdx
.Ltmp1161:
	.loc	5 412 8 is_stmt 1
	movq	40(%rdi), %rdi
.Ltmp1162:
	.loc	5 412 14 is_stmt 0
	callq	command_line_arguments.Block.push
.Ltmp1163:
	.loc	5 411 4 is_stmt 1
	addq	$1, %rbx
	cmpq	%r14, %rbx
	jge	.LBB58_92
.Ltmp1164:
	.loc	5 0 4 is_stmt 0
	addq	$16, %rbp
	.loc	5 412 5 is_stmt 1
	movq	24(%rsp), %rdi
.Ltmp1165:
	.loc	5 412 8 is_stmt 0
	testq	%rdi, %rdi
	jne	.LBB58_87
	jmp	.LBB58_78
.Ltmp1166:
.LBB58_89:
	.loc	5 0 8
	addq	$40, %rdi
.Ltmp1167:
	.loc	5 409 14 is_stmt 1
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_91
.Ltmp1168:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
.Ltmp1169:
	.loc	5 0 14 is_stmt 0
	jmp	.LBB58_92
.Ltmp1170:
.LBB58_91:
	.loc	5 409 14
	movq	%rax, (%rdi)
.Ltmp1171:
.LBB58_92:
	.loc	5 444 9 is_stmt 1
	movq	24(%rsp), %rax
.Ltmp1172:
	.loc	5 444 2 is_stmt 0
	addq	$1080, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1173:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1174:
.LBB58_93:
	.cfi_def_cfa_offset 1136
	.loc	5 0 2
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1175:
.LBB58_94:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1176:
.LBB58_95:
	.loc	5 432 4 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	.Lconst.359(%rip), %xmm0
	movaps	%xmm0, 592(%rsp)
	leaq	592(%rsp), %rdx
	jmp	.LBB58_98
.Ltmp1177:
.LBB58_96:
	.loc	5 418 4
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1178:
	.loc	5 0 4 is_stmt 0
	movups	.Lconst.359(%rip), %xmm0
	movaps	%xmm0, 880(%rsp)
	leaq	880(%rsp), %rdx
	jmp	.LBB58_98
.Ltmp1179:
.LBB58_97:
	.loc	5 425 4 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1180:
	.loc	5 0 4 is_stmt 0
	movups	.Lconst.359(%rip), %xmm0
	movaps	%xmm0, 736(%rsp)
	leaq	736(%rsp), %rdx
.Ltmp1181:
.LBB58_98:
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Lfunc_end58:
	.size	command_line_arguments.Parser.parseTag, .Lfunc_end58-command_line_arguments.Parser.parseTag
	.cfi_endproc
	.section	.rodata.command_line_arguments.Parser.parseTag,"a",@progbits
	.p2align	3
.LJTI58_0:
	.quad	.LBB58_21
	.quad	.LBB58_32
	.quad	.LBB58_92
	.quad	.LBB58_35
	.quad	.LBB58_27
	.quad	.LBB58_92
	.quad	.LBB58_92
	.quad	.LBB58_79

	.section	.text.command_line_arguments.Parser.parseText,"ax",@progbits
	.globl	command_line_arguments.Parser.parseText
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.parseText,@function
command_line_arguments.Parser.parseText:
.Lfunc_begin59:
	.loc	5 375 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB59_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB59_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
.Ltmp1182:
	.loc	5 376 10 prologue_end
	movl	$-10, %esi
	callq	command_line_arguments.Parser.expect
	movups	.Lconst.339(%rip), %xmm0
	movaps	%xmm0, 16(%rsp)
	.loc	5 377 32
	testq	%rax, %rax
	je	.LBB59_11
.Ltmp1183:
	.loc	5 0 32 is_stmt 0
	movq	%rax, %rbx
.Ltmp1184:
	.loc	5 377 32
	movq	24(%rax), %rsi
	leaq	16(%rsp), %rdx
	.loc	5 377 37
	movl	$type..map.6string.7string, %edi
	callq	runtime.mapaccess1
	.loc	5 377 46
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movl	$.Lconst.340, %edx
	movl	$3, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%bpl
	.loc	5 377 10
	movups	8(%rbx), %xmm0
	movups	%xmm0, (%rsp)
.Ltmp1185:
	.loc	2 89 8 is_stmt 1
	movl	$command_line_arguments.Text..d, %edi
	callq	runtime.newobject
	.loc	2 90 4
	testq	%rax, %rax
	je	.LBB59_11
.Ltmp1186:
	.loc	2 0 4 is_stmt 0
	movq	%rax, %rbx
.Ltmp1187:
	.loc	2 90 4
	movq	%rax, %rsi
	addq	$40, %rsi
	.loc	2 90 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB59_6
.Ltmp1188:
	.loc	2 0 11
	movq	%rsp, %rdx
	.loc	2 90 11
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB59_7
.Ltmp1189:
.LBB59_6:
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1190:
.LBB59_7:
	.loc	2 91 9 is_stmt 1
	movb	%bpl, 56(%rbx)
	leaq	40(%rsp), %rdi
.Ltmp1191:
	.loc	5 378 25
	movq	%r14, %rsi
	callq	command_line_arguments.Parser.pos
	.loc	5 378 22 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB59_10
.Ltmp1192:
	.loc	5 0 22
	leaq	40(%rsp), %rdx
	.loc	5 378 22
	movl	$command_line_arguments.SourcePosition..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB59_9
.Ltmp1193:
.LBB59_10:
	movq	72(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	40(%rsp), %xmm0
	movups	56(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp1194:
.LBB59_9:
	.loc	5 379 2 is_stmt 1
	movq	%rbx, %rax
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp1195:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1196:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1197:
.LBB59_11:
	.cfi_def_cfa_offset 112
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end59:
	.size	command_line_arguments.Parser.parseText, .Lfunc_end59-command_line_arguments.Parser.parseText
	.cfi_endproc

	.section	.text.command_line_arguments.Parser.pos,"ax",@progbits
	.globl	command_line_arguments.Parser.pos
	.p2align	4, 0x90
	.type	command_line_arguments.Parser.pos,@function
command_line_arguments.Parser.pos:
.Lfunc_begin60:
	.loc	5 147 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB60_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB60_2:
.Ltmp1198:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	.loc	5 148 10 prologue_end
	testq	%rsi, %rsi
	je	.LBB60_4
.Ltmp1199:
	.loc	5 0 10 is_stmt 0
	movq	%rsi, %r14
.Ltmp1200:
	movq	%rdi, %rbx
	.loc	5 148 10
	movq	(%rsi), %rsi
	movq	%rsp, %rdi
	.loc	5 148 18
	callq	command_line_arguments.scanner.Pos
	.loc	5 149 15 is_stmt 1
	movups	8(%r14), %xmm0
	movups	%xmm0, 24(%rsp)
	.loc	5 150 2
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rbx)
	movq	32(%rsp), %rax
	movq	%rax, 32(%rbx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 16(%rbx)
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp1201:
	.cfi_def_cfa_offset 8
	retq
.LBB60_4:
	.cfi_def_cfa_offset 64
.Ltmp1202:
	.loc	5 148 10
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1203:
.Lfunc_end60:
	.size	command_line_arguments.Parser.pos, .Lfunc_end60-command_line_arguments.Parser.pos
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.Next,"ax",@progbits
	.globl	command_line_arguments.scanner.Next
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.Next,@function
command_line_arguments.scanner.Next:
.Lfunc_begin61:
	.loc	4 80 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB61_2
	movq	%r10, %rax
	movabsq	$88, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB61_2:
.Ltmp1204:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$64, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 81 6 prologue_end
	testq	%rdi, %rdi
	je	.LBB61_33
.Ltmp1205:
	.loc	4 0 6 is_stmt 0
	movq	%rdi, %r14
.Ltmp1206:
	testb	$1, 88(%rdi)
	jne	.LBB61_14
.Ltmp1207:
	.loc	4 86 3 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.ensureBuffer
.Ltmp1208:
	.loc	4 88 17
	movq	16(%r14), %rdi
	.loc	4 88 23 is_stmt 0
	callq	container_list.List.Front
	.loc	4 88 41
	testq	%rax, %rax
	je	.LBB61_6
.Ltmp1209:
	.loc	4 0 41
	movq	%rax, %rbx
.Ltmp1210:
	movq	24(%rax), %rsi
	movq	32(%rax), %r15
.Ltmp1211:
	.loc	4 89 23 is_stmt 1
	movl	$type...1command_line_arguments.token, %edi
	movl	$type..interface.4.5, %edx
	callq	runtime.assertI2T
	.loc	4 90 4
	movq	16(%r14), %rdi
	.loc	4 90 10 is_stmt 0
	movq	%rbx, %rsi
	callq	container_list.List.Remove
	.loc	4 91 3 is_stmt 1
	movq	%r15, %rax
	jmp	.LBB61_15
.Ltmp1212:
.LBB61_14:
	.loc	4 82 13
	movb	$0, 88(%r14)
	.loc	4 83 11
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.NextRaw
.Ltmp1213:
.LBB61_15:
	.loc	4 0 11 is_stmt 0
	addq	$64, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1214:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB61_6:
	.cfi_def_cfa_offset 96
.Ltmp1215:
	.loc	4 94 10 is_stmt 1
	movl	24(%r14), %eax
	testl	%eax, %eax
	je	.LBB61_16
.Ltmp1216:
	.loc	4 0 10 is_stmt 0
	cmpl	$2, %eax
	je	.LBB61_10
.Ltmp1217:
	cmpl	$1, %eax
	jne	.LBB61_9
.Ltmp1218:
	.loc	4 111 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanMixin
.Ltmp1219:
	.loc	4 111 32 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1220:
	.loc	4 115 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanMixinCall
.Ltmp1221:
	.loc	4 115 36 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1222:
	.loc	4 119 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanDoctype
.Ltmp1223:
	.loc	4 119 34 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1224:
	.loc	4 123 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanCondition
.Ltmp1225:
	.loc	4 123 36 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1226:
	.loc	4 127 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanEach
.Ltmp1227:
	.loc	4 127 31 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1228:
	.loc	4 131 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanImport
.Ltmp1229:
	.loc	4 131 33 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1230:
	.loc	4 135 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanExtends
.Ltmp1231:
	.loc	4 135 34 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1232:
	.loc	4 139 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanBlock
.Ltmp1233:
	.loc	4 139 32 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1234:
	.loc	4 143 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanAssignment
.Ltmp1235:
	.loc	4 143 37 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1236:
	.loc	4 147 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanTag
.Ltmp1237:
	.loc	4 147 30 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1238:
	.loc	4 151 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanId
.Ltmp1239:
	.loc	4 151 29 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1240:
	.loc	4 155 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanClassName
.Ltmp1241:
	.loc	4 155 36 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1242:
	.loc	4 159 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanAttribute
.Ltmp1243:
	.loc	4 159 36 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1244:
	.loc	4 163 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanComment
.Ltmp1245:
	.loc	4 163 34 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1246:
	.loc	4 167 14 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanText
.Ltmp1247:
	.loc	4 0 14 is_stmt 0
	jmp	.LBB61_15
.Ltmp1248:
.LBB61_16:
	.loc	4 103 11 is_stmt 1
	movl	$1, 24(%r14)
.Ltmp1249:
	.loc	4 105 14
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.scanIndent
.Ltmp1250:
	.loc	4 105 33 is_stmt 0
	testq	%rax, %rax
	jne	.LBB61_15
.Ltmp1251:
	.loc	4 109 11 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.scanner.Next
.Ltmp1252:
	.loc	4 0 11 is_stmt 0
	jmp	.LBB61_15
.Ltmp1253:
.LBB61_10:
	.loc	4 96 18 is_stmt 1
	movq	8(%r14), %rdi
	.loc	4 96 30 is_stmt 0
	callq	container_list.List.Back
.Ltmp1254:
	.loc	4 96 47
	testq	%rax, %rax
	je	.LBB61_11
.Ltmp1255:
	.loc	4 97 5 is_stmt 1
	movq	8(%r14), %rdi
	.loc	4 97 17 is_stmt 0
	movq	%rax, %rsi
	callq	container_list.List.Remove
.Ltmp1256:
	.loc	4 98 11 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1257:
	.loc	4 0 11 is_stmt 0
	movaps	.Lconst.364(%rip), %xmm0
	movaps	%xmm0, 32(%rsp)
	movaps	.Lconst.364+16(%rip), %xmm0
	movaps	%xmm0, 48(%rsp)
	leaq	32(%rsp), %rdx
	jmp	.LBB61_12
.Ltmp1258:
.LBB61_9:
	xorl	%eax, %eax
	jmp	.LBB61_15
.Ltmp1259:
.LBB61_11:
	.loc	4 101 10 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
.Ltmp1260:
	movq	%rax, %rbx
.Ltmp1261:
	.loc	4 0 10 is_stmt 0
	movaps	.Lconst.365(%rip), %xmm0
	movaps	%xmm0, (%rsp)
	movaps	.Lconst.365+16(%rip), %xmm0
	movaps	%xmm0, 16(%rsp)
	movq	%rsp, %rdx
.Ltmp1262:
.LBB61_12:
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, %rax
	jmp	.LBB61_15
.Ltmp1263:
.LBB61_33:
	.loc	4 81 6 is_stmt 1
	movl	$6, %edi
.Ltmp1264:
	callq	__go_runtime_error
.Ltmp1265:
.Lfunc_end61:
	.size	command_line_arguments.scanner.Next, .Lfunc_end61-command_line_arguments.scanner.Next
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.NextRaw,"ax",@progbits
	.globl	command_line_arguments.scanner.NextRaw
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.NextRaw,@function
command_line_arguments.scanner.NextRaw:
.Lfunc_begin62:
	.loc	4 175 0
	.cfi_startproc
	leaq	-392(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB62_2
	movq	%r10, %rax
	movabsq	$392, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB62_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$344, %rsp
	.cfi_def_cfa_offset 400
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
.Ltmp1266:
	.loc	4 180 4 prologue_end
	callq	command_line_arguments.scanner.ensureBuffer
	.loc	4 182 11
	testq	%r15, %r15
	je	.LBB62_27
.Ltmp1267:
	.loc	4 0 11 is_stmt 0
	leaq	192(%rsp), %rbp
	leaq	32(%r15), %rax
	movq	%rax, 40(%rsp)
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	xorl	%r13d, %r13d
	jmp	.LBB62_4
.Ltmp1268:
	.p2align	4, 0x90
.LBB62_26:
	.loc	4 180 4 is_stmt 1
	movq	%r15, %rdi
	callq	command_line_arguments.scanner.ensureBuffer
.Ltmp1269:
.LBB62_4:
	.loc	4 182 11
	movl	24(%r15), %eax
	testl	%eax, %eax
	je	.LBB62_15
.Ltmp1270:
	.loc	4 0 11 is_stmt 0
	cmpl	$1, %eax
	je	.LBB62_9
.Ltmp1271:
	cmpl	$2, %eax
	jne	.LBB62_26
	jmp	.LBB62_7
.Ltmp1272:
	.p2align	4, 0x90
.LBB62_9:
	.loc	4 209 19 is_stmt 1
	testq	%r14, %r14
	jle	.LBB62_11
.Ltmp1273:
	.loc	4 210 14
	movq	%rbx, 144(%rsp)
	movq	%r14, 152(%rsp)
	movups	.Lconst.368(%rip), %xmm0
	leaq	160(%rsp), %rax
	movups	%xmm0, (%rax)
	movups	144(%rsp), %xmm0
	movups	160(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %rbx
.Ltmp1274:
	movq	%rdx, %r14
.Ltmp1275:
.LBB62_11:
	.loc	4 212 18
	testq	%r13, %r13
	jle	.LBB62_14
.Ltmp1276:
	.loc	4 0 18 is_stmt 0
	movq	%r13, %r12
.Ltmp1277:
	.p2align	4, 0x90
.LBB62_13:
	.loc	4 213 5 is_stmt 1
	movq	%rbx, 176(%rsp)
	movq	%r14, 184(%rsp)
	movups	.Lconst.370(%rip), %xmm0
	movups	%xmm0, (%rbp)
	movups	176(%rsp), %xmm0
	movups	192(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %rbx
.Ltmp1278:
	movq	%rdx, %r14
.Ltmp1279:
	.loc	4 212 18
	addq	$-1, %r12
	jne	.LBB62_13
.Ltmp1280:
.LBB62_14:
	.loc	4 215 13
	movq	%rbx, 208(%rsp)
	movq	%r14, 216(%rsp)
	movq	40(%rsp), %rax
	movups	(%rax), %xmm0
	leaq	224(%rsp), %rax
	movups	%xmm0, (%rax)
	movups	208(%rsp), %xmm0
	movups	224(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %rbx
.Ltmp1281:
	movq	%rdx, %r14
.Ltmp1282:
	.loc	4 216 14
	movq	40(%r15), %rsi
	.loc	4 216 5 is_stmt 0
	movq	%r15, %rdi
	callq	command_line_arguments.scanner.consume
	jmp	.LBB62_26
.Ltmp1283:
	.p2align	4, 0x90
.LBB62_15:
	.loc	4 186 12 is_stmt 1
	movl	$1, 24(%r15)
.Ltmp1284:
	.loc	4 188 15
	movq	%r15, %rdi
	callq	command_line_arguments.scanner.scanIndent
.Ltmp1285:
	.loc	4 188 34 is_stmt 0
	testq	%rax, %rax
	je	.LBB62_26
.Ltmp1286:
	.loc	4 189 11 is_stmt 1
	movl	(%rax), %eax
.Ltmp1287:
	.loc	4 0 11 is_stmt 0
	cmpl	$-5, %eax
	je	.LBB62_17
.Ltmp1288:
	cmpl	$-4, %eax
	jne	.LBB62_25
.Ltmp1289:
	movl	$1, %eax
	.loc	4 198 14 is_stmt 1
	addq	%rax, %r13
.Ltmp1290:
	.loc	4 0 14 is_stmt 0
	jns	.LBB62_26
	jmp	.LBB62_21
.Ltmp1291:
.LBB62_17:
	movq	$-1, %rax
	.loc	4 198 14
	addq	%rax, %r13
.Ltmp1292:
	.loc	4 0 14
	jns	.LBB62_26
	jmp	.LBB62_21
.Ltmp1293:
.LBB62_25:
	.loc	4 194 15 is_stmt 1
	movq	%rbx, 112(%rsp)
	movq	%r14, 120(%rsp)
	movups	.Lconst.368(%rip), %xmm0
	leaq	128(%rsp), %rax
	movups	%xmm0, (%rax)
	movups	112(%rsp), %xmm0
	movups	128(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %rbx
.Ltmp1294:
	movq	%rdx, %r14
.Ltmp1295:
	.loc	4 0 15 is_stmt 0
	jmp	.LBB62_26
.Ltmp1296:
.LBB62_7:
	movaps	.Lconst.366+16(%rip), %xmm0
	movaps	%xmm0, 320(%rsp)
	movaps	.Lconst.366(%rip), %xmm0
	movaps	%xmm0, 304(%rsp)
	leaq	304(%rsp), %r8
	.loc	4 184 35 is_stmt 1
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r15
.Ltmp1297:
	.loc	4 184 11 is_stmt 0
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp1298:
	.loc	4 184 12
	movl	$-10, 80(%rsp)
	movq	%rbx, 88(%rsp)
	movq	%r14, 96(%rsp)
	movq	%r15, 104(%rsp)
	leaq	80(%rsp), %rdx
.Ltmp1299:
.LBB62_8:
	.loc	4 0 12
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%r12, %rax
	addq	$344, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1300:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1301:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB62_21:
	.cfi_def_cfa_offset 400
.Ltmp1302:
	.loc	4 199 23 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movaps	.Lconst.364(%rip), %xmm0
	movaps	%xmm0, 272(%rsp)
	movaps	.Lconst.364+16(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	leaq	272(%rsp), %rdx
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 199 7 is_stmt 0
	movq	16(%r15), %rdi
	.loc	4 199 13
	movl	$type...1command_line_arguments.token, %esi
	movq	%r12, %rdx
	callq	container_list.List.PushBack
	.loc	4 201 21 is_stmt 1
	testq	%r14, %r14
	jle	.LBB62_24
.Ltmp1303:
	.loc	4 201 50 is_stmt 0
	cmpb	$10, -1(%rbx,%r14)
	jne	.LBB62_24
.Ltmp1304:
	.loc	4 0 50
	leaq	-1(%r14), %rcx
	.loc	4 202 22 is_stmt 1
	xorl	%edx, %edx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	__go_string_slice
	movq	%rax, %rbx
.Ltmp1305:
	movq	%rdx, %r14
.Ltmp1306:
.LBB62_24:
	.loc	4 0 22 is_stmt 0
	movaps	.Lconst.366+16(%rip), %xmm0
	movaps	%xmm0, 256(%rsp)
	movaps	.Lconst.366(%rip), %xmm0
	movaps	%xmm0, 240(%rsp)
	leaq	240(%rsp), %r8
	.loc	4 205 37 is_stmt 1
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r15
.Ltmp1307:
	.loc	4 205 13 is_stmt 0
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp1308:
	.loc	4 205 14
	movl	$-10, 48(%rsp)
	movq	%rbx, 56(%rsp)
	movq	%r14, 64(%rsp)
	movq	%r15, 72(%rsp)
	leaq	48(%rsp), %rdx
	jmp	.LBB62_8
.Ltmp1309:
.LBB62_27:
	.loc	4 182 11 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1310:
.Lfunc_end62:
	.size	command_line_arguments.scanner.NextRaw, .Lfunc_end62-command_line_arguments.scanner.NextRaw
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.Pos,"ax",@progbits
	.globl	command_line_arguments.scanner.Pos
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.Pos,@function
command_line_arguments.scanner.Pos:
.Lfunc_begin63:
	.loc	4 75 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB63_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB63_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1311:
	.loc	4 76 25 prologue_end
	testq	%rsi, %rsi
	je	.LBB63_4
.Ltmp1312:
	movq	64(%rsi), %rax
	.loc	4 76 46 is_stmt 0
	movq	72(%rsi), %rcx
	.loc	4 76 40
	addq	$1, %rax
.Ltmp1313:
	.loc	4 76 60
	addq	$1, %rcx
.Ltmp1314:
	.loc	4 76 66
	movq	80(%rsi), %rdx
.Ltmp1315:
	.loc	4 76 2
	movq	%rax, (%rdi)
	movq	%rcx, 8(%rdi)
	movq	%rdx, 16(%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1316:
.LBB63_4:
	.cfi_def_cfa_offset 16
	.loc	4 76 25
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1317:
.Lfunc_end63:
	.size	command_line_arguments.scanner.Pos, .Lfunc_end63-command_line_arguments.scanner.Pos
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.consume,"ax",@progbits
	.globl	command_line_arguments.scanner.consume
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.consume,@function
command_line_arguments.scanner.consume:
.Lfunc_begin64:
	.loc	4 461 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB64_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB64_2:
.Ltmp1318:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$96, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 462 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB64_9
.Ltmp1319:
	.loc	4 0 10 is_stmt 0
	movq	%rsi, %r14
.Ltmp1320:
	movq	%rdi, %rbx
.Ltmp1321:
	.loc	4 462 5
	movq	40(%rdi), %rsi
	.loc	4 462 19
	cmpq	%r14, %rsi
	jl	.LBB64_10
.Ltmp1322:
	.loc	4 466 21 is_stmt 1
	movups	48(%rbx), %xmm0
	.loc	4 466 18 is_stmt 0
	movups	%xmm0, 64(%rbx)
	.loc	4 468 18 is_stmt 1
	movq	%r14, 80(%rbx)
	.loc	4 470 21
	testq	%r14, %r14
	js	.LBB64_11
.Ltmp1323:
	.loc	4 0 21 is_stmt 0
	leaq	32(%rbx), %r15
	movq	(%r15), %rdi
	.loc	4 470 21
	movq	$-1, %rcx
	movq	%r14, %rdx
	callq	__go_string_slice
	movq	%rax, 24(%rsp)
	movq	%rdx, 32(%rsp)
	.loc	4 470 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB64_7
.Ltmp1324:
	.loc	4 0 11
	leaq	24(%rsp), %rdx
	.loc	4 470 11
	movl	$string..d, %edi
	movq	%r15, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB64_8
.Ltmp1325:
.LBB64_7:
	movq	24(%rsp), %rax
	movq	%rax, (%r15)
	movq	32(%rsp), %rax
	movq	%rax, 8(%r15)
.Ltmp1326:
.LBB64_8:
	.loc	4 471 8 is_stmt 1
	addq	%r14, 56(%rbx)
	addq	$96, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp1327:
	.cfi_def_cfa_offset 24
	.loc	4 0 8 is_stmt 0
	popq	%r14
.Ltmp1328:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB64_9:
	.cfi_def_cfa_offset 128
.Ltmp1329:
	.loc	4 462 10 is_stmt 1
	movl	$6, %edi
.Ltmp1330:
	callq	__go_runtime_error
.Ltmp1331:
.LBB64_10:
	.loc	4 463 13
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%r14, (%rax)
	movq	$int..d, 80(%rsp)
	movq	%rax, 88(%rsp)
	leaq	80(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.420, %edi
	movl	$39, %esi
	callq	fmt.Sprintf
	movq	%rax, %r15
	movq	%rdx, %r14
.Ltmp1332:
	.loc	4 463 3 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1333:
	.loc	4 0 3
	movq	%r15, 64(%rsp)
	movq	%r14, 72(%rsp)
	leaq	64(%rsp), %rdx
	.loc	4 463 3
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.LBB64_11:
.Ltmp1334:
	.loc	4 470 21 is_stmt 1
	movl	$5, %edi
	callq	__go_runtime_error
.Ltmp1335:
.Lfunc_end64:
	.size	command_line_arguments.scanner.consume, .Lfunc_end64-command_line_arguments.scanner.consume
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.ensureBuffer,"ax",@progbits
	.globl	command_line_arguments.scanner.ensureBuffer
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.ensureBuffer,@function
command_line_arguments.scanner.ensureBuffer:
.Lfunc_begin65:
	.loc	4 475 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB65_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB65_2:
.Ltmp1336:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$48, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 476 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB65_24
.Ltmp1337:
	.loc	4 0 10 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1338:
	.loc	4 476 19
	cmpq	$0, 40(%rdi)
	jg	.LBB65_23
.Ltmp1339:
	.loc	4 480 15 is_stmt 1
	movq	(%rbx), %rsi
	leaq	16(%rsp), %rdi
	.loc	4 480 22 is_stmt 0
	movl	$10, %edx
	callq	bufio.Reader.ReadString
	movq	32(%rsp), %r14
.Ltmp1340:
	movq	40(%rsp), %r15
.Ltmp1341:
	.loc	4 0 22
	movups	16(%rsp), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 482 9 is_stmt 1
	testq	%r14, %r14
	je	.LBB65_5
.Ltmp1342:
	.loc	4 482 23 is_stmt 0
	movq	io.EOF(%rip), %rdx
	movq	io.EOF+8(%rip), %rcx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	runtime.ifaceeq
	cmpb	$1, %al
	jne	.LBB65_13
.Ltmp1343:
	.loc	4 484 26 is_stmt 1
	movq	8(%rsp), %rsi
	.loc	4 482 9
	testq	%r14, %r14
	je	.LBB65_6
.Ltmp1344:
	.loc	4 0 9 is_stmt 0
	testq	%rsi, %rsi
	jne	.LBB65_6
.Ltmp1345:
	.loc	4 485 11 is_stmt 1
	movl	$2, 24(%rbx)
	jmp	.LBB65_23
.Ltmp1346:
.LBB65_5:
	.loc	4 484 26
	movq	8(%rsp), %rsi
.Ltmp1347:
.LBB65_6:
	.loc	4 0 26 is_stmt 0
	movabsq	$-9223372036854775808, %rax
	.loc	4 488 9 is_stmt 1
	cmpq	%rax, %rsi
	je	.LBB65_8
.Ltmp1348:
	.loc	4 0 9 is_stmt 0
	movq	%rsi, %rcx
	addq	$-1, %rcx
	js	.LBB65_8
.Ltmp1349:
	.loc	4 488 9
	movq	(%rsp), %rdi
	.loc	4 488 22
	cmpb	$10, (%rdi,%rcx)
	jne	.LBB65_17
.Ltmp1350:
	.loc	4 489 13 is_stmt 1
	xorl	%edx, %edx
	callq	__go_string_slice
	.loc	4 489 8 is_stmt 0
	movq	%rax, (%rsp)
	movq	%rdx, 8(%rsp)
	.loc	4 492 15 is_stmt 1
	testq	%rdx, %rdx
	jle	.LBB65_19
.Ltmp1351:
	.loc	4 0 15 is_stmt 0
	movq	%rax, %rdi
	movq	%rdx, %rsi
.Ltmp1352:
.LBB65_17:
	.loc	4 492 38
	cmpb	$13, -1(%rdi,%rsi)
	jne	.LBB65_19
.Ltmp1353:
	.loc	4 0 38
	leaq	-1(%rsi), %rcx
	.loc	4 493 13 is_stmt 1
	xorl	%edx, %edx
	callq	__go_string_slice
	.loc	4 493 8 is_stmt 0
	movq	%rax, (%rsp)
	movq	%rdx, 8(%rsp)
.Ltmp1354:
.LBB65_19:
	.loc	4 0 8
	leaq	32(%rbx), %rsi
	.loc	4 496 11 is_stmt 1
	movl	$0, 24(%rbx)
	.loc	4 497 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB65_21
.Ltmp1355:
	.loc	4 0 12 is_stmt 0
	movq	%rsp, %rdx
	.loc	4 497 12
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB65_22
.Ltmp1356:
.LBB65_21:
	movaps	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1357:
.LBB65_22:
	.loc	4 498 10 is_stmt 1
	addq	$1, 48(%rbx)
	.loc	4 499 9
	movq	$0, 56(%rbx)
.Ltmp1358:
.LBB65_23:
	.loc	4 0 9 is_stmt 0
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp1359:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB65_24:
	.cfi_def_cfa_offset 80
.Ltmp1360:
	.loc	4 476 10 is_stmt 1
	movl	$6, %edi
.Ltmp1361:
	callq	__go_runtime_error
.LBB65_8:
.Ltmp1362:
	.loc	4 488 9
	movl	$2, %edi
	callq	__go_runtime_error
.Ltmp1363:
.LBB65_13:
	.loc	4 483 9
	movq	(%r14), %rdi
	.loc	4 483 3 is_stmt 0
	movq	%r15, %rsi
	callq	runtime.gopanic
.Ltmp1364:
.Lfunc_end65:
	.size	command_line_arguments.scanner.ensureBuffer, .Lfunc_end65-command_line_arguments.scanner.ensureBuffer
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanAssignment,"ax",@progbits
	.globl	command_line_arguments.scanner.scanAssignment
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanAssignment,@function
command_line_arguments.scanner.scanAssignment:
.Lfunc_begin66:
	.loc	4 314 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB66_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB66_2:
.Ltmp1365:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$144, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 315 45 prologue_end
	testq	%rdi, %rdi
	je	.LBB66_11
.Ltmp1366:
	.loc	4 0 45 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1367:
	.loc	4 315 11
	movq	command_line_arguments.rgxAssignment(%rip), %rsi
	.loc	4 315 24
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1368:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r14
.Ltmp1369:
	.loc	4 315 63
	testq	%r14, %r14
	je	.LBB66_6
.Ltmp1370:
	.loc	4 0 63
	jle	.LBB66_5
.Ltmp1371:
	movq	56(%rsp), %r15
.Ltmp1372:
	.loc	4 316 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 316 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 317 64 is_stmt 1
	cmpq	$1, %r14
	je	.LBB66_5
.Ltmp1373:
	.loc	4 317 39 is_stmt 0
	movups	.Lconst.344(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	16(%r15), %xmm1
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm1, 96(%rsp)
	.loc	4 317 34
	cmpq	$2, %r14
	jle	.LBB66_5
.Ltmp1374:
	.loc	4 0 34
	movups	32(%r15), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	80(%rsp), %r8
	.loc	4 317 39
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
	.loc	4 317 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1375:
	.loc	4 317 11
	movl	$-15, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	%r14, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 317 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 317 3
	movq	%rbx, %rax
	jmp	.LBB66_7
.Ltmp1376:
.LBB66_6:
	.loc	4 320 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1377:
.LBB66_7:
	.loc	4 0 2 is_stmt 0
	addq	$144, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1378:
.LBB66_5:
	.cfi_def_cfa_offset 176
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1379:
.LBB66_11:
	.loc	4 315 45 is_stmt 1
	movl	$6, %edi
.Ltmp1380:
	callq	__go_runtime_error
.Ltmp1381:
.Lfunc_end66:
	.size	command_line_arguments.scanner.scanAssignment, .Lfunc_end66-command_line_arguments.scanner.scanAssignment
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanAttribute,"ax",@progbits
	.globl	command_line_arguments.scanner.scanAttribute
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanAttribute,@function
command_line_arguments.scanner.scanAttribute:
.Lfunc_begin67:
	.loc	4 363 0
	.cfi_startproc
	leaq	-472(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB67_2
	movq	%r10, %rax
	movabsq	$472, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB67_2:
.Ltmp1382:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$448, %rsp
	.cfi_def_cfa_offset 480
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 364 44 prologue_end
	testq	%rdi, %rdi
	je	.LBB67_17
.Ltmp1383:
	.loc	4 0 44 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1384:
	.loc	4 364 11
	movq	command_line_arguments.rgxAttribute(%rip), %rsi
	.loc	4 364 23
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	168(%rsp), %rdi
.Ltmp1385:
	callq	regexp.Regexp.FindStringSubmatch
	movq	176(%rsp), %r15
.Ltmp1386:
	.loc	4 364 62
	testq	%r15, %r15
	je	.LBB67_6
.Ltmp1387:
	.loc	4 0 62
	jle	.LBB67_5
.Ltmp1388:
	movq	168(%rsp), %r14
.Ltmp1389:
	.loc	4 365 13 is_stmt 1
	movq	8(%r14), %rsi
	.loc	4 365 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 367 12 is_stmt 1
	cmpq	$3, %r15
	jle	.LBB67_5
.Ltmp1390:
	.loc	4 367 17 is_stmt 0
	cmpq	$0, 56(%r14)
	jne	.LBB67_14
.Ltmp1391:
	.loc	4 367 31
	movq	32(%r14), %rdi
	movq	40(%r14), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB67_11
.Ltmp1392:
.LBB67_14:
	.loc	4 0 31
	leaq	48(%r14), %rax
	.loc	4 368 39 is_stmt 1
	movups	.Lconst.337(%rip), %xmm0
	movaps	%xmm0, 32(%rsp)
	movups	(%rax), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	4 368 105 is_stmt 0
	cmpq	$5, %r15
	jle	.LBB67_5
.Ltmp1393:
	.loc	4 368 39
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 384(%rsp)
	movups	80(%r14), %xmm1
	movaps	%xmm1, 400(%rsp)
	movaps	32(%rsp), %xmm2
	movaps	48(%rsp), %xmm3
	movaps	%xmm3, 304(%rsp)
	movaps	%xmm2, 288(%rsp)
	movaps	.Lconst.399+16(%rip), %xmm2
	movaps	%xmm2, 336(%rsp)
	movaps	.Lconst.399(%rip), %xmm2
	movaps	%xmm2, 320(%rsp)
	movaps	%xmm1, 368(%rsp)
	movaps	%xmm0, 352(%rsp)
	movups	16(%r14), %xmm0
	movaps	%xmm0, 16(%rsp)
	leaq	288(%rsp), %r8
	movl	$type..map.6string.7string, %edi
	movl	$3, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
.Ltmp1394:
	.loc	4 368 11
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1395:
	.loc	4 368 12
	movl	$-11, 136(%rsp)
	movaps	16(%rsp), %xmm0
	movups	%xmm0, 144(%rsp)
	movq	%r14, 160(%rsp)
	leaq	136(%rsp), %rdx
.Ltmp1396:
.LBB67_16:
	.loc	4 0 12
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, %rax
	jmp	.LBB67_7
.Ltmp1397:
.LBB67_6:
	.loc	4 374 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1398:
.LBB67_7:
	.loc	4 0 2 is_stmt 0
	addq	$448, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1399:
.LBB67_11:
	.cfi_def_cfa_offset 480
	.loc	4 371 69 is_stmt 1
	cmpq	$5, %r15
	jl	.LBB67_5
.Ltmp1400:
	.loc	4 371 38 is_stmt 0
	movups	.Lconst.337(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	64(%r14), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	4 371 111
	cmpq	$5, %r15
	je	.LBB67_5
.Ltmp1401:
	.loc	4 371 38
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 416(%rsp)
	movups	80(%r14), %xmm1
	movaps	%xmm1, 432(%rsp)
	movaps	64(%rsp), %xmm2
	movaps	80(%rsp), %xmm3
	movaps	%xmm3, 208(%rsp)
	movaps	%xmm2, 192(%rsp)
	movaps	.Lconst.401+16(%rip), %xmm2
	movaps	%xmm2, 240(%rsp)
	movaps	.Lconst.401(%rip), %xmm2
	movaps	%xmm2, 224(%rsp)
	movaps	%xmm1, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movups	16(%r14), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	192(%rsp), %r8
	movl	$type..map.6string.7string, %edi
	movl	$3, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
.Ltmp1402:
	.loc	4 371 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1403:
	.loc	4 371 11
	movl	$-11, 104(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 112(%rsp)
	movq	%r14, 128(%rsp)
	leaq	104(%rsp), %rdx
	jmp	.LBB67_16
.Ltmp1404:
.LBB67_5:
	.loc	4 0 11
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1405:
.LBB67_17:
	.loc	4 364 44 is_stmt 1
	movl	$6, %edi
.Ltmp1406:
	callq	__go_runtime_error
.Ltmp1407:
.Lfunc_end67:
	.size	command_line_arguments.scanner.scanAttribute, .Lfunc_end67-command_line_arguments.scanner.scanAttribute
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanBlock,"ax",@progbits
	.globl	command_line_arguments.scanner.scanBlock
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanBlock,@function
command_line_arguments.scanner.scanBlock:
.Lfunc_begin68:
	.loc	4 401 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB68_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB68_2:
.Ltmp1408:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$144, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 402 40 prologue_end
	testq	%rdi, %rdi
	je	.LBB68_11
.Ltmp1409:
	.loc	4 0 40 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1410:
	.loc	4 402 11
	movq	command_line_arguments.rgxBlock(%rip), %rsi
	.loc	4 402 19
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1411:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r14
.Ltmp1412:
	.loc	4 402 58
	testq	%r14, %r14
	je	.LBB68_6
.Ltmp1413:
	.loc	4 0 58
	jle	.LBB68_5
.Ltmp1414:
	movq	56(%rsp), %r15
.Ltmp1415:
	.loc	4 403 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 403 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 404 71 is_stmt 1
	cmpq	$1, %r14
	je	.LBB68_5
.Ltmp1416:
	.loc	4 404 39 is_stmt 0
	movups	.Lconst.350(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	16(%r15), %xmm1
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm1, 96(%rsp)
	.loc	4 404 34
	cmpq	$2, %r14
	jle	.LBB68_5
.Ltmp1417:
	.loc	4 0 34
	movups	32(%r15), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	80(%rsp), %r8
	.loc	4 404 39
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
	.loc	4 404 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1418:
	.loc	4 404 11
	movl	$-17, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	%r14, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 404 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 404 3
	movq	%rbx, %rax
	jmp	.LBB68_7
.Ltmp1419:
.LBB68_6:
	.loc	4 407 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1420:
.LBB68_7:
	.loc	4 0 2 is_stmt 0
	addq	$144, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1421:
.LBB68_5:
	.cfi_def_cfa_offset 176
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1422:
.LBB68_11:
	.loc	4 402 40 is_stmt 1
	movl	$6, %edi
.Ltmp1423:
	callq	__go_runtime_error
.Ltmp1424:
.Lfunc_end68:
	.size	command_line_arguments.scanner.scanBlock, .Lfunc_end68-command_line_arguments.scanner.scanBlock
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanClassName,"ax",@progbits
	.globl	command_line_arguments.scanner.scanClassName
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanClassName,@function
command_line_arguments.scanner.scanClassName:
.Lfunc_begin69:
	.loc	4 352 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB69_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB69_2:
.Ltmp1425:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$144, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 353 44 prologue_end
	testq	%rdi, %rdi
	je	.LBB69_10
.Ltmp1426:
	.loc	4 0 44 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1427:
	.loc	4 353 11
	movq	command_line_arguments.rgxClassName(%rip), %rsi
	.loc	4 353 23
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1428:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r15
.Ltmp1429:
	.loc	4 353 62
	testq	%r15, %r15
	je	.LBB69_6
.Ltmp1430:
	.loc	4 0 62
	jle	.LBB69_5
.Ltmp1431:
	movq	56(%rsp), %r14
.Ltmp1432:
	.loc	4 354 13 is_stmt 1
	movq	8(%r14), %rsi
	.loc	4 354 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 355 71 is_stmt 1
	cmpq	$2, %r15
	jle	.LBB69_5
.Ltmp1433:
	.loc	4 355 38 is_stmt 0
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	32(%r14), %xmm1
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm1, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movups	16(%r14), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	80(%rsp), %r8
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
.Ltmp1434:
	.loc	4 355 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1435:
	.loc	4 355 11
	movl	$-8, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	%r14, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 355 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 355 3
	movq	%rbx, %rax
	jmp	.LBB69_7
.Ltmp1436:
.LBB69_6:
	.loc	4 358 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1437:
.LBB69_7:
	.loc	4 0 2 is_stmt 0
	addq	$144, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1438:
.LBB69_5:
	.cfi_def_cfa_offset 176
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1439:
.LBB69_10:
	.loc	4 353 44 is_stmt 1
	movl	$6, %edi
.Ltmp1440:
	callq	__go_runtime_error
.Ltmp1441:
.Lfunc_end69:
	.size	command_line_arguments.scanner.scanClassName, .Lfunc_end69-command_line_arguments.scanner.scanClassName
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanComment,"ax",@progbits
	.globl	command_line_arguments.scanner.scanComment
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanComment,@function
command_line_arguments.scanner.scanComment:
.Lfunc_begin70:
	.loc	4 325 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB70_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB70_2:
.Ltmp1442:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$160, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 326 42 prologue_end
	testq	%rdi, %rdi
	je	.LBB70_12
.Ltmp1443:
	.loc	4 0 42 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1444:
	.loc	4 326 11
	movq	command_line_arguments.rgxComment(%rip), %rsi
	.loc	4 326 21
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	72(%rsp), %rdi
.Ltmp1445:
	callq	regexp.Regexp.FindStringSubmatch
	movq	80(%rsp), %r14
.Ltmp1446:
	.loc	4 326 60
	testq	%r14, %r14
	je	.LBB70_6
.Ltmp1447:
	.loc	4 0 60
	movq	72(%rsp), %r15
.Ltmp1448:
	movups	.Lconst.392(%rip), %xmm0
	movaps	%xmm0, (%rsp)
.Ltmp1449:
	.loc	4 328 12 is_stmt 1
	cmpq	$2, %r14
	jl	.LBB70_5
.Ltmp1450:
	.loc	4 328 17 is_stmt 0
	cmpq	$0, 24(%r15)
	je	.LBB70_10
.Ltmp1451:
	.loc	4 329 9 is_stmt 1
	movups	.Lconst.356(%rip), %xmm0
	movaps	%xmm0, (%rsp)
.Ltmp1452:
.LBB70_10:
	.loc	4 332 13
	movq	8(%r15), %rsi
	.loc	4 332 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 333 36 is_stmt 1
	movups	.Lconst.339(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	(%rsp), %xmm1
	movaps	%xmm1, 144(%rsp)
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm1, 112(%rsp)
	.loc	4 333 31 is_stmt 0
	cmpq	$2, %r14
	jle	.LBB70_5
.Ltmp1453:
	.loc	4 0 31
	movups	32(%r15), %xmm0
	movaps	%xmm0, 16(%rsp)
	leaq	96(%rsp), %r8
	.loc	4 333 36
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
	.loc	4 333 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1454:
	.loc	4 333 11
	movl	$-3, 40(%rsp)
	movaps	16(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
	movq	%r14, 64(%rsp)
	leaq	40(%rsp), %rdx
	.loc	4 333 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 333 3
	movq	%rbx, %rax
	jmp	.LBB70_7
.Ltmp1455:
.LBB70_6:
	.loc	4 336 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1456:
.LBB70_7:
	.loc	4 0 2 is_stmt 0
	addq	$160, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1457:
.LBB70_5:
	.cfi_def_cfa_offset 192
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1458:
.LBB70_12:
	.loc	4 326 42 is_stmt 1
	movl	$6, %edi
.Ltmp1459:
	callq	__go_runtime_error
.Ltmp1460:
.Lfunc_end70:
	.size	command_line_arguments.scanner.scanComment, .Lfunc_end70-command_line_arguments.scanner.scanComment
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanCondition,"ax",@progbits
	.globl	command_line_arguments.scanner.scanCondition
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanCondition,@function
command_line_arguments.scanner.scanCondition:
.Lfunc_begin71:
	.loc	4 287 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB71_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB71_2:
.Ltmp1461:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$128, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 288 37 prologue_end
	testq	%rdi, %rdi
	je	.LBB71_13
.Ltmp1462:
	.loc	4 0 37 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1463:
	.loc	4 288 11
	movq	command_line_arguments.rgxIf(%rip), %rsi
	.loc	4 288 16
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	72(%rsp), %rdi
.Ltmp1464:
	callq	regexp.Regexp.FindStringSubmatch
	movq	80(%rsp), %r14
.Ltmp1465:
	.loc	4 288 55
	testq	%r14, %r14
	je	.LBB71_8
.Ltmp1466:
	.loc	4 0 55
	jle	.LBB71_14
.Ltmp1467:
	movq	72(%rsp), %r15
.Ltmp1468:
	.loc	4 289 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 289 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 290 26 is_stmt 1
	cmpq	$1, %r14
	je	.LBB71_14
.Ltmp1469:
	.loc	4 0 26 is_stmt 0
	movups	16(%r15), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 290 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1470:
	.loc	4 290 11
	movl	$-12, 40(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
	movq	$0, 64(%rsp)
	leaq	40(%rsp), %rdx
	jmp	.LBB71_7
.Ltmp1471:
.LBB71_8:
	.loc	4 293 11 is_stmt 1
	movq	command_line_arguments.rgxElse(%rip), %rsi
	.loc	4 293 18 is_stmt 0
	movq	32(%rbx), %rdx
	movq	40(%rbx), %rcx
	leaq	16(%rsp), %rdi
.Ltmp1472:
	callq	regexp.Regexp.FindStringSubmatch
	movq	24(%rsp), %rax
.Ltmp1473:
	.loc	4 293 57
	testq	%rax, %rax
	je	.LBB71_11
.Ltmp1474:
	.loc	4 0 57
	jle	.LBB71_14
.Ltmp1475:
	movq	16(%rsp), %rax
.Ltmp1476:
	.loc	4 294 13 is_stmt 1
	movq	8(%rax), %rsi
	.loc	4 294 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
.Ltmp1477:
	.loc	4 295 10 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1478:
	.loc	4 0 10 is_stmt 0
	movaps	.Lconst.384(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movaps	.Lconst.384+16(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	leaq	96(%rsp), %rdx
.Ltmp1479:
.LBB71_7:
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, %rax
.Ltmp1480:
.LBB71_12:
	addq	$128, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1481:
.LBB71_11:
	.cfi_def_cfa_offset 160
	.loc	4 298 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1482:
	.loc	4 0 2 is_stmt 0
	jmp	.LBB71_12
.Ltmp1483:
.LBB71_14:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1484:
.LBB71_13:
	.loc	4 288 37 is_stmt 1
	movl	$6, %edi
.Ltmp1485:
	callq	__go_runtime_error
.Ltmp1486:
.Lfunc_end71:
	.size	command_line_arguments.scanner.scanCondition, .Lfunc_end71-command_line_arguments.scanner.scanCondition
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanDoctype,"ax",@progbits
	.globl	command_line_arguments.scanner.scanDoctype
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanDoctype,@function
command_line_arguments.scanner.scanDoctype:
.Lfunc_begin72:
	.loc	4 271 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB72_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB72_2:
.Ltmp1487:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 272 42 prologue_end
	testq	%rdi, %rdi
	je	.LBB72_13
.Ltmp1488:
	.loc	4 0 42 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1489:
	.loc	4 272 11
	movq	command_line_arguments.rgxDoctype(%rip), %rsi
	.loc	4 272 21
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1490:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %rax
.Ltmp1491:
	.loc	4 272 60
	testq	%rax, %rax
	je	.LBB72_6
.Ltmp1492:
	.loc	4 273 12 is_stmt 1
	cmpq	$3, %rax
	jl	.LBB72_5
.Ltmp1493:
	.loc	4 0 12 is_stmt 0
	movq	56(%rsp), %r15
.Ltmp1494:
	.loc	4 273 12
	leaq	32(%r15), %r14
	.loc	4 273 17
	cmpq	$0, 40(%r15)
	jne	.LBB72_12
.Ltmp1495:
	.loc	4 274 10 is_stmt 1
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB72_10
.Ltmp1496:
	movl	$string..d, %edi
	movl	$.Lconst.379, %edx
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB72_12
.Ltmp1497:
.LBB72_6:
	.loc	4 281 2
	xorl	%eax, %eax
.Ltmp1498:
	.loc	4 0 2 is_stmt 0
	jmp	.LBB72_7
.Ltmp1499:
.LBB72_10:
	.loc	4 274 10 is_stmt 1
	testq	%r14, %r14
	je	.LBB72_13
.Ltmp1500:
	movups	.Lconst.379(%rip), %xmm0
	movups	%xmm0, (%r14)
.Ltmp1501:
.LBB72_12:
	.loc	4 277 13
	movq	8(%r15), %rsi
	.loc	4 277 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	movups	(%r14), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 278 10 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1502:
	.loc	4 278 11 is_stmt 0
	movl	$-2, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 278 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 278 3
	movq	%rbx, %rax
.Ltmp1503:
.LBB72_7:
	.loc	4 0 3
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1504:
.LBB72_13:
	.cfi_def_cfa_offset 112
	movl	$6, %edi
	callq	__go_runtime_error
.LBB72_5:
.Ltmp1505:
	.loc	4 273 12 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1506:
.Lfunc_end72:
	.size	command_line_arguments.scanner.scanDoctype, .Lfunc_end72-command_line_arguments.scanner.scanDoctype
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanEach,"ax",@progbits
	.globl	command_line_arguments.scanner.scanEach
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanEach,@function
command_line_arguments.scanner.scanEach:
.Lfunc_begin73:
	.loc	4 303 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB73_2
	movq	%r10, %rax
	movabsq	$232, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB73_2:
.Ltmp1507:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 304 39 prologue_end
	testq	%rdi, %rdi
	je	.LBB73_12
.Ltmp1508:
	.loc	4 0 39 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1509:
	.loc	4 304 11
	movq	command_line_arguments.rgxEach(%rip), %rsi
	.loc	4 304 18
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	88(%rsp), %rdi
.Ltmp1510:
	callq	regexp.Regexp.FindStringSubmatch
	movq	96(%rsp), %r14
.Ltmp1511:
	.loc	4 304 57
	testq	%r14, %r14
	je	.LBB73_6
.Ltmp1512:
	.loc	4 0 57
	jle	.LBB73_5
.Ltmp1513:
	movq	88(%rsp), %r15
.Ltmp1514:
	.loc	4 305 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 305 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 306 58 is_stmt 1
	cmpq	$1, %r14
	je	.LBB73_5
.Ltmp1515:
	.loc	4 306 33 is_stmt 0
	movups	.Lconst.344(%rip), %xmm0
	movaps	%xmm0, 16(%rsp)
	movups	16(%r15), %xmm0
	movaps	%xmm0, 32(%rsp)
	.loc	4 306 70
	cmpq	$2, %r14
	jle	.LBB73_5
.Ltmp1516:
	.loc	4 306 33
	movups	.Lconst.345(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	movups	32(%r15), %xmm1
	movaps	%xmm1, 192(%rsp)
	movaps	16(%rsp), %xmm2
	movaps	32(%rsp), %xmm3
	movaps	%xmm2, 112(%rsp)
	movaps	%xmm3, 128(%rsp)
	movaps	%xmm0, 144(%rsp)
	movaps	%xmm1, 160(%rsp)
	.loc	4 306 28
	cmpq	$3, %r14
	je	.LBB73_5
.Ltmp1517:
	.loc	4 0 28
	movups	48(%r15), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	112(%rsp), %r8
	.loc	4 306 33
	movl	$type..map.6string.7string, %edi
	movl	$2, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
	.loc	4 306 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1518:
	.loc	4 306 11
	movl	$-14, 56(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 64(%rsp)
	movq	%r14, 80(%rsp)
	leaq	56(%rsp), %rdx
	.loc	4 306 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 306 3
	movq	%rbx, %rax
	jmp	.LBB73_7
.Ltmp1519:
.LBB73_6:
	.loc	4 309 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1520:
.LBB73_7:
	.loc	4 0 2 is_stmt 0
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1521:
.LBB73_5:
	.cfi_def_cfa_offset 240
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1522:
.LBB73_12:
	.loc	4 304 39 is_stmt 1
	movl	$6, %edi
.Ltmp1523:
	callq	__go_runtime_error
.Ltmp1524:
.Lfunc_end73:
	.size	command_line_arguments.scanner.scanEach, .Lfunc_end73-command_line_arguments.scanner.scanEach
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanExtends,"ax",@progbits
	.globl	command_line_arguments.scanner.scanExtends
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanExtends,@function
command_line_arguments.scanner.scanExtends:
.Lfunc_begin74:
	.loc	4 390 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB74_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB74_2:
.Ltmp1525:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 391 42 prologue_end
	testq	%rdi, %rdi
	je	.LBB74_10
.Ltmp1526:
	.loc	4 0 42 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1527:
	.loc	4 391 11
	movq	command_line_arguments.rgxExtends(%rip), %rsi
	.loc	4 391 21
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1528:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r14
.Ltmp1529:
	.loc	4 391 60
	testq	%r14, %r14
	je	.LBB74_6
.Ltmp1530:
	.loc	4 0 60
	jle	.LBB74_5
.Ltmp1531:
	movq	56(%rsp), %r15
.Ltmp1532:
	.loc	4 392 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 392 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 393 31 is_stmt 1
	cmpq	$1, %r14
	je	.LBB74_5
.Ltmp1533:
	.loc	4 0 31 is_stmt 0
	movups	16(%r15), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 393 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1534:
	.loc	4 393 11
	movl	$-18, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 393 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 393 3
	movq	%rbx, %rax
	jmp	.LBB74_7
.Ltmp1535:
.LBB74_6:
	.loc	4 396 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1536:
.LBB74_7:
	.loc	4 0 2 is_stmt 0
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1537:
.LBB74_5:
	.cfi_def_cfa_offset 112
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1538:
.LBB74_10:
	.loc	4 391 42 is_stmt 1
	movl	$6, %edi
.Ltmp1539:
	callq	__go_runtime_error
.Ltmp1540:
.Lfunc_end74:
	.size	command_line_arguments.scanner.scanExtends, .Lfunc_end74-command_line_arguments.scanner.scanExtends
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanId,"ax",@progbits
	.globl	command_line_arguments.scanner.scanId
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanId,@function
command_line_arguments.scanner.scanId:
.Lfunc_begin75:
	.loc	4 341 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB75_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB75_2:
.Ltmp1541:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$144, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 342 37 prologue_end
	testq	%rdi, %rdi
	je	.LBB75_10
.Ltmp1542:
	.loc	4 0 37 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1543:
	.loc	4 342 11
	movq	command_line_arguments.rgxId(%rip), %rsi
	.loc	4 342 16
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1544:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r15
.Ltmp1545:
	.loc	4 342 55
	testq	%r15, %r15
	je	.LBB75_6
.Ltmp1546:
	.loc	4 0 55
	jle	.LBB75_5
.Ltmp1547:
	movq	56(%rsp), %r14
.Ltmp1548:
	.loc	4 343 13 is_stmt 1
	movq	8(%r14), %rsi
	.loc	4 343 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 344 64 is_stmt 1
	cmpq	$2, %r15
	jle	.LBB75_5
.Ltmp1549:
	.loc	4 344 31 is_stmt 0
	movups	.Lconst.331(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	32(%r14), %xmm1
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm1, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movups	16(%r14), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	80(%rsp), %r8
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
.Ltmp1550:
	.loc	4 344 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1551:
	.loc	4 344 11
	movl	$-7, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	%r14, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 344 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 344 3
	movq	%rbx, %rax
	jmp	.LBB75_7
.Ltmp1552:
.LBB75_6:
	.loc	4 347 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1553:
.LBB75_7:
	.loc	4 0 2 is_stmt 0
	addq	$144, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1554:
.LBB75_5:
	.cfi_def_cfa_offset 176
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1555:
.LBB75_10:
	.loc	4 342 37 is_stmt 1
	movl	$6, %edi
.Ltmp1556:
	callq	__go_runtime_error
.Ltmp1557:
.Lfunc_end75:
	.size	command_line_arguments.scanner.scanId, .Lfunc_end75-command_line_arguments.scanner.scanId
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanImport,"ax",@progbits
	.globl	command_line_arguments.scanner.scanImport
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanImport,@function
command_line_arguments.scanner.scanImport:
.Lfunc_begin76:
	.loc	4 379 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB76_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB76_2:
.Ltmp1558:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 380 41 prologue_end
	testq	%rdi, %rdi
	je	.LBB76_10
.Ltmp1559:
	.loc	4 0 41 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1560:
	.loc	4 380 11
	movq	command_line_arguments.rgxImport(%rip), %rsi
	.loc	4 380 20
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1561:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r14
.Ltmp1562:
	.loc	4 380 59
	testq	%r14, %r14
	je	.LBB76_6
.Ltmp1563:
	.loc	4 0 59
	jle	.LBB76_5
.Ltmp1564:
	movq	56(%rsp), %r15
.Ltmp1565:
	.loc	4 381 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 381 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 382 30 is_stmt 1
	cmpq	$1, %r14
	je	.LBB76_5
.Ltmp1566:
	.loc	4 0 30 is_stmt 0
	movups	16(%r15), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 382 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1567:
	.loc	4 382 11
	movl	$-16, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 382 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 382 3
	movq	%rbx, %rax
	jmp	.LBB76_7
.Ltmp1568:
.LBB76_6:
	.loc	4 385 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1569:
.LBB76_7:
	.loc	4 0 2 is_stmt 0
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1570:
.LBB76_5:
	.cfi_def_cfa_offset 112
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1571:
.LBB76_10:
	.loc	4 380 41 is_stmt 1
	movl	$6, %edi
.Ltmp1572:
	callq	__go_runtime_error
.Ltmp1573:
.Lfunc_end76:
	.size	command_line_arguments.scanner.scanImport, .Lfunc_end76-command_line_arguments.scanner.scanImport
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanIndent,"ax",@progbits
	.globl	command_line_arguments.scanner.scanIndent
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanIndent,@function
command_line_arguments.scanner.scanIndent:
.Lfunc_begin77:
	.loc	4 225 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB77_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB77_2:
.Ltmp1574:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$144, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 226 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB77_25
.Ltmp1575:
	.loc	4 0 10 is_stmt 0
	movq	%rdi, %r14
.Ltmp1576:
	.loc	4 226 19
	cmpq	$0, 40(%rdi)
	je	.LBB77_4
.Ltmp1577:
	.loc	4 231 14 is_stmt 1
	movq	8(%r14), %rdi
	.loc	4 231 26 is_stmt 0
	callq	container_list.List.Front
	.loc	4 231 41
	testq	%rax, %rax
	je	.LBB77_7
.Ltmp1578:
	.loc	4 0 41
	movq	%rax, %r13
.Ltmp1579:
	.p2align	4, 0x90
.LBB77_10:
	movq	24(%r13), %rsi
	movq	32(%r13), %rbx
.Ltmp1580:
	.loc	4 232 22 is_stmt 1
	movl	$type...1regexp.Regexp, %edi
	movl	$type..interface.4.5, %edx
	callq	runtime.assertI2T
.Ltmp1581:
	.loc	4 234 20
	movq	32(%r14), %rsi
	movq	40(%r14), %rdx
	movq	%rbx, %rdi
	callq	regexp.Regexp.FindString
.Ltmp1582:
	.loc	4 234 54 is_stmt 0
	testq	%rdx, %rdx
	je	.LBB77_11
.Ltmp1583:
	.loc	4 235 5 is_stmt 1
	movq	%r14, %rdi
	movq	%rdx, %rsi
	callq	command_line_arguments.scanner.consume
.Ltmp1584:
	.loc	4 231 60
	movq	%r13, %rdi
	callq	container_list.Element.Next
	movq	%rax, %r13
.Ltmp1585:
	.loc	4 231 41 is_stmt 0
	testq	%rax, %rax
	jne	.LBB77_10
.Ltmp1586:
.LBB77_7:
	.loc	4 0 41
	xorl	%r13d, %r13d
	.loc	4 231 41
	xorl	%ebx, %ebx
	jmp	.LBB77_12
.Ltmp1587:
.LBB77_4:
	.loc	4 227 10 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1588:
	.loc	4 0 10 is_stmt 0
	movaps	.Lconst.373(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movaps	.Lconst.373+16(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	leaq	112(%rsp), %rdx
	jmp	.LBB77_5
.Ltmp1589:
.LBB77_11:
	movb	$1, %bl
.Ltmp1590:
.LBB77_12:
	.loc	4 241 15 is_stmt 1
	movq	command_line_arguments.rgxIndent(%rip), %rdi
	.loc	4 241 24 is_stmt 0
	movq	32(%r14), %rsi
	movq	40(%r14), %rdx
	callq	regexp.Regexp.FindString
	movq	%rdx, %r15
.Ltmp1591:
	.loc	4 243 33 is_stmt 1
	testq	%r13, %r13
	jne	.LBB77_15
.Ltmp1592:
	.loc	4 0 33 is_stmt 0
	testq	%r15, %r15
	je	.LBB77_15
.Ltmp1593:
	movq	%rax, %r12
.Ltmp1594:
	.loc	4 244 52 is_stmt 1
	movq	%rax, %rdi
	movq	%r15, %rsi
	callq	regexp.QuoteMeta
	.loc	4 244 33 is_stmt 0
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	regexp.MustCompile
	.loc	4 244 4
	movq	8(%r14), %rdi
	.loc	4 244 16
	movl	$type...1regexp.Regexp, %esi
	movq	%rax, %rdx
	callq	container_list.List.PushBack
	.loc	4 245 4 is_stmt 1
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	command_line_arguments.scanner.consume
	.loc	4 246 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1595:
	.loc	4 246 11 is_stmt 0
	movl	$-4, (%rsp)
	movq	%r12, 8(%rsp)
	movq	%r15, 16(%rsp)
	movq	$0, 24(%rsp)
	movq	%rsp, %rdx
.Ltmp1596:
.LBB77_5:
	.loc	4 0 11
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, %rax
	jmp	.LBB77_24
.Ltmp1597:
.LBB77_15:
	.loc	4 249 20 is_stmt 1
	testq	%r15, %r15
	setne	%al
	xorb	$1, %bl
	orb	%al, %bl
	jne	.LBB77_21
.Ltmp1598:
	.loc	4 243 33
	testq	%r13, %r13
	je	.LBB77_23
.Ltmp1599:
	.loc	4 251 16
	movq	%r13, %rdi
	callq	container_list.Element.Next
	movq	%rax, %r15
.Ltmp1600:
	.loc	4 252 5
	movq	8(%r14), %rdi
	.loc	4 252 17 is_stmt 0
	movq	%r13, %rsi
	callq	container_list.List.Remove
	.loc	4 0 0
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp1601:
	.loc	4 253 12 is_stmt 1
	testq	%r15, %r15
	je	.LBB77_20
.Ltmp1602:
	.loc	4 0 12 is_stmt 0
	leaq	48(%rsp), %r12
.Ltmp1603:
	.p2align	4, 0x90
.LBB77_19:
	movaps	.Lconst.364+16(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movaps	.Lconst.364(%rip), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	4 256 22 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	runtime.typedmemmove
	.loc	4 256 6 is_stmt 0
	movq	16(%r14), %rdi
	.loc	4 256 12
	movl	$type...1command_line_arguments.token, %esi
	movq	%r13, %rdx
	callq	container_list.List.PushBack
	.loc	4 251 16 is_stmt 1
	movq	%r15, %rdi
	callq	container_list.Element.Next
	movq	%rax, %rbx
.Ltmp1604:
	.loc	4 252 5
	movq	8(%r14), %rdi
	.loc	4 252 17 is_stmt 0
	movq	%r15, %rsi
	callq	container_list.List.Remove
	.loc	4 0 0
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%rbx, %r15
.Ltmp1605:
	.loc	4 253 12 is_stmt 1
	testq	%rbx, %rbx
.Ltmp1606:
	.loc	4 0 12 is_stmt 0
	jne	.LBB77_19
.Ltmp1607:
.LBB77_20:
	movaps	.Lconst.364+16(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movaps	.Lconst.364(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	leaq	80(%rsp), %rdx
	.loc	4 254 12 is_stmt 1
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
	.loc	4 254 5 is_stmt 0
	movq	%r13, %rax
	jmp	.LBB77_24
.Ltmp1608:
.LBB77_21:
	.loc	4 243 20 is_stmt 1
	testq	%r15, %r15
	je	.LBB77_23
.Ltmp1609:
	.loc	4 0 20 is_stmt 0
	testq	%r13, %r13
	jne	.LBB77_26
.Ltmp1610:
.LBB77_23:
	.loc	4 266 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1611:
.LBB77_24:
	.loc	4 0 2 is_stmt 0
	addq	$144, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1612:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1613:
.LBB77_25:
	.cfi_def_cfa_offset 192
	.loc	4 226 10 is_stmt 1
	movl	$6, %edi
.Ltmp1614:
	callq	__go_runtime_error
.LBB77_26:
.Ltmp1615:
	.loc	4 263 3
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	.Lconst.375(%rip), %xmm0
	movaps	%xmm0, 32(%rsp)
	leaq	32(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp1616:
.Lfunc_end77:
	.size	command_line_arguments.scanner.scanIndent, .Lfunc_end77-command_line_arguments.scanner.scanIndent
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanMixin,"ax",@progbits
	.globl	command_line_arguments.scanner.scanMixin
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanMixin,@function
command_line_arguments.scanner.scanMixin:
.Lfunc_begin78:
	.loc	4 423 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB78_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB78_2:
.Ltmp1617:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$144, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 424 40 prologue_end
	testq	%rdi, %rdi
	je	.LBB78_10
.Ltmp1618:
	.loc	4 0 40 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1619:
	.loc	4 424 11
	movq	command_line_arguments.rgxMixin(%rip), %rsi
	.loc	4 424 19
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1620:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r15
.Ltmp1621:
	.loc	4 424 58
	testq	%r15, %r15
	je	.LBB78_6
.Ltmp1622:
	.loc	4 0 58
	jle	.LBB78_5
.Ltmp1623:
	movq	56(%rsp), %r14
.Ltmp1624:
	.loc	4 425 13 is_stmt 1
	movq	8(%r14), %rsi
	.loc	4 425 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 426 62 is_stmt 1
	cmpq	$3, %r15
	jle	.LBB78_5
.Ltmp1625:
	.loc	4 426 34 is_stmt 0
	movups	.Lconst.362(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	48(%r14), %xmm1
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm1, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movups	16(%r14), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	80(%rsp), %r8
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
.Ltmp1626:
	.loc	4 426 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1627:
	.loc	4 426 11
	movl	$-19, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	%r14, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 426 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 426 3
	movq	%rbx, %rax
	jmp	.LBB78_7
.Ltmp1628:
.LBB78_6:
	.loc	4 429 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1629:
.LBB78_7:
	.loc	4 0 2 is_stmt 0
	addq	$144, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1630:
.LBB78_5:
	.cfi_def_cfa_offset 176
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1631:
.LBB78_10:
	.loc	4 424 40 is_stmt 1
	movl	$6, %edi
.Ltmp1632:
	callq	__go_runtime_error
.Ltmp1633:
.Lfunc_end78:
	.size	command_line_arguments.scanner.scanMixin, .Lfunc_end78-command_line_arguments.scanner.scanMixin
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanMixinCall,"ax",@progbits
	.globl	command_line_arguments.scanner.scanMixinCall
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanMixinCall,@function
command_line_arguments.scanner.scanMixinCall:
.Lfunc_begin79:
	.loc	4 434 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB79_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB79_2:
.Ltmp1634:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$144, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 435 44 prologue_end
	testq	%rdi, %rdi
	je	.LBB79_10
.Ltmp1635:
	.loc	4 0 44 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1636:
	.loc	4 435 11
	movq	command_line_arguments.rgxMixinCall(%rip), %rsi
	.loc	4 435 23
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1637:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r15
.Ltmp1638:
	.loc	4 435 62
	testq	%r15, %r15
	je	.LBB79_6
.Ltmp1639:
	.loc	4 0 62
	jle	.LBB79_5
.Ltmp1640:
	movq	56(%rsp), %r14
.Ltmp1641:
	.loc	4 436 13 is_stmt 1
	movq	8(%r14), %rsi
	.loc	4 436 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 437 66 is_stmt 1
	cmpq	$3, %r15
	jle	.LBB79_5
.Ltmp1642:
	.loc	4 437 38 is_stmt 0
	movups	.Lconst.362(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	48(%r14), %xmm1
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm1, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movups	16(%r14), %xmm0
	movaps	%xmm0, (%rsp)
	leaq	80(%rsp), %r8
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
.Ltmp1643:
	.loc	4 437 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1644:
	.loc	4 437 11
	movl	$-20, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	%r14, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 437 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 437 3
	movq	%rbx, %rax
	jmp	.LBB79_7
.Ltmp1645:
.LBB79_6:
	.loc	4 440 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1646:
.LBB79_7:
	.loc	4 0 2 is_stmt 0
	addq	$144, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1647:
.LBB79_5:
	.cfi_def_cfa_offset 176
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1648:
.LBB79_10:
	.loc	4 435 44 is_stmt 1
	movl	$6, %edi
.Ltmp1649:
	callq	__go_runtime_error
.Ltmp1650:
.Lfunc_end79:
	.size	command_line_arguments.scanner.scanMixinCall, .Lfunc_end79-command_line_arguments.scanner.scanMixinCall
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanTag,"ax",@progbits
	.globl	command_line_arguments.scanner.scanTag
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanTag,@function
command_line_arguments.scanner.scanTag:
.Lfunc_begin80:
	.loc	4 412 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB80_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB80_2:
.Ltmp1651:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 413 38 prologue_end
	testq	%rdi, %rdi
	je	.LBB80_10
.Ltmp1652:
	.loc	4 0 38 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1653:
	.loc	4 413 11
	movq	command_line_arguments.rgxTag(%rip), %rsi
	.loc	4 413 17
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	56(%rsp), %rdi
.Ltmp1654:
	callq	regexp.Regexp.FindStringSubmatch
	movq	64(%rsp), %r14
.Ltmp1655:
	.loc	4 413 56
	testq	%r14, %r14
	je	.LBB80_6
.Ltmp1656:
	.loc	4 0 56
	jle	.LBB80_5
.Ltmp1657:
	movq	56(%rsp), %r15
.Ltmp1658:
	.loc	4 414 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 414 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	.loc	4 415 27 is_stmt 1
	cmpq	$1, %r14
	je	.LBB80_5
.Ltmp1659:
	.loc	4 0 27 is_stmt 0
	movups	16(%r15), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 415 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1660:
	.loc	4 415 11
	movl	$-9, 24(%rsp)
	movaps	(%rsp), %xmm0
	movups	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
	leaq	24(%rsp), %rdx
	.loc	4 415 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 415 3
	movq	%rbx, %rax
	jmp	.LBB80_7
.Ltmp1661:
.LBB80_6:
	.loc	4 418 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1662:
.LBB80_7:
	.loc	4 0 2 is_stmt 0
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1663:
.LBB80_5:
	.cfi_def_cfa_offset 112
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1664:
.LBB80_10:
	.loc	4 413 38 is_stmt 1
	movl	$6, %edi
.Ltmp1665:
	callq	__go_runtime_error
.Ltmp1666:
.Lfunc_end80:
	.size	command_line_arguments.scanner.scanTag, .Lfunc_end80-command_line_arguments.scanner.scanTag
	.cfi_endproc

	.section	.text.command_line_arguments.scanner.scanText,"ax",@progbits
	.globl	command_line_arguments.scanner.scanText
	.p2align	4, 0x90
	.type	command_line_arguments.scanner.scanText,@function
command_line_arguments.scanner.scanText:
.Lfunc_begin81:
	.loc	4 445 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB81_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB81_2:
.Ltmp1667:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$160, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	4 446 39 prologue_end
	testq	%rdi, %rdi
	je	.LBB81_13
.Ltmp1668:
	.loc	4 0 39 is_stmt 0
	movq	%rdi, %rbx
.Ltmp1669:
	.loc	4 446 11
	movq	command_line_arguments.rgxText(%rip), %rsi
	.loc	4 446 18
	movq	32(%rdi), %rdx
	movq	40(%rdi), %rcx
	leaq	72(%rsp), %rdi
.Ltmp1670:
	callq	regexp.Regexp.FindStringSubmatch
	movq	80(%rsp), %r14
.Ltmp1671:
	.loc	4 446 57
	testq	%r14, %r14
	je	.LBB81_6
.Ltmp1672:
	.loc	4 0 57
	jle	.LBB81_5
.Ltmp1673:
	movq	72(%rsp), %r15
.Ltmp1674:
	.loc	4 447 13 is_stmt 1
	movq	8(%r15), %rsi
	.loc	4 447 4 is_stmt 0
	movq	%rbx, %rdi
	callq	command_line_arguments.scanner.consume
	movups	.Lconst.417(%rip), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	4 450 8 is_stmt 1
	cmpq	$1, %r14
	je	.LBB81_5
.Ltmp1675:
	.loc	4 450 12 is_stmt 0
	movq	16(%r15), %rdi
	movq	24(%r15), %rsi
	movl	$.Lconst.418, %edx
	movl	$1, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB81_11
.Ltmp1676:
	.loc	4 451 9 is_stmt 1
	movups	.Lconst.361(%rip), %xmm0
	movaps	%xmm0, (%rsp)
.Ltmp1677:
.LBB81_11:
	.loc	4 454 33
	movups	.Lconst.339(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	(%rsp), %xmm1
	movaps	%xmm1, 144(%rsp)
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm1, 112(%rsp)
	.loc	4 454 28 is_stmt 0
	cmpq	$2, %r14
	jle	.LBB81_5
.Ltmp1678:
	.loc	4 0 28
	movups	32(%r15), %xmm0
	movaps	%xmm0, 16(%rsp)
	leaq	96(%rsp), %r8
	.loc	4 454 33
	movl	$type..map.6string.7string, %edi
	movl	$1, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %r14
	.loc	4 454 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1679:
	.loc	4 454 11
	movl	$-10, 40(%rsp)
	movaps	16(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
	movq	%r14, 64(%rsp)
	leaq	40(%rsp), %rdx
	.loc	4 454 10
	movl	$command_line_arguments..command_line_arguments.token..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	4 454 3
	movq	%rbx, %rax
	jmp	.LBB81_7
.Ltmp1680:
.LBB81_6:
	.loc	4 457 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp1681:
.LBB81_7:
	.loc	4 0 2 is_stmt 0
	addq	$160, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1682:
.LBB81_5:
	.cfi_def_cfa_offset 192
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1683:
.LBB81_13:
	.loc	4 446 39 is_stmt 1
	movl	$6, %edi
.Ltmp1684:
	callq	__go_runtime_error
.Ltmp1685:
.Lfunc_end81:
	.size	command_line_arguments.scanner.scanText, .Lfunc_end81-command_line_arguments.scanner.scanText
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.scanner..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.scanner..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.scanner..hash,@function
command_line_arguments.command_line_arguments.scanner..hash:
.Lfunc_begin82:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB82_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB82_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1686:
	.loc	1 1 1 prologue_end
	callq	runtime.memhash64
	leaq	8(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	16(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	24(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash32
	leaq	32(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	48(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	56(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	64(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	72(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	80(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	addq	$88, %rbx
.Ltmp1687:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
.Ltmp1688:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1689:
.Lfunc_end82:
	.size	command_line_arguments.command_line_arguments.scanner..hash, .Lfunc_end82-command_line_arguments.command_line_arguments.scanner..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.scanner..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.scanner..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.scanner..eq,@function
command_line_arguments.command_line_arguments.scanner..eq:
.Lfunc_begin83:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB83_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB83_2:
.Ltmp1690:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp1691:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB83_17
.Ltmp1692:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp1693:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB83_17
.Ltmp1694:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp1695:
	.loc	1 1 1
	movq	(%rdi), %rax
	cmpq	(%r14), %rax
	jne	.LBB83_5
.Ltmp1696:
	movq	8(%rbx), %rax
	cmpq	8(%r14), %rax
	jne	.LBB83_5
.Ltmp1697:
	movq	16(%rbx), %rax
	cmpq	16(%r14), %rax
	jne	.LBB83_5
.Ltmp1698:
	movl	24(%rbx), %eax
	cmpl	24(%r14), %eax
	jne	.LBB83_5
.Ltmp1699:
	movq	32(%rbx), %rdi
	movq	40(%rbx), %rsi
	movq	32(%r14), %rdx
	movq	40(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB83_5
.Ltmp1700:
	movq	48(%rbx), %rax
	cmpq	48(%r14), %rax
	jne	.LBB83_5
.Ltmp1701:
	movq	56(%rbx), %rax
	cmpq	56(%r14), %rax
	jne	.LBB83_5
.Ltmp1702:
	movq	64(%rbx), %rax
	cmpq	64(%r14), %rax
	jne	.LBB83_5
.Ltmp1703:
	movq	72(%rbx), %rax
	cmpq	72(%r14), %rax
	jne	.LBB83_5
.Ltmp1704:
	movq	80(%rbx), %rax
	cmpq	80(%r14), %rax
	jne	.LBB83_5
.Ltmp1705:
	movb	88(%rbx), %al
	cmpb	88(%r14), %al
	sete	%al
	jmp	.LBB83_6
.Ltmp1706:
.LBB83_5:
	xorl	%eax, %eax
.Ltmp1707:
.LBB83_6:
	.loc	1 0 1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp1708:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp1709:
	.cfi_def_cfa_offset 8
	retq
.LBB83_17:
	.cfi_def_cfa_offset 32
.Ltmp1710:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp1711:
	callq	__go_runtime_error
.Ltmp1712:
.Lfunc_end83:
	.size	command_line_arguments.command_line_arguments.scanner..eq, .Lfunc_end83-command_line_arguments.command_line_arguments.scanner..eq
	.cfi_endproc

	.section	.text.command_line_arguments.newParser,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.newParser,@function
command_line_arguments.newParser:
.Lfunc_begin84:
	.loc	5 23 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB84_2
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB84_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp1713:
	movq	%rdi, %r15
.Ltmp1714:
	.loc	5 24 7 prologue_end
	movl	$command_line_arguments.Parser..d, %edi
.Ltmp1715:
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp1716:
	.loc	4 64 7
	movl	$command_line_arguments..command_line_arguments.scanner..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1717:
	.loc	4 65 19
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader, %edi
.Ltmp1718:
	movq	%r15, %rsi
.Ltmp1719:
	callq	bufio.NewReader
.Ltmp1720:
	.loc	4 65 3 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB84_20
.Ltmp1721:
	.loc	4 0 3
	movq	%rbx, %r15
	.loc	4 65 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB84_9
.Ltmp1722:
	movq	%r15, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB84_5
.Ltmp1723:
.LBB84_9:
	movq	%rax, (%r15)
.Ltmp1724:
.LBB84_5:
	.loc	4 66 23 is_stmt 1
	callq	container_list.New
	.loc	4 66 3 is_stmt 0
	leaq	8(%rbx), %rdi
	.loc	4 66 16
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB84_10
.Ltmp1725:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB84_7
.Ltmp1726:
.LBB84_10:
	movq	%rax, (%rdi)
.Ltmp1727:
.LBB84_7:
	.loc	4 67 17 is_stmt 1
	callq	container_list.New
	.loc	4 67 3 is_stmt 0
	addq	$16, %rbx
.Ltmp1728:
	.loc	4 67 10
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB84_11
.Ltmp1729:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB84_12
.Ltmp1730:
.LBB84_11:
	movq	%rax, (%rbx)
.Ltmp1731:
.LBB84_12:
	.loc	4 68 10 is_stmt 1
	movl	$0, 24(%r15)
	.loc	4 69 9
	movq	$-1, 48(%r15)
	.loc	4 70 8
	movq	$0, 56(%r15)
.Ltmp1732:
	.loc	5 25 3
	testq	%r14, %r14
	je	.LBB84_20
.Ltmp1733:
	.loc	5 0 3 is_stmt 0
	movq	%r14, %rbx
	.loc	5 25 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB84_18
.Ltmp1734:
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB84_15
.Ltmp1735:
.LBB84_18:
	movq	%r15, (%rbx)
.Ltmp1736:
.LBB84_15:
	.loc	5 26 18 is_stmt 1
	callq	runtime.makemap_small
	.loc	5 26 3 is_stmt 0
	addq	$48, %r14
.Ltmp1737:
	.loc	5 26 16
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB84_19
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB84_17
.LBB84_19:
	movq	%rax, (%r14)
.LBB84_17:
	.loc	5 27 2 is_stmt 1
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp1738:
.LBB84_20:
	.cfi_def_cfa_offset 32
	.loc	5 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end84:
	.size	command_line_arguments.newParser, .Lfunc_end84-command_line_arguments.newParser
	.cfi_endproc

	.section	.text.command_line_arguments.StringParser,"ax",@progbits
	.globl	command_line_arguments.StringParser
	.p2align	4, 0x90
	.type	command_line_arguments.StringParser,@function
command_line_arguments.StringParser:
.Lfunc_begin85:
	.loc	5 30 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB85_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB85_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$48, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -16
	movq	%rdx, %rax
	movq	%rsi, %rcx
	movq	%rdi, %rbx
.Ltmp1739:
	leaq	24(%rsp), %rdi
.Ltmp1740:
	.loc	5 31 41 prologue_end
	xorl	%esi, %esi
	movq	%rcx, %rdx
.Ltmp1741:
	movq	%rax, %rcx
.Ltmp1742:
	callq	runtime.stringtoslicebyte
.Ltmp1743:
	.loc	5 31 25 is_stmt 0
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.NewReader
	.loc	5 31 9
	movq	%rax, %rdi
	callq	command_line_arguments.newParser
.Ltmp1744:
	.loc	5 31 2
	movq	%rax, (%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rbx)
	movq	%rbx, %rax
.Ltmp1745:
	addq	$48, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1746:
.Lfunc_end85:
	.size	command_line_arguments.StringParser, .Lfunc_end85-command_line_arguments.StringParser
	.cfi_endproc

	.section	.text.command_line_arguments.ByteParser,"ax",@progbits
	.globl	command_line_arguments.ByteParser
	.p2align	4, 0x90
	.type	command_line_arguments.ByteParser,@function
command_line_arguments.ByteParser:
.Lfunc_begin86:
	.loc	5 34 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB86_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB86_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$32, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1747:
	.loc	5 35 25 prologue_end
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.NewReader
	.loc	5 35 9 is_stmt 0
	movq	%rax, %rdi
	callq	command_line_arguments.newParser
.Ltmp1748:
	.loc	5 35 2
	movq	%rax, (%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rbx)
	movq	%rbx, %rax
.Ltmp1749:
	addq	$32, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1750:
.Lfunc_end86:
	.size	command_line_arguments.ByteParser, .Lfunc_end86-command_line_arguments.ByteParser
	.cfi_endproc

	.section	.text.command_line_arguments.FileParser,"ax",@progbits
	.globl	command_line_arguments.FileParser
	.p2align	4, 0x90
	.type	command_line_arguments.FileParser,@function
command_line_arguments.FileParser:
.Lfunc_begin87:
	.loc	5 46 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB87_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB87_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$120, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	%rsi, 32(%rsp)
	movq	%rdx, 40(%rsp)
	leaq	80(%rsp), %rdi
.Ltmp1751:
	.loc	5 47 22 prologue_end
	callq	io_ioutil.ReadFile
.Ltmp1752:
	movq	104(%rsp), %rax
.Ltmp1753:
	movq	112(%rsp), %rcx
	movups	80(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	96(%rsp), %rdx
	movq	%rdx, 64(%rsp)
	.loc	5 49 9
	testq	%rax, %rax
	je	.LBB87_4
.Ltmp1754:
	.loc	5 50 3
	movq	$0, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rcx, 16(%rbx)
	jmp	.LBB87_8
.Ltmp1755:
.LBB87_4:
	.loc	5 53 28
	movq	64(%rsp), %rax
.Ltmp1756:
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.NewReader
	.loc	5 53 12 is_stmt 0
	movq	%rax, %rdi
	callq	command_line_arguments.newParser
	.loc	5 54 8 is_stmt 1
	testq	%rax, %rax
	je	.LBB87_10
	.loc	5 0 8 is_stmt 0
	movq	%rax, %r14
.Ltmp1757:
	.loc	5 54 8
	movq	%rax, %rsi
	addq	$8, %rsi
	.loc	5 54 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB87_9
.Ltmp1758:
	.loc	5 0 18
	leaq	32(%rsp), %rdx
	.loc	5 54 18
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB87_7
.Ltmp1759:
.LBB87_9:
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1760:
.LBB87_7:
	.loc	5 55 2 is_stmt 1
	movq	%r14, (%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rbx)
.Ltmp1761:
.LBB87_8:
	.loc	5 0 2 is_stmt 0
	movq	%rbx, %rax
	addq	$120, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB87_10:
	.cfi_def_cfa_offset 144
	.loc	5 54 8 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1762:
.Lfunc_end87:
	.size	command_line_arguments.FileParser, .Lfunc_end87-command_line_arguments.FileParser
	.cfi_endproc

	.section	.text.command_line_arguments.VirtualFileParser,"ax",@progbits
	.globl	command_line_arguments.VirtualFileParser
	.p2align	4, 0x90
	.type	command_line_arguments.VirtualFileParser,@function
command_line_arguments.VirtualFileParser:
.Lfunc_begin88:
	.loc	5 58 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB88_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB88_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$168, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rcx, %rax
	movq	%rdx, %rcx
	movq	%rsi, %rdx
	movq	%rdi, %rbx
	movq	%rsi, 48(%rsp)
	movq	%rcx, 56(%rsp)
	movq	%rax, 32(%rsp)
	movq	%r8, 40(%rsp)
	leaq	96(%rsp), %rdi
.Ltmp1763:
	.loc	5 59 17 prologue_end
	movq	%r8, %rsi
	callq	*8(%rax)
.Ltmp1764:
	movq	112(%rsp), %rax
.Ltmp1765:
	.loc	5 60 9
	testq	%rax, %rax
	je	.LBB88_4
.Ltmp1766:
	.loc	5 59 17
	movq	120(%rsp), %rcx
	jmp	.LBB88_7
.Ltmp1767:
.LBB88_4:
	.loc	5 0 17 is_stmt 0
	movq	96(%rsp), %rax
.Ltmp1768:
	movq	104(%rsp), %r14
	.loc	5 64 30 is_stmt 1
	testq	%rax, %rax
	je	.LBB88_5
.Ltmp1769:
	movq	(%rax), %rsi
	jmp	.LBB88_6
.Ltmp1770:
.LBB88_5:
	.loc	5 0 30 is_stmt 0
	xorl	%esi, %esi
.Ltmp1771:
.LBB88_6:
	.loc	5 64 30
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
.Ltmp1772:
	.loc	5 0 30
	leaq	128(%rsp), %rdi
.Ltmp1773:
	.loc	5 64 22
	movq	%rax, %rsi
	movq	%r14, %rdx
	callq	io_ioutil.ReadAll
.Ltmp1774:
	movq	152(%rsp), %rax
.Ltmp1775:
	movq	160(%rsp), %rcx
	movups	128(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	144(%rsp), %rdx
	movq	%rdx, 80(%rsp)
	.loc	5 65 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB88_8
.Ltmp1776:
.LBB88_7:
	.loc	5 0 9 is_stmt 0
	movq	$0, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rcx, 16(%rbx)
.Ltmp1777:
.LBB88_15:
	movq	%rbx, %rax
	addq	$168, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB88_8:
	.cfi_def_cfa_offset 192
.Ltmp1778:
	.loc	5 69 28 is_stmt 1
	movq	80(%rsp), %rax
.Ltmp1779:
	movq	%rax, 16(%rsp)
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.NewReader
	.loc	5 69 12 is_stmt 0
	movq	%rax, %rdi
	callq	command_line_arguments.newParser
	.loc	5 70 8 is_stmt 1
	testq	%rax, %rax
	je	.LBB88_17
	.loc	5 0 8 is_stmt 0
	movq	%rax, %r14
.Ltmp1780:
	.loc	5 70 8
	leaq	8(%rax), %rsi
	.loc	5 70 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB88_10
.Ltmp1781:
	.loc	5 0 18
	leaq	48(%rsp), %rdx
	.loc	5 70 18
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	.loc	5 71 8 is_stmt 1
	movq	%r14, %rsi
	addq	$24, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB88_11
.Ltmp1782:
	.loc	5 0 8 is_stmt 0
	leaq	32(%rsp), %rdx
	.loc	5 71 12
	movl	$net_http.FileSystem..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB88_14
.Ltmp1783:
.LBB88_10:
	.loc	5 70 18 is_stmt 1
	movups	48(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	5 71 8
	movq	%r14, %rsi
	addq	$24, %rsi
.Ltmp1784:
.LBB88_11:
	.loc	5 0 8 is_stmt 0
	leaq	32(%rsp), %rax
	.loc	5 71 12
	movups	(%rax), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1785:
.LBB88_14:
	.loc	5 72 2 is_stmt 1
	movq	%r14, (%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rbx)
	jmp	.LBB88_15
.Ltmp1786:
.LBB88_17:
	.loc	5 70 8
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1787:
.Lfunc_end88:
	.size	command_line_arguments.VirtualFileParser, .Lfunc_end88-command_line_arguments.VirtualFileParser
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Parser.Parse..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Parser.Parse..func1,@function
command_line_arguments..1command_line_arguments.Parser.Parse..func1:
.Lfunc_begin89:
	.loc	5 80 0
	.cfi_startproc
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%r10, %rbx
.Ltmp1788:
	.loc	5 80 8 prologue_end
	movq	8(%rsp), %rdi
	callq	runtime.canrecover
	movzbl	%al, %esi
	movq	%rbx, %rdi
	callq	command_line_arguments..1command_line_arguments.Parser.Parse..func1..r
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1789:
.Lfunc_end89:
	.size	command_line_arguments..1command_line_arguments.Parser.Parse..func1, .Lfunc_end89-command_line_arguments..1command_line_arguments.Parser.Parse..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk0,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk0,@function
command_line_arguments.command_line_arguments..thunk0:
.Lfunc_begin90:
	.loc	5 80 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB90_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB90_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1790:
	.loc	5 80 2 prologue_end
	movl	$.Ltmp1791, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB90_4
.Ltmp1792:
	movq	(%rbx), %r10
	callq	*(%r10)
.Ltmp1793:
.Ltmp1791:
.LBB90_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1794:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1795:
.Lfunc_end90:
	.size	command_line_arguments.command_line_arguments..thunk0, .Lfunc_end90-command_line_arguments.command_line_arguments..thunk0
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Parser.Parse..func1..r,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Parser.Parse..func1..r,@function
command_line_arguments..1command_line_arguments.Parser.Parse..func1..r:
.Lfunc_begin91:
	.loc	5 80 0
	.cfi_startproc
	leaq	-392(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB91_2
	movabsq	$392, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB91_2:
.Ltmp1796:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$344, %rsp
	.cfi_def_cfa_offset 400
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1797:
	.loc	5 81 11 prologue_end
	testb	$1, %sil
	je	.LBB91_10
.Ltmp1798:
	.loc	5 0 11 is_stmt 0
	movq	%rdi, %rbx
	.loc	5 81 11
	callq	runtime.gorecover
.Ltmp1799:
	.loc	5 81 24
	testq	%rax, %rax
	jne	.LBB91_4
.LBB91_10:
	.loc	5 0 24
	addq	$344, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB91_4:
	.cfi_def_cfa_offset 400
	movq	%rax, %r15
.Ltmp1800:
	movq	%rdx, %r14
.Ltmp1801:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp1802:
	leaq	48(%rsp), %rcx
.Ltmp1803:
	.loc	5 82 7 is_stmt 1
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.ifaceE2T2
.Ltmp1804:
	.loc	5 82 32 is_stmt 0
	testb	$1, %al
	je	.LBB91_5
.Ltmp1805:
	.loc	5 82 7
	movq	48(%rsp), %rdi
.Ltmp1806:
	movq	56(%rsp), %rsi
.Ltmp1807:
	.loc	5 82 37
	xorl	%edx, %edx
	movl	$11, %ecx
	callq	__go_string_slice
.Ltmp1808:
	movq	%rdx, %rsi
	.loc	5 82 59
	movl	$.Lconst.424, %edx
	movl	$11, %ecx
	movq	%rax, %rdi
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
.Ltmp1809:
.LBB91_5:
	.loc	5 82 4
	testb	$1, %al
	jne	.LBB91_12
.Ltmp1810:
	.loc	5 86 11 is_stmt 1
	movq	8(%rbx), %rax
	movq	(%rax), %rsi
	leaq	160(%rsp), %rdi
	.loc	5 86 12 is_stmt 0
	callq	command_line_arguments.Parser.pos
	movq	160(%rsp), %rax
.Ltmp1811:
	.loc	5 0 12
	movq	%rax, 24(%rsp)
	movq	168(%rsp), %rax
.Ltmp1812:
	movq	%rax, 32(%rsp)
	movq	176(%rsp), %rax
.Ltmp1813:
	movq	%rax, 40(%rsp)
	movq	192(%rsp), %rbp
.Ltmp1814:
	.loc	5 88 25 is_stmt 1
	testq	%rbp, %rbp
	jle	.LBB91_8
.Ltmp1815:
	.loc	5 0 25 is_stmt 0
	movq	184(%rsp), %rbx
	.loc	5 89 15 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%rbx, 144(%rsp)
	movq	%rbp, 152(%rsp)
	leaq	144(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	24(%rsp), %rax
	movq	%rax, (%r13)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	32(%rsp), %rax
	movq	%rax, (%rbx)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	40(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	$string..d, 264(%rsp)
	movq	%r12, 272(%rsp)
	movq	%r15, 280(%rsp)
	movq	%r14, 288(%rsp)
	movq	$int..d, 296(%rsp)
	movq	%r13, 304(%rsp)
	movq	$int..d, 312(%rsp)
	movq	%rbx, 320(%rsp)
	movq	$int..d, 328(%rsp)
	movq	%rax, 336(%rsp)
	leaq	264(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	$5, 72(%rsp)
	movq	$5, 80(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.426, %edi
	movl	$58, %esi
	callq	fmt.Sprintf
	movq	%rax, %r15
	movq	%rdx, %r14
.Ltmp1816:
	.loc	5 89 5 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 128(%rsp)
	movq	%r14, 136(%rsp)
	leaq	128(%rsp), %rdx
	jmp	.LBB91_9
.Ltmp1817:
.LBB91_12:
	.loc	5 83 5 is_stmt 1
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.gopanic
.Ltmp1818:
.LBB91_8:
	.loc	5 91 15
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	24(%rsp), %rax
	movq	%rax, (%r12)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	32(%rsp), %rax
	movq	%rax, (%rbx)
	movl	$int..d, %edi
	callq	runtime.newobject
	movq	40(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	%r15, 200(%rsp)
	movq	%r14, 208(%rsp)
	movq	$int..d, 216(%rsp)
	movq	%r12, 224(%rsp)
	movq	$int..d, 232(%rsp)
	movq	%rbx, 240(%rsp)
	movq	$int..d, 248(%rsp)
	movq	%rax, 256(%rsp)
	leaq	200(%rsp), %rax
	movq	%rax, 88(%rsp)
	movq	$4, 96(%rsp)
	movq	$4, 104(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.428, %edi
	movl	$50, %esi
	callq	fmt.Sprintf
	movq	%rax, %r15
	movq	%rdx, %r14
.Ltmp1819:
	.loc	5 91 5 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 112(%rsp)
	movq	%r14, 120(%rsp)
	leaq	112(%rsp), %rdx
.Ltmp1820:
.LBB91_9:
	.loc	5 0 5
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Lfunc_end91:
	.size	command_line_arguments..1command_line_arguments.Parser.Parse..func1..r, .Lfunc_end91-command_line_arguments..1command_line_arguments.Parser.Parse..func1..r
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Parser.parseTag..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Parser.parseTag..func1,@function
command_line_arguments..1command_line_arguments.Parser.parseTag..func1:
.Lfunc_begin92:
	.loc	5 394 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB92_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB92_2:
.Ltmp1821:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	5 395 6 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rax
	.loc	5 395 9 is_stmt 0
	testq	%rax, %rax
	je	.LBB92_9
	.loc	5 395 16
	cmpq	$0, 40(%rax)
	je	.LBB92_4
	.loc	5 0 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB92_4:
	.cfi_def_cfa_offset 16
	movq	%r10, %rbx
	.loc	5 396 16 is_stmt 1
	callq	command_line_arguments.newBlock
	.loc	5 396 4 is_stmt 0
	movq	8(%rbx), %rcx
	movq	(%rcx), %rdi
	.loc	5 396 7
	testq	%rdi, %rdi
	je	.LBB92_9
	addq	$40, %rdi
	.loc	5 396 14
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB92_8
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB92_8:
	.cfi_def_cfa_offset 16
	movq	%rax, (%rdi)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1822:
.LBB92_9:
	.cfi_def_cfa_offset 16
	.loc	5 0 14
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end92:
	.size	command_line_arguments..1command_line_arguments.Parser.parseTag..func1, .Lfunc_end92-command_line_arguments..1command_line_arguments.Parser.parseTag..func1
	.cfi_endproc

	.type	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,@object
	.section	.rodata.imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,"aG",@progbits,imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,comdat
	.weak	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr
	.p2align	4
imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr:
	.quad	net.IPAddr..d
	.quad	net.IPAddr.Network
	.quad	net.IPAddr.String
	.quad	net.IPAddr.family
	.quad	net.IPAddr.isWildcard
	.quad	net.IPAddr.sockaddr
	.quad	net.IPAddr.toLocal
	.size	imt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr, 56

	.type	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,@object
	.section	.rodata.pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,"aG",@progbits,pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr,comdat
	.weak	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr
	.p2align	4
pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr:
	.quad	type...1net.IPAddr
	.quad	net.IPAddr.Network
	.quad	net.IPAddr.String
	.quad	net.IPAddr.family
	.quad	net.IPAddr.isWildcard
	.quad	net.IPAddr.sockaddr
	.quad	net.IPAddr.toLocal
	.size	pimt..interface.4Network.0func.8.9.8string.9.2String.0func.8.9.8string.9.2.net.family.0func.8.9.8int.9.2.net.isWildcard.0func.8.9.8bool.9.2.net.sockaddr.0func.8int.9.8syscall.Sockaddr.3error.9.2.net.toLocal.0func.8string.9.8net.sockaddr.9.5..net.IPAddr, 56

	.type	command_line_arguments.selfClosingTags,@object
	.section	.data.command_line_arguments.selfClosingTags,"aw",@progbits
	.p2align	4
command_line_arguments.selfClosingTags:
	.quad	.Lconst.0
	.quad	4
	.quad	.Lconst.1
	.quad	3
	.quad	.Lconst.2
	.quad	4
	.quad	.Lconst.3
	.quad	5
	.quad	.Lconst.4
	.quad	6
	.quad	.Lconst.5
	.quad	4
	.quad	.Lconst.6
	.quad	4
	.quad	.Lconst.7
	.quad	3
	.quad	.Lconst.8
	.quad	2
	.quad	.Lconst.9
	.quad	2
	.size	command_line_arguments.selfClosingTags, 160

	.type	.Lconst.0,@object
	.section	.rodata..Lconst.0,"a",@progbits
.Lconst.0:
	.asciz	"meta"
	.size	.Lconst.0, 5

	.type	.Lconst.1,@object
	.section	.rodata..Lconst.1,"a",@progbits
.Lconst.1:
	.asciz	"img"
	.size	.Lconst.1, 4

	.type	.Lconst.2,@object
	.section	.rodata..Lconst.2,"a",@progbits
.Lconst.2:
	.asciz	"link"
	.size	.Lconst.2, 5

	.type	.Lconst.3,@object
	.section	.rodata..Lconst.3,"a",@progbits
.Lconst.3:
	.asciz	"input"
	.size	.Lconst.3, 6

	.type	.Lconst.4,@object
	.section	.rodata..Lconst.4,"a",@progbits
.Lconst.4:
	.asciz	"source"
	.size	.Lconst.4, 7

	.type	.Lconst.5,@object
	.section	.rodata..Lconst.5,"a",@progbits
.Lconst.5:
	.asciz	"area"
	.size	.Lconst.5, 5

	.type	.Lconst.6,@object
	.section	.rodata..Lconst.6,"a",@progbits
.Lconst.6:
	.asciz	"base"
	.size	.Lconst.6, 5

	.type	.Lconst.7,@object
	.section	.rodata..Lconst.7,"a",@progbits
.Lconst.7:
	.asciz	"col"
	.size	.Lconst.7, 4

	.type	.Lconst.8,@object
	.section	.rodata..Lconst.8,"a",@progbits
.Lconst.8:
	.asciz	"br"
	.size	.Lconst.8, 3

	.type	.Lconst.9,@object
	.section	.rodata..Lconst.9,"a",@progbits
.Lconst.9:
	.asciz	"hr"
	.size	.Lconst.9, 3

	.type	command_line_arguments.doctypes,@object
	.section	.bss.command_line_arguments.doctypes,"aw",@nobits
	.p2align	3
command_line_arguments.doctypes:
	.quad	0
	.size	command_line_arguments.doctypes, 8

	.type	.Lconst.10,@object
	.section	.rodata..Lconst.10,"a",@progbits
.Lconst.10:
	.asciz	"5"
	.size	.Lconst.10, 2

	.type	.Lconst.11,@object
	.section	.rodata..Lconst.11,"a",@progbits
.Lconst.11:
	.asciz	"<!DOCTYPE html>"
	.size	.Lconst.11, 16

	.type	.Lconst.12,@object
	.section	.rodata..Lconst.12,"a",@progbits
.Lconst.12:
	.asciz	"default"
	.size	.Lconst.12, 8

	.type	.Lconst.13,@object
	.section	.rodata..Lconst.13,"a",@progbits
.Lconst.13:
	.asciz	"xml"
	.size	.Lconst.13, 4

	.type	.Lconst.14,@object
	.section	.rodata..Lconst.14,"a",@progbits
.Lconst.14:
	.asciz	"<?xml version=\"1.0\" encoding=\"utf-8\" ?>"
	.size	.Lconst.14, 40

	.type	.Lconst.15,@object
	.section	.rodata..Lconst.15,"a",@progbits
.Lconst.15:
	.asciz	"transitional"
	.size	.Lconst.15, 13

	.type	.Lconst.16,@object
	.section	.rodata..Lconst.16,"a",@progbits
.Lconst.16:
	.asciz	"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">"
	.size	.Lconst.16, 122

	.type	.Lconst.17,@object
	.section	.rodata..Lconst.17,"a",@progbits
.Lconst.17:
	.asciz	"strict"
	.size	.Lconst.17, 7

	.type	.Lconst.18,@object
	.section	.rodata..Lconst.18,"a",@progbits
.Lconst.18:
	.asciz	"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">"
	.size	.Lconst.18, 110

	.type	.Lconst.19,@object
	.section	.rodata..Lconst.19,"a",@progbits
.Lconst.19:
	.asciz	"frameset"
	.size	.Lconst.19, 9

	.type	.Lconst.20,@object
	.section	.rodata..Lconst.20,"a",@progbits
.Lconst.20:
	.asciz	"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">"
	.size	.Lconst.20, 114

	.type	.Lconst.21,@object
	.section	.rodata..Lconst.21,"a",@progbits
.Lconst.21:
	.asciz	"1.1"
	.size	.Lconst.21, 4

	.type	.Lconst.22,@object
	.section	.rodata..Lconst.22,"a",@progbits
.Lconst.22:
	.asciz	"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">"
	.size	.Lconst.22, 98

	.type	.Lconst.23,@object
	.section	.rodata..Lconst.23,"a",@progbits
.Lconst.23:
	.asciz	"basic"
	.size	.Lconst.23, 6

	.type	.Lconst.24,@object
	.section	.rodata..Lconst.24,"a",@progbits
.Lconst.24:
	.asciz	"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.1//EN\" \"http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd\">"
	.size	.Lconst.24, 110

	.type	.Lconst.25,@object
	.section	.rodata..Lconst.25,"a",@progbits
.Lconst.25:
	.asciz	"mobile"
	.size	.Lconst.25, 7

	.type	.Lconst.26,@object
	.section	.rodata..Lconst.26,"a",@progbits
.Lconst.26:
	.asciz	"<!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.2//EN\" \"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd\">"
	.size	.Lconst.26, 127

	.type	.Lconst.27,@object
	.section	.rodata..Lconst.27,"a",@progbits
	.p2align	4
.Lconst.27:
	.quad	.Lconst.10
	.quad	1
	.quad	.Lconst.11
	.quad	15
	.quad	.Lconst.12
	.quad	7
	.quad	.Lconst.11
	.quad	15
	.quad	.Lconst.13
	.quad	3
	.quad	.Lconst.14
	.quad	39
	.quad	.Lconst.15
	.quad	12
	.quad	.Lconst.16
	.quad	121
	.quad	.Lconst.17
	.quad	6
	.quad	.Lconst.18
	.quad	109
	.quad	.Lconst.19
	.quad	8
	.quad	.Lconst.20
	.quad	113
	.quad	.Lconst.21
	.quad	3
	.quad	.Lconst.22
	.quad	97
	.quad	.Lconst.23
	.quad	5
	.quad	.Lconst.24
	.quad	109
	.quad	.Lconst.25
	.quad	6
	.quad	.Lconst.26
	.quad	126
	.size	.Lconst.27, 288

	.type	type..map.6string.7string,@object
	.section	.rodata.type..map.6string.7string,"aG",@progbits,type..map.6string.7string,comdat
	.weak	type..map.6string.7string
	.p2align	4
type..map.6string.7string:
	.quad	8
	.quad	8
	.long	297061700
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C1
	.quad	0
	.quad	0
	.quad	string..d
	.quad	string..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	16
	.byte	0
	.short	272
	.byte	1
	.byte	1
	.size	type..map.6string.7string, 112

	.type	gcbits..ba,@object
	.section	.rodata.gcbits..ba,"aG",@progbits,gcbits..ba,comdat
	.weak	gcbits..ba
gcbits..ba:
	.byte	1
	.size	gcbits..ba, 1

	.type	.Lconst.28,@object
	.section	.rodata..Lconst.28,"a",@progbits
.Lconst.28:
	.asciz	"map[string]string"
	.size	.Lconst.28, 18

	.type	go..C1,@object
	.section	.rodata.go..C1,"a",@progbits
	.p2align	3
go..C1:
	.quad	.Lconst.28
	.quad	17
	.size	go..C1, 16

	.type	string..d,@object
	.section	.rodata.string..d,"aG",@progbits,string..d,comdat
	.weak	string..d
	.p2align	4
string..d:
	.quad	16
	.quad	8
	.long	2296014490
	.byte	24
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.strhash..f
	.quad	runtime.strequal..f
	.quad	gcbits..ba
	.quad	go..C2
	.quad	go..C5
	.quad	type...1string
	.size	string..d, 72

	.type	.Lconst.29,@object
	.section	.rodata..Lconst.29,"a",@progbits
.Lconst.29:
	.asciz	"string"
	.size	.Lconst.29, 7

	.type	go..C2,@object
	.section	.rodata.go..C2,"a",@progbits
	.p2align	3
go..C2:
	.quad	.Lconst.29
	.quad	6
	.size	go..C2, 16

	.type	go..C3,@object
	.section	.rodata.go..C3,"a",@progbits
	.p2align	3
go..C3:
	.quad	.Lconst.29
	.quad	6
	.size	go..C3, 16

	.type	go..C4,@object
	.section	.bss.go..C4,"aw",@nobits
	.p2align	4
go..C4:
	.zero	40
	.size	go..C4, 40

	.type	go..C5,@object
	.section	.rodata.go..C5,"a",@progbits
	.p2align	4
go..C5:
	.quad	go..C3
	.quad	0
	.quad	go..C4
	.quad	0
	.quad	0
	.size	go..C5, 40

	.type	type...1string,@object
	.section	.rodata.type...1string,"aG",@progbits,type...1string,comdat
	.weak	type...1string
	.p2align	4
type...1string:
	.quad	8
	.quad	8
	.long	2376493481
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C6
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...1string, 80

	.type	.Lconst.30,@object
	.section	.rodata..Lconst.30,"a",@progbits
.Lconst.30:
	.asciz	"*string"
	.size	.Lconst.30, 8

	.type	go..C6,@object
	.section	.rodata.go..C6,"a",@progbits
	.p2align	3
go..C6:
	.quad	.Lconst.30
	.quad	7
	.size	go..C6, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5:
	.quad	272
	.quad	272
	.long	887229860
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkwkwka
	.quad	go..C7
	.quad	0
	.quad	0
	.quad	go..C21
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkwkwka,@object
	.section	.rodata.gcbits..kwkwkwka,"aG",@progbits,gcbits..kwkwkwka,comdat
	.weak	gcbits..kwkwkwka
gcbits..kwkwkwka:
	.ascii	"\252\252\252\252\002"
	.size	gcbits..kwkwkwka, 5

	.type	.Lconst.31,@object
	.section	.rodata..Lconst.31,"a",@progbits
.Lconst.31:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }"
	.size	.Lconst.31, 74

	.type	go..C7,@object
	.section	.rodata.go..C7,"a",@progbits
	.p2align	3
go..C7:
	.quad	.Lconst.31
	.quad	73
	.size	go..C7, 16

	.type	.Lconst.32,@object
	.section	.rodata..Lconst.32,"a",@progbits
.Lconst.32:
	.asciz	"topbits"
	.size	.Lconst.32, 8

	.type	go..C8,@object
	.section	.rodata.go..C8,"a",@progbits
	.p2align	3
go..C8:
	.quad	.Lconst.32
	.quad	7
	.size	go..C8, 16

	.type	type...68x.7uint8,@object
	.section	.rodata.type...68x.7uint8,"aG",@progbits,type...68x.7uint8,comdat
	.weak	type...68x.7uint8
	.p2align	4
type...68x.7uint8:
	.quad	8
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C9
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	8
	.size	type...68x.7uint8, 96

	.type	.Lconst.33,@object
	.section	.rodata..Lconst.33,"a",@progbits
.Lconst.33:
	.asciz	"[8]uint8"
	.size	.Lconst.33, 9

	.type	go..C9,@object
	.section	.rodata.go..C9,"a",@progbits
	.p2align	3
go..C9:
	.quad	.Lconst.33
	.quad	8
	.size	go..C9, 16

	.type	uint8..d,@object
	.section	.rodata.uint8..d,"aG",@progbits,uint8..d,comdat
	.weak	uint8..d
	.p2align	4
uint8..d:
	.quad	1
	.quad	0
	.long	264632089
	.byte	136
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C10
	.quad	go..C13
	.quad	type...1uint8
	.size	uint8..d, 72

	.type	.Lconst.34,@object
	.section	.rodata..Lconst.34,"a",@progbits
.Lconst.34:
	.asciz	"uint8"
	.size	.Lconst.34, 6

	.type	go..C10,@object
	.section	.rodata.go..C10,"a",@progbits
	.p2align	3
go..C10:
	.quad	.Lconst.34
	.quad	5
	.size	go..C10, 16

	.type	go..C11,@object
	.section	.rodata.go..C11,"a",@progbits
	.p2align	3
go..C11:
	.quad	.Lconst.34
	.quad	5
	.size	go..C11, 16

	.type	go..C12,@object
	.section	.bss.go..C12,"aw",@nobits
	.p2align	4
go..C12:
	.zero	40
	.size	go..C12, 40

	.type	go..C13,@object
	.section	.rodata.go..C13,"a",@progbits
	.p2align	4
go..C13:
	.quad	go..C11
	.quad	0
	.quad	go..C12
	.quad	0
	.quad	0
	.size	go..C13, 40

	.type	type...1uint8,@object
	.section	.rodata.type...1uint8,"aG",@progbits,type...1uint8,comdat
	.weak	type...1uint8
	.p2align	4
type...1uint8:
	.quad	8
	.quad	8
	.long	4234113433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C14
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...1uint8, 80

	.type	.Lconst.35,@object
	.section	.rodata..Lconst.35,"a",@progbits
.Lconst.35:
	.asciz	"*uint8"
	.size	.Lconst.35, 7

	.type	go..C14,@object
	.section	.rodata.go..C14,"a",@progbits
	.p2align	3
go..C14:
	.quad	.Lconst.35
	.quad	6
	.size	go..C14, 16

	.type	type...6.7uint8,@object
	.section	.rodata.type...6.7uint8,"aG",@progbits,type...6.7uint8,comdat
	.weak	type...6.7uint8
	.p2align	4
type...6.7uint8:
	.quad	24
	.quad	8
	.long	264632103
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C15
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...6.7uint8, 80

	.type	.Lconst.36,@object
	.section	.rodata..Lconst.36,"a",@progbits
.Lconst.36:
	.asciz	"[]uint8"
	.size	.Lconst.36, 8

	.type	go..C15,@object
	.section	.rodata.go..C15,"a",@progbits
	.p2align	3
go..C15:
	.quad	.Lconst.36
	.quad	7
	.size	go..C15, 16

	.type	.Lconst.37,@object
	.section	.rodata..Lconst.37,"a",@progbits
.Lconst.37:
	.asciz	"keys"
	.size	.Lconst.37, 5

	.type	go..C16,@object
	.section	.rodata.go..C16,"a",@progbits
	.p2align	3
go..C16:
	.quad	.Lconst.37
	.quad	4
	.size	go..C16, 16

	.type	type...68x.7string,@object
	.section	.rodata.type...68x.7string,"aG",@progbits,type...68x.7string,comdat
	.weak	type...68x.7string
	.p2align	4
type...68x.7string:
	.quad	128
	.quad	120
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkwa
	.quad	go..C17
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	8
	.size	type...68x.7string, 96

	.type	gcbits..wkwa,@object
	.section	.rodata.gcbits..wkwa,"aG",@progbits,gcbits..wkwa,comdat
	.weak	gcbits..wkwa
gcbits..wkwa:
	.zero	2,85
	.size	gcbits..wkwa, 2

	.type	.Lconst.38,@object
	.section	.rodata..Lconst.38,"a",@progbits
.Lconst.38:
	.asciz	"[8]string"
	.size	.Lconst.38, 10

	.type	go..C17,@object
	.section	.rodata.go..C17,"a",@progbits
	.p2align	3
go..C17:
	.quad	.Lconst.38
	.quad	9
	.size	go..C17, 16

	.type	type...6.7string,@object
	.section	.rodata.type...6.7string,"aG",@progbits,type...6.7string,comdat
	.weak	type...6.7string
	.p2align	4
type...6.7string:
	.quad	24
	.quad	8
	.long	2296014504
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C18
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...6.7string, 80

	.type	.Lconst.39,@object
	.section	.rodata..Lconst.39,"a",@progbits
.Lconst.39:
	.asciz	"[]string"
	.size	.Lconst.39, 9

	.type	go..C18,@object
	.section	.rodata.go..C18,"a",@progbits
	.p2align	3
go..C18:
	.quad	.Lconst.39
	.quad	8
	.size	go..C18, 16

	.type	.Lconst.40,@object
	.section	.rodata..Lconst.40,"a",@progbits
.Lconst.40:
	.asciz	"values"
	.size	.Lconst.40, 7

	.type	go..C19,@object
	.section	.rodata.go..C19,"a",@progbits
	.p2align	3
go..C19:
	.quad	.Lconst.40
	.quad	6
	.size	go..C19, 16

	.type	.Lconst.41,@object
	.section	.rodata..Lconst.41,"a",@progbits
.Lconst.41:
	.asciz	"overflow"
	.size	.Lconst.41, 9

	.type	go..C20,@object
	.section	.rodata.go..C20,"a",@progbits
	.p2align	3
go..C20:
	.quad	.Lconst.41
	.quad	8
	.size	go..C20, 16

	.type	go..C21,@object
	.section	.data.go..C21,"aw",@progbits
	.p2align	4
go..C21:
	.quad	go..C8
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C16
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C19
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	272
	.quad	go..C20
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	528
	.size	go..C21, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1324374500
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C22
	.quad	0
	.quad	0
	.quad	go..C53
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	gcbits..mb,@object
	.section	.rodata.gcbits..mb,"aG",@progbits,gcbits..mb,comdat
	.weak	gcbits..mb
gcbits..mb:
	.byte	44
	.size	gcbits..mb, 1

	.type	.Lconst.42,@object
	.section	.rodata..Lconst.42,"a",@progbits
.Lconst.42:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.42, 274

	.type	go..C22,@object
	.section	.rodata.go..C22,"a",@progbits
	.p2align	3
go..C22:
	.quad	.Lconst.42
	.quad	273
	.size	go..C22, 16

	.type	.Lconst.43,@object
	.section	.rodata..Lconst.43,"a",@progbits
.Lconst.43:
	.asciz	"count"
	.size	.Lconst.43, 6

	.type	go..C23,@object
	.section	.rodata.go..C23,"a",@progbits
	.p2align	3
go..C23:
	.quad	.Lconst.43
	.quad	5
	.size	go..C23, 16

	.type	int..d,@object
	.section	.rodata.int..d,"aG",@progbits,int..d,comdat
	.weak	int..d
	.p2align	4
int..d:
	.quad	8
	.quad	0
	.long	876704034
	.byte	130
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C24
	.quad	go..C27
	.quad	type...1int
	.size	int..d, 72

	.type	.Lconst.44,@object
	.section	.rodata..Lconst.44,"a",@progbits
.Lconst.44:
	.asciz	"int"
	.size	.Lconst.44, 4

	.type	go..C24,@object
	.section	.rodata.go..C24,"a",@progbits
	.p2align	3
go..C24:
	.quad	.Lconst.44
	.quad	3
	.size	go..C24, 16

	.type	go..C25,@object
	.section	.rodata.go..C25,"a",@progbits
	.p2align	3
go..C25:
	.quad	.Lconst.44
	.quad	3
	.size	go..C25, 16

	.type	go..C26,@object
	.section	.bss.go..C26,"aw",@nobits
	.p2align	4
go..C26:
	.zero	40
	.size	go..C26, 40

	.type	go..C27,@object
	.section	.rodata.go..C27,"a",@progbits
	.p2align	4
go..C27:
	.quad	go..C25
	.quad	0
	.quad	go..C26
	.quad	0
	.quad	0
	.size	go..C27, 40

	.type	type...1int,@object
	.section	.rodata.type...1int,"aG",@progbits,type...1int,comdat
	.weak	type...1int
	.p2align	4
type...1int:
	.quad	8
	.quad	8
	.long	1142362665
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C28
	.quad	0
	.quad	0
	.quad	int..d
	.size	type...1int, 80

	.type	.Lconst.45,@object
	.section	.rodata..Lconst.45,"a",@progbits
.Lconst.45:
	.asciz	"*int"
	.size	.Lconst.45, 5

	.type	go..C28,@object
	.section	.rodata.go..C28,"a",@progbits
	.p2align	3
go..C28:
	.quad	.Lconst.45
	.quad	4
	.size	go..C28, 16

	.type	.Lconst.46,@object
	.section	.rodata..Lconst.46,"a",@progbits
.Lconst.46:
	.asciz	"flags"
	.size	.Lconst.46, 6

	.type	go..C29,@object
	.section	.rodata.go..C29,"a",@progbits
	.p2align	3
go..C29:
	.quad	.Lconst.46
	.quad	5
	.size	go..C29, 16

	.type	.Lconst.47,@object
	.section	.rodata..Lconst.47,"a",@progbits
.Lconst.47:
	.asciz	"B"
	.size	.Lconst.47, 2

	.type	go..C30,@object
	.section	.rodata.go..C30,"a",@progbits
	.p2align	3
go..C30:
	.quad	.Lconst.47
	.quad	1
	.size	go..C30, 16

	.type	.Lconst.48,@object
	.section	.rodata..Lconst.48,"a",@progbits
.Lconst.48:
	.asciz	"noverflow"
	.size	.Lconst.48, 10

	.type	go..C31,@object
	.section	.rodata.go..C31,"a",@progbits
	.p2align	3
go..C31:
	.quad	.Lconst.48
	.quad	9
	.size	go..C31, 16

	.type	uint16..d,@object
	.section	.rodata.uint16..d,"aG",@progbits,uint16..d,comdat
	.weak	uint16..d
	.p2align	4
uint16..d:
	.quad	2
	.quad	0
	.long	76732288
	.byte	137
	.byte	2
	.byte	2
	.zero	1
	.quad	runtime.memhash16..f
	.quad	runtime.memequal16..f
	.quad	0
	.quad	go..C32
	.quad	go..C35
	.quad	type...1uint16
	.size	uint16..d, 72

	.type	.Lconst.49,@object
	.section	.rodata..Lconst.49,"a",@progbits
.Lconst.49:
	.asciz	"uint16"
	.size	.Lconst.49, 7

	.type	go..C32,@object
	.section	.rodata.go..C32,"a",@progbits
	.p2align	3
go..C32:
	.quad	.Lconst.49
	.quad	6
	.size	go..C32, 16

	.type	go..C33,@object
	.section	.rodata.go..C33,"a",@progbits
	.p2align	3
go..C33:
	.quad	.Lconst.49
	.quad	6
	.size	go..C33, 16

	.type	go..C34,@object
	.section	.bss.go..C34,"aw",@nobits
	.p2align	4
go..C34:
	.zero	40
	.size	go..C34, 40

	.type	go..C35,@object
	.section	.rodata.go..C35,"a",@progbits
	.p2align	4
go..C35:
	.quad	go..C33
	.quad	0
	.quad	go..C34
	.quad	0
	.quad	0
	.size	go..C35, 40

	.type	type...1uint16,@object
	.section	.rodata.type...1uint16,"aG",@progbits,type...1uint16,comdat
	.weak	type...1uint16
	.p2align	4
type...1uint16:
	.quad	8
	.quad	8
	.long	1227716617
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C36
	.quad	0
	.quad	0
	.quad	uint16..d
	.size	type...1uint16, 80

	.type	.Lconst.50,@object
	.section	.rodata..Lconst.50,"a",@progbits
.Lconst.50:
	.asciz	"*uint16"
	.size	.Lconst.50, 8

	.type	go..C36,@object
	.section	.rodata.go..C36,"a",@progbits
	.p2align	3
go..C36:
	.quad	.Lconst.50
	.quad	7
	.size	go..C36, 16

	.type	.Lconst.51,@object
	.section	.rodata..Lconst.51,"a",@progbits
.Lconst.51:
	.asciz	"hash0"
	.size	.Lconst.51, 6

	.type	go..C37,@object
	.section	.rodata.go..C37,"a",@progbits
	.p2align	3
go..C37:
	.quad	.Lconst.51
	.quad	5
	.size	go..C37, 16

	.type	uint32..d,@object
	.section	.rodata.uint32..d,"aG",@progbits,uint32..d,comdat
	.weak	uint32..d
	.p2align	4
uint32..d:
	.quad	4
	.quad	0
	.long	278357906
	.byte	138
	.byte	4
	.byte	4
	.zero	1
	.quad	runtime.memhash32..f
	.quad	runtime.memequal32..f
	.quad	0
	.quad	go..C38
	.quad	go..C41
	.quad	type...1uint32
	.size	uint32..d, 72

	.type	.Lconst.52,@object
	.section	.rodata..Lconst.52,"a",@progbits
.Lconst.52:
	.asciz	"uint32"
	.size	.Lconst.52, 7

	.type	go..C38,@object
	.section	.rodata.go..C38,"a",@progbits
	.p2align	3
go..C38:
	.quad	.Lconst.52
	.quad	6
	.size	go..C38, 16

	.type	go..C39,@object
	.section	.rodata.go..C39,"a",@progbits
	.p2align	3
go..C39:
	.quad	.Lconst.52
	.quad	6
	.size	go..C39, 16

	.type	go..C40,@object
	.section	.bss.go..C40,"aw",@nobits
	.p2align	4
go..C40:
	.zero	40
	.size	go..C40, 40

	.type	go..C41,@object
	.section	.rodata.go..C41,"a",@progbits
	.p2align	4
go..C41:
	.quad	go..C39
	.quad	0
	.quad	go..C40
	.quad	0
	.quad	0
	.size	go..C41, 40

	.type	type...1uint32,@object
	.section	.rodata.type...1uint32,"aG",@progbits,type...1uint32,comdat
	.weak	type...1uint32
	.p2align	4
type...1uint32:
	.quad	8
	.quad	8
	.long	158759209
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C42
	.quad	0
	.quad	0
	.quad	uint32..d
	.size	type...1uint32, 80

	.type	.Lconst.53,@object
	.section	.rodata..Lconst.53,"a",@progbits
.Lconst.53:
	.asciz	"*uint32"
	.size	.Lconst.53, 8

	.type	go..C42,@object
	.section	.rodata.go..C42,"a",@progbits
	.p2align	3
go..C42:
	.quad	.Lconst.53
	.quad	7
	.size	go..C42, 16

	.type	.Lconst.54,@object
	.section	.rodata..Lconst.54,"a",@progbits
.Lconst.54:
	.asciz	"buckets"
	.size	.Lconst.54, 8

	.type	go..C43,@object
	.section	.rodata.go..C43,"a",@progbits
	.p2align	3
go..C43:
	.quad	.Lconst.54
	.quad	7
	.size	go..C43, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	1310775881
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C44
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.55,@object
	.section	.rodata..Lconst.55,"a",@progbits
.Lconst.55:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }"
	.size	.Lconst.55, 75

	.type	go..C44,@object
	.section	.rodata.go..C44,"a",@progbits
	.p2align	3
go..C44:
	.quad	.Lconst.55
	.quad	74
	.size	go..C44, 16

	.type	.Lconst.56,@object
	.section	.rodata..Lconst.56,"a",@progbits
.Lconst.56:
	.asciz	"oldbuckets"
	.size	.Lconst.56, 11

	.type	go..C45,@object
	.section	.rodata.go..C45,"a",@progbits
	.p2align	3
go..C45:
	.quad	.Lconst.56
	.quad	10
	.size	go..C45, 16

	.type	.Lconst.57,@object
	.section	.rodata..Lconst.57,"a",@progbits
.Lconst.57:
	.asciz	"nevacuate"
	.size	.Lconst.57, 10

	.type	go..C46,@object
	.section	.rodata.go..C46,"a",@progbits
	.p2align	3
go..C46:
	.quad	.Lconst.57
	.quad	9
	.size	go..C46, 16

	.type	uintptr..d,@object
	.section	.rodata.uintptr..d,"aG",@progbits,uintptr..d,comdat
	.weak	uintptr..d
	.p2align	4
uintptr..d:
	.quad	8
	.quad	0
	.long	2806773995
	.byte	140
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C47
	.quad	go..C50
	.quad	type...1uintptr
	.size	uintptr..d, 72

	.type	.Lconst.58,@object
	.section	.rodata..Lconst.58,"a",@progbits
.Lconst.58:
	.asciz	"uintptr"
	.size	.Lconst.58, 8

	.type	go..C47,@object
	.section	.rodata.go..C47,"a",@progbits
	.p2align	3
go..C47:
	.quad	.Lconst.58
	.quad	7
	.size	go..C47, 16

	.type	go..C48,@object
	.section	.rodata.go..C48,"a",@progbits
	.p2align	3
go..C48:
	.quad	.Lconst.58
	.quad	7
	.size	go..C48, 16

	.type	go..C49,@object
	.section	.bss.go..C49,"aw",@nobits
	.p2align	4
go..C49:
	.zero	40
	.size	go..C49, 40

	.type	go..C50,@object
	.section	.rodata.go..C50,"a",@progbits
	.p2align	4
go..C50:
	.quad	go..C48
	.quad	0
	.quad	go..C49
	.quad	0
	.quad	0
	.size	go..C50, 40

	.type	type...1uintptr,@object
	.section	.rodata.type...1uintptr,"aG",@progbits,type...1uintptr,comdat
	.weak	type...1uintptr
	.p2align	4
type...1uintptr:
	.quad	8
	.quad	8
	.long	1958710969
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C51
	.quad	0
	.quad	0
	.quad	uintptr..d
	.size	type...1uintptr, 80

	.type	.Lconst.59,@object
	.section	.rodata..Lconst.59,"a",@progbits
.Lconst.59:
	.asciz	"*uintptr"
	.size	.Lconst.59, 9

	.type	go..C51,@object
	.section	.rodata.go..C51,"a",@progbits
	.p2align	3
go..C51:
	.quad	.Lconst.59
	.quad	8
	.size	go..C51, 16

	.type	.Lconst.60,@object
	.section	.rodata..Lconst.60,"a",@progbits
.Lconst.60:
	.asciz	"extra"
	.size	.Lconst.60, 6

	.type	go..C52,@object
	.section	.rodata.go..C52,"a",@progbits
	.p2align	3
go..C52:
	.quad	.Lconst.60
	.quad	5
	.size	go..C52, 16

	.type	go..C53,@object
	.section	.data.go..C53,"aw",@progbits
	.p2align	4
go..C53:
	.quad	go..C23
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C29
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C30
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C31
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C37
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C43
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C45
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C46
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C52
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C53, 360

	.type	command_line_arguments.Node..d,@object
	.section	.rodata.command_line_arguments.Node..d,"a",@progbits
	.globl	command_line_arguments.Node..d
	.p2align	4
command_line_arguments.Node..d:
	.quad	16
	.quad	16
	.long	268213848
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C54
	.quad	go..C58
	.quad	type...1command_line_arguments.Node
	.quad	go..C82
	.quad	1
	.quad	1
	.size	command_line_arguments.Node..d, 96

	.type	gcbits..da,@object
	.section	.rodata.gcbits..da,"aG",@progbits,gcbits..da,comdat
	.weak	gcbits..da
gcbits..da:
	.byte	3
	.size	gcbits..da, 1

	.type	.Lconst.61,@object
	.section	.rodata..Lconst.61,"a",@progbits
.Lconst.61:
	.asciz	"\tcommand_line_arguments\tparser.Node"
	.size	.Lconst.61, 36

	.type	go..C54,@object
	.section	.rodata.go..C54,"a",@progbits
	.p2align	3
go..C54:
	.quad	.Lconst.61
	.quad	35
	.size	go..C54, 16

	.type	.Lconst.62,@object
	.section	.rodata..Lconst.62,"a",@progbits
.Lconst.62:
	.asciz	"Node"
	.size	.Lconst.62, 5

	.type	go..C55,@object
	.section	.rodata.go..C55,"a",@progbits
	.p2align	3
go..C55:
	.quad	.Lconst.62
	.quad	4
	.size	go..C55, 16

	.type	.Lconst.63,@object
	.section	.rodata..Lconst.63,"a",@progbits
.Lconst.63:
	.asciz	"command-line-arguments"
	.size	.Lconst.63, 23

	.type	go..C56,@object
	.section	.rodata.go..C56,"a",@progbits
	.p2align	3
go..C56:
	.quad	.Lconst.63
	.quad	22
	.size	go..C56, 16

	.type	go..C57,@object
	.section	.bss.go..C57,"aw",@nobits
	.p2align	4
go..C57:
	.zero	40
	.size	go..C57, 40

	.type	go..C58,@object
	.section	.rodata.go..C58,"a",@progbits
	.p2align	4
go..C58:
	.quad	go..C55
	.quad	go..C56
	.quad	go..C57
	.quad	0
	.quad	0
	.size	go..C58, 40

	.type	type...1command_line_arguments.Node,@object
	.section	.rodata.type...1command_line_arguments.Node,"aG",@progbits,type...1command_line_arguments.Node,comdat
	.weak	type...1command_line_arguments.Node
	.p2align	4
type...1command_line_arguments.Node:
	.quad	8
	.quad	8
	.long	4291421577
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C59
	.quad	0
	.quad	0
	.quad	command_line_arguments.Node..d
	.size	type...1command_line_arguments.Node, 80

	.type	.Lconst.64,@object
	.section	.rodata..Lconst.64,"a",@progbits
.Lconst.64:
	.asciz	"*\tcommand_line_arguments\tparser.Node"
	.size	.Lconst.64, 37

	.type	go..C59,@object
	.section	.rodata.go..C59,"a",@progbits
	.p2align	3
go..C59:
	.quad	.Lconst.64
	.quad	36
	.size	go..C59, 16

	.type	.Lconst.65,@object
	.section	.rodata..Lconst.65,"a",@progbits
.Lconst.65:
	.asciz	"Pos"
	.size	.Lconst.65, 4

	.type	go..C60,@object
	.section	.rodata.go..C60,"a",@progbits
	.p2align	3
go..C60:
	.quad	.Lconst.65
	.quad	3
	.size	go..C60, 16

	.type	type..func.8.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	2162844040
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C61
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C62
	.quad	0
	.quad	0
	.quad	go..C81
	.quad	1
	.quad	1
	.size	type..func.8.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.66,@object
	.section	.rodata..Lconst.66,"a",@progbits
.Lconst.66:
	.asciz	"func() \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.66, 53

	.type	go..C61,@object
	.section	.rodata.go..C61,"a",@progbits
	.p2align	3
go..C61:
	.quad	.Lconst.66
	.quad	52
	.size	go..C61, 16

	.type	go..C62,@object
	.section	.bss.go..C62,"aw",@nobits
	.p2align	3
go..C62:
	.zero	8
	.size	go..C62, 8

	.type	command_line_arguments.SourcePosition..d,@object
	.section	.rodata.command_line_arguments.SourcePosition..d,"a",@progbits
	.globl	command_line_arguments.SourcePosition..d
	.p2align	4
command_line_arguments.SourcePosition..d:
	.quad	40
	.quad	32
	.long	3993217414
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.SourcePosition..hash..f
	.quad	command_line_arguments.command_line_arguments.SourcePosition..eq..f
	.quad	gcbits..ia
	.quad	go..C63
	.quad	go..C67
	.quad	type...1command_line_arguments.SourcePosition
	.quad	go..C80
	.quad	4
	.quad	4
	.size	command_line_arguments.SourcePosition..d, 96

	.type	command_line_arguments.command_line_arguments.SourcePosition..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.SourcePosition..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.SourcePosition..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.SourcePosition..hash..f:
	.quad	command_line_arguments.command_line_arguments.SourcePosition..hash
	.size	command_line_arguments.command_line_arguments.SourcePosition..hash..f, 8

	.type	command_line_arguments.command_line_arguments.SourcePosition..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.SourcePosition..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.SourcePosition..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.SourcePosition..eq..f:
	.quad	command_line_arguments.command_line_arguments.SourcePosition..eq
	.size	command_line_arguments.command_line_arguments.SourcePosition..eq..f, 8

	.type	gcbits..ia,@object
	.section	.rodata.gcbits..ia,"aG",@progbits,gcbits..ia,comdat
	.weak	gcbits..ia
gcbits..ia:
	.byte	8
	.size	gcbits..ia, 1

	.type	.Lconst.67,@object
	.section	.rodata..Lconst.67,"a",@progbits
.Lconst.67:
	.asciz	"\tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.67, 46

	.type	go..C63,@object
	.section	.rodata.go..C63,"a",@progbits
	.p2align	3
go..C63:
	.quad	.Lconst.67
	.quad	45
	.size	go..C63, 16

	.type	.Lconst.68,@object
	.section	.rodata..Lconst.68,"a",@progbits
.Lconst.68:
	.asciz	"SourcePosition"
	.size	.Lconst.68, 15

	.type	go..C64,@object
	.section	.rodata.go..C64,"a",@progbits
	.p2align	3
go..C64:
	.quad	.Lconst.68
	.quad	14
	.size	go..C64, 16

	.type	go..C65,@object
	.section	.rodata.go..C65,"a",@progbits
	.p2align	3
go..C65:
	.quad	.Lconst.63
	.quad	22
	.size	go..C65, 16

	.type	go..C66,@object
	.section	.bss.go..C66,"aw",@nobits
	.p2align	4
go..C66:
	.zero	40
	.size	go..C66, 40

	.type	go..C67,@object
	.section	.rodata.go..C67,"a",@progbits
	.p2align	4
go..C67:
	.quad	go..C64
	.quad	go..C65
	.quad	go..C66
	.quad	0
	.quad	0
	.size	go..C67, 40

	.type	type...1command_line_arguments.SourcePosition,@object
	.section	.rodata.type...1command_line_arguments.SourcePosition,"aG",@progbits,type...1command_line_arguments.SourcePosition,comdat
	.weak	type...1command_line_arguments.SourcePosition
	.p2align	4
type...1command_line_arguments.SourcePosition:
	.quad	8
	.quad	8
	.long	3761936489
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C68
	.quad	go..C74
	.quad	type...1.1command_line_arguments.SourcePosition
	.quad	command_line_arguments.SourcePosition..d
	.size	type...1command_line_arguments.SourcePosition, 80

	.type	.Lconst.69,@object
	.section	.rodata..Lconst.69,"a",@progbits
.Lconst.69:
	.asciz	"*\tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.69, 47

	.type	go..C68,@object
	.section	.rodata.go..C68,"a",@progbits
	.p2align	3
go..C68:
	.quad	.Lconst.69
	.quad	46
	.size	go..C68, 16

	.type	go..C69,@object
	.section	.rodata.go..C69,"a",@progbits
	.p2align	3
go..C69:
	.quad	.Lconst.65
	.quad	3
	.size	go..C69, 16

	.type	type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	2285727400
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C70
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C71
	.quad	1
	.quad	1
	.quad	go..C72
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.70,@object
	.section	.rodata..Lconst.70,"a",@progbits
.Lconst.70:
	.asciz	"func(*\tcommand_line_arguments\tparser.SourcePosition) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.70, 99

	.type	go..C70,@object
	.section	.rodata.go..C70,"a",@progbits
	.p2align	3
go..C70:
	.quad	.Lconst.70
	.quad	98
	.size	go..C70, 16

	.type	go..C71,@object
	.section	.data.go..C71,"aw",@progbits
	.p2align	3
go..C71:
	.quad	type...1command_line_arguments.SourcePosition
	.size	go..C71, 8

	.type	go..C72,@object
	.section	.data.go..C72,"aw",@progbits
	.p2align	3
go..C72:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C72, 8

	.type	go..C73,@object
	.section	.data.go..C73,"aw",@progbits
	.p2align	4
go..C73:
	.quad	go..C69
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.SourcePosition.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.SourcePosition.Pos
	.size	go..C73, 40

	.type	go..C74,@object
	.section	.rodata.go..C74,"a",@progbits
	.p2align	4
go..C74:
	.quad	0
	.quad	0
	.quad	go..C73
	.quad	1
	.quad	1
	.size	go..C74, 40

	.type	type...1.1command_line_arguments.SourcePosition,@object
	.section	.rodata.type...1.1command_line_arguments.SourcePosition,"aG",@progbits,type...1.1command_line_arguments.SourcePosition,comdat
	.weak	type...1.1command_line_arguments.SourcePosition
	.p2align	4
type...1.1command_line_arguments.SourcePosition:
	.quad	8
	.quad	8
	.long	61441689
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C75
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.SourcePosition
	.size	type...1.1command_line_arguments.SourcePosition, 80

	.type	.Lconst.71,@object
	.section	.rodata..Lconst.71,"a",@progbits
.Lconst.71:
	.asciz	"**\tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.71, 48

	.type	go..C75,@object
	.section	.rodata.go..C75,"a",@progbits
	.p2align	3
go..C75:
	.quad	.Lconst.71
	.quad	47
	.size	go..C75, 16

	.type	.Lconst.72,@object
	.section	.rodata..Lconst.72,"a",@progbits
.Lconst.72:
	.asciz	"LineNum"
	.size	.Lconst.72, 8

	.type	go..C76,@object
	.section	.rodata.go..C76,"a",@progbits
	.p2align	3
go..C76:
	.quad	.Lconst.72
	.quad	7
	.size	go..C76, 16

	.type	.Lconst.73,@object
	.section	.rodata..Lconst.73,"a",@progbits
.Lconst.73:
	.asciz	"ColNum"
	.size	.Lconst.73, 7

	.type	go..C77,@object
	.section	.rodata.go..C77,"a",@progbits
	.p2align	3
go..C77:
	.quad	.Lconst.73
	.quad	6
	.size	go..C77, 16

	.type	.Lconst.74,@object
	.section	.rodata..Lconst.74,"a",@progbits
.Lconst.74:
	.asciz	"TokenLength"
	.size	.Lconst.74, 12

	.type	go..C78,@object
	.section	.rodata.go..C78,"a",@progbits
	.p2align	3
go..C78:
	.quad	.Lconst.74
	.quad	11
	.size	go..C78, 16

	.type	.Lconst.75,@object
	.section	.rodata..Lconst.75,"a",@progbits
.Lconst.75:
	.asciz	"Filename"
	.size	.Lconst.75, 9

	.type	go..C79,@object
	.section	.rodata.go..C79,"a",@progbits
	.p2align	3
go..C79:
	.quad	.Lconst.75
	.quad	8
	.size	go..C79, 16

	.type	go..C80,@object
	.section	.data.go..C80,"aw",@progbits
	.p2align	4
go..C80:
	.quad	go..C76
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C77
	.quad	0
	.quad	int..d
	.quad	0
	.quad	16
	.quad	go..C78
	.quad	0
	.quad	int..d
	.quad	0
	.quad	32
	.quad	go..C79
	.quad	0
	.quad	string..d
	.quad	0
	.quad	48
	.size	go..C80, 160

	.type	go..C81,@object
	.section	.data.go..C81,"aw",@progbits
	.p2align	3
go..C81:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C81, 8

	.type	go..C82,@object
	.section	.data.go..C82,"aw",@progbits
	.p2align	4
go..C82:
	.quad	go..C60
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.size	go..C82, 24

	.type	command_line_arguments.Doctype..d,@object
	.section	.rodata.command_line_arguments.Doctype..d,"a",@progbits
	.globl	command_line_arguments.Doctype..d
	.p2align	4
command_line_arguments.Doctype..d:
	.quad	56
	.quad	48
	.long	4058392986
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Doctype..hash..f
	.quad	command_line_arguments.command_line_arguments.Doctype..eq..f
	.quad	gcbits..ib
	.quad	go..C83
	.quad	go..C87
	.quad	type...1command_line_arguments.Doctype
	.quad	go..C105
	.quad	2
	.quad	2
	.size	command_line_arguments.Doctype..d, 96

	.type	command_line_arguments.command_line_arguments.Doctype..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Doctype..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Doctype..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Doctype..hash..f:
	.quad	command_line_arguments.command_line_arguments.Doctype..hash
	.size	command_line_arguments.command_line_arguments.Doctype..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Doctype..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Doctype..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Doctype..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Doctype..eq..f:
	.quad	command_line_arguments.command_line_arguments.Doctype..eq
	.size	command_line_arguments.command_line_arguments.Doctype..eq..f, 8

	.type	gcbits..ib,@object
	.section	.rodata.gcbits..ib,"aG",@progbits,gcbits..ib,comdat
	.weak	gcbits..ib
gcbits..ib:
	.byte	40
	.size	gcbits..ib, 1

	.type	.Lconst.77,@object
	.section	.rodata..Lconst.77,"a",@progbits
.Lconst.77:
	.asciz	"\tcommand_line_arguments\tparser.Doctype"
	.size	.Lconst.77, 39

	.type	go..C83,@object
	.section	.rodata.go..C83,"a",@progbits
	.p2align	3
go..C83:
	.quad	.Lconst.77
	.quad	38
	.size	go..C83, 16

	.type	.Lconst.78,@object
	.section	.rodata..Lconst.78,"a",@progbits
.Lconst.78:
	.asciz	"Doctype"
	.size	.Lconst.78, 8

	.type	go..C84,@object
	.section	.rodata.go..C84,"a",@progbits
	.p2align	3
go..C84:
	.quad	.Lconst.78
	.quad	7
	.size	go..C84, 16

	.type	go..C85,@object
	.section	.rodata.go..C85,"a",@progbits
	.p2align	3
go..C85:
	.quad	.Lconst.63
	.quad	22
	.size	go..C85, 16

	.type	go..C86,@object
	.section	.bss.go..C86,"aw",@nobits
	.p2align	4
go..C86:
	.zero	40
	.size	go..C86, 40

	.type	go..C87,@object
	.section	.rodata.go..C87,"a",@progbits
	.p2align	4
go..C87:
	.quad	go..C84
	.quad	go..C85
	.quad	go..C86
	.quad	0
	.quad	0
	.size	go..C87, 40

	.type	type...1command_line_arguments.Doctype,@object
	.section	.rodata.type...1command_line_arguments.Doctype,"aG",@progbits,type...1command_line_arguments.Doctype,comdat
	.weak	type...1command_line_arguments.Doctype
	.p2align	4
type...1command_line_arguments.Doctype:
	.quad	8
	.quad	8
	.long	509778345
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C88
	.quad	go..C101
	.quad	type...1.1command_line_arguments.Doctype
	.quad	command_line_arguments.Doctype..d
	.size	type...1command_line_arguments.Doctype, 80

	.type	.Lconst.79,@object
	.section	.rodata..Lconst.79,"a",@progbits
.Lconst.79:
	.asciz	"*\tcommand_line_arguments\tparser.Doctype"
	.size	.Lconst.79, 40

	.type	go..C88,@object
	.section	.rodata.go..C88,"a",@progbits
	.p2align	3
go..C88:
	.quad	.Lconst.79
	.quad	39
	.size	go..C88, 16

	.type	go..C89,@object
	.section	.rodata.go..C89,"a",@progbits
	.p2align	3
go..C89:
	.quad	.Lconst.65
	.quad	3
	.size	go..C89, 16

	.type	type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	1295881896
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C90
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C91
	.quad	1
	.quad	1
	.quad	go..C92
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.80,@object
	.section	.rodata..Lconst.80,"a",@progbits
.Lconst.80:
	.asciz	"func(*\tcommand_line_arguments\tparser.Doctype) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.80, 92

	.type	go..C90,@object
	.section	.rodata.go..C90,"a",@progbits
	.p2align	3
go..C90:
	.quad	.Lconst.80
	.quad	91
	.size	go..C90, 16

	.type	go..C91,@object
	.section	.data.go..C91,"aw",@progbits
	.p2align	3
go..C91:
	.quad	type...1command_line_arguments.Doctype
	.size	go..C91, 8

	.type	go..C92,@object
	.section	.data.go..C92,"aw",@progbits
	.p2align	3
go..C92:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C92, 8

	.type	.Lconst.81,@object
	.section	.rodata..Lconst.81,"a",@progbits
.Lconst.81:
	.asciz	"String"
	.size	.Lconst.81, 7

	.type	go..C93,@object
	.section	.rodata.go..C93,"a",@progbits
	.p2align	3
go..C93:
	.quad	.Lconst.81
	.quad	6
	.size	go..C93, 16

	.type	type..func.8.9.8string.9,@object
	.section	.rodata.type..func.8.9.8string.9,"aG",@progbits,type..func.8.9.8string.9,comdat
	.weak	type..func.8.9.8string.9
	.p2align	4
type..func.8.9.8string.9:
	.quad	8
	.quad	8
	.long	916039304
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C94
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C95
	.quad	0
	.quad	0
	.quad	go..C96
	.quad	1
	.quad	1
	.size	type..func.8.9.8string.9, 128

	.type	.Lconst.82,@object
	.section	.rodata..Lconst.82,"a",@progbits
.Lconst.82:
	.asciz	"func() string"
	.size	.Lconst.82, 14

	.type	go..C94,@object
	.section	.rodata.go..C94,"a",@progbits
	.p2align	3
go..C94:
	.quad	.Lconst.82
	.quad	13
	.size	go..C94, 16

	.type	go..C95,@object
	.section	.bss.go..C95,"aw",@nobits
	.p2align	3
go..C95:
	.zero	8
	.size	go..C95, 8

	.type	go..C96,@object
	.section	.data.go..C96,"aw",@progbits
	.p2align	3
go..C96:
	.quad	string..d
	.size	go..C96, 8

	.type	type..func.8.1command_line_arguments.Doctype.9.8string.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Doctype.9.8string.9,"aG",@progbits,type..func.8.1command_line_arguments.Doctype.9.8string.9,comdat
	.weak	type..func.8.1command_line_arguments.Doctype.9.8string.9
	.p2align	4
type..func.8.1command_line_arguments.Doctype.9.8string.9:
	.quad	8
	.quad	8
	.long	49077160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C97
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C98
	.quad	1
	.quad	1
	.quad	go..C99
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Doctype.9.8string.9, 128

	.type	.Lconst.83,@object
	.section	.rodata..Lconst.83,"a",@progbits
.Lconst.83:
	.asciz	"func(*\tcommand_line_arguments\tparser.Doctype) string"
	.size	.Lconst.83, 53

	.type	go..C97,@object
	.section	.rodata.go..C97,"a",@progbits
	.p2align	3
go..C97:
	.quad	.Lconst.83
	.quad	52
	.size	go..C97, 16

	.type	go..C98,@object
	.section	.data.go..C98,"aw",@progbits
	.p2align	3
go..C98:
	.quad	type...1command_line_arguments.Doctype
	.size	go..C98, 8

	.type	go..C99,@object
	.section	.data.go..C99,"aw",@progbits
	.p2align	3
go..C99:
	.quad	string..d
	.size	go..C99, 8

	.type	go..C100,@object
	.section	.data.go..C100,"aw",@progbits
	.p2align	4
go..C100:
	.quad	go..C89
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Doctype.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Doctype.Pos..stub
	.quad	go..C93
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.Doctype.9.8string.9
	.quad	command_line_arguments.Doctype.String
	.size	go..C100, 80

	.type	go..C101,@object
	.section	.rodata.go..C101,"a",@progbits
	.p2align	4
go..C101:
	.quad	0
	.quad	0
	.quad	go..C100
	.quad	2
	.quad	2
	.size	go..C101, 40

	.type	type...1.1command_line_arguments.Doctype,@object
	.section	.rodata.type...1.1command_line_arguments.Doctype,"aG",@progbits,type...1.1command_line_arguments.Doctype,comdat
	.weak	type...1.1command_line_arguments.Doctype
	.p2align	4
type...1.1command_line_arguments.Doctype:
	.quad	8
	.quad	8
	.long	3861486233
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C102
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Doctype
	.size	type...1.1command_line_arguments.Doctype, 80

	.type	.Lconst.84,@object
	.section	.rodata..Lconst.84,"a",@progbits
.Lconst.84:
	.asciz	"**\tcommand_line_arguments\tparser.Doctype"
	.size	.Lconst.84, 41

	.type	go..C102,@object
	.section	.rodata.go..C102,"a",@progbits
	.p2align	3
go..C102:
	.quad	.Lconst.84
	.quad	40
	.size	go..C102, 16

	.type	go..C103,@object
	.section	.rodata.go..C103,"a",@progbits
	.p2align	3
go..C103:
	.quad	.Lconst.68
	.quad	14
	.size	go..C103, 16

	.type	.Lconst.85,@object
	.section	.rodata..Lconst.85,"a",@progbits
.Lconst.85:
	.asciz	"Value"
	.size	.Lconst.85, 6

	.type	go..C104,@object
	.section	.rodata.go..C104,"a",@progbits
	.p2align	3
go..C104:
	.quad	.Lconst.85
	.quad	5
	.size	go..C104, 16

	.type	go..C105,@object
	.section	.data.go..C105,"aw",@progbits
	.p2align	4
go..C105:
	.quad	go..C103
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C104
	.quad	0
	.quad	string..d
	.quad	0
	.quad	80
	.size	go..C105, 80

	.type	.Lconst.86,@object
	.section	.rodata..Lconst.86,"a",@progbits
.Lconst.86:
	.asciz	"<!DOCTYPE "
	.size	.Lconst.86, 11

	.type	.Lconst.87,@object
	.section	.rodata..Lconst.87,"a",@progbits
	.p2align	3
.Lconst.87:
	.quad	.Lconst.86
	.quad	10
	.size	.Lconst.87, 16

	.type	.Lconst.88,@object
	.section	.rodata..Lconst.88,"a",@progbits
.Lconst.88:
	.asciz	">"
	.size	.Lconst.88, 2

	.type	.Lconst.89,@object
	.section	.rodata..Lconst.89,"a",@progbits
	.p2align	3
.Lconst.89:
	.quad	.Lconst.88
	.quad	1
	.size	.Lconst.89, 16

	.type	command_line_arguments.Comment..d,@object
	.section	.rodata.command_line_arguments.Comment..d,"a",@progbits
	.globl	command_line_arguments.Comment..d
	.p2align	4
command_line_arguments.Comment..d:
	.quad	72
	.quad	64
	.long	2932933623
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Comment..hash..f
	.quad	command_line_arguments.command_line_arguments.Comment..eq..f
	.quad	gcbits..if
	.quad	go..C106
	.quad	go..C110
	.quad	type...1command_line_arguments.Comment
	.quad	go..C162
	.quad	4
	.quad	4
	.size	command_line_arguments.Comment..d, 96

	.type	command_line_arguments.command_line_arguments.Comment..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Comment..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Comment..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Comment..hash..f:
	.quad	command_line_arguments.command_line_arguments.Comment..hash
	.size	command_line_arguments.command_line_arguments.Comment..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Comment..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Comment..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Comment..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Comment..eq..f:
	.quad	command_line_arguments.command_line_arguments.Comment..eq
	.size	command_line_arguments.command_line_arguments.Comment..eq..f, 8

	.type	gcbits..if,@object
	.section	.rodata.gcbits..if,"aG",@progbits,gcbits..if,comdat
	.weak	gcbits..if
gcbits..if:
	.byte	168
	.size	gcbits..if, 1

	.type	.Lconst.91,@object
	.section	.rodata..Lconst.91,"a",@progbits
.Lconst.91:
	.asciz	"\tcommand_line_arguments\tparser.Comment"
	.size	.Lconst.91, 39

	.type	go..C106,@object
	.section	.rodata.go..C106,"a",@progbits
	.p2align	3
go..C106:
	.quad	.Lconst.91
	.quad	38
	.size	go..C106, 16

	.type	.Lconst.92,@object
	.section	.rodata..Lconst.92,"a",@progbits
.Lconst.92:
	.asciz	"Comment"
	.size	.Lconst.92, 8

	.type	go..C107,@object
	.section	.rodata.go..C107,"a",@progbits
	.p2align	3
go..C107:
	.quad	.Lconst.92
	.quad	7
	.size	go..C107, 16

	.type	go..C108,@object
	.section	.rodata.go..C108,"a",@progbits
	.p2align	3
go..C108:
	.quad	.Lconst.63
	.quad	22
	.size	go..C108, 16

	.type	go..C109,@object
	.section	.bss.go..C109,"aw",@nobits
	.p2align	4
go..C109:
	.zero	40
	.size	go..C109, 40

	.type	go..C110,@object
	.section	.rodata.go..C110,"a",@progbits
	.p2align	4
go..C110:
	.quad	go..C107
	.quad	go..C108
	.quad	go..C109
	.quad	0
	.quad	0
	.size	go..C110, 40

	.type	type...1command_line_arguments.Comment,@object
	.section	.rodata.type...1command_line_arguments.Comment,"aG",@progbits,type...1command_line_arguments.Comment,comdat
	.weak	type...1command_line_arguments.Comment
	.p2align	4
type...1command_line_arguments.Comment:
	.quad	8
	.quad	8
	.long	3977265017
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C111
	.quad	go..C117
	.quad	type...1.1command_line_arguments.Comment
	.quad	command_line_arguments.Comment..d
	.size	type...1command_line_arguments.Comment, 80

	.type	.Lconst.93,@object
	.section	.rodata..Lconst.93,"a",@progbits
.Lconst.93:
	.asciz	"*\tcommand_line_arguments\tparser.Comment"
	.size	.Lconst.93, 40

	.type	go..C111,@object
	.section	.rodata.go..C111,"a",@progbits
	.p2align	3
go..C111:
	.quad	.Lconst.93
	.quad	39
	.size	go..C111, 16

	.type	go..C112,@object
	.section	.rodata.go..C112,"a",@progbits
	.p2align	3
go..C112:
	.quad	.Lconst.65
	.quad	3
	.size	go..C112, 16

	.type	type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	586305704
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C113
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C114
	.quad	1
	.quad	1
	.quad	go..C115
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.94,@object
	.section	.rodata..Lconst.94,"a",@progbits
.Lconst.94:
	.asciz	"func(*\tcommand_line_arguments\tparser.Comment) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.94, 92

	.type	go..C113,@object
	.section	.rodata.go..C113,"a",@progbits
	.p2align	3
go..C113:
	.quad	.Lconst.94
	.quad	91
	.size	go..C113, 16

	.type	go..C114,@object
	.section	.data.go..C114,"aw",@progbits
	.p2align	3
go..C114:
	.quad	type...1command_line_arguments.Comment
	.size	go..C114, 8

	.type	go..C115,@object
	.section	.data.go..C115,"aw",@progbits
	.p2align	3
go..C115:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C115, 8

	.type	go..C116,@object
	.section	.data.go..C116,"aw",@progbits
	.p2align	4
go..C116:
	.quad	go..C112
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Comment.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Comment.Pos..stub
	.size	go..C116, 40

	.type	go..C117,@object
	.section	.rodata.go..C117,"a",@progbits
	.p2align	4
go..C117:
	.quad	0
	.quad	0
	.quad	go..C116
	.quad	1
	.quad	1
	.size	go..C117, 40

	.type	type...1.1command_line_arguments.Comment,@object
	.section	.rodata.type...1.1command_line_arguments.Comment,"aG",@progbits,type...1.1command_line_arguments.Comment,comdat
	.weak	type...1.1command_line_arguments.Comment
	.p2align	4
type...1.1command_line_arguments.Comment:
	.quad	8
	.quad	8
	.long	3506698137
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C118
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Comment
	.size	type...1.1command_line_arguments.Comment, 80

	.type	.Lconst.95,@object
	.section	.rodata..Lconst.95,"a",@progbits
.Lconst.95:
	.asciz	"**\tcommand_line_arguments\tparser.Comment"
	.size	.Lconst.95, 41

	.type	go..C118,@object
	.section	.rodata.go..C118,"a",@progbits
	.p2align	3
go..C118:
	.quad	.Lconst.95
	.quad	40
	.size	go..C118, 16

	.type	go..C119,@object
	.section	.rodata.go..C119,"a",@progbits
	.p2align	3
go..C119:
	.quad	.Lconst.68
	.quad	14
	.size	go..C119, 16

	.type	go..C120,@object
	.section	.rodata.go..C120,"a",@progbits
	.p2align	3
go..C120:
	.quad	.Lconst.85
	.quad	5
	.size	go..C120, 16

	.type	.Lconst.96,@object
	.section	.rodata..Lconst.96,"a",@progbits
.Lconst.96:
	.asciz	"Block"
	.size	.Lconst.96, 6

	.type	go..C121,@object
	.section	.rodata.go..C121,"a",@progbits
	.p2align	3
go..C121:
	.quad	.Lconst.96
	.quad	5
	.size	go..C121, 16

	.type	type...1command_line_arguments.Block,@object
	.section	.rodata.type...1command_line_arguments.Block,"aG",@progbits,type...1command_line_arguments.Block,comdat
	.weak	type...1command_line_arguments.Block
	.p2align	4
type...1command_line_arguments.Block:
	.quad	8
	.quad	8
	.long	4137166393
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C122
	.quad	go..C150
	.quad	type...1.1command_line_arguments.Block
	.quad	command_line_arguments.Block..d
	.size	type...1command_line_arguments.Block, 80

	.type	.Lconst.97,@object
	.section	.rodata..Lconst.97,"a",@progbits
.Lconst.97:
	.asciz	"*\tcommand_line_arguments\tparser.Block"
	.size	.Lconst.97, 38

	.type	go..C122,@object
	.section	.rodata.go..C122,"a",@progbits
	.p2align	3
go..C122:
	.quad	.Lconst.97
	.quad	37
	.size	go..C122, 16

	.type	.Lconst.98,@object
	.section	.rodata..Lconst.98,"a",@progbits
.Lconst.98:
	.asciz	"CanInline"
	.size	.Lconst.98, 10

	.type	go..C123,@object
	.section	.rodata.go..C123,"a",@progbits
	.p2align	3
go..C123:
	.quad	.Lconst.98
	.quad	9
	.size	go..C123, 16

	.type	type..func.8.9.8bool.9,@object
	.section	.rodata.type..func.8.9.8bool.9,"aG",@progbits,type..func.8.9.8bool.9,comdat
	.weak	type..func.8.9.8bool.9
	.p2align	4
type..func.8.9.8bool.9:
	.quad	8
	.quad	8
	.long	3933103176
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C124
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C125
	.quad	0
	.quad	0
	.quad	go..C131
	.quad	1
	.quad	1
	.size	type..func.8.9.8bool.9, 128

	.type	.Lconst.99,@object
	.section	.rodata..Lconst.99,"a",@progbits
.Lconst.99:
	.asciz	"func() bool"
	.size	.Lconst.99, 12

	.type	go..C124,@object
	.section	.rodata.go..C124,"a",@progbits
	.p2align	3
go..C124:
	.quad	.Lconst.99
	.quad	11
	.size	go..C124, 16

	.type	go..C125,@object
	.section	.bss.go..C125,"aw",@nobits
	.p2align	3
go..C125:
	.zero	8
	.size	go..C125, 8

	.type	bool..d,@object
	.section	.rodata.bool..d,"aG",@progbits,bool..d,comdat
	.weak	bool..d
	.p2align	4
bool..d:
	.quad	1
	.quad	0
	.long	1537849745
	.byte	129
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C126
	.quad	go..C129
	.quad	type...1bool
	.size	bool..d, 72

	.type	.Lconst.100,@object
	.section	.rodata..Lconst.100,"a",@progbits
.Lconst.100:
	.asciz	"bool"
	.size	.Lconst.100, 5

	.type	go..C126,@object
	.section	.rodata.go..C126,"a",@progbits
	.p2align	3
go..C126:
	.quad	.Lconst.100
	.quad	4
	.size	go..C126, 16

	.type	go..C127,@object
	.section	.rodata.go..C127,"a",@progbits
	.p2align	3
go..C127:
	.quad	.Lconst.100
	.quad	4
	.size	go..C127, 16

	.type	go..C128,@object
	.section	.bss.go..C128,"aw",@nobits
	.p2align	4
go..C128:
	.zero	40
	.size	go..C128, 40

	.type	go..C129,@object
	.section	.rodata.go..C129,"a",@progbits
	.p2align	4
go..C129:
	.quad	go..C127
	.quad	0
	.quad	go..C128
	.quad	0
	.quad	0
	.size	go..C129, 40

	.type	type...1bool,@object
	.section	.rodata.type...1bool,"aG",@progbits,type...1bool,comdat
	.weak	type...1bool
	.p2align	4
type...1bool:
	.quad	8
	.quad	8
	.long	3130759449
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C130
	.quad	0
	.quad	0
	.quad	bool..d
	.size	type...1bool, 80

	.type	.Lconst.101,@object
	.section	.rodata..Lconst.101,"a",@progbits
.Lconst.101:
	.asciz	"*bool"
	.size	.Lconst.101, 6

	.type	go..C130,@object
	.section	.rodata.go..C130,"a",@progbits
	.p2align	3
go..C130:
	.quad	.Lconst.101
	.quad	5
	.size	go..C130, 16

	.type	go..C131,@object
	.section	.data.go..C131,"aw",@progbits
	.p2align	3
go..C131:
	.quad	bool..d
	.size	go..C131, 8

	.type	type..func.8.1command_line_arguments.Block.9.8bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Block.9.8bool.9,"aG",@progbits,type..func.8.1command_line_arguments.Block.9.8bool.9,comdat
	.weak	type..func.8.1command_line_arguments.Block.9.8bool.9
	.p2align	4
type..func.8.1command_line_arguments.Block.9.8bool.9:
	.quad	8
	.quad	8
	.long	3178441576
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C132
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C133
	.quad	1
	.quad	1
	.quad	go..C134
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Block.9.8bool.9, 128

	.type	.Lconst.102,@object
	.section	.rodata..Lconst.102,"a",@progbits
.Lconst.102:
	.asciz	"func(*\tcommand_line_arguments\tparser.Block) bool"
	.size	.Lconst.102, 49

	.type	go..C132,@object
	.section	.rodata.go..C132,"a",@progbits
	.p2align	3
go..C132:
	.quad	.Lconst.102
	.quad	48
	.size	go..C132, 16

	.type	go..C133,@object
	.section	.data.go..C133,"aw",@progbits
	.p2align	3
go..C133:
	.quad	type...1command_line_arguments.Block
	.size	go..C133, 8

	.type	go..C134,@object
	.section	.data.go..C134,"aw",@progbits
	.p2align	3
go..C134:
	.quad	bool..d
	.size	go..C134, 8

	.type	go..C135,@object
	.section	.rodata.go..C135,"a",@progbits
	.p2align	3
go..C135:
	.quad	.Lconst.65
	.quad	3
	.size	go..C135, 16

	.type	type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	1408182440
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C136
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C137
	.quad	1
	.quad	1
	.quad	go..C138
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.103,@object
	.section	.rodata..Lconst.103,"a",@progbits
.Lconst.103:
	.asciz	"func(*\tcommand_line_arguments\tparser.Block) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.103, 90

	.type	go..C136,@object
	.section	.rodata.go..C136,"a",@progbits
	.p2align	3
go..C136:
	.quad	.Lconst.103
	.quad	89
	.size	go..C136, 16

	.type	go..C137,@object
	.section	.data.go..C137,"aw",@progbits
	.p2align	3
go..C137:
	.quad	type...1command_line_arguments.Block
	.size	go..C137, 8

	.type	go..C138,@object
	.section	.data.go..C138,"aw",@progbits
	.p2align	3
go..C138:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C138, 8

	.type	.Lconst.104,@object
	.section	.rodata..Lconst.104,"a",@progbits
.Lconst.104:
	.asciz	"push"
	.size	.Lconst.104, 5

	.type	go..C139,@object
	.section	.rodata.go..C139,"a",@progbits
	.p2align	3
go..C139:
	.quad	.Lconst.104
	.quad	4
	.size	go..C139, 16

	.type	go..C140,@object
	.section	.rodata.go..C140,"a",@progbits
	.p2align	3
go..C140:
	.quad	.Lconst.63
	.quad	22
	.size	go..C140, 16

	.type	type..func.8command_line_arguments.Node.9.8.9,@object
	.section	.rodata.type..func.8command_line_arguments.Node.9.8.9,"aG",@progbits,type..func.8command_line_arguments.Node.9.8.9,comdat
	.weak	type..func.8command_line_arguments.Node.9.8.9
	.p2align	4
type..func.8command_line_arguments.Node.9.8.9:
	.quad	8
	.quad	8
	.long	4287875848
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C141
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C142
	.quad	1
	.quad	1
	.quad	go..C143
	.quad	0
	.quad	0
	.size	type..func.8command_line_arguments.Node.9.8.9, 128

	.type	.Lconst.105,@object
	.section	.rodata..Lconst.105,"a",@progbits
.Lconst.105:
	.asciz	"func(\tcommand_line_arguments\tparser.Node)"
	.size	.Lconst.105, 42

	.type	go..C141,@object
	.section	.rodata.go..C141,"a",@progbits
	.p2align	3
go..C141:
	.quad	.Lconst.105
	.quad	41
	.size	go..C141, 16

	.type	go..C142,@object
	.section	.data.go..C142,"aw",@progbits
	.p2align	3
go..C142:
	.quad	command_line_arguments.Node..d
	.size	go..C142, 8

	.type	go..C143,@object
	.section	.bss.go..C143,"aw",@nobits
	.p2align	3
go..C143:
	.zero	8
	.size	go..C143, 8

	.type	type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9:
	.quad	8
	.quad	8
	.long	3526122792
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C144
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C145
	.quad	2
	.quad	2
	.quad	go..C146
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9, 128

	.type	.Lconst.106,@object
	.section	.rodata..Lconst.106,"a",@progbits
.Lconst.106:
	.asciz	"func(*\tcommand_line_arguments\tparser.Block, \tcommand_line_arguments\tparser.Node)"
	.size	.Lconst.106, 81

	.type	go..C144,@object
	.section	.rodata.go..C144,"a",@progbits
	.p2align	3
go..C144:
	.quad	.Lconst.106
	.quad	80
	.size	go..C144, 16

	.type	go..C145,@object
	.section	.data.go..C145,"aw",@progbits
	.p2align	3
go..C145:
	.quad	type...1command_line_arguments.Block
	.quad	command_line_arguments.Node..d
	.size	go..C145, 16

	.type	go..C146,@object
	.section	.bss.go..C146,"aw",@nobits
	.p2align	3
go..C146:
	.zero	8
	.size	go..C146, 8

	.type	.Lconst.107,@object
	.section	.rodata..Lconst.107,"a",@progbits
.Lconst.107:
	.asciz	"pushFront"
	.size	.Lconst.107, 10

	.type	go..C147,@object
	.section	.rodata.go..C147,"a",@progbits
	.p2align	3
go..C147:
	.quad	.Lconst.107
	.quad	9
	.size	go..C147, 16

	.type	go..C148,@object
	.section	.rodata.go..C148,"a",@progbits
	.p2align	3
go..C148:
	.quad	.Lconst.63
	.quad	22
	.size	go..C148, 16

	.type	go..C149,@object
	.section	.data.go..C149,"aw",@progbits
	.p2align	4
go..C149:
	.quad	go..C123
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.Block.9.8bool.9
	.quad	command_line_arguments.Block.CanInline
	.quad	go..C135
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Block.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Block.Pos..stub
	.quad	go..C139
	.quad	go..C140
	.quad	type..func.8command_line_arguments.Node.9.8.9
	.quad	type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9
	.quad	command_line_arguments.Block.push
	.quad	go..C147
	.quad	go..C148
	.quad	type..func.8command_line_arguments.Node.9.8.9
	.quad	type..func.8.1command_line_arguments.Block.3command_line_arguments.Node.9.8.9
	.quad	command_line_arguments.Block.pushFront
	.size	go..C149, 160

	.type	go..C150,@object
	.section	.rodata.go..C150,"a",@progbits
	.p2align	4
go..C150:
	.quad	0
	.quad	0
	.quad	go..C149
	.quad	4
	.quad	4
	.size	go..C150, 40

	.type	type...1.1command_line_arguments.Block,@object
	.section	.rodata.type...1.1command_line_arguments.Block,"aG",@progbits,type...1.1command_line_arguments.Block,comdat
	.weak	type...1.1command_line_arguments.Block
	.p2align	4
type...1.1command_line_arguments.Block:
	.quad	8
	.quad	8
	.long	1770152857
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C151
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Block
	.size	type...1.1command_line_arguments.Block, 80

	.type	.Lconst.108,@object
	.section	.rodata..Lconst.108,"a",@progbits
.Lconst.108:
	.asciz	"**\tcommand_line_arguments\tparser.Block"
	.size	.Lconst.108, 39

	.type	go..C151,@object
	.section	.rodata.go..C151,"a",@progbits
	.p2align	3
go..C151:
	.quad	.Lconst.108
	.quad	38
	.size	go..C151, 16

	.type	command_line_arguments.Block..d,@object
	.section	.rodata.command_line_arguments.Block..d,"a",@progbits
	.globl	command_line_arguments.Block..d
	.p2align	4
command_line_arguments.Block..d:
	.quad	64
	.quad	48
	.long	3479798371
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ib
	.quad	go..C152
	.quad	go..C156
	.quad	type...1command_line_arguments.Block
	.quad	go..C160
	.quad	2
	.quad	2
	.size	command_line_arguments.Block..d, 96

	.type	.Lconst.109,@object
	.section	.rodata..Lconst.109,"a",@progbits
.Lconst.109:
	.asciz	"\tcommand_line_arguments\tparser.Block"
	.size	.Lconst.109, 37

	.type	go..C152,@object
	.section	.rodata.go..C152,"a",@progbits
	.p2align	3
go..C152:
	.quad	.Lconst.109
	.quad	36
	.size	go..C152, 16

	.type	go..C153,@object
	.section	.rodata.go..C153,"a",@progbits
	.p2align	3
go..C153:
	.quad	.Lconst.96
	.quad	5
	.size	go..C153, 16

	.type	go..C154,@object
	.section	.rodata.go..C154,"a",@progbits
	.p2align	3
go..C154:
	.quad	.Lconst.63
	.quad	22
	.size	go..C154, 16

	.type	go..C155,@object
	.section	.bss.go..C155,"aw",@nobits
	.p2align	4
go..C155:
	.zero	40
	.size	go..C155, 40

	.type	go..C156,@object
	.section	.rodata.go..C156,"a",@progbits
	.p2align	4
go..C156:
	.quad	go..C153
	.quad	go..C154
	.quad	go..C155
	.quad	0
	.quad	0
	.size	go..C156, 40

	.type	go..C157,@object
	.section	.rodata.go..C157,"a",@progbits
	.p2align	3
go..C157:
	.quad	.Lconst.68
	.quad	14
	.size	go..C157, 16

	.type	.Lconst.110,@object
	.section	.rodata..Lconst.110,"a",@progbits
.Lconst.110:
	.asciz	"Children"
	.size	.Lconst.110, 9

	.type	go..C158,@object
	.section	.rodata.go..C158,"a",@progbits
	.p2align	3
go..C158:
	.quad	.Lconst.110
	.quad	8
	.size	go..C158, 16

	.type	type...6.7command_line_arguments.Node,@object
	.section	.rodata.type...6.7command_line_arguments.Node,"aG",@progbits,type...6.7command_line_arguments.Node,comdat
	.weak	type...6.7command_line_arguments.Node
	.p2align	4
type...6.7command_line_arguments.Node:
	.quad	24
	.quad	8
	.long	268213862
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C159
	.quad	0
	.quad	0
	.quad	command_line_arguments.Node..d
	.size	type...6.7command_line_arguments.Node, 80

	.type	.Lconst.111,@object
	.section	.rodata..Lconst.111,"a",@progbits
.Lconst.111:
	.asciz	"[]\tcommand_line_arguments\tparser.Node"
	.size	.Lconst.111, 38

	.type	go..C159,@object
	.section	.rodata.go..C159,"a",@progbits
	.p2align	3
go..C159:
	.quad	.Lconst.111
	.quad	37
	.size	go..C159, 16

	.type	go..C160,@object
	.section	.data.go..C160,"aw",@progbits
	.p2align	4
go..C160:
	.quad	go..C157
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C158
	.quad	0
	.quad	type...6.7command_line_arguments.Node
	.quad	0
	.quad	80
	.size	go..C160, 80

	.type	.Lconst.112,@object
	.section	.rodata..Lconst.112,"a",@progbits
.Lconst.112:
	.asciz	"Silent"
	.size	.Lconst.112, 7

	.type	go..C161,@object
	.section	.rodata.go..C161,"a",@progbits
	.p2align	3
go..C161:
	.quad	.Lconst.112
	.quad	6
	.size	go..C161, 16

	.type	go..C162,@object
	.section	.data.go..C162,"aw",@progbits
	.p2align	4
go..C162:
	.quad	go..C119
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C120
	.quad	0
	.quad	string..d
	.quad	0
	.quad	80
	.quad	go..C121
	.quad	0
	.quad	type...1command_line_arguments.Block
	.quad	0
	.quad	112
	.quad	go..C161
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	128
	.size	go..C162, 160

	.type	command_line_arguments.Text..d,@object
	.section	.rodata.command_line_arguments.Text..d,"a",@progbits
	.globl	command_line_arguments.Text..d
	.p2align	4
command_line_arguments.Text..d:
	.quad	64
	.quad	48
	.long	1613416449
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Text..hash..f
	.quad	command_line_arguments.command_line_arguments.Text..eq..f
	.quad	gcbits..ib
	.quad	go..C163
	.quad	go..C167
	.quad	type...1command_line_arguments.Text
	.quad	go..C179
	.quad	3
	.quad	3
	.size	command_line_arguments.Text..d, 96

	.type	command_line_arguments.command_line_arguments.Text..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Text..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Text..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Text..hash..f:
	.quad	command_line_arguments.command_line_arguments.Text..hash
	.size	command_line_arguments.command_line_arguments.Text..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Text..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Text..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Text..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Text..eq..f:
	.quad	command_line_arguments.command_line_arguments.Text..eq
	.size	command_line_arguments.command_line_arguments.Text..eq..f, 8

	.type	.Lconst.113,@object
	.section	.rodata..Lconst.113,"a",@progbits
.Lconst.113:
	.asciz	"\tcommand_line_arguments\tparser.Text"
	.size	.Lconst.113, 36

	.type	go..C163,@object
	.section	.rodata.go..C163,"a",@progbits
	.p2align	3
go..C163:
	.quad	.Lconst.113
	.quad	35
	.size	go..C163, 16

	.type	.Lconst.114,@object
	.section	.rodata..Lconst.114,"a",@progbits
.Lconst.114:
	.asciz	"Text"
	.size	.Lconst.114, 5

	.type	go..C164,@object
	.section	.rodata.go..C164,"a",@progbits
	.p2align	3
go..C164:
	.quad	.Lconst.114
	.quad	4
	.size	go..C164, 16

	.type	go..C165,@object
	.section	.rodata.go..C165,"a",@progbits
	.p2align	3
go..C165:
	.quad	.Lconst.63
	.quad	22
	.size	go..C165, 16

	.type	go..C166,@object
	.section	.bss.go..C166,"aw",@nobits
	.p2align	4
go..C166:
	.zero	40
	.size	go..C166, 40

	.type	go..C167,@object
	.section	.rodata.go..C167,"a",@progbits
	.p2align	4
go..C167:
	.quad	go..C164
	.quad	go..C165
	.quad	go..C166
	.quad	0
	.quad	0
	.size	go..C167, 40

	.type	type...1command_line_arguments.Text,@object
	.section	.rodata.type...1command_line_arguments.Text,"aG",@progbits,type...1command_line_arguments.Text,comdat
	.weak	type...1command_line_arguments.Text
	.p2align	4
type...1command_line_arguments.Text:
	.quad	8
	.quad	8
	.long	44859417
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C168
	.quad	go..C174
	.quad	type...1.1command_line_arguments.Text
	.quad	command_line_arguments.Text..d
	.size	type...1command_line_arguments.Text, 80

	.type	.Lconst.115,@object
	.section	.rodata..Lconst.115,"a",@progbits
.Lconst.115:
	.asciz	"*\tcommand_line_arguments\tparser.Text"
	.size	.Lconst.115, 37

	.type	go..C168,@object
	.section	.rodata.go..C168,"a",@progbits
	.p2align	3
go..C168:
	.quad	.Lconst.115
	.quad	36
	.size	go..C168, 16

	.type	go..C169,@object
	.section	.rodata.go..C169,"a",@progbits
	.p2align	3
go..C169:
	.quad	.Lconst.65
	.quad	3
	.size	go..C169, 16

	.type	type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	3598345384
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C170
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C171
	.quad	1
	.quad	1
	.quad	go..C172
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.116,@object
	.section	.rodata..Lconst.116,"a",@progbits
.Lconst.116:
	.asciz	"func(*\tcommand_line_arguments\tparser.Text) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.116, 89

	.type	go..C170,@object
	.section	.rodata.go..C170,"a",@progbits
	.p2align	3
go..C170:
	.quad	.Lconst.116
	.quad	88
	.size	go..C170, 16

	.type	go..C171,@object
	.section	.data.go..C171,"aw",@progbits
	.p2align	3
go..C171:
	.quad	type...1command_line_arguments.Text
	.size	go..C171, 8

	.type	go..C172,@object
	.section	.data.go..C172,"aw",@progbits
	.p2align	3
go..C172:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C172, 8

	.type	go..C173,@object
	.section	.data.go..C173,"aw",@progbits
	.p2align	4
go..C173:
	.quad	go..C169
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Text.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Text.Pos..stub
	.size	go..C173, 40

	.type	go..C174,@object
	.section	.rodata.go..C174,"a",@progbits
	.p2align	4
go..C174:
	.quad	0
	.quad	0
	.quad	go..C173
	.quad	1
	.quad	1
	.size	go..C174, 40

	.type	type...1.1command_line_arguments.Text,@object
	.section	.rodata.type...1.1command_line_arguments.Text,"aG",@progbits,type...1.1command_line_arguments.Text,comdat
	.weak	type...1.1command_line_arguments.Text
	.p2align	4
type...1.1command_line_arguments.Text:
	.quad	8
	.quad	8
	.long	717750681
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C175
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Text
	.size	type...1.1command_line_arguments.Text, 80

	.type	.Lconst.117,@object
	.section	.rodata..Lconst.117,"a",@progbits
.Lconst.117:
	.asciz	"**\tcommand_line_arguments\tparser.Text"
	.size	.Lconst.117, 38

	.type	go..C175,@object
	.section	.rodata.go..C175,"a",@progbits
	.p2align	3
go..C175:
	.quad	.Lconst.117
	.quad	37
	.size	go..C175, 16

	.type	go..C176,@object
	.section	.rodata.go..C176,"a",@progbits
	.p2align	3
go..C176:
	.quad	.Lconst.68
	.quad	14
	.size	go..C176, 16

	.type	go..C177,@object
	.section	.rodata.go..C177,"a",@progbits
	.p2align	3
go..C177:
	.quad	.Lconst.85
	.quad	5
	.size	go..C177, 16

	.type	.Lconst.118,@object
	.section	.rodata..Lconst.118,"a",@progbits
.Lconst.118:
	.asciz	"Raw"
	.size	.Lconst.118, 4

	.type	go..C178,@object
	.section	.rodata.go..C178,"a",@progbits
	.p2align	3
go..C178:
	.quad	.Lconst.118
	.quad	3
	.size	go..C178, 16

	.type	go..C179,@object
	.section	.data.go..C179,"aw",@progbits
	.p2align	4
go..C179:
	.quad	go..C176
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C177
	.quad	0
	.quad	string..d
	.quad	0
	.quad	80
	.quad	go..C178
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	112
	.size	go..C179, 120

	.type	type...61x.7command_line_arguments.Node,@object
	.section	.rodata.type...61x.7command_line_arguments.Node,"aG",@progbits,type...61x.7command_line_arguments.Node,comdat
	.weak	type...61x.7command_line_arguments.Node
	.p2align	4
type...61x.7command_line_arguments.Node:
	.quad	16
	.quad	16
	.long	536427711
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..da
	.quad	go..C180
	.quad	0
	.quad	0
	.quad	command_line_arguments.Node..d
	.quad	type...6.7command_line_arguments.Node
	.quad	1
	.size	type...61x.7command_line_arguments.Node, 96

	.type	.Lconst.119,@object
	.section	.rodata..Lconst.119,"a",@progbits
.Lconst.119:
	.asciz	"[1]\tcommand_line_arguments\tparser.Node"
	.size	.Lconst.119, 39

	.type	go..C180,@object
	.section	.rodata.go..C180,"a",@progbits
	.p2align	3
go..C180:
	.quad	.Lconst.119
	.quad	38
	.size	go..C180, 16

	.type	command_line_arguments.NamedBlock..d,@object
	.section	.rodata.command_line_arguments.NamedBlock..d,"a",@progbits
	.globl	command_line_arguments.NamedBlock..d
	.p2align	4
command_line_arguments.NamedBlock..d:
	.quad	88
	.quad	72
	.long	2934323406
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ijaa
	.quad	go..C181
	.quad	go..C185
	.quad	type...1command_line_arguments.NamedBlock
	.quad	go..C208
	.quad	3
	.quad	3
	.size	command_line_arguments.NamedBlock..d, 96

	.type	gcbits..ijaa,@object
	.section	.rodata.gcbits..ijaa,"aG",@progbits,gcbits..ijaa,comdat
	.weak	gcbits..ijaa
gcbits..ijaa:
	.ascii	"(\001"
	.size	gcbits..ijaa, 2

	.type	.Lconst.122,@object
	.section	.rodata..Lconst.122,"a",@progbits
.Lconst.122:
	.asciz	"\tcommand_line_arguments\tparser.NamedBlock"
	.size	.Lconst.122, 42

	.type	go..C181,@object
	.section	.rodata.go..C181,"a",@progbits
	.p2align	3
go..C181:
	.quad	.Lconst.122
	.quad	41
	.size	go..C181, 16

	.type	.Lconst.123,@object
	.section	.rodata..Lconst.123,"a",@progbits
.Lconst.123:
	.asciz	"NamedBlock"
	.size	.Lconst.123, 11

	.type	go..C182,@object
	.section	.rodata.go..C182,"a",@progbits
	.p2align	3
go..C182:
	.quad	.Lconst.123
	.quad	10
	.size	go..C182, 16

	.type	go..C183,@object
	.section	.rodata.go..C183,"a",@progbits
	.p2align	3
go..C183:
	.quad	.Lconst.63
	.quad	22
	.size	go..C183, 16

	.type	go..C184,@object
	.section	.bss.go..C184,"aw",@nobits
	.p2align	4
go..C184:
	.zero	40
	.size	go..C184, 40

	.type	go..C185,@object
	.section	.rodata.go..C185,"a",@progbits
	.p2align	4
go..C185:
	.quad	go..C182
	.quad	go..C183
	.quad	go..C184
	.quad	0
	.quad	0
	.size	go..C185, 40

	.type	type...1command_line_arguments.NamedBlock,@object
	.section	.rodata.type...1command_line_arguments.NamedBlock,"aG",@progbits,type...1command_line_arguments.NamedBlock,comdat
	.weak	type...1command_line_arguments.NamedBlock
	.p2align	4
type...1command_line_arguments.NamedBlock:
	.quad	8
	.quad	8
	.long	3999501545
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C186
	.quad	go..C203
	.quad	type...1.1command_line_arguments.NamedBlock
	.quad	command_line_arguments.NamedBlock..d
	.size	type...1command_line_arguments.NamedBlock, 80

	.type	.Lconst.124,@object
	.section	.rodata..Lconst.124,"a",@progbits
.Lconst.124:
	.asciz	"*\tcommand_line_arguments\tparser.NamedBlock"
	.size	.Lconst.124, 43

	.type	go..C186,@object
	.section	.rodata.go..C186,"a",@progbits
	.p2align	3
go..C186:
	.quad	.Lconst.124
	.quad	42
	.size	go..C186, 16

	.type	go..C187,@object
	.section	.rodata.go..C187,"a",@progbits
	.p2align	3
go..C187:
	.quad	.Lconst.98
	.quad	9
	.size	go..C187, 16

	.type	type..func.8.1command_line_arguments.NamedBlock.9.8bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.NamedBlock.9.8bool.9,"aG",@progbits,type..func.8.1command_line_arguments.NamedBlock.9.8bool.9,comdat
	.weak	type..func.8.1command_line_arguments.NamedBlock.9.8bool.9
	.p2align	4
type..func.8.1command_line_arguments.NamedBlock.9.8bool.9:
	.quad	8
	.quad	8
	.long	3068133736
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C188
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C189
	.quad	1
	.quad	1
	.quad	go..C190
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.NamedBlock.9.8bool.9, 128

	.type	.Lconst.125,@object
	.section	.rodata..Lconst.125,"a",@progbits
.Lconst.125:
	.asciz	"func(*\tcommand_line_arguments\tparser.NamedBlock) bool"
	.size	.Lconst.125, 54

	.type	go..C188,@object
	.section	.rodata.go..C188,"a",@progbits
	.p2align	3
go..C188:
	.quad	.Lconst.125
	.quad	53
	.size	go..C188, 16

	.type	go..C189,@object
	.section	.data.go..C189,"aw",@progbits
	.p2align	3
go..C189:
	.quad	type...1command_line_arguments.NamedBlock
	.size	go..C189, 8

	.type	go..C190,@object
	.section	.data.go..C190,"aw",@progbits
	.p2align	3
go..C190:
	.quad	bool..d
	.size	go..C190, 8

	.type	go..C191,@object
	.section	.rodata.go..C191,"a",@progbits
	.p2align	3
go..C191:
	.quad	.Lconst.65
	.quad	3
	.size	go..C191, 16

	.type	type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	1297874600
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C192
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C193
	.quad	1
	.quad	1
	.quad	go..C194
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.126,@object
	.section	.rodata..Lconst.126,"a",@progbits
.Lconst.126:
	.asciz	"func(*\tcommand_line_arguments\tparser.NamedBlock) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.126, 95

	.type	go..C192,@object
	.section	.rodata.go..C192,"a",@progbits
	.p2align	3
go..C192:
	.quad	.Lconst.126
	.quad	94
	.size	go..C192, 16

	.type	go..C193,@object
	.section	.data.go..C193,"aw",@progbits
	.p2align	3
go..C193:
	.quad	type...1command_line_arguments.NamedBlock
	.size	go..C193, 8

	.type	go..C194,@object
	.section	.data.go..C194,"aw",@progbits
	.p2align	3
go..C194:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C194, 8

	.type	go..C195,@object
	.section	.rodata.go..C195,"a",@progbits
	.p2align	3
go..C195:
	.quad	.Lconst.104
	.quad	4
	.size	go..C195, 16

	.type	go..C196,@object
	.section	.rodata.go..C196,"a",@progbits
	.p2align	3
go..C196:
	.quad	.Lconst.63
	.quad	22
	.size	go..C196, 16

	.type	type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9:
	.quad	8
	.quad	8
	.long	3415814952
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C197
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C198
	.quad	2
	.quad	2
	.quad	go..C199
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9, 128

	.type	.Lconst.127,@object
	.section	.rodata..Lconst.127,"a",@progbits
.Lconst.127:
	.asciz	"func(*\tcommand_line_arguments\tparser.NamedBlock, \tcommand_line_arguments\tparser.Node)"
	.size	.Lconst.127, 86

	.type	go..C197,@object
	.section	.rodata.go..C197,"a",@progbits
	.p2align	3
go..C197:
	.quad	.Lconst.127
	.quad	85
	.size	go..C197, 16

	.type	go..C198,@object
	.section	.data.go..C198,"aw",@progbits
	.p2align	3
go..C198:
	.quad	type...1command_line_arguments.NamedBlock
	.quad	command_line_arguments.Node..d
	.size	go..C198, 16

	.type	go..C199,@object
	.section	.bss.go..C199,"aw",@nobits
	.p2align	3
go..C199:
	.zero	8
	.size	go..C199, 8

	.type	go..C200,@object
	.section	.rodata.go..C200,"a",@progbits
	.p2align	3
go..C200:
	.quad	.Lconst.107
	.quad	9
	.size	go..C200, 16

	.type	go..C201,@object
	.section	.rodata.go..C201,"a",@progbits
	.p2align	3
go..C201:
	.quad	.Lconst.63
	.quad	22
	.size	go..C201, 16

	.type	go..C202,@object
	.section	.data.go..C202,"aw",@progbits
	.p2align	4
go..C202:
	.quad	go..C187
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.NamedBlock.9.8bool.9
	.quad	command_line_arguments.NamedBlock.CanInline..stub
	.quad	go..C191
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.NamedBlock.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.NamedBlock.Pos..stub
	.quad	go..C195
	.quad	go..C196
	.quad	type..func.8command_line_arguments.Node.9.8.9
	.quad	type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9
	.quad	command_line_arguments.NamedBlock.push..stub
	.quad	go..C200
	.quad	go..C201
	.quad	type..func.8command_line_arguments.Node.9.8.9
	.quad	type..func.8.1command_line_arguments.NamedBlock.3command_line_arguments.Node.9.8.9
	.quad	command_line_arguments.NamedBlock.pushFront..stub
	.size	go..C202, 160

	.type	go..C203,@object
	.section	.rodata.go..C203,"a",@progbits
	.p2align	4
go..C203:
	.quad	0
	.quad	0
	.quad	go..C202
	.quad	4
	.quad	4
	.size	go..C203, 40

	.type	type...1.1command_line_arguments.NamedBlock,@object
	.section	.rodata.type...1.1command_line_arguments.NamedBlock,"aG",@progbits,type...1.1command_line_arguments.NamedBlock,comdat
	.weak	type...1.1command_line_arguments.NamedBlock
	.p2align	4
type...1.1command_line_arguments.NamedBlock:
	.quad	8
	.quad	8
	.long	3862482585
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C204
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.NamedBlock
	.size	type...1.1command_line_arguments.NamedBlock, 80

	.type	.Lconst.128,@object
	.section	.rodata..Lconst.128,"a",@progbits
.Lconst.128:
	.asciz	"**\tcommand_line_arguments\tparser.NamedBlock"
	.size	.Lconst.128, 44

	.type	go..C204,@object
	.section	.rodata.go..C204,"a",@progbits
	.p2align	3
go..C204:
	.quad	.Lconst.128
	.quad	43
	.size	go..C204, 16

	.type	go..C205,@object
	.section	.rodata.go..C205,"a",@progbits
	.p2align	3
go..C205:
	.quad	.Lconst.96
	.quad	5
	.size	go..C205, 16

	.type	.Lconst.129,@object
	.section	.rodata..Lconst.129,"a",@progbits
.Lconst.129:
	.asciz	"Name"
	.size	.Lconst.129, 5

	.type	go..C206,@object
	.section	.rodata.go..C206,"a",@progbits
	.p2align	3
go..C206:
	.quad	.Lconst.129
	.quad	4
	.size	go..C206, 16

	.type	.Lconst.130,@object
	.section	.rodata..Lconst.130,"a",@progbits
.Lconst.130:
	.asciz	"Modifier"
	.size	.Lconst.130, 9

	.type	go..C208,@object
	.section	.data.go..C208,"aw",@progbits
	.p2align	4
go..C208:
	.quad	go..C205
	.quad	0
	.quad	command_line_arguments.Block..d
	.quad	0
	.quad	1
	.quad	go..C206
	.quad	0
	.quad	string..d
	.quad	0
	.quad	128
	.quad	.Lconst.350
	.quad	0
	.quad	int..d
	.quad	0
	.quad	160
	.size	go..C208, 120

	.type	command_line_arguments.Attribute..d,@object
	.section	.rodata.command_line_arguments.Attribute..d,"a",@progbits
	.globl	command_line_arguments.Attribute..d
	.p2align	4
command_line_arguments.Attribute..d:
	.quad	96
	.quad	88
	.long	2784661964
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Attribute..hash..f
	.quad	command_line_arguments.command_line_arguments.Attribute..eq..f
	.quad	gcbits..ifba
	.quad	go..C209
	.quad	go..C213
	.quad	type...1command_line_arguments.Attribute
	.quad	go..C227
	.quad	5
	.quad	5
	.size	command_line_arguments.Attribute..d, 96

	.type	command_line_arguments.command_line_arguments.Attribute..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Attribute..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Attribute..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Attribute..hash..f:
	.quad	command_line_arguments.command_line_arguments.Attribute..hash
	.size	command_line_arguments.command_line_arguments.Attribute..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Attribute..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Attribute..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Attribute..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Attribute..eq..f:
	.quad	command_line_arguments.command_line_arguments.Attribute..eq
	.size	command_line_arguments.command_line_arguments.Attribute..eq..f, 8

	.type	gcbits..ifba,@object
	.section	.rodata.gcbits..ifba,"aG",@progbits,gcbits..ifba,comdat
	.weak	gcbits..ifba
gcbits..ifba:
	.ascii	"\250\004"
	.size	gcbits..ifba, 2

	.type	.Lconst.131,@object
	.section	.rodata..Lconst.131,"a",@progbits
.Lconst.131:
	.asciz	"\tcommand_line_arguments\tparser.Attribute"
	.size	.Lconst.131, 41

	.type	go..C209,@object
	.section	.rodata.go..C209,"a",@progbits
	.p2align	3
go..C209:
	.quad	.Lconst.131
	.quad	40
	.size	go..C209, 16

	.type	.Lconst.132,@object
	.section	.rodata..Lconst.132,"a",@progbits
.Lconst.132:
	.asciz	"Attribute"
	.size	.Lconst.132, 10

	.type	go..C210,@object
	.section	.rodata.go..C210,"a",@progbits
	.p2align	3
go..C210:
	.quad	.Lconst.132
	.quad	9
	.size	go..C210, 16

	.type	go..C211,@object
	.section	.rodata.go..C211,"a",@progbits
	.p2align	3
go..C211:
	.quad	.Lconst.63
	.quad	22
	.size	go..C211, 16

	.type	go..C212,@object
	.section	.bss.go..C212,"aw",@nobits
	.p2align	4
go..C212:
	.zero	40
	.size	go..C212, 40

	.type	go..C213,@object
	.section	.rodata.go..C213,"a",@progbits
	.p2align	4
go..C213:
	.quad	go..C210
	.quad	go..C211
	.quad	go..C212
	.quad	0
	.quad	0
	.size	go..C213, 40

	.type	type...1command_line_arguments.Attribute,@object
	.section	.rodata.type...1command_line_arguments.Attribute,"aG",@progbits,type...1command_line_arguments.Attribute,comdat
	.weak	type...1command_line_arguments.Attribute
	.p2align	4
type...1command_line_arguments.Attribute:
	.quad	8
	.quad	8
	.long	1604918473
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C214
	.quad	go..C220
	.quad	type...1.1command_line_arguments.Attribute
	.quad	command_line_arguments.Attribute..d
	.size	type...1command_line_arguments.Attribute, 80

	.type	.Lconst.133,@object
	.section	.rodata..Lconst.133,"a",@progbits
.Lconst.133:
	.asciz	"*\tcommand_line_arguments\tparser.Attribute"
	.size	.Lconst.133, 42

	.type	go..C214,@object
	.section	.rodata.go..C214,"a",@progbits
	.p2align	3
go..C214:
	.quad	.Lconst.133
	.quad	41
	.size	go..C214, 16

	.type	go..C215,@object
	.section	.rodata.go..C215,"a",@progbits
	.p2align	3
go..C215:
	.quad	.Lconst.65
	.quad	3
	.size	go..C215, 16

	.type	type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	1980627624
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C216
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C217
	.quad	1
	.quad	1
	.quad	go..C218
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.134,@object
	.section	.rodata..Lconst.134,"a",@progbits
.Lconst.134:
	.asciz	"func(*\tcommand_line_arguments\tparser.Attribute) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.134, 94

	.type	go..C216,@object
	.section	.rodata.go..C216,"a",@progbits
	.p2align	3
go..C216:
	.quad	.Lconst.134
	.quad	93
	.size	go..C216, 16

	.type	go..C217,@object
	.section	.data.go..C217,"aw",@progbits
	.p2align	3
go..C217:
	.quad	type...1command_line_arguments.Attribute
	.size	go..C217, 8

	.type	go..C218,@object
	.section	.data.go..C218,"aw",@progbits
	.p2align	3
go..C218:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C218, 8

	.type	go..C219,@object
	.section	.data.go..C219,"aw",@progbits
	.p2align	4
go..C219:
	.quad	go..C215
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Attribute.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Attribute.Pos..stub
	.size	go..C219, 40

	.type	go..C220,@object
	.section	.rodata.go..C220,"a",@progbits
	.p2align	4
go..C220:
	.quad	0
	.quad	0
	.quad	go..C219
	.quad	1
	.quad	1
	.size	go..C220, 40

	.type	type...1.1command_line_arguments.Attribute,@object
	.section	.rodata.type...1.1command_line_arguments.Attribute,"aG",@progbits,type...1.1command_line_arguments.Attribute,comdat
	.weak	type...1.1command_line_arguments.Attribute
	.p2align	4
type...1.1command_line_arguments.Attribute:
	.quad	8
	.quad	8
	.long	4203859097
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C221
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Attribute
	.size	type...1.1command_line_arguments.Attribute, 80

	.type	.Lconst.135,@object
	.section	.rodata..Lconst.135,"a",@progbits
.Lconst.135:
	.asciz	"**\tcommand_line_arguments\tparser.Attribute"
	.size	.Lconst.135, 43

	.type	go..C221,@object
	.section	.rodata.go..C221,"a",@progbits
	.p2align	3
go..C221:
	.quad	.Lconst.135
	.quad	42
	.size	go..C221, 16

	.type	go..C222,@object
	.section	.rodata.go..C222,"a",@progbits
	.p2align	3
go..C222:
	.quad	.Lconst.68
	.quad	14
	.size	go..C222, 16

	.type	go..C223,@object
	.section	.rodata.go..C223,"a",@progbits
	.p2align	3
go..C223:
	.quad	.Lconst.129
	.quad	4
	.size	go..C223, 16

	.type	go..C224,@object
	.section	.rodata.go..C224,"a",@progbits
	.p2align	3
go..C224:
	.quad	.Lconst.85
	.quad	5
	.size	go..C224, 16

	.type	.Lconst.136,@object
	.section	.rodata..Lconst.136,"a",@progbits
.Lconst.136:
	.asciz	"IsRaw"
	.size	.Lconst.136, 6

	.type	go..C225,@object
	.section	.rodata.go..C225,"a",@progbits
	.p2align	3
go..C225:
	.quad	.Lconst.136
	.quad	5
	.size	go..C225, 16

	.type	.Lconst.137,@object
	.section	.rodata..Lconst.137,"a",@progbits
.Lconst.137:
	.asciz	"Condition"
	.size	.Lconst.137, 10

	.type	go..C227,@object
	.section	.data.go..C227,"aw",@progbits
	.p2align	4
go..C227:
	.quad	go..C222
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C223
	.quad	0
	.quad	string..d
	.quad	0
	.quad	80
	.quad	go..C224
	.quad	0
	.quad	string..d
	.quad	0
	.quad	112
	.quad	go..C225
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	144
	.quad	.Lconst.331
	.quad	0
	.quad	string..d
	.quad	0
	.quad	160
	.size	go..C227, 200

	.type	command_line_arguments.Tag..d,@object
	.section	.rodata.command_line_arguments.Tag..d,"a",@progbits
	.globl	command_line_arguments.Tag..d
	.p2align	4
command_line_arguments.Tag..d:
	.quad	96
	.quad	80
	.long	4286163564
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..itaa
	.quad	go..C228
	.quad	go..C232
	.quad	type...1command_line_arguments.Tag
	.quad	go..C252
	.quad	5
	.quad	5
	.size	command_line_arguments.Tag..d, 96

	.type	gcbits..itaa,@object
	.section	.rodata.gcbits..itaa,"aG",@progbits,gcbits..itaa,comdat
	.weak	gcbits..itaa
gcbits..itaa:
	.ascii	"h\002"
	.size	gcbits..itaa, 2

	.type	.Lconst.138,@object
	.section	.rodata..Lconst.138,"a",@progbits
.Lconst.138:
	.asciz	"\tcommand_line_arguments\tparser.Tag"
	.size	.Lconst.138, 35

	.type	go..C228,@object
	.section	.rodata.go..C228,"a",@progbits
	.p2align	3
go..C228:
	.quad	.Lconst.138
	.quad	34
	.size	go..C228, 16

	.type	.Lconst.139,@object
	.section	.rodata..Lconst.139,"a",@progbits
.Lconst.139:
	.asciz	"Tag"
	.size	.Lconst.139, 4

	.type	go..C229,@object
	.section	.rodata.go..C229,"a",@progbits
	.p2align	3
go..C229:
	.quad	.Lconst.139
	.quad	3
	.size	go..C229, 16

	.type	go..C230,@object
	.section	.rodata.go..C230,"a",@progbits
	.p2align	3
go..C230:
	.quad	.Lconst.63
	.quad	22
	.size	go..C230, 16

	.type	go..C231,@object
	.section	.bss.go..C231,"aw",@nobits
	.p2align	4
go..C231:
	.zero	40
	.size	go..C231, 40

	.type	go..C232,@object
	.section	.rodata.go..C232,"a",@progbits
	.p2align	4
go..C232:
	.quad	go..C229
	.quad	go..C230
	.quad	go..C231
	.quad	0
	.quad	0
	.size	go..C232, 40

	.type	type...1command_line_arguments.Tag,@object
	.section	.rodata.type...1command_line_arguments.Tag,"aG",@progbits,type...1command_line_arguments.Tag,comdat
	.weak	type...1command_line_arguments.Tag
	.p2align	4
type...1command_line_arguments.Tag:
	.quad	8
	.quad	8
	.long	4154107593
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C233
	.quad	go..C244
	.quad	type...1.1command_line_arguments.Tag
	.quad	command_line_arguments.Tag..d
	.size	type...1command_line_arguments.Tag, 80

	.type	.Lconst.140,@object
	.section	.rodata..Lconst.140,"a",@progbits
.Lconst.140:
	.asciz	"*\tcommand_line_arguments\tparser.Tag"
	.size	.Lconst.140, 36

	.type	go..C233,@object
	.section	.rodata.go..C233,"a",@progbits
	.p2align	3
go..C233:
	.quad	.Lconst.140
	.quad	35
	.size	go..C233, 16

	.type	.Lconst.141,@object
	.section	.rodata..Lconst.141,"a",@progbits
.Lconst.141:
	.asciz	"IsRawText"
	.size	.Lconst.141, 10

	.type	go..C234,@object
	.section	.rodata.go..C234,"a",@progbits
	.p2align	3
go..C234:
	.quad	.Lconst.141
	.quad	9
	.size	go..C234, 16

	.type	type..func.8.1command_line_arguments.Tag.9.8bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Tag.9.8bool.9,"aG",@progbits,type..func.8.1command_line_arguments.Tag.9.8bool.9,comdat
	.weak	type..func.8.1command_line_arguments.Tag.9.8bool.9
	.p2align	4
type..func.8.1command_line_arguments.Tag.9.8bool.9:
	.quad	8
	.quad	8
	.long	3720559976
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C235
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C236
	.quad	1
	.quad	1
	.quad	go..C237
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Tag.9.8bool.9, 128

	.type	.Lconst.142,@object
	.section	.rodata..Lconst.142,"a",@progbits
.Lconst.142:
	.asciz	"func(*\tcommand_line_arguments\tparser.Tag) bool"
	.size	.Lconst.142, 47

	.type	go..C235,@object
	.section	.rodata.go..C235,"a",@progbits
	.p2align	3
go..C235:
	.quad	.Lconst.142
	.quad	46
	.size	go..C235, 16

	.type	go..C236,@object
	.section	.data.go..C236,"aw",@progbits
	.p2align	3
go..C236:
	.quad	type...1command_line_arguments.Tag
	.size	go..C236, 8

	.type	go..C237,@object
	.section	.data.go..C237,"aw",@progbits
	.p2align	3
go..C237:
	.quad	bool..d
	.size	go..C237, 8

	.type	.Lconst.143,@object
	.section	.rodata..Lconst.143,"a",@progbits
.Lconst.143:
	.asciz	"IsSelfClosing"
	.size	.Lconst.143, 14

	.type	go..C238,@object
	.section	.rodata.go..C238,"a",@progbits
	.p2align	3
go..C238:
	.quad	.Lconst.143
	.quad	13
	.size	go..C238, 16

	.type	go..C239,@object
	.section	.rodata.go..C239,"a",@progbits
	.p2align	3
go..C239:
	.quad	.Lconst.65
	.quad	3
	.size	go..C239, 16

	.type	type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	1950300840
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C240
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C241
	.quad	1
	.quad	1
	.quad	go..C242
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.144,@object
	.section	.rodata..Lconst.144,"a",@progbits
.Lconst.144:
	.asciz	"func(*\tcommand_line_arguments\tparser.Tag) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.144, 88

	.type	go..C240,@object
	.section	.rodata.go..C240,"a",@progbits
	.p2align	3
go..C240:
	.quad	.Lconst.144
	.quad	87
	.size	go..C240, 16

	.type	go..C241,@object
	.section	.data.go..C241,"aw",@progbits
	.p2align	3
go..C241:
	.quad	type...1command_line_arguments.Tag
	.size	go..C241, 8

	.type	go..C242,@object
	.section	.data.go..C242,"aw",@progbits
	.p2align	3
go..C242:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C242, 8

	.type	go..C243,@object
	.section	.data.go..C243,"aw",@progbits
	.p2align	4
go..C243:
	.quad	go..C234
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.Tag.9.8bool.9
	.quad	command_line_arguments.Tag.IsRawText
	.quad	go..C238
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.Tag.9.8bool.9
	.quad	command_line_arguments.Tag.IsSelfClosing
	.quad	go..C239
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Tag.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Tag.Pos..stub
	.size	go..C243, 120

	.type	go..C244,@object
	.section	.rodata.go..C244,"a",@progbits
	.p2align	4
go..C244:
	.quad	0
	.quad	0
	.quad	go..C243
	.quad	3
	.quad	3
	.size	go..C244, 40

	.type	type...1.1command_line_arguments.Tag,@object
	.section	.rodata.type...1.1command_line_arguments.Tag,"aG",@progbits,type...1.1command_line_arguments.Tag,comdat
	.weak	type...1.1command_line_arguments.Tag
	.p2align	4
type...1.1command_line_arguments.Tag:
	.quad	8
	.quad	8
	.long	2041212057
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C245
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Tag
	.size	type...1.1command_line_arguments.Tag, 80

	.type	.Lconst.145,@object
	.section	.rodata..Lconst.145,"a",@progbits
.Lconst.145:
	.asciz	"**\tcommand_line_arguments\tparser.Tag"
	.size	.Lconst.145, 37

	.type	go..C245,@object
	.section	.rodata.go..C245,"a",@progbits
	.p2align	3
go..C245:
	.quad	.Lconst.145
	.quad	36
	.size	go..C245, 16

	.type	go..C246,@object
	.section	.rodata.go..C246,"a",@progbits
	.p2align	3
go..C246:
	.quad	.Lconst.68
	.quad	14
	.size	go..C246, 16

	.type	go..C247,@object
	.section	.rodata.go..C247,"a",@progbits
	.p2align	3
go..C247:
	.quad	.Lconst.96
	.quad	5
	.size	go..C247, 16

	.type	go..C248,@object
	.section	.rodata.go..C248,"a",@progbits
	.p2align	3
go..C248:
	.quad	.Lconst.129
	.quad	4
	.size	go..C248, 16

	.type	.Lconst.146,@object
	.section	.rodata..Lconst.146,"a",@progbits
.Lconst.146:
	.asciz	"IsInterpolated"
	.size	.Lconst.146, 15

	.type	go..C249,@object
	.section	.rodata.go..C249,"a",@progbits
	.p2align	3
go..C249:
	.quad	.Lconst.146
	.quad	14
	.size	go..C249, 16

	.type	.Lconst.147,@object
	.section	.rodata..Lconst.147,"a",@progbits
.Lconst.147:
	.asciz	"Attributes"
	.size	.Lconst.147, 11

	.type	go..C250,@object
	.section	.rodata.go..C250,"a",@progbits
	.p2align	3
go..C250:
	.quad	.Lconst.147
	.quad	10
	.size	go..C250, 16

	.type	type...6.7command_line_arguments.Attribute,@object
	.section	.rodata.type...6.7command_line_arguments.Attribute,"aG",@progbits,type...6.7command_line_arguments.Attribute,comdat
	.weak	type...6.7command_line_arguments.Attribute
	.p2align	4
type...6.7command_line_arguments.Attribute:
	.quad	24
	.quad	8
	.long	2784661978
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C251
	.quad	0
	.quad	0
	.quad	command_line_arguments.Attribute..d
	.size	type...6.7command_line_arguments.Attribute, 80

	.type	.Lconst.148,@object
	.section	.rodata..Lconst.148,"a",@progbits
.Lconst.148:
	.asciz	"[]\tcommand_line_arguments\tparser.Attribute"
	.size	.Lconst.148, 43

	.type	go..C251,@object
	.section	.rodata.go..C251,"a",@progbits
	.p2align	3
go..C251:
	.quad	.Lconst.148
	.quad	42
	.size	go..C251, 16

	.type	go..C252,@object
	.section	.data.go..C252,"aw",@progbits
	.p2align	4
go..C252:
	.quad	go..C246
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C247
	.quad	0
	.quad	type...1command_line_arguments.Block
	.quad	0
	.quad	80
	.quad	go..C248
	.quad	0
	.quad	string..d
	.quad	0
	.quad	96
	.quad	go..C249
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	128
	.quad	go..C250
	.quad	0
	.quad	type...6.7command_line_arguments.Attribute
	.quad	0
	.quad	144
	.size	go..C252, 200

	.type	.Lconst.149,@object
	.section	.rodata..Lconst.149,"a",@progbits
.Lconst.149:
	.asciz	"style"
	.size	.Lconst.149, 6

	.type	.Lconst.151,@object
	.section	.rodata..Lconst.151,"a",@progbits
.Lconst.151:
	.asciz	"script"
	.size	.Lconst.151, 7

	.type	command_line_arguments.Condition..d,@object
	.section	.rodata.command_line_arguments.Condition..d,"a",@progbits
	.globl	command_line_arguments.Condition..d
	.p2align	4
command_line_arguments.Condition..d:
	.quad	72
	.quad	64
	.long	3159788263
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Condition..hash..f
	.quad	command_line_arguments.command_line_arguments.Condition..eq..f
	.quad	gcbits..ih
	.quad	go..C253
	.quad	go..C257
	.quad	type...1command_line_arguments.Condition
	.quad	go..C270
	.quad	4
	.quad	4
	.size	command_line_arguments.Condition..d, 96

	.type	command_line_arguments.command_line_arguments.Condition..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Condition..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Condition..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Condition..hash..f:
	.quad	command_line_arguments.command_line_arguments.Condition..hash
	.size	command_line_arguments.command_line_arguments.Condition..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Condition..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Condition..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Condition..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Condition..eq..f:
	.quad	command_line_arguments.command_line_arguments.Condition..eq
	.size	command_line_arguments.command_line_arguments.Condition..eq..f, 8

	.type	gcbits..ih,@object
	.section	.rodata.gcbits..ih,"aG",@progbits,gcbits..ih,comdat
	.weak	gcbits..ih
gcbits..ih:
	.byte	232
	.size	gcbits..ih, 1

	.type	.Lconst.153,@object
	.section	.rodata..Lconst.153,"a",@progbits
.Lconst.153:
	.asciz	"\tcommand_line_arguments\tparser.Condition"
	.size	.Lconst.153, 41

	.type	go..C253,@object
	.section	.rodata.go..C253,"a",@progbits
	.p2align	3
go..C253:
	.quad	.Lconst.153
	.quad	40
	.size	go..C253, 16

	.type	go..C254,@object
	.section	.rodata.go..C254,"a",@progbits
	.p2align	3
go..C254:
	.quad	.Lconst.137
	.quad	9
	.size	go..C254, 16

	.type	go..C255,@object
	.section	.rodata.go..C255,"a",@progbits
	.p2align	3
go..C255:
	.quad	.Lconst.63
	.quad	22
	.size	go..C255, 16

	.type	go..C256,@object
	.section	.bss.go..C256,"aw",@nobits
	.p2align	4
go..C256:
	.zero	40
	.size	go..C256, 40

	.type	go..C257,@object
	.section	.rodata.go..C257,"a",@progbits
	.p2align	4
go..C257:
	.quad	go..C254
	.quad	go..C255
	.quad	go..C256
	.quad	0
	.quad	0
	.size	go..C257, 40

	.type	type...1command_line_arguments.Condition,@object
	.section	.rodata.type...1command_line_arguments.Condition,"aG",@progbits,type...1command_line_arguments.Condition,comdat
	.weak	type...1command_line_arguments.Condition
	.p2align	4
type...1command_line_arguments.Condition:
	.quad	8
	.quad	8
	.long	3311971961
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C258
	.quad	go..C264
	.quad	type...1.1command_line_arguments.Condition
	.quad	command_line_arguments.Condition..d
	.size	type...1command_line_arguments.Condition, 80

	.type	.Lconst.154,@object
	.section	.rodata..Lconst.154,"a",@progbits
.Lconst.154:
	.asciz	"*\tcommand_line_arguments\tparser.Condition"
	.size	.Lconst.154, 42

	.type	go..C258,@object
	.section	.rodata.go..C258,"a",@progbits
	.p2align	3
go..C258:
	.quad	.Lconst.154
	.quad	41
	.size	go..C258, 16

	.type	go..C259,@object
	.section	.rodata.go..C259,"a",@progbits
	.p2align	3
go..C259:
	.quad	.Lconst.65
	.quad	3
	.size	go..C259, 16

	.type	type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	771764392
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C260
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C261
	.quad	1
	.quad	1
	.quad	go..C262
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.155,@object
	.section	.rodata..Lconst.155,"a",@progbits
.Lconst.155:
	.asciz	"func(*\tcommand_line_arguments\tparser.Condition) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.155, 94

	.type	go..C260,@object
	.section	.rodata.go..C260,"a",@progbits
	.p2align	3
go..C260:
	.quad	.Lconst.155
	.quad	93
	.size	go..C260, 16

	.type	go..C261,@object
	.section	.data.go..C261,"aw",@progbits
	.p2align	3
go..C261:
	.quad	type...1command_line_arguments.Condition
	.size	go..C261, 8

	.type	go..C262,@object
	.section	.data.go..C262,"aw",@progbits
	.p2align	3
go..C262:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C262, 8

	.type	go..C263,@object
	.section	.data.go..C263,"aw",@progbits
	.p2align	4
go..C263:
	.quad	go..C259
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Condition.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Condition.Pos..stub
	.size	go..C263, 40

	.type	go..C264,@object
	.section	.rodata.go..C264,"a",@progbits
	.p2align	4
go..C264:
	.quad	0
	.quad	0
	.quad	go..C263
	.quad	1
	.quad	1
	.size	go..C264, 40

	.type	type...1.1command_line_arguments.Condition,@object
	.section	.rodata.type...1.1command_line_arguments.Condition,"aG",@progbits,type...1.1command_line_arguments.Condition,comdat
	.weak	type...1.1command_line_arguments.Condition
	.p2align	4
type...1.1command_line_arguments.Condition:
	.quad	8
	.quad	8
	.long	1451943833
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C265
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Condition
	.size	type...1.1command_line_arguments.Condition, 80

	.type	.Lconst.156,@object
	.section	.rodata..Lconst.156,"a",@progbits
.Lconst.156:
	.asciz	"**\tcommand_line_arguments\tparser.Condition"
	.size	.Lconst.156, 43

	.type	go..C265,@object
	.section	.rodata.go..C265,"a",@progbits
	.p2align	3
go..C265:
	.quad	.Lconst.156
	.quad	42
	.size	go..C265, 16

	.type	go..C266,@object
	.section	.rodata.go..C266,"a",@progbits
	.p2align	3
go..C266:
	.quad	.Lconst.68
	.quad	14
	.size	go..C266, 16

	.type	.Lconst.157,@object
	.section	.rodata..Lconst.157,"a",@progbits
.Lconst.157:
	.asciz	"Positive"
	.size	.Lconst.157, 9

	.type	go..C267,@object
	.section	.rodata.go..C267,"a",@progbits
	.p2align	3
go..C267:
	.quad	.Lconst.157
	.quad	8
	.size	go..C267, 16

	.type	.Lconst.158,@object
	.section	.rodata..Lconst.158,"a",@progbits
.Lconst.158:
	.asciz	"Negative"
	.size	.Lconst.158, 9

	.type	go..C268,@object
	.section	.rodata.go..C268,"a",@progbits
	.p2align	3
go..C268:
	.quad	.Lconst.158
	.quad	8
	.size	go..C268, 16

	.type	.Lconst.159,@object
	.section	.rodata..Lconst.159,"a",@progbits
.Lconst.159:
	.asciz	"Expression"
	.size	.Lconst.159, 11

	.type	go..C269,@object
	.section	.rodata.go..C269,"a",@progbits
	.p2align	3
go..C269:
	.quad	.Lconst.159
	.quad	10
	.size	go..C269, 16

	.type	go..C270,@object
	.section	.data.go..C270,"aw",@progbits
	.p2align	4
go..C270:
	.quad	go..C266
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C267
	.quad	0
	.quad	type...1command_line_arguments.Block
	.quad	0
	.quad	80
	.quad	go..C268
	.quad	0
	.quad	type...1command_line_arguments.Block
	.quad	0
	.quad	96
	.quad	go..C269
	.quad	0
	.quad	string..d
	.quad	0
	.quad	112
	.size	go..C270, 160

	.type	command_line_arguments.Each..d,@object
	.section	.rodata.command_line_arguments.Each..d,"a",@progbits
	.globl	command_line_arguments.Each..d
	.p2align	4
command_line_arguments.Each..d:
	.quad	96
	.quad	96
	.long	3979980523
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Each..hash..f
	.quad	command_line_arguments.command_line_arguments.Each..eq..f
	.quad	gcbits..iwca
	.quad	go..C271
	.quad	go..C275
	.quad	type...1command_line_arguments.Each
	.quad	go..C289
	.quad	5
	.quad	5
	.size	command_line_arguments.Each..d, 96

	.type	command_line_arguments.command_line_arguments.Each..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Each..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Each..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Each..hash..f:
	.quad	command_line_arguments.command_line_arguments.Each..hash
	.size	command_line_arguments.command_line_arguments.Each..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Each..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Each..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Each..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Each..eq..f:
	.quad	command_line_arguments.command_line_arguments.Each..eq
	.size	command_line_arguments.command_line_arguments.Each..eq..f, 8

	.type	gcbits..iwca,@object
	.section	.rodata.gcbits..iwca,"aG",@progbits,gcbits..iwca,comdat
	.weak	gcbits..iwca
gcbits..iwca:
	.ascii	"\250\n"
	.size	gcbits..iwca, 2

	.type	.Lconst.160,@object
	.section	.rodata..Lconst.160,"a",@progbits
.Lconst.160:
	.asciz	"\tcommand_line_arguments\tparser.Each"
	.size	.Lconst.160, 36

	.type	go..C271,@object
	.section	.rodata.go..C271,"a",@progbits
	.p2align	3
go..C271:
	.quad	.Lconst.160
	.quad	35
	.size	go..C271, 16

	.type	.Lconst.161,@object
	.section	.rodata..Lconst.161,"a",@progbits
.Lconst.161:
	.asciz	"Each"
	.size	.Lconst.161, 5

	.type	go..C272,@object
	.section	.rodata.go..C272,"a",@progbits
	.p2align	3
go..C272:
	.quad	.Lconst.161
	.quad	4
	.size	go..C272, 16

	.type	go..C273,@object
	.section	.rodata.go..C273,"a",@progbits
	.p2align	3
go..C273:
	.quad	.Lconst.63
	.quad	22
	.size	go..C273, 16

	.type	go..C274,@object
	.section	.bss.go..C274,"aw",@nobits
	.p2align	4
go..C274:
	.zero	40
	.size	go..C274, 40

	.type	go..C275,@object
	.section	.rodata.go..C275,"a",@progbits
	.p2align	4
go..C275:
	.quad	go..C272
	.quad	go..C273
	.quad	go..C274
	.quad	0
	.quad	0
	.size	go..C275, 40

	.type	type...1command_line_arguments.Each,@object
	.section	.rodata.type...1command_line_arguments.Each,"aG",@progbits,type...1command_line_arguments.Each,comdat
	.weak	type...1command_line_arguments.Each
	.p2align	4
type...1command_line_arguments.Each:
	.quad	8
	.quad	8
	.long	3550146233
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C276
	.quad	go..C282
	.quad	type...1.1command_line_arguments.Each
	.quad	command_line_arguments.Each..d
	.size	type...1command_line_arguments.Each, 80

	.type	.Lconst.162,@object
	.section	.rodata..Lconst.162,"a",@progbits
.Lconst.162:
	.asciz	"*\tcommand_line_arguments\tparser.Each"
	.size	.Lconst.162, 37

	.type	go..C276,@object
	.section	.rodata.go..C276,"a",@progbits
	.p2align	3
go..C276:
	.quad	.Lconst.162
	.quad	36
	.size	go..C276, 16

	.type	go..C277,@object
	.section	.rodata.go..C277,"a",@progbits
	.p2align	3
go..C277:
	.quad	.Lconst.65
	.quad	3
	.size	go..C277, 16

	.type	type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	4098373800
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C278
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C279
	.quad	1
	.quad	1
	.quad	go..C280
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.163,@object
	.section	.rodata..Lconst.163,"a",@progbits
.Lconst.163:
	.asciz	"func(*\tcommand_line_arguments\tparser.Each) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.163, 89

	.type	go..C278,@object
	.section	.rodata.go..C278,"a",@progbits
	.p2align	3
go..C278:
	.quad	.Lconst.163
	.quad	88
	.size	go..C278, 16

	.type	go..C279,@object
	.section	.data.go..C279,"aw",@progbits
	.p2align	3
go..C279:
	.quad	type...1command_line_arguments.Each
	.size	go..C279, 8

	.type	go..C280,@object
	.section	.data.go..C280,"aw",@progbits
	.p2align	3
go..C280:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C280, 8

	.type	go..C281,@object
	.section	.data.go..C281,"aw",@progbits
	.p2align	4
go..C281:
	.quad	go..C277
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Each.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Each.Pos..stub
	.size	go..C281, 40

	.type	go..C282,@object
	.section	.rodata.go..C282,"a",@progbits
	.p2align	4
go..C282:
	.quad	0
	.quad	0
	.quad	go..C281
	.quad	1
	.quad	1
	.size	go..C282, 40

	.type	type...1.1command_line_arguments.Each,@object
	.section	.rodata.type...1.1command_line_arguments.Each,"aG",@progbits,type...1.1command_line_arguments.Each,comdat
	.weak	type...1.1command_line_arguments.Each
	.p2align	4
type...1.1command_line_arguments.Each:
	.quad	8
	.quad	8
	.long	967764889
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C283
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Each
	.size	type...1.1command_line_arguments.Each, 80

	.type	.Lconst.164,@object
	.section	.rodata..Lconst.164,"a",@progbits
.Lconst.164:
	.asciz	"**\tcommand_line_arguments\tparser.Each"
	.size	.Lconst.164, 38

	.type	go..C283,@object
	.section	.rodata.go..C283,"a",@progbits
	.p2align	3
go..C283:
	.quad	.Lconst.164
	.quad	37
	.size	go..C283, 16

	.type	go..C284,@object
	.section	.rodata.go..C284,"a",@progbits
	.p2align	3
go..C284:
	.quad	.Lconst.68
	.quad	14
	.size	go..C284, 16

	.type	.Lconst.165,@object
	.section	.rodata..Lconst.165,"a",@progbits
.Lconst.165:
	.asciz	"X"
	.size	.Lconst.165, 2

	.type	.Lconst.166,@object
	.section	.rodata..Lconst.166,"a",@progbits
.Lconst.166:
	.asciz	"Y"
	.size	.Lconst.166, 2

	.type	go..C287,@object
	.section	.rodata.go..C287,"a",@progbits
	.p2align	3
go..C287:
	.quad	.Lconst.159
	.quad	10
	.size	go..C287, 16

	.type	go..C288,@object
	.section	.rodata.go..C288,"a",@progbits
	.p2align	3
go..C288:
	.quad	.Lconst.96
	.quad	5
	.size	go..C288, 16

	.type	go..C289,@object
	.section	.data.go..C289,"aw",@progbits
	.p2align	4
go..C289:
	.quad	go..C284
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	.Lconst.344
	.quad	0
	.quad	string..d
	.quad	0
	.quad	80
	.quad	.Lconst.345
	.quad	0
	.quad	string..d
	.quad	0
	.quad	112
	.quad	go..C287
	.quad	0
	.quad	string..d
	.quad	0
	.quad	144
	.quad	go..C288
	.quad	0
	.quad	type...1command_line_arguments.Block
	.quad	0
	.quad	176
	.size	go..C289, 200

	.type	command_line_arguments.Assignment..d,@object
	.section	.rodata.command_line_arguments.Assignment..d,"a",@progbits
	.globl	command_line_arguments.Assignment..d
	.p2align	4
command_line_arguments.Assignment..d:
	.quad	72
	.quad	64
	.long	3114766683
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Assignment..hash..f
	.quad	command_line_arguments.command_line_arguments.Assignment..eq..f
	.quad	gcbits..if
	.quad	go..C290
	.quad	go..C294
	.quad	type...1command_line_arguments.Assignment
	.quad	go..C306
	.quad	3
	.quad	3
	.size	command_line_arguments.Assignment..d, 96

	.type	command_line_arguments.command_line_arguments.Assignment..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Assignment..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Assignment..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Assignment..hash..f:
	.quad	command_line_arguments.command_line_arguments.Assignment..hash
	.size	command_line_arguments.command_line_arguments.Assignment..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Assignment..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Assignment..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Assignment..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Assignment..eq..f:
	.quad	command_line_arguments.command_line_arguments.Assignment..eq
	.size	command_line_arguments.command_line_arguments.Assignment..eq..f, 8

	.type	.Lconst.167,@object
	.section	.rodata..Lconst.167,"a",@progbits
.Lconst.167:
	.asciz	"\tcommand_line_arguments\tparser.Assignment"
	.size	.Lconst.167, 42

	.type	go..C290,@object
	.section	.rodata.go..C290,"a",@progbits
	.p2align	3
go..C290:
	.quad	.Lconst.167
	.quad	41
	.size	go..C290, 16

	.type	.Lconst.168,@object
	.section	.rodata..Lconst.168,"a",@progbits
.Lconst.168:
	.asciz	"Assignment"
	.size	.Lconst.168, 11

	.type	go..C291,@object
	.section	.rodata.go..C291,"a",@progbits
	.p2align	3
go..C291:
	.quad	.Lconst.168
	.quad	10
	.size	go..C291, 16

	.type	go..C292,@object
	.section	.rodata.go..C292,"a",@progbits
	.p2align	3
go..C292:
	.quad	.Lconst.63
	.quad	22
	.size	go..C292, 16

	.type	go..C293,@object
	.section	.bss.go..C293,"aw",@nobits
	.p2align	4
go..C293:
	.zero	40
	.size	go..C293, 40

	.type	go..C294,@object
	.section	.rodata.go..C294,"a",@progbits
	.p2align	4
go..C294:
	.quad	go..C291
	.quad	go..C292
	.quad	go..C293
	.quad	0
	.quad	0
	.size	go..C294, 40

	.type	type...1command_line_arguments.Assignment,@object
	.section	.rodata.type...1command_line_arguments.Assignment,"aG",@progbits,type...1command_line_arguments.Assignment,comdat
	.weak	type...1command_line_arguments.Assignment
	.p2align	4
type...1command_line_arguments.Assignment:
	.quad	8
	.quad	8
	.long	2591626681
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C295
	.quad	go..C301
	.quad	type...1.1command_line_arguments.Assignment
	.quad	command_line_arguments.Assignment..d
	.size	type...1command_line_arguments.Assignment, 80

	.type	.Lconst.169,@object
	.section	.rodata..Lconst.169,"a",@progbits
.Lconst.169:
	.asciz	"*\tcommand_line_arguments\tparser.Assignment"
	.size	.Lconst.169, 43

	.type	go..C295,@object
	.section	.rodata.go..C295,"a",@progbits
	.p2align	3
go..C295:
	.quad	.Lconst.169
	.quad	42
	.size	go..C295, 16

	.type	go..C296,@object
	.section	.rodata.go..C296,"a",@progbits
	.p2align	3
go..C296:
	.quad	.Lconst.65
	.quad	3
	.size	go..C296, 16

	.type	type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	3490519208
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C297
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C298
	.quad	1
	.quad	1
	.quad	go..C299
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.170,@object
	.section	.rodata..Lconst.170,"a",@progbits
.Lconst.170:
	.asciz	"func(*\tcommand_line_arguments\tparser.Assignment) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.170, 95

	.type	go..C297,@object
	.section	.rodata.go..C297,"a",@progbits
	.p2align	3
go..C297:
	.quad	.Lconst.170
	.quad	94
	.size	go..C297, 16

	.type	go..C298,@object
	.section	.data.go..C298,"aw",@progbits
	.p2align	3
go..C298:
	.quad	type...1command_line_arguments.Assignment
	.size	go..C298, 8

	.type	go..C299,@object
	.section	.data.go..C299,"aw",@progbits
	.p2align	3
go..C299:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C299, 8

	.type	go..C300,@object
	.section	.data.go..C300,"aw",@progbits
	.p2align	4
go..C300:
	.quad	go..C296
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Assignment.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Assignment.Pos..stub
	.size	go..C300, 40

	.type	go..C301,@object
	.section	.rodata.go..C301,"a",@progbits
	.p2align	4
go..C301:
	.quad	0
	.quad	0
	.quad	go..C300
	.quad	1
	.quad	1
	.size	go..C301, 40

	.type	type...1.1command_line_arguments.Assignment,@object
	.section	.rodata.type...1.1command_line_arguments.Assignment,"aG",@progbits,type...1.1command_line_arguments.Assignment,comdat
	.weak	type...1.1command_line_arguments.Assignment
	.p2align	4
type...1.1command_line_arguments.Assignment:
	.quad	8
	.quad	8
	.long	2811321241
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C302
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Assignment
	.size	type...1.1command_line_arguments.Assignment, 80

	.type	.Lconst.171,@object
	.section	.rodata..Lconst.171,"a",@progbits
.Lconst.171:
	.asciz	"**\tcommand_line_arguments\tparser.Assignment"
	.size	.Lconst.171, 44

	.type	go..C302,@object
	.section	.rodata.go..C302,"a",@progbits
	.p2align	3
go..C302:
	.quad	.Lconst.171
	.quad	43
	.size	go..C302, 16

	.type	go..C303,@object
	.section	.rodata.go..C303,"a",@progbits
	.p2align	3
go..C303:
	.quad	.Lconst.68
	.quad	14
	.size	go..C303, 16

	.type	go..C304,@object
	.section	.rodata.go..C304,"a",@progbits
	.p2align	3
go..C304:
	.quad	.Lconst.165
	.quad	1
	.size	go..C304, 16

	.type	go..C305,@object
	.section	.rodata.go..C305,"a",@progbits
	.p2align	3
go..C305:
	.quad	.Lconst.159
	.quad	10
	.size	go..C305, 16

	.type	go..C306,@object
	.section	.data.go..C306,"aw",@progbits
	.p2align	4
go..C306:
	.quad	go..C303
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C304
	.quad	0
	.quad	string..d
	.quad	0
	.quad	80
	.quad	go..C305
	.quad	0
	.quad	string..d
	.quad	0
	.quad	112
	.size	go..C306, 120

	.type	command_line_arguments.Mixin..d,@object
	.section	.rodata.command_line_arguments.Mixin..d,"a",@progbits
	.globl	command_line_arguments.Mixin..d
	.p2align	4
command_line_arguments.Mixin..d:
	.quad	88
	.quad	72
	.long	3280351115
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ilaa
	.quad	go..C307
	.quad	go..C311
	.quad	type...1command_line_arguments.Mixin
	.quad	go..C324
	.quad	4
	.quad	4
	.size	command_line_arguments.Mixin..d, 96

	.type	gcbits..ilaa,@object
	.section	.rodata.gcbits..ilaa,"aG",@progbits,gcbits..ilaa,comdat
	.weak	gcbits..ilaa
gcbits..ilaa:
	.ascii	"h\001"
	.size	gcbits..ilaa, 2

	.type	.Lconst.172,@object
	.section	.rodata..Lconst.172,"a",@progbits
.Lconst.172:
	.asciz	"\tcommand_line_arguments\tparser.Mixin"
	.size	.Lconst.172, 37

	.type	go..C307,@object
	.section	.rodata.go..C307,"a",@progbits
	.p2align	3
go..C307:
	.quad	.Lconst.172
	.quad	36
	.size	go..C307, 16

	.type	.Lconst.173,@object
	.section	.rodata..Lconst.173,"a",@progbits
.Lconst.173:
	.asciz	"Mixin"
	.size	.Lconst.173, 6

	.type	go..C308,@object
	.section	.rodata.go..C308,"a",@progbits
	.p2align	3
go..C308:
	.quad	.Lconst.173
	.quad	5
	.size	go..C308, 16

	.type	go..C309,@object
	.section	.rodata.go..C309,"a",@progbits
	.p2align	3
go..C309:
	.quad	.Lconst.63
	.quad	22
	.size	go..C309, 16

	.type	go..C310,@object
	.section	.bss.go..C310,"aw",@nobits
	.p2align	4
go..C310:
	.zero	40
	.size	go..C310, 40

	.type	go..C311,@object
	.section	.rodata.go..C311,"a",@progbits
	.p2align	4
go..C311:
	.quad	go..C308
	.quad	go..C309
	.quad	go..C310
	.quad	0
	.quad	0
	.size	go..C311, 40

	.type	type...1command_line_arguments.Mixin,@object
	.section	.rodata.type...1command_line_arguments.Mixin,"aG",@progbits,type...1command_line_arguments.Mixin,comdat
	.weak	type...1command_line_arguments.Mixin
	.p2align	4
type...1command_line_arguments.Mixin:
	.quad	8
	.quad	8
	.long	946010297
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C312
	.quad	go..C318
	.quad	type...1.1command_line_arguments.Mixin
	.quad	command_line_arguments.Mixin..d
	.size	type...1command_line_arguments.Mixin, 80

	.type	.Lconst.174,@object
	.section	.rodata..Lconst.174,"a",@progbits
.Lconst.174:
	.asciz	"*\tcommand_line_arguments\tparser.Mixin"
	.size	.Lconst.174, 38

	.type	go..C312,@object
	.section	.rodata.go..C312,"a",@progbits
	.p2align	3
go..C312:
	.quad	.Lconst.174
	.quad	37
	.size	go..C312, 16

	.type	go..C313,@object
	.section	.rodata.go..C313,"a",@progbits
	.p2align	3
go..C313:
	.quad	.Lconst.65
	.quad	3
	.size	go..C313, 16

	.type	type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	2370402472
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C314
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C315
	.quad	1
	.quad	1
	.quad	go..C316
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.175,@object
	.section	.rodata..Lconst.175,"a",@progbits
.Lconst.175:
	.asciz	"func(*\tcommand_line_arguments\tparser.Mixin) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.175, 90

	.type	go..C314,@object
	.section	.rodata.go..C314,"a",@progbits
	.p2align	3
go..C314:
	.quad	.Lconst.175
	.quad	89
	.size	go..C314, 16

	.type	go..C315,@object
	.section	.data.go..C315,"aw",@progbits
	.p2align	3
go..C315:
	.quad	type...1command_line_arguments.Mixin
	.size	go..C315, 8

	.type	go..C316,@object
	.section	.data.go..C316,"aw",@progbits
	.p2align	3
go..C316:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C316, 8

	.type	go..C317,@object
	.section	.data.go..C317,"aw",@progbits
	.p2align	4
go..C317:
	.quad	go..C313
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Mixin.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Mixin.Pos..stub
	.size	go..C317, 40

	.type	go..C318,@object
	.section	.rodata.go..C318,"a",@progbits
	.p2align	4
go..C318:
	.quad	0
	.quad	0
	.quad	go..C317
	.quad	1
	.quad	1
	.size	go..C318, 40

	.type	type...1.1command_line_arguments.Mixin,@object
	.section	.rodata.type...1.1command_line_arguments.Mixin,"aG",@progbits,type...1.1command_line_arguments.Mixin,comdat
	.weak	type...1.1command_line_arguments.Mixin
	.p2align	4
type...1.1command_line_arguments.Mixin:
	.quad	8
	.quad	8
	.long	2251262873
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C319
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Mixin
	.size	type...1.1command_line_arguments.Mixin, 80

	.type	.Lconst.176,@object
	.section	.rodata..Lconst.176,"a",@progbits
.Lconst.176:
	.asciz	"**\tcommand_line_arguments\tparser.Mixin"
	.size	.Lconst.176, 39

	.type	go..C319,@object
	.section	.rodata.go..C319,"a",@progbits
	.p2align	3
go..C319:
	.quad	.Lconst.176
	.quad	38
	.size	go..C319, 16

	.type	go..C320,@object
	.section	.rodata.go..C320,"a",@progbits
	.p2align	3
go..C320:
	.quad	.Lconst.68
	.quad	14
	.size	go..C320, 16

	.type	go..C321,@object
	.section	.rodata.go..C321,"a",@progbits
	.p2align	3
go..C321:
	.quad	.Lconst.96
	.quad	5
	.size	go..C321, 16

	.type	go..C322,@object
	.section	.rodata.go..C322,"a",@progbits
	.p2align	3
go..C322:
	.quad	.Lconst.129
	.quad	4
	.size	go..C322, 16

	.type	.Lconst.177,@object
	.section	.rodata..Lconst.177,"a",@progbits
.Lconst.177:
	.asciz	"Args"
	.size	.Lconst.177, 5

	.type	go..C324,@object
	.section	.data.go..C324,"aw",@progbits
	.p2align	4
go..C324:
	.quad	go..C320
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C321
	.quad	0
	.quad	type...1command_line_arguments.Block
	.quad	0
	.quad	80
	.quad	go..C322
	.quad	0
	.quad	string..d
	.quad	0
	.quad	96
	.quad	.Lconst.362
	.quad	0
	.quad	type...6.7string
	.quad	0
	.quad	128
	.size	go..C324, 160

	.type	.Lconst.178,@object
	.section	.rodata..Lconst.178,"a",@progbits
.Lconst.178:
	.asciz	",\\s"
	.size	.Lconst.178, 4

	.type	command_line_arguments.MixinCall..d,@object
	.section	.rodata.command_line_arguments.MixinCall..d,"a",@progbits
	.globl	command_line_arguments.MixinCall..d
	.p2align	4
command_line_arguments.MixinCall..d:
	.quad	80
	.quad	64
	.long	3207906735
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..if
	.quad	go..C325
	.quad	go..C329
	.quad	type...1command_line_arguments.MixinCall
	.quad	go..C341
	.quad	3
	.quad	3
	.size	command_line_arguments.MixinCall..d, 96

	.type	.Lconst.180,@object
	.section	.rodata..Lconst.180,"a",@progbits
.Lconst.180:
	.asciz	"\tcommand_line_arguments\tparser.MixinCall"
	.size	.Lconst.180, 41

	.type	go..C325,@object
	.section	.rodata.go..C325,"a",@progbits
	.p2align	3
go..C325:
	.quad	.Lconst.180
	.quad	40
	.size	go..C325, 16

	.type	.Lconst.181,@object
	.section	.rodata..Lconst.181,"a",@progbits
.Lconst.181:
	.asciz	"MixinCall"
	.size	.Lconst.181, 10

	.type	go..C326,@object
	.section	.rodata.go..C326,"a",@progbits
	.p2align	3
go..C326:
	.quad	.Lconst.181
	.quad	9
	.size	go..C326, 16

	.type	go..C327,@object
	.section	.rodata.go..C327,"a",@progbits
	.p2align	3
go..C327:
	.quad	.Lconst.63
	.quad	22
	.size	go..C327, 16

	.type	go..C328,@object
	.section	.bss.go..C328,"aw",@nobits
	.p2align	4
go..C328:
	.zero	40
	.size	go..C328, 40

	.type	go..C329,@object
	.section	.rodata.go..C329,"a",@progbits
	.p2align	4
go..C329:
	.quad	go..C326
	.quad	go..C327
	.quad	go..C328
	.quad	0
	.quad	0
	.size	go..C329, 40

	.type	type...1command_line_arguments.MixinCall,@object
	.section	.rodata.type...1command_line_arguments.MixinCall,"aG",@progbits,type...1command_line_arguments.MixinCall,comdat
	.weak	type...1command_line_arguments.MixinCall
	.p2align	4
type...1command_line_arguments.MixinCall:
	.quad	8
	.quad	8
	.long	4081867513
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C330
	.quad	go..C336
	.quad	type...1.1command_line_arguments.MixinCall
	.quad	command_line_arguments.MixinCall..d
	.size	type...1command_line_arguments.MixinCall, 80

	.type	.Lconst.182,@object
	.section	.rodata..Lconst.182,"a",@progbits
.Lconst.182:
	.asciz	"*\tcommand_line_arguments\tparser.MixinCall"
	.size	.Lconst.182, 42

	.type	go..C330,@object
	.section	.rodata.go..C330,"a",@progbits
	.p2align	3
go..C330:
	.quad	.Lconst.182
	.quad	41
	.size	go..C330, 16

	.type	go..C331,@object
	.section	.rodata.go..C331,"a",@progbits
	.p2align	3
go..C331:
	.quad	.Lconst.65
	.quad	3
	.size	go..C331, 16

	.type	type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	3933585576
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C332
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C333
	.quad	1
	.quad	1
	.quad	go..C334
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.183,@object
	.section	.rodata..Lconst.183,"a",@progbits
.Lconst.183:
	.asciz	"func(*\tcommand_line_arguments\tparser.MixinCall) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.183, 94

	.type	go..C332,@object
	.section	.rodata.go..C332,"a",@progbits
	.p2align	3
go..C332:
	.quad	.Lconst.183
	.quad	93
	.size	go..C332, 16

	.type	go..C333,@object
	.section	.data.go..C333,"aw",@progbits
	.p2align	3
go..C333:
	.quad	type...1command_line_arguments.MixinCall
	.size	go..C333, 8

	.type	go..C334,@object
	.section	.data.go..C334,"aw",@progbits
	.p2align	3
go..C334:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C334, 8

	.type	go..C335,@object
	.section	.data.go..C335,"aw",@progbits
	.p2align	4
go..C335:
	.quad	go..C331
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.MixinCall.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.MixinCall.Pos..stub
	.size	go..C335, 40

	.type	go..C336,@object
	.section	.rodata.go..C336,"a",@progbits
	.p2align	4
go..C336:
	.quad	0
	.quad	0
	.quad	go..C335
	.quad	1
	.quad	1
	.size	go..C336, 40

	.type	type...1.1command_line_arguments.MixinCall,@object
	.section	.rodata.type...1.1command_line_arguments.MixinCall,"aG",@progbits,type...1.1command_line_arguments.MixinCall,comdat
	.weak	type...1.1command_line_arguments.MixinCall
	.p2align	4
type...1.1command_line_arguments.MixinCall:
	.quad	8
	.quad	8
	.long	885370777
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C337
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.MixinCall
	.size	type...1.1command_line_arguments.MixinCall, 80

	.type	.Lconst.184,@object
	.section	.rodata..Lconst.184,"a",@progbits
.Lconst.184:
	.asciz	"**\tcommand_line_arguments\tparser.MixinCall"
	.size	.Lconst.184, 43

	.type	go..C337,@object
	.section	.rodata.go..C337,"a",@progbits
	.p2align	3
go..C337:
	.quad	.Lconst.184
	.quad	42
	.size	go..C337, 16

	.type	go..C338,@object
	.section	.rodata.go..C338,"a",@progbits
	.p2align	3
go..C338:
	.quad	.Lconst.68
	.quad	14
	.size	go..C338, 16

	.type	go..C339,@object
	.section	.rodata.go..C339,"a",@progbits
	.p2align	3
go..C339:
	.quad	.Lconst.129
	.quad	4
	.size	go..C339, 16

	.type	go..C340,@object
	.section	.rodata.go..C340,"a",@progbits
	.p2align	3
go..C340:
	.quad	.Lconst.177
	.quad	4
	.size	go..C340, 16

	.type	go..C341,@object
	.section	.data.go..C341,"aw",@progbits
	.p2align	4
go..C341:
	.quad	go..C338
	.quad	0
	.quad	command_line_arguments.SourcePosition..d
	.quad	0
	.quad	1
	.quad	go..C339
	.quad	0
	.quad	string..d
	.quad	0
	.quad	80
	.quad	go..C340
	.quad	0
	.quad	type...6.7string
	.quad	0
	.quad	112
	.size	go..C341, 120

	.type	.Lconst.185,@object
	.section	.rodata..Lconst.185,"a",@progbits
.Lconst.185:
	.asciz	"\"(.*?)\""
	.size	.Lconst.185, 8

	.type	.Lconst.187,@object
	.section	.rodata..Lconst.187,"a",@progbits
.Lconst.187:
	.asciz	"%s"
	.size	.Lconst.187, 3

	.type	command_line_arguments.Parser..d,@object
	.section	.rodata.command_line_arguments.Parser..d,"a",@progbits
	.globl	command_line_arguments.Parser..d
	.p2align	4
command_line_arguments.Parser..d:
	.quad	72
	.quad	72
	.long	851093681
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Cpaa
	.quad	go..C342
	.quad	go..C346
	.quad	type...1command_line_arguments.Parser
	.quad	go..C634
	.quad	7
	.quad	7
	.size	command_line_arguments.Parser..d, 96

	.type	gcbits..Cpaa,@object
	.section	.rodata.gcbits..Cpaa,"aG",@progbits,gcbits..Cpaa,comdat
	.weak	gcbits..Cpaa
gcbits..Cpaa:
	.ascii	"\373\001"
	.size	gcbits..Cpaa, 2

	.type	.Lconst.189,@object
	.section	.rodata..Lconst.189,"a",@progbits
.Lconst.189:
	.asciz	"\tcommand_line_arguments\tparser.Parser"
	.size	.Lconst.189, 38

	.type	go..C342,@object
	.section	.rodata.go..C342,"a",@progbits
	.p2align	3
go..C342:
	.quad	.Lconst.189
	.quad	37
	.size	go..C342, 16

	.type	.Lconst.190,@object
	.section	.rodata..Lconst.190,"a",@progbits
.Lconst.190:
	.asciz	"Parser"
	.size	.Lconst.190, 7

	.type	go..C343,@object
	.section	.rodata.go..C343,"a",@progbits
	.p2align	3
go..C343:
	.quad	.Lconst.190
	.quad	6
	.size	go..C343, 16

	.type	go..C344,@object
	.section	.rodata.go..C344,"a",@progbits
	.p2align	3
go..C344:
	.quad	.Lconst.63
	.quad	22
	.size	go..C344, 16

	.type	go..C345,@object
	.section	.bss.go..C345,"aw",@nobits
	.p2align	4
go..C345:
	.zero	40
	.size	go..C345, 40

	.type	go..C346,@object
	.section	.rodata.go..C346,"a",@progbits
	.p2align	4
go..C346:
	.quad	go..C343
	.quad	go..C344
	.quad	go..C345
	.quad	0
	.quad	0
	.size	go..C346, 40

	.type	type...1command_line_arguments.Parser,@object
	.section	.rodata.type...1command_line_arguments.Parser,"aG",@progbits,type...1command_line_arguments.Parser,comdat
	.weak	type...1command_line_arguments.Parser
	.p2align	4
type...1command_line_arguments.Parser:
	.quad	8
	.quad	8
	.long	732597017
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C347
	.quad	go..C508
	.quad	type...1.1command_line_arguments.Parser
	.quad	command_line_arguments.Parser..d
	.size	type...1command_line_arguments.Parser, 80

	.type	.Lconst.191,@object
	.section	.rodata..Lconst.191,"a",@progbits
.Lconst.191:
	.asciz	"*\tcommand_line_arguments\tparser.Parser"
	.size	.Lconst.191, 39

	.type	go..C347,@object
	.section	.rodata.go..C347,"a",@progbits
	.p2align	3
go..C347:
	.quad	.Lconst.191
	.quad	38
	.size	go..C347, 16

	.type	.Lconst.192,@object
	.section	.rodata..Lconst.192,"a",@progbits
.Lconst.192:
	.asciz	"Parse"
	.size	.Lconst.192, 6

	.type	go..C348,@object
	.section	.rodata.go..C348,"a",@progbits
	.p2align	3
go..C348:
	.quad	.Lconst.192
	.quad	5
	.size	go..C348, 16

	.type	type..func.8.9.8.1command_line_arguments.Block.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Block.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Block.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Block.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Block.9:
	.quad	8
	.quad	8
	.long	2785644104
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C349
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C350
	.quad	0
	.quad	0
	.quad	go..C351
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Block.9, 128

	.type	.Lconst.193,@object
	.section	.rodata..Lconst.193,"a",@progbits
.Lconst.193:
	.asciz	"func() *\tcommand_line_arguments\tparser.Block"
	.size	.Lconst.193, 45

	.type	go..C349,@object
	.section	.rodata.go..C349,"a",@progbits
	.p2align	3
go..C349:
	.quad	.Lconst.193
	.quad	44
	.size	go..C349, 16

	.type	go..C350,@object
	.section	.bss.go..C350,"aw",@nobits
	.p2align	3
go..C350:
	.zero	8
	.size	go..C350, 8

	.type	go..C351,@object
	.section	.data.go..C351,"aw",@progbits
	.p2align	3
go..C351:
	.quad	type...1command_line_arguments.Block
	.size	go..C351, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9:
	.quad	8
	.quad	8
	.long	458944872
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C352
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C353
	.quad	1
	.quad	1
	.quad	go..C354
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9, 128

	.type	.Lconst.194,@object
	.section	.rodata..Lconst.194,"a",@progbits
.Lconst.194:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Block"
	.size	.Lconst.194, 83

	.type	go..C352,@object
	.section	.rodata.go..C352,"a",@progbits
	.p2align	3
go..C352:
	.quad	.Lconst.194
	.quad	82
	.size	go..C352, 16

	.type	go..C353,@object
	.section	.data.go..C353,"aw",@progbits
	.p2align	3
go..C353:
	.quad	type...1command_line_arguments.Parser
	.size	go..C353, 8

	.type	go..C354,@object
	.section	.data.go..C354,"aw",@progbits
	.p2align	3
go..C354:
	.quad	type...1command_line_arguments.Block
	.size	go..C354, 8

	.type	.Lconst.195,@object
	.section	.rodata..Lconst.195,"a",@progbits
.Lconst.195:
	.asciz	"SetFilename"
	.size	.Lconst.195, 12

	.type	go..C355,@object
	.section	.rodata.go..C355,"a",@progbits
	.p2align	3
go..C355:
	.quad	.Lconst.195
	.quad	11
	.size	go..C355, 16

	.type	type..func.8string.9.8.9,@object
	.section	.rodata.type..func.8string.9.8.9,"aG",@progbits,type..func.8string.9.8.9,comdat
	.weak	type..func.8string.9.8.9
	.p2align	4
type..func.8string.9.8.9:
	.quad	8
	.quad	8
	.long	458019656
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C356
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C357
	.quad	1
	.quad	1
	.quad	go..C358
	.quad	0
	.quad	0
	.size	type..func.8string.9.8.9, 128

	.type	.Lconst.196,@object
	.section	.rodata..Lconst.196,"a",@progbits
.Lconst.196:
	.asciz	"func(string)"
	.size	.Lconst.196, 13

	.type	go..C356,@object
	.section	.rodata.go..C356,"a",@progbits
	.p2align	3
go..C356:
	.quad	.Lconst.196
	.quad	12
	.size	go..C356, 16

	.type	go..C357,@object
	.section	.data.go..C357,"aw",@progbits
	.p2align	3
go..C357:
	.quad	string..d
	.size	go..C357, 8

	.type	go..C358,@object
	.section	.bss.go..C358,"aw",@nobits
	.p2align	3
go..C358:
	.zero	8
	.size	go..C358, 8

	.type	type..func.8.1command_line_arguments.Parser.3string.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.3string.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.3string.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.3string.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.3string.9.8.9:
	.quad	8
	.quad	8
	.long	2884307368
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C359
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C360
	.quad	2
	.quad	2
	.quad	go..C361
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Parser.3string.9.8.9, 128

	.type	.Lconst.197,@object
	.section	.rodata..Lconst.197,"a",@progbits
.Lconst.197:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser, string)"
	.size	.Lconst.197, 53

	.type	go..C359,@object
	.section	.rodata.go..C359,"a",@progbits
	.p2align	3
go..C359:
	.quad	.Lconst.197
	.quad	52
	.size	go..C359, 16

	.type	go..C360,@object
	.section	.data.go..C360,"aw",@progbits
	.p2align	3
go..C360:
	.quad	type...1command_line_arguments.Parser
	.quad	string..d
	.size	go..C360, 16

	.type	go..C361,@object
	.section	.bss.go..C361,"aw",@nobits
	.p2align	3
go..C361:
	.zero	8
	.size	go..C361, 8

	.type	.Lconst.198,@object
	.section	.rodata..Lconst.198,"a",@progbits
.Lconst.198:
	.asciz	"SetVirtualFilesystem"
	.size	.Lconst.198, 21

	.type	go..C362,@object
	.section	.rodata.go..C362,"a",@progbits
	.p2align	3
go..C362:
	.quad	.Lconst.198
	.quad	20
	.size	go..C362, 16

	.type	type..func.8net_http.FileSystem.9.8.9,@object
	.section	.rodata.type..func.8net_http.FileSystem.9.8.9,"aG",@progbits,type..func.8net_http.FileSystem.9.8.9,comdat
	.weak	type..func.8net_http.FileSystem.9.8.9
	.p2align	4
type..func.8net_http.FileSystem.9.8.9:
	.quad	8
	.quad	8
	.long	491265032
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C363
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C364
	.quad	1
	.quad	1
	.quad	go..C365
	.quad	0
	.quad	0
	.size	type..func.8net_http.FileSystem.9.8.9, 128

	.type	.Lconst.199,@object
	.section	.rodata..Lconst.199,"a",@progbits
.Lconst.199:
	.asciz	"func(\tnet_http\thttp.FileSystem)"
	.size	.Lconst.199, 32

	.type	go..C363,@object
	.section	.rodata.go..C363,"a",@progbits
	.p2align	3
go..C363:
	.quad	.Lconst.199
	.quad	31
	.size	go..C363, 16

	.type	go..C364,@object
	.section	.data.go..C364,"aw",@progbits
	.p2align	3
go..C364:
	.quad	net_http.FileSystem..d
	.size	go..C364, 8

	.type	go..C365,@object
	.section	.bss.go..C365,"aw",@nobits
	.p2align	3
go..C365:
	.zero	8
	.size	go..C365, 8

	.type	type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9:
	.quad	8
	.quad	8
	.long	2950798120
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C366
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C367
	.quad	2
	.quad	2
	.quad	go..C368
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9, 128

	.type	.Lconst.200,@object
	.section	.rodata..Lconst.200,"a",@progbits
.Lconst.200:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser, \tnet_http\thttp.FileSystem)"
	.size	.Lconst.200, 72

	.type	go..C366,@object
	.section	.rodata.go..C366,"a",@progbits
	.p2align	3
go..C366:
	.quad	.Lconst.200
	.quad	71
	.size	go..C366, 16

	.type	go..C367,@object
	.section	.data.go..C367,"aw",@progbits
	.p2align	3
go..C367:
	.quad	type...1command_line_arguments.Parser
	.quad	net_http.FileSystem..d
	.size	go..C367, 16

	.type	go..C368,@object
	.section	.bss.go..C368,"aw",@nobits
	.p2align	3
go..C368:
	.zero	8
	.size	go..C368, 8

	.type	.Lconst.201,@object
	.section	.rodata..Lconst.201,"a",@progbits
.Lconst.201:
	.asciz	"advance"
	.size	.Lconst.201, 8

	.type	go..C369,@object
	.section	.rodata.go..C369,"a",@progbits
	.p2align	3
go..C369:
	.quad	.Lconst.201
	.quad	7
	.size	go..C369, 16

	.type	go..C370,@object
	.section	.rodata.go..C370,"a",@progbits
	.p2align	3
go..C370:
	.quad	.Lconst.63
	.quad	22
	.size	go..C370, 16

	.type	type..func.8.9.8.9,@object
	.section	.rodata.type..func.8.9.8.9,"aG",@progbits,type..func.8.9.8.9,comdat
	.weak	type..func.8.9.8.9
	.p2align	4
type..func.8.9.8.9:
	.quad	8
	.quad	8
	.long	8
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C371
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C372
	.quad	0
	.quad	0
	.quad	go..C373
	.quad	0
	.quad	0
	.size	type..func.8.9.8.9, 128

	.type	.Lconst.202,@object
	.section	.rodata..Lconst.202,"a",@progbits
.Lconst.202:
	.asciz	"func()"
	.size	.Lconst.202, 7

	.type	go..C371,@object
	.section	.rodata.go..C371,"a",@progbits
	.p2align	3
go..C371:
	.quad	.Lconst.202
	.quad	6
	.size	go..C371, 16

	.type	go..C372,@object
	.section	.bss.go..C372,"aw",@nobits
	.p2align	3
go..C372:
	.zero	8
	.size	go..C372, 8

	.type	go..C373,@object
	.section	.bss.go..C373,"aw",@nobits
	.p2align	3
go..C373:
	.zero	8
	.size	go..C373, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.9:
	.quad	8
	.quad	8
	.long	1968268072
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C374
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C375
	.quad	1
	.quad	1
	.quad	go..C376
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Parser.9.8.9, 128

	.type	.Lconst.203,@object
	.section	.rodata..Lconst.203,"a",@progbits
.Lconst.203:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser)"
	.size	.Lconst.203, 45

	.type	go..C374,@object
	.section	.rodata.go..C374,"a",@progbits
	.p2align	3
go..C374:
	.quad	.Lconst.203
	.quad	44
	.size	go..C374, 16

	.type	go..C375,@object
	.section	.data.go..C375,"aw",@progbits
	.p2align	3
go..C375:
	.quad	type...1command_line_arguments.Parser
	.size	go..C375, 8

	.type	go..C376,@object
	.section	.bss.go..C376,"aw",@nobits
	.p2align	3
go..C376:
	.zero	8
	.size	go..C376, 8

	.type	.Lconst.204,@object
	.section	.rodata..Lconst.204,"a",@progbits
.Lconst.204:
	.asciz	"expect"
	.size	.Lconst.204, 7

	.type	go..C377,@object
	.section	.rodata.go..C377,"a",@progbits
	.p2align	3
go..C377:
	.quad	.Lconst.204
	.quad	6
	.size	go..C377, 16

	.type	go..C378,@object
	.section	.rodata.go..C378,"a",@progbits
	.p2align	3
go..C378:
	.quad	.Lconst.63
	.quad	22
	.size	go..C378, 16

	.type	type..func.8int32.9.8.1command_line_arguments.token.9,@object
	.section	.rodata.type..func.8int32.9.8.1command_line_arguments.token.9,"aG",@progbits,type..func.8int32.9.8.1command_line_arguments.token.9,comdat
	.weak	type..func.8int32.9.8.1command_line_arguments.token.9
	.p2align	4
type..func.8int32.9.8.1command_line_arguments.token.9:
	.quad	8
	.quad	8
	.long	3183709160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C379
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C385
	.quad	1
	.quad	1
	.quad	go..C396
	.quad	1
	.quad	1
	.size	type..func.8int32.9.8.1command_line_arguments.token.9, 128

	.type	.Lconst.205,@object
	.section	.rodata..Lconst.205,"a",@progbits
.Lconst.205:
	.asciz	"func(int32) *\tcommand_line_arguments\tparser.token"
	.size	.Lconst.205, 50

	.type	go..C379,@object
	.section	.rodata.go..C379,"a",@progbits
	.p2align	3
go..C379:
	.quad	.Lconst.205
	.quad	49
	.size	go..C379, 16

	.type	int32..d,@object
	.section	.rodata.int32..d,"aG",@progbits,int32..d,comdat
	.weak	int32..d
	.p2align	4
int32..d:
	.quad	4
	.quad	0
	.long	3137725293
	.byte	133
	.byte	4
	.byte	4
	.zero	1
	.quad	runtime.memhash32..f
	.quad	runtime.memequal32..f
	.quad	0
	.quad	go..C380
	.quad	go..C383
	.quad	type...1int32
	.size	int32..d, 72

	.type	.Lconst.206,@object
	.section	.rodata..Lconst.206,"a",@progbits
.Lconst.206:
	.asciz	"int32"
	.size	.Lconst.206, 6

	.type	go..C380,@object
	.section	.rodata.go..C380,"a",@progbits
	.p2align	3
go..C380:
	.quad	.Lconst.206
	.quad	5
	.size	go..C380, 16

	.type	go..C381,@object
	.section	.rodata.go..C381,"a",@progbits
	.p2align	3
go..C381:
	.quad	.Lconst.206
	.quad	5
	.size	go..C381, 16

	.type	go..C382,@object
	.section	.bss.go..C382,"aw",@nobits
	.p2align	4
go..C382:
	.zero	40
	.size	go..C382, 40

	.type	go..C383,@object
	.section	.rodata.go..C383,"a",@progbits
	.p2align	4
go..C383:
	.quad	go..C381
	.quad	0
	.quad	go..C382
	.quad	0
	.quad	0
	.size	go..C383, 40

	.type	type...1int32,@object
	.section	.rodata.type...1int32,"aG",@progbits,type...1int32,comdat
	.weak	type...1int32
	.p2align	4
type...1int32:
	.quad	8
	.quad	8
	.long	2958964441
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C384
	.quad	0
	.quad	0
	.quad	int32..d
	.size	type...1int32, 80

	.type	.Lconst.207,@object
	.section	.rodata..Lconst.207,"a",@progbits
.Lconst.207:
	.asciz	"*int32"
	.size	.Lconst.207, 7

	.type	go..C384,@object
	.section	.rodata.go..C384,"a",@progbits
	.p2align	3
go..C384:
	.quad	.Lconst.207
	.quad	6
	.size	go..C384, 16

	.type	go..C385,@object
	.section	.data.go..C385,"aw",@progbits
	.p2align	3
go..C385:
	.quad	int32..d
	.size	go..C385, 8

	.type	type...1command_line_arguments.token,@object
	.section	.rodata.type...1command_line_arguments.token,"aG",@progbits,type...1command_line_arguments.token,comdat
	.weak	type...1command_line_arguments.token
	.p2align	4
type...1command_line_arguments.token:
	.quad	8
	.quad	8
	.long	3044285561
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C386
	.quad	0
	.quad	0
	.quad	command_line_arguments..command_line_arguments.token..d
	.size	type...1command_line_arguments.token, 80

	.type	.Lconst.208,@object
	.section	.rodata..Lconst.208,"a",@progbits
.Lconst.208:
	.asciz	"*\tcommand_line_arguments\tparser.token"
	.size	.Lconst.208, 38

	.type	go..C386,@object
	.section	.rodata.go..C386,"a",@progbits
	.p2align	3
go..C386:
	.quad	.Lconst.208
	.quad	37
	.size	go..C386, 16

	.type	command_line_arguments..command_line_arguments.token..d,@object
	.section	.rodata.command_line_arguments..command_line_arguments.token..d,"a",@progbits
	.globl	command_line_arguments..command_line_arguments.token..d
	.p2align	4
command_line_arguments..command_line_arguments.token..d:
	.quad	32
	.quad	32
	.long	1800880583
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ka
	.quad	go..C387
	.quad	go..C391
	.quad	type...1command_line_arguments.token
	.quad	go..C395
	.quad	3
	.quad	3
	.size	command_line_arguments..command_line_arguments.token..d, 96

	.type	gcbits..ka,@object
	.section	.rodata.gcbits..ka,"aG",@progbits,gcbits..ka,comdat
	.weak	gcbits..ka
gcbits..ka:
	.byte	10
	.size	gcbits..ka, 1

	.type	.Lconst.209,@object
	.section	.rodata..Lconst.209,"a",@progbits
.Lconst.209:
	.asciz	"\tcommand_line_arguments\tparser.token"
	.size	.Lconst.209, 37

	.type	go..C387,@object
	.section	.rodata.go..C387,"a",@progbits
	.p2align	3
go..C387:
	.quad	.Lconst.209
	.quad	36
	.size	go..C387, 16

	.type	.Lconst.210,@object
	.section	.rodata..Lconst.210,"a",@progbits
.Lconst.210:
	.asciz	"token"
	.size	.Lconst.210, 6

	.type	go..C388,@object
	.section	.rodata.go..C388,"a",@progbits
	.p2align	3
go..C388:
	.quad	.Lconst.210
	.quad	5
	.size	go..C388, 16

	.type	go..C389,@object
	.section	.rodata.go..C389,"a",@progbits
	.p2align	3
go..C389:
	.quad	.Lconst.63
	.quad	22
	.size	go..C389, 16

	.type	go..C390,@object
	.section	.bss.go..C390,"aw",@nobits
	.p2align	4
go..C390:
	.zero	40
	.size	go..C390, 40

	.type	go..C391,@object
	.section	.rodata.go..C391,"a",@progbits
	.p2align	4
go..C391:
	.quad	go..C388
	.quad	go..C389
	.quad	go..C390
	.quad	0
	.quad	0
	.size	go..C391, 40

	.type	.Lconst.211,@object
	.section	.rodata..Lconst.211,"a",@progbits
.Lconst.211:
	.asciz	"Kind"
	.size	.Lconst.211, 5

	.type	go..C392,@object
	.section	.rodata.go..C392,"a",@progbits
	.p2align	3
go..C392:
	.quad	.Lconst.211
	.quad	4
	.size	go..C392, 16

	.type	go..C393,@object
	.section	.rodata.go..C393,"a",@progbits
	.p2align	3
go..C393:
	.quad	.Lconst.85
	.quad	5
	.size	go..C393, 16

	.type	.Lconst.212,@object
	.section	.rodata..Lconst.212,"a",@progbits
.Lconst.212:
	.asciz	"Data"
	.size	.Lconst.212, 5

	.type	go..C394,@object
	.section	.rodata.go..C394,"a",@progbits
	.p2align	3
go..C394:
	.quad	.Lconst.212
	.quad	4
	.size	go..C394, 16

	.type	go..C395,@object
	.section	.data.go..C395,"aw",@progbits
	.p2align	4
go..C395:
	.quad	go..C392
	.quad	0
	.quad	int32..d
	.quad	0
	.quad	0
	.quad	go..C393
	.quad	0
	.quad	string..d
	.quad	0
	.quad	16
	.quad	go..C394
	.quad	0
	.quad	type..map.6string.7string
	.quad	0
	.quad	48
	.size	go..C395, 120

	.type	go..C396,@object
	.section	.data.go..C396,"aw",@progbits
	.p2align	3
go..C396:
	.quad	type...1command_line_arguments.token
	.size	go..C396, 8

	.type	type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9:
	.quad	8
	.quad	8
	.long	2479971496
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C397
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C398
	.quad	2
	.quad	2
	.quad	go..C399
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9, 128

	.type	.Lconst.213,@object
	.section	.rodata..Lconst.213,"a",@progbits
.Lconst.213:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser, int32) *\tcommand_line_arguments\tparser.token"
	.size	.Lconst.213, 90

	.type	go..C397,@object
	.section	.rodata.go..C397,"a",@progbits
	.p2align	3
go..C397:
	.quad	.Lconst.213
	.quad	89
	.size	go..C397, 16

	.type	go..C398,@object
	.section	.data.go..C398,"aw",@progbits
	.p2align	3
go..C398:
	.quad	type...1command_line_arguments.Parser
	.quad	int32..d
	.size	go..C398, 16

	.type	go..C399,@object
	.section	.data.go..C399,"aw",@progbits
	.p2align	3
go..C399:
	.quad	type...1command_line_arguments.token
	.size	go..C399, 8

	.type	.Lconst.214,@object
	.section	.rodata..Lconst.214,"a",@progbits
.Lconst.214:
	.asciz	"parse"
	.size	.Lconst.214, 6

	.type	go..C400,@object
	.section	.rodata.go..C400,"a",@progbits
	.p2align	3
go..C400:
	.quad	.Lconst.214
	.quad	5
	.size	go..C400, 16

	.type	go..C401,@object
	.section	.rodata.go..C401,"a",@progbits
	.p2align	3
go..C401:
	.quad	.Lconst.63
	.quad	22
	.size	go..C401, 16

	.type	type..func.8.9.8command_line_arguments.Node.9,@object
	.section	.rodata.type..func.8.9.8command_line_arguments.Node.9,"aG",@progbits,type..func.8.9.8command_line_arguments.Node.9,comdat
	.weak	type..func.8.9.8command_line_arguments.Node.9
	.p2align	4
type..func.8.9.8command_line_arguments.Node.9:
	.quad	8
	.quad	8
	.long	4280784392
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C402
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C403
	.quad	0
	.quad	0
	.quad	go..C404
	.quad	1
	.quad	1
	.size	type..func.8.9.8command_line_arguments.Node.9, 128

	.type	.Lconst.215,@object
	.section	.rodata..Lconst.215,"a",@progbits
.Lconst.215:
	.asciz	"func() \tcommand_line_arguments\tparser.Node"
	.size	.Lconst.215, 43

	.type	go..C402,@object
	.section	.rodata.go..C402,"a",@progbits
	.p2align	3
go..C402:
	.quad	.Lconst.215
	.quad	42
	.size	go..C402, 16

	.type	go..C403,@object
	.section	.bss.go..C403,"aw",@nobits
	.p2align	3
go..C403:
	.zero	8
	.size	go..C403, 8

	.type	go..C404,@object
	.section	.data.go..C404,"aw",@progbits
	.p2align	3
go..C404:
	.quad	command_line_arguments.Node..d
	.size	go..C404, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9:
	.quad	8
	.quad	8
	.long	1954085160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C405
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C406
	.quad	1
	.quad	1
	.quad	go..C407
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9, 128

	.type	.Lconst.216,@object
	.section	.rodata..Lconst.216,"a",@progbits
.Lconst.216:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) \tcommand_line_arguments\tparser.Node"
	.size	.Lconst.216, 81

	.type	go..C405,@object
	.section	.rodata.go..C405,"a",@progbits
	.p2align	3
go..C405:
	.quad	.Lconst.216
	.quad	80
	.size	go..C405, 16

	.type	go..C406,@object
	.section	.data.go..C406,"aw",@progbits
	.p2align	3
go..C406:
	.quad	type...1command_line_arguments.Parser
	.size	go..C406, 8

	.type	go..C407,@object
	.section	.data.go..C407,"aw",@progbits
	.p2align	3
go..C407:
	.quad	command_line_arguments.Node..d
	.size	go..C407, 8

	.type	.Lconst.217,@object
	.section	.rodata..Lconst.217,"a",@progbits
.Lconst.217:
	.asciz	"parseAssignment"
	.size	.Lconst.217, 16

	.type	go..C408,@object
	.section	.rodata.go..C408,"a",@progbits
	.p2align	3
go..C408:
	.quad	.Lconst.217
	.quad	15
	.size	go..C408, 16

	.type	go..C409,@object
	.section	.rodata.go..C409,"a",@progbits
	.p2align	3
go..C409:
	.quad	.Lconst.63
	.quad	22
	.size	go..C409, 16

	.type	type..func.8.9.8.1command_line_arguments.Assignment.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Assignment.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Assignment.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Assignment.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Assignment.9:
	.quad	8
	.quad	8
	.long	2655350344
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C410
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C411
	.quad	0
	.quad	0
	.quad	go..C412
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Assignment.9, 128

	.type	.Lconst.218,@object
	.section	.rodata..Lconst.218,"a",@progbits
.Lconst.218:
	.asciz	"func() *\tcommand_line_arguments\tparser.Assignment"
	.size	.Lconst.218, 50

	.type	go..C410,@object
	.section	.rodata.go..C410,"a",@progbits
	.p2align	3
go..C410:
	.quad	.Lconst.218
	.quad	49
	.size	go..C410, 16

	.type	go..C411,@object
	.section	.bss.go..C411,"aw",@nobits
	.p2align	3
go..C411:
	.zero	8
	.size	go..C411, 8

	.type	go..C412,@object
	.section	.data.go..C412,"aw",@progbits
	.p2align	3
go..C412:
	.quad	type...1command_line_arguments.Assignment
	.size	go..C412, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9:
	.quad	8
	.quad	8
	.long	328651112
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C413
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C414
	.quad	1
	.quad	1
	.quad	go..C415
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9, 128

	.type	.Lconst.219,@object
	.section	.rodata..Lconst.219,"a",@progbits
.Lconst.219:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Assignment"
	.size	.Lconst.219, 88

	.type	go..C413,@object
	.section	.rodata.go..C413,"a",@progbits
	.p2align	3
go..C413:
	.quad	.Lconst.219
	.quad	87
	.size	go..C413, 16

	.type	go..C414,@object
	.section	.data.go..C414,"aw",@progbits
	.p2align	3
go..C414:
	.quad	type...1command_line_arguments.Parser
	.size	go..C414, 8

	.type	go..C415,@object
	.section	.data.go..C415,"aw",@progbits
	.p2align	3
go..C415:
	.quad	type...1command_line_arguments.Assignment
	.size	go..C415, 8

	.type	.Lconst.220,@object
	.section	.rodata..Lconst.220,"a",@progbits
.Lconst.220:
	.asciz	"parseBlock"
	.size	.Lconst.220, 11

	.type	go..C416,@object
	.section	.rodata.go..C416,"a",@progbits
	.p2align	3
go..C416:
	.quad	.Lconst.220
	.quad	10
	.size	go..C416, 16

	.type	go..C417,@object
	.section	.rodata.go..C417,"a",@progbits
	.p2align	3
go..C417:
	.quad	.Lconst.63
	.quad	22
	.size	go..C417, 16

	.type	type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9,@object
	.section	.rodata.type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9,"aG",@progbits,type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9,comdat
	.weak	type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9
	.p2align	4
type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9:
	.quad	8
	.quad	8
	.long	2778552648
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C418
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C419
	.quad	1
	.quad	1
	.quad	go..C420
	.quad	1
	.quad	1
	.size	type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9, 128

	.type	.Lconst.221,@object
	.section	.rodata..Lconst.221,"a",@progbits
.Lconst.221:
	.asciz	"func(\tcommand_line_arguments\tparser.Node) *\tcommand_line_arguments\tparser.Block"
	.size	.Lconst.221, 80

	.type	go..C418,@object
	.section	.rodata.go..C418,"a",@progbits
	.p2align	3
go..C418:
	.quad	.Lconst.221
	.quad	79
	.size	go..C418, 16

	.type	go..C419,@object
	.section	.data.go..C419,"aw",@progbits
	.p2align	3
go..C419:
	.quad	command_line_arguments.Node..d
	.size	go..C419, 8

	.type	go..C420,@object
	.section	.data.go..C420,"aw",@progbits
	.p2align	3
go..C420:
	.quad	type...1command_line_arguments.Block
	.size	go..C420, 8

	.type	type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9:
	.quad	8
	.quad	8
	.long	444761960
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C421
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C422
	.quad	2
	.quad	2
	.quad	go..C423
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9, 128

	.type	.Lconst.222,@object
	.section	.rodata..Lconst.222,"a",@progbits
.Lconst.222:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser, \tcommand_line_arguments\tparser.Node) *\tcommand_line_arguments\tparser.Block"
	.size	.Lconst.222, 120

	.type	go..C421,@object
	.section	.rodata.go..C421,"a",@progbits
	.p2align	3
go..C421:
	.quad	.Lconst.222
	.quad	119
	.size	go..C421, 16

	.type	go..C422,@object
	.section	.data.go..C422,"aw",@progbits
	.p2align	3
go..C422:
	.quad	type...1command_line_arguments.Parser
	.quad	command_line_arguments.Node..d
	.size	go..C422, 16

	.type	go..C423,@object
	.section	.data.go..C423,"aw",@progbits
	.p2align	3
go..C423:
	.quad	type...1command_line_arguments.Block
	.size	go..C423, 8

	.type	.Lconst.223,@object
	.section	.rodata..Lconst.223,"a",@progbits
.Lconst.223:
	.asciz	"parseComment"
	.size	.Lconst.223, 13

	.type	go..C424,@object
	.section	.rodata.go..C424,"a",@progbits
	.p2align	3
go..C424:
	.quad	.Lconst.223
	.quad	12
	.size	go..C424, 16

	.type	go..C425,@object
	.section	.rodata.go..C425,"a",@progbits
	.p2align	3
go..C425:
	.quad	.Lconst.63
	.quad	22
	.size	go..C425, 16

	.type	type..func.8.9.8.1command_line_arguments.Comment.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Comment.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Comment.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Comment.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Comment.9:
	.quad	8
	.quad	8
	.long	1141890632
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C426
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C427
	.quad	0
	.quad	0
	.quad	go..C428
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Comment.9, 128

	.type	.Lconst.224,@object
	.section	.rodata..Lconst.224,"a",@progbits
.Lconst.224:
	.asciz	"func() *\tcommand_line_arguments\tparser.Comment"
	.size	.Lconst.224, 47

	.type	go..C426,@object
	.section	.rodata.go..C426,"a",@progbits
	.p2align	3
go..C426:
	.quad	.Lconst.224
	.quad	46
	.size	go..C426, 16

	.type	go..C427,@object
	.section	.bss.go..C427,"aw",@nobits
	.p2align	3
go..C427:
	.zero	8
	.size	go..C427, 8

	.type	go..C428,@object
	.section	.data.go..C428,"aw",@progbits
	.p2align	3
go..C428:
	.quad	type...1command_line_arguments.Comment
	.size	go..C428, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9:
	.quad	8
	.quad	8
	.long	3110158696
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C429
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C430
	.quad	1
	.quad	1
	.quad	go..C431
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9, 128

	.type	.Lconst.225,@object
	.section	.rodata..Lconst.225,"a",@progbits
.Lconst.225:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Comment"
	.size	.Lconst.225, 85

	.type	go..C429,@object
	.section	.rodata.go..C429,"a",@progbits
	.p2align	3
go..C429:
	.quad	.Lconst.225
	.quad	84
	.size	go..C429, 16

	.type	go..C430,@object
	.section	.data.go..C430,"aw",@progbits
	.p2align	3
go..C430:
	.quad	type...1command_line_arguments.Parser
	.size	go..C430, 8

	.type	go..C431,@object
	.section	.data.go..C431,"aw",@progbits
	.p2align	3
go..C431:
	.quad	type...1command_line_arguments.Comment
	.size	go..C431, 8

	.type	.Lconst.226,@object
	.section	.rodata..Lconst.226,"a",@progbits
.Lconst.226:
	.asciz	"parseDoctype"
	.size	.Lconst.226, 13

	.type	go..C432,@object
	.section	.rodata.go..C432,"a",@progbits
	.p2align	3
go..C432:
	.quad	.Lconst.226
	.quad	12
	.size	go..C432, 16

	.type	go..C433,@object
	.section	.rodata.go..C433,"a",@progbits
	.p2align	3
go..C433:
	.quad	.Lconst.63
	.quad	22
	.size	go..C433, 16

	.type	type..func.8.9.8.1command_line_arguments.Doctype.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Doctype.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Doctype.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Doctype.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Doctype.9:
	.quad	8
	.quad	8
	.long	2561043016
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C434
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C435
	.quad	0
	.quad	0
	.quad	go..C436
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Doctype.9, 128

	.type	.Lconst.227,@object
	.section	.rodata..Lconst.227,"a",@progbits
.Lconst.227:
	.asciz	"func() *\tcommand_line_arguments\tparser.Doctype"
	.size	.Lconst.227, 47

	.type	go..C434,@object
	.section	.rodata.go..C434,"a",@progbits
	.p2align	3
go..C434:
	.quad	.Lconst.227
	.quad	46
	.size	go..C434, 16

	.type	go..C435,@object
	.section	.bss.go..C435,"aw",@nobits
	.p2align	3
go..C435:
	.zero	8
	.size	go..C435, 8

	.type	go..C436,@object
	.section	.data.go..C436,"aw",@progbits
	.p2align	3
go..C436:
	.quad	type...1command_line_arguments.Doctype
	.size	go..C436, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9:
	.quad	8
	.quad	8
	.long	234343784
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C437
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C438
	.quad	1
	.quad	1
	.quad	go..C439
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9, 128

	.type	.Lconst.228,@object
	.section	.rodata..Lconst.228,"a",@progbits
.Lconst.228:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Doctype"
	.size	.Lconst.228, 85

	.type	go..C437,@object
	.section	.rodata.go..C437,"a",@progbits
	.p2align	3
go..C437:
	.quad	.Lconst.228
	.quad	84
	.size	go..C437, 16

	.type	go..C438,@object
	.section	.data.go..C438,"aw",@progbits
	.p2align	3
go..C438:
	.quad	type...1command_line_arguments.Parser
	.size	go..C438, 8

	.type	go..C439,@object
	.section	.data.go..C439,"aw",@progbits
	.p2align	3
go..C439:
	.quad	type...1command_line_arguments.Doctype
	.size	go..C439, 8

	.type	.Lconst.229,@object
	.section	.rodata..Lconst.229,"a",@progbits
.Lconst.229:
	.asciz	"parseEach"
	.size	.Lconst.229, 10

	.type	go..C440,@object
	.section	.rodata.go..C440,"a",@progbits
	.p2align	3
go..C440:
	.quad	.Lconst.229
	.quad	9
	.size	go..C440, 16

	.type	go..C441,@object
	.section	.rodata.go..C441,"a",@progbits
	.p2align	3
go..C441:
	.quad	.Lconst.63
	.quad	22
	.size	go..C441, 16

	.type	type..func.8.9.8.1command_line_arguments.Each.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Each.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Each.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Each.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Each.9:
	.quad	8
	.quad	8
	.long	3871059528
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C442
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C443
	.quad	0
	.quad	0
	.quad	go..C444
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Each.9, 128

	.type	.Lconst.230,@object
	.section	.rodata..Lconst.230,"a",@progbits
.Lconst.230:
	.asciz	"func() *\tcommand_line_arguments\tparser.Each"
	.size	.Lconst.230, 44

	.type	go..C442,@object
	.section	.rodata.go..C442,"a",@progbits
	.p2align	3
go..C442:
	.quad	.Lconst.230
	.quad	43
	.size	go..C442, 16

	.type	go..C443,@object
	.section	.bss.go..C443,"aw",@nobits
	.p2align	3
go..C443:
	.zero	8
	.size	go..C443, 8

	.type	go..C444,@object
	.section	.data.go..C444,"aw",@progbits
	.p2align	3
go..C444:
	.quad	type...1command_line_arguments.Each
	.size	go..C444, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9:
	.quad	8
	.quad	8
	.long	1544360296
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C445
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C446
	.quad	1
	.quad	1
	.quad	go..C447
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9, 128

	.type	.Lconst.231,@object
	.section	.rodata..Lconst.231,"a",@progbits
.Lconst.231:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Each"
	.size	.Lconst.231, 82

	.type	go..C445,@object
	.section	.rodata.go..C445,"a",@progbits
	.p2align	3
go..C445:
	.quad	.Lconst.231
	.quad	81
	.size	go..C445, 16

	.type	go..C446,@object
	.section	.data.go..C446,"aw",@progbits
	.p2align	3
go..C446:
	.quad	type...1command_line_arguments.Parser
	.size	go..C446, 8

	.type	go..C447,@object
	.section	.data.go..C447,"aw",@progbits
	.p2align	3
go..C447:
	.quad	type...1command_line_arguments.Each
	.size	go..C447, 8

	.type	.Lconst.232,@object
	.section	.rodata..Lconst.232,"a",@progbits
.Lconst.232:
	.asciz	"parseExtends"
	.size	.Lconst.232, 13

	.type	go..C448,@object
	.section	.rodata.go..C448,"a",@progbits
	.p2align	3
go..C448:
	.quad	.Lconst.232
	.quad	12
	.size	go..C448, 16

	.type	go..C449,@object
	.section	.rodata.go..C449,"a",@progbits
	.p2align	3
go..C449:
	.quad	.Lconst.63
	.quad	22
	.size	go..C449, 16

	.type	.Lconst.233,@object
	.section	.rodata..Lconst.233,"a",@progbits
.Lconst.233:
	.asciz	"parseIf"
	.size	.Lconst.233, 8

	.type	go..C450,@object
	.section	.rodata.go..C450,"a",@progbits
	.p2align	3
go..C450:
	.quad	.Lconst.233
	.quad	7
	.size	go..C450, 16

	.type	go..C451,@object
	.section	.rodata.go..C451,"a",@progbits
	.p2align	3
go..C451:
	.quad	.Lconst.63
	.quad	22
	.size	go..C451, 16

	.type	type..func.8.9.8.1command_line_arguments.Condition.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Condition.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Condition.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Condition.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Condition.9:
	.quad	8
	.quad	8
	.long	1512808008
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C452
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C453
	.quad	0
	.quad	0
	.quad	go..C454
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Condition.9, 128

	.type	.Lconst.234,@object
	.section	.rodata..Lconst.234,"a",@progbits
.Lconst.234:
	.asciz	"func() *\tcommand_line_arguments\tparser.Condition"
	.size	.Lconst.234, 49

	.type	go..C452,@object
	.section	.rodata.go..C452,"a",@progbits
	.p2align	3
go..C452:
	.quad	.Lconst.234
	.quad	48
	.size	go..C452, 16

	.type	go..C453,@object
	.section	.bss.go..C453,"aw",@nobits
	.p2align	3
go..C453:
	.zero	8
	.size	go..C453, 8

	.type	go..C454,@object
	.section	.data.go..C454,"aw",@progbits
	.p2align	3
go..C454:
	.quad	type...1command_line_arguments.Condition
	.size	go..C454, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9:
	.quad	8
	.quad	8
	.long	3481076072
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C455
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C456
	.quad	1
	.quad	1
	.quad	go..C457
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9, 128

	.type	.Lconst.235,@object
	.section	.rodata..Lconst.235,"a",@progbits
.Lconst.235:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Condition"
	.size	.Lconst.235, 87

	.type	go..C455,@object
	.section	.rodata.go..C455,"a",@progbits
	.p2align	3
go..C455:
	.quad	.Lconst.235
	.quad	86
	.size	go..C455, 16

	.type	go..C456,@object
	.section	.data.go..C456,"aw",@progbits
	.p2align	3
go..C456:
	.quad	type...1command_line_arguments.Parser
	.size	go..C456, 8

	.type	go..C457,@object
	.section	.data.go..C457,"aw",@progbits
	.p2align	3
go..C457:
	.quad	type...1command_line_arguments.Condition
	.size	go..C457, 8

	.type	.Lconst.236,@object
	.section	.rodata..Lconst.236,"a",@progbits
.Lconst.236:
	.asciz	"parseImport"
	.size	.Lconst.236, 12

	.type	go..C458,@object
	.section	.rodata.go..C458,"a",@progbits
	.p2align	3
go..C458:
	.quad	.Lconst.236
	.quad	11
	.size	go..C458, 16

	.type	go..C459,@object
	.section	.rodata.go..C459,"a",@progbits
	.p2align	3
go..C459:
	.quad	.Lconst.63
	.quad	22
	.size	go..C459, 16

	.type	.Lconst.237,@object
	.section	.rodata..Lconst.237,"a",@progbits
.Lconst.237:
	.asciz	"parseMixin"
	.size	.Lconst.237, 11

	.type	go..C460,@object
	.section	.rodata.go..C460,"a",@progbits
	.p2align	3
go..C460:
	.quad	.Lconst.237
	.quad	10
	.size	go..C460, 16

	.type	go..C461,@object
	.section	.rodata.go..C461,"a",@progbits
	.p2align	3
go..C461:
	.quad	.Lconst.63
	.quad	22
	.size	go..C461, 16

	.type	type..func.8.9.8.1command_line_arguments.Mixin.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Mixin.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Mixin.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Mixin.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Mixin.9:
	.quad	8
	.quad	8
	.long	415116872
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C462
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C463
	.quad	0
	.quad	0
	.quad	go..C464
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Mixin.9, 128

	.type	.Lconst.238,@object
	.section	.rodata..Lconst.238,"a",@progbits
.Lconst.238:
	.asciz	"func() *\tcommand_line_arguments\tparser.Mixin"
	.size	.Lconst.238, 45

	.type	go..C462,@object
	.section	.rodata.go..C462,"a",@progbits
	.p2align	3
go..C462:
	.quad	.Lconst.238
	.quad	44
	.size	go..C462, 16

	.type	go..C463,@object
	.section	.bss.go..C463,"aw",@nobits
	.p2align	3
go..C463:
	.zero	8
	.size	go..C463, 8

	.type	go..C464,@object
	.section	.data.go..C464,"aw",@progbits
	.p2align	3
go..C464:
	.quad	type...1command_line_arguments.Mixin
	.size	go..C464, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9:
	.quad	8
	.quad	8
	.long	2383384936
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C465
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C466
	.quad	1
	.quad	1
	.quad	go..C467
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9, 128

	.type	.Lconst.239,@object
	.section	.rodata..Lconst.239,"a",@progbits
.Lconst.239:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Mixin"
	.size	.Lconst.239, 83

	.type	go..C465,@object
	.section	.rodata.go..C465,"a",@progbits
	.p2align	3
go..C465:
	.quad	.Lconst.239
	.quad	82
	.size	go..C465, 16

	.type	go..C466,@object
	.section	.data.go..C466,"aw",@progbits
	.p2align	3
go..C466:
	.quad	type...1command_line_arguments.Parser
	.size	go..C466, 8

	.type	go..C467,@object
	.section	.data.go..C467,"aw",@progbits
	.p2align	3
go..C467:
	.quad	type...1command_line_arguments.Mixin
	.size	go..C467, 8

	.type	.Lconst.240,@object
	.section	.rodata..Lconst.240,"a",@progbits
.Lconst.240:
	.asciz	"parseMixinCall"
	.size	.Lconst.240, 15

	.type	go..C468,@object
	.section	.rodata.go..C468,"a",@progbits
	.p2align	3
go..C468:
	.quad	.Lconst.240
	.quad	14
	.size	go..C468, 16

	.type	go..C469,@object
	.section	.rodata.go..C469,"a",@progbits
	.p2align	3
go..C469:
	.quad	.Lconst.63
	.quad	22
	.size	go..C469, 16

	.type	type..func.8.9.8.1command_line_arguments.MixinCall.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.MixinCall.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.MixinCall.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.MixinCall.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.MixinCall.9:
	.quad	8
	.quad	8
	.long	3541483080
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C470
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C471
	.quad	0
	.quad	0
	.quad	go..C472
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.MixinCall.9, 128

	.type	.Lconst.241,@object
	.section	.rodata..Lconst.241,"a",@progbits
.Lconst.241:
	.asciz	"func() *\tcommand_line_arguments\tparser.MixinCall"
	.size	.Lconst.241, 49

	.type	go..C470,@object
	.section	.rodata.go..C470,"a",@progbits
	.p2align	3
go..C470:
	.quad	.Lconst.241
	.quad	48
	.size	go..C470, 16

	.type	go..C471,@object
	.section	.bss.go..C471,"aw",@nobits
	.p2align	3
go..C471:
	.zero	8
	.size	go..C471, 8

	.type	go..C472,@object
	.section	.data.go..C472,"aw",@progbits
	.p2align	3
go..C472:
	.quad	type...1command_line_arguments.MixinCall
	.size	go..C472, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9:
	.quad	8
	.quad	8
	.long	1214783848
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C473
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C474
	.quad	1
	.quad	1
	.quad	go..C475
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9, 128

	.type	.Lconst.242,@object
	.section	.rodata..Lconst.242,"a",@progbits
.Lconst.242:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.MixinCall"
	.size	.Lconst.242, 87

	.type	go..C473,@object
	.section	.rodata.go..C473,"a",@progbits
	.p2align	3
go..C473:
	.quad	.Lconst.242
	.quad	86
	.size	go..C473, 16

	.type	go..C474,@object
	.section	.data.go..C474,"aw",@progbits
	.p2align	3
go..C474:
	.quad	type...1command_line_arguments.Parser
	.size	go..C474, 8

	.type	go..C475,@object
	.section	.data.go..C475,"aw",@progbits
	.p2align	3
go..C475:
	.quad	type...1command_line_arguments.MixinCall
	.size	go..C475, 8

	.type	.Lconst.243,@object
	.section	.rodata..Lconst.243,"a",@progbits
.Lconst.243:
	.asciz	"parseNamedBlock"
	.size	.Lconst.243, 16

	.type	go..C476,@object
	.section	.rodata.go..C476,"a",@progbits
	.p2align	3
go..C476:
	.quad	.Lconst.243
	.quad	15
	.size	go..C476, 16

	.type	go..C477,@object
	.section	.rodata.go..C477,"a",@progbits
	.p2align	3
go..C477:
	.quad	.Lconst.63
	.quad	22
	.size	go..C477, 16

	.type	.Lconst.244,@object
	.section	.rodata..Lconst.244,"a",@progbits
.Lconst.244:
	.asciz	"parseRelativeFile"
	.size	.Lconst.244, 18

	.type	go..C478,@object
	.section	.rodata.go..C478,"a",@progbits
	.p2align	3
go..C478:
	.quad	.Lconst.244
	.quad	17
	.size	go..C478, 16

	.type	go..C479,@object
	.section	.rodata.go..C479,"a",@progbits
	.p2align	3
go..C479:
	.quad	.Lconst.63
	.quad	22
	.size	go..C479, 16

	.type	type..func.8string.9.8.1command_line_arguments.Parser.9,@object
	.section	.rodata.type..func.8string.9.8.1command_line_arguments.Parser.9,"aG",@progbits,type..func.8string.9.8.1command_line_arguments.Parser.9,comdat
	.weak	type..func.8string.9.8.1command_line_arguments.Parser.9
	.p2align	4
type..func.8string.9.8.1command_line_arguments.Parser.9:
	.quad	8
	.quad	8
	.long	99588488
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C480
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C481
	.quad	1
	.quad	1
	.quad	go..C482
	.quad	1
	.quad	1
	.size	type..func.8string.9.8.1command_line_arguments.Parser.9, 128

	.type	.Lconst.245,@object
	.section	.rodata..Lconst.245,"a",@progbits
.Lconst.245:
	.asciz	"func(string) *\tcommand_line_arguments\tparser.Parser"
	.size	.Lconst.245, 52

	.type	go..C480,@object
	.section	.rodata.go..C480,"a",@progbits
	.p2align	3
go..C480:
	.quad	.Lconst.245
	.quad	51
	.size	go..C480, 16

	.type	go..C481,@object
	.section	.data.go..C481,"aw",@progbits
	.p2align	3
go..C481:
	.quad	string..d
	.size	go..C481, 8

	.type	go..C482,@object
	.section	.data.go..C482,"aw",@progbits
	.p2align	3
go..C482:
	.quad	type...1command_line_arguments.Parser
	.size	go..C482, 8

	.type	type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9:
	.quad	8
	.quad	8
	.long	2525876200
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C483
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C484
	.quad	2
	.quad	2
	.quad	go..C485
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9, 128

	.type	.Lconst.246,@object
	.section	.rodata..Lconst.246,"a",@progbits
.Lconst.246:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser, string) *\tcommand_line_arguments\tparser.Parser"
	.size	.Lconst.246, 92

	.type	go..C483,@object
	.section	.rodata.go..C483,"a",@progbits
	.p2align	3
go..C483:
	.quad	.Lconst.246
	.quad	91
	.size	go..C483, 16

	.type	go..C484,@object
	.section	.data.go..C484,"aw",@progbits
	.p2align	3
go..C484:
	.quad	type...1command_line_arguments.Parser
	.quad	string..d
	.size	go..C484, 16

	.type	go..C485,@object
	.section	.data.go..C485,"aw",@progbits
	.p2align	3
go..C485:
	.quad	type...1command_line_arguments.Parser
	.size	go..C485, 8

	.type	.Lconst.247,@object
	.section	.rodata..Lconst.247,"a",@progbits
.Lconst.247:
	.asciz	"parseTag"
	.size	.Lconst.247, 9

	.type	go..C486,@object
	.section	.rodata.go..C486,"a",@progbits
	.p2align	3
go..C486:
	.quad	.Lconst.247
	.quad	8
	.size	go..C486, 16

	.type	go..C487,@object
	.section	.rodata.go..C487,"a",@progbits
	.p2align	3
go..C487:
	.quad	.Lconst.63
	.quad	22
	.size	go..C487, 16

	.type	type..func.8.9.8.1command_line_arguments.Tag.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Tag.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Tag.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Tag.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Tag.9:
	.quad	8
	.quad	8
	.long	3869880904
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C488
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C489
	.quad	0
	.quad	0
	.quad	go..C490
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Tag.9, 128

	.type	.Lconst.248,@object
	.section	.rodata..Lconst.248,"a",@progbits
.Lconst.248:
	.asciz	"func() *\tcommand_line_arguments\tparser.Tag"
	.size	.Lconst.248, 43

	.type	go..C488,@object
	.section	.rodata.go..C488,"a",@progbits
	.p2align	3
go..C488:
	.quad	.Lconst.248
	.quad	42
	.size	go..C488, 16

	.type	go..C489,@object
	.section	.bss.go..C489,"aw",@nobits
	.p2align	3
go..C489:
	.zero	8
	.size	go..C489, 8

	.type	go..C490,@object
	.section	.data.go..C490,"aw",@progbits
	.p2align	3
go..C490:
	.quad	type...1command_line_arguments.Tag
	.size	go..C490, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9:
	.quad	8
	.quad	8
	.long	1543181672
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C491
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C492
	.quad	1
	.quad	1
	.quad	go..C493
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9, 128

	.type	.Lconst.249,@object
	.section	.rodata..Lconst.249,"a",@progbits
.Lconst.249:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Tag"
	.size	.Lconst.249, 81

	.type	go..C491,@object
	.section	.rodata.go..C491,"a",@progbits
	.p2align	3
go..C491:
	.quad	.Lconst.249
	.quad	80
	.size	go..C491, 16

	.type	go..C492,@object
	.section	.data.go..C492,"aw",@progbits
	.p2align	3
go..C492:
	.quad	type...1command_line_arguments.Parser
	.size	go..C492, 8

	.type	go..C493,@object
	.section	.data.go..C493,"aw",@progbits
	.p2align	3
go..C493:
	.quad	type...1command_line_arguments.Tag
	.size	go..C493, 8

	.type	.Lconst.250,@object
	.section	.rodata..Lconst.250,"a",@progbits
.Lconst.250:
	.asciz	"parseText"
	.size	.Lconst.250, 10

	.type	go..C494,@object
	.section	.rodata.go..C494,"a",@progbits
	.p2align	3
go..C494:
	.quad	.Lconst.250
	.quad	9
	.size	go..C494, 16

	.type	go..C495,@object
	.section	.rodata.go..C495,"a",@progbits
	.p2align	3
go..C495:
	.quad	.Lconst.63
	.quad	22
	.size	go..C495, 16

	.type	type..func.8.9.8.1command_line_arguments.Text.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.Text.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.Text.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.Text.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.Text.9:
	.quad	8
	.quad	8
	.long	2871002696
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C496
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C497
	.quad	0
	.quad	0
	.quad	go..C498
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.Text.9, 128

	.type	.Lconst.251,@object
	.section	.rodata..Lconst.251,"a",@progbits
.Lconst.251:
	.asciz	"func() *\tcommand_line_arguments\tparser.Text"
	.size	.Lconst.251, 44

	.type	go..C496,@object
	.section	.rodata.go..C496,"a",@progbits
	.p2align	3
go..C496:
	.quad	.Lconst.251
	.quad	43
	.size	go..C496, 16

	.type	go..C497,@object
	.section	.bss.go..C497,"aw",@nobits
	.p2align	3
go..C497:
	.zero	8
	.size	go..C497, 8

	.type	go..C498,@object
	.section	.data.go..C498,"aw",@progbits
	.p2align	3
go..C498:
	.quad	type...1command_line_arguments.Text
	.size	go..C498, 8

	.type	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9:
	.quad	8
	.quad	8
	.long	544303464
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C499
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C500
	.quad	1
	.quad	1
	.quad	go..C501
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9, 128

	.type	.Lconst.252,@object
	.section	.rodata..Lconst.252,"a",@progbits
.Lconst.252:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) *\tcommand_line_arguments\tparser.Text"
	.size	.Lconst.252, 82

	.type	go..C499,@object
	.section	.rodata.go..C499,"a",@progbits
	.p2align	3
go..C499:
	.quad	.Lconst.252
	.quad	81
	.size	go..C499, 16

	.type	go..C500,@object
	.section	.data.go..C500,"aw",@progbits
	.p2align	3
go..C500:
	.quad	type...1command_line_arguments.Parser
	.size	go..C500, 8

	.type	go..C501,@object
	.section	.data.go..C501,"aw",@progbits
	.p2align	3
go..C501:
	.quad	type...1command_line_arguments.Text
	.size	go..C501, 8

	.type	.Lconst.253,@object
	.section	.rodata..Lconst.253,"a",@progbits
.Lconst.253:
	.asciz	"pos"
	.size	.Lconst.253, 4

	.type	go..C502,@object
	.section	.rodata.go..C502,"a",@progbits
	.p2align	3
go..C502:
	.quad	.Lconst.253
	.quad	3
	.size	go..C502, 16

	.type	go..C503,@object
	.section	.rodata.go..C503,"a",@progbits
	.p2align	3
go..C503:
	.quad	.Lconst.63
	.quad	22
	.size	go..C503, 16

	.type	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	4131112104
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C504
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C505
	.quad	1
	.quad	1
	.quad	go..C506
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.254,@object
	.section	.rodata..Lconst.254,"a",@progbits
.Lconst.254:
	.asciz	"func(*\tcommand_line_arguments\tparser.Parser) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.254, 91

	.type	go..C504,@object
	.section	.rodata.go..C504,"a",@progbits
	.p2align	3
go..C504:
	.quad	.Lconst.254
	.quad	90
	.size	go..C504, 16

	.type	go..C505,@object
	.section	.data.go..C505,"aw",@progbits
	.p2align	3
go..C505:
	.quad	type...1command_line_arguments.Parser
	.size	go..C505, 8

	.type	go..C506,@object
	.section	.data.go..C506,"aw",@progbits
	.p2align	3
go..C506:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C506, 8

	.type	go..C507,@object
	.section	.data.go..C507,"aw",@progbits
	.p2align	4
go..C507:
	.quad	go..C348
	.quad	0
	.quad	type..func.8.9.8.1command_line_arguments.Block.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9
	.quad	command_line_arguments.Parser.Parse
	.quad	go..C355
	.quad	0
	.quad	type..func.8string.9.8.9
	.quad	type..func.8.1command_line_arguments.Parser.3string.9.8.9
	.quad	command_line_arguments.Parser.SetFilename
	.quad	go..C362
	.quad	0
	.quad	type..func.8net_http.FileSystem.9.8.9
	.quad	type..func.8.1command_line_arguments.Parser.3net_http.FileSystem.9.8.9
	.quad	command_line_arguments.Parser.SetVirtualFilesystem
	.quad	go..C369
	.quad	go..C370
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.9
	.quad	command_line_arguments.Parser.advance
	.quad	go..C377
	.quad	go..C378
	.quad	type..func.8int32.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.Parser.3int32.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.Parser.expect
	.quad	go..C400
	.quad	go..C401
	.quad	type..func.8.9.8command_line_arguments.Node.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.Node.9
	.quad	command_line_arguments.Parser.parse
	.quad	go..C408
	.quad	go..C409
	.quad	type..func.8.9.8.1command_line_arguments.Assignment.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Assignment.9
	.quad	command_line_arguments.Parser.parseAssignment
	.quad	go..C416
	.quad	go..C417
	.quad	type..func.8command_line_arguments.Node.9.8.1command_line_arguments.Block.9
	.quad	type..func.8.1command_line_arguments.Parser.3command_line_arguments.Node.9.8.1command_line_arguments.Block.9
	.quad	command_line_arguments.Parser.parseBlock
	.quad	go..C424
	.quad	go..C425
	.quad	type..func.8.9.8.1command_line_arguments.Comment.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Comment.9
	.quad	command_line_arguments.Parser.parseComment
	.quad	go..C432
	.quad	go..C433
	.quad	type..func.8.9.8.1command_line_arguments.Doctype.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Doctype.9
	.quad	command_line_arguments.Parser.parseDoctype
	.quad	go..C440
	.quad	go..C441
	.quad	type..func.8.9.8.1command_line_arguments.Each.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Each.9
	.quad	command_line_arguments.Parser.parseEach
	.quad	go..C448
	.quad	go..C449
	.quad	type..func.8.9.8.1command_line_arguments.Block.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9
	.quad	command_line_arguments.Parser.parseExtends
	.quad	go..C450
	.quad	go..C451
	.quad	type..func.8.9.8.1command_line_arguments.Condition.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Condition.9
	.quad	command_line_arguments.Parser.parseIf
	.quad	go..C458
	.quad	go..C459
	.quad	type..func.8.9.8.1command_line_arguments.Block.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9
	.quad	command_line_arguments.Parser.parseImport
	.quad	go..C460
	.quad	go..C461
	.quad	type..func.8.9.8.1command_line_arguments.Mixin.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Mixin.9
	.quad	command_line_arguments.Parser.parseMixin
	.quad	go..C468
	.quad	go..C469
	.quad	type..func.8.9.8.1command_line_arguments.MixinCall.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.MixinCall.9
	.quad	command_line_arguments.Parser.parseMixinCall
	.quad	go..C476
	.quad	go..C477
	.quad	type..func.8.9.8.1command_line_arguments.Block.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Block.9
	.quad	command_line_arguments.Parser.parseNamedBlock
	.quad	go..C478
	.quad	go..C479
	.quad	type..func.8string.9.8.1command_line_arguments.Parser.9
	.quad	type..func.8.1command_line_arguments.Parser.3string.9.8.1command_line_arguments.Parser.9
	.quad	command_line_arguments.Parser.parseRelativeFile
	.quad	go..C486
	.quad	go..C487
	.quad	type..func.8.9.8.1command_line_arguments.Tag.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Tag.9
	.quad	command_line_arguments.Parser.parseTag
	.quad	go..C494
	.quad	go..C495
	.quad	type..func.8.9.8.1command_line_arguments.Text.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8.1command_line_arguments.Text.9
	.quad	command_line_arguments.Parser.parseText
	.quad	go..C502
	.quad	go..C503
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.Parser.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.Parser.pos
	.size	go..C507, 840

	.type	go..C508,@object
	.section	.rodata.go..C508,"a",@progbits
	.p2align	4
go..C508:
	.quad	0
	.quad	0
	.quad	go..C507
	.quad	21
	.quad	21
	.size	go..C508, 40

	.type	type...1.1command_line_arguments.Parser,@object
	.section	.rodata.type...1.1command_line_arguments.Parser,"aG",@progbits,type...1.1command_line_arguments.Parser,comdat
	.weak	type...1.1command_line_arguments.Parser
	.p2align	4
type...1.1command_line_arguments.Parser:
	.quad	8
	.quad	8
	.long	3131617689
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C509
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Parser
	.size	type...1.1command_line_arguments.Parser, 80

	.type	.Lconst.255,@object
	.section	.rodata..Lconst.255,"a",@progbits
.Lconst.255:
	.asciz	"**\tcommand_line_arguments\tparser.Parser"
	.size	.Lconst.255, 40

	.type	go..C509,@object
	.section	.rodata.go..C509,"a",@progbits
	.p2align	3
go..C509:
	.quad	.Lconst.255
	.quad	39
	.size	go..C509, 16

	.type	.Lconst.256,@object
	.section	.rodata..Lconst.256,"a",@progbits
.Lconst.256:
	.asciz	"scanner"
	.size	.Lconst.256, 8

	.type	go..C510,@object
	.section	.rodata.go..C510,"a",@progbits
	.p2align	3
go..C510:
	.quad	.Lconst.256
	.quad	7
	.size	go..C510, 16

	.type	go..C511,@object
	.section	.rodata.go..C511,"a",@progbits
	.p2align	3
go..C511:
	.quad	.Lconst.63
	.quad	22
	.size	go..C511, 16

	.type	type...1command_line_arguments.scanner,@object
	.section	.rodata.type...1command_line_arguments.scanner,"aG",@progbits,type...1command_line_arguments.scanner,comdat
	.weak	type...1command_line_arguments.scanner
	.p2align	4
type...1command_line_arguments.scanner:
	.quad	8
	.quad	8
	.long	2462097961
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C512
	.quad	go..C571
	.quad	type...1.1command_line_arguments.scanner
	.quad	command_line_arguments..command_line_arguments.scanner..d
	.size	type...1command_line_arguments.scanner, 80

	.type	.Lconst.257,@object
	.section	.rodata..Lconst.257,"a",@progbits
.Lconst.257:
	.asciz	"*\tcommand_line_arguments\tparser.scanner"
	.size	.Lconst.257, 40

	.type	go..C512,@object
	.section	.rodata.go..C512,"a",@progbits
	.p2align	3
go..C512:
	.quad	.Lconst.257
	.quad	39
	.size	go..C512, 16

	.type	.Lconst.258,@object
	.section	.rodata..Lconst.258,"a",@progbits
.Lconst.258:
	.asciz	"Next"
	.size	.Lconst.258, 5

	.type	go..C513,@object
	.section	.rodata.go..C513,"a",@progbits
	.p2align	3
go..C513:
	.quad	.Lconst.258
	.quad	4
	.size	go..C513, 16

	.type	type..func.8.9.8.1command_line_arguments.token.9,@object
	.section	.rodata.type..func.8.9.8.1command_line_arguments.token.9,"aG",@progbits,type..func.8.9.8.1command_line_arguments.token.9,comdat
	.weak	type..func.8.9.8.1command_line_arguments.token.9
	.p2align	4
type..func.8.9.8.1command_line_arguments.token.9:
	.quad	8
	.quad	8
	.long	1560747592
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C514
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C515
	.quad	0
	.quad	0
	.quad	go..C516
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1command_line_arguments.token.9, 128

	.type	.Lconst.259,@object
	.section	.rodata..Lconst.259,"a",@progbits
.Lconst.259:
	.asciz	"func() *\tcommand_line_arguments\tparser.token"
	.size	.Lconst.259, 45

	.type	go..C514,@object
	.section	.rodata.go..C514,"a",@progbits
	.p2align	3
go..C514:
	.quad	.Lconst.259
	.quad	44
	.size	go..C514, 16

	.type	go..C515,@object
	.section	.bss.go..C515,"aw",@nobits
	.p2align	3
go..C515:
	.zero	8
	.size	go..C515, 8

	.type	go..C516,@object
	.section	.data.go..C516,"aw",@progbits
	.p2align	3
go..C516:
	.quad	type...1command_line_arguments.token
	.size	go..C516, 8

	.type	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9,"aG",@progbits,type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9,comdat
	.weak	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.p2align	4
type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9:
	.quad	8
	.quad	8
	.long	3038471016
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C517
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C518
	.quad	1
	.quad	1
	.quad	go..C519
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9, 128

	.type	.Lconst.260,@object
	.section	.rodata..Lconst.260,"a",@progbits
.Lconst.260:
	.asciz	"func(*\tcommand_line_arguments\tparser.scanner) *\tcommand_line_arguments\tparser.token"
	.size	.Lconst.260, 84

	.type	go..C517,@object
	.section	.rodata.go..C517,"a",@progbits
	.p2align	3
go..C517:
	.quad	.Lconst.260
	.quad	83
	.size	go..C517, 16

	.type	go..C518,@object
	.section	.data.go..C518,"aw",@progbits
	.p2align	3
go..C518:
	.quad	type...1command_line_arguments.scanner
	.size	go..C518, 8

	.type	go..C519,@object
	.section	.data.go..C519,"aw",@progbits
	.p2align	3
go..C519:
	.quad	type...1command_line_arguments.token
	.size	go..C519, 8

	.type	.Lconst.261,@object
	.section	.rodata..Lconst.261,"a",@progbits
.Lconst.261:
	.asciz	"NextRaw"
	.size	.Lconst.261, 8

	.type	go..C520,@object
	.section	.rodata.go..C520,"a",@progbits
	.p2align	3
go..C520:
	.quad	.Lconst.261
	.quad	7
	.size	go..C520, 16

	.type	go..C521,@object
	.section	.rodata.go..C521,"a",@progbits
	.p2align	3
go..C521:
	.quad	.Lconst.65
	.quad	3
	.size	go..C521, 16

	.type	type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9,"aG",@progbits,type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9,comdat
	.weak	type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9
	.p2align	4
type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9:
	.quad	8
	.quad	8
	.long	3640567464
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C522
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C523
	.quad	1
	.quad	1
	.quad	go..C524
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9, 128

	.type	.Lconst.262,@object
	.section	.rodata..Lconst.262,"a",@progbits
.Lconst.262:
	.asciz	"func(*\tcommand_line_arguments\tparser.scanner) \tcommand_line_arguments\tparser.SourcePosition"
	.size	.Lconst.262, 92

	.type	go..C522,@object
	.section	.rodata.go..C522,"a",@progbits
	.p2align	3
go..C522:
	.quad	.Lconst.262
	.quad	91
	.size	go..C522, 16

	.type	go..C523,@object
	.section	.data.go..C523,"aw",@progbits
	.p2align	3
go..C523:
	.quad	type...1command_line_arguments.scanner
	.size	go..C523, 8

	.type	go..C524,@object
	.section	.data.go..C524,"aw",@progbits
	.p2align	3
go..C524:
	.quad	command_line_arguments.SourcePosition..d
	.size	go..C524, 8

	.type	.Lconst.263,@object
	.section	.rodata..Lconst.263,"a",@progbits
.Lconst.263:
	.asciz	"consume"
	.size	.Lconst.263, 8

	.type	go..C525,@object
	.section	.rodata.go..C525,"a",@progbits
	.p2align	3
go..C525:
	.quad	.Lconst.263
	.quad	7
	.size	go..C525, 16

	.type	go..C526,@object
	.section	.rodata.go..C526,"a",@progbits
	.p2align	3
go..C526:
	.quad	.Lconst.63
	.quad	22
	.size	go..C526, 16

	.type	type..func.8int.9.8.9,@object
	.section	.rodata.type..func.8int.9.8.9,"aG",@progbits,type..func.8int.9.8.9,comdat
	.weak	type..func.8int.9.8.9
	.p2align	4
type..func.8int.9.8.9:
	.quad	8
	.quad	8
	.long	2284725320
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C527
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C528
	.quad	1
	.quad	1
	.quad	go..C529
	.quad	0
	.quad	0
	.size	type..func.8int.9.8.9, 128

	.type	.Lconst.264,@object
	.section	.rodata..Lconst.264,"a",@progbits
.Lconst.264:
	.asciz	"func(int)"
	.size	.Lconst.264, 10

	.type	go..C527,@object
	.section	.rodata.go..C527,"a",@progbits
	.p2align	3
go..C527:
	.quad	.Lconst.264
	.quad	9
	.size	go..C527, 16

	.type	go..C528,@object
	.section	.data.go..C528,"aw",@progbits
	.p2align	3
go..C528:
	.quad	int..d
	.size	go..C528, 8

	.type	go..C529,@object
	.section	.bss.go..C529,"aw",@nobits
	.p2align	3
go..C529:
	.zero	8
	.size	go..C529, 8

	.type	type..func.8.1command_line_arguments.scanner.3int.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.scanner.3int.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.scanner.3int.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.scanner.3int.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.scanner.3int.9.8.9:
	.quad	8
	.quad	8
	.long	1752206760
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C530
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C531
	.quad	2
	.quad	2
	.quad	go..C532
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.scanner.3int.9.8.9, 128

	.type	.Lconst.265,@object
	.section	.rodata..Lconst.265,"a",@progbits
.Lconst.265:
	.asciz	"func(*\tcommand_line_arguments\tparser.scanner, int)"
	.size	.Lconst.265, 51

	.type	go..C530,@object
	.section	.rodata.go..C530,"a",@progbits
	.p2align	3
go..C530:
	.quad	.Lconst.265
	.quad	50
	.size	go..C530, 16

	.type	go..C531,@object
	.section	.data.go..C531,"aw",@progbits
	.p2align	3
go..C531:
	.quad	type...1command_line_arguments.scanner
	.quad	int..d
	.size	go..C531, 16

	.type	go..C532,@object
	.section	.bss.go..C532,"aw",@nobits
	.p2align	3
go..C532:
	.zero	8
	.size	go..C532, 8

	.type	.Lconst.266,@object
	.section	.rodata..Lconst.266,"a",@progbits
.Lconst.266:
	.asciz	"ensureBuffer"
	.size	.Lconst.266, 13

	.type	go..C533,@object
	.section	.rodata.go..C533,"a",@progbits
	.p2align	3
go..C533:
	.quad	.Lconst.266
	.quad	12
	.size	go..C533, 16

	.type	go..C534,@object
	.section	.rodata.go..C534,"a",@progbits
	.p2align	3
go..C534:
	.quad	.Lconst.63
	.quad	22
	.size	go..C534, 16

	.type	type..func.8.1command_line_arguments.scanner.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.scanner.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.scanner.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.scanner.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.scanner.9.8.9:
	.quad	8
	.quad	8
	.long	1477723432
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C535
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C536
	.quad	1
	.quad	1
	.quad	go..C537
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.scanner.9.8.9, 128

	.type	.Lconst.267,@object
	.section	.rodata..Lconst.267,"a",@progbits
.Lconst.267:
	.asciz	"func(*\tcommand_line_arguments\tparser.scanner)"
	.size	.Lconst.267, 46

	.type	go..C535,@object
	.section	.rodata.go..C535,"a",@progbits
	.p2align	3
go..C535:
	.quad	.Lconst.267
	.quad	45
	.size	go..C535, 16

	.type	go..C536,@object
	.section	.data.go..C536,"aw",@progbits
	.p2align	3
go..C536:
	.quad	type...1command_line_arguments.scanner
	.size	go..C536, 8

	.type	go..C537,@object
	.section	.bss.go..C537,"aw",@nobits
	.p2align	3
go..C537:
	.zero	8
	.size	go..C537, 8

	.type	.Lconst.268,@object
	.section	.rodata..Lconst.268,"a",@progbits
.Lconst.268:
	.asciz	"scanAssignment"
	.size	.Lconst.268, 15

	.type	go..C538,@object
	.section	.rodata.go..C538,"a",@progbits
	.p2align	3
go..C538:
	.quad	.Lconst.268
	.quad	14
	.size	go..C538, 16

	.type	go..C539,@object
	.section	.rodata.go..C539,"a",@progbits
	.p2align	3
go..C539:
	.quad	.Lconst.63
	.quad	22
	.size	go..C539, 16

	.type	.Lconst.269,@object
	.section	.rodata..Lconst.269,"a",@progbits
.Lconst.269:
	.asciz	"scanAttribute"
	.size	.Lconst.269, 14

	.type	go..C540,@object
	.section	.rodata.go..C540,"a",@progbits
	.p2align	3
go..C540:
	.quad	.Lconst.269
	.quad	13
	.size	go..C540, 16

	.type	go..C541,@object
	.section	.rodata.go..C541,"a",@progbits
	.p2align	3
go..C541:
	.quad	.Lconst.63
	.quad	22
	.size	go..C541, 16

	.type	.Lconst.270,@object
	.section	.rodata..Lconst.270,"a",@progbits
.Lconst.270:
	.asciz	"scanBlock"
	.size	.Lconst.270, 10

	.type	go..C542,@object
	.section	.rodata.go..C542,"a",@progbits
	.p2align	3
go..C542:
	.quad	.Lconst.270
	.quad	9
	.size	go..C542, 16

	.type	go..C543,@object
	.section	.rodata.go..C543,"a",@progbits
	.p2align	3
go..C543:
	.quad	.Lconst.63
	.quad	22
	.size	go..C543, 16

	.type	.Lconst.271,@object
	.section	.rodata..Lconst.271,"a",@progbits
.Lconst.271:
	.asciz	"scanClassName"
	.size	.Lconst.271, 14

	.type	go..C544,@object
	.section	.rodata.go..C544,"a",@progbits
	.p2align	3
go..C544:
	.quad	.Lconst.271
	.quad	13
	.size	go..C544, 16

	.type	go..C545,@object
	.section	.rodata.go..C545,"a",@progbits
	.p2align	3
go..C545:
	.quad	.Lconst.63
	.quad	22
	.size	go..C545, 16

	.type	.Lconst.272,@object
	.section	.rodata..Lconst.272,"a",@progbits
.Lconst.272:
	.asciz	"scanComment"
	.size	.Lconst.272, 12

	.type	go..C546,@object
	.section	.rodata.go..C546,"a",@progbits
	.p2align	3
go..C546:
	.quad	.Lconst.272
	.quad	11
	.size	go..C546, 16

	.type	go..C547,@object
	.section	.rodata.go..C547,"a",@progbits
	.p2align	3
go..C547:
	.quad	.Lconst.63
	.quad	22
	.size	go..C547, 16

	.type	.Lconst.273,@object
	.section	.rodata..Lconst.273,"a",@progbits
.Lconst.273:
	.asciz	"scanCondition"
	.size	.Lconst.273, 14

	.type	go..C548,@object
	.section	.rodata.go..C548,"a",@progbits
	.p2align	3
go..C548:
	.quad	.Lconst.273
	.quad	13
	.size	go..C548, 16

	.type	go..C549,@object
	.section	.rodata.go..C549,"a",@progbits
	.p2align	3
go..C549:
	.quad	.Lconst.63
	.quad	22
	.size	go..C549, 16

	.type	.Lconst.274,@object
	.section	.rodata..Lconst.274,"a",@progbits
.Lconst.274:
	.asciz	"scanDoctype"
	.size	.Lconst.274, 12

	.type	go..C550,@object
	.section	.rodata.go..C550,"a",@progbits
	.p2align	3
go..C550:
	.quad	.Lconst.274
	.quad	11
	.size	go..C550, 16

	.type	go..C551,@object
	.section	.rodata.go..C551,"a",@progbits
	.p2align	3
go..C551:
	.quad	.Lconst.63
	.quad	22
	.size	go..C551, 16

	.type	.Lconst.275,@object
	.section	.rodata..Lconst.275,"a",@progbits
.Lconst.275:
	.asciz	"scanEach"
	.size	.Lconst.275, 9

	.type	go..C552,@object
	.section	.rodata.go..C552,"a",@progbits
	.p2align	3
go..C552:
	.quad	.Lconst.275
	.quad	8
	.size	go..C552, 16

	.type	go..C553,@object
	.section	.rodata.go..C553,"a",@progbits
	.p2align	3
go..C553:
	.quad	.Lconst.63
	.quad	22
	.size	go..C553, 16

	.type	.Lconst.276,@object
	.section	.rodata..Lconst.276,"a",@progbits
.Lconst.276:
	.asciz	"scanExtends"
	.size	.Lconst.276, 12

	.type	go..C554,@object
	.section	.rodata.go..C554,"a",@progbits
	.p2align	3
go..C554:
	.quad	.Lconst.276
	.quad	11
	.size	go..C554, 16

	.type	go..C555,@object
	.section	.rodata.go..C555,"a",@progbits
	.p2align	3
go..C555:
	.quad	.Lconst.63
	.quad	22
	.size	go..C555, 16

	.type	.Lconst.277,@object
	.section	.rodata..Lconst.277,"a",@progbits
.Lconst.277:
	.asciz	"scanId"
	.size	.Lconst.277, 7

	.type	go..C556,@object
	.section	.rodata.go..C556,"a",@progbits
	.p2align	3
go..C556:
	.quad	.Lconst.277
	.quad	6
	.size	go..C556, 16

	.type	go..C557,@object
	.section	.rodata.go..C557,"a",@progbits
	.p2align	3
go..C557:
	.quad	.Lconst.63
	.quad	22
	.size	go..C557, 16

	.type	.Lconst.278,@object
	.section	.rodata..Lconst.278,"a",@progbits
.Lconst.278:
	.asciz	"scanImport"
	.size	.Lconst.278, 11

	.type	go..C558,@object
	.section	.rodata.go..C558,"a",@progbits
	.p2align	3
go..C558:
	.quad	.Lconst.278
	.quad	10
	.size	go..C558, 16

	.type	go..C559,@object
	.section	.rodata.go..C559,"a",@progbits
	.p2align	3
go..C559:
	.quad	.Lconst.63
	.quad	22
	.size	go..C559, 16

	.type	.Lconst.279,@object
	.section	.rodata..Lconst.279,"a",@progbits
.Lconst.279:
	.asciz	"scanIndent"
	.size	.Lconst.279, 11

	.type	go..C560,@object
	.section	.rodata.go..C560,"a",@progbits
	.p2align	3
go..C560:
	.quad	.Lconst.279
	.quad	10
	.size	go..C560, 16

	.type	go..C561,@object
	.section	.rodata.go..C561,"a",@progbits
	.p2align	3
go..C561:
	.quad	.Lconst.63
	.quad	22
	.size	go..C561, 16

	.type	.Lconst.280,@object
	.section	.rodata..Lconst.280,"a",@progbits
.Lconst.280:
	.asciz	"scanMixin"
	.size	.Lconst.280, 10

	.type	go..C562,@object
	.section	.rodata.go..C562,"a",@progbits
	.p2align	3
go..C562:
	.quad	.Lconst.280
	.quad	9
	.size	go..C562, 16

	.type	go..C563,@object
	.section	.rodata.go..C563,"a",@progbits
	.p2align	3
go..C563:
	.quad	.Lconst.63
	.quad	22
	.size	go..C563, 16

	.type	.Lconst.281,@object
	.section	.rodata..Lconst.281,"a",@progbits
.Lconst.281:
	.asciz	"scanMixinCall"
	.size	.Lconst.281, 14

	.type	go..C564,@object
	.section	.rodata.go..C564,"a",@progbits
	.p2align	3
go..C564:
	.quad	.Lconst.281
	.quad	13
	.size	go..C564, 16

	.type	go..C565,@object
	.section	.rodata.go..C565,"a",@progbits
	.p2align	3
go..C565:
	.quad	.Lconst.63
	.quad	22
	.size	go..C565, 16

	.type	.Lconst.282,@object
	.section	.rodata..Lconst.282,"a",@progbits
.Lconst.282:
	.asciz	"scanTag"
	.size	.Lconst.282, 8

	.type	go..C566,@object
	.section	.rodata.go..C566,"a",@progbits
	.p2align	3
go..C566:
	.quad	.Lconst.282
	.quad	7
	.size	go..C566, 16

	.type	go..C567,@object
	.section	.rodata.go..C567,"a",@progbits
	.p2align	3
go..C567:
	.quad	.Lconst.63
	.quad	22
	.size	go..C567, 16

	.type	.Lconst.283,@object
	.section	.rodata..Lconst.283,"a",@progbits
.Lconst.283:
	.asciz	"scanText"
	.size	.Lconst.283, 9

	.type	go..C568,@object
	.section	.rodata.go..C568,"a",@progbits
	.p2align	3
go..C568:
	.quad	.Lconst.283
	.quad	8
	.size	go..C568, 16

	.type	go..C569,@object
	.section	.rodata.go..C569,"a",@progbits
	.p2align	3
go..C569:
	.quad	.Lconst.63
	.quad	22
	.size	go..C569, 16

	.type	go..C570,@object
	.section	.data.go..C570,"aw",@progbits
	.p2align	4
go..C570:
	.quad	go..C513
	.quad	0
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.Next
	.quad	go..C520
	.quad	0
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.NextRaw
	.quad	go..C521
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.SourcePosition.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8command_line_arguments.SourcePosition.9
	.quad	command_line_arguments.scanner.Pos
	.quad	go..C525
	.quad	go..C526
	.quad	type..func.8int.9.8.9
	.quad	type..func.8.1command_line_arguments.scanner.3int.9.8.9
	.quad	command_line_arguments.scanner.consume
	.quad	go..C533
	.quad	go..C534
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.9
	.quad	command_line_arguments.scanner.ensureBuffer
	.quad	go..C538
	.quad	go..C539
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanAssignment
	.quad	go..C540
	.quad	go..C541
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanAttribute
	.quad	go..C542
	.quad	go..C543
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanBlock
	.quad	go..C544
	.quad	go..C545
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanClassName
	.quad	go..C546
	.quad	go..C547
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanComment
	.quad	go..C548
	.quad	go..C549
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanCondition
	.quad	go..C550
	.quad	go..C551
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanDoctype
	.quad	go..C552
	.quad	go..C553
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanEach
	.quad	go..C554
	.quad	go..C555
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanExtends
	.quad	go..C556
	.quad	go..C557
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanId
	.quad	go..C558
	.quad	go..C559
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanImport
	.quad	go..C560
	.quad	go..C561
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanIndent
	.quad	go..C562
	.quad	go..C563
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanMixin
	.quad	go..C564
	.quad	go..C565
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanMixinCall
	.quad	go..C566
	.quad	go..C567
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanTag
	.quad	go..C568
	.quad	go..C569
	.quad	type..func.8.9.8.1command_line_arguments.token.9
	.quad	type..func.8.1command_line_arguments.scanner.9.8.1command_line_arguments.token.9
	.quad	command_line_arguments.scanner.scanText
	.size	go..C570, 840

	.type	go..C571,@object
	.section	.rodata.go..C571,"a",@progbits
	.p2align	4
go..C571:
	.quad	0
	.quad	0
	.quad	go..C570
	.quad	21
	.quad	21
	.size	go..C571, 40

	.type	type...1.1command_line_arguments.scanner,@object
	.section	.rodata.type...1.1command_line_arguments.scanner,"aG",@progbits,type...1.1command_line_arguments.scanner,comdat
	.weak	type...1.1command_line_arguments.scanner
	.p2align	4
type...1.1command_line_arguments.scanner:
	.quad	8
	.quad	8
	.long	738861721
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C572
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.scanner
	.size	type...1.1command_line_arguments.scanner, 80

	.type	.Lconst.284,@object
	.section	.rodata..Lconst.284,"a",@progbits
.Lconst.284:
	.asciz	"**\tcommand_line_arguments\tparser.scanner"
	.size	.Lconst.284, 41

	.type	go..C572,@object
	.section	.rodata.go..C572,"a",@progbits
	.p2align	3
go..C572:
	.quad	.Lconst.284
	.quad	40
	.size	go..C572, 16

	.type	command_line_arguments..command_line_arguments.scanner..d,@object
	.section	.rodata.command_line_arguments..command_line_arguments.scanner..d,"a",@progbits
	.globl	command_line_arguments..command_line_arguments.scanner..d
	.p2align	4
command_line_arguments..command_line_arguments.scanner..d:
	.quad	96
	.quad	40
	.long	3375106594
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.scanner..hash..f
	.quad	command_line_arguments.command_line_arguments.scanner..eq..f
	.quad	gcbits..ya
	.quad	go..C573
	.quad	go..C577
	.quad	type...1command_line_arguments.scanner
	.quad	go..C600
	.quad	11
	.quad	11
	.size	command_line_arguments..command_line_arguments.scanner..d, 96

	.type	command_line_arguments.command_line_arguments.scanner..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.scanner..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.scanner..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.scanner..hash..f:
	.quad	command_line_arguments.command_line_arguments.scanner..hash
	.size	command_line_arguments.command_line_arguments.scanner..hash..f, 8

	.type	command_line_arguments.command_line_arguments.scanner..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.scanner..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.scanner..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.scanner..eq..f:
	.quad	command_line_arguments.command_line_arguments.scanner..eq
	.size	command_line_arguments.command_line_arguments.scanner..eq..f, 8

	.type	gcbits..ya,@object
	.section	.rodata.gcbits..ya,"aG",@progbits,gcbits..ya,comdat
	.weak	gcbits..ya
gcbits..ya:
	.byte	23
	.size	gcbits..ya, 1

	.type	.Lconst.285,@object
	.section	.rodata..Lconst.285,"a",@progbits
.Lconst.285:
	.asciz	"\tcommand_line_arguments\tparser.scanner"
	.size	.Lconst.285, 39

	.type	go..C573,@object
	.section	.rodata.go..C573,"a",@progbits
	.p2align	3
go..C573:
	.quad	.Lconst.285
	.quad	38
	.size	go..C573, 16

	.type	go..C574,@object
	.section	.rodata.go..C574,"a",@progbits
	.p2align	3
go..C574:
	.quad	.Lconst.256
	.quad	7
	.size	go..C574, 16

	.type	go..C575,@object
	.section	.rodata.go..C575,"a",@progbits
	.p2align	3
go..C575:
	.quad	.Lconst.63
	.quad	22
	.size	go..C575, 16

	.type	go..C576,@object
	.section	.bss.go..C576,"aw",@nobits
	.p2align	4
go..C576:
	.zero	40
	.size	go..C576, 40

	.type	go..C577,@object
	.section	.rodata.go..C577,"a",@progbits
	.p2align	4
go..C577:
	.quad	go..C574
	.quad	go..C575
	.quad	go..C576
	.quad	0
	.quad	0
	.size	go..C577, 40

	.type	.Lconst.286,@object
	.section	.rodata..Lconst.286,"a",@progbits
.Lconst.286:
	.asciz	"reader"
	.size	.Lconst.286, 7

	.type	go..C578,@object
	.section	.rodata.go..C578,"a",@progbits
	.p2align	3
go..C578:
	.quad	.Lconst.286
	.quad	6
	.size	go..C578, 16

	.type	go..C579,@object
	.section	.rodata.go..C579,"a",@progbits
	.p2align	3
go..C579:
	.quad	.Lconst.63
	.quad	22
	.size	go..C579, 16

	.type	.Lconst.287,@object
	.section	.rodata..Lconst.287,"a",@progbits
.Lconst.287:
	.asciz	"indentStack"
	.size	.Lconst.287, 12

	.type	go..C580,@object
	.section	.rodata.go..C580,"a",@progbits
	.p2align	3
go..C580:
	.quad	.Lconst.287
	.quad	11
	.size	go..C580, 16

	.type	go..C581,@object
	.section	.rodata.go..C581,"a",@progbits
	.p2align	3
go..C581:
	.quad	.Lconst.63
	.quad	22
	.size	go..C581, 16

	.type	.Lconst.288,@object
	.section	.rodata..Lconst.288,"a",@progbits
.Lconst.288:
	.asciz	"stash"
	.size	.Lconst.288, 6

	.type	go..C582,@object
	.section	.rodata.go..C582,"a",@progbits
	.p2align	3
go..C582:
	.quad	.Lconst.288
	.quad	5
	.size	go..C582, 16

	.type	go..C583,@object
	.section	.rodata.go..C583,"a",@progbits
	.p2align	3
go..C583:
	.quad	.Lconst.63
	.quad	22
	.size	go..C583, 16

	.type	.Lconst.289,@object
	.section	.rodata..Lconst.289,"a",@progbits
.Lconst.289:
	.asciz	"state"
	.size	.Lconst.289, 6

	.type	go..C584,@object
	.section	.rodata.go..C584,"a",@progbits
	.p2align	3
go..C584:
	.quad	.Lconst.289
	.quad	5
	.size	go..C584, 16

	.type	go..C585,@object
	.section	.rodata.go..C585,"a",@progbits
	.p2align	3
go..C585:
	.quad	.Lconst.63
	.quad	22
	.size	go..C585, 16

	.type	.Lconst.290,@object
	.section	.rodata..Lconst.290,"a",@progbits
.Lconst.290:
	.asciz	"buffer"
	.size	.Lconst.290, 7

	.type	go..C586,@object
	.section	.rodata.go..C586,"a",@progbits
	.p2align	3
go..C586:
	.quad	.Lconst.290
	.quad	6
	.size	go..C586, 16

	.type	go..C587,@object
	.section	.rodata.go..C587,"a",@progbits
	.p2align	3
go..C587:
	.quad	.Lconst.63
	.quad	22
	.size	go..C587, 16

	.type	.Lconst.291,@object
	.section	.rodata..Lconst.291,"a",@progbits
.Lconst.291:
	.asciz	"line"
	.size	.Lconst.291, 5

	.type	go..C588,@object
	.section	.rodata.go..C588,"a",@progbits
	.p2align	3
go..C588:
	.quad	.Lconst.291
	.quad	4
	.size	go..C588, 16

	.type	go..C589,@object
	.section	.rodata.go..C589,"a",@progbits
	.p2align	3
go..C589:
	.quad	.Lconst.63
	.quad	22
	.size	go..C589, 16

	.type	go..C590,@object
	.section	.rodata.go..C590,"a",@progbits
	.p2align	3
go..C590:
	.quad	.Lconst.7
	.quad	3
	.size	go..C590, 16

	.type	go..C591,@object
	.section	.rodata.go..C591,"a",@progbits
	.p2align	3
go..C591:
	.quad	.Lconst.63
	.quad	22
	.size	go..C591, 16

	.type	.Lconst.292,@object
	.section	.rodata..Lconst.292,"a",@progbits
.Lconst.292:
	.asciz	"lastTokenLine"
	.size	.Lconst.292, 14

	.type	go..C592,@object
	.section	.rodata.go..C592,"a",@progbits
	.p2align	3
go..C592:
	.quad	.Lconst.292
	.quad	13
	.size	go..C592, 16

	.type	go..C593,@object
	.section	.rodata.go..C593,"a",@progbits
	.p2align	3
go..C593:
	.quad	.Lconst.63
	.quad	22
	.size	go..C593, 16

	.type	.Lconst.293,@object
	.section	.rodata..Lconst.293,"a",@progbits
.Lconst.293:
	.asciz	"lastTokenCol"
	.size	.Lconst.293, 13

	.type	go..C594,@object
	.section	.rodata.go..C594,"a",@progbits
	.p2align	3
go..C594:
	.quad	.Lconst.293
	.quad	12
	.size	go..C594, 16

	.type	go..C595,@object
	.section	.rodata.go..C595,"a",@progbits
	.p2align	3
go..C595:
	.quad	.Lconst.63
	.quad	22
	.size	go..C595, 16

	.type	.Lconst.294,@object
	.section	.rodata..Lconst.294,"a",@progbits
.Lconst.294:
	.asciz	"lastTokenSize"
	.size	.Lconst.294, 14

	.type	go..C596,@object
	.section	.rodata.go..C596,"a",@progbits
	.p2align	3
go..C596:
	.quad	.Lconst.294
	.quad	13
	.size	go..C596, 16

	.type	go..C597,@object
	.section	.rodata.go..C597,"a",@progbits
	.p2align	3
go..C597:
	.quad	.Lconst.63
	.quad	22
	.size	go..C597, 16

	.type	.Lconst.295,@object
	.section	.rodata..Lconst.295,"a",@progbits
.Lconst.295:
	.asciz	"readRaw"
	.size	.Lconst.295, 8

	.type	go..C598,@object
	.section	.rodata.go..C598,"a",@progbits
	.p2align	3
go..C598:
	.quad	.Lconst.295
	.quad	7
	.size	go..C598, 16

	.type	go..C599,@object
	.section	.rodata.go..C599,"a",@progbits
	.p2align	3
go..C599:
	.quad	.Lconst.63
	.quad	22
	.size	go..C599, 16

	.type	go..C600,@object
	.section	.data.go..C600,"aw",@progbits
	.p2align	4
go..C600:
	.quad	go..C578
	.quad	go..C579
	.quad	type...1bufio.Reader
	.quad	0
	.quad	0
	.quad	go..C580
	.quad	go..C581
	.quad	type...1container_list.List
	.quad	0
	.quad	16
	.quad	go..C582
	.quad	go..C583
	.quad	type...1container_list.List
	.quad	0
	.quad	32
	.quad	go..C584
	.quad	go..C585
	.quad	int32..d
	.quad	0
	.quad	48
	.quad	go..C586
	.quad	go..C587
	.quad	string..d
	.quad	0
	.quad	64
	.quad	go..C588
	.quad	go..C589
	.quad	int..d
	.quad	0
	.quad	96
	.quad	go..C590
	.quad	go..C591
	.quad	int..d
	.quad	0
	.quad	112
	.quad	go..C592
	.quad	go..C593
	.quad	int..d
	.quad	0
	.quad	128
	.quad	go..C594
	.quad	go..C595
	.quad	int..d
	.quad	0
	.quad	144
	.quad	go..C596
	.quad	go..C597
	.quad	int..d
	.quad	0
	.quad	160
	.quad	go..C598
	.quad	go..C599
	.quad	bool..d
	.quad	0
	.quad	176
	.size	go..C600, 440

	.type	.Lconst.296,@object
	.section	.rodata..Lconst.296,"a",@progbits
.Lconst.296:
	.asciz	"filename"
	.size	.Lconst.296, 9

	.type	go..C601,@object
	.section	.rodata.go..C601,"a",@progbits
	.p2align	3
go..C601:
	.quad	.Lconst.296
	.quad	8
	.size	go..C601, 16

	.type	go..C602,@object
	.section	.rodata.go..C602,"a",@progbits
	.p2align	3
go..C602:
	.quad	.Lconst.63
	.quad	22
	.size	go..C602, 16

	.type	.Lconst.297,@object
	.section	.rodata..Lconst.297,"a",@progbits
.Lconst.297:
	.asciz	"fs"
	.size	.Lconst.297, 3

	.type	go..C603,@object
	.section	.rodata.go..C603,"a",@progbits
	.p2align	3
go..C603:
	.quad	.Lconst.297
	.quad	2
	.size	go..C603, 16

	.type	go..C604,@object
	.section	.rodata.go..C604,"a",@progbits
	.p2align	3
go..C604:
	.quad	.Lconst.63
	.quad	22
	.size	go..C604, 16

	.type	.Lconst.298,@object
	.section	.rodata..Lconst.298,"a",@progbits
.Lconst.298:
	.asciz	"currenttoken"
	.size	.Lconst.298, 13

	.type	go..C605,@object
	.section	.rodata.go..C605,"a",@progbits
	.p2align	3
go..C605:
	.quad	.Lconst.298
	.quad	12
	.size	go..C605, 16

	.type	go..C606,@object
	.section	.rodata.go..C606,"a",@progbits
	.p2align	3
go..C606:
	.quad	.Lconst.63
	.quad	22
	.size	go..C606, 16

	.type	.Lconst.299,@object
	.section	.rodata..Lconst.299,"a",@progbits
.Lconst.299:
	.asciz	"namedBlocks"
	.size	.Lconst.299, 12

	.type	go..C607,@object
	.section	.rodata.go..C607,"a",@progbits
	.p2align	3
go..C607:
	.quad	.Lconst.299
	.quad	11
	.size	go..C607, 16

	.type	go..C608,@object
	.section	.rodata.go..C608,"a",@progbits
	.p2align	3
go..C608:
	.quad	.Lconst.63
	.quad	22
	.size	go..C608, 16

	.type	type..map.6string.7.1command_line_arguments.NamedBlock,@object
	.section	.rodata.type..map.6string.7.1command_line_arguments.NamedBlock,"aG",@progbits,type..map.6string.7.1command_line_arguments.NamedBlock,comdat
	.weak	type..map.6string.7.1command_line_arguments.NamedBlock
	.p2align	4
type..map.6string.7.1command_line_arguments.NamedBlock:
	.quad	8
	.quad	8
	.long	2000548755
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C609
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...1command_line_arguments.NamedBlock
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7.1command_line_arguments.NamedBlock, 112

	.type	.Lconst.300,@object
	.section	.rodata..Lconst.300,"a",@progbits
.Lconst.300:
	.asciz	"map[string]*\tcommand_line_arguments\tparser.NamedBlock"
	.size	.Lconst.300, 54

	.type	go..C609,@object
	.section	.rodata.go..C609,"a",@progbits
	.p2align	3
go..C609:
	.quad	.Lconst.300
	.quad	53
	.size	go..C609, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	3859208068
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C610
	.quad	0
	.quad	0
	.quad	go..C617
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkEGba,@object
	.section	.rodata.gcbits..kwkEGba,"aG",@progbits,gcbits..kwkEGba,comdat
	.weak	gcbits..kwkEGba
gcbits..kwkEGba:
	.ascii	"\252\252\376\003"
	.size	gcbits..kwkEGba, 4

	.type	.Lconst.301,@object
	.section	.rodata..Lconst.301,"a",@progbits
.Lconst.301:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tparser.NamedBlock; overflow * }"
	.size	.Lconst.301, 110

	.type	go..C610,@object
	.section	.rodata.go..C610,"a",@progbits
	.p2align	3
go..C610:
	.quad	.Lconst.301
	.quad	109
	.size	go..C610, 16

	.type	go..C611,@object
	.section	.rodata.go..C611,"a",@progbits
	.p2align	3
go..C611:
	.quad	.Lconst.32
	.quad	7
	.size	go..C611, 16

	.type	go..C612,@object
	.section	.rodata.go..C612,"a",@progbits
	.p2align	3
go..C612:
	.quad	.Lconst.37
	.quad	4
	.size	go..C612, 16

	.type	go..C613,@object
	.section	.rodata.go..C613,"a",@progbits
	.p2align	3
go..C613:
	.quad	.Lconst.40
	.quad	6
	.size	go..C613, 16

	.type	type...68x.7.1command_line_arguments.NamedBlock,@object
	.section	.rodata.type...68x.7.1command_line_arguments.NamedBlock,"aG",@progbits,type...68x.7.1command_line_arguments.NamedBlock,comdat
	.weak	type...68x.7.1command_line_arguments.NamedBlock
	.p2align	4
type...68x.7.1command_line_arguments.NamedBlock:
	.quad	64
	.quad	64
	.long	3704035809
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C614
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.NamedBlock
	.quad	type...6.7.1command_line_arguments.NamedBlock
	.quad	8
	.size	type...68x.7.1command_line_arguments.NamedBlock, 96

	.type	gcbits..Gh,@object
	.section	.rodata.gcbits..Gh,"aG",@progbits,gcbits..Gh,comdat
	.weak	gcbits..Gh
gcbits..Gh:
	.byte	255
	.size	gcbits..Gh, 1

	.type	.Lconst.302,@object
	.section	.rodata..Lconst.302,"a",@progbits
.Lconst.302:
	.asciz	"[8]*\tcommand_line_arguments\tparser.NamedBlock"
	.size	.Lconst.302, 46

	.type	go..C614,@object
	.section	.rodata.go..C614,"a",@progbits
	.p2align	3
go..C614:
	.quad	.Lconst.302
	.quad	45
	.size	go..C614, 16

	.type	type...6.7.1command_line_arguments.NamedBlock,@object
	.section	.rodata.type...6.7.1command_line_arguments.NamedBlock,"aG",@progbits,type...6.7.1command_line_arguments.NamedBlock,comdat
	.weak	type...6.7.1command_line_arguments.NamedBlock
	.p2align	4
type...6.7.1command_line_arguments.NamedBlock:
	.quad	24
	.quad	8
	.long	3999501559
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C615
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.NamedBlock
	.size	type...6.7.1command_line_arguments.NamedBlock, 80

	.type	.Lconst.303,@object
	.section	.rodata..Lconst.303,"a",@progbits
.Lconst.303:
	.asciz	"[]*\tcommand_line_arguments\tparser.NamedBlock"
	.size	.Lconst.303, 45

	.type	go..C615,@object
	.section	.rodata.go..C615,"a",@progbits
	.p2align	3
go..C615:
	.quad	.Lconst.303
	.quad	44
	.size	go..C615, 16

	.type	go..C616,@object
	.section	.rodata.go..C616,"a",@progbits
	.p2align	3
go..C616:
	.quad	.Lconst.41
	.quad	8
	.size	go..C616, 16

	.type	go..C617,@object
	.section	.data.go..C617,"aw",@progbits
	.p2align	4
go..C617:
	.quad	go..C611
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C612
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C613
	.quad	0
	.quad	type...68x.7.1command_line_arguments.NamedBlock
	.quad	0
	.quad	272
	.quad	go..C616
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C617, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	732666340
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C618
	.quad	0
	.quad	0
	.quad	go..C629
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.304,@object
	.section	.rodata..Lconst.304,"a",@progbits
.Lconst.304:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tparser.NamedBlock; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tparser.NamedBlock; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.304, 346

	.type	go..C618,@object
	.section	.rodata.go..C618,"a",@progbits
	.p2align	3
go..C618:
	.quad	.Lconst.304
	.quad	345
	.size	go..C618, 16

	.type	go..C619,@object
	.section	.rodata.go..C619,"a",@progbits
	.p2align	3
go..C619:
	.quad	.Lconst.43
	.quad	5
	.size	go..C619, 16

	.type	go..C620,@object
	.section	.rodata.go..C620,"a",@progbits
	.p2align	3
go..C620:
	.quad	.Lconst.46
	.quad	5
	.size	go..C620, 16

	.type	go..C621,@object
	.section	.rodata.go..C621,"a",@progbits
	.p2align	3
go..C621:
	.quad	.Lconst.47
	.quad	1
	.size	go..C621, 16

	.type	go..C622,@object
	.section	.rodata.go..C622,"a",@progbits
	.p2align	3
go..C622:
	.quad	.Lconst.48
	.quad	9
	.size	go..C622, 16

	.type	go..C623,@object
	.section	.rodata.go..C623,"a",@progbits
	.p2align	3
go..C623:
	.quad	.Lconst.51
	.quad	5
	.size	go..C623, 16

	.type	go..C624,@object
	.section	.rodata.go..C624,"a",@progbits
	.p2align	3
go..C624:
	.quad	.Lconst.54
	.quad	7
	.size	go..C624, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	1617786953
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C625
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.305,@object
	.section	.rodata..Lconst.305,"a",@progbits
.Lconst.305:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tparser.NamedBlock; overflow * }"
	.size	.Lconst.305, 111

	.type	go..C625,@object
	.section	.rodata.go..C625,"a",@progbits
	.p2align	3
go..C625:
	.quad	.Lconst.305
	.quad	110
	.size	go..C625, 16

	.type	go..C626,@object
	.section	.rodata.go..C626,"a",@progbits
	.p2align	3
go..C626:
	.quad	.Lconst.56
	.quad	10
	.size	go..C626, 16

	.type	go..C627,@object
	.section	.rodata.go..C627,"a",@progbits
	.p2align	3
go..C627:
	.quad	.Lconst.57
	.quad	9
	.size	go..C627, 16

	.type	go..C628,@object
	.section	.rodata.go..C628,"a",@progbits
	.p2align	3
go..C628:
	.quad	.Lconst.60
	.quad	5
	.size	go..C628, 16

	.type	go..C629,@object
	.section	.data.go..C629,"aw",@progbits
	.p2align	4
go..C629:
	.quad	go..C619
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C620
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C621
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C622
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C623
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C624
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C626
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.NamedBlock.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C627
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C628
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C629, 360

	.type	.Lconst.306,@object
	.section	.rodata..Lconst.306,"a",@progbits
.Lconst.306:
	.asciz	"parent"
	.size	.Lconst.306, 7

	.type	go..C630,@object
	.section	.rodata.go..C630,"a",@progbits
	.p2align	3
go..C630:
	.quad	.Lconst.306
	.quad	6
	.size	go..C630, 16

	.type	go..C631,@object
	.section	.rodata.go..C631,"a",@progbits
	.p2align	3
go..C631:
	.quad	.Lconst.63
	.quad	22
	.size	go..C631, 16

	.type	.Lconst.307,@object
	.section	.rodata..Lconst.307,"a",@progbits
.Lconst.307:
	.asciz	"result"
	.size	.Lconst.307, 7

	.type	go..C632,@object
	.section	.rodata.go..C632,"a",@progbits
	.p2align	3
go..C632:
	.quad	.Lconst.307
	.quad	6
	.size	go..C632, 16

	.type	go..C633,@object
	.section	.rodata.go..C633,"a",@progbits
	.p2align	3
go..C633:
	.quad	.Lconst.63
	.quad	22
	.size	go..C633, 16

	.type	go..C634,@object
	.section	.data.go..C634,"aw",@progbits
	.p2align	4
go..C634:
	.quad	go..C510
	.quad	go..C511
	.quad	type...1command_line_arguments.scanner
	.quad	0
	.quad	0
	.quad	go..C601
	.quad	go..C602
	.quad	string..d
	.quad	0
	.quad	16
	.quad	go..C603
	.quad	go..C604
	.quad	net_http.FileSystem..d
	.quad	0
	.quad	48
	.quad	go..C605
	.quad	go..C606
	.quad	type...1command_line_arguments.token
	.quad	0
	.quad	80
	.quad	go..C607
	.quad	go..C608
	.quad	type..map.6string.7.1command_line_arguments.NamedBlock
	.quad	0
	.quad	96
	.quad	go..C630
	.quad	go..C631
	.quad	type...1command_line_arguments.Parser
	.quad	0
	.quad	112
	.quad	go..C632
	.quad	go..C633
	.quad	type...1command_line_arguments.Block
	.quad	0
	.quad	128
	.size	go..C634, 280

	.type	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader,@object
	.section	.rodata.pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader,"aG",@progbits,pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader,comdat
	.weak	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader
	.p2align	3
pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader:
	.quad	type...1bytes.Reader
	.quad	bytes.Reader.Read
	.size	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader, 16

	.type	command_line_arguments.StringParser..f,@object
	.section	.rodata.command_line_arguments.StringParser..f,"a",@progbits
	.globl	command_line_arguments.StringParser..f
	.p2align	3
command_line_arguments.StringParser..f:
	.quad	command_line_arguments.StringParser
	.size	command_line_arguments.StringParser..f, 8

	.type	command_line_arguments.ByteParser..f,@object
	.section	.rodata.command_line_arguments.ByteParser..f,"a",@progbits
	.globl	command_line_arguments.ByteParser..f
	.p2align	3
command_line_arguments.ByteParser..f:
	.quad	command_line_arguments.ByteParser
	.size	command_line_arguments.ByteParser..f, 8

	.type	command_line_arguments.FileParser..f,@object
	.section	.rodata.command_line_arguments.FileParser..f,"a",@progbits
	.globl	command_line_arguments.FileParser..f
	.p2align	3
command_line_arguments.FileParser..f:
	.quad	command_line_arguments.FileParser
	.size	command_line_arguments.FileParser..f, 8

	.type	command_line_arguments.VirtualFileParser..f,@object
	.section	.rodata.command_line_arguments.VirtualFileParser..f,"a",@progbits
	.globl	command_line_arguments.VirtualFileParser..f
	.p2align	3
command_line_arguments.VirtualFileParser..f:
	.quad	command_line_arguments.VirtualFileParser
	.size	command_line_arguments.VirtualFileParser..f, 8

	.type	.Lconst.314,@object
	.section	.rodata..Lconst.314,"a",@progbits
.Lconst.314:
	.asciz	"Unable to import or extend "
	.size	.Lconst.314, 28

	.type	.Lconst.315,@object
	.section	.rodata..Lconst.315,"a",@progbits
	.p2align	3
.Lconst.315:
	.quad	.Lconst.314
	.quad	27
	.size	.Lconst.315, 16

	.type	.Lconst.316,@object
	.section	.rodata..Lconst.316,"a",@progbits
.Lconst.316:
	.asciz	" in a non filesystem based parser."
	.size	.Lconst.316, 35

	.type	.Lconst.317,@object
	.section	.rodata..Lconst.317,"a",@progbits
	.p2align	3
.Lconst.317:
	.quad	.Lconst.316
	.quad	34
	.size	.Lconst.317, 16

	.type	.Lconst.318,@object
	.section	.rodata..Lconst.318,"a",@progbits
.Lconst.318:
	.asciz	".amber"
	.size	.Lconst.318, 7

	.type	.Lconst.319,@object
	.section	.rodata..Lconst.319,"a",@progbits
	.p2align	3
.Lconst.319:
	.quad	.Lconst.318
	.quad	6
	.size	.Lconst.319, 16

	.type	.Lconst.321,@object
	.section	.rodata..Lconst.321,"a",@progbits
.Lconst.321:
	.asciz	"Unable to read "
	.size	.Lconst.321, 16

	.type	.Lconst.322,@object
	.section	.rodata..Lconst.322,"a",@progbits
	.p2align	3
.Lconst.322:
	.quad	.Lconst.321
	.quad	15
	.size	.Lconst.322, 16

	.type	.Lconst.323,@object
	.section	.rodata..Lconst.323,"a",@progbits
.Lconst.323:
	.asciz	", Error: "
	.size	.Lconst.323, 10

	.type	.Lconst.324,@object
	.section	.rodata..Lconst.324,"a",@progbits
	.p2align	3
.Lconst.324:
	.quad	.Lconst.323
	.quad	9
	.size	.Lconst.324, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype:
	.quad	type...1command_line_arguments.Doctype
	.quad	command_line_arguments.Doctype.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Doctype, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment:
	.quad	type...1command_line_arguments.Comment
	.quad	command_line_arguments.Comment.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Comment, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text:
	.quad	type...1command_line_arguments.Text
	.quad	command_line_arguments.Text.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Text, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition:
	.quad	type...1command_line_arguments.Condition
	.quad	command_line_arguments.Condition.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Condition, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each:
	.quad	type...1command_line_arguments.Each
	.quad	command_line_arguments.Each.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Each, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block:
	.quad	type...1command_line_arguments.Block
	.quad	command_line_arguments.Block.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Block, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag:
	.quad	type...1command_line_arguments.Tag
	.quad	command_line_arguments.Tag.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Tag, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment:
	.quad	type...1command_line_arguments.Assignment
	.quad	command_line_arguments.Assignment.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Assignment, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin:
	.quad	type...1command_line_arguments.Mixin
	.quad	command_line_arguments.Mixin.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.Mixin, 16

	.type	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall,@object
	.section	.rodata.pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall,"aG",@progbits,pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall,comdat
	.weak	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall
	.p2align	3
pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall:
	.quad	type...1command_line_arguments.MixinCall
	.quad	command_line_arguments.MixinCall.Pos..stub
	.size	pimt..interface.4Pos.0func.8.9.8command_line_arguments.SourcePosition.9.5..command_line_arguments.MixinCall, 16

	.type	.Lconst.325,@object
	.section	.rodata..Lconst.325,"a",@progbits
.Lconst.325:
	.asciz	"Unexpected token: %d"
	.size	.Lconst.325, 21

	.type	.Lconst.327,@object
	.section	.rodata..Lconst.327,"a",@progbits
.Lconst.327:
	.asciz	"Unexpected token!"
	.size	.Lconst.327, 18

	.type	.Lconst.328,@object
	.section	.rodata..Lconst.328,"a",@progbits
	.p2align	3
.Lconst.328:
	.quad	.Lconst.327
	.quad	17
	.size	.Lconst.328, 16

	.type	.Lconst.329,@object
	.section	.rodata..Lconst.329,"a",@progbits
.Lconst.329:
	.asciz	"Unable to extend multiple parent templates."
	.size	.Lconst.329, 44

	.type	.Lconst.330,@object
	.section	.rodata..Lconst.330,"a",@progbits
	.p2align	3
.Lconst.330:
	.quad	.Lconst.329
	.quad	43
	.size	.Lconst.330, 16

	.type	.Lconst.331,@object
	.section	.rodata..Lconst.331,"a",@progbits
	.p2align	3
.Lconst.331:
	.quad	.Lconst.137
	.quad	9
	.size	.Lconst.331, 16

	.type	.Lconst.332,@object
	.section	.rodata..Lconst.332,"a",@progbits
.Lconst.332:
	.asciz	"id"
	.size	.Lconst.332, 3

	.type	.Lconst.333,@object
	.section	.rodata..Lconst.333,"a",@progbits
	.p2align	3
.Lconst.333:
	.quad	.Lconst.332
	.quad	2
	.size	.Lconst.333, 16

	.type	.Lconst.334,@object
	.section	.rodata..Lconst.334,"a",@progbits
.Lconst.334:
	.asciz	"class"
	.size	.Lconst.334, 6

	.type	.Lconst.335,@object
	.section	.rodata..Lconst.335,"a",@progbits
	.p2align	3
.Lconst.335:
	.quad	.Lconst.334
	.quad	5
	.size	.Lconst.335, 16

	.type	.Lconst.336,@object
	.section	.rodata..Lconst.336,"a",@progbits
.Lconst.336:
	.asciz	"Content"
	.size	.Lconst.336, 8

	.type	.Lconst.337,@object
	.section	.rodata..Lconst.337,"a",@progbits
	.p2align	3
.Lconst.337:
	.quad	.Lconst.336
	.quad	7
	.size	.Lconst.337, 16

	.type	.Lconst.338,@object
	.section	.rodata..Lconst.338,"a",@progbits
.Lconst.338:
	.asciz	"Mode"
	.size	.Lconst.338, 5

	.type	.Lconst.339,@object
	.section	.rodata..Lconst.339,"a",@progbits
	.p2align	3
.Lconst.339:
	.quad	.Lconst.338
	.quad	4
	.size	.Lconst.339, 16

	.type	.Lconst.340,@object
	.section	.rodata..Lconst.340,"a",@progbits
.Lconst.340:
	.asciz	"raw"
	.size	.Lconst.340, 4

	.type	.Lconst.342,@object
	.section	.rodata..Lconst.342,"a",@progbits
.Lconst.342:
	.asciz	"Conditional attributes must be placed immediately within a parent tag."
	.size	.Lconst.342, 71

	.type	.Lconst.343,@object
	.section	.rodata..Lconst.343,"a",@progbits
	.p2align	3
.Lconst.343:
	.quad	.Lconst.342
	.quad	70
	.size	.Lconst.343, 16

	.type	.Lconst.344,@object
	.section	.rodata..Lconst.344,"a",@progbits
	.p2align	3
.Lconst.344:
	.quad	.Lconst.165
	.quad	1
	.size	.Lconst.344, 16

	.type	.Lconst.345,@object
	.section	.rodata..Lconst.345,"a",@progbits
	.p2align	3
.Lconst.345:
	.quad	.Lconst.166
	.quad	1
	.size	.Lconst.345, 16

	.type	.Lconst.346,@object
	.section	.rodata..Lconst.346,"a",@progbits
.Lconst.346:
	.asciz	"Multiple definitions of named blocks are not permitted. Block "
	.size	.Lconst.346, 63

	.type	.Lconst.347,@object
	.section	.rodata..Lconst.347,"a",@progbits
	.p2align	3
.Lconst.347:
	.quad	.Lconst.346
	.quad	62
	.size	.Lconst.347, 16

	.type	.Lconst.348,@object
	.section	.rodata..Lconst.348,"a",@progbits
.Lconst.348:
	.asciz	" has been re defined."
	.size	.Lconst.348, 22

	.type	.Lconst.349,@object
	.section	.rodata..Lconst.349,"a",@progbits
	.p2align	3
.Lconst.349:
	.quad	.Lconst.348
	.quad	21
	.size	.Lconst.349, 16

	.type	.Lconst.350,@object
	.section	.rodata..Lconst.350,"a",@progbits
	.p2align	3
.Lconst.350:
	.quad	.Lconst.130
	.quad	8
	.size	.Lconst.350, 16

	.type	.Lconst.351,@object
	.section	.rodata..Lconst.351,"a",@progbits
.Lconst.351:
	.asciz	"append"
	.size	.Lconst.351, 7

	.type	.Lconst.352,@object
	.section	.rodata..Lconst.352,"a",@progbits
.Lconst.352:
	.asciz	"prepend"
	.size	.Lconst.352, 8

	.type	.Lconst.355,@object
	.section	.rodata..Lconst.355,"a",@progbits
.Lconst.355:
	.asciz	"silent"
	.size	.Lconst.355, 7

	.type	.Lconst.356,@object
	.section	.rodata..Lconst.356,"a",@progbits
	.p2align	3
.Lconst.356:
	.quad	.Lconst.355
	.quad	6
	.size	.Lconst.356, 16

	.type	.Lconst.358,@object
	.section	.rodata..Lconst.358,"a",@progbits
.Lconst.358:
	.asciz	"Conditional attributes must be placed in a block within a tag."
	.size	.Lconst.358, 63

	.type	.Lconst.359,@object
	.section	.rodata..Lconst.359,"a",@progbits
	.p2align	3
.Lconst.359:
	.quad	.Lconst.358
	.quad	62
	.size	.Lconst.359, 16

	.type	.Lconst.360,@object
	.section	.rodata..Lconst.360,"a",@progbits
.Lconst.360:
	.asciz	"piped"
	.size	.Lconst.360, 6

	.type	.Lconst.361,@object
	.section	.rodata..Lconst.361,"a",@progbits
	.p2align	3
.Lconst.361:
	.quad	.Lconst.360
	.quad	5
	.size	.Lconst.361, 16

	.type	.Lconst.362,@object
	.section	.rodata..Lconst.362,"a",@progbits
	.p2align	3
.Lconst.362:
	.quad	.Lconst.177
	.quad	4
	.size	.Lconst.362, 16

	.type	type..interface.4.5,@object
	.section	.rodata.type..interface.4.5,"aG",@progbits,type..interface.4.5,comdat
	.weak	type..interface.4.5
	.p2align	4
type..interface.4.5:
	.quad	16
	.quad	16
	.long	16
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.nilinterhash..f
	.quad	runtime.nilinterequal..f
	.quad	gcbits..da
	.quad	go..C635
	.quad	0
	.quad	0
	.quad	go..C636
	.quad	0
	.quad	0
	.size	type..interface.4.5, 96

	.type	.Lconst.363,@object
	.section	.rodata..Lconst.363,"a",@progbits
.Lconst.363:
	.asciz	"interface {}"
	.size	.Lconst.363, 13

	.type	go..C635,@object
	.section	.rodata.go..C635,"a",@progbits
	.p2align	3
go..C635:
	.quad	.Lconst.363
	.quad	12
	.size	go..C635, 16

	.type	go..C636,@object
	.section	.bss.go..C636,"aw",@nobits
	.p2align	4
go..C636:
	.zero	24
	.size	go..C636, 24

	.type	.Lconst.364,@object
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	4
.Lconst.364:
	.long	4294967291
	.zero	4
	.zero	16
	.quad	0
	.size	.Lconst.364, 32

	.type	.Lconst.365,@object
	.p2align	4
.Lconst.365:
	.long	4294967295
	.zero	4
	.zero	16
	.quad	0
	.size	.Lconst.365, 32

	.type	.Lconst.366,@object
	.section	.rodata..Lconst.366,"a",@progbits
	.p2align	4
.Lconst.366:
	.quad	.Lconst.338
	.quad	4
	.quad	.Lconst.340
	.quad	3
	.size	.Lconst.366, 32

	.type	.Lconst.367,@object
	.section	.rodata..Lconst.367,"a",@progbits
.Lconst.367:
	.asciz	"\n"
	.size	.Lconst.367, 2

	.type	.Lconst.368,@object
	.section	.rodata..Lconst.368,"a",@progbits
	.p2align	3
.Lconst.368:
	.quad	.Lconst.367
	.quad	1
	.size	.Lconst.368, 16

	.type	.Lconst.369,@object
	.section	.rodata..Lconst.369,"a",@progbits
.Lconst.369:
	.asciz	"\t"
	.size	.Lconst.369, 2

	.type	.Lconst.370,@object
	.section	.rodata..Lconst.370,"a",@progbits
	.p2align	3
.Lconst.370:
	.quad	.Lconst.369
	.quad	1
	.size	.Lconst.370, 16

	.type	command_line_arguments.rgxIndent,@object
	.section	.bss.command_line_arguments.rgxIndent,"aw",@nobits
	.p2align	3
command_line_arguments.rgxIndent:
	.quad	0
	.size	command_line_arguments.rgxIndent, 8

	.type	.Lconst.371,@object
	.section	.rodata..Lconst.371,"a",@progbits
.Lconst.371:
	.asciz	"^(\\s+)"
	.size	.Lconst.371, 7

	.type	.Lconst.373,@object
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	4
.Lconst.373:
	.long	4294967290
	.zero	4
	.zero	16
	.quad	0
	.size	.Lconst.373, 32

	.type	.Lconst.374,@object
	.section	.rodata..Lconst.374,"a",@progbits
.Lconst.374:
	.asciz	"Mismatching indentation. Please use a coherent indent schema."
	.size	.Lconst.374, 62

	.type	.Lconst.375,@object
	.section	.rodata..Lconst.375,"a",@progbits
	.p2align	3
.Lconst.375:
	.quad	.Lconst.374
	.quad	61
	.size	.Lconst.375, 16

	.type	command_line_arguments.rgxDoctype,@object
	.section	.bss.command_line_arguments.rgxDoctype,"aw",@nobits
	.p2align	3
command_line_arguments.rgxDoctype:
	.quad	0
	.size	command_line_arguments.rgxDoctype, 8

	.type	.Lconst.376,@object
	.section	.rodata..Lconst.376,"a",@progbits
.Lconst.376:
	.asciz	"^(!!!|doctype)\\s*(.*)"
	.size	.Lconst.376, 22

	.type	.Lconst.378,@object
	.section	.rodata..Lconst.378,"a",@progbits
.Lconst.378:
	.asciz	"html"
	.size	.Lconst.378, 5

	.type	.Lconst.379,@object
	.section	.rodata..Lconst.379,"a",@progbits
	.p2align	3
.Lconst.379:
	.quad	.Lconst.378
	.quad	4
	.size	.Lconst.379, 16

	.type	command_line_arguments.rgxIf,@object
	.section	.bss.command_line_arguments.rgxIf,"aw",@nobits
	.p2align	3
command_line_arguments.rgxIf:
	.quad	0
	.size	command_line_arguments.rgxIf, 8

	.type	.Lconst.380,@object
	.section	.rodata..Lconst.380,"a",@progbits
.Lconst.380:
	.asciz	"^if\\s+(.+)$"
	.size	.Lconst.380, 12

	.type	command_line_arguments.rgxElse,@object
	.section	.bss.command_line_arguments.rgxElse,"aw",@nobits
	.p2align	3
command_line_arguments.rgxElse:
	.quad	0
	.size	command_line_arguments.rgxElse, 8

	.type	.Lconst.382,@object
	.section	.rodata..Lconst.382,"a",@progbits
.Lconst.382:
	.asciz	"^else\\s*"
	.size	.Lconst.382, 9

	.type	.Lconst.384,@object
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	4
.Lconst.384:
	.long	4294967283
	.zero	4
	.zero	16
	.quad	0
	.size	.Lconst.384, 32

	.type	command_line_arguments.rgxEach,@object
	.section	.bss.command_line_arguments.rgxEach,"aw",@nobits
	.p2align	3
command_line_arguments.rgxEach:
	.quad	0
	.size	command_line_arguments.rgxEach, 8

	.type	.Lconst.385,@object
	.section	.rodata..Lconst.385,"a",@progbits
.Lconst.385:
	.asciz	"^each\\s+(\\$[\\w0-9\\-_]*)(?:\\s*,\\s*(\\$[\\w0-9\\-_]*))?\\s+in\\s+(.+)$"
	.size	.Lconst.385, 64

	.type	command_line_arguments.rgxAssignment,@object
	.section	.bss.command_line_arguments.rgxAssignment,"aw",@nobits
	.p2align	3
command_line_arguments.rgxAssignment:
	.quad	0
	.size	command_line_arguments.rgxAssignment, 8

	.type	.Lconst.387,@object
	.section	.rodata..Lconst.387,"a",@progbits
.Lconst.387:
	.asciz	"^(\\$[\\w0-9\\-_]*)?\\s*=\\s*(.+)$"
	.size	.Lconst.387, 30

	.type	command_line_arguments.rgxComment,@object
	.section	.bss.command_line_arguments.rgxComment,"aw",@nobits
	.p2align	3
command_line_arguments.rgxComment:
	.quad	0
	.size	command_line_arguments.rgxComment, 8

	.type	.Lconst.389,@object
	.section	.rodata..Lconst.389,"a",@progbits
.Lconst.389:
	.asciz	"^\\/\\/(-)?\\s*(.*)$"
	.size	.Lconst.389, 18

	.type	.Lconst.391,@object
	.section	.rodata..Lconst.391,"a",@progbits
.Lconst.391:
	.asciz	"embed"
	.size	.Lconst.391, 6

	.type	.Lconst.392,@object
	.section	.rodata..Lconst.392,"a",@progbits
	.p2align	3
.Lconst.392:
	.quad	.Lconst.391
	.quad	5
	.size	.Lconst.392, 16

	.type	command_line_arguments.rgxId,@object
	.section	.bss.command_line_arguments.rgxId,"aw",@nobits
	.p2align	3
command_line_arguments.rgxId:
	.quad	0
	.size	command_line_arguments.rgxId, 8

	.type	.Lconst.393,@object
	.section	.rodata..Lconst.393,"a",@progbits
.Lconst.393:
	.asciz	"^#([\\w-]+)(?:\\s*\\?\\s*(.*)$)?"
	.size	.Lconst.393, 29

	.type	command_line_arguments.rgxClassName,@object
	.section	.bss.command_line_arguments.rgxClassName,"aw",@nobits
	.p2align	3
command_line_arguments.rgxClassName:
	.quad	0
	.size	command_line_arguments.rgxClassName, 8

	.type	.Lconst.395,@object
	.section	.rodata..Lconst.395,"a",@progbits
.Lconst.395:
	.asciz	"^\\.([\\w-]+)(?:\\s*\\?\\s*(.*)$)?"
	.size	.Lconst.395, 30

	.type	command_line_arguments.rgxAttribute,@object
	.section	.bss.command_line_arguments.rgxAttribute,"aw",@nobits
	.p2align	3
command_line_arguments.rgxAttribute:
	.quad	0
	.size	command_line_arguments.rgxAttribute, 8

	.type	.Lconst.397,@object
	.section	.rodata..Lconst.397,"a",@progbits
.Lconst.397:
	.asciz	"^\\[([\\w\\-:@\\.]+)\\s*(?:=\\s*(\\\"([^\\\"\\\\]*)\\\"|([^\\]]+)))?\\](?:\\s*\\?\\s*(.*)$)?"
	.size	.Lconst.397, 74

	.type	.Lconst.399,@object
	.section	.rodata..Lconst.399,"a",@progbits
	.p2align	4
.Lconst.399:
	.quad	.Lconst.338
	.quad	4
	.quad	.Lconst.340
	.quad	3
	.size	.Lconst.399, 32

	.type	.Lconst.400,@object
	.section	.rodata..Lconst.400,"a",@progbits
.Lconst.400:
	.asciz	"expression"
	.size	.Lconst.400, 11

	.type	.Lconst.401,@object
	.section	.rodata..Lconst.401,"a",@progbits
	.p2align	4
.Lconst.401:
	.quad	.Lconst.338
	.quad	4
	.quad	.Lconst.400
	.quad	10
	.size	.Lconst.401, 32

	.type	command_line_arguments.rgxImport,@object
	.section	.bss.command_line_arguments.rgxImport,"aw",@nobits
	.p2align	3
command_line_arguments.rgxImport:
	.quad	0
	.size	command_line_arguments.rgxImport, 8

	.type	.Lconst.402,@object
	.section	.rodata..Lconst.402,"a",@progbits
.Lconst.402:
	.asciz	"^import\\s+([0-9a-zA-Z_\\-\\. \\/]*)$"
	.size	.Lconst.402, 34

	.type	command_line_arguments.rgxExtends,@object
	.section	.bss.command_line_arguments.rgxExtends,"aw",@nobits
	.p2align	3
command_line_arguments.rgxExtends:
	.quad	0
	.size	command_line_arguments.rgxExtends, 8

	.type	.Lconst.404,@object
	.section	.rodata..Lconst.404,"a",@progbits
.Lconst.404:
	.asciz	"^extends\\s+([0-9a-zA-Z_\\-\\. \\/]*)$"
	.size	.Lconst.404, 35

	.type	command_line_arguments.rgxBlock,@object
	.section	.bss.command_line_arguments.rgxBlock,"aw",@nobits
	.p2align	3
command_line_arguments.rgxBlock:
	.quad	0
	.size	command_line_arguments.rgxBlock, 8

	.type	.Lconst.406,@object
	.section	.rodata..Lconst.406,"a",@progbits
.Lconst.406:
	.asciz	"^block\\s+(?:(append|prepend)\\s+)?([0-9a-zA-Z_\\-\\. \\/]*)$"
	.size	.Lconst.406, 57

	.type	command_line_arguments.rgxTag,@object
	.section	.bss.command_line_arguments.rgxTag,"aw",@nobits
	.p2align	3
command_line_arguments.rgxTag:
	.quad	0
	.size	command_line_arguments.rgxTag, 8

	.type	.Lconst.408,@object
	.section	.rodata..Lconst.408,"a",@progbits
.Lconst.408:
	.asciz	"^(\\w[-:\\w]*)"
	.size	.Lconst.408, 13

	.type	command_line_arguments.rgxMixin,@object
	.section	.bss.command_line_arguments.rgxMixin,"aw",@nobits
	.p2align	3
command_line_arguments.rgxMixin:
	.quad	0
	.size	command_line_arguments.rgxMixin, 8

	.type	.Lconst.410,@object
	.section	.rodata..Lconst.410,"a",@progbits
.Lconst.410:
	.asciz	"^mixin ([a-zA-Z_-]+\\w*)(\\(((\\$\\w*(,\\s)?)*)\\))?$"
	.size	.Lconst.410, 48

	.type	command_line_arguments.rgxMixinCall,@object
	.section	.bss.command_line_arguments.rgxMixinCall,"aw",@nobits
	.p2align	3
command_line_arguments.rgxMixinCall:
	.quad	0
	.size	command_line_arguments.rgxMixinCall, 8

	.type	.Lconst.412,@object
	.section	.rodata..Lconst.412,"a",@progbits
.Lconst.412:
	.asciz	"^\\+([A-Za-z_-]+\\w*)(\\((.+(,\\s)?)*\\))?$"
	.size	.Lconst.412, 39

	.type	command_line_arguments.rgxText,@object
	.section	.bss.command_line_arguments.rgxText,"aw",@nobits
	.p2align	3
command_line_arguments.rgxText:
	.quad	0
	.size	command_line_arguments.rgxText, 8

	.type	.Lconst.414,@object
	.section	.rodata..Lconst.414,"a",@progbits
.Lconst.414:
	.asciz	"^(\\|)? ?(.*)$"
	.size	.Lconst.414, 14

	.type	.Lconst.416,@object
	.section	.rodata..Lconst.416,"a",@progbits
.Lconst.416:
	.asciz	"inline"
	.size	.Lconst.416, 7

	.type	.Lconst.417,@object
	.section	.rodata..Lconst.417,"a",@progbits
	.p2align	3
.Lconst.417:
	.quad	.Lconst.416
	.quad	6
	.size	.Lconst.417, 16

	.type	.Lconst.418,@object
	.section	.rodata..Lconst.418,"a",@progbits
.Lconst.418:
	.asciz	"|"
	.size	.Lconst.418, 2

	.type	.Lconst.420,@object
	.section	.rodata..Lconst.420,"a",@progbits
.Lconst.420:
	.asciz	"Unable to consume %d runes from buffer."
	.size	.Lconst.420, 40

	.type	.Lconst.424,@object
	.section	.rodata..Lconst.424,"a",@progbits
.Lconst.424:
	.asciz	"Amber Error"
	.size	.Lconst.424, 12

	.type	.Lconst.426,@object
	.section	.rodata..Lconst.426,"a",@progbits
.Lconst.426:
	.asciz	"Amber Error in <%s>: %v - Line: %d, Column: %d, Length: %d"
	.size	.Lconst.426, 59

	.type	.Lconst.428,@object
	.section	.rodata..Lconst.428,"a",@progbits
.Lconst.428:
	.asciz	"Amber Error: %v - Line: %d, Column: %d, Length: %d"
	.size	.Lconst.428, 51

	.type	gcbits..wkwka,@object
	.section	.rodata.gcbits..wkwka,"aG",@progbits,gcbits..wkwka,comdat
	.weak	gcbits..wkwka
gcbits..wkwka:
	.ascii	"UU\005"
	.size	gcbits..wkwka, 3

	.type	gcbits..ppppa,@object
	.section	.rodata.gcbits..ppppa,"aG",@progbits,gcbits..ppppa,comdat
	.weak	gcbits..ppppa
gcbits..ppppa:
	.ascii	"\357\275\007"
	.size	gcbits..ppppa, 3

	.type	gcbits..pppppppppa,@object
	.section	.rodata.gcbits..pppppppppa,"aG",@progbits,gcbits..pppppppppa,comdat
	.weak	gcbits..pppppppppa
gcbits..pppppppppa:
	.ascii	"\357\275\367\336{\017"
	.size	gcbits..pppppppppa, 6

	.type	gcbits..Ga,@object
	.section	.rodata.gcbits..Ga,"aG",@progbits,gcbits..Ga,comdat
	.weak	gcbits..Ga
gcbits..Ga:
	.byte	31
	.size	gcbits..Ga, 1

	.type	gcbits..ha,@object
	.section	.rodata.gcbits..ha,"aG",@progbits,gcbits..ha,comdat
	.weak	gcbits..ha
gcbits..ha:
	.byte	7
	.size	gcbits..ha, 1

	.type	gcbits..GGaa,@object
	.section	.rodata.gcbits..GGaa,"aG",@progbits,gcbits..GGaa,comdat
	.weak	gcbits..GGaa
gcbits..GGaa:
	.ascii	"\377\003"
	.size	gcbits..GGaa, 2

	.type	gcbits..ppaa,@object
	.section	.rodata.gcbits..ppaa,"aG",@progbits,gcbits..ppaa,comdat
	.weak	gcbits..ppaa
gcbits..ppaa:
	.ascii	"\357\001"
	.size	gcbits..ppaa, 2

	.type	gcbits..GGGGa,@object
	.section	.rodata.gcbits..GGGGa,"aG",@progbits,gcbits..GGGGa,comdat
	.weak	gcbits..GGGGa
gcbits..GGGGa:
	.ascii	"\377\377\017"
	.size	gcbits..GGGGa, 3

	.type	gcbits..pppa,@object
	.section	.rodata.gcbits..pppa,"aG",@progbits,gcbits..pppa,comdat
	.weak	gcbits..pppa
gcbits..pppa:
	.ascii	"\357="
	.size	gcbits..pppa, 2

	.type	gcbits..ppppp,@object
	.section	.rodata.gcbits..ppppp,"aG",@progbits,gcbits..ppppp,comdat
	.weak	gcbits..ppppp
gcbits..ppppp:
	.ascii	"\357\275\367"
	.size	gcbits..ppppp, 3

	.type	gcbits..GGGa,@object
	.section	.rodata.gcbits..GGGa,"aG",@progbits,gcbits..GGGa,comdat
	.weak	gcbits..GGGa
gcbits..GGGa:
	.ascii	"\377\177"
	.size	gcbits..GGGa, 2

	.type	gcbits..GGGGGGGGGGGGGGGGGGGGGaa,@object
	.section	.rodata.gcbits..GGGGGGGGGGGGGGGGGGGGGaa,"aG",@progbits,gcbits..GGGGGGGGGGGGGGGGGGGGGaa,comdat
	.weak	gcbits..GGGGGGGGGGGGGGGGGGGGGaa
gcbits..GGGGGGGGGGGGGGGGGGGGGaa:
	.ascii	"\377\377\377\377\377\377\377\377\377\377\377\377\377\001"
	.size	gcbits..GGGGGGGGGGGGGGGGGGGGGaa, 14

	.type	gcbits..pppppppppppa,@object
	.section	.rodata.gcbits..pppppppppppa,"aG",@progbits,gcbits..pppppppppppa,comdat
	.weak	gcbits..pppppppppppa
gcbits..pppppppppppa:
	.ascii	"\357\275\367\336{\357="
	.size	gcbits..pppppppppppa, 7

	.type	gcbits..pppppppa,@object
	.section	.rodata.gcbits..pppppppa,"aG",@progbits,gcbits..pppppppa,comdat
	.weak	gcbits..pppppppa
gcbits..pppppppa:
	.ascii	"\357\275\367\336\003"
	.size	gcbits..pppppppa, 5

	.type	go..C0,@object
	.section	.data.go..C0,"aw",@progbits
	.p2align	4
go..C0:
	.quad	0
	.quad	155
	.quad	command_line_arguments.selfClosingTags
	.quad	160
	.quad	152
	.quad	gcbits..wkwka
	.quad	command_line_arguments.doctypes
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxIndent
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxDoctype
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxIf
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxElse
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxEach
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxAssignment
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxComment
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxId
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxClassName
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxAttribute
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxImport
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxExtends
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxBlock
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxTag
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxMixin
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxMixinCall
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.rgxText
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C21
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C53
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C71
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C72
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C73
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C80
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C81
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C82
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C91
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C92
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C96
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C98
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C99
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C100
	.quad	80
	.quad	80
	.quad	gcbits..GGaa
	.quad	go..C105
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C114
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C115
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C116
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C131
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C133
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C134
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C137
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C138
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C142
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C145
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C149
	.quad	160
	.quad	160
	.quad	gcbits..GGGGa
	.quad	go..C160
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C162
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C171
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C172
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C173
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C179
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C189
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C190
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C193
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C194
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C198
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C202
	.quad	160
	.quad	160
	.quad	gcbits..GGGGa
	.quad	go..C208
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C217
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C218
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C219
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C227
	.quad	200
	.quad	192
	.quad	gcbits..ppppp
	.quad	go..C236
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C237
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C241
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C242
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C243
	.quad	120
	.quad	120
	.quad	gcbits..GGGa
	.quad	go..C252
	.quad	200
	.quad	192
	.quad	gcbits..ppppp
	.quad	go..C261
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C262
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C263
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C270
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C279
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C280
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C281
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C289
	.quad	200
	.quad	192
	.quad	gcbits..ppppp
	.quad	go..C298
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C299
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C300
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C306
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C315
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C316
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C317
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C324
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C333
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C334
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C335
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C341
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C351
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C353
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C354
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C357
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C360
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C364
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C367
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C375
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C385
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C395
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C396
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C398
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C399
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C404
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C406
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C407
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C412
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C414
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C415
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C419
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C420
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C422
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C423
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C428
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C430
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C431
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C436
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C438
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C439
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C444
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C446
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C447
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C454
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C456
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C457
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C464
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C466
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C467
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C472
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C474
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C475
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C481
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C482
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C484
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C485
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C490
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C492
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C493
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C498
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C500
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C501
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C505
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C506
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C507
	.quad	840
	.quad	840
	.quad	gcbits..GGGGGGGGGGGGGGGGGGGGGaa
	.quad	go..C516
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C518
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C519
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C523
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C524
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C528
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C531
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C536
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C570
	.quad	840
	.quad	840
	.quad	gcbits..GGGGGGGGGGGGGGGGGGGGGaa
	.quad	go..C600
	.quad	440
	.quad	432
	.quad	gcbits..pppppppppppa
	.quad	go..C617
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C629
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C634
	.quad	280
	.quad	272
	.quad	gcbits..pppppppa
	.size	go..C0, 4976

	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"llvm-goc"
.Linfo_string1:
	.asciz	"./nodes.go"
.Linfo_string2:
	.asciz	"/home/wangcong/go_path/src/github.com/eknkc/amber/parser"
.Linfo_string3:
	.asciz	"command_line_arguments.selfClosingTags"
.Linfo_string4:
	.asciz	"__data"
.Linfo_string5:
	.asciz	"uint8"
.Linfo_string6:
	.asciz	"__length"
.Linfo_string7:
	.asciz	"int"
.Linfo_string8:
	.asciz	"string"
.Linfo_string9:
	.asciz	"__ARRAY_SIZE_TYPE__"
.Linfo_string10:
	.asciz	"command_line_arguments.doctypes"
.Linfo_string11:
	.asciz	"count"
.Linfo_string12:
	.asciz	"flags"
.Linfo_string13:
	.asciz	"B"
.Linfo_string14:
	.asciz	"noverflow"
.Linfo_string15:
	.asciz	"uint16"
.Linfo_string16:
	.asciz	"hash0"
.Linfo_string17:
	.asciz	"uint32"
.Linfo_string18:
	.asciz	"buckets"
.Linfo_string19:
	.asciz	"void"
.Linfo_string20:
	.asciz	"oldbuckets"
.Linfo_string21:
	.asciz	"nevacuate"
.Linfo_string22:
	.asciz	"uintptr"
.Linfo_string23:
	.asciz	"extra"
.Linfo_string24:
	.asciz	"runtime.hmap"
.Linfo_string25:
	.asciz	"runtime.writeBarrier"
.Linfo_string26:
	.asciz	"command_line_arguments.rgxIndent"
.Linfo_string27:
	.asciz	"regexpRO"
.Linfo_string28:
	.asciz	"expr"
.Linfo_string29:
	.asciz	"prog"
.Linfo_string30:
	.asciz	"Inst"
.Linfo_string31:
	.asciz	"__values"
.Linfo_string32:
	.asciz	"Op"
.Linfo_string33:
	.asciz	"InstOp"
.Linfo_string34:
	.asciz	"Out"
.Linfo_string35:
	.asciz	"Arg"
.Linfo_string36:
	.asciz	"Rune"
.Linfo_string37:
	.asciz	"int32"
.Linfo_string38:
	.asciz	"__count"
.Linfo_string39:
	.asciz	"__capacity"
.Linfo_string40:
	.asciz	"struct{*int32,int,int}"
.Linfo_string41:
	.asciz	"struct{*Inst,int,int}"
.Linfo_string42:
	.asciz	"Start"
.Linfo_string43:
	.asciz	"NumCap"
.Linfo_string44:
	.asciz	"Prog"
.Linfo_string45:
	.asciz	"onepass"
.Linfo_string46:
	.asciz	"Next"
.Linfo_string47:
	.asciz	"struct{*uint32,int,int}"
.Linfo_string48:
	.asciz	".regexp.onePassInst"
.Linfo_string49:
	.asciz	"struct{*.regexp.onePassInst,int,int}"
.Linfo_string50:
	.asciz	".regexp.onePassProg"
.Linfo_string51:
	.asciz	"prefix"
.Linfo_string52:
	.asciz	"prefixBytes"
.Linfo_string53:
	.asciz	"struct{*uint8,int,int}"
.Linfo_string54:
	.asciz	"prefixComplete"
.Linfo_string55:
	.asciz	"bool"
.Linfo_string56:
	.asciz	"prefixRune"
.Linfo_string57:
	.asciz	"prefixEnd"
.Linfo_string58:
	.asciz	"cond"
.Linfo_string59:
	.asciz	"EmptyOp"
.Linfo_string60:
	.asciz	"numSubexp"
.Linfo_string61:
	.asciz	"subexpNames"
.Linfo_string62:
	.asciz	"struct{*string,int,int}"
.Linfo_string63:
	.asciz	"longest"
.Linfo_string64:
	.asciz	".regexp.regexpRO"
.Linfo_string65:
	.asciz	"mu"
.Linfo_string66:
	.asciz	"state"
.Linfo_string67:
	.asciz	"sema"
.Linfo_string68:
	.asciz	"Mutex"
.Linfo_string69:
	.asciz	"machine"
.Linfo_string70:
	.asciz	"re"
.Linfo_string71:
	.asciz	"p"
.Linfo_string72:
	.asciz	"op"
.Linfo_string73:
	.asciz	"maxBitStateLen"
.Linfo_string74:
	.asciz	"b"
.Linfo_string75:
	.asciz	"end"
.Linfo_string76:
	.asciz	"cap"
.Linfo_string77:
	.asciz	"struct{*int,int,int}"
.Linfo_string78:
	.asciz	"jobs"
.Linfo_string79:
	.asciz	"pc"
.Linfo_string80:
	.asciz	"arg"
.Linfo_string81:
	.asciz	"pos"
.Linfo_string82:
	.asciz	".regexp.job"
.Linfo_string83:
	.asciz	"struct{*.regexp.job,int,int}"
.Linfo_string84:
	.asciz	"visited"
.Linfo_string85:
	.asciz	".regexp.bitState"
.Linfo_string86:
	.asciz	"q0"
.Linfo_string87:
	.asciz	"sparse"
.Linfo_string88:
	.asciz	"dense"
.Linfo_string89:
	.asciz	"t"
.Linfo_string90:
	.asciz	"inst"
.Linfo_string91:
	.asciz	".regexp.thread"
.Linfo_string92:
	.asciz	".regexp.entry"
.Linfo_string93:
	.asciz	"struct{*.regexp.entry,int,int}"
.Linfo_string94:
	.asciz	".regexp.queue"
.Linfo_string95:
	.asciz	"q1"
.Linfo_string96:
	.asciz	"pool"
.Linfo_string97:
	.asciz	"struct{**.regexp.thread,int,int}"
.Linfo_string98:
	.asciz	"matched"
.Linfo_string99:
	.asciz	"matchcap"
.Linfo_string100:
	.asciz	"inputBytes"
.Linfo_string101:
	.asciz	"str"
.Linfo_string102:
	.asciz	".regexp.inputBytes"
.Linfo_string103:
	.asciz	"inputString"
.Linfo_string104:
	.asciz	".regexp.inputString"
.Linfo_string105:
	.asciz	"inputReader"
.Linfo_string106:
	.asciz	"r"
.Linfo_string107:
	.asciz	"__methods"
.Linfo_string108:
	.asciz	"__type_descriptor"
.Linfo_string109:
	.asciz	"size"
.Linfo_string110:
	.asciz	"ptrdata"
.Linfo_string111:
	.asciz	"hash"
.Linfo_string112:
	.asciz	"kind"
.Linfo_string113:
	.asciz	"align"
.Linfo_string114:
	.asciz	"fieldAlign"
.Linfo_string115:
	.asciz	"hashfn"
.Linfo_string116:
	.asciz	"code"
.Linfo_string117:
	.asciz	"__go_descriptor"
.Linfo_string118:
	.asciz	"equalfn"
.Linfo_string119:
	.asciz	"gcdata"
.Linfo_string120:
	.asciz	"uncommonType"
.Linfo_string121:
	.asciz	"name"
.Linfo_string122:
	.asciz	"pkgPath"
.Linfo_string123:
	.asciz	"methods"
.Linfo_string124:
	.asciz	"mtyp"
.Linfo_string125:
	.asciz	"typ"
.Linfo_string126:
	.asciz	"tfn"
.Linfo_string127:
	.asciz	"method"
.Linfo_string128:
	.asciz	"struct{*method,int,int}"
.Linfo_string129:
	.asciz	"ptrToThis"
.Linfo_string130:
	.asciz	"_type"
.Linfo_string131:
	.asciz	"ReadRune"
.Linfo_string132:
	.asciz	"err"
.Linfo_string133:
	.asciz	"Error"
.Linfo_string134:
	.asciz	"struct{*_type,*func(*void)string}"
.Linfo_string135:
	.asciz	"__object"
.Linfo_string136:
	.asciz	"error"
.Linfo_string137:
	.asciz	"struct{int32,int,error}"
.Linfo_string138:
	.asciz	"struct{*_type,*func(*void)struct{int32,int,error}}"
.Linfo_string139:
	.asciz	"RuneReader"
.Linfo_string140:
	.asciz	"atEOT"
.Linfo_string141:
	.asciz	".regexp.inputReader"
.Linfo_string142:
	.asciz	".regexp.machine"
.Linfo_string143:
	.asciz	"struct{**.regexp.machine,int,int}"
.Linfo_string144:
	.asciz	"Regexp"
.Linfo_string145:
	.asciz	"command_line_arguments.rgxDoctype"
.Linfo_string146:
	.asciz	"command_line_arguments.rgxIf"
.Linfo_string147:
	.asciz	"command_line_arguments.rgxElse"
.Linfo_string148:
	.asciz	"command_line_arguments.rgxEach"
.Linfo_string149:
	.asciz	"command_line_arguments.rgxAssignment"
.Linfo_string150:
	.asciz	"command_line_arguments.rgxComment"
.Linfo_string151:
	.asciz	"command_line_arguments.rgxId"
.Linfo_string152:
	.asciz	"command_line_arguments.rgxClassName"
.Linfo_string153:
	.asciz	"command_line_arguments.rgxAttribute"
.Linfo_string154:
	.asciz	"command_line_arguments.rgxImport"
.Linfo_string155:
	.asciz	"command_line_arguments.rgxExtends"
.Linfo_string156:
	.asciz	"command_line_arguments.rgxBlock"
.Linfo_string157:
	.asciz	"command_line_arguments.rgxTag"
.Linfo_string158:
	.asciz	"command_line_arguments.rgxMixin"
.Linfo_string159:
	.asciz	"command_line_arguments.rgxMixinCall"
.Linfo_string160:
	.asciz	"command_line_arguments.rgxText"
.Linfo_string161:
	.asciz	"io.EOF"
.Linfo_string162:
	.asciz	"parser.findTopmostParentWithNamedBlock"
.Linfo_string163:
	.asciz	"scanner"
.Linfo_string164:
	.asciz	"reader"
.Linfo_string165:
	.asciz	"buf"
.Linfo_string166:
	.asciz	"rd"
.Linfo_string167:
	.asciz	"Read"
.Linfo_string168:
	.asciz	"n"
.Linfo_string169:
	.asciz	"struct{int,error}"
.Linfo_string170:
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string171:
	.asciz	"Reader"
.Linfo_string172:
	.asciz	"w"
.Linfo_string173:
	.asciz	"lastByte"
.Linfo_string174:
	.asciz	"lastRuneSize"
.Linfo_string175:
	.asciz	"indentStack"
.Linfo_string176:
	.asciz	"root"
.Linfo_string177:
	.asciz	"next"
.Linfo_string178:
	.asciz	"prev"
.Linfo_string179:
	.asciz	"list"
.Linfo_string180:
	.asciz	"Value"
.Linfo_string181:
	.asciz	"PrivateKey"
.Linfo_string182:
	.asciz	"Element"
.Linfo_string183:
	.asciz	"len"
.Linfo_string184:
	.asciz	"List"
.Linfo_string185:
	.asciz	"stash"
.Linfo_string186:
	.asciz	"buffer"
.Linfo_string187:
	.asciz	"line"
.Linfo_string188:
	.asciz	"col"
.Linfo_string189:
	.asciz	"lastTokenLine"
.Linfo_string190:
	.asciz	"lastTokenCol"
.Linfo_string191:
	.asciz	"lastTokenSize"
.Linfo_string192:
	.asciz	"readRaw"
.Linfo_string193:
	.asciz	".command-line-arguments.scanner"
.Linfo_string194:
	.asciz	"filename"
.Linfo_string195:
	.asciz	"fs"
.Linfo_string196:
	.asciz	"Open"
.Linfo_string197:
	.asciz	"UNNAMED"
.Linfo_string198:
	.asciz	"Close"
.Linfo_string199:
	.asciz	"Readdir"
.Linfo_string200:
	.asciz	"IsDir"
.Linfo_string201:
	.asciz	"ModTime"
.Linfo_string202:
	.asciz	"wall"
.Linfo_string203:
	.asciz	"uint64"
.Linfo_string204:
	.asciz	"ext"
.Linfo_string205:
	.asciz	"int64"
.Linfo_string206:
	.asciz	"loc"
.Linfo_string207:
	.asciz	"zone"
.Linfo_string208:
	.asciz	"offset"
.Linfo_string209:
	.asciz	"isDST"
.Linfo_string210:
	.asciz	".time.zone"
.Linfo_string211:
	.asciz	"struct{*.time.zone,int,int}"
.Linfo_string212:
	.asciz	"tx"
.Linfo_string213:
	.asciz	"when"
.Linfo_string214:
	.asciz	"index"
.Linfo_string215:
	.asciz	"isstd"
.Linfo_string216:
	.asciz	"isutc"
.Linfo_string217:
	.asciz	".time.zoneTrans"
.Linfo_string218:
	.asciz	"struct{*.time.zoneTrans,int,int}"
.Linfo_string219:
	.asciz	"cacheStart"
.Linfo_string220:
	.asciz	"cacheEnd"
.Linfo_string221:
	.asciz	"cacheZone"
.Linfo_string222:
	.asciz	"Location"
.Linfo_string223:
	.asciz	"Time"
.Linfo_string224:
	.asciz	"Mode"
.Linfo_string225:
	.asciz	"FileMode"
.Linfo_string226:
	.asciz	"Name"
.Linfo_string227:
	.asciz	"Size"
.Linfo_string228:
	.asciz	"Sys"
.Linfo_string229:
	.asciz	"struct{*_type,*func(*void)bool,*func(*void)Time,*func(*void)FileMode,*func(*void)string,*func(*void)int64,*func(*void)PrivateKey}"
.Linfo_string230:
	.asciz	"FileInfo"
.Linfo_string231:
	.asciz	"struct{*FileInfo,int,int}"
.Linfo_string232:
	.asciz	"struct{struct{*FileInfo,int,int},error}"
.Linfo_string233:
	.asciz	"Seek"
.Linfo_string234:
	.asciz	"struct{int64,error}"
.Linfo_string235:
	.asciz	"Stat"
.Linfo_string236:
	.asciz	"struct{FileInfo,error}"
.Linfo_string237:
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,int)struct{struct{*FileInfo,int,int},error},*func(*void,int64,int)struct{int64,error},*func(*void)struct{FileInfo,error}}"
.Linfo_string238:
	.asciz	"File"
.Linfo_string239:
	.asciz	"struct{File,error}"
.Linfo_string240:
	.asciz	"struct{*_type,*func(*void,string)struct{File,error}}"
.Linfo_string241:
	.asciz	"FileSystem"
.Linfo_string242:
	.asciz	"currenttoken"
.Linfo_string243:
	.asciz	"Kind"
.Linfo_string244:
	.asciz	"Data"
.Linfo_string245:
	.asciz	".command-line-arguments.token"
.Linfo_string246:
	.asciz	"namedBlocks"
.Linfo_string247:
	.asciz	"parent"
.Linfo_string248:
	.asciz	"result"
.Linfo_string249:
	.asciz	"SourcePosition"
.Linfo_string250:
	.asciz	"LineNum"
.Linfo_string251:
	.asciz	"ColNum"
.Linfo_string252:
	.asciz	"TokenLength"
.Linfo_string253:
	.asciz	"Filename"
.Linfo_string254:
	.asciz	"Children"
.Linfo_string255:
	.asciz	"Pos"
.Linfo_string256:
	.asciz	"struct{*_type,*func(*void)SourcePosition}"
.Linfo_string257:
	.asciz	"Node"
.Linfo_string258:
	.asciz	"struct{*Node,int,int}"
.Linfo_string259:
	.asciz	"Block"
.Linfo_string260:
	.asciz	"Parser"
.Linfo_string261:
	.asciz	"top"
.Linfo_string262:
	.asciz	"parser.newAssignment"
.Linfo_string263:
	.asciz	"X"
.Linfo_string264:
	.asciz	"Expression"
.Linfo_string265:
	.asciz	"Assignment"
.Linfo_string266:
	.asciz	"$ret13"
.Linfo_string267:
	.asciz	"assgn"
.Linfo_string268:
	.asciz	"parser.newComment"
.Linfo_string269:
	.asciz	"Silent"
.Linfo_string270:
	.asciz	"Comment"
.Linfo_string271:
	.asciz	"$ret3"
.Linfo_string272:
	.asciz	"dt"
.Linfo_string273:
	.asciz	"parser.newDoctype"
.Linfo_string274:
	.asciz	"Doctype"
.Linfo_string275:
	.asciz	"$ret1"
.Linfo_string276:
	.asciz	"parser.newEach"
.Linfo_string277:
	.asciz	"Y"
.Linfo_string278:
	.asciz	"Each"
.Linfo_string279:
	.asciz	"$ret12"
.Linfo_string280:
	.asciz	"each"
.Linfo_string281:
	.asciz	"parser.newCondition"
.Linfo_string282:
	.asciz	"Positive"
.Linfo_string283:
	.asciz	"Negative"
.Linfo_string284:
	.asciz	"Condition"
.Linfo_string285:
	.asciz	"$ret11"
.Linfo_string286:
	.asciz	"parser.newMixin"
.Linfo_string287:
	.asciz	"Args"
.Linfo_string288:
	.asciz	"Mixin"
.Linfo_string289:
	.asciz	"args"
.Linfo_string290:
	.asciz	"$ret14"
.Linfo_string291:
	.asciz	"mixin"
.Linfo_string292:
	.asciz	"delExp"
.Linfo_string293:
	.asciz	"i"
.Linfo_string294:
	.asciz	"parser.newMixinCall"
.Linfo_string295:
	.asciz	"MixinCall"
.Linfo_string296:
	.asciz	"$ret15"
.Linfo_string297:
	.asciz	"mixinCall"
.Linfo_string298:
	.asciz	"quoteExp"
.Linfo_string299:
	.asciz	"quotes"
.Linfo_string300:
	.asciz	"replaced"
.Linfo_string301:
	.asciz	"qi"
.Linfo_string302:
	.asciz	"parser.newNamedBlock"
.Linfo_string303:
	.asciz	"Modifier"
.Linfo_string304:
	.asciz	"NamedBlock"
.Linfo_string305:
	.asciz	"$ret7"
.Linfo_string306:
	.asciz	"bb"
.Linfo_string307:
	.asciz	"parser.newTag"
.Linfo_string308:
	.asciz	"IsInterpolated"
.Linfo_string309:
	.asciz	"Attributes"
.Linfo_string310:
	.asciz	"IsRaw"
.Linfo_string311:
	.asciz	"Attribute"
.Linfo_string312:
	.asciz	"struct{*Attribute,int,int}"
.Linfo_string313:
	.asciz	"Tag"
.Linfo_string314:
	.asciz	"$ret8"
.Linfo_string315:
	.asciz	"tag"
.Linfo_string316:
	.asciz	"parser.newText"
.Linfo_string317:
	.asciz	"Raw"
.Linfo_string318:
	.asciz	"Text"
.Linfo_string319:
	.asciz	"raw"
.Linfo_string320:
	.asciz	"$ret4"
.Linfo_string321:
	.asciz	"parser.newScanner"
.Linfo_string322:
	.asciz	"$ret44"
.Linfo_string323:
	.asciz	"s"
.Linfo_string324:
	.asciz	"command_line_arguments..import"
.Linfo_string325:
	.asciz	"parser.command_line_arguments..import"
.Linfo_string326:
	.asciz	"command_line_arguments.command_line_arguments.SourcePosition..hash"
.Linfo_string327:
	.asciz	"parser.command_line_arguments.SourcePosition..hash"
.Linfo_string328:
	.asciz	"command_line_arguments.command_line_arguments.SourcePosition..eq"
.Linfo_string329:
	.asciz	"parser.command_line_arguments.SourcePosition..eq"
.Linfo_string330:
	.asciz	"command_line_arguments.SourcePosition.Pos"
.Linfo_string331:
	.asciz	"parser.Pos..1command_line_arguments.SourcePosition"
.Linfo_string332:
	.asciz	"command_line_arguments.command_line_arguments.Doctype..hash"
.Linfo_string333:
	.asciz	"parser.command_line_arguments.Doctype..hash"
.Linfo_string334:
	.asciz	"command_line_arguments.command_line_arguments.Doctype..eq"
.Linfo_string335:
	.asciz	"parser.command_line_arguments.Doctype..eq"
.Linfo_string336:
	.asciz	"command_line_arguments.Doctype.Pos..stub"
.Linfo_string337:
	.asciz	"parser.Pos..stub..1command_line_arguments.Doctype"
.Linfo_string338:
	.asciz	"command_line_arguments.Doctype.String"
.Linfo_string339:
	.asciz	"parser.String..1command_line_arguments.Doctype"
.Linfo_string340:
	.asciz	"command_line_arguments.command_line_arguments.Comment..hash"
.Linfo_string341:
	.asciz	"parser.command_line_arguments.Comment..hash"
.Linfo_string342:
	.asciz	"command_line_arguments.command_line_arguments.Comment..eq"
.Linfo_string343:
	.asciz	"parser.command_line_arguments.Comment..eq"
.Linfo_string344:
	.asciz	"command_line_arguments.Comment.Pos..stub"
.Linfo_string345:
	.asciz	"parser.Pos..stub..1command_line_arguments.Comment"
.Linfo_string346:
	.asciz	"command_line_arguments.Block.CanInline"
.Linfo_string347:
	.asciz	"parser.CanInline..1command_line_arguments.Block"
.Linfo_string348:
	.asciz	"command_line_arguments.Block.Pos..stub"
.Linfo_string349:
	.asciz	"parser.Pos..stub..1command_line_arguments.Block"
.Linfo_string350:
	.asciz	"command_line_arguments.Block.push"
.Linfo_string351:
	.asciz	"parser.push..1command_line_arguments.Block"
.Linfo_string352:
	.asciz	"command_line_arguments.Block.pushFront"
.Linfo_string353:
	.asciz	"parser.pushFront..1command_line_arguments.Block"
.Linfo_string354:
	.asciz	"command_line_arguments.command_line_arguments.Text..hash"
.Linfo_string355:
	.asciz	"parser.command_line_arguments.Text..hash"
.Linfo_string356:
	.asciz	"command_line_arguments.command_line_arguments.Text..eq"
.Linfo_string357:
	.asciz	"parser.command_line_arguments.Text..eq"
.Linfo_string358:
	.asciz	"command_line_arguments.Text.Pos..stub"
.Linfo_string359:
	.asciz	"parser.Pos..stub..1command_line_arguments.Text"
.Linfo_string360:
	.asciz	"parser.newBlock"
.Linfo_string361:
	.asciz	"command_line_arguments.NamedBlock.CanInline..stub"
.Linfo_string362:
	.asciz	"parser.CanInline..stub..1command_line_arguments.NamedBlock"
.Linfo_string363:
	.asciz	"command_line_arguments.NamedBlock.Pos..stub"
.Linfo_string364:
	.asciz	"parser.Pos..stub..1command_line_arguments.NamedBlock"
.Linfo_string365:
	.asciz	"command_line_arguments.NamedBlock.push..stub"
.Linfo_string366:
	.asciz	"parser.push..stub..1command_line_arguments.NamedBlock"
.Linfo_string367:
	.asciz	"command_line_arguments.NamedBlock.pushFront..stub"
.Linfo_string368:
	.asciz	"parser.pushFront..stub..1command_line_arguments.NamedBlock"
.Linfo_string369:
	.asciz	"command_line_arguments.command_line_arguments.Attribute..hash"
.Linfo_string370:
	.asciz	"parser.command_line_arguments.Attribute..hash"
.Linfo_string371:
	.asciz	"command_line_arguments.command_line_arguments.Attribute..eq"
.Linfo_string372:
	.asciz	"parser.command_line_arguments.Attribute..eq"
.Linfo_string373:
	.asciz	"command_line_arguments.Attribute.Pos..stub"
.Linfo_string374:
	.asciz	"parser.Pos..stub..1command_line_arguments.Attribute"
.Linfo_string375:
	.asciz	"command_line_arguments.Tag.IsRawText"
.Linfo_string376:
	.asciz	"parser.IsRawText..1command_line_arguments.Tag"
.Linfo_string377:
	.asciz	"command_line_arguments.Tag.IsSelfClosing"
.Linfo_string378:
	.asciz	"parser.IsSelfClosing..1command_line_arguments.Tag"
.Linfo_string379:
	.asciz	"command_line_arguments.Tag.Pos..stub"
.Linfo_string380:
	.asciz	"parser.Pos..stub..1command_line_arguments.Tag"
.Linfo_string381:
	.asciz	"command_line_arguments.command_line_arguments.Condition..hash"
.Linfo_string382:
	.asciz	"parser.command_line_arguments.Condition..hash"
.Linfo_string383:
	.asciz	"command_line_arguments.command_line_arguments.Condition..eq"
.Linfo_string384:
	.asciz	"parser.command_line_arguments.Condition..eq"
.Linfo_string385:
	.asciz	"command_line_arguments.Condition.Pos..stub"
.Linfo_string386:
	.asciz	"parser.Pos..stub..1command_line_arguments.Condition"
.Linfo_string387:
	.asciz	"command_line_arguments.command_line_arguments.Each..hash"
.Linfo_string388:
	.asciz	"parser.command_line_arguments.Each..hash"
.Linfo_string389:
	.asciz	"command_line_arguments.command_line_arguments.Each..eq"
.Linfo_string390:
	.asciz	"parser.command_line_arguments.Each..eq"
.Linfo_string391:
	.asciz	"command_line_arguments.Each.Pos..stub"
.Linfo_string392:
	.asciz	"parser.Pos..stub..1command_line_arguments.Each"
.Linfo_string393:
	.asciz	"command_line_arguments.command_line_arguments.Assignment..hash"
.Linfo_string394:
	.asciz	"parser.command_line_arguments.Assignment..hash"
.Linfo_string395:
	.asciz	"command_line_arguments.command_line_arguments.Assignment..eq"
.Linfo_string396:
	.asciz	"parser.command_line_arguments.Assignment..eq"
.Linfo_string397:
	.asciz	"command_line_arguments.Assignment.Pos..stub"
.Linfo_string398:
	.asciz	"parser.Pos..stub..1command_line_arguments.Assignment"
.Linfo_string399:
	.asciz	"command_line_arguments.Mixin.Pos..stub"
.Linfo_string400:
	.asciz	"parser.Pos..stub..1command_line_arguments.Mixin"
.Linfo_string401:
	.asciz	"command_line_arguments.MixinCall.Pos..stub"
.Linfo_string402:
	.asciz	"parser.Pos..stub..1command_line_arguments.MixinCall"
.Linfo_string403:
	.asciz	"command_line_arguments.Parser.Parse"
.Linfo_string404:
	.asciz	"parser.Parse..1command_line_arguments.Parser"
.Linfo_string405:
	.asciz	"command_line_arguments.Parser.SetFilename"
.Linfo_string406:
	.asciz	"parser.SetFilename..1command_line_arguments.Parser"
.Linfo_string407:
	.asciz	"command_line_arguments.Parser.SetVirtualFilesystem"
.Linfo_string408:
	.asciz	"parser.SetVirtualFilesystem..1command_line_arguments.Parser"
.Linfo_string409:
	.asciz	"command_line_arguments.Parser.advance"
.Linfo_string410:
	.asciz	"parser.advance..1command_line_arguments.Parser"
.Linfo_string411:
	.asciz	"command_line_arguments.Parser.expect"
.Linfo_string412:
	.asciz	"parser.expect..1command_line_arguments.Parser"
.Linfo_string413:
	.asciz	"command_line_arguments.Parser.parse"
.Linfo_string414:
	.asciz	"parser.parse..1command_line_arguments.Parser"
.Linfo_string415:
	.asciz	"command_line_arguments.Parser.parseAssignment"
.Linfo_string416:
	.asciz	"parser.parseAssignment..1command_line_arguments.Parser"
.Linfo_string417:
	.asciz	"command_line_arguments.Parser.parseBlock"
.Linfo_string418:
	.asciz	"parser.parseBlock..1command_line_arguments.Parser"
.Linfo_string419:
	.asciz	"command_line_arguments.Parser.parseComment"
.Linfo_string420:
	.asciz	"parser.parseComment..1command_line_arguments.Parser"
.Linfo_string421:
	.asciz	"command_line_arguments.Parser.parseDoctype"
.Linfo_string422:
	.asciz	"parser.parseDoctype..1command_line_arguments.Parser"
.Linfo_string423:
	.asciz	"command_line_arguments.Parser.parseEach"
.Linfo_string424:
	.asciz	"parser.parseEach..1command_line_arguments.Parser"
.Linfo_string425:
	.asciz	"command_line_arguments.Parser.parseExtends"
.Linfo_string426:
	.asciz	"parser.parseExtends..1command_line_arguments.Parser"
.Linfo_string427:
	.asciz	"command_line_arguments.Parser.parseIf"
.Linfo_string428:
	.asciz	"parser.parseIf..1command_line_arguments.Parser"
.Linfo_string429:
	.asciz	"command_line_arguments.Parser.parseImport"
.Linfo_string430:
	.asciz	"parser.parseImport..1command_line_arguments.Parser"
.Linfo_string431:
	.asciz	"command_line_arguments.Parser.parseMixin"
.Linfo_string432:
	.asciz	"parser.parseMixin..1command_line_arguments.Parser"
.Linfo_string433:
	.asciz	"command_line_arguments.Parser.parseMixinCall"
.Linfo_string434:
	.asciz	"parser.parseMixinCall..1command_line_arguments.Parser"
.Linfo_string435:
	.asciz	"command_line_arguments.Parser.parseNamedBlock"
.Linfo_string436:
	.asciz	"parser.parseNamedBlock..1command_line_arguments.Parser"
.Linfo_string437:
	.asciz	"command_line_arguments.Parser.parseRelativeFile"
.Linfo_string438:
	.asciz	"parser.parseRelativeFile..1command_line_arguments.Parser"
.Linfo_string439:
	.asciz	"command_line_arguments.Parser.parseTag"
.Linfo_string440:
	.asciz	"parser.parseTag..1command_line_arguments.Parser"
.Linfo_string441:
	.asciz	"command_line_arguments.Parser.parseText"
.Linfo_string442:
	.asciz	"parser.parseText..1command_line_arguments.Parser"
.Linfo_string443:
	.asciz	"command_line_arguments.Parser.pos"
.Linfo_string444:
	.asciz	"parser.pos..1command_line_arguments.Parser"
.Linfo_string445:
	.asciz	"command_line_arguments.scanner.Next"
.Linfo_string446:
	.asciz	"parser.Next..1command_line_arguments.scanner"
.Linfo_string447:
	.asciz	"command_line_arguments.scanner.NextRaw"
.Linfo_string448:
	.asciz	"parser.NextRaw..1command_line_arguments.scanner"
.Linfo_string449:
	.asciz	"command_line_arguments.scanner.Pos"
.Linfo_string450:
	.asciz	"parser.Pos..1command_line_arguments.scanner"
.Linfo_string451:
	.asciz	"command_line_arguments.scanner.consume"
.Linfo_string452:
	.asciz	"parser.consume..1command_line_arguments.scanner"
.Linfo_string453:
	.asciz	"command_line_arguments.scanner.ensureBuffer"
.Linfo_string454:
	.asciz	"parser.ensureBuffer..1command_line_arguments.scanner"
.Linfo_string455:
	.asciz	"command_line_arguments.scanner.scanAssignment"
.Linfo_string456:
	.asciz	"parser.scanAssignment..1command_line_arguments.scanner"
.Linfo_string457:
	.asciz	"command_line_arguments.scanner.scanAttribute"
.Linfo_string458:
	.asciz	"parser.scanAttribute..1command_line_arguments.scanner"
.Linfo_string459:
	.asciz	"command_line_arguments.scanner.scanBlock"
.Linfo_string460:
	.asciz	"parser.scanBlock..1command_line_arguments.scanner"
.Linfo_string461:
	.asciz	"command_line_arguments.scanner.scanClassName"
.Linfo_string462:
	.asciz	"parser.scanClassName..1command_line_arguments.scanner"
.Linfo_string463:
	.asciz	"command_line_arguments.scanner.scanComment"
.Linfo_string464:
	.asciz	"parser.scanComment..1command_line_arguments.scanner"
.Linfo_string465:
	.asciz	"command_line_arguments.scanner.scanCondition"
.Linfo_string466:
	.asciz	"parser.scanCondition..1command_line_arguments.scanner"
.Linfo_string467:
	.asciz	"command_line_arguments.scanner.scanDoctype"
.Linfo_string468:
	.asciz	"parser.scanDoctype..1command_line_arguments.scanner"
.Linfo_string469:
	.asciz	"command_line_arguments.scanner.scanEach"
.Linfo_string470:
	.asciz	"parser.scanEach..1command_line_arguments.scanner"
.Linfo_string471:
	.asciz	"command_line_arguments.scanner.scanExtends"
.Linfo_string472:
	.asciz	"parser.scanExtends..1command_line_arguments.scanner"
.Linfo_string473:
	.asciz	"command_line_arguments.scanner.scanId"
.Linfo_string474:
	.asciz	"parser.scanId..1command_line_arguments.scanner"
.Linfo_string475:
	.asciz	"command_line_arguments.scanner.scanImport"
.Linfo_string476:
	.asciz	"parser.scanImport..1command_line_arguments.scanner"
.Linfo_string477:
	.asciz	"command_line_arguments.scanner.scanIndent"
.Linfo_string478:
	.asciz	"parser.scanIndent..1command_line_arguments.scanner"
.Linfo_string479:
	.asciz	"command_line_arguments.scanner.scanMixin"
.Linfo_string480:
	.asciz	"parser.scanMixin..1command_line_arguments.scanner"
.Linfo_string481:
	.asciz	"command_line_arguments.scanner.scanMixinCall"
.Linfo_string482:
	.asciz	"parser.scanMixinCall..1command_line_arguments.scanner"
.Linfo_string483:
	.asciz	"command_line_arguments.scanner.scanTag"
.Linfo_string484:
	.asciz	"parser.scanTag..1command_line_arguments.scanner"
.Linfo_string485:
	.asciz	"command_line_arguments.scanner.scanText"
.Linfo_string486:
	.asciz	"parser.scanText..1command_line_arguments.scanner"
.Linfo_string487:
	.asciz	"command_line_arguments.command_line_arguments.scanner..hash"
.Linfo_string488:
	.asciz	"parser.command_line_arguments.scanner..hash"
.Linfo_string489:
	.asciz	"command_line_arguments.command_line_arguments.scanner..eq"
.Linfo_string490:
	.asciz	"parser.command_line_arguments.scanner..eq"
.Linfo_string491:
	.asciz	"parser.newParser"
.Linfo_string492:
	.asciz	"command_line_arguments.StringParser"
.Linfo_string493:
	.asciz	"parser.StringParser"
.Linfo_string494:
	.asciz	"struct{*Parser,error}"
.Linfo_string495:
	.asciz	"command_line_arguments.ByteParser"
.Linfo_string496:
	.asciz	"parser.ByteParser"
.Linfo_string497:
	.asciz	"command_line_arguments.FileParser"
.Linfo_string498:
	.asciz	"parser.FileParser"
.Linfo_string499:
	.asciz	"command_line_arguments.VirtualFileParser"
.Linfo_string500:
	.asciz	"parser.VirtualFileParser"
.Linfo_string501:
	.asciz	"parser.func1"
.Linfo_string502:
	.asciz	"parser.command_line_arguments..thunk0"
.Linfo_string503:
	.asciz	"parser.r"
.Linfo_string504:
	.asciz	"key"
.Linfo_string505:
	.asciz	"seed"
.Linfo_string506:
	.asciz	"$ret80"
.Linfo_string507:
	.asciz	"key1"
.Linfo_string508:
	.asciz	"key2"
.Linfo_string509:
	.asciz	"$ret81"
.Linfo_string510:
	.asciz	"$ret82"
.Linfo_string511:
	.asciz	"$ret83"
.Linfo_string512:
	.asciz	"$this0"
.Linfo_string513:
	.asciz	"d"
.Linfo_string514:
	.asciz	"defined"
.Linfo_string515:
	.asciz	"$ret2"
.Linfo_string516:
	.asciz	"$ret84"
.Linfo_string517:
	.asciz	"$ret85"
.Linfo_string518:
	.asciz	"$this1"
.Linfo_string519:
	.asciz	"$ret6"
.Linfo_string520:
	.asciz	"allText"
.Linfo_string521:
	.asciz	"child"
.Linfo_string522:
	.asciz	"ok"
.Linfo_string523:
	.asciz	"txt"
.Linfo_string524:
	.asciz	"$this2"
.Linfo_string525:
	.asciz	"node"
.Linfo_string526:
	.asciz	"$ret86"
.Linfo_string527:
	.asciz	"$ret87"
.Linfo_string528:
	.asciz	"$this3"
.Linfo_string529:
	.asciz	"block"
.Linfo_string530:
	.asciz	"$ret5"
.Linfo_string531:
	.asciz	"$this4"
.Linfo_string532:
	.asciz	"$ret68"
.Linfo_string533:
	.asciz	"$this5"
.Linfo_string534:
	.asciz	"$this8"
.Linfo_string535:
	.asciz	"$p9"
.Linfo_string536:
	.asciz	"$this6"
.Linfo_string537:
	.asciz	"$p7"
.Linfo_string538:
	.asciz	"$ret88"
.Linfo_string539:
	.asciz	"$ret89"
.Linfo_string540:
	.asciz	"$this10"
.Linfo_string541:
	.asciz	"$ret10"
.Linfo_string542:
	.asciz	"$ret9"
.Linfo_string543:
	.asciz	"$this11"
.Linfo_string544:
	.asciz	"$ret90"
.Linfo_string545:
	.asciz	"$ret91"
.Linfo_string546:
	.asciz	"$this12"
.Linfo_string547:
	.asciz	"$ret92"
.Linfo_string548:
	.asciz	"$ret93"
.Linfo_string549:
	.asciz	"$this13"
.Linfo_string550:
	.asciz	"$ret94"
.Linfo_string551:
	.asciz	"$ret95"
.Linfo_string552:
	.asciz	"$this14"
.Linfo_string553:
	.asciz	"$this15"
.Linfo_string554:
	.asciz	"$this16"
.Linfo_string555:
	.asciz	"$ret25"
.Linfo_string556:
	.asciz	"ours"
.Linfo_string557:
	.asciz	"nb"
.Linfo_string558:
	.asciz	"curtok"
.Linfo_string559:
	.asciz	"$ret29"
.Linfo_string560:
	.asciz	"$ret28"
.Linfo_string561:
	.asciz	"tok"
.Linfo_string562:
	.asciz	"$ret39"
.Linfo_string563:
	.asciz	"$ret31"
.Linfo_string564:
	.asciz	"attr"
.Linfo_string565:
	.asciz	"cmnt"
.Linfo_string566:
	.asciz	"$ret37"
.Linfo_string567:
	.asciz	"$ret36"
.Linfo_string568:
	.asciz	"ech"
.Linfo_string569:
	.asciz	"$ret33"
.Linfo_string570:
	.asciz	"parser"
.Linfo_string571:
	.asciz	"$ret30"
.Linfo_string572:
	.asciz	"cnd"
.Linfo_string573:
	.asciz	"$ret32"
.Linfo_string574:
	.asciz	"$ret34"
.Linfo_string575:
	.asciz	"$ret41"
.Linfo_string576:
	.asciz	"$ret42"
.Linfo_string577:
	.asciz	"$ret35"
.Linfo_string578:
	.asciz	"$ret27"
.Linfo_string579:
	.asciz	"id"
.Linfo_string580:
	.asciz	"cls"
.Linfo_string581:
	.asciz	"c"
.Linfo_string582:
	.asciz	"$ret40"
.Linfo_string583:
	.asciz	"$ret38"
.Linfo_string584:
	.asciz	"stashed"
.Linfo_string585:
	.asciz	"$ret46"
.Linfo_string586:
	.asciz	"outdent"
.Linfo_string587:
	.asciz	"level"
.Linfo_string588:
	.asciz	"$ret47"
.Linfo_string589:
	.asciz	"$ret45"
.Linfo_string590:
	.asciz	"runes"
.Linfo_string591:
	.asciz	"sm"
.Linfo_string592:
	.asciz	"$ret52"
.Linfo_string593:
	.asciz	"$ret56"
.Linfo_string594:
	.asciz	"$ret59"
.Linfo_string595:
	.asciz	"$ret55"
.Linfo_string596:
	.asciz	"$ret53"
.Linfo_string597:
	.asciz	"$ret50"
.Linfo_string598:
	.asciz	"$ret49"
.Linfo_string599:
	.asciz	"$ret51"
.Linfo_string600:
	.asciz	"$ret58"
.Linfo_string601:
	.asciz	"$ret54"
.Linfo_string602:
	.asciz	"$ret57"
.Linfo_string603:
	.asciz	"head"
.Linfo_string604:
	.asciz	"value"
.Linfo_string605:
	.asciz	"match"
.Linfo_string606:
	.asciz	"$ret48"
.Linfo_string607:
	.asciz	"newIndent"
.Linfo_string608:
	.asciz	"$ret61"
.Linfo_string609:
	.asciz	"$ret62"
.Linfo_string610:
	.asciz	"$ret60"
.Linfo_string611:
	.asciz	"$ret63"
.Linfo_string612:
	.asciz	"$ret96"
.Linfo_string613:
	.asciz	"$ret97"
.Linfo_string614:
	.asciz	"rdr"
.Linfo_string615:
	.asciz	"$ret16"
.Linfo_string616:
	.asciz	"input"
.Linfo_string617:
	.asciz	"$ret17"
.Linfo_string618:
	.asciz	"$ret19"
.Linfo_string619:
	.asciz	"$ret22"
.Linfo_string620:
	.asciz	"$ret21"
.Linfo_string621:
	.asciz	"file"
.Linfo_string622:
	.asciz	"$ret24"
.Linfo_string623:
	.asciz	"$ret23"
.Linfo_string624:
	.asciz	"__go_thunk_parameter"
.Linfo_string625:
	.asciz	"fn"
.Linfo_string626:
	.asciz	"struct{*__go_descriptor}"
.Linfo_string627:
	.asciz	"$ret77"
.Linfo_string628:
	.asciz	"pr.0"
.Linfo_string629:
	.asciz	"rs"
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin1
	.quad	.Ltmp2
	.short	1
	.byte	85
	.quad	.Ltmp2
	.quad	.Ltmp3
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Ltmp2
	.quad	.Ltmp4
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp4
	.quad	.Lfunc_end1
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin2
	.quad	.Ltmp12
	.short	1
	.byte	85
	.quad	.Ltmp14
	.quad	.Ltmp16
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Lfunc_begin2
	.quad	.Ltmp13
	.short	1
	.byte	84
	.quad	.Ltmp14
	.quad	.Ltmp17
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Lfunc_begin3
	.quad	.Ltmp21
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Lfunc_begin4
	.quad	.Ltmp22
	.short	1
	.byte	85
	.quad	.Ltmp22
	.quad	.Ltmp23
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp22
	.quad	.Ltmp24
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp24
	.quad	.Lfunc_end4
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Lfunc_begin5
	.quad	.Ltmp31
	.short	1
	.byte	85
	.quad	.Ltmp31
	.quad	.Ltmp38
	.short	1
	.byte	83
	.quad	.Ltmp40
	.quad	.Ltmp41
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Lfunc_begin5
	.quad	.Ltmp29
	.short	1
	.byte	84
	.quad	.Ltmp29
	.quad	.Ltmp39
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Lfunc_begin6
	.quad	.Ltmp46
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Lfunc_begin7
	.quad	.Ltmp49
	.short	1
	.byte	85
	.quad	.Ltmp49
	.quad	.Ltmp54
	.short	1
	.byte	83
	.quad	.Ltmp56
	.quad	.Ltmp57
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp50
	.quad	.Ltmp51
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp51
	.quad	.Ltmp52
	.short	7
	.byte	112
	.byte	0
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp53
	.quad	.Ltmp55
	.short	7
	.byte	112
	.byte	0
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp50
	.quad	.Ltmp55
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp55
	.quad	.Ltmp56
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Lfunc_begin8
	.quad	.Ltmp59
	.short	1
	.byte	85
	.quad	.Ltmp59
	.quad	.Ltmp60
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp59
	.quad	.Ltmp61
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp61
	.quad	.Lfunc_end8
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Lfunc_begin9
	.quad	.Ltmp68
	.short	1
	.byte	85
	.quad	.Ltmp68
	.quad	.Ltmp76
	.short	1
	.byte	83
	.quad	.Ltmp78
	.quad	.Ltmp79
	.short	1
	.byte	83
	.quad	.Ltmp79
	.quad	.Ltmp80
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Lfunc_begin9
	.quad	.Ltmp66
	.short	1
	.byte	84
	.quad	.Ltmp66
	.quad	.Ltmp77
	.short	1
	.byte	94
	.quad	.Ltmp78
	.quad	.Ltmp79
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Lfunc_begin10
	.quad	.Ltmp85
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Lfunc_begin11
	.quad	.Ltmp95
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp87
	.quad	.Ltmp102
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp102
	.quad	.Lfunc_end11
	.short	3
	.byte	16
	.byte	1
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp89
	.quad	.Lfunc_end11
	.short	3
	.byte	16
	.byte	1
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp93
	.quad	.Ltmp94
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp94
	.quad	.Ltmp96
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp94
	.quad	.Ltmp96
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp96
	.quad	.Ltmp101
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp96
	.quad	.Ltmp101
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Lfunc_begin12
	.quad	.Ltmp107
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Lfunc_begin13
	.quad	.Ltmp108
	.short	1
	.byte	85
	.quad	.Ltmp108
	.quad	.Ltmp110
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Lfunc_begin14
	.quad	.Ltmp116
	.short	1
	.byte	85
	.quad	.Ltmp116
	.quad	.Ltmp123
	.short	1
	.byte	94
	.quad	.Ltmp128
	.quad	.Ltmp129
	.short	1
	.byte	85
	.quad	.Ltmp130
	.quad	.Lfunc_end14
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Lfunc_begin14
	.quad	.Ltmp114
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp114
	.quad	.Ltmp115
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp115
	.quad	.Ltmp127
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp128
	.quad	.Lfunc_end14
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Lfunc_begin15
	.quad	.Ltmp132
	.short	1
	.byte	85
	.quad	.Ltmp132
	.quad	.Ltmp133
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp132
	.quad	.Ltmp134
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp134
	.quad	.Lfunc_end15
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Lfunc_begin16
	.quad	.Ltmp141
	.short	1
	.byte	85
	.quad	.Ltmp141
	.quad	.Ltmp149
	.short	1
	.byte	83
	.quad	.Ltmp151
	.quad	.Ltmp152
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Lfunc_begin16
	.quad	.Ltmp139
	.short	1
	.byte	84
	.quad	.Ltmp139
	.quad	.Ltmp150
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Lfunc_begin17
	.quad	.Ltmp157
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp159
	.quad	.Ltmp164
	.short	1
	.byte	83
	.quad	.Ltmp165
	.quad	.Lfunc_end18
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp159
	.quad	.Ltmp164
	.short	1
	.byte	83
	.quad	.Ltmp165
	.quad	.Lfunc_end18
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Lfunc_begin19
	.quad	.Ltmp169
	.short	1
	.byte	85
	.quad	.Ltmp170
	.quad	.Ltmp171
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp167
	.quad	.Ltmp169
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp169
	.quad	.Ltmp170
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Lfunc_begin20
	.quad	.Ltmp176
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Lfunc_begin21
	.quad	.Ltmp179
	.short	1
	.byte	85
	.quad	.Ltmp180
	.quad	.Ltmp181
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Lfunc_begin21
	.quad	.Ltmp179
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp180
	.quad	.Ltmp182
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Lfunc_begin22
	.quad	.Ltmp185
	.short	1
	.byte	85
	.quad	.Ltmp186
	.quad	.Ltmp187
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Lfunc_begin22
	.quad	.Ltmp185
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp186
	.quad	.Ltmp188
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Lfunc_begin23
	.quad	.Ltmp189
	.short	1
	.byte	85
	.quad	.Ltmp189
	.quad	.Ltmp190
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp189
	.quad	.Ltmp191
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp191
	.quad	.Lfunc_end23
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Lfunc_begin24
	.quad	.Ltmp198
	.short	1
	.byte	85
	.quad	.Ltmp198
	.quad	.Ltmp208
	.short	1
	.byte	83
	.quad	.Ltmp210
	.quad	.Ltmp211
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Lfunc_begin24
	.quad	.Ltmp196
	.short	1
	.byte	84
	.quad	.Ltmp196
	.quad	.Ltmp209
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Lfunc_begin25
	.quad	.Ltmp216
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Lfunc_begin26
	.quad	.Ltmp220
	.short	1
	.byte	85
	.quad	.Ltmp220
	.quad	.Ltmp223
	.short	1
	.byte	83
	.quad	.Ltmp224
	.quad	.Ltmp225
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp218
	.quad	.Ltmp222
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Lfunc_begin27
	.quad	.Ltmp227
	.short	1
	.byte	85
	.quad	.Ltmp227
	.quad	.Ltmp237
	.short	1
	.byte	94
	.quad	.Ltmp238
	.quad	.Lfunc_end27
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp227
	.quad	.Ltmp236
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp236
	.quad	.Lfunc_end27
	.short	3
	.byte	16
	.byte	1
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp230
	.quad	.Ltmp231
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp231
	.quad	.Ltmp232
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Lfunc_begin28
	.quad	.Ltmp243
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Lfunc_begin29
	.quad	.Ltmp244
	.short	1
	.byte	85
	.quad	.Ltmp244
	.quad	.Ltmp245
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp244
	.quad	.Ltmp246
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp246
	.quad	.Lfunc_end29
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Lfunc_begin30
	.quad	.Ltmp253
	.short	1
	.byte	85
	.quad	.Ltmp253
	.quad	.Ltmp261
	.short	1
	.byte	83
	.quad	.Ltmp263
	.quad	.Ltmp264
	.short	1
	.byte	83
	.quad	.Ltmp264
	.quad	.Ltmp265
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Lfunc_begin30
	.quad	.Ltmp251
	.short	1
	.byte	84
	.quad	.Ltmp251
	.quad	.Ltmp262
	.short	1
	.byte	94
	.quad	.Ltmp263
	.quad	.Ltmp264
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Lfunc_begin31
	.quad	.Ltmp270
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Lfunc_begin32
	.quad	.Ltmp271
	.short	1
	.byte	85
	.quad	.Ltmp271
	.quad	.Ltmp272
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp271
	.quad	.Ltmp273
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp273
	.quad	.Lfunc_end32
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Lfunc_begin33
	.quad	.Ltmp280
	.short	1
	.byte	85
	.quad	.Ltmp280
	.quad	.Ltmp290
	.short	1
	.byte	83
	.quad	.Ltmp292
	.quad	.Ltmp293
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Lfunc_begin33
	.quad	.Ltmp278
	.short	1
	.byte	84
	.quad	.Ltmp278
	.quad	.Ltmp291
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Lfunc_begin34
	.quad	.Ltmp298
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin35
	.quad	.Ltmp299
	.short	1
	.byte	85
	.quad	.Ltmp299
	.quad	.Ltmp300
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp299
	.quad	.Ltmp301
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp301
	.quad	.Lfunc_end35
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Lfunc_begin36
	.quad	.Ltmp308
	.short	1
	.byte	85
	.quad	.Ltmp308
	.quad	.Ltmp316
	.short	1
	.byte	83
	.quad	.Ltmp318
	.quad	.Ltmp319
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Lfunc_begin36
	.quad	.Ltmp306
	.short	1
	.byte	84
	.quad	.Ltmp306
	.quad	.Ltmp317
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Lfunc_begin37
	.quad	.Ltmp324
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Lfunc_begin38
	.quad	.Ltmp328
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Lfunc_begin39
	.quad	.Ltmp332
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Lfunc_begin40
	.quad	.Ltmp435
	.short	1
	.byte	85
	.quad	.Ltmp435
	.quad	.Ltmp443
	.short	1
	.byte	83
	.quad	.Ltmp444
	.quad	.Ltmp447
	.short	1
	.byte	83
	.quad	.Ltmp447
	.quad	.Ltmp448
	.short	1
	.byte	85
	.quad	.Ltmp449
	.quad	.Ltmp452
	.short	1
	.byte	92
	.quad	.Ltmp453
	.quad	.Ltmp456
	.short	1
	.byte	92
	.quad	.Ltmp457
	.quad	.Ltmp460
	.short	1
	.byte	83
	.quad	.Ltmp461
	.quad	.Ltmp463
	.short	1
	.byte	85
	.quad	.Ltmp464
	.quad	.Ltmp465
	.short	1
	.byte	85
	.quad	.Ltmp466
	.quad	.Ltmp467
	.short	1
	.byte	92
	.quad	.Ltmp468
	.quad	.Ltmp469
	.short	1
	.byte	83
	.quad	.Ltmp470
	.quad	.Ltmp477
	.short	1
	.byte	83
	.quad	.Ltmp482
	.quad	.Ltmp484
	.short	1
	.byte	80
	.quad	.Ltmp488
	.quad	.Ltmp499
	.short	1
	.byte	93
	.quad	.Ltmp500
	.quad	.Ltmp504
	.short	1
	.byte	93
	.quad	.Ltmp507
	.quad	.Ltmp508
	.short	1
	.byte	93
	.quad	.Ltmp534
	.quad	.Ltmp537
	.short	1
	.byte	83
	.quad	.Ltmp540
	.quad	.Ltmp543
	.short	1
	.byte	86
	.quad	.Ltmp551
	.quad	.Ltmp551
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp442
	.quad	.Ltmp444
	.short	2
	.byte	119
	.byte	16
	.quad	.Ltmp546
	.quad	.Ltmp547
	.short	2
	.byte	119
	.byte	16
	.quad	.Ltmp548
	.quad	.Ltmp549
	.short	2
	.byte	119
	.byte	16
	.quad	.Ltmp552
	.quad	.Ltmp553
	.short	2
	.byte	119
	.byte	16
	.quad	.Ltmp554
	.quad	.Ltmp559
	.short	2
	.byte	119
	.byte	16
	.quad	.Ltmp560
	.quad	.Lfunc_end40
	.short	2
	.byte	119
	.byte	16
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp465
	.quad	.Ltmp466
	.short	2
	.byte	119
	.byte	16
	.quad	.Ltmp538
	.quad	.Ltmp549
	.short	2
	.byte	119
	.byte	16
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp478
	.quad	.Ltmp479
	.short	1
	.byte	82
	.quad	.Ltmp479
	.quad	.Ltmp507
	.short	2
	.byte	119
	.byte	24
	.quad	.Ltmp528
	.quad	.Ltmp531
	.short	2
	.byte	119
	.byte	24
	.quad	.Ltmp549
	.quad	.Ltmp550
	.short	2
	.byte	119
	.byte	24
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Ltmp487
	.quad	.Ltmp507
	.short	1
	.byte	95
	.quad	.Ltmp528
	.quad	.Ltmp531
	.short	1
	.byte	95
	.quad	.Ltmp549
	.quad	.Ltmp550
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp488
	.quad	.Ltmp489
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp488
	.quad	.Ltmp489
	.short	1
	.byte	93
	.quad	.Ltmp493
	.quad	.Ltmp500
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp508
	.quad	.Ltmp512
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Ltmp513
	.quad	.Ltmp514
	.short	1
	.byte	94
	.quad	.Ltmp522
	.quad	.Ltmp525
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp515
	.quad	.Ltmp516
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp516
	.quad	.Ltmp521
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp524
	.quad	.Ltmp525
	.short	3
	.byte	112
	.byte	127
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin41
	.quad	.Ltmp561
	.short	1
	.byte	85
	.quad	.Ltmp561
	.quad	.Ltmp563
	.short	1
	.byte	80
	.quad	.Ltmp564
	.quad	.Ltmp565
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Lfunc_begin42
	.quad	.Ltmp566
	.short	1
	.byte	85
	.quad	.Ltmp566
	.quad	.Ltmp568
	.short	1
	.byte	80
	.quad	.Ltmp569
	.quad	.Ltmp570
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Lfunc_begin43
	.quad	.Ltmp573
	.short	1
	.byte	85
	.quad	.Ltmp573
	.quad	.Ltmp574
	.short	1
	.byte	83
	.quad	.Ltmp575
	.quad	.Ltmp576
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Lfunc_begin44
	.quad	.Ltmp583
	.short	1
	.byte	85
	.quad	.Ltmp585
	.quad	.Ltmp586
	.short	1
	.byte	85
	.quad	.Ltmp587
	.quad	.Ltmp588
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin44
	.quad	.Ltmp583
	.short	1
	.byte	84
	.quad	.Ltmp585
	.quad	.Ltmp589
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Ltmp580
	.quad	.Ltmp584
	.short	1
	.byte	83
	.quad	.Ltmp587
	.quad	.Ltmp590
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp580
	.quad	.Ltmp584
	.short	1
	.byte	83
	.quad	.Ltmp587
	.quad	.Ltmp590
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Lfunc_begin45
	.quad	.Ltmp597
	.short	1
	.byte	85
	.quad	.Ltmp599
	.quad	.Ltmp600
	.short	1
	.byte	85
	.quad	.Ltmp602
	.quad	.Ltmp603
	.short	1
	.byte	85
	.quad	.Ltmp605
	.quad	.Ltmp606
	.short	1
	.byte	85
	.quad	.Ltmp608
	.quad	.Ltmp609
	.short	1
	.byte	85
	.quad	.Ltmp611
	.quad	.Ltmp612
	.short	1
	.byte	85
	.quad	.Ltmp614
	.quad	.Ltmp615
	.short	1
	.byte	85
	.quad	.Ltmp616
	.quad	.Ltmp617
	.short	1
	.byte	85
	.quad	.Ltmp618
	.quad	.Ltmp619
	.short	1
	.byte	85
	.quad	.Ltmp620
	.quad	.Ltmp621
	.short	1
	.byte	85
	.quad	.Ltmp623
	.quad	.Ltmp624
	.short	1
	.byte	85
	.quad	.Ltmp626
	.quad	.Ltmp627
	.short	1
	.byte	85
	.quad	.Ltmp629
	.quad	.Ltmp630
	.short	1
	.byte	85
	.quad	.Ltmp633
	.quad	.Ltmp634
	.short	1
	.byte	85
	.quad	.Ltmp635
	.quad	.Ltmp636
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp598
	.quad	.Ltmp599
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp601
	.quad	.Ltmp602
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp604
	.quad	.Ltmp605
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp607
	.quad	.Ltmp608
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp610
	.quad	.Ltmp611
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp613
	.quad	.Ltmp614
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp622
	.quad	.Ltmp623
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp625
	.quad	.Ltmp626
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp628
	.quad	.Ltmp629
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp631
	.quad	.Ltmp632
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp632
	.quad	.Ltmp633
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Lfunc_begin46
	.quad	.Ltmp637
	.short	1
	.byte	85
	.quad	.Ltmp637
	.quad	.Ltmp652
	.short	1
	.byte	94
	.quad	.Ltmp653
	.quad	.Lfunc_end46
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp639
	.quad	.Ltmp642
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp642
	.quad	.Ltmp647
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp642
	.quad	.Ltmp647
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp642
	.quad	.Ltmp651
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp642
	.quad	.Ltmp651
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Lfunc_begin47
	.quad	.Ltmp654
	.short	1
	.byte	85
	.quad	.Ltmp654
	.quad	.Ltmp728
	.short	1
	.byte	94
	.quad	.Ltmp729
	.quad	.Lfunc_end47
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Lfunc_begin47
	.quad	.Ltmp654
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp654
	.quad	.Ltmp654
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp654
	.quad	.Ltmp683
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp686
	.quad	.Ltmp702
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp709
	.quad	.Ltmp714
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp719
	.quad	.Ltmp724
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp731
	.quad	.Ltmp733
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp655
	.quad	.Ltmp656
	.short	1
	.byte	83
	.quad	.Ltmp656
	.quad	.Ltmp727
	.short	2
	.byte	119
	.byte	24
	.quad	.Ltmp729
	.quad	.Lfunc_end47
	.short	2
	.byte	119
	.byte	24
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp655
	.quad	.Ltmp656
	.short	1
	.byte	83
	.quad	.Ltmp656
	.quad	.Ltmp727
	.short	2
	.byte	119
	.byte	24
	.quad	.Ltmp729
	.quad	.Lfunc_end47
	.short	2
	.byte	119
	.byte	24
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp664
	.quad	.Ltmp665
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp665
	.quad	.Ltmp669
	.short	1
	.byte	81
	.quad	.Ltmp731
	.quad	.Ltmp732
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp667
	.quad	.Ltmp672
	.short	1
	.byte	86
	.quad	.Ltmp682
	.quad	.Ltmp686
	.short	1
	.byte	86
	.quad	.Ltmp702
	.quad	.Ltmp703
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp671
	.quad	.Ltmp672
	.short	1
	.byte	93
	.quad	.Ltmp682
	.quad	.Ltmp686
	.short	1
	.byte	93
	.quad	.Ltmp702
	.quad	.Ltmp703
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin48
	.quad	.Ltmp734
	.short	1
	.byte	85
	.quad	.Ltmp734
	.quad	.Ltmp756
	.short	1
	.byte	94
	.quad	.Ltmp758
	.quad	.Lfunc_end48
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Ltmp736
	.quad	.Ltmp757
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp739
	.quad	.Ltmp746
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Ltmp739
	.quad	.Ltmp746
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Ltmp739
	.quad	.Ltmp755
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp739
	.quad	.Ltmp755
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Lfunc_begin49
	.quad	.Ltmp759
	.short	1
	.byte	85
	.quad	.Ltmp759
	.quad	.Ltmp773
	.short	1
	.byte	94
	.quad	.Ltmp774
	.quad	.Lfunc_end49
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp760
	.quad	.Ltmp763
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp765
	.quad	.Ltmp768
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Ltmp765
	.quad	.Ltmp768
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp765
	.quad	.Ltmp772
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Ltmp765
	.quad	.Ltmp772
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin50
	.quad	.Ltmp775
	.short	1
	.byte	85
	.quad	.Ltmp775
	.quad	.Ltmp799
	.short	1
	.byte	94
	.quad	.Ltmp801
	.quad	.Lfunc_end50
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp777
	.quad	.Ltmp800
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp780
	.quad	.Ltmp783
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp780
	.quad	.Ltmp783
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp780
	.quad	.Ltmp798
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Ltmp780
	.quad	.Ltmp798
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Lfunc_begin51
	.quad	.Ltmp804
	.short	1
	.byte	85
	.quad	.Ltmp804
	.quad	.Ltmp809
	.short	1
	.byte	83
	.quad	.Ltmp816
	.quad	.Ltmp817
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Ltmp806
	.quad	.Ltmp808
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Ltmp809
	.quad	.Ltmp814
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Ltmp813
	.quad	.Ltmp815
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Lfunc_begin52
	.quad	.Ltmp819
	.short	1
	.byte	85
	.quad	.Ltmp819
	.quad	.Ltmp852
	.short	1
	.byte	83
	.quad	.Ltmp854
	.quad	.Ltmp855
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp820
	.quad	.Ltmp823
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp825
	.quad	.Ltmp828
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Ltmp825
	.quad	.Ltmp828
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp825
	.quad	.Ltmp850
	.short	1
	.byte	94
	.quad	.Ltmp851
	.quad	.Ltmp853
	.short	1
	.byte	94
	.quad	.Ltmp854
	.quad	.Lfunc_end52
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp825
	.quad	.Ltmp850
	.short	1
	.byte	94
	.quad	.Ltmp851
	.quad	.Ltmp853
	.short	1
	.byte	94
	.quad	.Ltmp854
	.quad	.Lfunc_end52
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Lfunc_begin53
	.quad	.Ltmp857
	.short	1
	.byte	85
	.quad	.Ltmp857
	.quad	.Ltmp867
	.short	1
	.byte	94
	.quad	.Ltmp868
	.quad	.Lfunc_end53
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Ltmp858
	.quad	.Ltmp860
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Ltmp861
	.quad	.Ltmp866
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Ltmp861
	.quad	.Ltmp866
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Lfunc_begin54
	.quad	.Ltmp870
	.short	1
	.byte	85
	.quad	.Ltmp870
	.quad	.Ltmp919
	.short	3
	.byte	119
	.byte	200
	.byte	0
	.quad	.Ltmp921
	.quad	.Lfunc_end54
	.short	3
	.byte	119
	.byte	200
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Ltmp872
	.quad	.Ltmp898
	.short	1
	.byte	83
	.quad	.Ltmp921
	.quad	.Ltmp922
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Ltmp873
	.quad	.Ltmp881
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Ltmp875
	.quad	.Ltmp885
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Ltmp875
	.quad	.Ltmp885
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Ltmp875
	.quad	.Ltmp920
	.short	1
	.byte	92
	.quad	.Ltmp921
	.quad	.Ltmp923
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Ltmp875
	.quad	.Ltmp920
	.short	1
	.byte	92
	.quad	.Ltmp921
	.quad	.Ltmp923
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc142:
	.quad	.Ltmp879
	.quad	.Ltmp880
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc143:
	.quad	.Ltmp884
	.quad	.Ltmp886
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp886
	.quad	.Ltmp895
	.short	1
	.byte	86
	.quad	.Ltmp908
	.quad	.Ltmp910
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Lfunc_begin55
	.quad	.Ltmp924
	.short	1
	.byte	85
	.quad	.Ltmp924
	.quad	.Ltmp930
	.short	1
	.byte	86
	.quad	.Ltmp930
	.quad	.Ltmp969
	.short	2
	.byte	119
	.byte	8
	.quad	.Ltmp970
	.quad	.Ltmp971
	.short	2
	.byte	119
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc145:
	.quad	.Ltmp926
	.quad	.Ltmp937
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Ltmp927
	.quad	.Ltmp951
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc147:
	.quad	.Ltmp928
	.quad	.Ltmp931
	.short	1
	.byte	80
	.quad	.Ltmp931
	.quad	.Ltmp951
	.short	2
	.byte	119
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Ltmp928
	.quad	.Ltmp933
	.short	1
	.byte	80
	.quad	.Ltmp934
	.quad	.Ltmp935
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc149:
	.quad	.Ltmp928
	.quad	.Ltmp933
	.short	1
	.byte	80
	.quad	.Ltmp934
	.quad	.Ltmp935
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp928
	.quad	.Ltmp933
	.short	1
	.byte	80
	.quad	.Ltmp934
	.quad	.Ltmp935
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc151:
	.quad	.Ltmp937
	.quad	.Ltmp946
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc152:
	.quad	.Ltmp938
	.quad	.Ltmp945
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Ltmp939
	.quad	.Ltmp940
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	176
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp940
	.quad	.Ltmp941
	.short	15
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	119
	.byte	176
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp941
	.quad	.Ltmp951
	.short	17
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	16
	.byte	147
	.byte	8
	.byte	119
	.byte	176
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc154:
	.quad	.Ltmp942
	.quad	.Ltmp943
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp943
	.quad	.Ltmp944
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp949
	.quad	.Ltmp952
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp952
	.quad	.Ltmp958
	.short	1
	.byte	92
	.quad	.Ltmp964
	.quad	.Ltmp965
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc156:
	.quad	.Ltmp949
	.quad	.Ltmp952
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp952
	.quad	.Ltmp958
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp953
	.quad	.Ltmp954
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp954
	.quad	.Ltmp955
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc158:
	.quad	.Lfunc_begin56
	.quad	.Ltmp972
	.short	1
	.byte	85
	.quad	.Ltmp972
	.quad	.Ltmp1009
	.short	1
	.byte	94
	.quad	.Ltmp1010
	.quad	.Lfunc_end56
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc159:
	.quad	.Ltmp974
	.quad	.Ltmp1008
	.short	1
	.byte	92
	.quad	.Ltmp1011
	.quad	.Ltmp1012
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Ltmp979
	.quad	.Ltmp987
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc161:
	.quad	.Ltmp979
	.quad	.Ltmp987
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc162:
	.quad	.Ltmp979
	.quad	.Ltmp1007
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Ltmp987
	.quad	.Ltmp988
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc164:
	.quad	.Lfunc_begin57
	.quad	.Ltmp1018
	.short	1
	.byte	85
	.quad	.Ltmp1018
	.quad	.Ltmp1034
	.short	1
	.byte	83
	.quad	.Ltmp1036
	.quad	.Ltmp1037
	.short	1
	.byte	85
	.quad	.Ltmp1038
	.quad	.Ltmp1039
	.short	1
	.byte	83
	.quad	.Ltmp1040
	.quad	.Ltmp1045
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc165:
	.quad	.Lfunc_begin57
	.quad	.Ltmp1016
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1016
	.quad	.Ltmp1017
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1017
	.quad	.Ltmp1020
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1020
	.quad	.Ltmp1021
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1021
	.quad	.Ltmp1022
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1022
	.quad	.Ltmp1023
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1023
	.quad	.Ltmp1024
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1024
	.quad	.Ltmp1024
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1024
	.quad	.Ltmp1026
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1026
	.quad	.Ltmp1035
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1036
	.quad	.Lfunc_end57
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Ltmp1025
	.quad	.Ltmp1028
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp1029
	.quad	.Ltmp1036
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp1040
	.quad	.Ltmp1041
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp1041
	.quad	.Ltmp1044
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc167:
	.quad	.Ltmp1031
	.quad	.Ltmp1032
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc168:
	.quad	.Ltmp1031
	.quad	.Ltmp1032
	.short	1
	.byte	80
	.quad	.Ltmp1033
	.quad	.Ltmp1036
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Lfunc_begin58
	.quad	.Ltmp1047
	.short	1
	.byte	85
	.quad	.Ltmp1047
	.quad	.Ltmp1173
	.short	1
	.byte	92
	.quad	.Ltmp1174
	.quad	.Lfunc_end58
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc170:
	.quad	.Ltmp1048
	.quad	.Ltmp1051
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Ltmp1053
	.quad	.Ltmp1059
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc172:
	.quad	.Ltmp1053
	.quad	.Ltmp1059
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Ltmp1053
	.quad	.Ltmp1059
	.short	1
	.byte	86
	.quad	.Ltmp1064
	.quad	.Ltmp1067
	.short	1
	.byte	84
	.quad	.Ltmp1068
	.quad	.Ltmp1069
	.short	1
	.byte	84
	.quad	.Ltmp1078
	.quad	.Ltmp1080
	.short	1
	.byte	86
	.quad	.Ltmp1080
	.quad	.Ltmp1083
	.short	1
	.byte	82
	.quad	.Ltmp1088
	.quad	.Ltmp1092
	.short	1
	.byte	86
	.quad	.Ltmp1094
	.quad	.Ltmp1096
	.short	1
	.byte	82
	.quad	.Ltmp1101
	.quad	.Ltmp1112
	.short	1
	.byte	86
	.quad	.Ltmp1112
	.quad	.Ltmp1114
	.short	1
	.byte	82
	.quad	.Ltmp1120
	.quad	.Ltmp1130
	.short	1
	.byte	86
	.quad	.Ltmp1138
	.quad	.Ltmp1141
	.short	1
	.byte	86
	.quad	.Ltmp1148
	.quad	.Ltmp1149
	.short	1
	.byte	85
	.quad	.Ltmp1154
	.quad	.Ltmp1162
	.short	1
	.byte	85
	.quad	.Ltmp1165
	.quad	.Ltmp1167
	.short	1
	.byte	85
	.quad	.Ltmp1172
	.quad	.Ltmp1174
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc174:
	.quad	.Ltmp1076
	.quad	.Ltmp1084
	.short	1
	.byte	95
	.quad	.Ltmp1112
	.quad	.Ltmp1113
	.short	1
	.byte	95
	.quad	.Ltmp1176
	.quad	.Ltmp1177
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Ltmp1086
	.quad	.Ltmp1090
	.short	1
	.byte	83
	.quad	.Ltmp1177
	.quad	.Ltmp1178
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc176:
	.quad	.Ltmp1099
	.quad	.Ltmp1103
	.short	1
	.byte	83
	.quad	.Ltmp1179
	.quad	.Ltmp1180
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc177:
	.quad	.Ltmp1153
	.quad	.Ltmp1163
	.short	1
	.byte	80
	.quad	.Ltmp1166
	.quad	.Ltmp1169
	.short	1
	.byte	80
	.quad	.Ltmp1170
	.quad	.Ltmp1171
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Ltmp1160
	.quad	.Ltmp1161
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp1161
	.quad	.Ltmp1163
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc179:
	.quad	.Ltmp1172
	.quad	.Ltmp1174
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Lfunc_begin59
	.quad	.Ltmp1182
	.short	1
	.byte	85
	.quad	.Ltmp1182
	.quad	.Ltmp1196
	.short	1
	.byte	94
	.quad	.Ltmp1197
	.quad	.Lfunc_end59
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc181:
	.quad	.Ltmp1184
	.quad	.Ltmp1187
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc182:
	.quad	.Ltmp1185
	.quad	.Ltmp1192
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp1187
	.quad	.Ltmp1192
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc184:
	.quad	.Ltmp1187
	.quad	.Ltmp1192
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc185:
	.quad	.Ltmp1187
	.quad	.Ltmp1195
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Ltmp1187
	.quad	.Ltmp1195
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc187:
	.quad	.Lfunc_begin60
	.quad	.Ltmp1200
	.short	1
	.byte	84
	.quad	.Ltmp1200
	.quad	.Ltmp1201
	.short	1
	.byte	94
	.quad	.Ltmp1202
	.quad	.Ltmp1203
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc188:
	.quad	.Lfunc_begin61
	.quad	.Ltmp1206
	.short	1
	.byte	85
	.quad	.Ltmp1206
	.quad	.Ltmp1214
	.short	1
	.byte	94
	.quad	.Ltmp1215
	.quad	.Ltmp1263
	.short	1
	.byte	94
	.quad	.Ltmp1263
	.quad	.Ltmp1264
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Ltmp1210
	.quad	.Ltmp1212
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc190:
	.quad	.Ltmp1211
	.quad	.Ltmp1212
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Ltmp1211
	.quad	.Ltmp1212
	.short	1
	.byte	95
	.quad	.Ltmp1257
	.quad	.Ltmp1258
	.short	1
	.byte	83
	.quad	.Ltmp1261
	.quad	.Ltmp1263
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc192:
	.quad	.Ltmp1219
	.quad	.Ltmp1221
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Ltmp1221
	.quad	.Ltmp1223
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc194:
	.quad	.Ltmp1223
	.quad	.Ltmp1225
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc195:
	.quad	.Ltmp1225
	.quad	.Ltmp1227
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp1227
	.quad	.Ltmp1229
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc197:
	.quad	.Ltmp1229
	.quad	.Ltmp1231
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc198:
	.quad	.Ltmp1231
	.quad	.Ltmp1233
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Ltmp1233
	.quad	.Ltmp1235
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc200:
	.quad	.Ltmp1235
	.quad	.Ltmp1237
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc201:
	.quad	.Ltmp1237
	.quad	.Ltmp1239
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc202:
	.quad	.Ltmp1239
	.quad	.Ltmp1241
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc203:
	.quad	.Ltmp1241
	.quad	.Ltmp1243
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc204:
	.quad	.Ltmp1243
	.quad	.Ltmp1245
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc205:
	.quad	.Ltmp1245
	.quad	.Ltmp1247
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc206:
	.quad	.Ltmp1247
	.quad	.Ltmp1248
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc207:
	.quad	.Ltmp1250
	.quad	.Ltmp1252
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc208:
	.quad	.Ltmp1254
	.quad	.Ltmp1256
	.short	1
	.byte	80
	.quad	.Ltmp1259
	.quad	.Ltmp1260
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc209:
	.quad	.Lfunc_begin62
	.quad	.Ltmp1266
	.short	1
	.byte	85
	.quad	.Ltmp1266
	.quad	.Ltmp1297
	.short	1
	.byte	95
	.quad	.Ltmp1302
	.quad	.Ltmp1307
	.short	1
	.byte	95
	.quad	.Ltmp1309
	.quad	.Lfunc_end62
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc210:
	.quad	.Ltmp1266
	.quad	.Ltmp1268
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp1268
	.quad	.Ltmp1290
	.short	1
	.byte	93
	.quad	.Ltmp1291
	.quad	.Ltmp1292
	.short	1
	.byte	93
	.quad	.Ltmp1293
	.quad	.Ltmp1299
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc211:
	.quad	.Ltmp1266
	.quad	.Ltmp1268
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1268
	.quad	.Ltmp1268
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1268
	.quad	.Ltmp1301
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1302
	.quad	.Ltmp1309
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc212:
	.quad	.Ltmp1275
	.quad	.Ltmp1277
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc213:
	.quad	.Ltmp1285
	.quad	.Ltmp1287
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc214:
	.quad	.Ltmp1298
	.quad	.Ltmp1300
	.short	1
	.byte	92
	.quad	.Ltmp1308
	.quad	.Ltmp1309
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc215:
	.quad	.Lfunc_begin63
	.quad	.Ltmp1317
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc216:
	.quad	.Ltmp1313
	.quad	.Ltmp1314
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1314
	.quad	.Ltmp1315
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp1315
	.quad	.Ltmp1316
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc217:
	.quad	.Lfunc_begin64
	.quad	.Ltmp1321
	.short	1
	.byte	85
	.quad	.Ltmp1321
	.quad	.Ltmp1327
	.short	1
	.byte	83
	.quad	.Ltmp1329
	.quad	.Ltmp1330
	.short	1
	.byte	85
	.quad	.Ltmp1331
	.quad	.Ltmp1333
	.short	1
	.byte	83
	.quad	.Ltmp1334
	.quad	.Lfunc_end64
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc218:
	.quad	.Lfunc_begin64
	.quad	.Ltmp1320
	.short	1
	.byte	84
	.quad	.Ltmp1320
	.quad	.Ltmp1328
	.short	1
	.byte	94
	.quad	.Ltmp1329
	.quad	.Ltmp1331
	.short	1
	.byte	84
	.quad	.Ltmp1331
	.quad	.Ltmp1332
	.short	1
	.byte	94
	.quad	.Ltmp1334
	.quad	.Lfunc_end64
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc219:
	.quad	.Lfunc_begin65
	.quad	.Ltmp1338
	.short	1
	.byte	85
	.quad	.Ltmp1338
	.quad	.Ltmp1359
	.short	1
	.byte	83
	.quad	.Ltmp1360
	.quad	.Ltmp1361
	.short	1
	.byte	85
	.quad	.Ltmp1362
	.quad	.Lfunc_end65
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc220:
	.quad	.Ltmp1340
	.quad	.Ltmp1341
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1341
	.quad	.Ltmp1358
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1362
	.quad	.Lfunc_end65
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc221:
	.quad	.Lfunc_begin66
	.quad	.Ltmp1367
	.short	1
	.byte	85
	.quad	.Ltmp1367
	.quad	.Ltmp1375
	.short	1
	.byte	83
	.quad	.Ltmp1376
	.quad	.Ltmp1377
	.short	1
	.byte	83
	.quad	.Ltmp1378
	.quad	.Ltmp1379
	.short	1
	.byte	83
	.quad	.Ltmp1379
	.quad	.Ltmp1380
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc222:
	.quad	.Ltmp1368
	.quad	.Ltmp1369
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1369
	.quad	.Ltmp1372
	.short	13
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1372
	.quad	.Ltmp1377
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc223:
	.quad	.Ltmp1375
	.quad	.Ltmp1376
	.short	1
	.byte	83
	.quad	.Ltmp1377
	.quad	.Ltmp1378
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc224:
	.quad	.Lfunc_begin67
	.quad	.Ltmp1384
	.short	1
	.byte	85
	.quad	.Ltmp1384
	.quad	.Ltmp1395
	.short	1
	.byte	83
	.quad	.Ltmp1397
	.quad	.Ltmp1398
	.short	1
	.byte	83
	.quad	.Ltmp1399
	.quad	.Ltmp1403
	.short	1
	.byte	83
	.quad	.Ltmp1404
	.quad	.Ltmp1405
	.short	1
	.byte	83
	.quad	.Ltmp1405
	.quad	.Ltmp1406
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc225:
	.quad	.Ltmp1385
	.quad	.Ltmp1386
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	168
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1386
	.quad	.Ltmp1389
	.short	14
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1389
	.quad	.Ltmp1394
	.short	15
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1397
	.quad	.Ltmp1398
	.short	15
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1399
	.quad	.Ltmp1402
	.short	15
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc226:
	.quad	.Ltmp1395
	.quad	.Ltmp1397
	.short	1
	.byte	83
	.quad	.Ltmp1398
	.quad	.Ltmp1399
	.short	1
	.byte	80
	.quad	.Ltmp1403
	.quad	.Ltmp1404
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc227:
	.quad	.Lfunc_begin68
	.quad	.Ltmp1410
	.short	1
	.byte	85
	.quad	.Ltmp1410
	.quad	.Ltmp1418
	.short	1
	.byte	83
	.quad	.Ltmp1419
	.quad	.Ltmp1420
	.short	1
	.byte	83
	.quad	.Ltmp1421
	.quad	.Ltmp1422
	.short	1
	.byte	83
	.quad	.Ltmp1422
	.quad	.Ltmp1423
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc228:
	.quad	.Ltmp1411
	.quad	.Ltmp1412
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1412
	.quad	.Ltmp1415
	.short	13
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1415
	.quad	.Ltmp1420
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc229:
	.quad	.Ltmp1418
	.quad	.Ltmp1419
	.short	1
	.byte	83
	.quad	.Ltmp1420
	.quad	.Ltmp1421
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc230:
	.quad	.Lfunc_begin69
	.quad	.Ltmp1427
	.short	1
	.byte	85
	.quad	.Ltmp1427
	.quad	.Ltmp1435
	.short	1
	.byte	83
	.quad	.Ltmp1436
	.quad	.Ltmp1437
	.short	1
	.byte	83
	.quad	.Ltmp1438
	.quad	.Ltmp1439
	.short	1
	.byte	83
	.quad	.Ltmp1439
	.quad	.Ltmp1440
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc231:
	.quad	.Ltmp1428
	.quad	.Ltmp1429
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1429
	.quad	.Ltmp1432
	.short	13
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1432
	.quad	.Ltmp1434
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1436
	.quad	.Ltmp1437
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc232:
	.quad	.Ltmp1435
	.quad	.Ltmp1436
	.short	1
	.byte	83
	.quad	.Ltmp1437
	.quad	.Ltmp1438
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc233:
	.quad	.Lfunc_begin70
	.quad	.Ltmp1444
	.short	1
	.byte	85
	.quad	.Ltmp1444
	.quad	.Ltmp1454
	.short	1
	.byte	83
	.quad	.Ltmp1455
	.quad	.Ltmp1456
	.short	1
	.byte	83
	.quad	.Ltmp1457
	.quad	.Ltmp1458
	.short	1
	.byte	83
	.quad	.Ltmp1458
	.quad	.Ltmp1459
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc234:
	.quad	.Ltmp1445
	.quad	.Ltmp1446
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1446
	.quad	.Ltmp1448
	.short	14
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1448
	.quad	.Ltmp1456
	.short	15
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1457
	.quad	.Ltmp1458
	.short	15
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc235:
	.quad	.Ltmp1454
	.quad	.Ltmp1455
	.short	1
	.byte	83
	.quad	.Ltmp1456
	.quad	.Ltmp1457
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc236:
	.quad	.Lfunc_begin71
	.quad	.Ltmp1463
	.short	1
	.byte	85
	.quad	.Ltmp1463
	.quad	.Ltmp1470
	.short	1
	.byte	83
	.quad	.Ltmp1471
	.quad	.Ltmp1478
	.short	1
	.byte	83
	.quad	.Ltmp1481
	.quad	.Ltmp1484
	.short	1
	.byte	83
	.quad	.Ltmp1484
	.quad	.Ltmp1485
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc237:
	.quad	.Ltmp1464
	.quad	.Ltmp1465
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1465
	.quad	.Ltmp1468
	.short	14
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1468
	.quad	.Ltmp1479
	.short	15
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1481
	.quad	.Ltmp1483
	.short	15
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc238:
	.quad	.Ltmp1470
	.quad	.Ltmp1471
	.short	1
	.byte	83
	.quad	.Ltmp1478
	.quad	.Ltmp1480
	.short	1
	.byte	83
	.quad	.Ltmp1480
	.quad	.Ltmp1481
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc239:
	.quad	.Ltmp1472
	.quad	.Ltmp1473
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	16
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1473
	.quad	.Ltmp1476
	.short	13
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	16
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1476
	.quad	.Ltmp1477
	.short	14
	.byte	80
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	16
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1481
	.quad	.Ltmp1482
	.short	14
	.byte	80
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	16
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc240:
	.quad	.Lfunc_begin72
	.quad	.Ltmp1489
	.short	1
	.byte	85
	.quad	.Ltmp1489
	.quad	.Ltmp1502
	.short	1
	.byte	83
	.quad	.Ltmp1505
	.quad	.Lfunc_end72
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc241:
	.quad	.Ltmp1490
	.quad	.Ltmp1491
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1491
	.quad	.Ltmp1494
	.short	13
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1494
	.quad	.Ltmp1498
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1499
	.quad	.Ltmp1503
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1505
	.quad	.Ltmp1506
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc242:
	.quad	.Ltmp1502
	.quad	.Ltmp1503
	.short	1
	.byte	83
	.quad	.Ltmp1503
	.quad	.Ltmp1504
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc243:
	.quad	.Lfunc_begin73
	.quad	.Ltmp1509
	.short	1
	.byte	85
	.quad	.Ltmp1509
	.quad	.Ltmp1518
	.short	1
	.byte	83
	.quad	.Ltmp1519
	.quad	.Ltmp1520
	.short	1
	.byte	83
	.quad	.Ltmp1521
	.quad	.Ltmp1522
	.short	1
	.byte	83
	.quad	.Ltmp1522
	.quad	.Ltmp1523
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc244:
	.quad	.Ltmp1510
	.quad	.Ltmp1511
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	216
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1511
	.quad	.Ltmp1514
	.short	14
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	216
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1514
	.quad	.Ltmp1520
	.short	15
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	216
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc245:
	.quad	.Ltmp1518
	.quad	.Ltmp1519
	.short	1
	.byte	83
	.quad	.Ltmp1520
	.quad	.Ltmp1521
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc246:
	.quad	.Lfunc_begin74
	.quad	.Ltmp1527
	.short	1
	.byte	85
	.quad	.Ltmp1527
	.quad	.Ltmp1534
	.short	1
	.byte	83
	.quad	.Ltmp1535
	.quad	.Ltmp1536
	.short	1
	.byte	83
	.quad	.Ltmp1537
	.quad	.Ltmp1538
	.short	1
	.byte	83
	.quad	.Ltmp1538
	.quad	.Ltmp1539
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc247:
	.quad	.Ltmp1528
	.quad	.Ltmp1529
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1529
	.quad	.Ltmp1532
	.short	13
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1532
	.quad	.Ltmp1536
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc248:
	.quad	.Ltmp1534
	.quad	.Ltmp1535
	.short	1
	.byte	83
	.quad	.Ltmp1536
	.quad	.Ltmp1537
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc249:
	.quad	.Lfunc_begin75
	.quad	.Ltmp1543
	.short	1
	.byte	85
	.quad	.Ltmp1543
	.quad	.Ltmp1551
	.short	1
	.byte	83
	.quad	.Ltmp1552
	.quad	.Ltmp1553
	.short	1
	.byte	83
	.quad	.Ltmp1554
	.quad	.Ltmp1555
	.short	1
	.byte	83
	.quad	.Ltmp1555
	.quad	.Ltmp1556
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc250:
	.quad	.Ltmp1544
	.quad	.Ltmp1545
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1545
	.quad	.Ltmp1548
	.short	13
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1548
	.quad	.Ltmp1550
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1552
	.quad	.Ltmp1553
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc251:
	.quad	.Ltmp1551
	.quad	.Ltmp1552
	.short	1
	.byte	83
	.quad	.Ltmp1553
	.quad	.Ltmp1554
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc252:
	.quad	.Lfunc_begin76
	.quad	.Ltmp1560
	.short	1
	.byte	85
	.quad	.Ltmp1560
	.quad	.Ltmp1567
	.short	1
	.byte	83
	.quad	.Ltmp1568
	.quad	.Ltmp1569
	.short	1
	.byte	83
	.quad	.Ltmp1570
	.quad	.Ltmp1571
	.short	1
	.byte	83
	.quad	.Ltmp1571
	.quad	.Ltmp1572
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc253:
	.quad	.Ltmp1561
	.quad	.Ltmp1562
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1562
	.quad	.Ltmp1565
	.short	13
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1565
	.quad	.Ltmp1569
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc254:
	.quad	.Ltmp1567
	.quad	.Ltmp1568
	.short	1
	.byte	83
	.quad	.Ltmp1569
	.quad	.Ltmp1570
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc255:
	.quad	.Lfunc_begin77
	.quad	.Ltmp1576
	.short	1
	.byte	85
	.quad	.Ltmp1576
	.quad	.Ltmp1612
	.short	1
	.byte	94
	.quad	.Ltmp1613
	.quad	.Ltmp1614
	.short	1
	.byte	85
	.quad	.Ltmp1615
	.quad	.Lfunc_end77
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc256:
	.quad	.Ltmp1579
	.quad	.Ltmp1586
	.short	1
	.byte	93
	.quad	.Ltmp1589
	.quad	.Ltmp1596
	.short	1
	.byte	93
	.quad	.Ltmp1597
	.quad	.Ltmp1601
	.short	1
	.byte	93
	.quad	.Ltmp1603
	.quad	.Ltmp1605
	.short	1
	.byte	95
	.quad	.Ltmp1608
	.quad	.Ltmp1611
	.short	1
	.byte	93
	.quad	.Ltmp1615
	.quad	.Lfunc_end77
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc257:
	.quad	.Ltmp1580
	.quad	.Ltmp1586
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc258:
	.quad	.Ltmp1582
	.quad	.Ltmp1584
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc259:
	.quad	.Ltmp1588
	.quad	.Ltmp1589
	.short	1
	.byte	83
	.quad	.Ltmp1595
	.quad	.Ltmp1597
	.short	1
	.byte	83
	.quad	.Ltmp1607
	.quad	.Ltmp1608
	.short	1
	.byte	93
	.quad	.Ltmp1611
	.quad	.Ltmp1613
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc260:
	.quad	.Ltmp1591
	.quad	.Ltmp1594
	.short	5
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1594
	.quad	.Ltmp1596
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1597
	.quad	.Ltmp1600
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1608
	.quad	.Ltmp1611
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1615
	.quad	.Lfunc_end77
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc261:
	.quad	.Ltmp1600
	.quad	.Ltmp1602
	.short	1
	.byte	95
	.quad	.Ltmp1604
	.quad	.Ltmp1606
	.short	1
	.byte	83
	.quad	.Ltmp1606
	.quad	.Ltmp1608
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc262:
	.quad	.Lfunc_begin78
	.quad	.Ltmp1619
	.short	1
	.byte	85
	.quad	.Ltmp1619
	.quad	.Ltmp1627
	.short	1
	.byte	83
	.quad	.Ltmp1628
	.quad	.Ltmp1629
	.short	1
	.byte	83
	.quad	.Ltmp1630
	.quad	.Ltmp1631
	.short	1
	.byte	83
	.quad	.Ltmp1631
	.quad	.Ltmp1632
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc263:
	.quad	.Ltmp1620
	.quad	.Ltmp1621
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1621
	.quad	.Ltmp1624
	.short	13
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1624
	.quad	.Ltmp1626
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1628
	.quad	.Ltmp1629
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc264:
	.quad	.Ltmp1627
	.quad	.Ltmp1628
	.short	1
	.byte	83
	.quad	.Ltmp1629
	.quad	.Ltmp1630
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc265:
	.quad	.Lfunc_begin79
	.quad	.Ltmp1636
	.short	1
	.byte	85
	.quad	.Ltmp1636
	.quad	.Ltmp1644
	.short	1
	.byte	83
	.quad	.Ltmp1645
	.quad	.Ltmp1646
	.short	1
	.byte	83
	.quad	.Ltmp1647
	.quad	.Ltmp1648
	.short	1
	.byte	83
	.quad	.Ltmp1648
	.quad	.Ltmp1649
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc266:
	.quad	.Ltmp1637
	.quad	.Ltmp1638
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1638
	.quad	.Ltmp1641
	.short	13
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1641
	.quad	.Ltmp1643
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1645
	.quad	.Ltmp1646
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc267:
	.quad	.Ltmp1644
	.quad	.Ltmp1645
	.short	1
	.byte	83
	.quad	.Ltmp1646
	.quad	.Ltmp1647
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc268:
	.quad	.Lfunc_begin80
	.quad	.Ltmp1653
	.short	1
	.byte	85
	.quad	.Ltmp1653
	.quad	.Ltmp1660
	.short	1
	.byte	83
	.quad	.Ltmp1661
	.quad	.Ltmp1662
	.short	1
	.byte	83
	.quad	.Ltmp1663
	.quad	.Ltmp1664
	.short	1
	.byte	83
	.quad	.Ltmp1664
	.quad	.Ltmp1665
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc269:
	.quad	.Ltmp1654
	.quad	.Ltmp1655
	.short	10
	.byte	147
	.byte	16
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1655
	.quad	.Ltmp1658
	.short	13
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1658
	.quad	.Ltmp1662
	.short	14
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc270:
	.quad	.Ltmp1660
	.quad	.Ltmp1661
	.short	1
	.byte	83
	.quad	.Ltmp1662
	.quad	.Ltmp1663
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc271:
	.quad	.Lfunc_begin81
	.quad	.Ltmp1669
	.short	1
	.byte	85
	.quad	.Ltmp1669
	.quad	.Ltmp1679
	.short	1
	.byte	83
	.quad	.Ltmp1680
	.quad	.Ltmp1681
	.short	1
	.byte	83
	.quad	.Ltmp1682
	.quad	.Ltmp1683
	.short	1
	.byte	83
	.quad	.Ltmp1683
	.quad	.Ltmp1684
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc272:
	.quad	.Ltmp1670
	.quad	.Ltmp1671
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1671
	.quad	.Ltmp1674
	.short	14
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1674
	.quad	.Ltmp1681
	.short	15
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc273:
	.quad	.Ltmp1679
	.quad	.Ltmp1680
	.short	1
	.byte	83
	.quad	.Ltmp1681
	.quad	.Ltmp1682
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc274:
	.quad	.Lfunc_begin82
	.quad	.Ltmp1686
	.short	1
	.byte	85
	.quad	.Ltmp1686
	.quad	.Ltmp1687
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc275:
	.quad	.Ltmp1686
	.quad	.Ltmp1688
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1688
	.quad	.Lfunc_end82
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc276:
	.quad	.Lfunc_begin83
	.quad	.Ltmp1695
	.short	1
	.byte	85
	.quad	.Ltmp1695
	.quad	.Ltmp1708
	.short	1
	.byte	83
	.quad	.Ltmp1710
	.quad	.Ltmp1711
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc277:
	.quad	.Lfunc_begin83
	.quad	.Ltmp1693
	.short	1
	.byte	84
	.quad	.Ltmp1693
	.quad	.Ltmp1709
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc278:
	.quad	.Lfunc_begin84
	.quad	.Ltmp1714
	.short	5
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1714
	.quad	.Ltmp1718
	.short	5
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1718
	.quad	.Ltmp1719
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1719
	.quad	.Ltmp1720
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc279:
	.quad	.Ltmp1713
	.quad	.Ltmp1715
	.short	5
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1716
	.quad	.Ltmp1717
	.short	5
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1719
	.quad	.Ltmp1720
	.short	5
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc280:
	.quad	.Ltmp1716
	.quad	.Ltmp1737
	.short	1
	.byte	94
	.quad	.Ltmp1738
	.quad	.Lfunc_end84
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc281:
	.quad	.Ltmp1716
	.quad	.Ltmp1737
	.short	1
	.byte	94
	.quad	.Ltmp1738
	.quad	.Lfunc_end84
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc282:
	.quad	.Ltmp1717
	.quad	.Ltmp1728
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc283:
	.quad	.Ltmp1717
	.quad	.Ltmp1728
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc284:
	.quad	.Lfunc_begin85
	.quad	.Ltmp1739
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1739
	.quad	.Ltmp1739
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1739
	.quad	.Ltmp1741
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1741
	.quad	.Ltmp1742
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1742
	.quad	.Ltmp1743
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc285:
	.quad	.Ltmp1744
	.quad	.Ltmp1745
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc286:
	.quad	.Ltmp1748
	.quad	.Ltmp1749
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc287:
	.quad	.Ltmp1751
	.quad	.Ltmp1752
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1753
	.quad	.Ltmp1756
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc288:
	.quad	.Ltmp1751
	.quad	.Ltmp1752
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1753
	.quad	.Ltmp1756
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc289:
	.quad	.Ltmp1757
	.quad	.Ltmp1761
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc290:
	.quad	.Ltmp1757
	.quad	.Ltmp1761
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc291:
	.quad	.Ltmp1763
	.quad	.Ltmp1764
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	8
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1768
	.quad	.Ltmp1772
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	8
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc292:
	.quad	.Ltmp1765
	.quad	.Ltmp1768
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1773
	.quad	.Ltmp1774
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1775
	.quad	.Ltmp1777
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1778
	.quad	.Ltmp1779
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc293:
	.quad	.Ltmp1765
	.quad	.Ltmp1768
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1773
	.quad	.Ltmp1774
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1775
	.quad	.Ltmp1777
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1778
	.quad	.Ltmp1779
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc294:
	.quad	.Ltmp1780
	.quad	.Ltmp1786
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc295:
	.quad	.Ltmp1780
	.quad	.Ltmp1786
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc296:
	.quad	.Lfunc_begin90
	.quad	.Ltmp1790
	.short	1
	.byte	85
	.quad	.Ltmp1790
	.quad	.Ltmp1794
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc297:
	.quad	.Lfunc_begin91
	.quad	.Ltmp1797
	.short	1
	.byte	84
	.quad	.Ltmp1797
	.quad	.Ltmp1799
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc298:
	.quad	.Ltmp1800
	.quad	.Ltmp1801
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1801
	.quad	.Ltmp1816
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1817
	.quad	.Ltmp1819
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc299:
	.quad	.Ltmp1802
	.quad	.Ltmp1804
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1804
	.quad	.Ltmp1808
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc300:
	.quad	.Ltmp1806
	.quad	.Ltmp1807
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1807
	.quad	.Ltmp1808
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc301:
	.quad	.Ltmp1811
	.quad	.Ltmp1812
	.short	4
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.quad	.Ltmp1812
	.quad	.Ltmp1813
	.short	8
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp1813
	.quad	.Ltmp1814
	.short	12
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp1814
	.quad	.Ltmp1817
	.short	17
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1818
	.quad	.Ltmp1820
	.short	17
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.ascii	"\264B"
	.byte	25
	.byte	17
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	2
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	3
	.byte	1
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	4
	.byte	33
	.byte	0
	.byte	73
	.byte	19
	.byte	34
	.byte	11
	.byte	55
	.byte	11
	.byte	0
	.byte	0
	.byte	5
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	6
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	7
	.byte	15
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	8
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	62
	.byte	11
	.byte	11
	.byte	11
	.byte	0
	.byte	0
	.byte	9
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	62
	.byte	11
	.byte	0
	.byte	0
	.byte	10
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	11
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	12
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	5
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	13
	.byte	21
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	14
	.byte	5
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	15
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	16
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	17
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	18
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	19
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	20
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	21
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	22
	.byte	11
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	23
	.byte	11
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	24
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	25
	.byte	46
	.byte	1
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	26
	.byte	5
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	27
	.byte	11
	.byte	1
	.byte	0
	.byte	0
	.byte	28
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	29
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	30
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	31
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	32
	.byte	46
	.byte	1
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	33
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	34
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	35
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	36
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	37
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	5
	.byte	0
	.byte	0
	.byte	38
	.byte	5
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	39
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	40
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	41
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	42
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	43
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	44
	.byte	21
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	15201
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	22
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2

	.quad	0
	.long	.Ldebug_ranges27
	.byte	2
	.long	.Linfo_string3
	.long	57
	.byte	2
	.byte	8
	.long	.Linfo_string3
	.byte	3
	.long	70
	.byte	4
	.long	125
	.byte	0
	.byte	10
	.byte	0
	.byte	5
	.long	.Linfo_string8
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string4
	.long	106
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string6
	.long	118
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	111
	.byte	8
	.long	.Linfo_string5
	.byte	7
	.byte	1
	.byte	8
	.long	.Linfo_string7
	.byte	5
	.byte	8
	.byte	9
	.long	.Linfo_string9
	.byte	8
	.byte	7
	.byte	2
	.long	.Linfo_string10
	.long	147
	.byte	2
	.byte	21
	.long	.Linfo_string10
	.byte	7
	.long	152
	.byte	5
	.long	.Linfo_string24
	.byte	48
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string11
	.long	118
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string12
	.long	111
	.byte	1
	.byte	1
	.byte	1
	.byte	8
	.byte	6
	.long	.Linfo_string13
	.long	111
	.byte	1
	.byte	1
	.byte	1
	.byte	9
	.byte	6
	.long	.Linfo_string14
	.long	279
	.byte	1
	.byte	1
	.byte	2
	.byte	10
	.byte	6
	.long	.Linfo_string16
	.long	286
	.byte	1
	.byte	1
	.byte	4
	.byte	12
	.byte	6
	.long	.Linfo_string18
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string20
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string21
	.long	305
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	6
	.long	.Linfo_string23
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	0
	.byte	8
	.long	.Linfo_string15
	.byte	7
	.byte	2
	.byte	8
	.long	.Linfo_string17
	.byte	7
	.byte	4
	.byte	7
	.long	298
	.byte	8
	.long	.Linfo_string19
	.byte	0
	.byte	0
	.byte	8
	.long	.Linfo_string22
	.byte	7
	.byte	8
	.byte	10
	.long	.Linfo_string25
	.long	286

	.byte	1
	.byte	1
	.long	.Linfo_string25
	.byte	2
	.long	.Linfo_string26
	.long	342
	.byte	4
	.byte	223
	.long	.Linfo_string26
	.byte	7
	.long	347
	.byte	5
	.long	.Linfo_string144
	.byte	160
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string27
	.long	396
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string65
	.long	1103
	.byte	2
	.byte	4
	.byte	4
	.byte	128
	.byte	6
	.long	.Linfo_string69
	.long	1139
	.byte	2
	.byte	4
	.byte	8
	.byte	136
	.byte	0
	.byte	5
	.long	.Linfo_string64
	.byte	128
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string28
	.long	70
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string29
	.long	562
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string45
	.long	796
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string51
	.long	70
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	6
	.long	.Linfo_string52
	.long	990
	.byte	2
	.byte	4
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string54
	.long	1037
	.byte	2
	.byte	4
	.byte	1
	.byte	72
	.byte	6
	.long	.Linfo_string56
	.long	789
	.byte	2
	.byte	4
	.byte	4
	.byte	76
	.byte	6
	.long	.Linfo_string57
	.long	286
	.byte	2
	.byte	4
	.byte	4
	.byte	80
	.byte	6
	.long	.Linfo_string58
	.long	1044
	.byte	2
	.byte	4
	.byte	1
	.byte	84
	.byte	6
	.long	.Linfo_string60
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	88
	.byte	6
	.long	.Linfo_string61
	.long	1051
	.byte	2
	.byte	4
	.byte	8
	.byte	96
	.byte	6
	.long	.Linfo_string63
	.long	1037
	.byte	2
	.byte	4
	.byte	1
	.byte	120
	.byte	0
	.byte	7
	.long	567
	.byte	5
	.long	.Linfo_string44
	.byte	40
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string30
	.long	616
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string42
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string43
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	11
	.long	.Linfo_string41
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	663
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	668
	.byte	5
	.long	.Linfo_string30
	.byte	40
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string32
	.long	730
	.byte	2
	.byte	4
	.byte	1
	.byte	0
	.byte	6
	.long	.Linfo_string34
	.long	286
	.byte	2
	.byte	4
	.byte	4
	.byte	4
	.byte	6
	.long	.Linfo_string35
	.long	286
	.byte	2
	.byte	4
	.byte	4
	.byte	8
	.byte	6
	.long	.Linfo_string36
	.long	737
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	8
	.long	.Linfo_string33
	.byte	7
	.byte	1
	.byte	11
	.long	.Linfo_string40
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	784
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	789
	.byte	8
	.long	.Linfo_string37
	.byte	5
	.byte	4
	.byte	7
	.long	801
	.byte	5
	.long	.Linfo_string50
	.byte	40
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string30
	.long	850
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string42
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string43
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	11
	.long	.Linfo_string49
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	897
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	902
	.byte	5
	.long	.Linfo_string48
	.byte	64
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string30
	.long	668
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string46
	.long	938
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	0
	.byte	11
	.long	.Linfo_string47
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	985
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	286
	.byte	11
	.long	.Linfo_string53
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	106
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	8
	.long	.Linfo_string55
	.byte	7
	.byte	1
	.byte	8
	.long	.Linfo_string59
	.byte	7
	.byte	1
	.byte	11
	.long	.Linfo_string62
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	1098
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	70
	.byte	5
	.long	.Linfo_string68
	.byte	8
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string66
	.long	789
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	6
	.long	.Linfo_string67
	.long	286
	.byte	2
	.byte	4
	.byte	4
	.byte	4
	.byte	0
	.byte	11
	.long	.Linfo_string143
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	1186
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	1191
	.byte	7
	.long	1196
	.byte	12
	.long	.Linfo_string142
	.short	264
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string70
	.long	293
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string71
	.long	562
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string72
	.long	796
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string73
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string74
	.long	1376
	.byte	2
	.byte	4
	.byte	8
	.byte	32
	.byte	6
	.long	.Linfo_string86
	.long	1609
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string95
	.long	1609
	.byte	2
	.byte	4
	.byte	8
	.byte	88
	.byte	6
	.long	.Linfo_string96
	.long	1774
	.byte	2
	.byte	4
	.byte	8
	.byte	136
	.byte	6
	.long	.Linfo_string98
	.long	1037
	.byte	2
	.byte	4
	.byte	1
	.byte	160
	.byte	6
	.long	.Linfo_string99
	.long	1456
	.byte	2
	.byte	4
	.byte	8
	.byte	168
	.byte	6
	.long	.Linfo_string100
	.long	1826
	.byte	2
	.byte	4
	.byte	8
	.byte	192
	.byte	6
	.long	.Linfo_string103
	.long	1849
	.byte	2
	.byte	4
	.byte	8
	.byte	216
	.byte	6
	.long	.Linfo_string105
	.long	1872
	.byte	2
	.byte	4
	.byte	8
	.byte	232
	.byte	0
	.byte	7
	.long	1381
	.byte	5
	.long	.Linfo_string85
	.byte	88
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string29
	.long	562
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string75
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string76
	.long	1456
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string78
	.long	1508
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string84
	.long	938
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	0
	.byte	11
	.long	.Linfo_string77
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	1503
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	118
	.byte	11
	.long	.Linfo_string83
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	1555
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	1560
	.byte	5
	.long	.Linfo_string82
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string79
	.long	286
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	6
	.long	.Linfo_string80
	.long	1037
	.byte	2
	.byte	4
	.byte	1
	.byte	4
	.byte	6
	.long	.Linfo_string81
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string94
	.byte	48
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string87
	.long	938
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string88
	.long	1645
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	0
	.byte	11
	.long	.Linfo_string93
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	1692
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	1697
	.byte	5
	.long	.Linfo_string92
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string79
	.long	286
	.byte	2
	.byte	4
	.byte	4
	.byte	0
	.byte	6
	.long	.Linfo_string89
	.long	1733
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	1738
	.byte	5
	.long	.Linfo_string91
	.byte	32
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string90
	.long	663
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string76
	.long	1456
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	11
	.long	.Linfo_string97
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	1821
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	1733
	.byte	5
	.long	.Linfo_string102
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string101
	.long	990
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	5
	.long	.Linfo_string104
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string101
	.long	70
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	0
	.byte	5
	.long	.Linfo_string141
	.byte	32
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string106
	.long	1921
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string140
	.long	1037
	.byte	2
	.byte	4
	.byte	1
	.byte	16
	.byte	6
	.long	.Linfo_string81
	.long	118
	.byte	2
	.byte	4
	.byte	8
	.byte	24
	.byte	0
	.byte	5
	.long	.Linfo_string139
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string107
	.long	1957
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	1962
	.byte	11
	.long	.Linfo_string138
	.byte	16
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	3
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string131
	.long	2446
	.byte	3
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	2001
	.byte	5
	.long	.Linfo_string130
	.byte	72
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string109
	.long	305
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string110
	.long	305
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string111
	.long	286
	.byte	1
	.byte	1
	.byte	4
	.byte	16
	.byte	6
	.long	.Linfo_string112
	.long	111
	.byte	1
	.byte	1
	.byte	1
	.byte	20
	.byte	6
	.long	.Linfo_string113
	.long	111
	.byte	1
	.byte	1
	.byte	1
	.byte	21
	.byte	6
	.long	.Linfo_string114
	.long	111
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.byte	6
	.long	.Linfo_string115
	.long	2167
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string118
	.long	2216
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	6
	.long	.Linfo_string119
	.long	106
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string8
	.long	1098
	.byte	1
	.byte	1
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string120
	.long	2265
	.byte	1
	.byte	1
	.byte	8
	.byte	56
	.byte	6
	.long	.Linfo_string129
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	64
	.byte	0
	.byte	7
	.long	2172
	.byte	5
	.long	.Linfo_string117
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string116
	.long	2195
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	7
	.long	2200
	.byte	13
	.long	305
	.byte	14
	.long	293
	.byte	14
	.long	305
	.byte	0
	.byte	7
	.long	2221
	.byte	5
	.long	.Linfo_string117
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string116
	.long	2244
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	7
	.long	2249
	.byte	13
	.long	1037
	.byte	14
	.long	293
	.byte	14
	.long	293
	.byte	0
	.byte	7
	.long	2270
	.byte	5
	.long	.Linfo_string120
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string121
	.long	1098
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string122
	.long	1098
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string123
	.long	2319
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	11
	.long	.Linfo_string128
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	2366
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	2371
	.byte	5
	.long	.Linfo_string127
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string121
	.long	1098
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string122
	.long	1098
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string124
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string125
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string126
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	0
	.byte	7
	.long	2451
	.byte	13
	.long	2462
	.byte	14
	.long	293
	.byte	0
	.byte	11
	.long	.Linfo_string137
	.byte	32
	.byte	1
	.byte	6
	.long	.Linfo_string106
	.long	789
	.byte	3
	.byte	4
	.byte	4
	.byte	0
	.byte	6
	.long	.Linfo_string109
	.long	118
	.byte	3
	.byte	4
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string132
	.long	2509
	.byte	3
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	5
	.long	.Linfo_string136
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	.Linfo_string107
	.long	2545
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	2550
	.byte	11
	.long	.Linfo_string134
	.byte	16
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string133
	.long	2584
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	2589
	.byte	13
	.long	70
	.byte	14
	.long	293
	.byte	0
	.byte	15
	.long	.Linfo_string145
	.long	342
	.byte	4
	.short	269
	.long	.Linfo_string145
	.byte	15
	.long	.Linfo_string146
	.long	342
	.byte	4
	.short	284
	.long	.Linfo_string146
	.byte	15
	.long	.Linfo_string147
	.long	342
	.byte	4
	.short	285
	.long	.Linfo_string147
	.byte	15
	.long	.Linfo_string148
	.long	342
	.byte	4
	.short	301
	.long	.Linfo_string148
	.byte	15
	.long	.Linfo_string149
	.long	342
	.byte	4
	.short	312
	.long	.Linfo_string149
	.byte	15
	.long	.Linfo_string150
	.long	342
	.byte	4
	.short	323
	.long	.Linfo_string150
	.byte	15
	.long	.Linfo_string151
	.long	342
	.byte	4
	.short	339
	.long	.Linfo_string151
	.byte	15
	.long	.Linfo_string152
	.long	342
	.byte	4
	.short	350
	.long	.Linfo_string152
	.byte	15
	.long	.Linfo_string153
	.long	342
	.byte	4
	.short	361
	.long	.Linfo_string153
	.byte	15
	.long	.Linfo_string154
	.long	342
	.byte	4
	.short	377
	.long	.Linfo_string154
	.byte	15
	.long	.Linfo_string155
	.long	342
	.byte	4
	.short	388
	.long	.Linfo_string155
	.byte	15
	.long	.Linfo_string156
	.long	342
	.byte	4
	.short	399
	.long	.Linfo_string156
	.byte	15
	.long	.Linfo_string157
	.long	342
	.byte	4
	.short	410
	.long	.Linfo_string157
	.byte	15
	.long	.Linfo_string158
	.long	342
	.byte	4
	.short	421
	.long	.Linfo_string158
	.byte	15
	.long	.Linfo_string159
	.long	342
	.byte	4
	.short	432
	.long	.Linfo_string159
	.byte	15
	.long	.Linfo_string160
	.long	342
	.byte	4
	.short	443
	.long	.Linfo_string160
	.byte	10
	.long	.Linfo_string161
	.long	2509

	.byte	5
	.byte	6
	.long	.Linfo_string161
	.byte	16
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	1
	.byte	87
	.long	.Linfo_string324
	.long	.Linfo_string325
	.byte	2
	.byte	1
	.long	298

	.byte	17
	.quad	.Lfunc_begin1
	.long	.Lfunc_end1-.Lfunc_begin1
	.byte	1
	.byte	87
	.long	.Linfo_string326
	.long	.Linfo_string327
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc0
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc1
	.long	.Linfo_string506
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin2
	.long	.Lfunc_end2-.Lfunc_begin2
	.byte	1
	.byte	87
	.long	.Linfo_string328
	.long	.Linfo_string329
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc2
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc3
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string509
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin3
	.long	.Lfunc_end3-.Lfunc_begin3
	.byte	1
	.byte	87
	.long	.Linfo_string330
	.long	.Linfo_string331
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc4
	.long	.Linfo_string323
	.byte	2
	.byte	44
	.long	15135
	.byte	0
	.byte	17
	.quad	.Lfunc_begin4
	.long	.Lfunc_end4-.Lfunc_begin4
	.byte	1
	.byte	87
	.long	.Linfo_string332
	.long	.Linfo_string333
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc5
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc6
	.long	.Linfo_string510
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin5
	.long	.Lfunc_end5-.Lfunc_begin5
	.byte	1
	.byte	87
	.long	.Linfo_string334
	.long	.Linfo_string335
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc7
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc8
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string511
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin6
	.long	.Lfunc_end6-.Lfunc_begin6
	.byte	1
	.byte	87
	.long	.Linfo_string336
	.long	.Linfo_string337
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc9
	.long	.Linfo_string512
	.byte	2
	.byte	44
	.long	8735
	.byte	0
	.byte	17
	.quad	.Lfunc_begin7
	.long	.Lfunc_end7-.Lfunc_begin7
	.byte	1
	.byte	87
	.long	.Linfo_string338
	.long	.Linfo_string339
	.byte	2
	.byte	59
	.long	70

	.byte	18
	.long	.Ldebug_loc10
	.long	.Linfo_string513
	.byte	2
	.byte	59
	.long	8735
	.byte	20
	.long	.Ldebug_loc12
	.long	.Linfo_string515
	.byte	2
	.byte	59
	.long	70
	.byte	22
	.long	.Ldebug_ranges0
	.byte	20
	.long	.Ldebug_loc11
	.long	.Linfo_string514
	.byte	2
	.byte	60
	.long	70
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin8
	.long	.Lfunc_end8-.Lfunc_begin8
	.byte	1
	.byte	87
	.long	.Linfo_string340
	.long	.Linfo_string341
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc13
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc14
	.long	.Linfo_string516
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin9
	.long	.Lfunc_end9-.Lfunc_begin9
	.byte	1
	.byte	87
	.long	.Linfo_string342
	.long	.Linfo_string343
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc15
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc16
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string517
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin10
	.long	.Lfunc_end10-.Lfunc_begin10
	.byte	1
	.byte	87
	.long	.Linfo_string344
	.long	.Linfo_string345
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc17
	.long	.Linfo_string518
	.byte	2
	.byte	44
	.long	8469
	.byte	0
	.byte	17
	.quad	.Lfunc_begin11
	.long	.Lfunc_end11-.Lfunc_begin11
	.byte	1
	.byte	87
	.long	.Linfo_string346
	.long	.Linfo_string347
	.byte	2
	.byte	114
	.long	1037

	.byte	18
	.long	.Ldebug_loc18
	.long	.Linfo_string74
	.byte	2
	.byte	114
	.long	7218
	.byte	20
	.long	.Ldebug_loc19
	.long	.Linfo_string519
	.byte	2
	.byte	114
	.long	1037
	.byte	23
	.quad	.Ltmp86
	.long	.Ltmp103-.Ltmp86
	.byte	20
	.long	.Ldebug_loc20
	.long	.Linfo_string520
	.byte	2
	.byte	119
	.long	1037
	.byte	23
	.quad	.Ltmp91
	.long	.Ltmp101-.Ltmp91
	.byte	20
	.long	.Ldebug_loc21
	.long	.Linfo_string521
	.byte	2
	.byte	121
	.long	7373
	.byte	23
	.quad	.Ltmp94
	.long	.Ltmp100-.Ltmp94
	.byte	20
	.long	.Ldebug_loc22
	.long	.Linfo_string522
	.byte	2
	.byte	122
	.long	1037
	.byte	20
	.long	.Ldebug_loc23
	.long	.Linfo_string523
	.byte	2
	.byte	122
	.long	11450
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin12
	.long	.Lfunc_end12-.Lfunc_begin12
	.byte	1
	.byte	87
	.long	.Linfo_string348
	.long	.Linfo_string349
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc24
	.long	.Linfo_string524
	.byte	2
	.byte	44
	.long	7218
	.byte	0
	.byte	17
	.quad	.Lfunc_begin13
	.long	.Lfunc_end13-.Lfunc_begin13
	.byte	1
	.byte	87
	.long	.Linfo_string350
	.long	.Linfo_string351
	.byte	2
	.byte	106
	.long	298

	.byte	18
	.long	.Ldebug_loc25
	.long	.Linfo_string74
	.byte	2
	.byte	106
	.long	7218
	.byte	0
	.byte	17
	.quad	.Lfunc_begin14
	.long	.Lfunc_end14-.Lfunc_begin14
	.byte	1
	.byte	87
	.long	.Linfo_string352
	.long	.Linfo_string353
	.byte	2
	.byte	110
	.long	298

	.byte	18
	.long	.Ldebug_loc26
	.long	.Linfo_string74
	.byte	2
	.byte	110
	.long	7218
	.byte	18
	.long	.Ldebug_loc27
	.long	.Linfo_string525
	.byte	2
	.byte	110
	.long	7373
	.byte	0
	.byte	17
	.quad	.Lfunc_begin15
	.long	.Lfunc_end15-.Lfunc_begin15
	.byte	1
	.byte	87
	.long	.Linfo_string354
	.long	.Linfo_string355
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc28
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc29
	.long	.Linfo_string526
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin16
	.long	.Lfunc_end16-.Lfunc_begin16
	.byte	1
	.byte	87
	.long	.Linfo_string356
	.long	.Linfo_string357
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc30
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc31
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string527
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin17
	.long	.Lfunc_end17-.Lfunc_begin17
	.byte	1
	.byte	87
	.long	.Linfo_string358
	.long	.Linfo_string359
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc32
	.long	.Linfo_string528
	.byte	2
	.byte	44
	.long	11450
	.byte	0
	.byte	24
	.quad	.Lfunc_begin18
	.long	.Lfunc_end18-.Lfunc_begin18
	.byte	1
	.byte	87
	.long	.Linfo_string360
	.byte	2
	.byte	100
	.long	7218
	.byte	20
	.long	.Ldebug_loc34
	.long	.Linfo_string530
	.byte	2
	.byte	100
	.long	7218
	.byte	23
	.quad	.Ltmp158
	.long	.Ltmp166-.Ltmp158
	.byte	20
	.long	.Ldebug_loc33
	.long	.Linfo_string529
	.byte	2
	.byte	101
	.long	7218
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin19
	.long	.Lfunc_end19-.Lfunc_begin19
	.byte	1
	.byte	87
	.long	.Linfo_string361
	.long	.Linfo_string362
	.byte	2
	.byte	114
	.long	1037

	.byte	18
	.long	.Ldebug_loc35
	.long	.Linfo_string531
	.byte	2
	.byte	114
	.long	10535
	.byte	20
	.long	.Ldebug_loc36
	.long	.Linfo_string532
	.byte	2
	.byte	114
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin20
	.long	.Lfunc_end20-.Lfunc_begin20
	.byte	1
	.byte	87
	.long	.Linfo_string363
	.long	.Linfo_string364
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc37
	.long	.Linfo_string533
	.byte	2
	.byte	44
	.long	10535
	.byte	0
	.byte	17
	.quad	.Lfunc_begin21
	.long	.Lfunc_end21-.Lfunc_begin21
	.byte	1
	.byte	87
	.long	.Linfo_string365
	.long	.Linfo_string366
	.byte	2
	.byte	106
	.long	298

	.byte	18
	.long	.Ldebug_loc38
	.long	.Linfo_string534
	.byte	2
	.byte	106
	.long	10535
	.byte	18
	.long	.Ldebug_loc39
	.long	.Linfo_string535
	.byte	2
	.byte	106
	.long	7373
	.byte	0
	.byte	17
	.quad	.Lfunc_begin22
	.long	.Lfunc_end22-.Lfunc_begin22
	.byte	1
	.byte	87
	.long	.Linfo_string367
	.long	.Linfo_string368
	.byte	2
	.byte	110
	.long	298

	.byte	18
	.long	.Ldebug_loc40
	.long	.Linfo_string536
	.byte	2
	.byte	110
	.long	10535
	.byte	18
	.long	.Ldebug_loc41
	.long	.Linfo_string537
	.byte	2
	.byte	110
	.long	7373
	.byte	0
	.byte	17
	.quad	.Lfunc_begin23
	.long	.Lfunc_end23-.Lfunc_begin23
	.byte	1
	.byte	87
	.long	.Linfo_string369
	.long	.Linfo_string370
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc42
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc43
	.long	.Linfo_string538
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin24
	.long	.Lfunc_end24-.Lfunc_begin24
	.byte	1
	.byte	87
	.long	.Linfo_string371
	.long	.Linfo_string372
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc44
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc45
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string539
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin25
	.long	.Lfunc_end25-.Lfunc_begin25
	.byte	1
	.byte	87
	.long	.Linfo_string373
	.long	.Linfo_string374
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc46
	.long	.Linfo_string540
	.byte	2
	.byte	44
	.long	11034
	.byte	0
	.byte	17
	.quad	.Lfunc_begin26
	.long	.Lfunc_end26-.Lfunc_begin26
	.byte	1
	.byte	87
	.long	.Linfo_string375
	.long	.Linfo_string376
	.byte	2
	.byte	187
	.long	1037

	.byte	18
	.long	.Ldebug_loc47
	.long	.Linfo_string89
	.byte	2
	.byte	187
	.long	10907
	.byte	20
	.long	.Ldebug_loc48
	.long	.Linfo_string541
	.byte	2
	.byte	187
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin27
	.long	.Lfunc_end27-.Lfunc_begin27
	.byte	1
	.byte	87
	.long	.Linfo_string377
	.long	.Linfo_string378
	.byte	2
	.byte	177
	.long	1037

	.byte	18
	.long	.Ldebug_loc49
	.long	.Linfo_string89
	.byte	2
	.byte	177
	.long	10907
	.byte	20
	.long	.Ldebug_loc50
	.long	.Linfo_string542
	.byte	2
	.byte	177
	.long	1037
	.byte	23
	.quad	.Ltmp229
	.long	.Ltmp239-.Ltmp229
	.byte	20
	.long	.Ldebug_loc51
	.long	.Linfo_string315
	.byte	2
	.byte	178
	.long	70
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin28
	.long	.Lfunc_end28-.Lfunc_begin28
	.byte	1
	.byte	87
	.long	.Linfo_string379
	.long	.Linfo_string380
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc52
	.long	.Linfo_string543
	.byte	2
	.byte	44
	.long	10907
	.byte	0
	.byte	17
	.quad	.Lfunc_begin29
	.long	.Lfunc_end29-.Lfunc_begin29
	.byte	1
	.byte	87
	.long	.Linfo_string381
	.long	.Linfo_string382
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc53
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc54
	.long	.Linfo_string544
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin30
	.long	.Lfunc_end30-.Lfunc_begin30
	.byte	1
	.byte	87
	.long	.Linfo_string383
	.long	.Linfo_string384
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc55
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc56
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string545
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin31
	.long	.Lfunc_end31-.Lfunc_begin31
	.byte	1
	.byte	87
	.long	.Linfo_string385
	.long	.Linfo_string386
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc57
	.long	.Linfo_string546
	.byte	2
	.byte	44
	.long	9358
	.byte	0
	.byte	17
	.quad	.Lfunc_begin32
	.long	.Lfunc_end32-.Lfunc_begin32
	.byte	1
	.byte	87
	.long	.Linfo_string387
	.long	.Linfo_string388
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc58
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc59
	.long	.Linfo_string547
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin33
	.long	.Lfunc_end33-.Lfunc_begin33
	.byte	1
	.byte	87
	.long	.Linfo_string389
	.long	.Linfo_string390
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc60
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc61
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string548
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin34
	.long	.Lfunc_end34-.Lfunc_begin34
	.byte	1
	.byte	87
	.long	.Linfo_string391
	.long	.Linfo_string392
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc62
	.long	.Linfo_string549
	.byte	2
	.byte	44
	.long	8975
	.byte	0
	.byte	17
	.quad	.Lfunc_begin35
	.long	.Lfunc_end35-.Lfunc_begin35
	.byte	1
	.byte	87
	.long	.Linfo_string393
	.long	.Linfo_string394
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc63
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc64
	.long	.Linfo_string550
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin36
	.long	.Lfunc_end36-.Lfunc_begin36
	.byte	1
	.byte	87
	.long	.Linfo_string395
	.long	.Linfo_string396
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc65
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc66
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string551
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	17
	.quad	.Lfunc_begin37
	.long	.Lfunc_end37-.Lfunc_begin37
	.byte	1
	.byte	87
	.long	.Linfo_string397
	.long	.Linfo_string398
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc67
	.long	.Linfo_string552
	.byte	2
	.byte	44
	.long	8055
	.byte	0
	.byte	17
	.quad	.Lfunc_begin38
	.long	.Lfunc_end38-.Lfunc_begin38
	.byte	1
	.byte	87
	.long	.Linfo_string399
	.long	.Linfo_string400
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc68
	.long	.Linfo_string553
	.byte	2
	.byte	44
	.long	9768
	.byte	0
	.byte	17
	.quad	.Lfunc_begin39
	.long	.Lfunc_end39-.Lfunc_begin39
	.byte	1
	.byte	87
	.long	.Linfo_string401
	.long	.Linfo_string402
	.byte	2
	.byte	44
	.long	7259

	.byte	18
	.long	.Ldebug_loc69
	.long	.Linfo_string554
	.byte	2
	.byte	44
	.long	10178
	.byte	0
	.byte	25
	.long	.Linfo_string162
	.byte	5
	.short	466
	.long	5432
	.byte	1
	.byte	26
	.long	.Linfo_string71
	.byte	5
	.short	466
	.long	5432
	.byte	27
	.byte	28
	.long	.Linfo_string261
	.byte	5
	.short	467
	.long	5432
	.byte	0
	.byte	0
	.byte	7
	.long	5437
	.byte	5
	.long	.Linfo_string260
	.byte	72
	.byte	5
	.byte	13
	.byte	1
	.byte	6
	.long	.Linfo_string163
	.long	5538
	.byte	5
	.byte	14
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string194
	.long	70
	.byte	5
	.byte	15
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string195
	.long	6076
	.byte	5
	.byte	16
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string242
	.long	7164
	.byte	5
	.byte	17
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string246
	.long	147
	.byte	5
	.byte	18
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string247
	.long	293
	.byte	5
	.byte	19
	.byte	8
	.byte	56
	.byte	6
	.long	.Linfo_string248
	.long	7218
	.byte	5
	.byte	20
	.byte	8
	.byte	64
	.byte	0
	.byte	7
	.long	5543
	.byte	5
	.long	.Linfo_string193
	.byte	96
	.byte	4
	.byte	40
	.byte	1
	.byte	6
	.long	.Linfo_string164
	.long	5696
	.byte	4
	.byte	41
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string175
	.long	5932
	.byte	4
	.byte	42
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string185
	.long	5932
	.byte	4
	.byte	43
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string66
	.long	789
	.byte	4
	.byte	45
	.byte	4
	.byte	24
	.byte	6
	.long	.Linfo_string186
	.long	70
	.byte	4
	.byte	46
	.byte	8
	.byte	32
	.byte	6
	.long	.Linfo_string187
	.long	118
	.byte	4
	.byte	48
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string188
	.long	118
	.byte	4
	.byte	49
	.byte	8
	.byte	56
	.byte	6
	.long	.Linfo_string189
	.long	118
	.byte	4
	.byte	50
	.byte	8
	.byte	64
	.byte	6
	.long	.Linfo_string190
	.long	118
	.byte	4
	.byte	51
	.byte	8
	.byte	72
	.byte	6
	.long	.Linfo_string191
	.long	118
	.byte	4
	.byte	52
	.byte	8
	.byte	80
	.byte	6
	.long	.Linfo_string192
	.long	1037
	.byte	4
	.byte	54
	.byte	1
	.byte	88
	.byte	0
	.byte	7
	.long	5701
	.byte	5
	.long	.Linfo_string171
	.byte	88
	.byte	5
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string165
	.long	990
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string166
	.long	5802
	.byte	5
	.byte	8
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string106
	.long	118
	.byte	5
	.byte	8
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string172
	.long	118
	.byte	5
	.byte	8
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string132
	.long	2509
	.byte	5
	.byte	8
	.byte	8
	.byte	56
	.byte	6
	.long	.Linfo_string173
	.long	118
	.byte	5
	.byte	8
	.byte	8
	.byte	72
	.byte	6
	.long	.Linfo_string174
	.long	118
	.byte	5
	.byte	8
	.byte	8
	.byte	80
	.byte	0
	.byte	5
	.long	.Linfo_string171
	.byte	16
	.byte	5
	.byte	4
	.byte	1
	.byte	6
	.long	.Linfo_string107
	.long	5838
	.byte	5
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	5843
	.byte	11
	.long	.Linfo_string170
	.byte	16
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	3
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string167
	.long	5877
	.byte	3
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	5882
	.byte	13
	.long	5898
	.byte	14
	.long	293
	.byte	14
	.long	990
	.byte	0
	.byte	11
	.long	.Linfo_string169
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string168
	.long	118
	.byte	3
	.byte	4
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string132
	.long	2509
	.byte	3
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	5937
	.byte	5
	.long	.Linfo_string184
	.byte	48
	.byte	5
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string176
	.long	5973
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string183
	.long	118
	.byte	5
	.byte	8
	.byte	8
	.byte	40
	.byte	0
	.byte	5
	.long	.Linfo_string182
	.byte	40
	.byte	5
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string177
	.long	6035
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string178
	.long	6035
	.byte	5
	.byte	8
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string179
	.long	293
	.byte	5
	.byte	8
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string180
	.long	6040
	.byte	5
	.byte	8
	.byte	8
	.byte	24
	.byte	0
	.byte	7
	.long	5973
	.byte	5
	.long	.Linfo_string181
	.byte	16
	.byte	5
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string241
	.byte	16
	.byte	5
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string107
	.long	6112
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	6117
	.byte	11
	.long	.Linfo_string240
	.byte	16
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string196
	.long	6151
	.byte	3
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	6156
	.byte	13
	.long	6172
	.byte	14
	.long	293
	.byte	14
	.long	70
	.byte	0
	.byte	11
	.long	.Linfo_string239
	.byte	32
	.byte	1
	.byte	6
	.long	.Linfo_string197
	.long	6206
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string197
	.long	2509
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	0
	.byte	5
	.long	.Linfo_string238
	.byte	16
	.byte	5
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string107
	.long	6242
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	6247
	.byte	11
	.long	.Linfo_string237
	.byte	48
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string198
	.long	6333
	.byte	3
	.byte	8
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string167
	.long	5877
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string199
	.long	6349
	.byte	3
	.byte	8
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string233
	.long	7054
	.byte	3
	.byte	8
	.byte	8
	.byte	32
	.byte	6
	.long	.Linfo_string235
	.long	7114
	.byte	3
	.byte	8
	.byte	8
	.byte	40
	.byte	0
	.byte	7
	.long	6338
	.byte	13
	.long	2509
	.byte	14
	.long	293
	.byte	0
	.byte	7
	.long	6354
	.byte	13
	.long	6370
	.byte	14
	.long	293
	.byte	14
	.long	118
	.byte	0
	.byte	11
	.long	.Linfo_string232
	.byte	40
	.byte	1
	.byte	6
	.long	.Linfo_string197
	.long	6404
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string197
	.long	2509
	.byte	3
	.byte	8
	.byte	8
	.byte	24
	.byte	0
	.byte	11
	.long	.Linfo_string231
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	6451
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	6456
	.byte	5
	.long	.Linfo_string230
	.byte	16
	.byte	5
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string107
	.long	6492
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	6497
	.byte	11
	.long	.Linfo_string229
	.byte	56
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	3
	.byte	7
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string200
	.long	6596
	.byte	3
	.byte	7
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string201
	.long	6612
	.byte	3
	.byte	7
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string224
	.long	6999
	.byte	3
	.byte	7
	.byte	8
	.byte	24
	.byte	6
	.long	.Linfo_string226
	.long	2584
	.byte	3
	.byte	7
	.byte	8
	.byte	32
	.byte	6
	.long	.Linfo_string227
	.long	7022
	.byte	3
	.byte	7
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string228
	.long	7038
	.byte	3
	.byte	7
	.byte	8
	.byte	48
	.byte	0
	.byte	7
	.long	6601
	.byte	13
	.long	1037
	.byte	14
	.long	293
	.byte	0
	.byte	7
	.long	6617
	.byte	13
	.long	6628
	.byte	14
	.long	293
	.byte	0
	.byte	5
	.long	.Linfo_string223
	.byte	24
	.byte	5
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string202
	.long	6677
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string204
	.long	6684
	.byte	5
	.byte	7
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string206
	.long	6691
	.byte	5
	.byte	7
	.byte	8
	.byte	16
	.byte	0
	.byte	8
	.long	.Linfo_string203
	.byte	7
	.byte	8
	.byte	8
	.long	.Linfo_string205
	.byte	5
	.byte	8
	.byte	7
	.long	6696
	.byte	5
	.long	.Linfo_string222
	.byte	88
	.byte	5
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string121
	.long	70
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string207
	.long	6784
	.byte	5
	.byte	7
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string212
	.long	6885
	.byte	5
	.byte	7
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string219
	.long	6684
	.byte	5
	.byte	7
	.byte	8
	.byte	64
	.byte	6
	.long	.Linfo_string220
	.long	6684
	.byte	5
	.byte	7
	.byte	8
	.byte	72
	.byte	6
	.long	.Linfo_string221
	.long	6831
	.byte	5
	.byte	7
	.byte	8
	.byte	80
	.byte	0
	.byte	11
	.long	.Linfo_string211
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	6831
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	6836
	.byte	5
	.long	.Linfo_string210
	.byte	32
	.byte	5
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string121
	.long	70
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string208
	.long	118
	.byte	5
	.byte	7
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string209
	.long	1037
	.byte	5
	.byte	7
	.byte	1
	.byte	24
	.byte	0
	.byte	11
	.long	.Linfo_string218
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	6932
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	6937
	.byte	5
	.long	.Linfo_string217
	.byte	16
	.byte	5
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string213
	.long	6684
	.byte	5
	.byte	7
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string214
	.long	111
	.byte	5
	.byte	7
	.byte	1
	.byte	8
	.byte	6
	.long	.Linfo_string215
	.long	1037
	.byte	5
	.byte	7
	.byte	1
	.byte	9
	.byte	6
	.long	.Linfo_string216
	.long	1037
	.byte	5
	.byte	7
	.byte	1
	.byte	10
	.byte	0
	.byte	7
	.long	7004
	.byte	13
	.long	7015
	.byte	14
	.long	293
	.byte	0
	.byte	8
	.long	.Linfo_string225
	.byte	7
	.byte	4
	.byte	7
	.long	7027
	.byte	13
	.long	6684
	.byte	14
	.long	293
	.byte	0
	.byte	7
	.long	7043
	.byte	13
	.long	6040
	.byte	14
	.long	293
	.byte	0
	.byte	7
	.long	7059
	.byte	13
	.long	7080
	.byte	14
	.long	293
	.byte	14
	.long	6684
	.byte	14
	.long	118
	.byte	0
	.byte	11
	.long	.Linfo_string234
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string197
	.long	6684
	.byte	3
	.byte	6
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string197
	.long	2509
	.byte	3
	.byte	6
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	7119
	.byte	13
	.long	7130
	.byte	14
	.long	293
	.byte	0
	.byte	11
	.long	.Linfo_string236
	.byte	32
	.byte	1
	.byte	6
	.long	.Linfo_string197
	.long	6456
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string197
	.long	2509
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	7169
	.byte	5
	.long	.Linfo_string245
	.byte	32
	.byte	4
	.byte	57
	.byte	1
	.byte	6
	.long	.Linfo_string243
	.long	789
	.byte	4
	.byte	58
	.byte	4
	.byte	0
	.byte	6
	.long	.Linfo_string180
	.long	70
	.byte	4
	.byte	59
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string244
	.long	147
	.byte	4
	.byte	60
	.byte	8
	.byte	24
	.byte	0
	.byte	7
	.long	7223
	.byte	5
	.long	.Linfo_string259
	.byte	64
	.byte	2
	.byte	95
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	96
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string254
	.long	7321
	.byte	2
	.byte	97
	.byte	8
	.byte	40
	.byte	0
	.byte	5
	.long	.Linfo_string249
	.byte	40
	.byte	2
	.byte	37
	.byte	1
	.byte	6
	.long	.Linfo_string250
	.long	118
	.byte	2
	.byte	38
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string251
	.long	118
	.byte	2
	.byte	39
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string252
	.long	118
	.byte	2
	.byte	40
	.byte	8
	.byte	16
	.byte	6
	.long	.Linfo_string253
	.long	70
	.byte	2
	.byte	41
	.byte	8
	.byte	24
	.byte	0
	.byte	11
	.long	.Linfo_string258
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	7368
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	7373
	.byte	5
	.long	.Linfo_string257
	.byte	16
	.byte	2
	.byte	33
	.byte	1
	.byte	6
	.long	.Linfo_string107
	.long	7409
	.byte	2
	.byte	33
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string135
	.long	293
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	7414
	.byte	11
	.long	.Linfo_string256
	.byte	16
	.byte	1
	.byte	6
	.long	.Linfo_string108
	.long	1996
	.byte	3
	.byte	33
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string255
	.long	7448
	.byte	3
	.byte	33
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	7453
	.byte	13
	.long	7259
	.byte	14
	.long	293
	.byte	0
	.byte	17
	.quad	.Lfunc_begin40
	.long	.Lfunc_end40-.Lfunc_begin40
	.byte	1
	.byte	87
	.long	.Linfo_string403
	.long	.Linfo_string404
	.byte	5
	.byte	75
	.long	7218

	.byte	18
	.long	.Ldebug_loc70
	.long	.Linfo_string71
	.byte	5
	.byte	75
	.long	5432
	.byte	20
	.long	.Ldebug_loc71
	.long	.Linfo_string555
	.byte	5
	.byte	75
	.long	7218
	.byte	23
	.quad	.Ltmp435
	.long	.Ltmp550-.Ltmp435
	.byte	20
	.long	.Ldebug_loc72
	.long	.Linfo_string529
	.byte	5
	.byte	96
	.long	7218
	.byte	22
	.long	.Ldebug_ranges4
	.byte	20
	.long	.Ldebug_loc73
	.long	.Linfo_string178
	.byte	5
	.byte	115
	.long	10535
	.byte	22
	.long	.Ldebug_ranges3
	.byte	20
	.long	.Ldebug_loc74
	.long	.Linfo_string556
	.byte	5
	.byte	116
	.long	10535
	.byte	20
	.long	.Ldebug_loc77
	.long	.Linfo_string261
	.byte	5
	.byte	124
	.long	5432
	.byte	20
	.long	.Ldebug_loc78
	.long	.Linfo_string557
	.byte	5
	.byte	125
	.long	10535
	.byte	29
	.long	5392
	.long	.Ldebug_ranges1
	.byte	5
	.byte	124
	.byte	30
	.long	.Ldebug_loc75
	.long	5405
	.byte	22
	.long	.Ldebug_ranges2
	.byte	31
	.long	.Ldebug_loc76
	.long	5418
	.byte	0
	.byte	0
	.byte	23
	.quad	.Ltmp515
	.long	.Ltmp521-.Ltmp515
	.byte	20
	.long	.Ldebug_loc79
	.long	.Linfo_string293
	.byte	5
	.byte	128
	.long	118
	.byte	0
	.byte	23
	.quad	.Ltmp523
	.long	.Ltmp527-.Ltmp523
	.byte	20
	.long	.Ldebug_loc80
	.long	.Linfo_string293
	.byte	5
	.byte	132
	.long	118
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin41
	.long	.Lfunc_end41-.Lfunc_begin41
	.byte	1
	.byte	87
	.long	.Linfo_string405
	.long	.Linfo_string406
	.byte	5
	.byte	38
	.long	298

	.byte	18
	.long	.Ldebug_loc81
	.long	.Linfo_string71
	.byte	5
	.byte	38
	.long	5432
	.byte	0
	.byte	17
	.quad	.Lfunc_begin42
	.long	.Lfunc_end42-.Lfunc_begin42
	.byte	1
	.byte	87
	.long	.Linfo_string407
	.long	.Linfo_string408
	.byte	5
	.byte	42
	.long	298

	.byte	18
	.long	.Ldebug_loc82
	.long	.Linfo_string71
	.byte	5
	.byte	42
	.long	5432
	.byte	0
	.byte	17
	.quad	.Lfunc_begin43
	.long	.Lfunc_end43-.Lfunc_begin43
	.byte	1
	.byte	87
	.long	.Linfo_string409
	.long	.Linfo_string410
	.byte	5
	.byte	217
	.long	298

	.byte	18
	.long	.Ldebug_loc83
	.long	.Linfo_string71
	.byte	5
	.byte	217
	.long	5432
	.byte	0
	.byte	17
	.quad	.Lfunc_begin44
	.long	.Lfunc_end44-.Lfunc_begin44
	.byte	1
	.byte	87
	.long	.Linfo_string411
	.long	.Linfo_string412
	.byte	5
	.byte	208
	.long	7164

	.byte	18
	.long	.Ldebug_loc84
	.long	.Linfo_string71
	.byte	5
	.byte	208
	.long	5432
	.byte	18
	.long	.Ldebug_loc85
	.long	.Linfo_string125
	.byte	5
	.byte	208
	.long	789
	.byte	20
	.long	.Ldebug_loc87
	.long	.Linfo_string559
	.byte	5
	.byte	208
	.long	7164
	.byte	23
	.quad	.Ltmp578
	.long	.Ltmp591-.Ltmp578
	.byte	20
	.long	.Ldebug_loc86
	.long	.Linfo_string558
	.byte	5
	.byte	212
	.long	7164
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin45
	.long	.Lfunc_end45-.Lfunc_begin45
	.byte	1
	.byte	87
	.long	.Linfo_string413
	.long	.Linfo_string414
	.byte	5
	.byte	175
	.long	7373

	.byte	18
	.long	.Ldebug_loc88
	.long	.Linfo_string71
	.byte	5
	.byte	175
	.long	5432
	.byte	20
	.long	.Ldebug_loc89
	.long	.Linfo_string560
	.byte	5
	.byte	175
	.long	7373
	.byte	0
	.byte	32
	.long	.Linfo_string262
	.byte	2
	.byte	224
	.long	8055
	.byte	1
	.byte	33
	.long	.Linfo_string266
	.byte	2
	.byte	224
	.long	8055
	.byte	27
	.byte	33
	.long	.Linfo_string267
	.byte	2
	.byte	225
	.long	8055
	.byte	0
	.byte	0
	.byte	7
	.long	8060
	.byte	5
	.long	.Linfo_string265
	.byte	72
	.byte	2
	.byte	218
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	219
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string263
	.long	70
	.byte	2
	.byte	220
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string264
	.long	70
	.byte	2
	.byte	221
	.byte	8
	.byte	56
	.byte	0
	.byte	34
	.quad	.Lfunc_begin46
	.long	.Lfunc_end46-.Lfunc_begin46
	.byte	1
	.byte	87
	.long	.Linfo_string415
	.long	.Linfo_string416
	.byte	5
	.short	382
	.long	8055

	.byte	35
	.long	.Ldebug_loc90
	.long	.Linfo_string71
	.byte	5
	.short	382
	.long	5432
	.byte	36
	.long	.Ldebug_loc95
	.long	.Linfo_string562
	.byte	5
	.short	382
	.long	8055
	.byte	23
	.quad	.Ltmp637
	.long	.Ltmp653-.Ltmp637
	.byte	36
	.long	.Ldebug_loc91
	.long	.Linfo_string561
	.byte	5
	.short	383
	.long	7164
	.byte	36
	.long	.Ldebug_loc94
	.long	.Linfo_string525
	.byte	5
	.short	384
	.long	8055
	.byte	37
	.long	8018
	.quad	.Ltmp640
	.long	.Ltmp647-.Ltmp640
	.byte	5
	.short	384
	.byte	31
	.long	.Ldebug_loc93
	.long	8030
	.byte	23
	.quad	.Ltmp640
	.long	.Ltmp647-.Ltmp640
	.byte	31
	.long	.Ldebug_loc92
	.long	8042
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin47
	.long	.Lfunc_end47-.Lfunc_begin47
	.byte	1
	.byte	87
	.long	.Linfo_string417
	.long	.Linfo_string418
	.byte	5
	.byte	233
	.long	7218

	.byte	18
	.long	.Ldebug_loc96
	.long	.Linfo_string71
	.byte	5
	.byte	233
	.long	5432
	.byte	18
	.long	.Ldebug_loc97
	.long	.Linfo_string247
	.byte	5
	.byte	233
	.long	7373
	.byte	20
	.long	.Ldebug_loc99
	.long	.Linfo_string563
	.byte	5
	.byte	233
	.long	7218
	.byte	23
	.quad	.Ltmp654
	.long	.Ltmp733-.Ltmp654
	.byte	20
	.long	.Ldebug_loc98
	.long	.Linfo_string529
	.byte	5
	.byte	235
	.long	7218
	.byte	22
	.long	.Ldebug_ranges6
	.byte	20
	.long	.Ldebug_loc100
	.long	.Linfo_string522
	.byte	5
	.byte	252
	.long	1037
	.byte	20
	.long	.Ldebug_loc101
	.long	.Linfo_string315
	.byte	5
	.byte	252
	.long	10907
	.byte	22
	.long	.Ldebug_ranges5
	.byte	20
	.long	.Ldebug_loc102
	.long	.Linfo_string564
	.byte	5
	.byte	253
	.long	7164
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string268
	.byte	2
	.byte	74
	.long	8469
	.byte	1
	.byte	33
	.long	.Linfo_string271
	.byte	2
	.byte	74
	.long	8469
	.byte	27
	.byte	33
	.long	.Linfo_string272
	.byte	2
	.byte	75
	.long	8469
	.byte	0
	.byte	0
	.byte	7
	.long	8474
	.byte	5
	.long	.Linfo_string270
	.byte	72
	.byte	2
	.byte	67
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	68
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string180
	.long	70
	.byte	2
	.byte	69
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string259
	.long	7218
	.byte	2
	.byte	70
	.byte	8
	.byte	56
	.byte	6
	.long	.Linfo_string269
	.long	1037
	.byte	2
	.byte	71
	.byte	1
	.byte	64
	.byte	0
	.byte	34
	.quad	.Lfunc_begin48
	.long	.Lfunc_end48-.Lfunc_begin48
	.byte	1
	.byte	87
	.long	.Linfo_string419
	.long	.Linfo_string420
	.byte	5
	.short	362
	.long	8469

	.byte	35
	.long	.Ldebug_loc103
	.long	.Linfo_string71
	.byte	5
	.short	362
	.long	5432
	.byte	36
	.long	.Ldebug_loc108
	.long	.Linfo_string566
	.byte	5
	.short	362
	.long	8469
	.byte	23
	.quad	.Ltmp734
	.long	.Ltmp758-.Ltmp734
	.byte	36
	.long	.Ldebug_loc104
	.long	.Linfo_string561
	.byte	5
	.short	363
	.long	7164
	.byte	36
	.long	.Ldebug_loc107
	.long	.Linfo_string565
	.byte	5
	.short	364
	.long	8469
	.byte	37
	.long	8432
	.quad	.Ltmp737
	.long	.Ltmp745-.Ltmp737
	.byte	5
	.short	364
	.byte	31
	.long	.Ldebug_loc106
	.long	8444
	.byte	23
	.quad	.Ltmp737
	.long	.Ltmp745-.Ltmp737
	.byte	31
	.long	.Ldebug_loc105
	.long	8456
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string273
	.byte	2
	.byte	53
	.long	8735
	.byte	1
	.byte	33
	.long	.Linfo_string275
	.byte	2
	.byte	53
	.long	8735
	.byte	27
	.byte	33
	.long	.Linfo_string272
	.byte	2
	.byte	54
	.long	8735
	.byte	0
	.byte	0
	.byte	7
	.long	8740
	.byte	5
	.long	.Linfo_string274
	.byte	56
	.byte	2
	.byte	48
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	49
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string180
	.long	70
	.byte	2
	.byte	50
	.byte	8
	.byte	40
	.byte	0
	.byte	34
	.quad	.Lfunc_begin49
	.long	.Lfunc_end49-.Lfunc_begin49
	.byte	1
	.byte	87
	.long	.Linfo_string421
	.long	.Linfo_string422
	.byte	5
	.short	355
	.long	8735

	.byte	35
	.long	.Ldebug_loc109
	.long	.Linfo_string71
	.byte	5
	.short	355
	.long	5432
	.byte	36
	.long	.Ldebug_loc114
	.long	.Linfo_string567
	.byte	5
	.short	355
	.long	8735
	.byte	23
	.quad	.Ltmp759
	.long	.Ltmp774-.Ltmp759
	.byte	36
	.long	.Ldebug_loc110
	.long	.Linfo_string561
	.byte	5
	.short	356
	.long	7164
	.byte	36
	.long	.Ldebug_loc113
	.long	.Linfo_string525
	.byte	5
	.short	357
	.long	8735
	.byte	37
	.long	8698
	.quad	.Ltmp762
	.long	.Ltmp768-.Ltmp762
	.byte	5
	.short	357
	.byte	31
	.long	.Ldebug_loc112
	.long	8710
	.byte	23
	.quad	.Ltmp762
	.long	.Ltmp768-.Ltmp762
	.byte	31
	.long	.Ldebug_loc111
	.long	8722
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string276
	.byte	2
	.byte	212
	.long	8975
	.byte	1
	.byte	33
	.long	.Linfo_string279
	.byte	2
	.byte	212
	.long	8975
	.byte	27
	.byte	33
	.long	.Linfo_string280
	.byte	2
	.byte	213
	.long	8975
	.byte	0
	.byte	0
	.byte	7
	.long	8980
	.byte	5
	.long	.Linfo_string278
	.byte	96
	.byte	2
	.byte	204
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	205
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string263
	.long	70
	.byte	2
	.byte	206
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string277
	.long	70
	.byte	2
	.byte	207
	.byte	8
	.byte	56
	.byte	6
	.long	.Linfo_string264
	.long	70
	.byte	2
	.byte	208
	.byte	8
	.byte	72
	.byte	6
	.long	.Linfo_string259
	.long	7218
	.byte	2
	.byte	209
	.byte	8
	.byte	88
	.byte	0
	.byte	34
	.quad	.Lfunc_begin50
	.long	.Lfunc_end50-.Lfunc_begin50
	.byte	1
	.byte	87
	.long	.Linfo_string423
	.long	.Linfo_string424
	.byte	5
	.short	305
	.long	8975

	.byte	35
	.long	.Ldebug_loc115
	.long	.Linfo_string71
	.byte	5
	.short	305
	.long	5432
	.byte	36
	.long	.Ldebug_loc120
	.long	.Linfo_string569
	.byte	5
	.short	305
	.long	8975
	.byte	23
	.quad	.Ltmp775
	.long	.Ltmp801-.Ltmp775
	.byte	36
	.long	.Ldebug_loc116
	.long	.Linfo_string561
	.byte	5
	.short	306
	.long	7164
	.byte	36
	.long	.Ldebug_loc119
	.long	.Linfo_string568
	.byte	5
	.short	307
	.long	8975
	.byte	37
	.long	8938
	.quad	.Ltmp778
	.long	.Ltmp783-.Ltmp778
	.byte	5
	.short	307
	.byte	31
	.long	.Ldebug_loc118
	.long	8950
	.byte	23
	.quad	.Ltmp778
	.long	.Ltmp783-.Ltmp778
	.byte	31
	.long	.Ldebug_loc117
	.long	8962
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin51
	.long	.Lfunc_end51-.Lfunc_begin51
	.byte	1
	.byte	87
	.long	.Linfo_string425
	.long	.Linfo_string426
	.byte	5
	.byte	221
	.long	7218

	.byte	18
	.long	.Ldebug_loc121
	.long	.Linfo_string71
	.byte	5
	.byte	221
	.long	5432
	.byte	20
	.long	.Ldebug_loc124
	.long	.Linfo_string571
	.byte	5
	.byte	221
	.long	7218
	.byte	23
	.quad	.Ltmp802
	.long	.Ltmp818-.Ltmp802
	.byte	20
	.long	.Ldebug_loc122
	.long	.Linfo_string561
	.byte	5
	.byte	226
	.long	7164
	.byte	20
	.long	.Ldebug_loc123
	.long	.Linfo_string570
	.byte	5
	.byte	227
	.long	5432
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string281
	.byte	2
	.byte	198
	.long	9358
	.byte	1
	.byte	33
	.long	.Linfo_string285
	.byte	2
	.byte	198
	.long	9358
	.byte	27
	.byte	33
	.long	.Linfo_string58
	.byte	2
	.byte	199
	.long	9358
	.byte	0
	.byte	0
	.byte	7
	.long	9363
	.byte	5
	.long	.Linfo_string284
	.byte	72
	.byte	2
	.byte	191
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	192
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string282
	.long	7218
	.byte	2
	.byte	193
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string283
	.long	7218
	.byte	2
	.byte	194
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string264
	.long	70
	.byte	2
	.byte	195
	.byte	8
	.byte	56
	.byte	0
	.byte	34
	.quad	.Lfunc_begin52
	.long	.Lfunc_end52-.Lfunc_begin52
	.byte	1
	.byte	87
	.long	.Linfo_string427
	.long	.Linfo_string428
	.byte	5
	.short	279
	.long	9358

	.byte	35
	.long	.Ldebug_loc125
	.long	.Linfo_string71
	.byte	5
	.short	279
	.long	5432
	.byte	36
	.long	.Ldebug_loc130
	.long	.Linfo_string573
	.byte	5
	.short	279
	.long	9358
	.byte	23
	.quad	.Ltmp819
	.long	.Ltmp856-.Ltmp819
	.byte	36
	.long	.Ldebug_loc126
	.long	.Linfo_string561
	.byte	5
	.short	280
	.long	7164
	.byte	36
	.long	.Ldebug_loc129
	.long	.Linfo_string572
	.byte	5
	.short	281
	.long	9358
	.byte	37
	.long	9321
	.quad	.Ltmp822
	.long	.Ltmp828-.Ltmp822
	.byte	5
	.short	281
	.byte	31
	.long	.Ldebug_loc128
	.long	9333
	.byte	23
	.quad	.Ltmp822
	.long	.Ltmp828-.Ltmp822
	.byte	31
	.long	.Ldebug_loc127
	.long	9345
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin53
	.long	.Lfunc_end53-.Lfunc_begin53
	.byte	1
	.byte	87
	.long	.Linfo_string429
	.long	.Linfo_string430
	.byte	5
	.short	319
	.long	7218

	.byte	35
	.long	.Ldebug_loc131
	.long	.Linfo_string71
	.byte	5
	.short	319
	.long	5432
	.byte	36
	.long	.Ldebug_loc134
	.long	.Linfo_string574
	.byte	5
	.short	319
	.long	7218
	.byte	23
	.quad	.Ltmp857
	.long	.Ltmp868-.Ltmp857
	.byte	36
	.long	.Ldebug_loc132
	.long	.Linfo_string561
	.byte	5
	.short	320
	.long	7164
	.byte	36
	.long	.Ldebug_loc133
	.long	.Linfo_string525
	.byte	5
	.short	321
	.long	7218
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string286
	.byte	2
	.byte	238
	.long	9768
	.byte	1
	.byte	38
	.long	.Linfo_string289
	.byte	2
	.byte	238
	.long	70
	.byte	33
	.long	.Linfo_string290
	.byte	2
	.byte	238
	.long	9768
	.byte	27
	.byte	33
	.long	.Linfo_string291
	.byte	2
	.byte	239
	.long	9768
	.byte	33
	.long	.Linfo_string292
	.byte	2
	.byte	242
	.long	342
	.byte	27
	.byte	33
	.long	.Linfo_string293
	.byte	2
	.byte	245
	.long	118
	.byte	0
	.byte	0
	.byte	0
	.byte	7
	.long	9773
	.byte	5
	.long	.Linfo_string288
	.byte	88
	.byte	2
	.byte	231
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	232
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string259
	.long	7218
	.byte	2
	.byte	233
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string226
	.long	70
	.byte	2
	.byte	234
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string287
	.long	1051
	.byte	2
	.byte	235
	.byte	8
	.byte	64
	.byte	0
	.byte	34
	.quad	.Lfunc_begin54
	.long	.Lfunc_end54-.Lfunc_begin54
	.byte	1
	.byte	87
	.long	.Linfo_string431
	.long	.Linfo_string432
	.byte	5
	.short	447
	.long	9768

	.byte	35
	.long	.Ldebug_loc135
	.long	.Linfo_string71
	.byte	5
	.short	447
	.long	5432
	.byte	36
	.long	.Ldebug_loc141
	.long	.Linfo_string575
	.byte	5
	.short	447
	.long	9768
	.byte	23
	.quad	.Ltmp869
	.long	.Ltmp921-.Ltmp869
	.byte	36
	.long	.Ldebug_loc136
	.long	.Linfo_string561
	.byte	5
	.short	448
	.long	7164
	.byte	36
	.long	.Ldebug_loc140
	.long	.Linfo_string291
	.byte	5
	.short	449
	.long	9768
	.byte	37
	.long	9696
	.quad	.Ltmp873
	.long	.Ltmp910-.Ltmp873
	.byte	5
	.short	449
	.byte	30
	.long	.Ldebug_loc137
	.long	9708
	.byte	31
	.long	.Ldebug_loc139
	.long	9719
	.byte	23
	.quad	.Ltmp873
	.long	.Ltmp910-.Ltmp873
	.byte	31
	.long	.Ldebug_loc138
	.long	9731
	.byte	31
	.long	.Ldebug_loc142
	.long	9742
	.byte	23
	.quad	.Ltmp884
	.long	.Ltmp910-.Ltmp884
	.byte	31
	.long	.Ldebug_loc143
	.long	9754
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	25
	.long	.Linfo_string294
	.byte	2
	.short	262
	.long	10178
	.byte	1
	.byte	26
	.long	.Linfo_string289
	.byte	2
	.short	262
	.long	70
	.byte	28
	.long	.Linfo_string296
	.byte	2
	.short	262
	.long	10178
	.byte	27
	.byte	28
	.long	.Linfo_string297
	.byte	2
	.short	263
	.long	10178
	.byte	27
	.byte	28
	.long	.Linfo_string298
	.byte	2
	.short	268
	.long	342
	.byte	28
	.long	.Linfo_string292
	.byte	2
	.short	269
	.long	342
	.byte	28
	.long	.Linfo_string299
	.byte	2
	.short	271
	.long	1051
	.byte	28
	.long	.Linfo_string300
	.byte	2
	.short	272
	.long	70
	.byte	28
	.long	.Linfo_string301
	.byte	2
	.short	275
	.long	118
	.byte	27
	.byte	28
	.long	.Linfo_string293
	.byte	2
	.short	276
	.long	118
	.byte	28
	.long	.Linfo_string80
	.byte	2
	.short	276
	.long	70
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	7
	.long	10183
	.byte	39
	.long	.Linfo_string295
	.byte	80
	.byte	2
	.short	256
	.byte	1
	.byte	40
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.short	257
	.byte	8
	.byte	0
	.byte	40
	.long	.Linfo_string226
	.long	70
	.byte	2
	.short	258
	.byte	8
	.byte	40
	.byte	40
	.long	.Linfo_string287
	.long	1051
	.byte	2
	.short	259
	.byte	8
	.byte	56
	.byte	0
	.byte	34
	.quad	.Lfunc_begin55
	.long	.Lfunc_end55-.Lfunc_begin55
	.byte	1
	.byte	87
	.long	.Linfo_string433
	.long	.Linfo_string434
	.byte	5
	.short	459
	.long	10178

	.byte	35
	.long	.Ldebug_loc144
	.long	.Linfo_string71
	.byte	5
	.short	459
	.long	5432
	.byte	36
	.long	.Ldebug_loc150
	.long	.Linfo_string576
	.byte	5
	.short	459
	.long	10178
	.byte	23
	.quad	.Ltmp924
	.long	.Ltmp970-.Ltmp924
	.byte	36
	.long	.Ldebug_loc145
	.long	.Linfo_string561
	.byte	5
	.short	460
	.long	7164
	.byte	36
	.long	.Ldebug_loc149
	.long	.Linfo_string297
	.byte	5
	.short	461
	.long	10178
	.byte	37
	.long	10038
	.quad	.Ltmp927
	.long	.Ltmp965-.Ltmp927
	.byte	5
	.short	461
	.byte	30
	.long	.Ldebug_loc146
	.long	10051
	.byte	31
	.long	.Ldebug_loc148
	.long	10063
	.byte	23
	.quad	.Ltmp927
	.long	.Ltmp965-.Ltmp927
	.byte	31
	.long	.Ldebug_loc147
	.long	10076
	.byte	23
	.quad	.Ltmp936
	.long	.Ltmp965-.Ltmp936
	.byte	31
	.long	.Ldebug_loc151
	.long	10089
	.byte	31
	.long	.Ldebug_loc152
	.long	10101
	.byte	31
	.long	.Ldebug_loc153
	.long	10113
	.byte	31
	.long	.Ldebug_loc154
	.long	10125
	.byte	31
	.long	.Ldebug_loc155
	.long	10137
	.byte	23
	.quad	.Ltmp950
	.long	.Ltmp965-.Ltmp950
	.byte	31
	.long	.Ldebug_loc156
	.long	10150
	.byte	31
	.long	.Ldebug_loc157
	.long	10162
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string302
	.byte	2
	.byte	143
	.long	10535
	.byte	1
	.byte	33
	.long	.Linfo_string305
	.byte	2
	.byte	143
	.long	10535
	.byte	27
	.byte	33
	.long	.Linfo_string306
	.byte	2
	.byte	144
	.long	10535
	.byte	0
	.byte	0
	.byte	7
	.long	10540
	.byte	5
	.long	.Linfo_string304
	.byte	88
	.byte	2
	.byte	137
	.byte	1
	.byte	6
	.long	.Linfo_string259
	.long	7223
	.byte	2
	.byte	138
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string226
	.long	70
	.byte	2
	.byte	139
	.byte	8
	.byte	64
	.byte	6
	.long	.Linfo_string303
	.long	118
	.byte	2
	.byte	140
	.byte	8
	.byte	80
	.byte	0
	.byte	34
	.quad	.Lfunc_begin56
	.long	.Lfunc_end56-.Lfunc_begin56
	.byte	1
	.byte	87
	.long	.Linfo_string435
	.long	.Linfo_string436
	.byte	5
	.short	326
	.long	7218

	.byte	35
	.long	.Ldebug_loc158
	.long	.Linfo_string71
	.byte	5
	.short	326
	.long	5432
	.byte	36
	.long	.Ldebug_loc163
	.long	.Linfo_string577
	.byte	5
	.short	326
	.long	7218
	.byte	23
	.quad	.Ltmp972
	.long	.Ltmp1013-.Ltmp972
	.byte	36
	.long	.Ldebug_loc159
	.long	.Linfo_string561
	.byte	5
	.short	327
	.long	7164
	.byte	36
	.long	.Ldebug_loc162
	.long	.Linfo_string529
	.byte	5
	.short	333
	.long	10535
	.byte	37
	.long	10498
	.quad	.Ltmp977
	.long	.Ltmp986-.Ltmp977
	.byte	5
	.short	333
	.byte	31
	.long	.Ldebug_loc161
	.long	10510
	.byte	23
	.quad	.Ltmp977
	.long	.Ltmp986-.Ltmp977
	.byte	31
	.long	.Ldebug_loc160
	.long	10522
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin57
	.long	.Lfunc_end57-.Lfunc_begin57
	.byte	1
	.byte	87
	.long	.Linfo_string437
	.long	.Linfo_string438
	.byte	5
	.byte	153
	.long	5432

	.byte	18
	.long	.Ldebug_loc164
	.long	.Linfo_string71
	.byte	5
	.byte	153
	.long	5432
	.byte	18
	.long	.Ldebug_loc165
	.long	.Linfo_string194
	.byte	5
	.byte	153
	.long	70
	.byte	20
	.long	.Ldebug_loc167
	.long	.Linfo_string578
	.byte	5
	.byte	153
	.long	5432
	.byte	23
	.quad	.Ltmp1014
	.long	.Ltmp1046-.Ltmp1014
	.byte	20
	.long	.Ldebug_loc166
	.long	.Linfo_string132
	.byte	5
	.byte	164
	.long	2509
	.byte	20
	.long	.Ldebug_loc168
	.long	.Linfo_string570
	.byte	5
	.byte	164
	.long	5432
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string307
	.byte	2
	.byte	167
	.long	10907
	.byte	1
	.byte	33
	.long	.Linfo_string314
	.byte	2
	.byte	167
	.long	10907
	.byte	27
	.byte	33
	.long	.Linfo_string315
	.byte	2
	.byte	168
	.long	10907
	.byte	0
	.byte	0
	.byte	7
	.long	10912
	.byte	5
	.long	.Linfo_string313
	.byte	96
	.byte	2
	.byte	159
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	160
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string259
	.long	7218
	.byte	2
	.byte	161
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string226
	.long	70
	.byte	2
	.byte	162
	.byte	8
	.byte	48
	.byte	6
	.long	.Linfo_string308
	.long	1037
	.byte	2
	.byte	163
	.byte	1
	.byte	64
	.byte	6
	.long	.Linfo_string309
	.long	10987
	.byte	2
	.byte	164
	.byte	8
	.byte	72
	.byte	0
	.byte	11
	.long	.Linfo_string312
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string31
	.long	11034
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string38
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	6
	.long	.Linfo_string39
	.long	118
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	11039
	.byte	5
	.long	.Linfo_string311
	.byte	96
	.byte	2
	.byte	151
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	152
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string226
	.long	70
	.byte	2
	.byte	153
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string180
	.long	70
	.byte	2
	.byte	154
	.byte	8
	.byte	56
	.byte	6
	.long	.Linfo_string310
	.long	1037
	.byte	2
	.byte	155
	.byte	1
	.byte	72
	.byte	6
	.long	.Linfo_string284
	.long	70
	.byte	2
	.byte	156
	.byte	8
	.byte	80
	.byte	0
	.byte	34
	.quad	.Lfunc_begin58
	.long	.Lfunc_end58-.Lfunc_begin58
	.byte	1
	.byte	87
	.long	.Linfo_string439
	.long	.Linfo_string440
	.byte	5
	.short	389
	.long	10907

	.byte	35
	.long	.Ldebug_loc169
	.long	.Linfo_string71
	.byte	5
	.short	389
	.long	5432
	.byte	36
	.long	.Ldebug_loc179
	.long	.Linfo_string582
	.byte	5
	.short	389
	.long	10907
	.byte	23
	.quad	.Ltmp1047
	.long	.Ltmp1181-.Ltmp1047
	.byte	36
	.long	.Ldebug_loc170
	.long	.Linfo_string561
	.byte	5
	.short	390
	.long	7164
	.byte	36
	.long	.Ldebug_loc173
	.long	.Linfo_string315
	.byte	5
	.short	391
	.long	10907
	.byte	37
	.long	10870
	.quad	.Ltmp1050
	.long	.Ltmp1063-.Ltmp1050
	.byte	5
	.short	391
	.byte	31
	.long	.Ldebug_loc172
	.long	10882
	.byte	23
	.quad	.Ltmp1050
	.long	.Ltmp1063-.Ltmp1050
	.byte	31
	.long	.Ldebug_loc171
	.long	10894
	.byte	0
	.byte	0
	.byte	22
	.long	.Ldebug_ranges7
	.byte	36
	.long	.Ldebug_loc174
	.long	.Linfo_string564
	.byte	5
	.short	430
	.long	7164
	.byte	0
	.byte	22
	.long	.Ldebug_ranges8
	.byte	36
	.long	.Ldebug_loc175
	.long	.Linfo_string579
	.byte	5
	.short	416
	.long	7164
	.byte	0
	.byte	22
	.long	.Ldebug_ranges9
	.byte	36
	.long	.Ldebug_loc176
	.long	.Linfo_string580
	.byte	5
	.short	423
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1147
	.long	.Ltmp1171-.Ltmp1147
	.byte	36
	.long	.Ldebug_loc177
	.long	.Linfo_string529
	.byte	5
	.short	407
	.long	7218
	.byte	23
	.quad	.Ltmp1156
	.long	.Ltmp1166-.Ltmp1156
	.byte	36
	.long	.Ldebug_loc178
	.long	.Linfo_string581
	.byte	5
	.short	411
	.long	7373
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	32
	.long	.Linfo_string316
	.byte	2
	.byte	88
	.long	11450
	.byte	1
	.byte	38
	.long	.Linfo_string319
	.byte	2
	.byte	88
	.long	1037
	.byte	33
	.long	.Linfo_string320
	.byte	2
	.byte	88
	.long	11450
	.byte	27
	.byte	33
	.long	.Linfo_string272
	.byte	2
	.byte	89
	.long	11450
	.byte	0
	.byte	0
	.byte	7
	.long	11455
	.byte	5
	.long	.Linfo_string318
	.byte	64
	.byte	2
	.byte	82
	.byte	1
	.byte	6
	.long	.Linfo_string249
	.long	7259
	.byte	2
	.byte	83
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string180
	.long	70
	.byte	2
	.byte	84
	.byte	8
	.byte	40
	.byte	6
	.long	.Linfo_string317
	.long	1037
	.byte	2
	.byte	85
	.byte	1
	.byte	56
	.byte	0
	.byte	34
	.quad	.Lfunc_begin59
	.long	.Lfunc_end59-.Lfunc_begin59
	.byte	1
	.byte	87
	.long	.Linfo_string441
	.long	.Linfo_string442
	.byte	5
	.short	375
	.long	11450

	.byte	35
	.long	.Ldebug_loc180
	.long	.Linfo_string71
	.byte	5
	.short	375
	.long	5432
	.byte	36
	.long	.Ldebug_loc186
	.long	.Linfo_string583
	.byte	5
	.short	375
	.long	11450
	.byte	23
	.quad	.Ltmp1182
	.long	.Ltmp1197-.Ltmp1182
	.byte	36
	.long	.Ldebug_loc181
	.long	.Linfo_string561
	.byte	5
	.short	376
	.long	7164
	.byte	36
	.long	.Ldebug_loc185
	.long	.Linfo_string525
	.byte	5
	.short	377
	.long	11450
	.byte	37
	.long	11402
	.quad	.Ltmp1185
	.long	.Ltmp1191-.Ltmp1185
	.byte	5
	.short	377
	.byte	30
	.long	.Ldebug_loc182
	.long	11414
	.byte	31
	.long	.Ldebug_loc184
	.long	11425
	.byte	23
	.quad	.Ltmp1185
	.long	.Ltmp1191-.Ltmp1185
	.byte	31
	.long	.Ldebug_loc183
	.long	11437
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin60
	.long	.Lfunc_end60-.Lfunc_begin60
	.byte	1
	.byte	87
	.long	.Linfo_string443
	.long	.Linfo_string444
	.byte	5
	.byte	147
	.long	7259

	.byte	18
	.long	.Ldebug_loc187
	.long	.Linfo_string71
	.byte	5
	.byte	147
	.long	5432
	.byte	0
	.byte	17
	.quad	.Lfunc_begin61
	.long	.Lfunc_end61-.Lfunc_begin61
	.byte	1
	.byte	87
	.long	.Linfo_string445
	.long	.Linfo_string446
	.byte	4
	.byte	80
	.long	7164

	.byte	18
	.long	.Ldebug_loc188
	.long	.Linfo_string323
	.byte	4
	.byte	80
	.long	5538
	.byte	20
	.long	.Ldebug_loc191
	.long	.Linfo_string585
	.byte	4
	.byte	80
	.long	7164
	.byte	23
	.quad	.Ltmp1208
	.long	.Ltmp1212-.Ltmp1208
	.byte	20
	.long	.Ldebug_loc189
	.long	.Linfo_string584
	.byte	4
	.byte	88
	.long	6035
	.byte	23
	.quad	.Ltmp1211
	.long	.Ltmp1212-.Ltmp1211
	.byte	20
	.long	.Ldebug_loc190
	.long	.Linfo_string561
	.byte	4
	.byte	89
	.long	7164
	.byte	0
	.byte	0
	.byte	23
	.quad	.Ltmp1218
	.long	.Ltmp1220-.Ltmp1218
	.byte	20
	.long	.Ldebug_loc192
	.long	.Linfo_string561
	.byte	4
	.byte	111
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1220
	.long	.Ltmp1222-.Ltmp1220
	.byte	20
	.long	.Ldebug_loc193
	.long	.Linfo_string561
	.byte	4
	.byte	115
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1222
	.long	.Ltmp1224-.Ltmp1222
	.byte	20
	.long	.Ldebug_loc194
	.long	.Linfo_string561
	.byte	4
	.byte	119
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1224
	.long	.Ltmp1226-.Ltmp1224
	.byte	20
	.long	.Ldebug_loc195
	.long	.Linfo_string561
	.byte	4
	.byte	123
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1226
	.long	.Ltmp1228-.Ltmp1226
	.byte	20
	.long	.Ldebug_loc196
	.long	.Linfo_string561
	.byte	4
	.byte	127
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1228
	.long	.Ltmp1230-.Ltmp1228
	.byte	20
	.long	.Ldebug_loc197
	.long	.Linfo_string561
	.byte	4
	.byte	131
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1230
	.long	.Ltmp1232-.Ltmp1230
	.byte	20
	.long	.Ldebug_loc198
	.long	.Linfo_string561
	.byte	4
	.byte	135
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1232
	.long	.Ltmp1234-.Ltmp1232
	.byte	20
	.long	.Ldebug_loc199
	.long	.Linfo_string561
	.byte	4
	.byte	139
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1234
	.long	.Ltmp1236-.Ltmp1234
	.byte	20
	.long	.Ldebug_loc200
	.long	.Linfo_string561
	.byte	4
	.byte	143
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1236
	.long	.Ltmp1238-.Ltmp1236
	.byte	20
	.long	.Ldebug_loc201
	.long	.Linfo_string561
	.byte	4
	.byte	147
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1238
	.long	.Ltmp1240-.Ltmp1238
	.byte	20
	.long	.Ldebug_loc202
	.long	.Linfo_string561
	.byte	4
	.byte	151
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1240
	.long	.Ltmp1242-.Ltmp1240
	.byte	20
	.long	.Ldebug_loc203
	.long	.Linfo_string561
	.byte	4
	.byte	155
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1242
	.long	.Ltmp1244-.Ltmp1242
	.byte	20
	.long	.Ldebug_loc204
	.long	.Linfo_string561
	.byte	4
	.byte	159
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1244
	.long	.Ltmp1246-.Ltmp1244
	.byte	20
	.long	.Ldebug_loc205
	.long	.Linfo_string561
	.byte	4
	.byte	163
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1246
	.long	.Ltmp1248-.Ltmp1246
	.byte	20
	.long	.Ldebug_loc206
	.long	.Linfo_string561
	.byte	4
	.byte	167
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1249
	.long	.Ltmp1251-.Ltmp1249
	.byte	20
	.long	.Ldebug_loc207
	.long	.Linfo_string561
	.byte	4
	.byte	105
	.long	7164
	.byte	0
	.byte	23
	.quad	.Ltmp1253
	.long	.Ltmp1258-.Ltmp1253
	.byte	20
	.long	.Ldebug_loc208
	.long	.Linfo_string586
	.byte	4
	.byte	96
	.long	6035
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin62
	.long	.Lfunc_end62-.Lfunc_begin62
	.byte	1
	.byte	87
	.long	.Linfo_string447
	.long	.Linfo_string448
	.byte	4
	.byte	175
	.long	7164

	.byte	18
	.long	.Ldebug_loc209
	.long	.Linfo_string323
	.byte	4
	.byte	175
	.long	5538
	.byte	20
	.long	.Ldebug_loc214
	.long	.Linfo_string588
	.byte	4
	.byte	175
	.long	7164
	.byte	23
	.quad	.Ltmp1266
	.long	.Ltmp1310-.Ltmp1266
	.byte	20
	.long	.Ldebug_loc210
	.long	.Linfo_string587
	.byte	4
	.byte	177
	.long	118
	.byte	20
	.long	.Ldebug_loc211
	.long	.Linfo_string248
	.byte	4
	.byte	176
	.long	70
	.byte	23
	.quad	.Ltmp1275
	.long	.Ltmp1280-.Ltmp1275
	.byte	20
	.long	.Ldebug_loc212
	.long	.Linfo_string293
	.byte	4
	.byte	212
	.long	118
	.byte	0
	.byte	22
	.long	.Ldebug_ranges10
	.byte	20
	.long	.Ldebug_loc213
	.long	.Linfo_string561
	.byte	4
	.byte	188
	.long	7164
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin63
	.long	.Lfunc_end63-.Lfunc_begin63
	.byte	1
	.byte	87
	.long	.Linfo_string449
	.long	.Linfo_string450
	.byte	4
	.byte	75
	.long	7259

	.byte	18
	.long	.Ldebug_loc215
	.long	.Linfo_string323
	.byte	4
	.byte	75
	.long	5538
	.byte	20
	.long	.Ldebug_loc216
	.long	.Linfo_string589
	.byte	4
	.byte	75
	.long	7259
	.byte	0
	.byte	34
	.quad	.Lfunc_begin64
	.long	.Lfunc_end64-.Lfunc_begin64
	.byte	1
	.byte	87
	.long	.Linfo_string451
	.long	.Linfo_string452
	.byte	4
	.short	461
	.long	298

	.byte	35
	.long	.Ldebug_loc217
	.long	.Linfo_string323
	.byte	4
	.short	461
	.long	5538
	.byte	35
	.long	.Ldebug_loc218
	.long	.Linfo_string590
	.byte	4
	.short	461
	.long	118
	.byte	0
	.byte	34
	.quad	.Lfunc_begin65
	.long	.Lfunc_end65-.Lfunc_begin65
	.byte	1
	.byte	87
	.long	.Linfo_string453
	.long	.Linfo_string454
	.byte	4
	.short	475
	.long	298

	.byte	35
	.long	.Ldebug_loc219
	.long	.Linfo_string323
	.byte	4
	.short	475
	.long	5538
	.byte	23
	.quad	.Ltmp1336
	.long	.Ltmp1364-.Ltmp1336
	.byte	36
	.long	.Ldebug_loc220
	.long	.Linfo_string132
	.byte	4
	.short	480
	.long	2509
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin66
	.long	.Lfunc_end66-.Lfunc_begin66
	.byte	1
	.byte	87
	.long	.Linfo_string455
	.long	.Linfo_string456
	.byte	4
	.short	314
	.long	7164

	.byte	35
	.long	.Ldebug_loc221
	.long	.Linfo_string323
	.byte	4
	.short	314
	.long	5538
	.byte	36
	.long	.Ldebug_loc223
	.long	.Linfo_string592
	.byte	4
	.short	314
	.long	7164
	.byte	22
	.long	.Ldebug_ranges11
	.byte	36
	.long	.Ldebug_loc222
	.long	.Linfo_string591
	.byte	4
	.short	315
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin67
	.long	.Lfunc_end67-.Lfunc_begin67
	.byte	1
	.byte	87
	.long	.Linfo_string457
	.long	.Linfo_string458
	.byte	4
	.short	363
	.long	7164

	.byte	35
	.long	.Ldebug_loc224
	.long	.Linfo_string323
	.byte	4
	.short	363
	.long	5538
	.byte	36
	.long	.Ldebug_loc226
	.long	.Linfo_string593
	.byte	4
	.short	363
	.long	7164
	.byte	22
	.long	.Ldebug_ranges12
	.byte	36
	.long	.Ldebug_loc225
	.long	.Linfo_string591
	.byte	4
	.short	364
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin68
	.long	.Lfunc_end68-.Lfunc_begin68
	.byte	1
	.byte	87
	.long	.Linfo_string459
	.long	.Linfo_string460
	.byte	4
	.short	401
	.long	7164

	.byte	35
	.long	.Ldebug_loc227
	.long	.Linfo_string323
	.byte	4
	.short	401
	.long	5538
	.byte	36
	.long	.Ldebug_loc229
	.long	.Linfo_string594
	.byte	4
	.short	401
	.long	7164
	.byte	22
	.long	.Ldebug_ranges13
	.byte	36
	.long	.Ldebug_loc228
	.long	.Linfo_string591
	.byte	4
	.short	402
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin69
	.long	.Lfunc_end69-.Lfunc_begin69
	.byte	1
	.byte	87
	.long	.Linfo_string461
	.long	.Linfo_string462
	.byte	4
	.short	352
	.long	7164

	.byte	35
	.long	.Ldebug_loc230
	.long	.Linfo_string323
	.byte	4
	.short	352
	.long	5538
	.byte	36
	.long	.Ldebug_loc232
	.long	.Linfo_string595
	.byte	4
	.short	352
	.long	7164
	.byte	22
	.long	.Ldebug_ranges14
	.byte	36
	.long	.Ldebug_loc231
	.long	.Linfo_string591
	.byte	4
	.short	353
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin70
	.long	.Lfunc_end70-.Lfunc_begin70
	.byte	1
	.byte	87
	.long	.Linfo_string463
	.long	.Linfo_string464
	.byte	4
	.short	325
	.long	7164

	.byte	35
	.long	.Ldebug_loc233
	.long	.Linfo_string323
	.byte	4
	.short	325
	.long	5538
	.byte	36
	.long	.Ldebug_loc235
	.long	.Linfo_string596
	.byte	4
	.short	325
	.long	7164
	.byte	22
	.long	.Ldebug_ranges15
	.byte	36
	.long	.Ldebug_loc234
	.long	.Linfo_string591
	.byte	4
	.short	326
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin71
	.long	.Lfunc_end71-.Lfunc_begin71
	.byte	1
	.byte	87
	.long	.Linfo_string465
	.long	.Linfo_string466
	.byte	4
	.short	287
	.long	7164

	.byte	35
	.long	.Ldebug_loc236
	.long	.Linfo_string323
	.byte	4
	.short	287
	.long	5538
	.byte	36
	.long	.Ldebug_loc238
	.long	.Linfo_string597
	.byte	4
	.short	287
	.long	7164
	.byte	22
	.long	.Ldebug_ranges16
	.byte	36
	.long	.Ldebug_loc237
	.long	.Linfo_string591
	.byte	4
	.short	288
	.long	1051
	.byte	0
	.byte	23
	.quad	.Ltmp1471
	.long	.Ltmp1479-.Ltmp1471
	.byte	36
	.long	.Ldebug_loc239
	.long	.Linfo_string591
	.byte	4
	.short	293
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin72
	.long	.Lfunc_end72-.Lfunc_begin72
	.byte	1
	.byte	87
	.long	.Linfo_string467
	.long	.Linfo_string468
	.byte	4
	.short	271
	.long	7164

	.byte	35
	.long	.Ldebug_loc240
	.long	.Linfo_string323
	.byte	4
	.short	271
	.long	5538
	.byte	36
	.long	.Ldebug_loc242
	.long	.Linfo_string598
	.byte	4
	.short	271
	.long	7164
	.byte	22
	.long	.Ldebug_ranges17
	.byte	36
	.long	.Ldebug_loc241
	.long	.Linfo_string591
	.byte	4
	.short	272
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin73
	.long	.Lfunc_end73-.Lfunc_begin73
	.byte	1
	.byte	87
	.long	.Linfo_string469
	.long	.Linfo_string470
	.byte	4
	.short	303
	.long	7164

	.byte	35
	.long	.Ldebug_loc243
	.long	.Linfo_string323
	.byte	4
	.short	303
	.long	5538
	.byte	36
	.long	.Ldebug_loc245
	.long	.Linfo_string599
	.byte	4
	.short	303
	.long	7164
	.byte	22
	.long	.Ldebug_ranges18
	.byte	36
	.long	.Ldebug_loc244
	.long	.Linfo_string591
	.byte	4
	.short	304
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin74
	.long	.Lfunc_end74-.Lfunc_begin74
	.byte	1
	.byte	87
	.long	.Linfo_string471
	.long	.Linfo_string472
	.byte	4
	.short	390
	.long	7164

	.byte	35
	.long	.Ldebug_loc246
	.long	.Linfo_string323
	.byte	4
	.short	390
	.long	5538
	.byte	36
	.long	.Ldebug_loc248
	.long	.Linfo_string600
	.byte	4
	.short	390
	.long	7164
	.byte	22
	.long	.Ldebug_ranges19
	.byte	36
	.long	.Ldebug_loc247
	.long	.Linfo_string591
	.byte	4
	.short	391
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin75
	.long	.Lfunc_end75-.Lfunc_begin75
	.byte	1
	.byte	87
	.long	.Linfo_string473
	.long	.Linfo_string474
	.byte	4
	.short	341
	.long	7164

	.byte	35
	.long	.Ldebug_loc249
	.long	.Linfo_string323
	.byte	4
	.short	341
	.long	5538
	.byte	36
	.long	.Ldebug_loc251
	.long	.Linfo_string601
	.byte	4
	.short	341
	.long	7164
	.byte	22
	.long	.Ldebug_ranges20
	.byte	36
	.long	.Ldebug_loc250
	.long	.Linfo_string591
	.byte	4
	.short	342
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin76
	.long	.Lfunc_end76-.Lfunc_begin76
	.byte	1
	.byte	87
	.long	.Linfo_string475
	.long	.Linfo_string476
	.byte	4
	.short	379
	.long	7164

	.byte	35
	.long	.Ldebug_loc252
	.long	.Linfo_string323
	.byte	4
	.short	379
	.long	5538
	.byte	36
	.long	.Ldebug_loc254
	.long	.Linfo_string602
	.byte	4
	.short	379
	.long	7164
	.byte	22
	.long	.Ldebug_ranges21
	.byte	36
	.long	.Ldebug_loc253
	.long	.Linfo_string591
	.byte	4
	.short	380
	.long	1051
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin77
	.long	.Lfunc_end77-.Lfunc_begin77
	.byte	1
	.byte	87
	.long	.Linfo_string477
	.long	.Linfo_string478
	.byte	4
	.byte	225
	.long	7164

	.byte	18
	.long	.Ldebug_loc255
	.long	.Linfo_string323
	.byte	4
	.byte	225
	.long	5538
	.byte	20
	.long	.Ldebug_loc259
	.long	.Linfo_string606
	.byte	4
	.byte	225
	.long	7164
	.byte	23
	.quad	.Ltmp1574
	.long	.Ltmp1616-.Ltmp1574
	.byte	20
	.long	.Ldebug_loc256
	.long	.Linfo_string603
	.byte	4
	.byte	230
	.long	6035
	.byte	20
	.long	.Ldebug_loc260
	.long	.Linfo_string607
	.byte	4
	.byte	241
	.long	70
	.byte	23
	.quad	.Ltmp1580
	.long	.Ltmp1584-.Ltmp1580
	.byte	20
	.long	.Ldebug_loc257
	.long	.Linfo_string604
	.byte	4
	.byte	232
	.long	342
	.byte	23
	.quad	.Ltmp1581
	.long	.Ltmp1584-.Ltmp1581
	.byte	20
	.long	.Ldebug_loc258
	.long	.Linfo_string605
	.byte	4
	.byte	234
	.long	70
	.byte	0
	.byte	0
	.byte	23
	.quad	.Ltmp1599
	.long	.Ltmp1608-.Ltmp1599
	.byte	20
	.long	.Ldebug_loc261
	.long	.Linfo_string177
	.byte	4
	.byte	251
	.long	6035
	.byte	0
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin78
	.long	.Lfunc_end78-.Lfunc_begin78
	.byte	1
	.byte	87
	.long	.Linfo_string479
	.long	.Linfo_string480
	.byte	4
	.short	423
	.long	7164

	.byte	35
	.long	.Ldebug_loc262
	.long	.Linfo_string323
	.byte	4
	.short	423
	.long	5538
	.byte	36
	.long	.Ldebug_loc264
	.long	.Linfo_string608
	.byte	4
	.short	423
	.long	7164
	.byte	22
	.long	.Ldebug_ranges22
	.byte	36
	.long	.Ldebug_loc263
	.long	.Linfo_string591
	.byte	4
	.short	424
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin79
	.long	.Lfunc_end79-.Lfunc_begin79
	.byte	1
	.byte	87
	.long	.Linfo_string481
	.long	.Linfo_string482
	.byte	4
	.short	434
	.long	7164

	.byte	35
	.long	.Ldebug_loc265
	.long	.Linfo_string323
	.byte	4
	.short	434
	.long	5538
	.byte	36
	.long	.Ldebug_loc267
	.long	.Linfo_string609
	.byte	4
	.short	434
	.long	7164
	.byte	22
	.long	.Ldebug_ranges23
	.byte	36
	.long	.Ldebug_loc266
	.long	.Linfo_string591
	.byte	4
	.short	435
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin80
	.long	.Lfunc_end80-.Lfunc_begin80
	.byte	1
	.byte	87
	.long	.Linfo_string483
	.long	.Linfo_string484
	.byte	4
	.short	412
	.long	7164

	.byte	35
	.long	.Ldebug_loc268
	.long	.Linfo_string323
	.byte	4
	.short	412
	.long	5538
	.byte	36
	.long	.Ldebug_loc270
	.long	.Linfo_string610
	.byte	4
	.short	412
	.long	7164
	.byte	22
	.long	.Ldebug_ranges24
	.byte	36
	.long	.Ldebug_loc269
	.long	.Linfo_string591
	.byte	4
	.short	413
	.long	1051
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin81
	.long	.Lfunc_end81-.Lfunc_begin81
	.byte	1
	.byte	87
	.long	.Linfo_string485
	.long	.Linfo_string486
	.byte	4
	.short	445
	.long	7164

	.byte	35
	.long	.Ldebug_loc271
	.long	.Linfo_string323
	.byte	4
	.short	445
	.long	5538
	.byte	36
	.long	.Ldebug_loc273
	.long	.Linfo_string611
	.byte	4
	.short	445
	.long	7164
	.byte	22
	.long	.Ldebug_ranges25
	.byte	36
	.long	.Ldebug_loc272
	.long	.Linfo_string591
	.byte	4
	.short	446
	.long	1051
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin82
	.long	.Lfunc_end82-.Lfunc_begin82
	.byte	1
	.byte	87
	.long	.Linfo_string487
	.long	.Linfo_string488
	.byte	1
	.byte	1
	.long	305

	.byte	18
	.long	.Ldebug_loc274
	.long	.Linfo_string504
	.byte	1
	.byte	1
	.long	293
	.byte	19
	.byte	1
	.byte	84
	.long	.Linfo_string505
	.byte	1
	.byte	1
	.long	305
	.byte	20
	.long	.Ldebug_loc275
	.long	.Linfo_string612
	.byte	1
	.byte	1
	.long	305
	.byte	0
	.byte	17
	.quad	.Lfunc_begin83
	.long	.Lfunc_end83-.Lfunc_begin83
	.byte	1
	.byte	87
	.long	.Linfo_string489
	.long	.Linfo_string490
	.byte	1
	.byte	1
	.long	1037

	.byte	18
	.long	.Ldebug_loc276
	.long	.Linfo_string507
	.byte	1
	.byte	1
	.long	293
	.byte	18
	.long	.Ldebug_loc277
	.long	.Linfo_string508
	.byte	1
	.byte	1
	.long	293
	.byte	21
	.byte	0
	.long	.Linfo_string613
	.byte	1
	.byte	1
	.long	1037
	.byte	0
	.byte	32
	.long	.Linfo_string321
	.byte	4
	.byte	63
	.long	5538
	.byte	1
	.byte	38
	.long	.Linfo_string106
	.byte	4
	.byte	63
	.long	5802
	.byte	33
	.long	.Linfo_string322
	.byte	4
	.byte	63
	.long	5538
	.byte	27
	.byte	33
	.long	.Linfo_string323
	.byte	4
	.byte	64
	.long	5538
	.byte	0
	.byte	0
	.byte	24
	.quad	.Lfunc_begin84
	.long	.Lfunc_end84-.Lfunc_begin84
	.byte	1
	.byte	87
	.long	.Linfo_string491
	.byte	5
	.byte	23
	.long	5432
	.byte	18
	.long	.Ldebug_loc278
	.long	.Linfo_string614
	.byte	5
	.byte	23
	.long	5802
	.byte	20
	.long	.Ldebug_loc281
	.long	.Linfo_string615
	.byte	5
	.byte	23
	.long	5432
	.byte	23
	.quad	.Ltmp1714
	.long	.Ltmp1738-.Ltmp1714
	.byte	20
	.long	.Ldebug_loc280
	.long	.Linfo_string71
	.byte	5
	.byte	24
	.long	5432
	.byte	41
	.long	14326
	.quad	.Ltmp1716
	.long	.Ltmp1732-.Ltmp1716
	.byte	5
	.byte	25
	.byte	30
	.long	.Ldebug_loc279
	.long	14338
	.byte	31
	.long	.Ldebug_loc283
	.long	14349
	.byte	23
	.quad	.Ltmp1716
	.long	.Ltmp1732-.Ltmp1716
	.byte	31
	.long	.Ldebug_loc282
	.long	14361
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin85
	.long	.Lfunc_end85-.Lfunc_begin85
	.byte	1
	.byte	87
	.long	.Linfo_string492
	.long	.Linfo_string493
	.byte	5
	.byte	30
	.long	15101

	.byte	18
	.long	.Ldebug_loc284
	.long	.Linfo_string616
	.byte	5
	.byte	30
	.long	70
	.byte	20
	.long	.Ldebug_loc285
	.long	.Linfo_string617
	.byte	5
	.byte	30
	.long	5432
	.byte	0
	.byte	17
	.quad	.Lfunc_begin86
	.long	.Lfunc_end86-.Lfunc_begin86
	.byte	1
	.byte	87
	.long	.Linfo_string495
	.long	.Linfo_string496
	.byte	5
	.byte	34
	.long	15101

	.byte	19
	.byte	2
	.byte	145
	.byte	48
	.long	.Linfo_string616
	.byte	5
	.byte	34
	.long	990
	.byte	20
	.long	.Ldebug_loc286
	.long	.Linfo_string618
	.byte	5
	.byte	34
	.long	5432
	.byte	0
	.byte	17
	.quad	.Lfunc_begin87
	.long	.Lfunc_end87-.Lfunc_begin87
	.byte	1
	.byte	87
	.long	.Linfo_string497
	.long	.Linfo_string498
	.byte	5
	.byte	46
	.long	15101

	.byte	20
	.long	.Ldebug_loc288
	.long	.Linfo_string619
	.byte	5
	.byte	46
	.long	2509
	.byte	20
	.long	.Ldebug_loc290
	.long	.Linfo_string620
	.byte	5
	.byte	46
	.long	5432
	.byte	23
	.quad	.Ltmp1751
	.long	.Ltmp1762-.Ltmp1751
	.byte	20
	.long	.Ldebug_loc287
	.long	.Linfo_string132
	.byte	5
	.byte	47
	.long	2509
	.byte	20
	.long	.Ldebug_loc289
	.long	.Linfo_string570
	.byte	5
	.byte	53
	.long	5432
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin88
	.long	.Lfunc_end88-.Lfunc_begin88
	.byte	1
	.byte	87
	.long	.Linfo_string499
	.long	.Linfo_string500
	.byte	5
	.byte	58
	.long	15101

	.byte	20
	.long	.Ldebug_loc293
	.long	.Linfo_string622
	.byte	5
	.byte	58
	.long	2509
	.byte	20
	.long	.Ldebug_loc295
	.long	.Linfo_string623
	.byte	5
	.byte	58
	.long	5432
	.byte	23
	.quad	.Ltmp1763
	.long	.Ltmp1787-.Ltmp1763
	.byte	20
	.long	.Ldebug_loc291
	.long	.Linfo_string621
	.byte	5
	.byte	59
	.long	6206
	.byte	20
	.long	.Ldebug_loc292
	.long	.Linfo_string132
	.byte	5
	.byte	59
	.long	2509
	.byte	20
	.long	.Ldebug_loc294
	.long	.Linfo_string570
	.byte	5
	.byte	69
	.long	5432
	.byte	0
	.byte	0
	.byte	42
	.quad	.Lfunc_begin89
	.long	.Lfunc_end89-.Lfunc_begin89
	.byte	1
	.byte	87
	.long	.Linfo_string501
	.byte	5
	.byte	80
	.long	298
	.byte	24
	.quad	.Lfunc_begin90
	.long	.Lfunc_end90-.Lfunc_begin90
	.byte	1
	.byte	87
	.long	.Linfo_string502
	.byte	5
	.byte	80
	.long	1037
	.byte	18
	.long	.Ldebug_loc296
	.long	.Linfo_string624
	.byte	5
	.byte	80
	.long	15140
	.byte	21
	.byte	0
	.long	.Linfo_string627
	.byte	5
	.byte	80
	.long	1037
	.byte	0
	.byte	24
	.quad	.Lfunc_begin91
	.long	.Lfunc_end91-.Lfunc_begin91
	.byte	1
	.byte	87
	.long	.Linfo_string503
	.byte	5
	.byte	80
	.long	298
	.byte	18
	.long	.Ldebug_loc297
	.long	.Linfo_string628
	.byte	5
	.byte	80
	.long	1037
	.byte	23
	.quad	.Ltmp1796
	.long	.Ltmp1820-.Ltmp1796
	.byte	20
	.long	.Ldebug_loc298
	.long	.Linfo_string106
	.byte	5
	.byte	81
	.long	6040
	.byte	23
	.quad	.Ltmp1803
	.long	.Ltmp1820-.Ltmp1803
	.byte	20
	.long	.Ldebug_loc301
	.long	.Linfo_string81
	.byte	5
	.byte	86
	.long	7259
	.byte	22
	.long	.Ldebug_ranges26
	.byte	20
	.long	.Ldebug_loc299
	.long	.Linfo_string522
	.byte	5
	.byte	82
	.long	1037
	.byte	20
	.long	.Ldebug_loc300
	.long	.Linfo_string629
	.byte	5
	.byte	82
	.long	70
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	43
	.quad	.Lfunc_begin92
	.long	.Lfunc_end92-.Lfunc_begin92
	.byte	1
	.byte	87
	.long	.Linfo_string501
	.byte	5
	.short	394
	.long	298
	.byte	11
	.long	.Linfo_string494
	.byte	24
	.byte	1
	.byte	6
	.long	.Linfo_string197
	.long	5432
	.byte	3
	.byte	30
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string197
	.long	2509
	.byte	3
	.byte	30
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	7259
	.byte	7
	.long	15145
	.byte	11
	.long	.Linfo_string626
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string625
	.long	15166
	.byte	3
	.byte	80
	.byte	8
	.byte	0
	.byte	0
	.byte	7
	.long	15171
	.byte	5
	.long	.Linfo_string117
	.byte	8
	.byte	5
	.byte	8
	.byte	1
	.byte	6
	.long	.Linfo_string116
	.long	15194
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	7
	.long	15199
	.byte	44
	.long	298
	.byte	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp47
	.quad	.Ltmp51
	.quad	.Ltmp56
	.quad	.Ltmp58
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp492
	.quad	.Ltmp500
	.quad	.Ltmp549
	.quad	.Ltmp550
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp492
	.quad	.Ltmp500
	.quad	.Ltmp549
	.quad	.Ltmp550
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp479
	.quad	.Ltmp532
	.quad	.Ltmp549
	.quad	.Ltmp550
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp473
	.quad	.Ltmp533
	.quad	.Ltmp549
	.quad	.Ltmp550
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp667
	.quad	.Ltmp677
	.quad	.Ltmp679
	.quad	.Ltmp686
	.quad	.Ltmp688
	.quad	.Ltmp724
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp664
	.quad	.Ltmp677
	.quad	.Ltmp679
	.quad	.Ltmp686
	.quad	.Ltmp688
	.quad	.Ltmp724
	.quad	.Ltmp731
	.quad	.Ltmp733
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp1074
	.quad	.Ltmp1084
	.quad	.Ltmp1112
	.quad	.Ltmp1120
	.quad	.Ltmp1133
	.quad	.Ltmp1138
	.quad	.Ltmp1176
	.quad	.Ltmp1177
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp1084
	.quad	.Ltmp1092
	.quad	.Ltmp1105
	.quad	.Ltmp1112
	.quad	.Ltmp1127
	.quad	.Ltmp1133
	.quad	.Ltmp1177
	.quad	.Ltmp1179
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp1097
	.quad	.Ltmp1105
	.quad	.Ltmp1120
	.quad	.Ltmp1127
	.quad	.Ltmp1138
	.quad	.Ltmp1144
	.quad	.Ltmp1179
	.quad	.Ltmp1181
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp1284
	.quad	.Ltmp1296
	.quad	.Ltmp1302
	.quad	.Ltmp1309
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp1365
	.quad	.Ltmp1376
	.quad	.Ltmp1379
	.quad	.Ltmp1381
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Ltmp1382
	.quad	.Ltmp1396
	.quad	.Ltmp1399
	.quad	.Ltmp1407
	.quad	0
	.quad	0
.Ldebug_ranges13:
	.quad	.Ltmp1408
	.quad	.Ltmp1419
	.quad	.Ltmp1422
	.quad	.Ltmp1424
	.quad	0
	.quad	0
.Ldebug_ranges14:
	.quad	.Ltmp1425
	.quad	.Ltmp1436
	.quad	.Ltmp1439
	.quad	.Ltmp1441
	.quad	0
	.quad	0
.Ldebug_ranges15:
	.quad	.Ltmp1442
	.quad	.Ltmp1455
	.quad	.Ltmp1458
	.quad	.Ltmp1460
	.quad	0
	.quad	0
.Ldebug_ranges16:
	.quad	.Ltmp1461
	.quad	.Ltmp1471
	.quad	.Ltmp1484
	.quad	.Ltmp1486
	.quad	0
	.quad	0
.Ldebug_ranges17:
	.quad	.Ltmp1487
	.quad	.Ltmp1497
	.quad	.Ltmp1499
	.quad	.Ltmp1506
	.quad	0
	.quad	0
.Ldebug_ranges18:
	.quad	.Ltmp1507
	.quad	.Ltmp1519
	.quad	.Ltmp1522
	.quad	.Ltmp1524
	.quad	0
	.quad	0
.Ldebug_ranges19:
	.quad	.Ltmp1525
	.quad	.Ltmp1535
	.quad	.Ltmp1538
	.quad	.Ltmp1540
	.quad	0
	.quad	0
.Ldebug_ranges20:
	.quad	.Ltmp1541
	.quad	.Ltmp1552
	.quad	.Ltmp1555
	.quad	.Ltmp1557
	.quad	0
	.quad	0
.Ldebug_ranges21:
	.quad	.Ltmp1558
	.quad	.Ltmp1568
	.quad	.Ltmp1571
	.quad	.Ltmp1573
	.quad	0
	.quad	0
.Ldebug_ranges22:
	.quad	.Ltmp1617
	.quad	.Ltmp1628
	.quad	.Ltmp1631
	.quad	.Ltmp1633
	.quad	0
	.quad	0
.Ldebug_ranges23:
	.quad	.Ltmp1634
	.quad	.Ltmp1645
	.quad	.Ltmp1648
	.quad	.Ltmp1650
	.quad	0
	.quad	0
.Ldebug_ranges24:
	.quad	.Ltmp1651
	.quad	.Ltmp1661
	.quad	.Ltmp1664
	.quad	.Ltmp1666
	.quad	0
	.quad	0
.Ldebug_ranges25:
	.quad	.Ltmp1667
	.quad	.Ltmp1680
	.quad	.Ltmp1683
	.quad	.Ltmp1685
	.quad	0
	.quad	0
.Ldebug_ranges26:
	.quad	.Ltmp1803
	.quad	.Ltmp1810
	.quad	.Ltmp1817
	.quad	.Ltmp1818
	.quad	0
	.quad	0
.Ldebug_ranges27:
	.quad	.Lfunc_begin0
	.quad	.Lfunc_end0
	.quad	.Lfunc_begin1
	.quad	.Lfunc_end1
	.quad	.Lfunc_begin2
	.quad	.Lfunc_end2
	.quad	.Lfunc_begin3
	.quad	.Lfunc_end3
	.quad	.Lfunc_begin4
	.quad	.Lfunc_end4
	.quad	.Lfunc_begin5
	.quad	.Lfunc_end5
	.quad	.Lfunc_begin6
	.quad	.Lfunc_end6
	.quad	.Lfunc_begin7
	.quad	.Lfunc_end7
	.quad	.Lfunc_begin8
	.quad	.Lfunc_end8
	.quad	.Lfunc_begin9
	.quad	.Lfunc_end9
	.quad	.Lfunc_begin10
	.quad	.Lfunc_end10
	.quad	.Lfunc_begin11
	.quad	.Lfunc_end11
	.quad	.Lfunc_begin12
	.quad	.Lfunc_end12
	.quad	.Lfunc_begin13
	.quad	.Lfunc_end13
	.quad	.Lfunc_begin14
	.quad	.Lfunc_end14
	.quad	.Lfunc_begin15
	.quad	.Lfunc_end15
	.quad	.Lfunc_begin16
	.quad	.Lfunc_end16
	.quad	.Lfunc_begin17
	.quad	.Lfunc_end17
	.quad	.Lfunc_begin18
	.quad	.Lfunc_end18
	.quad	.Lfunc_begin19
	.quad	.Lfunc_end19
	.quad	.Lfunc_begin20
	.quad	.Lfunc_end20
	.quad	.Lfunc_begin21
	.quad	.Lfunc_end21
	.quad	.Lfunc_begin22
	.quad	.Lfunc_end22
	.quad	.Lfunc_begin23
	.quad	.Lfunc_end23
	.quad	.Lfunc_begin24
	.quad	.Lfunc_end24
	.quad	.Lfunc_begin25
	.quad	.Lfunc_end25
	.quad	.Lfunc_begin26
	.quad	.Lfunc_end26
	.quad	.Lfunc_begin27
	.quad	.Lfunc_end27
	.quad	.Lfunc_begin28
	.quad	.Lfunc_end28
	.quad	.Lfunc_begin29
	.quad	.Lfunc_end29
	.quad	.Lfunc_begin30
	.quad	.Lfunc_end30
	.quad	.Lfunc_begin31
	.quad	.Lfunc_end31
	.quad	.Lfunc_begin32
	.quad	.Lfunc_end32
	.quad	.Lfunc_begin33
	.quad	.Lfunc_end33
	.quad	.Lfunc_begin34
	.quad	.Lfunc_end34
	.quad	.Lfunc_begin35
	.quad	.Lfunc_end35
	.quad	.Lfunc_begin36
	.quad	.Lfunc_end36
	.quad	.Lfunc_begin37
	.quad	.Lfunc_end37
	.quad	.Lfunc_begin38
	.quad	.Lfunc_end38
	.quad	.Lfunc_begin39
	.quad	.Lfunc_end39
	.quad	.Lfunc_begin40
	.quad	.Lfunc_end40
	.quad	.Lfunc_begin41
	.quad	.Lfunc_end41
	.quad	.Lfunc_begin42
	.quad	.Lfunc_end42
	.quad	.Lfunc_begin43
	.quad	.Lfunc_end43
	.quad	.Lfunc_begin44
	.quad	.Lfunc_end44
	.quad	.Lfunc_begin45
	.quad	.Lfunc_end45
	.quad	.Lfunc_begin46
	.quad	.Lfunc_end46
	.quad	.Lfunc_begin47
	.quad	.Lfunc_end47
	.quad	.Lfunc_begin48
	.quad	.Lfunc_end48
	.quad	.Lfunc_begin49
	.quad	.Lfunc_end49
	.quad	.Lfunc_begin50
	.quad	.Lfunc_end50
	.quad	.Lfunc_begin51
	.quad	.Lfunc_end51
	.quad	.Lfunc_begin52
	.quad	.Lfunc_end52
	.quad	.Lfunc_begin53
	.quad	.Lfunc_end53
	.quad	.Lfunc_begin54
	.quad	.Lfunc_end54
	.quad	.Lfunc_begin55
	.quad	.Lfunc_end55
	.quad	.Lfunc_begin56
	.quad	.Lfunc_end56
	.quad	.Lfunc_begin57
	.quad	.Lfunc_end57
	.quad	.Lfunc_begin58
	.quad	.Lfunc_end58
	.quad	.Lfunc_begin59
	.quad	.Lfunc_end59
	.quad	.Lfunc_begin60
	.quad	.Lfunc_end60
	.quad	.Lfunc_begin61
	.quad	.Lfunc_end61
	.quad	.Lfunc_begin62
	.quad	.Lfunc_end62
	.quad	.Lfunc_begin63
	.quad	.Lfunc_end63
	.quad	.Lfunc_begin64
	.quad	.Lfunc_end64
	.quad	.Lfunc_begin65
	.quad	.Lfunc_end65
	.quad	.Lfunc_begin66
	.quad	.Lfunc_end66
	.quad	.Lfunc_begin67
	.quad	.Lfunc_end67
	.quad	.Lfunc_begin68
	.quad	.Lfunc_end68
	.quad	.Lfunc_begin69
	.quad	.Lfunc_end69
	.quad	.Lfunc_begin70
	.quad	.Lfunc_end70
	.quad	.Lfunc_begin71
	.quad	.Lfunc_end71
	.quad	.Lfunc_begin72
	.quad	.Lfunc_end72
	.quad	.Lfunc_begin73
	.quad	.Lfunc_end73
	.quad	.Lfunc_begin74
	.quad	.Lfunc_end74
	.quad	.Lfunc_begin75
	.quad	.Lfunc_end75
	.quad	.Lfunc_begin76
	.quad	.Lfunc_end76
	.quad	.Lfunc_begin77
	.quad	.Lfunc_end77
	.quad	.Lfunc_begin78
	.quad	.Lfunc_end78
	.quad	.Lfunc_begin79
	.quad	.Lfunc_end79
	.quad	.Lfunc_begin80
	.quad	.Lfunc_end80
	.quad	.Lfunc_begin81
	.quad	.Lfunc_end81
	.quad	.Lfunc_begin82
	.quad	.Lfunc_end82
	.quad	.Lfunc_begin83
	.quad	.Lfunc_end83
	.quad	.Lfunc_begin84
	.quad	.Lfunc_end84
	.quad	.Lfunc_begin85
	.quad	.Lfunc_end85
	.quad	.Lfunc_begin86
	.quad	.Lfunc_end86
	.quad	.Lfunc_begin87
	.quad	.Lfunc_end87
	.quad	.Lfunc_begin88
	.quad	.Lfunc_end88
	.quad	.Lfunc_begin89
	.quad	.Lfunc_end89
	.quad	.Lfunc_begin90
	.quad	.Lfunc_end90
	.quad	.Lfunc_begin91
	.quad	.Lfunc_end91
	.quad	.Lfunc_begin92
	.quad	.Lfunc_end92
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.byte	0
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0
.LpubNames_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	15205
	.long	312
	.asciz	"runtime.writeBarrier"
	.long	4288
	.asciz	"parser.pushFront..stub..1command_line_arguments.NamedBlock"
	.long	10038
	.asciz	"parser.newMixinCall"
	.long	3713
	.asciz	"parser.Pos..stub..1command_line_arguments.Block"
	.long	3863
	.asciz	"parser.command_line_arguments.Text..hash"
	.long	4421
	.asciz	"parser.command_line_arguments.Attribute..eq"
	.long	13841
	.asciz	"parser.scanMixin..1command_line_arguments.scanner"
	.long	9321
	.asciz	"parser.newCondition"
	.long	12485
	.asciz	"parser.Pos..1command_line_arguments.scanner"
	.long	3163
	.asciz	"parser.command_line_arguments.Doctype..eq"
	.long	2744
	.asciz	"command_line_arguments.rgxImport"
	.long	7764
	.asciz	"parser.SetVirtualFilesystem..1command_line_arguments.Parser"
	.long	12545
	.asciz	"parser.consume..1command_line_arguments.scanner"
	.long	11720
	.asciz	"parser.Next..1command_line_arguments.scanner"
	.long	2824
	.asciz	"command_line_arguments.rgxMixinCall"
	.long	14011
	.asciz	"parser.scanTag..1command_line_arguments.scanner"
	.long	4598
	.asciz	"parser.IsSelfClosing..1command_line_arguments.Tag"
	.long	13650
	.asciz	"parser.scanIndent..1command_line_arguments.scanner"
	.long	8271
	.asciz	"parser.parseBlock..1command_line_arguments.Parser"
	.long	7854
	.asciz	"parser.expect..1command_line_arguments.Parser"
	.long	5392
	.asciz	"parser.findTopmostParentWithNamedBlock"
	.long	9425
	.asciz	"parser.parseIf..1command_line_arguments.Parser"
	.long	10589
	.asciz	"parser.parseNamedBlock..1command_line_arguments.Parser"
	.long	3551
	.asciz	"parser.CanInline..1command_line_arguments.Block"
	.long	4053
	.asciz	"parser.newBlock"
	.long	13110
	.asciz	"parser.scanCondition..1command_line_arguments.scanner"
	.long	2600
	.asciz	"command_line_arguments.rgxDoctype"
	.long	8109
	.asciz	"parser.parseAssignment..1command_line_arguments.Parser"
	.long	2760
	.asciz	"command_line_arguments.rgxExtends"
	.long	3235
	.asciz	"parser.Pos..stub..1command_line_arguments.Doctype"
	.long	4538
	.asciz	"parser.IsRawText..1command_line_arguments.Tag"
	.long	13395
	.asciz	"parser.scanExtends..1command_line_arguments.scanner"
	.long	2973
	.asciz	"parser.command_line_arguments.SourcePosition..eq"
	.long	11504
	.asciz	"parser.parseText..1command_line_arguments.Parser"
	.long	2808
	.asciz	"command_line_arguments.rgxMixin"
	.long	4008
	.asciz	"parser.Pos..stub..1command_line_arguments.Text"
	.long	2696
	.asciz	"command_line_arguments.rgxId"
	.long	14639
	.asciz	"parser.FileParser"
	.long	2616
	.asciz	"command_line_arguments.rgxIf"
	.long	12855
	.asciz	"parser.scanBlock..1command_line_arguments.scanner"
	.long	4123
	.asciz	"parser.CanInline..stub..1command_line_arguments.NamedBlock"
	.long	14887
	.asciz	"parser.command_line_arguments..thunk0"
	.long	14374
	.asciz	"parser.newParser"
	.long	2664
	.asciz	"command_line_arguments.rgxAssignment"
	.long	12770
	.asciz	"parser.scanAttribute..1command_line_arguments.scanner"
	.long	11114
	.asciz	"parser.parseTag..1command_line_arguments.Parser"
	.long	12685
	.asciz	"parser.scanAssignment..1command_line_arguments.scanner"
	.long	13565
	.asciz	"parser.scanImport..1command_line_arguments.scanner"
	.long	8698
	.asciz	"parser.newDoctype"
	.long	2840
	.asciz	"command_line_arguments.rgxText"
	.long	2856
	.asciz	"io.EOF"
	.long	3280
	.asciz	"parser.String..1command_line_arguments.Doctype"
	.long	13926
	.asciz	"parser.scanMixinCall..1command_line_arguments.scanner"
	.long	14096
	.asciz	"parser.scanText..1command_line_arguments.scanner"
	.long	11402
	.asciz	"parser.newText"
	.long	2871
	.asciz	"parser.command_line_arguments..import"
	.long	4183
	.asciz	"parser.Pos..stub..1command_line_arguments.NamedBlock"
	.long	5185
	.asciz	"parser.command_line_arguments.Assignment..eq"
	.long	4493
	.asciz	"parser.Pos..stub..1command_line_arguments.Attribute"
	.long	2712
	.asciz	"command_line_arguments.rgxClassName"
	.long	13310
	.asciz	"parser.scanEach..1command_line_arguments.scanner"
	.long	5257
	.asciz	"parser.Pos..stub..1command_line_arguments.Assignment"
	.long	3361
	.asciz	"parser.command_line_arguments.Comment..hash"
	.long	12940
	.asciz	"parser.scanClassName..1command_line_arguments.scanner"
	.long	4687
	.asciz	"parser.Pos..stub..1command_line_arguments.Tag"
	.long	10236
	.asciz	"parser.parseMixinCall..1command_line_arguments.Parser"
	.long	15075
	.asciz	"parser.func1"
	.long	5112
	.asciz	"parser.command_line_arguments.Assignment..hash"
	.long	14254
	.asciz	"parser.command_line_arguments.scanner..eq"
	.long	5302
	.asciz	"parser.Pos..stub..1command_line_arguments.Mixin"
	.long	4995
	.asciz	"parser.command_line_arguments.Each..eq"
	.long	2900
	.asciz	"parser.command_line_arguments.SourcePosition..hash"
	.long	4732
	.asciz	"parser.command_line_arguments.Condition..hash"
	.long	7719
	.asciz	"parser.SetFilename..1command_line_arguments.Parser"
	.long	2680
	.asciz	"command_line_arguments.rgxComment"
	.long	14743
	.asciz	"parser.VirtualFileParser"
	.long	3506
	.asciz	"parser.Pos..stub..1command_line_arguments.Comment"
	.long	7809
	.asciz	"parser.advance..1command_line_arguments.Parser"
	.long	8776
	.asciz	"parser.parseDoctype..1command_line_arguments.Parser"
	.long	13025
	.asciz	"parser.scanComment..1command_line_arguments.scanner"
	.long	9217
	.asciz	"parser.parseExtends..1command_line_arguments.Parser"
	.long	10498
	.asciz	"parser.newNamedBlock"
	.long	4922
	.asciz	"parser.command_line_arguments.Each..hash"
	.long	10751
	.asciz	"parser.parseRelativeFile..1command_line_arguments.Parser"
	.long	4228
	.asciz	"parser.push..stub..1command_line_arguments.NamedBlock"
	.long	8018
	.asciz	"parser.newAssignment"
	.long	9835
	.asciz	"parser.parseMixin..1command_line_arguments.Parser"
	.long	10870
	.asciz	"parser.newTag"
	.long	9696
	.asciz	"parser.newMixin"
	.long	2728
	.asciz	"command_line_arguments.rgxAttribute"
	.long	14326
	.asciz	"parser.newScanner"
	.long	8432
	.asciz	"parser.newComment"
	.long	7464
	.asciz	"parser.Parse..1command_line_arguments.Parser"
	.long	2632
	.asciz	"command_line_arguments.rgxElse"
	.long	2776
	.asciz	"command_line_arguments.rgxBlock"
	.long	9055
	.asciz	"parser.parseEach..1command_line_arguments.Parser"
	.long	13480
	.asciz	"parser.scanId..1command_line_arguments.scanner"
	.long	5067
	.asciz	"parser.Pos..stub..1command_line_arguments.Each"
	.long	14181
	.asciz	"parser.command_line_arguments.scanner..hash"
	.long	14940
	.asciz	"parser.r"
	.long	4348
	.asciz	"parser.command_line_arguments.Attribute..hash"
	.long	7958
	.asciz	"parser.parse..1command_line_arguments.Parser"
	.long	13225
	.asciz	"parser.scanDoctype..1command_line_arguments.scanner"
	.long	3090
	.asciz	"parser.command_line_arguments.Doctype..hash"
	.long	3758
	.asciz	"parser.push..1command_line_arguments.Block"
	.long	5347
	.asciz	"parser.Pos..stub..1command_line_arguments.MixinCall"
	.long	14520
	.asciz	"parser.StringParser"
	.long	14580
	.asciz	"parser.ByteParser"
	.long	4877
	.asciz	"parser.Pos..stub..1command_line_arguments.Condition"
	.long	3803
	.asciz	"parser.pushFront..1command_line_arguments.Block"
	.long	12331
	.asciz	"parser.NextRaw..1command_line_arguments.scanner"
	.long	12608
	.asciz	"parser.ensureBuffer..1command_line_arguments.scanner"
	.long	3045
	.asciz	"parser.Pos..1command_line_arguments.SourcePosition"
	.long	3434
	.asciz	"parser.command_line_arguments.Comment..eq"
	.long	2648
	.asciz	"command_line_arguments.rgxEach"
	.long	8536
	.asciz	"parser.parseComment..1command_line_arguments.Parser"
	.long	11675
	.asciz	"parser.pos..1command_line_arguments.Parser"
	.long	42
	.asciz	"command_line_arguments.selfClosingTags"
	.long	132
	.asciz	"command_line_arguments.doctypes"
	.long	9587
	.asciz	"parser.parseImport..1command_line_arguments.Parser"
	.long	2792
	.asciz	"command_line_arguments.rgxTag"
	.long	8938
	.asciz	"parser.newEach"
	.long	3936
	.asciz	"parser.command_line_arguments.Text..eq"
	.long	327
	.asciz	"command_line_arguments.rgxIndent"
	.long	4805
	.asciz	"parser.command_line_arguments.Condition..eq"
	.long	0
.LpubNames_end0:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0
.LpubTypes_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	15205
	.long	9773
	.asciz	"Mixin"
	.long	7373
	.asciz	"Node"
	.long	347
	.asciz	"Regexp"
	.long	1037
	.asciz	"bool"
	.long	5437
	.asciz	"Parser"
	.long	2270
	.asciz	"uncommonType"
	.long	1103
	.asciz	"Mutex"
	.long	5802
	.asciz	"Reader"
	.long	7414
	.asciz	"struct{*_type,*func(*void)SourcePosition}"
	.long	902
	.asciz	".regexp.onePassInst"
	.long	1774
	.asciz	"struct{**.regexp.thread,int,int}"
	.long	737
	.asciz	"struct{*int32,int,int}"
	.long	6076
	.asciz	"FileSystem"
	.long	279
	.asciz	"uint16"
	.long	1381
	.asciz	".regexp.bitState"
	.long	7259
	.asciz	"SourcePosition"
	.long	7015
	.asciz	"FileMode"
	.long	990
	.asciz	"struct{*uint8,int,int}"
	.long	1645
	.asciz	"struct{*.regexp.entry,int,int}"
	.long	6172
	.asciz	"struct{File,error}"
	.long	6684
	.asciz	"int64"
	.long	2319
	.asciz	"struct{*method,int,int}"
	.long	70
	.asciz	"string"
	.long	801
	.asciz	".regexp.onePassProg"
	.long	10912
	.asciz	"Tag"
	.long	5543
	.asciz	".command-line-arguments.scanner"
	.long	6404
	.asciz	"struct{*FileInfo,int,int}"
	.long	6040
	.asciz	"PrivateKey"
	.long	7080
	.asciz	"struct{int64,error}"
	.long	10987
	.asciz	"struct{*Attribute,int,int}"
	.long	118
	.asciz	"int"
	.long	1044
	.asciz	"EmptyOp"
	.long	2550
	.asciz	"struct{*_type,*func(*void)string}"
	.long	1962
	.asciz	"struct{*_type,*func(*void)struct{int32,int,error}}"
	.long	2001
	.asciz	"_type"
	.long	1560
	.asciz	".regexp.job"
	.long	6885
	.asciz	"struct{*.time.zoneTrans,int,int}"
	.long	286
	.asciz	"uint32"
	.long	11455
	.asciz	"Text"
	.long	1872
	.asciz	".regexp.inputReader"
	.long	5973
	.asciz	"Element"
	.long	1849
	.asciz	".regexp.inputString"
	.long	11039
	.asciz	"Attribute"
	.long	305
	.asciz	"uintptr"
	.long	1508
	.asciz	"struct{*.regexp.job,int,int}"
	.long	8740
	.asciz	"Doctype"
	.long	1826
	.asciz	".regexp.inputBytes"
	.long	1738
	.asciz	".regexp.thread"
	.long	1456
	.asciz	"struct{*int,int,int}"
	.long	2371
	.asciz	"method"
	.long	6206
	.asciz	"File"
	.long	6836
	.asciz	".time.zone"
	.long	15101
	.asciz	"struct{*Parser,error}"
	.long	7223
	.asciz	"Block"
	.long	6117
	.asciz	"struct{*_type,*func(*void,string)struct{File,error}}"
	.long	15145
	.asciz	"struct{*__go_descriptor}"
	.long	938
	.asciz	"struct{*uint32,int,int}"
	.long	2462
	.asciz	"struct{int32,int,error}"
	.long	5898
	.asciz	"struct{int,error}"
	.long	6247
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,int)struct{struct{*FileInfo,int,int},error},*func(*void,int64,int)struct{int64,error},*func(*void)struct{FileInfo,error}}"
	.long	1051
	.asciz	"struct{*string,int,int}"
	.long	6456
	.asciz	"FileInfo"
	.long	6937
	.asciz	".time.zoneTrans"
	.long	15171
	.asciz	"__go_descriptor"
	.long	850
	.asciz	"struct{*.regexp.onePassInst,int,int}"
	.long	616
	.asciz	"struct{*Inst,int,int}"
	.long	7169
	.asciz	".command-line-arguments.token"
	.long	152
	.asciz	"runtime.hmap"
	.long	1697
	.asciz	".regexp.entry"
	.long	1139
	.asciz	"struct{**.regexp.machine,int,int}"
	.long	5937
	.asciz	"List"
	.long	2509
	.asciz	"error"
	.long	6677
	.asciz	"uint64"
	.long	789
	.asciz	"int32"
	.long	10540
	.asciz	"NamedBlock"
	.long	298
	.asciz	"void"
	.long	6497
	.asciz	"struct{*_type,*func(*void)bool,*func(*void)Time,*func(*void)FileMode,*func(*void)string,*func(*void)int64,*func(*void)PrivateKey}"
	.long	6370
	.asciz	"struct{struct{*FileInfo,int,int},error}"
	.long	8474
	.asciz	"Comment"
	.long	111
	.asciz	"uint8"
	.long	8060
	.asciz	"Assignment"
	.long	7321
	.asciz	"struct{*Node,int,int}"
	.long	668
	.asciz	"Inst"
	.long	7130
	.asciz	"struct{FileInfo,error}"
	.long	10183
	.asciz	"MixinCall"
	.long	9363
	.asciz	"Condition"
	.long	1609
	.asciz	".regexp.queue"
	.long	1921
	.asciz	"RuneReader"
	.long	5843
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	6628
	.asciz	"Time"
	.long	8980
	.asciz	"Each"
	.long	396
	.asciz	".regexp.regexpRO"
	.long	567
	.asciz	"Prog"
	.long	6696
	.asciz	"Location"
	.long	6784
	.asciz	"struct{*.time.zone,int,int}"
	.long	1196
	.asciz	".regexp.machine"
	.long	730
	.asciz	"InstOp"
	.long	0
.LpubTypes_end0:

	.section	".note.GNU-split-stack","",@progbits
	.section	".note.GNU-no-split-stack","",@progbits
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
