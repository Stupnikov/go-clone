; ModuleID = 'gomodule'
source_filename = "gomodule"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.section \22.go_export\22,\22e\22,@progbits"
module asm "\09.ascii \22v2;\5Cn\22"
module asm "\09.ascii \22package \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22pkgpath \22"
module asm "\09.ascii \22command-line-arguments\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22zip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22archive/zip\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22archive/zip\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22build\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go/build\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22go/build\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22exec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os/exec\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22os/exec\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22init\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22command_line_arguments..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22zip\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22archive_zip..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22flate\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22compress_flate..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22binary\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_binary..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ast\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_ast..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22build\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_build..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22doc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_doc..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22parser\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_parser..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22scanner\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_scanner..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_token..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crc32\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22hash_crc32..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_poll..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22testlog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_testlog..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io_ioutil..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22exec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os_exec..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path_filepath..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syntax\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp_syntax..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime_internal_sys..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22template\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22text_template..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22parse\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22text_template_parse..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode..import\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22init_graph\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22AndroidEnv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2 \22"
module asm "\09.ascii \22\5C\22Flags\5C\22 \22"
module asm "\09.ascii \22<type 3 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Logger\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 4 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 5 \22"
module asm "\09.ascii \22\5C\22log.Logger\5C\22 \22"
module asm "\09.ascii \22<type 6 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.log.mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7 \22"
module asm "\09.ascii \22\5C\22sync.Mutex\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 8 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.sema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 9 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 9>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.prefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.flag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.out\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10 \22"
module asm "\09.ascii \22\5C\22io.Writer\5C\22 \22"
module asm "\09.ascii \22<type 11 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 12 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 13 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 5>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetPrefix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22prefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22flag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panicf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 15 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Printf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 16 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Prefix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.log.formatHeader\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 18 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19 \22"
module asm "\09.ascii \22\5C\22time.Time\5C\22 \22"
module asm "\09.ascii \22<type 20 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.wall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.ext\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 22 \22"
module asm "\09.ascii \22\5C\22time.Location\5C\22 \22"
module asm "\09.ascii \22<type 23 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.zone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 24 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 25 \22"
module asm "\09.ascii \22\5C\22.time.zone\5C\22 \22"
module asm "\09.ascii \22<type 26 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.tx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 27 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 28 \22"
module asm "\09.ascii \22\5C\22.time.zoneTrans\5C\22 \22"
module asm "\09.ascii \22<type 29 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.when\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isstd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isutc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheStart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheEnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheZone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 30 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 25>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.firstZoneUsed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22unix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22start\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22end\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupFirstZone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 31>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22YearDay\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnixNano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanosecond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobDecode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 34 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.locabs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.stripMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.abs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Zone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Weekday\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36 \22"
module asm "\09.ascii \22\5C\22time.Weekday\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Location\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 37 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.sec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38 \22"
module asm "\09.ascii \22\5C\22time.Duration\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanoseconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minutes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hours\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Day\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Local\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22After\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.addSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setLoc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobEncode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Before\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.unixSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41 \22"
module asm "\09.ascii \22\5C\22time.Month\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 42 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsZero\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Format\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Year\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UTC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22full\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22yday\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ISOWeek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22week\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AppendFormat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 45 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.nsec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddDate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22years\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22months\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22days\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Month\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Second\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.mono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Clock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hour\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22min\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hour\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetOutput\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 46 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Output\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22calldepth\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Print\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 47 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatalln\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 48 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Println\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 49 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panicln\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 50 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 51 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatalf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 52 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Threaded\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.disablePrint\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildN\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildX\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildV\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildWork\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildGcflags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildLdflags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildO\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildBinary\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildTargets\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ShouldPrint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ShouldRun\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22goarch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22AndroidPlatformPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22AndroidSDKPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 56 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ArchClang\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22goarch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22Bind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 57 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22var \22"
module asm "\09.ascii \22BindFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22Build\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 59 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22BuildAAR\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22androidDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22pkgs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 63 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 64 \22"
module asm "\09.ascii \22\5C\22go/build.Package\5C\22 \22"
module asm "\09.ascii \22<type 65 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ImportComment\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Doc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ImportPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Root\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SrcRoot\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgRoot\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgTargetRoot\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BinDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Goroot\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgObj\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AllTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 66 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ConflictDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BinaryOnly\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GoFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 67 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IgnoredGoFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22InvalidGoFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 70 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CXXFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 72 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22HFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 74 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 75 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SwigFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 77 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SwigCXXFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 78 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SysoFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoCFLAGS\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 80 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoCPPFLAGS\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoCXXFLAGS\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 82 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoFFLAGS\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoLDFLAGS\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 84 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoPkgConfig\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 85 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Imports\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 86 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ImportPos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 87 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 89 \22"
module asm "\09.ascii \22\5C\22go/token.Position\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22token\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 90 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Column\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 89>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 91 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 89>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22TestGoFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 92 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22TestImports\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 93 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22TestImportPos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 95 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 89>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22XTestGoFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 96 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22XTestImports\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22XTestImportPos\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 99 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 89>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 100 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 64>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsCommand\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22androidArchs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 101 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22tmpdir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22aarPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22BuildJar\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 102 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22srcDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22tmpdir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22CopyFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 103 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dst\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22src\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22Darwin386Env\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 104 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22DarwinAmd64Env\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22DarwinArm64Env\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 108 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22DarwinArmEnv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 110 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22EnvClang\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 112 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sdkName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22_clang\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cflags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22FindEnv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22env\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22GetAndroidABI\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22arch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22GetEnv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 114 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22Getwd\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 115 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22GoBuild\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22srcs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 116 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22env\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 117 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22buildTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 118 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22matchaPkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22tmpdir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22GoEnv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22GoVersion\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 119 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22Import\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 121 \22"
module asm "\09.ascii \22\5C\22go/build.Context\5C\22 \22"
module asm "\09.ascii \22<type 122 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22GOARCH\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GOOS\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GOROOT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GOPATH\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CgoEnabled\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22UseAllFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Compiler\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BuildTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ReleaseTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 124 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22InstallSuffix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22JoinPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 125 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SplitPathList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 126 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22list\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsAbsPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 129 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22HasSubdir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 130 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22root\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rel\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ReadDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 131 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 132 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 133 \22"
module asm "\09.ascii \22\5C\22os.FileInfo\5C\22 \22"
module asm "\09.ascii \22<type 134 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135 \22"
module asm "\09.ascii \22\5C\22os.FileMode\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsRegular\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Perm\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ModTime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Sys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 136 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22OpenFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 137 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138 \22"
module asm "\09.ascii \22\5C\22io.ReadCloser\5C\22 \22"
module asm "\09.ascii \22<type 139 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 140 \22"
module asm "\09.ascii \22\5C\22io.Reader\5C\22 \22"
module asm "\09.ascii \22<type 141 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 142 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 143 \22"
module asm "\09.ascii \22\5C\22io.Closer\5C\22 \22"
module asm "\09.ascii \22<type 144 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 121>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.match\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22allTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 146 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.saveCgo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22di\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 148 \22"
module asm "\09.ascii \22\5C\22go/ast.CommentGroup\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22ast\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 149 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22List\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 150 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 152 \22"
module asm "\09.ascii \22\5C\22go/ast.Comment\5C\22 \22"
module asm "\09.ascii \22<type 153 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Slash\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 154 \22"
module asm "\09.ascii \22\5C\22go/token.Pos\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Text\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 155 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 152>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pos\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 155>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22End\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 148>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pos\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Text\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22End\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 154>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.shouldBuild\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22content\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22allTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22binaryOnly\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 159 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x6c0a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.matchFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22allTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22binaryOnly\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 159>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x18a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MatchFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ImportDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 162 \22"
module asm "\09.ascii \22\5C\22go/build.ImportMode\5C\22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.isDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Import\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22srcDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 162>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.splitPathList\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 163 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.isAbsPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.hasSubdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22root\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22rel\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1b2>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.readDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 164 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 133>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.joinPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1b2>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.openFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.makePathsAbsolute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22srcDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.isFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.goodOSArchFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22allTags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 166 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SrcDirs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 167 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ctxt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.go/build.gopath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22srcDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 162>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22pkgs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ImportAll\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22paths\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 170 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22srcDir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 162>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22Init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 172 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22InstallPkg\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22matchaPkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22temp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22pkg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22env\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22IsFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 175 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22LookPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22MatchaPkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22MergeEnviron\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22kv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 177 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cur\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 177>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 178 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22Mkdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 179 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NDKPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 180 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewTmpDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 181 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22OutputCmd\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 182 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22fallback\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 183 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22tmpdir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 184 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 185 \22"
module asm "\09.ascii \22\5C\22os/exec.Cmd\5C\22 \22"
module asm "\09.ascii \22<type 186 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 187 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Env\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 188 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Stdin\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Stdout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Stderr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ExtraFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 190 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 191 \22"
module asm "\09.ascii \22\5C\22os.File\5C\22 \22"
module asm "\09.ascii \22<type 192 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 193 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 194 \22"
module asm "\09.ascii \22\5C\22.os.file\5C\22 \22"
module asm "\09.ascii \22<type 195 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.os.pfd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 196 \22"
module asm "\09.ascii \22\5C\22internal/poll.FD\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 197 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.internal/poll.fdmu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198 \22"
module asm "\09.ascii \22\5C\22.internal/poll.fdMutex\5C\22 \22"
module asm "\09.ascii \22<type 199 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.internal/poll.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.rsema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.wsema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 198>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.rwunlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22read\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.increfAndClose\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.rwlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22read\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.decref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.incref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Sysfd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201 \22"
module asm "\09.ascii \22\5C\22.internal/poll.pollDesc\5C\22 \22"
module asm "\09.ascii \22<type 202 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.internal/poll.runtimeCtx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.prepareWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.evict\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.wait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 204 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 196>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.pollable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.prepare\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.waitRead\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.prepareRead\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.waitWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.waitCanceled\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.iovecs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 205 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 206 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 207 \22"
module asm "\09.ascii \22\5C\22syscall.Iovec\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 208 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 209 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210 \22"
module asm "\09.ascii \22\5C\22syscall.Iovec_len_t\5C\22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22iov\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 207>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.csema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsStream\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ZeroReadIsEOF\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.isBlocking\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 196>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fchmod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.readLock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.eofError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22arg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RawWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 213 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pwrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 216 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217 \22"
module asm "\09.ascii \22\5C\22syscall.Sockaddr\5C\22 \22"
module asm "\09.ascii \22<type 218 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22.syscall.sockaddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ptr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 220 \22"
module asm "\09.ascii \22\5C\22syscall.RawSockaddrAny\5C\22 \22"
module asm "\09.ascii \22<type 221 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 222 \22"
module asm "\09.ascii \22\5C\22syscall.RawSockaddr\5C\22 \22"
module asm "\09.ascii \22<type 223 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Family\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Pad\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2296\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 226 \22"
module asm "\09.ascii \22\5C\22syscall.Socklen_t\5C\22 \22"
module asm "\09.ascii \22<type 227 \22"
module asm "\09.ascii \22\5C\22.syscall._socklen_t\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22whence\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteMsg\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 228 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22oob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 229 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22arg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptIPMreq\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mreq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 230 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 231 \22"
module asm "\09.ascii \22\5C\22syscall.IPMreq\5C\22 \22"
module asm "\09.ascii \22<type 232 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Multiaddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 233 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 234 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptIPMreqn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mreq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 235 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 236 \22"
module asm "\09.ascii \22\5C\22syscall.IPMreqn\5C\22 \22"
module asm "\09.ascii \22<type 237 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Multiaddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 238 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Address\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ifindex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RawControl\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 240 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptInet4Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22arg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptIPv6Mreq\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mreq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 242 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 243 \22"
module asm "\09.ascii \22\5C\22syscall.IPv6Mreq\5C\22 \22"
module asm "\09.ascii \22<type 244 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Multiaddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 245 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadMsg\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 246 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22oob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Writev\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 248 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 249 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 250 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RawRead\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 251 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteOnce\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 252 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fstat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 253 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 254 \22"
module asm "\09.ascii \22\5C\22syscall.Stat_t\5C\22 \22"
module asm "\09.ascii \22<type 255 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Dev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ino\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nlink\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.syscall.__pad0\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Rdev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Blksize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Blocks\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Atim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 256 \22"
module asm "\09.ascii \22\5C\22syscall.Timespec\5C\22 \22"
module asm "\09.ascii \22<type 257 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 258 \22"
module asm "\09.ascii \22\5C\22syscall.Timespec_sec_t\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259 \22"
module asm "\09.ascii \22\5C\22syscall.Timespec_nsec_t\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 260 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 256>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 260>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mtim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 256>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ctim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 256>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.syscall.__glibc_reserved\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 261 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Accept\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fsync\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pread\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 262 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22pollable\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadDirent\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBlocking\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Shutdown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22how\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WaitWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadFrom\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 264 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.writeUnlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 265 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fchown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.destroy\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Ftruncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.incref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.writeLock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.decref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.readUnlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fchdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptLinger\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 266 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 267 \22"
module asm "\09.ascii \22\5C\22syscall.Linger\5C\22 \22"
module asm "\09.ascii \22<type 268 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Onoff\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Linger\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.dirinfo\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 269 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 270 \22"
module asm "\09.ascii \22\5C\22.os.dirInfo\5C\22 \22"
module asm "\09.ascii \22<type 271 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.os.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 272 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 274 \22"
module asm "\09.ascii \22\5C\22syscall.DIR\5C\22 \22"
module asm "\09.ascii \22<type 275 \22"
module asm "\09.ascii \22\5C\22.syscall._DIR\5C\22 \22"
module asm "\09.ascii \22<type 276 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.nonblock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.stdoutOrErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 277 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 194>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 191>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.wrapErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.checkValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.chmod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.readdirnames\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22names\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 279 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.setDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 280 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Chmod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Chdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.setReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22whence\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteAt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 281 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.setWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.seek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22whence\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Stat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 133>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 282 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 283 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Readdirnames\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22names\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.readdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22fi\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 133>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Chown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fd\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.pread\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 286 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadAt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Readdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 288 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 133>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.pwrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 289 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sync\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SysProcAttr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 291 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 292 \22"
module asm "\09.ascii \22\5C\22syscall.SysProcAttr\5C\22 \22"
module asm "\09.ascii \22<type 293 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Chroot\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Credential\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 294 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 295 \22"
module asm "\09.ascii \22\5C\22syscall.Credential\5C\22 \22"
module asm "\09.ascii \22<type 296 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Groups\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 297 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NoSetGroups\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ptrace\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Setsid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Setpgid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Setctty\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Noctty\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ctty\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Foreground\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Pgid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Pdeathsig\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298 \22"
module asm "\09.ascii \22\5C\22syscall.Signal\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Signal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Cloneflags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Unshareflags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22UidMappings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 299 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 300 \22"
module asm "\09.ascii \22\5C\22syscall.SysProcIDMap\5C\22 \22"
module asm "\09.ascii \22<type 301 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22ContainerID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22HostID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GidMappings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 302 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 300>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GidMappingsEnableSetgroups\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AmbientCaps\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 303 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Process\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 304 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 305 \22"
module asm "\09.ascii \22\5C\22os.Process\5C\22 \22"
module asm "\09.ascii \22<type 306 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Pid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.handle\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.isdone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.sigMu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307 \22"
module asm "\09.ascii \22\5C\22sync.RWMutex\5C\22 \22"
module asm "\09.ascii \22<type 308 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.writerSem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerSem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerCount\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerWait\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RLocker\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310 \22"
module asm "\09.ascii \22\5C\22sync.Locker\5C\22 \22"
module asm "\09.ascii \22<type 311 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RLock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RUnlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.blockUntilWaitable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Release\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.done\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.setDone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kill\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.kill\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Wait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 313 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 314 \22"
module asm "\09.ascii \22\5C\22os.ProcessState\5C\22 \22"
module asm "\09.ascii \22<type 315 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.os.pid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.status\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316 \22"
module asm "\09.ascii \22\5C\22syscall.WaitStatus\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StopSignal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Exited\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CoreDump\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ExitStatus\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Signal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 298>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Continued\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Stopped\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TrapCause\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Signaled\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.rusage\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 317 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 318 \22"
module asm "\09.ascii \22\5C\22syscall.Rusage\5C\22 \22"
module asm "\09.ascii \22<type 319 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Utime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 320 \22"
module asm "\09.ascii \22\5C\22syscall.Timeval\5C\22 \22"
module asm "\09.ascii \22<type 321 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322 \22"
module asm "\09.ascii \22\5C\22syscall.Timeval_sec_t\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Usec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323 \22"
module asm "\09.ascii \22\5C\22syscall.Timeval_usec_t\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 324 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 320>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 324>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Stime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 320>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Maxrss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ixrss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Idrss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Isrss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Minflt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Majflt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nswap\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Inblock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Oublock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Msgsnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Msgrcv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nsignals\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nvcsw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nivcsw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.userTime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.sysUsage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 326 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.systemTime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 327 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Exited\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SystemTime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Success\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.success\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UserTime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SysUsage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 328 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.exited\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.sys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 329 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Signal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sig\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 330 \22"
module asm "\09.ascii \22\5C\22os.Signal\5C\22 \22"
module asm "\09.ascii \22<type 331 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Signal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.wait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ps\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 313>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.signal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sig\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 330>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.release\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ProcessState\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 313>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 332 \22"
module asm "\09.ascii \22\5C\22context.Context\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 333 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Deadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22deadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Done\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<- \22"
module asm "\09.ascii \22<type 335 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Err\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 336 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.lookPathErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.finished\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.childFiles\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 190>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.closeAfterStart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 339 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.closeAfterWait\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 340 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.goroutine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 341 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 342 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.errch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os/exec.waitDone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 345 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 185>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StderrPipe\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StdoutPipe\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StdinPipe\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 347 \22"
module asm "\09.ascii \22\5C\22io.WriteCloser\5C\22 \22"
module asm "\09.ascii \22<type 348 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Output\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 349 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os/exec.stdout\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 190>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CombinedOutput\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os/exec.stdin\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 190>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Start\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os/exec.envv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 351 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x3a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os/exec.stderr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 190>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os/exec.writerDescriptor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 190>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Wait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os/exec.argv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 352 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os/exec.closeDescriptors\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22closers\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Run\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 354 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22PackageDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 355 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22pkgpath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ParseTargets\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 356 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 357 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22matchaPkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22env\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 358 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ReadDirNames\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 359 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 360 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ReadFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 361 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 362 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22RemoveAll\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22RunCmd\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 364 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22tmpdir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 184>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ValidateAndroidInstall\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 365 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22WriteFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 366 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22filename\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22checksum 5A01FF843040A0865955A7C292E5F9EC22D129DE;\5Cn\22"
module asm "\09.text"

%_type.0 = type { i64, i64, i32, i8, i8, i8, %__go_descriptor.2*, %__go_descriptor.3*, i8*, { i8*, i64 }*, %uncommonType.0*, %_type.0* }
%__go_descriptor.2 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.3 = type { i8 (i8*, i8*, i8*)* }
%uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.22 }
%IPST.22 = type { %method.0*, i64, i64 }
%method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, %_type.0*, i8* }
%functionDescriptor.0 = type { i64 }
%PtrType.0 = type { %_type.0, %_type.0* }
%IPST.2 = type { %IPST.16*, i64, i64 }
%IPST.16 = type { %_type.0*, i8* }
%IPST.3 = type { { i8*, i64 }*, i64, i64 }
%ArrayType.0 = type { %_type.0, %_type.0*, %_type.0*, i64 }
%SliceType.0 = type { %_type.0, %_type.0* }
%StructType.0 = type { %_type.0, %IPST.24 }
%IPST.24 = type { %structField.0*, i64, i64 }
%structField.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, { i8*, i64 }*, i64 }
%FuncType.0 = type { %_type.0, i8, %IPST.23, %IPST.23 }
%IPST.23 = type { %_type.0**, i64, i64 }
%.command-line-arguments.ndkToolchain.0 = type { { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 } }
%MapType.0 = type { %_type.0, %_type.0*, %_type.0*, %_type.0*, %_type.0*, i8, i8, i8, i8, i16, i8, i8 }
%Writer.0 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%error.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%File.1 = type { %.os.file.0* }
%.os.file.0 = type { %FD.0, { i8*, i64 }, %.os.dirInfo.0*, i8, i8 }
%FD.0 = type { %".internal/poll.fdMutex.0", i64, %".internal/poll.pollDesc.0", { %Iovec.0*, i64, i64 }*, i32, i8, i8, i8, i8 }
%".internal/poll.fdMutex.0" = type { i64, i32, i32 }
%".internal/poll.pollDesc.0" = type { i64 }
%Iovec.0 = type { i8*, i64 }
%.os.dirInfo.0 = type { { i8*, i64, i64 }, %DIR.0* }
%DIR.0 = type {}
%InterfaceType.0 = type { %_type.0, %IPST.25 }
%IPST.25 = type { %imethod.0*, i64, i64 }
%imethod.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0* }
%Context.1 = type { { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, i8, i8, { i8*, i64 }, %IPST.3, %IPST.3, { i8*, i64 }, %__go_descriptor.13*, %__go_descriptor.14*, %__go_descriptor.15*, %__go_descriptor.15*, %__go_descriptor.16*, %__go_descriptor.17*, %__go_descriptor.23* }
%__go_descriptor.13 = type { { i64, i64 } (i8*, %IPST.3*)* }
%__go_descriptor.14 = type { void (%IPST.3*, i8*, i64, i64)* }
%__go_descriptor.15 = type { i8 (i8*, i64, i64)* }
%__go_descriptor.16 = type { void ({ { i8*, i64 }, i8 }*, i8*, i64, i64, i64, i64)* }
%__go_descriptor.17 = type { void ({ { %FileInfo.0*, i64, i64 }, %error.0 }*, i8*, i64, i64)* }
%FileInfo.0 = type { { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, i8* }
%Time.0 = type { i64, i64, %Location.0* }
%Location.0 = type { { i8*, i64 }, %IPST.20, %IPST.21, i64, i64, %.time.zone.0* }
%IPST.20 = type { %.time.zone.0*, i64, i64 }
%IPST.21 = type { %.time.zoneTrans.0*, i64, i64 }
%.time.zoneTrans.0 = type { i64, i8, i8, i8 }
%.time.zone.0 = type { { i8*, i64 }, i64, i8 }
%__go_descriptor.23 = type { void ({ %ReadCloser.1, %error.0 }*, i8*, i64, i64)* }
%ReadCloser.1 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Reader.3 = type { { i8*, i64 }, i64, i64 }
%ChanType.0 = type { %_type.0, %_type.0*, i64 }
%.command-line-arguments.archPath.0 = type { { i8*, i64 }, { i8*, i64 }, %error.0 }
%Buffer.0 = type { { i8*, i64, i64 }, i64, [64 x i8], i8 }
%Reader.2 = type { { i8*, i64, i64 }, i64, i64 }
%Flags.0 = type { %Logger.0*, i8, i8, i8, i8, i8, i8, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, i8, { i8*, i64 } }
%Logger.0 = type { %Mutex.0, { i8*, i64 }, i64, %Writer.0, { i8*, i64, i64 } }
%Mutex.0 = type { i32, i32 }
%__go_descriptor.27 = type { void (i8*, i8*)* }
%IPST.4 = type { i8**, i64, i64 }
%IPST.9 = type { %Package.0**, i64, i64 }
%Package.0 = type { { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, i8, { i8*, i64 }, %IPST.3, { i8*, i64 }, i8, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, %IPST.3, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %IPST.3, %IPST.3, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %IPST.3, %IPST.3, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%Writer.1 = type { %".archive/zip.countWriter.0"*, %IPST.14, %".archive/zip.fileWriter.0"*, i8, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i8*, i64 }, %__go_descriptor.12* }
%".archive/zip.countWriter.0" = type { %Writer.0, i64 }
%IPST.14 = type { %".archive/zip.header.0"**, i64, i64 }
%".archive/zip.header.0" = type { %FileHeader.0*, i64 }
%FileHeader.0 = type { { i8*, i64 }, { i8*, i64 }, i8, i16, i16, i16, i16, %Time.0, i16, i16, i32, i32, i32, i64, i64, { i8*, i64, i64 }, i32 }
%".archive/zip.fileWriter.0" = type { %".archive/zip.header.0"*, %Writer.0, %".archive/zip.countWriter.0"*, %WriteCloser.0, %".archive/zip.countWriter.0"*, %Hash32.0, i8 }
%WriteCloser.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Hash32.0 = type { { %_type.0*, i64 (i8*, i8*)*, void (i8*, i8*)*, i64 (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*, { i8*, i64, i64 }*)*, i32 (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%__go_descriptor.12 = type { void (i8*, i64, i64)* }
%__go_descriptor.9 = type { void (i8*)* }
%__go_descriptor.26 = type { void ({ %Writer.0, %error.0 }*, i8*, i64, i64)* }
%__go_descriptor.30 = type { { i64, i64 } (i8*, i64, i64, i64, i64, i64, i64)* }
%Cmd.0 = type { { i8*, i64 }, %IPST.3, %IPST.3, { i8*, i64 }, %Reader.0, %Writer.0, %Writer.0, %IPST.6, %SysProcAttr.0*, %Process.0*, %ProcessState.0*, %Context.0, %error.0, i8, %IPST.6, %IPST.7, %IPST.7, %IPST.8, {}*, {}* }
%Reader.0 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%SysProcAttr.0 = type { { i8*, i64 }, %Credential.0*, i8, i8, i8, i8, i8, i64, i8, i64, i64, i64, i64, %IPST.19, %IPST.19, i8, %IPST.17 }
%Credential.0 = type { i32, i32, %IPST.18, i8 }
%IPST.18 = type { i32*, i64, i64 }
%IPST.19 = type { %SysProcIDMap.0*, i64, i64 }
%SysProcIDMap.0 = type { i64, i64, i64 }
%IPST.17 = type { i64*, i64, i64 }
%Process.0 = type { i64, i64, i32, %RWMutex.0 }
%RWMutex.0 = type { %Mutex.0, i32, i32, i32, i32 }
%ProcessState.0 = type { i64, i32, %Rusage.0* }
%Rusage.0 = type { %Timeval.0, %Timeval.0, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%Timeval.0 = type { i64, i64 }
%Context.0 = type { { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }*, i8* }
%IPST.6 = type { %File.1**, i64, i64 }
%IPST.7 = type { %Closer.0*, i64, i64 }
%Closer.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%IPST.8 = type { %__go_descriptor.4**, i64, i64 }
%__go_descriptor.4 = type { { i64, i64 } (i8*)* }
%IPST.11 = type { %IPST.3*, i64, i64 }
%__go_descriptor.31 = type { void (i8*, %IPST.3*)* }
%IPST.12 = type { %.command-line-arguments.archPath.0*, i64, i64 }
%IPST.10 = type { { i8*, i64 }*, %Package.0**, i8*, { i64, i8, i8, i16, i32, %IPST.1*, %IPST.1*, i64, i8* }*, %IPST.1*, %IPST.1*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.1 = type { [8 x i8], [8 x { i8*, i64 }], [8 x %Package.0*], i8* }
%IPST.5 = type { { i8*, i64 }*, { i8*, i64 }*, i8*, { i64, i8, i8, i16, i32, %IPST.0*, %IPST.0*, i64, i8* }*, %IPST.0*, %IPST.0*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.0 = type { [8 x i8], [8 x { i8*, i64 }], [8 x { i8*, i64 }], i8* }

$string..d = comdat any

$gcbits..ba = comdat any

$type...1string = comdat any

$type...68x.7string = comdat any

$gcbits..wkwa = comdat any

$type...6.7string = comdat any

$gcbits..wkfa = comdat any

$type...1command_line_arguments.ndkToolchain = comdat any

$type..func.8.9.8string.9 = comdat any

$type..func.8.1command_line_arguments.ndkToolchain.9.8string.9 = comdat any

$type...1.1command_line_arguments.ndkToolchain = comdat any

$type..map.6string.7.1command_line_arguments.ndkToolchain = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkEGba = comdat any

$type...68x.7uint8 = comdat any

$uint8..d = comdat any

$type...1uint8 = comdat any

$type...6.7uint8 = comdat any

$type...68x.7.1command_line_arguments.ndkToolchain = comdat any

$gcbits..Gh = comdat any

$type...6.7.1command_line_arguments.ndkToolchain = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$gcbits..mb = comdat any

$int..d = comdat any

$type...1int = comdat any

$uint16..d = comdat any

$type...1uint16 = comdat any

$uint32..d = comdat any

$type...1uint32 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5 = comdat any

$uintptr..d = comdat any

$type...1uintptr = comdat any

$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File = comdat any

$type..struct.4.4x.5a0.0.1os.File.5 = comdat any

$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File = comdat any

$error..d = comdat any

$gcbits..da = comdat any

$type...1error = comdat any

$type...1command_line_arguments.Flags = comdat any

$type..func.8.9.8bool.9 = comdat any

$bool..d = comdat any

$type...1bool = comdat any

$type..func.8.1command_line_arguments.Flags.9.8bool.9 = comdat any

$type...1.1command_line_arguments.Flags = comdat any

$gcbits..wsaa = comdat any

$type...61x.7string = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5 = comdat any

$gcbits..ha = comdat any

$type...1.1archive_zip.Writer = comdat any

$type..map.6string.7struct.4.5 = comdat any

$type..struct.4.5 = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkfa = comdat any

$type...68x.7struct.4.5 = comdat any

$type...6.7struct.4.5 = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5 = comdat any

$type...60x.7string = comdat any

$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader = comdat any

$type...60x.7.6.7string = comdat any

$type...6.7.6.7string = comdat any

$type...60x.7command_line_arguments.Bind.archPath = comdat any

$gcbits..wb = comdat any

$type...1command_line_arguments.Bind.archPath = comdat any

$type...6.7command_line_arguments.Bind.archPath = comdat any

$type..chan.0command_line_arguments.Bind.archPath = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5 = comdat any

$gcbits..Gd = comdat any

$type...1chan.0command_line_arguments.Bind.archPath = comdat any

$type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5 = comdat any

$type..func.8.6.7string.9.8.9 = comdat any

$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer = comdat any

$type..map.6string.7string = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkwkwka = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = comdat any

$type...60x.7uint8 = comdat any

$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader = comdat any

$type...67x.7string = comdat any

$type...622x.7uint8 = comdat any

$type..map.6string.7.1go_build.Package = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5 = comdat any

$type...68x.7.1go_build.Package = comdat any

$type...6.7.1go_build.Package = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5 = comdat any

$type...60x.7.1go_build.Package = comdat any

$gcbits..GGGGGGa = comdat any

$gcbits..pppppppa = comdat any

$gcbits..ppppa = comdat any

$gcbits..pppppppppa = comdat any

$gcbits..pa = comdat any

$gcbits..GGaa = comdat any

$gcbits..ppppppppppppa = comdat any

$gcbits..pppa = comdat any

$gcbits..ppaa = comdat any

@const.1 = private constant [170 x i8] c"Invalid or unsupported Android installation. See https://gomatcha.io/guide/installation/\0Afor detailed instructions or set the --target=\22ios\22 flag to only build for iOS.\0A\00", align 1
@const.2 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([170 x i8], [170 x i8]* @const.1, i32 0, i32 0), i64 169 }
@string..d = weak constant %_type.0 { i64 16, i64 8, i32 -1998952806, i8 24, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.strhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.strequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C1, %uncommonType.0* @go..C4, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0) }, comdat
@runtime.strhash..f = external constant %functionDescriptor.0
@runtime.strequal..f = external constant %functionDescriptor.0
@gcbits..ba = weak constant [1 x i8] c"\01", comdat
@const.3 = private constant [7 x i8] c"string\00", align 1
@go..C1 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.3, i32 0, i32 0), i64 6 }
@go..C2 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.3, i32 0, i32 0), i64 6 }
@go..C3 = internal global [1 x %method.0] zeroinitializer
@go..C4 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C2, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C3, i32 0, i32 0), i64 0, i64 0 } }
@type...1string = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1918473815, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C5, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@runtime.memhash64..f = external constant %functionDescriptor.0
@runtime.memequal64..f = external constant %functionDescriptor.0
@const.4 = private constant [8 x i8] c"*string\00", align 1
@go..C5 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.4, i32 0, i32 0), i64 7 }
@command_line_arguments.ValidateAndroidInstall..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*)* @command_line_arguments.ValidateAndroidInstall to i64) }
@const.7 = private constant [6 x i8] c"javac\00", align 1
@const.9 = private constant [31 x i8] c"javac was not found in $PATH. \00", align 1
@const.10 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @const.9, i32 0, i32 0), i64 30 }
@const.11 = private constant %IPST.2 zeroinitializer
@const.12 = private constant [13 x i8] c"ANDROID_HOME\00", align 1
@const.15 = private constant [84 x i8] c"$ANDROID_HOME enviromental variable is unset and does not point to an Android SDK. \00", align 1
@const.16 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([84 x i8], [84 x i8]* @const.15, i32 0, i32 0), i64 83 }
@const.17 = private constant [71 x i8] c"$ANDROID_HOME enviromental variable does not point to an Android SDK. \00", align 1
@const.18 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([71 x i8], [71 x i8]* @const.17, i32 0, i32 0), i64 70 }
@command_line_arguments.AndroidSDKPath..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.AndroidSDKPath to i64) }
@const.19 = private constant [10 x i8] c"platforms\00", align 1
@const.20 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.19, i32 0, i32 0), i64 9 }
@const.21 = private constant [117 x i8] c"$ANDROID_HOME enviromental variable does not point to an Android SDK. Missing directory at $ANDROID_HOME/platforms. \00", align 1
@const.22 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([117 x i8], [117 x i8]* @const.21, i32 0, i32 0), i64 116 }
@const.24 = private constant [11 x i8] c"android-21\00", align 1
@const.25 = private unnamed_addr constant [1 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.24, i32 0, i32 0), i64 10 }]
@const.26 = private constant [9 x i8] c"android-\00", align 1
@const.27 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.26, i32 0, i32 0), i64 8 }
@const.28 = private constant [12 x i8] c"android.jar\00", align 1
@const.29 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.28, i32 0, i32 0), i64 11 }
@const.30 = private constant [156 x i8] c"Android SDK platform with minimum API level of 15 was not found in $ANDROID_HOME/platforms. SDK platforms can be installed in Android Studio > SDK Manager.\00", align 1
@command_line_arguments.AndroidPlatformPath..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.AndroidPlatformPath to i64) }
@const.32 = private constant [11 x i8] c"ndk-bundle\00", align 1
@const.33 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.32, i32 0, i32 0), i64 10 }
@const.34 = private constant [101 x i8] c"NDK was not found at $ANDROID_HOME/ndk-bundle. NDK can be installed in Android Studio > SDK Manager.\00", align 1
@command_line_arguments.NDKPath..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.NDKPath to i64) }
@const.37 = private constant %IPST.3 zeroinitializer
@const.38 = private constant [29 x i8] c"-target %s -gcc-toolchain %s\00", align 1
@const.40 = private constant [49 x i8] c"%s --sysroot %s -isystem %s -D__ANDROID_API__=%s\00", align 1
@const.42 = private constant [16 x i8] c"%s --sysroot %s\00", align 1
@const.44 = private constant [8 x i8] c"GOARCH=\00", align 1
@const.45 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.44, i32 0, i32 0), i64 7 }
@const.46 = private constant [4 x i8] c"CC=\00", align 1
@const.47 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.46, i32 0, i32 0), i64 3 }
@const.48 = private constant [5 x i8] c"CXX=\00", align 1
@const.49 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.48, i32 0, i32 0), i64 4 }
@const.50 = private constant [12 x i8] c"CGO_CFLAGS=\00", align 1
@const.51 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.50, i32 0, i32 0), i64 11 }
@const.52 = private constant [14 x i8] c"CGO_CPPFLAGS=\00", align 1
@const.53 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.52, i32 0, i32 0), i64 13 }
@const.54 = private constant [13 x i8] c"CGO_LDFLAGS=\00", align 1
@const.55 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.54, i32 0, i32 0), i64 12 }
@const.56 = private constant [13 x i8] c"GOOS=android\00", align 1
@const.57 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.56, i32 0, i32 0), i64 12 }
@const.58 = private constant [14 x i8] c"CGO_ENABLED=1\00", align 1
@const.59 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.58, i32 0, i32 0), i64 13 }
@type...68x.7string = weak constant %ArrayType.0 { %_type.0 { i64 128, i64 120, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkwa, i32 0, i32 0), { i8*, i64 }* @go..C6, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 8 }, comdat
@gcbits..wkwa = weak constant [2 x i8] c"UU", comdat
@const.60 = private constant [10 x i8] c"[8]string\00", align 1
@go..C6 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.60, i32 0, i32 0), i64 9 }
@type...6.7string = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1998952792, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C7, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.61 = private constant [9 x i8] c"[]string\00", align 1
@go..C7 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.61, i32 0, i32 0), i64 8 }
@const.62 = private constant [4 x i8] c"arm\00", align 1
@const.63 = private constant [8 x i8] c"GOARM=7\00", align 1
@const.64 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.63, i32 0, i32 0), i64 7 }
@runtime.writeBarrier = external local_unnamed_addr externally_initialized global i32
@const.65 = private constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.62, i32 0, i32 0), i64 3 }
@command_line_arguments.AndroidEnv..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %IPST.3, %error.0 }*, i8*, %Flags.0*, i64, i64)* @command_line_arguments.AndroidEnv to i64) }
@command_line_arguments..command_line_arguments.ndkToolchain..d = constant %StructType.0 { %_type.0 { i64 112, i64 104, i32 -1285225832, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.ndkToolchain..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.ndkToolchain..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkfa, i32 0, i32 0), { i8*, i64 }* @go..C8, %uncommonType.0* @go..C12, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.ndkToolchain, i32 0, i32 0) }, %IPST.24 { %structField.0* getelementptr inbounds ([7 x %structField.0], [7 x %structField.0]* @go..C49, i32 0, i32 0), i64 7, i64 7 } }
@command_line_arguments.command_line_arguments.ndkToolchain..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.ndkToolchain..hash to i64) }
@command_line_arguments.command_line_arguments.ndkToolchain..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.ndkToolchain..eq to i64) }
@gcbits..wkfa = weak constant [2 x i8] c"U\15", comdat
@const.66 = private constant [41 x i8] c"\09command_line_arguments\09cmd.ndkToolchain\00", align 1
@go..C8 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.66, i32 0, i32 0), i64 40 }
@const.67 = private constant [13 x i8] c"ndkToolchain\00", align 1
@go..C9 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.67, i32 0, i32 0), i64 12 }
@const.68 = private constant [23 x i8] c"command-line-arguments\00", align 1
@go..C10 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@go..C11 = internal global [1 x %method.0] zeroinitializer
@go..C12 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C9, { i8*, i64 }* @go..C10, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C11, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.ndkToolchain = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 911223177, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C13, %uncommonType.0* @go..C33, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.ndkToolchain, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i32 0, i32 0) }, comdat
@const.69 = private constant [42 x i8] c"*\09command_line_arguments\09cmd.ndkToolchain\00", align 1
@go..C13 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.69, i32 0, i32 0), i64 41 }
@const.70 = private constant [10 x i8] c"clangPath\00", align 1
@go..C14 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.70, i32 0, i32 0), i64 9 }
@go..C15 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@type..func.8.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 916039304, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C16, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C17, i32 0, i32 0), i64 0, i64 0 }, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C18, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.71 = private constant [14 x i8] c"func() string\00", align 1
@go..C16 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.71, i32 0, i32 0), i64 13 }
@go..C17 = internal global [1 x %_type.0*] zeroinitializer
@go..C18 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@type..func.8.1command_line_arguments.ndkToolchain.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 10409896, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C19, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C20, i32 0, i32 0), i64 1, i64 1 }, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C21, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.72 = private constant [55 x i8] c"func(*\09command_line_arguments\09cmd.ndkToolchain) string\00", align 1
@go..C19 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([55 x i8], [55 x i8]* @const.72, i32 0, i32 0), i64 54 }
@go..C20 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.ndkToolchain, i32 0, i32 0)]
@go..C21 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@const.73 = private constant [12 x i8] c"clangppPath\00", align 1
@go..C22 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.73, i32 0, i32 0), i64 11 }
@go..C23 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.74 = private constant [9 x i8] c"csysroot\00", align 1
@go..C24 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.74, i32 0, i32 0), i64 8 }
@go..C25 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.75 = private constant [13 x i8] c"gccToolchain\00", align 1
@go..C26 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.75, i32 0, i32 0), i64 12 }
@go..C27 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.76 = private constant [8 x i8] c"isystem\00", align 1
@go..C28 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.76, i32 0, i32 0), i64 7 }
@go..C29 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.77 = private constant [10 x i8] c"ldsysroot\00", align 1
@go..C30 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.77, i32 0, i32 0), i64 9 }
@go..C31 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@go..C32 = internal global [6 x %method.0] [%method.0 { { i8*, i64 }* @go..C14, { i8*, i64 }* @go..C15, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.ndkToolchain.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %.command-line-arguments.ndkToolchain.0*)* @command_line_arguments.ndkToolchain.clangPath to i8*) }, %method.0 { { i8*, i64 }* @go..C22, { i8*, i64 }* @go..C23, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.ndkToolchain.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %.command-line-arguments.ndkToolchain.0*)* @command_line_arguments.ndkToolchain.clangppPath to i8*) }, %method.0 { { i8*, i64 }* @go..C24, { i8*, i64 }* @go..C25, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.ndkToolchain.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %.command-line-arguments.ndkToolchain.0*)* @command_line_arguments.ndkToolchain.csysroot to i8*) }, %method.0 { { i8*, i64 }* @go..C26, { i8*, i64 }* @go..C27, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.ndkToolchain.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %.command-line-arguments.ndkToolchain.0*)* @command_line_arguments.ndkToolchain.gccToolchain to i8*) }, %method.0 { { i8*, i64 }* @go..C28, { i8*, i64 }* @go..C29, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.ndkToolchain.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %.command-line-arguments.ndkToolchain.0*)* @command_line_arguments.ndkToolchain.isystem to i8*) }, %method.0 { { i8*, i64 }* @go..C30, { i8*, i64 }* @go..C31, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.ndkToolchain.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %.command-line-arguments.ndkToolchain.0*)* @command_line_arguments.ndkToolchain.ldsysroot to i8*) }]
@go..C33 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([6 x %method.0], [6 x %method.0]* @go..C32, i32 0, i32 0), i64 6, i64 6 } }
@type...1.1command_line_arguments.ndkToolchain = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1694668953, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C34, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.ndkToolchain, i32 0, i32 0) }, comdat
@const.78 = private constant [43 x i8] c"**\09command_line_arguments\09cmd.ndkToolchain\00", align 1
@go..C34 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.78, i32 0, i32 0), i64 42 }
@const.79 = private constant [5 x i8] c"arch\00", align 1
@go..C35 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.79, i32 0, i32 0), i64 4 }
@go..C36 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.80 = private constant [4 x i8] c"api\00", align 1
@go..C37 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.80, i32 0, i32 0), i64 3 }
@go..C38 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.81 = private constant [4 x i8] c"gcc\00", align 1
@go..C39 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.81, i32 0, i32 0), i64 3 }
@go..C40 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.82 = private constant [7 x i8] c"triple\00", align 1
@go..C41 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.82, i32 0, i32 0), i64 6 }
@go..C42 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.83 = private constant [12 x i8] c"clangTriple\00", align 1
@go..C43 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.83, i32 0, i32 0), i64 11 }
@go..C44 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.84 = private constant [8 x i8] c"ndkRoot\00", align 1
@go..C45 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.84, i32 0, i32 0), i64 7 }
@go..C46 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.85 = private constant [8 x i8] c"hostTag\00", align 1
@go..C47 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.85, i32 0, i32 0), i64 7 }
@go..C48 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@go..C49 = internal global [7 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C35, { i8*, i64 }* @go..C36, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C37, { i8*, i64 }* @go..C38, %_type.0* @string..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C39, { i8*, i64 }* @go..C40, %_type.0* @string..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C41, { i8*, i64 }* @go..C42, %_type.0* @string..d, { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C43, { i8*, i64 }* @go..C44, %_type.0* @string..d, { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @go..C45, { i8*, i64 }* @go..C46, %_type.0* @string..d, { i8*, i64 }* null, i64 160 }, %structField.0 { { i8*, i64 }* @go..C47, { i8*, i64 }* @go..C48, %_type.0* @string..d, { i8*, i64 }* null, i64 192 }]
@const.86 = private constant [3 x i8] c"15\00", align 1
@const.87 = private constant [26 x i8] c"arm-linux-androideabi-4.9\00", align 1
@const.88 = private constant [22 x i8] c"arm-linux-androideabi\00", align 1
@const.89 = private constant [30 x i8] c"armv7a-none-linux-androideabi\00", align 1
@const.90 = private unnamed_addr constant %.command-line-arguments.ndkToolchain.0 { { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.62, i32 0, i32 0), i64 3 }, { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.86, i32 0, i32 0), i64 2 }, { i8*, i64 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @const.87, i32 0, i32 0), i64 25 }, { i8*, i64 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @const.88, i32 0, i32 0), i64 21 }, { i8*, i64 } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @const.89, i32 0, i32 0), i64 29 }, { i8*, i64 } zeroinitializer, { i8*, i64 } zeroinitializer }
@const.91 = private constant [6 x i8] c"arm64\00", align 1
@const.92 = private constant [3 x i8] c"21\00", align 1
@const.93 = private constant [26 x i8] c"aarch64-linux-android-4.9\00", align 1
@const.94 = private constant [22 x i8] c"aarch64-linux-android\00", align 1
@const.95 = private constant [27 x i8] c"aarch64-none-linux-android\00", align 1
@const.96 = private unnamed_addr constant %.command-line-arguments.ndkToolchain.0 { { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.91, i32 0, i32 0), i64 5 }, { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.92, i32 0, i32 0), i64 2 }, { i8*, i64 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @const.93, i32 0, i32 0), i64 25 }, { i8*, i64 } { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @const.94, i32 0, i32 0), i64 21 }, { i8*, i64 } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @const.95, i32 0, i32 0), i64 26 }, { i8*, i64 } zeroinitializer, { i8*, i64 } zeroinitializer }
@const.97 = private constant [4 x i8] c"386\00", align 1
@const.98 = private constant [4 x i8] c"x86\00", align 1
@const.99 = private constant [8 x i8] c"x86-4.9\00", align 1
@const.100 = private constant [19 x i8] c"i686-linux-android\00", align 1
@const.101 = private constant [24 x i8] c"i686-none-linux-android\00", align 1
@const.102 = private unnamed_addr constant %.command-line-arguments.ndkToolchain.0 { { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.98, i32 0, i32 0), i64 3 }, { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.86, i32 0, i32 0), i64 2 }, { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.99, i32 0, i32 0), i64 7 }, { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.100, i32 0, i32 0), i64 18 }, { i8*, i64 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @const.101, i32 0, i32 0), i64 23 }, { i8*, i64 } zeroinitializer, { i8*, i64 } zeroinitializer }
@const.103 = private constant [6 x i8] c"amd64\00", align 1
@const.104 = private constant [7 x i8] c"x86_64\00", align 1
@const.105 = private constant [11 x i8] c"x86_64-4.9\00", align 1
@const.106 = private constant [21 x i8] c"x86_64-linux-android\00", align 1
@const.107 = private constant [26 x i8] c"x86_64-none-linux-android\00", align 1
@const.108 = private unnamed_addr constant %.command-line-arguments.ndkToolchain.0 { { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.104, i32 0, i32 0), i64 6 }, { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.92, i32 0, i32 0), i64 2 }, { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.105, i32 0, i32 0), i64 10 }, { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.106, i32 0, i32 0), i64 20 }, { i8*, i64 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @const.107, i32 0, i32 0), i64 25 }, { i8*, i64 } zeroinitializer, { i8*, i64 } zeroinitializer }
@const.109 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.91, i32 0, i32 0), i64 5 }
@const.110 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.97, i32 0, i32 0), i64 3 }
@const.111 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.103, i32 0, i32 0), i64 5 }
@type..map.6string.7.1command_line_arguments.ndkToolchain = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 -1087729613, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C50, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.ndkToolchain, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.112 = private constant [53 x i8] c"map[string]*\09command_line_arguments\09cmd.ndkToolchain\00", align 1
@go..C50 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.112, i32 0, i32 0), i64 52 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 -476419196, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C51, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C65, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkEGba = weak constant [4 x i8] c"\AA\AA\FE\03", comdat
@const.113 = private constant [109 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09cmd.ndkToolchain; overflow * }\00", align 1
@go..C51 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([109 x i8], [109 x i8]* @const.113, i32 0, i32 0), i64 108 }
@const.114 = private constant [8 x i8] c"topbits\00", align 1
@go..C52 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.114, i32 0, i32 0), i64 7 }
@type...68x.7uint8 = weak constant %ArrayType.0 { %_type.0 { i64 8, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C53, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 8 }, comdat
@const.115 = private constant [9 x i8] c"[8]uint8\00", align 1
@go..C53 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.115, i32 0, i32 0), i64 8 }
@uint8..d = weak constant %_type.0 { i64 1, i64 0, i32 264632089, i8 -120, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C54, %uncommonType.0* @go..C57, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint8, i32 0, i32 0) }, comdat
@runtime.memhash8..f = external constant %functionDescriptor.0
@runtime.memequal8..f = external constant %functionDescriptor.0
@const.116 = private constant [6 x i8] c"uint8\00", align 1
@go..C54 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.116, i32 0, i32 0), i64 5 }
@go..C55 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.116, i32 0, i32 0), i64 5 }
@go..C56 = internal global [1 x %method.0] zeroinitializer
@go..C57 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C55, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C56, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint8 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -60853863, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C58, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.117 = private constant [7 x i8] c"*uint8\00", align 1
@go..C58 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.117, i32 0, i32 0), i64 6 }
@type...6.7uint8 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 264632103, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C59, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.118 = private constant [8 x i8] c"[]uint8\00", align 1
@go..C59 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.118, i32 0, i32 0), i64 7 }
@const.119 = private constant [5 x i8] c"keys\00", align 1
@go..C60 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.119, i32 0, i32 0), i64 4 }
@const.120 = private constant [7 x i8] c"values\00", align 1
@go..C61 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.120, i32 0, i32 0), i64 6 }
@type...68x.7.1command_line_arguments.ndkToolchain = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 1822446369, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C62, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.ndkToolchain, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.ndkToolchain, i32 0, i32 0), i64 8 }, comdat
@gcbits..Gh = weak constant [1 x i8] c"\FF", comdat
@const.121 = private constant [45 x i8] c"[8]*\09command_line_arguments\09cmd.ndkToolchain\00", align 1
@go..C62 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.121, i32 0, i32 0), i64 44 }
@type...6.7.1command_line_arguments.ndkToolchain = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 911223191, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C63, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.ndkToolchain, i32 0, i32 0) }, comdat
@const.122 = private constant [44 x i8] c"[]*\09command_line_arguments\09cmd.ndkToolchain\00", align 1
@go..C63 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.122, i32 0, i32 0), i64 43 }
@const.123 = private constant [9 x i8] c"overflow\00", align 1
@go..C64 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.123, i32 0, i32 0), i64 8 }
@unsafe.Pointer..d = external constant %_type.0
@go..C65 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C52, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C60, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C61, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7.1command_line_arguments.ndkToolchain, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C64, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 -1591502364, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C66, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C97, i32 0, i32 0), i64 9, i64 9 } }, comdat
@gcbits..mb = weak constant [1 x i8] c",", comdat
@const.124 = private constant [344 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09cmd.ndkToolchain; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09cmd.ndkToolchain; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C66 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([344 x i8], [344 x i8]* @const.124, i32 0, i32 0), i64 343 }
@const.125 = private constant [6 x i8] c"count\00", align 1
@go..C67 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.125, i32 0, i32 0), i64 5 }
@int..d = weak constant %_type.0 { i64 8, i64 0, i32 876704034, i8 -126, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C68, %uncommonType.0* @go..C71, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int, i32 0, i32 0) }, comdat
@const.126 = private constant [4 x i8] c"int\00", align 1
@go..C68 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.126, i32 0, i32 0), i64 3 }
@go..C69 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.126, i32 0, i32 0), i64 3 }
@go..C70 = internal global [1 x %method.0] zeroinitializer
@go..C71 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C69, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C70, i32 0, i32 0), i64 0, i64 0 } }
@type...1int = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1142362665, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C72, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d }, comdat
@const.127 = private constant [5 x i8] c"*int\00", align 1
@go..C72 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.127, i32 0, i32 0), i64 4 }
@const.128 = private constant [6 x i8] c"flags\00", align 1
@go..C73 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.128, i32 0, i32 0), i64 5 }
@const.129 = private constant [2 x i8] c"B\00", align 1
@go..C74 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.129, i32 0, i32 0), i64 1 }
@const.130 = private constant [10 x i8] c"noverflow\00", align 1
@go..C75 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.130, i32 0, i32 0), i64 9 }
@uint16..d = weak constant %_type.0 { i64 2, i64 0, i32 76732288, i8 -119, i8 2, i8 2, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash16..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal16..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C76, %uncommonType.0* @go..C79, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint16, i32 0, i32 0) }, comdat
@runtime.memhash16..f = external constant %functionDescriptor.0
@runtime.memequal16..f = external constant %functionDescriptor.0
@const.131 = private constant [7 x i8] c"uint16\00", align 1
@go..C76 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.131, i32 0, i32 0), i64 6 }
@go..C77 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.131, i32 0, i32 0), i64 6 }
@go..C78 = internal global [1 x %method.0] zeroinitializer
@go..C79 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C77, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C78, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint16 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1227716617, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C80, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d }, comdat
@const.132 = private constant [8 x i8] c"*uint16\00", align 1
@go..C80 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.132, i32 0, i32 0), i64 7 }
@const.133 = private constant [6 x i8] c"hash0\00", align 1
@go..C81 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.133, i32 0, i32 0), i64 5 }
@uint32..d = weak constant %_type.0 { i64 4, i64 0, i32 278357906, i8 -118, i8 4, i8 4, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash32..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal32..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C82, %uncommonType.0* @go..C85, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint32, i32 0, i32 0) }, comdat
@runtime.memhash32..f = external constant %functionDescriptor.0
@runtime.memequal32..f = external constant %functionDescriptor.0
@const.134 = private constant [7 x i8] c"uint32\00", align 1
@go..C82 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.134, i32 0, i32 0), i64 6 }
@go..C83 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.134, i32 0, i32 0), i64 6 }
@go..C84 = internal global [1 x %method.0] zeroinitializer
@go..C85 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C83, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C84, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint32 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 158759209, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C86, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint32..d }, comdat
@const.135 = private constant [8 x i8] c"*uint32\00", align 1
@go..C86 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.135, i32 0, i32 0), i64 7 }
@const.136 = private constant [8 x i8] c"buckets\00", align 1
@go..C87 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.136, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 967227465, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C88, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.137 = private constant [110 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09cmd.ndkToolchain; overflow * }\00", align 1
@go..C88 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.137, i32 0, i32 0), i64 109 }
@const.138 = private constant [11 x i8] c"oldbuckets\00", align 1
@go..C89 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.138, i32 0, i32 0), i64 10 }
@const.139 = private constant [10 x i8] c"nevacuate\00", align 1
@go..C90 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.139, i32 0, i32 0), i64 9 }
@uintptr..d = weak constant %_type.0 { i64 8, i64 0, i32 -1488193301, i8 -116, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C91, %uncommonType.0* @go..C94, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uintptr, i32 0, i32 0) }, comdat
@const.140 = private constant [8 x i8] c"uintptr\00", align 1
@go..C91 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.140, i32 0, i32 0), i64 7 }
@go..C92 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.140, i32 0, i32 0), i64 7 }
@go..C93 = internal global [1 x %method.0] zeroinitializer
@go..C94 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C92, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C93, i32 0, i32 0), i64 0, i64 0 } }
@type...1uintptr = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1958710969, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C95, %uncommonType.0* null, %_type.0* null }, %_type.0* @uintptr..d }, comdat
@const.141 = private constant [9 x i8] c"*uintptr\00", align 1
@go..C95 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.141, i32 0, i32 0), i64 8 }
@const.142 = private constant [6 x i8] c"extra\00", align 1
@go..C96 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.142, i32 0, i32 0), i64 5 }
@go..C97 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C67, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C73, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C74, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C75, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C81, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C87, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C89, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C90, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C96, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.144 = private constant [36 x i8] c"toolchainForArch(): Unknown arch %v\00", align 1
@const.146 = private constant [11 x i8] c"toolchains\00", align 1
@const.147 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.146, i32 0, i32 0), i64 10 }
@const.148 = private constant [9 x i8] c"prebuilt\00", align 1
@const.149 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.148, i32 0, i32 0), i64 8 }
@const.150 = private constant [5 x i8] c"llvm\00", align 1
@const.151 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.150, i32 0, i32 0), i64 4 }
@const.152 = private constant [4 x i8] c"bin\00", align 1
@const.153 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.152, i32 0, i32 0), i64 3 }
@const.154 = private constant [6 x i8] c"clang\00", align 1
@const.155 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.154, i32 0, i32 0), i64 5 }
@const.156 = private constant [8 x i8] c"clang++\00", align 1
@const.157 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.156, i32 0, i32 0), i64 7 }
@const.158 = private constant [8 x i8] c"sysroot\00", align 1
@const.159 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.158, i32 0, i32 0), i64 7 }
@const.160 = private constant [4 x i8] c"usr\00", align 1
@const.161 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.160, i32 0, i32 0), i64 3 }
@const.162 = private constant [8 x i8] c"include\00", align 1
@const.163 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.162, i32 0, i32 0), i64 7 }
@const.164 = private constant [6 x i8] c"arch-\00", align 1
@const.165 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.164, i32 0, i32 0), i64 5 }
@const.166 = private constant [12 x i8] c"armeabi-v7a\00", align 1
@const.168 = private constant [10 x i8] c"arm64-v8a\00", align 1
@const.170 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.98, i32 0, i32 0), i64 3 }
@const.171 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.104, i32 0, i32 0), i64 6 }
@command_line_arguments.GetAndroidABI..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, i64, i64)* @command_line_arguments.GetAndroidABI to i64) }
@const.172 = private constant [8 x i8] c"windows\00", align 1
@const.174 = private constant [36 x i8] c"ndkHostTag(): Unsupported GOARCH %v\00", align 1
@const.176 = private constant [7 x i8] c"linux-\00", align 1
@const.177 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.176, i32 0, i32 0), i64 6 }
@const.182 = private constant [52 x i8] c"The SDK is often located at ~/Android/Sdk on Linux.\00", align 1
@const.188 = private constant [82 x i8] c"The Java compiler is often located at /usr/local/android-studio/jre/bin on Linux.\00", align 1
@io_ioutil.Discard = external local_unnamed_addr externally_initialized global %Writer.0
@type...1os.File = external constant %PtrType.0
@pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1os.File, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* @os.File.Write }, comdat
@const.195 = private constant [20 x i8] c"AndroidManifest.xml\00", align 1
@const.197 = private constant [4 x i8] c"go.\00", align 1
@const.198 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.197, i32 0, i32 0), i64 3 }
@const.199 = private constant [7 x i8] c".gojni\00", align 1
@const.200 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.199, i32 0, i32 0), i64 6 }
@const.201 = private constant [131 x i8] c"<manifest xmlns:android=\22http://schemas.android.com/apk/res/android\22 package=%q>\0A<uses-sdk android:minSdkVersion=\22%d\22/></manifest>\00", align 1
@const.203 = private constant [13 x i8] c"proguard.txt\00", align 1
@const.205 = private constant [25 x i8] c"-keep class go.** { *; }\00", align 1
@const.206 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @const.205, i32 0, i32 0), i64 24 }
@const.207 = private constant [12 x i8] c"classes.jar\00", align 1
@const.209 = private constant [14 x i8] c"src/main/java\00", align 1
@const.210 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.209, i32 0, i32 0), i64 13 }
@const.211 = private constant [13 x i8] c"/libgojni.so\00", align 1
@const.212 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.211, i32 0, i32 0), i64 12 }
@const.213 = private constant [5 x i8] c"jni/\00", align 1
@const.214 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.213, i32 0, i32 0), i64 4 }
@const.215 = private constant [18 x i8] c"src/main/jniLibs/\00", align 1
@const.216 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.215, i32 0, i32 0), i64 17 }
@type..struct.4.4x.5a0.0.1os.File.5 = weak constant %StructType.0 { %_type.0 { i64 8, i64 8, i32 1800758484, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C98, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C100, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.217 = private constant [27 x i8] c"struct { a0 *\09os\09os.File }\00", align 1
@go..C98 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @const.217, i32 0, i32 0), i64 26 }
@const.218 = private constant [3 x i8] c"a0\00", align 1
@go..C99 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.218, i32 0, i32 0), i64 2 }
@go..C100 = internal global [1 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C99, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1os.File, i32 0, i32 0), { i8*, i64 }* null, i64 0 }]
@pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1os.File, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* @os.File.Read }, comdat
@const.219 = private constant [6 x i8] c"R.txt\00", align 1
@const.221 = private constant [5 x i8] c"res/\00", align 1
@command_line_arguments.BuildAAR..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64, %IPST.9*, %IPST.3*, i64, i64, { i8*, i64 }*)* @command_line_arguments.BuildAAR to i64) }
@error..d = weak constant %InterfaceType.0 { %_type.0 { i64 16, i64 16, i32 -2128909609, i8 20, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C101, %uncommonType.0* @go..C104, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1error, i32 0, i32 0) }, %IPST.25 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C107, i32 0, i32 0), i64 1, i64 1 } }, comdat
@runtime.interhash..f = external constant %functionDescriptor.0
@runtime.interequal..f = external constant %functionDescriptor.0
@gcbits..da = weak constant [1 x i8] c"\03", comdat
@const.223 = private constant [6 x i8] c"error\00", align 1
@go..C101 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.223, i32 0, i32 0), i64 5 }
@go..C102 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.223, i32 0, i32 0), i64 5 }
@go..C103 = internal global [1 x %method.0] zeroinitializer
@go..C104 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C102, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C103, i32 0, i32 0), i64 0, i64 0 } }
@type...1error = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 297184633, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C105, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0) }, comdat
@const.224 = private constant [7 x i8] c"*error\00", align 1
@go..C105 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.224, i32 0, i32 0), i64 6 }
@const.225 = private constant [6 x i8] c"Error\00", align 1
@go..C106 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.225, i32 0, i32 0), i64 5 }
@go..C107 = internal global [1 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C106, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0) }]
@const.226 = private constant [9 x i8] c"aar: %s\0A\00", align 1
@type...1command_line_arguments.Flags = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1666000167, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C108, %uncommonType.0* @go..C123, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Flags, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Flags..d, i32 0, i32 0) }, comdat
@const.229 = private constant [35 x i8] c"*\09command_line_arguments\09cmd.Flags\00", align 1
@go..C108 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.229, i32 0, i32 0), i64 34 }
@const.230 = private constant [12 x i8] c"ShouldPrint\00", align 1
@go..C109 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.230, i32 0, i32 0), i64 11 }
@type..func.8.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -361864120, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C110, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C111, i32 0, i32 0), i64 0, i64 0 }, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C117, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.231 = private constant [12 x i8] c"func() bool\00", align 1
@go..C110 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.231, i32 0, i32 0), i64 11 }
@go..C111 = internal global [1 x %_type.0*] zeroinitializer
@bool..d = weak constant %_type.0 { i64 1, i64 0, i32 1537849745, i8 -127, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C112, %uncommonType.0* @go..C115, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0) }, comdat
@const.232 = private constant [5 x i8] c"bool\00", align 1
@go..C112 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.232, i32 0, i32 0), i64 4 }
@go..C113 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.232, i32 0, i32 0), i64 4 }
@go..C114 = internal global [1 x %method.0] zeroinitializer
@go..C115 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C113, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C114, i32 0, i32 0), i64 0, i64 0 } }
@type...1bool = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1164207847, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C116, %uncommonType.0* null, %_type.0* null }, %_type.0* @bool..d }, comdat
@const.233 = private constant [6 x i8] c"*bool\00", align 1
@go..C116 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.233, i32 0, i32 0), i64 5 }
@go..C117 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@type..func.8.1command_line_arguments.Flags.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2134261912, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C118, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C119, i32 0, i32 0), i64 1, i64 1 }, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C120, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.234 = private constant [46 x i8] c"func(*\09command_line_arguments\09cmd.Flags) bool\00", align 1
@go..C118 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.234, i32 0, i32 0), i64 45 }
@go..C119 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Flags, i32 0, i32 0)]
@go..C120 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@const.235 = private constant [10 x i8] c"ShouldRun\00", align 1
@go..C121 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.235, i32 0, i32 0), i64 9 }
@go..C122 = internal global [2 x %method.0] [%method.0 { { i8*, i64 }* @go..C109, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Flags.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %Flags.0*)* @command_line_arguments.Flags.ShouldPrint to i8*) }, %method.0 { { i8*, i64 }* @go..C121, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Flags.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %Flags.0*)* @command_line_arguments.Flags.ShouldRun to i8*) }]
@go..C123 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.22 { %method.0* getelementptr inbounds ([2 x %method.0], [2 x %method.0]* @go..C122, i32 0, i32 0), i64 2, i64 2 } }
@type...1.1command_line_arguments.Flags = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -886198887, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C124, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Flags, i32 0, i32 0) }, comdat
@const.236 = private constant [36 x i8] c"**\09command_line_arguments\09cmd.Flags\00", align 1
@go..C124 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.236, i32 0, i32 0), i64 35 }
@command_line_arguments.Flags..d = constant %StructType.0 { %_type.0 { i64 88, i64 80, i32 1238052269, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Flags..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Flags..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wsaa, i32 0, i32 0), { i8*, i64 }* @go..C125, %uncommonType.0* @go..C129, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Flags, i32 0, i32 0) }, %IPST.24 { %structField.0* getelementptr inbounds ([12 x %structField.0], [12 x %structField.0]* @go..C143, i32 0, i32 0), i64 12, i64 12 } }
@command_line_arguments.command_line_arguments.Flags..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Flags..hash to i64) }
@command_line_arguments.command_line_arguments.Flags..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Flags..eq to i64) }
@gcbits..wsaa = weak constant [2 x i8] c"U\02", comdat
@const.237 = private constant [34 x i8] c"\09command_line_arguments\09cmd.Flags\00", align 1
@go..C125 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @const.237, i32 0, i32 0), i64 33 }
@const.238 = private constant [6 x i8] c"Flags\00", align 1
@go..C126 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.238, i32 0, i32 0), i64 5 }
@go..C127 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@go..C128 = internal global [1 x %method.0] zeroinitializer
@go..C129 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C126, { i8*, i64 }* @go..C127, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C128, i32 0, i32 0), i64 0, i64 0 } }
@const.239 = private constant [7 x i8] c"Logger\00", align 1
@go..C130 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.239, i32 0, i32 0), i64 6 }
@type...1log.Logger = external constant %PtrType.0
@const.240 = private constant [9 x i8] c"Threaded\00", align 1
@go..C131 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.240, i32 0, i32 0), i64 8 }
@const.241 = private constant [13 x i8] c"disablePrint\00", align 1
@go..C132 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.241, i32 0, i32 0), i64 12 }
@go..C133 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.242 = private constant [7 x i8] c"BuildN\00", align 1
@go..C134 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.242, i32 0, i32 0), i64 6 }
@const.243 = private constant [7 x i8] c"BuildX\00", align 1
@go..C135 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.243, i32 0, i32 0), i64 6 }
@const.244 = private constant [7 x i8] c"BuildV\00", align 1
@go..C136 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.244, i32 0, i32 0), i64 6 }
@const.245 = private constant [10 x i8] c"BuildWork\00", align 1
@go..C137 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.245, i32 0, i32 0), i64 9 }
@const.246 = private constant [13 x i8] c"BuildGcflags\00", align 1
@go..C138 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.246, i32 0, i32 0), i64 12 }
@const.247 = private constant [13 x i8] c"BuildLdflags\00", align 1
@go..C139 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.247, i32 0, i32 0), i64 12 }
@const.248 = private constant [7 x i8] c"BuildO\00", align 1
@go..C140 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.248, i32 0, i32 0), i64 6 }
@const.249 = private constant [12 x i8] c"BuildBinary\00", align 1
@go..C141 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.249, i32 0, i32 0), i64 11 }
@const.250 = private constant [13 x i8] c"BuildTargets\00", align 1
@go..C142 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.250, i32 0, i32 0), i64 12 }
@go..C143 = internal global [12 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C130, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1log.Logger, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C131, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C132, { i8*, i64 }* @go..C133, %_type.0* @bool..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C134, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C135, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 22 }, %structField.0 { { i8*, i64 }* @go..C136, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C137, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 26 }, %structField.0 { { i8*, i64 }* @go..C138, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C139, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C140, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C141, { i8*, i64 }* null, %_type.0* @bool..d, { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @go..C142, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 144 }]
@type...61x.7string = weak constant %ArrayType.0 { %_type.0 { i64 16, i64 8, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C144, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 1 }, comdat
@const.251 = private constant [10 x i8] c"[1]string\00", align 1
@go..C144 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.251, i32 0, i32 0), i64 9 }
@const.252 = private constant [7 x i8] c"*.java\00", align 1
@const.253 = private unnamed_addr constant [1 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.252, i32 0, i32 0), i64 6 }]
@const.255 = private constant [13 x i8] c"javac-output\00", align 1
@const.256 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.255, i32 0, i32 0), i64 12 }
@const.257 = private constant [3 x i8] c"-d\00", align 1
@const.258 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.257, i32 0, i32 0), i64 2 }
@const.259 = private constant [8 x i8] c"-source\00", align 1
@const.260 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.259, i32 0, i32 0), i64 7 }
@const.261 = private constant [4 x i8] c"1.7\00", align 1
@const.262 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.261, i32 0, i32 0), i64 3 }
@const.263 = private constant [8 x i8] c"-target\00", align 1
@const.264 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.263, i32 0, i32 0), i64 7 }
@const.265 = private constant [15 x i8] c"-bootclasspath\00", align 1
@const.266 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.265, i32 0, i32 0), i64 14 }
@type...1archive_zip.Writer = external constant %PtrType.0
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5 = weak constant %StructType.0 { %_type.0 { i64 24, i64 24, i32 980033924, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0), { i8*, i64 }* @go..C145, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C153, i32 0, i32 0), i64 3, i64 3 } }, comdat
@gcbits..ha = weak constant [1 x i8] c"\07", comdat
@const.267 = private constant [88 x i8] c"struct { f *; f1 **\09command_line_arguments\09cmd.Flags; jarw2 **\09archive_zip\09zip.Writer }\00", align 1
@go..C145 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([88 x i8], [88 x i8]* @const.267, i32 0, i32 0), i64 87 }
@const.268 = private constant [2 x i8] c"f\00", align 1
@go..C146 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.268, i32 0, i32 0), i64 1 }
@go..C147 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.268, i32 0, i32 0), i64 1 }
@const.269 = private constant [3 x i8] c"f1\00", align 1
@go..C148 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.269, i32 0, i32 0), i64 2 }
@go..C149 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.270 = private constant [6 x i8] c"jarw2\00", align 1
@go..C150 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.270, i32 0, i32 0), i64 5 }
@go..C151 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@type...1.1archive_zip.Writer = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 284289177, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C152, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1archive_zip.Writer, i32 0, i32 0) }, comdat
@const.271 = private constant [26 x i8] c"**\09archive_zip\09zip.Writer\00", align 1
@go..C152 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @const.271, i32 0, i32 0), i64 25 }
@go..C153 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C146, { i8*, i64 }* @go..C147, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C148, { i8*, i64 }* @go..C149, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Flags, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C150, { i8*, i64 }* @go..C151, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1archive_zip.Writer, i32 0, i32 0), { i8*, i64 }* null, i64 32 }]
@const.272 = private constant [21 x i8] c"META-INF/MANIFEST.MF\00", align 1
@const.274 = private constant [45 x i8] c"Manifest-Version: 1.0\0ACreated-By: 1.0 (Go)\0A\0A\00", align 1
@command_line_arguments.BuildJar..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64, i64, i64, { i8*, i64 }*)* @command_line_arguments.BuildJar to i64) }
@const.277 = private constant [6 x i8] c".java\00", align 1
@const.278 = private constant [2 x i8] c".\00", align 1
@const.279 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.278, i32 0, i32 0), i64 1 }
@const.281 = private constant [9 x i8] c"jar: %s\0A\00", align 1
@const.284 = private constant [8 x i8] c"android\00", align 1
@const.285 = private constant [4 x i8] c"ios\00", align 1
@const.287 = private unnamed_addr constant [1 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.284, i32 0, i32 0), i64 7 }]
@type..map.6string.7struct.4.5 = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 -1998952778, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C154, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 0, i8 0, i16 144, i8 1, i8 1 }, comdat
@const.288 = private constant [21 x i8] c"map[string]struct {}\00", align 1
@go..C154 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.288, i32 0, i32 0), i64 20 }
@type..struct.4.5 = weak constant %StructType.0 { %_type.0 { i64 0, i64 0, i32 12, i8 -103, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash0..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal0..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C155, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C156, i32 0, i32 0), i64 0, i64 0 } }, comdat
@runtime.memhash0..f = external constant %functionDescriptor.0
@runtime.memequal0..f = external constant %functionDescriptor.0
@const.289 = private constant [10 x i8] c"struct {}\00", align 1
@go..C155 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.289, i32 0, i32 0), i64 9 }
@go..C156 = internal global [1 x %structField.0] zeroinitializer
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 144, i64 144, i32 429210596, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..kwkfa, i32 0, i32 0), { i8*, i64 }* @go..C157, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C164, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkfa = weak constant [3 x i8] c"\AA\AA\02", comdat
@const.290 = private constant [77 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }\00", align 1
@go..C157 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([77 x i8], [77 x i8]* @const.290, i32 0, i32 0), i64 76 }
@go..C158 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.114, i32 0, i32 0), i64 7 }
@go..C159 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.119, i32 0, i32 0), i64 4 }
@go..C160 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.120, i32 0, i32 0), i64 6 }
@type...68x.7struct.4.5 = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 39, i8 -111, i8 1, i8 1, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C161, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7struct.4.5, i32 0, i32 0), i64 8 }, comdat
@const.291 = private constant [13 x i8] c"[8]struct {}\00", align 1
@go..C161 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.291, i32 0, i32 0), i64 12 }
@type...6.7struct.4.5 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 26, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C162, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.5, i32 0, i32 0) }, comdat
@const.292 = private constant [12 x i8] c"[]struct {}\00", align 1
@go..C162 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.292, i32 0, i32 0), i64 11 }
@go..C163 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.123, i32 0, i32 0), i64 8 }
@go..C164 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C158, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C159, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C160, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7struct.4.5, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C163, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 272 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 -2113545756, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C165, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C176, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.293 = private constant [280 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C165 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([280 x i8], [280 x i8]* @const.293, i32 0, i32 0), i64 279 }
@go..C166 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.125, i32 0, i32 0), i64 5 }
@go..C167 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.128, i32 0, i32 0), i64 5 }
@go..C168 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.129, i32 0, i32 0), i64 1 }
@go..C169 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.130, i32 0, i32 0), i64 9 }
@go..C170 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.133, i32 0, i32 0), i64 5 }
@go..C171 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.136, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1722565047, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C172, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.294 = private constant [78 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }\00", align 1
@go..C172 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([78 x i8], [78 x i8]* @const.294, i32 0, i32 0), i64 77 }
@go..C173 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.138, i32 0, i32 0), i64 10 }
@go..C174 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.139, i32 0, i32 0), i64 9 }
@go..C175 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.142, i32 0, i32 0), i64 5 }
@go..C176 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C166, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C167, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C168, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C169, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C170, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C171, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C173, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C174, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C175, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.295 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.284, i32 0, i32 0), i64 7 }
@const.296 = private constant [12 x i8] c"android/arm\00", align 1
@const.297 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.296, i32 0, i32 0), i64 11 }
@const.298 = private constant [14 x i8] c"android/arm64\00", align 1
@const.299 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.298, i32 0, i32 0), i64 13 }
@const.300 = private constant [12 x i8] c"android/386\00", align 1
@const.301 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.300, i32 0, i32 0), i64 11 }
@const.302 = private constant [14 x i8] c"android/amd64\00", align 1
@const.303 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.302, i32 0, i32 0), i64 13 }
@const.304 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.285, i32 0, i32 0), i64 3 }
@const.305 = private constant [8 x i8] c"ios/arm\00", align 1
@const.306 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.305, i32 0, i32 0), i64 7 }
@const.307 = private constant [10 x i8] c"ios/arm64\00", align 1
@const.308 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.307, i32 0, i32 0), i64 9 }
@const.309 = private constant [10 x i8] c"ios/amd64\00", align 1
@const.310 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.309, i32 0, i32 0), i64 9 }
@const.311 = private constant [8 x i8] c"ios/386\00", align 1
@const.312 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.311, i32 0, i32 0), i64 7 }
@command_line_arguments.ParseTargets..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i64, i64)* @command_line_arguments.ParseTargets to i64) }
@const.313 = private constant [19 x i8] c"gomatcha.io/matcha\00", align 1
@command_line_arguments.Build..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, %IPST.3*)* @command_line_arguments.Build to i64) }
@const.317 = private constant [8 x i8] c"version\00", align 1
@const.318 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.317, i32 0, i32 0), i64 7 }
@const.319 = private constant [49 x i8] c"toolchain partially installed, run `matcha init`\00", align 1
@const.321 = private constant [41 x i8] c"toolchain out of date, run `matcha init`\00", align 1
@go_build.Context..d = external constant %StructType.0
@go_build.Default = external externally_initialized global %Context.1
@const.323 = private constant [7 x i8] c"darwin\00", align 1
@const.324 = private constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.323, i32 0, i32 0), i64 6 }
@const.325 = private constant [7 x i8] c"matcha\00", align 1
@const.326 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.325, i32 0, i32 0), i64 6 }
@type...60x.7string = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 297061699, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C179, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 0 }, comdat
@const.327 = private constant [10 x i8] c"[0]string\00", align 1
@go..C179 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.327, i32 0, i32 0), i64 9 }
@const.329 = private constant [5 x i8] c"main\00", align 1
@const.330 = private constant [45 x i8] c"binding 'main' package (%s) is not supported\00", align 1
@const.332 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.329, i32 0, i32 0), i64 4 }
@const.333 = private constant [26 x i8] c"gomatcha.io/matcha/bridge\00", align 1
@const.335 = private constant [11 x i8] c"IOS-GOPATH\00", align 1
@const.336 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.335, i32 0, i32 0), i64 10 }
@const.337 = private constant [11 x i8] c"matcha-ios\00", align 1
@const.338 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.337, i32 0, i32 0), i64 10 }
@const.339 = private constant [13 x i8] c"MatchaBridge\00", align 1
@const.340 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.339, i32 0, i32 0), i64 12 }
@const.341 = private constant [15 x i8] c"MatchaBridge.a\00", align 1
@const.342 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.341, i32 0, i32 0), i64 14 }
@const.343 = private constant [4 x i8] c"src\00", align 1
@const.344 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.343, i32 0, i32 0), i64 3 }
@const.345 = private constant [7 x i8] c"iosbin\00", align 1
@const.346 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.345, i32 0, i32 0), i64 6 }
@const.347 = private constant [8 x i8] c"main.go\00", align 1
@const.348 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.347, i32 0, i32 0), i64 7 }
@command_line_arguments.BindFile = global { i8*, i64 } { i8* getelementptr inbounds ([100 x i8], [100 x i8]* @const.434, i32 0, i32 0), i64 99 }
@type...1strings.Reader = external constant %PtrType.0
@pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.3*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1strings.Reader, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %Reader.3*, { i8*, i64, i64 }*)* @strings.Reader.Read }, comdat
@const.349 = private constant [49 x i8] c"failed to create the binding package for iOS: %v\00", align 1
@type...60x.7.6.7string = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 297061727, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C180, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.6.7string, i32 0, i32 0), i64 0 }, comdat
@const.351 = private constant [12 x i8] c"[0][]string\00", align 1
@go..C180 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.351, i32 0, i32 0), i64 11 }
@type...6.7.6.7string = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1998952778, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C181, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0) }, comdat
@const.352 = private constant [11 x i8] c"[][]string\00", align 1
@go..C181 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.352, i32 0, i32 0), i64 10 }
@type...60x.7command_line_arguments.Bind.archPath = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 -1560965475, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C182, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Bind.archPath, i32 0, i32 0), i64 0 }, comdat
@const.353 = private constant [47 x i8] c"[0]\09command_line_arguments\09cmd.\09Bind$\09archPath\00", align 1
@go..C182 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.353, i32 0, i32 0), i64 46 }
@command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d = constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1367000903, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Bind.archPath..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Bind.archPath..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..wb, i32 0, i32 0), { i8*, i64 }* @go..C183, %uncommonType.0* @go..C187, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Bind.archPath, i32 0, i32 0) }, %IPST.24 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C195, i32 0, i32 0), i64 3, i64 3 } }
@command_line_arguments.command_line_arguments.Bind.archPath..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Bind.archPath..hash to i64) }
@command_line_arguments.command_line_arguments.Bind.archPath..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Bind.archPath..eq to i64) }
@gcbits..wb = weak constant [1 x i8] c"5", comdat
@const.354 = private constant [44 x i8] c"\09command_line_arguments\09cmd.\09Bind$\09archPath\00", align 1
@go..C183 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.354, i32 0, i32 0), i64 43 }
@const.355 = private constant [9 x i8] c"archPath\00", align 1
@go..C184 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.355, i32 0, i32 0), i64 8 }
@go..C185 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@go..C186 = internal global [1 x %method.0] zeroinitializer
@go..C187 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C184, { i8*, i64 }* @go..C185, %IPST.22 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C186, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Bind.archPath = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 397177977, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C188, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i32 0, i32 0) }, comdat
@const.356 = private constant [45 x i8] c"*\09command_line_arguments\09cmd.\09Bind$\09archPath\00", align 1
@go..C188 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.356, i32 0, i32 0), i64 44 }
@go..C189 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.79, i32 0, i32 0), i64 4 }
@go..C190 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.357 = private constant [5 x i8] c"path\00", align 1
@go..C191 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.357, i32 0, i32 0), i64 4 }
@go..C192 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.358 = private constant [4 x i8] c"err\00", align 1
@go..C193 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.358, i32 0, i32 0), i64 3 }
@go..C194 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@go..C195 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C189, { i8*, i64 }* @go..C190, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C191, { i8*, i64 }* @go..C192, %_type.0* @string..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C193, { i8*, i64 }* @go..C194, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0), { i8*, i64 }* null, i64 64 }]
@type...6.7command_line_arguments.Bind.archPath = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 1367000917, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C196, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i32 0, i32 0) }, comdat
@const.359 = private constant [46 x i8] c"[]\09command_line_arguments\09cmd.\09Bind$\09archPath\00", align 1
@go..C196 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.359, i32 0, i32 0), i64 45 }
@type..chan.0command_line_arguments.Bind.archPath = weak constant %ChanType.0 { %_type.0 { i64 8, i64 8, i32 794355975, i8 18, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C197, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i32 0, i32 0), i64 3 }, comdat
@const.360 = private constant [49 x i8] c"chan \09command_line_arguments\09cmd.\09Bind$\09archPath\00", align 1
@go..C197 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @const.360, i32 0, i32 0), i64 48 }
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5 = weak constant %StructType.0 { %_type.0 { i64 56, i64 56, i32 -494705340, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gd, i32 0, i32 0), { i8*, i64 }* @go..C198, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([7 x %structField.0], [7 x %structField.0]* @go..C214, i32 0, i32 0), i64 7, i64 7 } }, comdat
@gcbits..Gd = weak constant [1 x i8] c"\7F", comdat
@const.361 = private constant [201 x i8] c"struct { f *; gopathDir1 *string; flags2 **\09command_line_arguments\09cmd.Flags; tempdir3 *string; mainPath4 *string; matchaPkgPath5 *string; archChan6 *chan \09command_line_arguments\09cmd.\09Bind$\09archPath }\00", align 1
@go..C198 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([201 x i8], [201 x i8]* @const.361, i32 0, i32 0), i64 200 }
@go..C199 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.268, i32 0, i32 0), i64 1 }
@go..C200 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.268, i32 0, i32 0), i64 1 }
@const.362 = private constant [11 x i8] c"gopathDir1\00", align 1
@go..C201 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.362, i32 0, i32 0), i64 10 }
@go..C202 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.363 = private constant [7 x i8] c"flags2\00", align 1
@go..C203 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.363, i32 0, i32 0), i64 6 }
@go..C204 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.364 = private constant [9 x i8] c"tempdir3\00", align 1
@go..C205 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.364, i32 0, i32 0), i64 8 }
@go..C206 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.365 = private constant [10 x i8] c"mainPath4\00", align 1
@go..C207 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.365, i32 0, i32 0), i64 9 }
@go..C208 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.366 = private constant [15 x i8] c"matchaPkgPath5\00", align 1
@go..C209 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.366, i32 0, i32 0), i64 14 }
@go..C210 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@const.367 = private constant [10 x i8] c"archChan6\00", align 1
@go..C211 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.367, i32 0, i32 0), i64 9 }
@go..C212 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.68, i32 0, i32 0), i64 22 }
@type...1chan.0command_line_arguments.Bind.archPath = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -175206279, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C213, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0command_line_arguments.Bind.archPath, i32 0, i32 0) }, comdat
@const.368 = private constant [50 x i8] c"*chan \09command_line_arguments\09cmd.\09Bind$\09archPath\00", align 1
@go..C213 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([50 x i8], [50 x i8]* @const.368, i32 0, i32 0), i64 49 }
@go..C214 = internal global [7 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C199, { i8*, i64 }* @go..C200, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C201, { i8*, i64 }* @go..C202, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C203, { i8*, i64 }* @go..C204, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Flags, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C205, { i8*, i64 }* @go..C206, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C207, { i8*, i64 }* @go..C208, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0), { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C209, { i8*, i64 }* @go..C210, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0), { i8*, i64 }* null, i64 80 }, %structField.0 { { i8*, i64 }* @go..C211, { i8*, i64 }* @go..C212, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1chan.0command_line_arguments.Bind.archPath, i32 0, i32 0), { i8*, i64 }* null, i64 96 }]
@type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5 = weak constant %StructType.0 { %_type.0 { i64 32, i64 16, i32 -73366068, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C215, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C221, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.369 = private constant [42 x i8] c"struct { fn func([]string); a0 []string }\00", align 1
@go..C215 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.369, i32 0, i32 0), i64 41 }
@const.370 = private constant [3 x i8] c"fn\00", align 1
@go..C216 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.370, i32 0, i32 0), i64 2 }
@type..func.8.6.7string.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 458020104, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C217, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C218, i32 0, i32 0), i64 1, i64 1 }, %IPST.23 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C219, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.371 = private constant [15 x i8] c"func([]string)\00", align 1
@go..C217 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.371, i32 0, i32 0), i64 14 }
@go..C218 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0)]
@go..C219 = internal global [1 x %_type.0*] zeroinitializer
@go..C220 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.218, i32 0, i32 0), i64 2 }
@go..C221 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C216, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.6.7string.9.8.9, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C220, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }]
@const.372 = private unnamed_addr constant %.command-line-arguments.archPath.0 zeroinitializer
@const.373 = private constant [5 x i8] c"lipo\00", align 1
@const.374 = private constant [8 x i8] c"-create\00", align 1
@const.375 = private unnamed_addr constant [2 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.373, i32 0, i32 0), i64 4 }, { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.374, i32 0, i32 0), i64 7 }]
@const.376 = private constant [6 x i8] c"xcrun\00", align 1
@const.378 = private constant [6 x i8] c"-arch\00", align 1
@const.379 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.378, i32 0, i32 0), i64 5 }
@const.380 = private constant [3 x i8] c"-o\00", align 1
@const.381 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.380, i32 0, i32 0), i64 2 }
@const.382 = private constant [11 x i8] c"Matcha-iOS\00", align 1
@const.384 = private constant [15 x i8] c"ANDROID-GOPATH\00", align 1
@const.385 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.384, i32 0, i32 0), i64 14 }
@const.386 = private constant [19 x i8] c"androidlib/main.go\00", align 1
@const.387 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.386, i32 0, i32 0), i64 18 }
@const.388 = private constant [50 x i8] c"failed to create the main package for android: %v\00", align 1
@const.390 = private constant [5 x i8] c"java\00", align 1
@const.391 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.390, i32 0, i32 0), i64 4 }
@const.392 = private constant [3 x i8] c"io\00", align 1
@const.393 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.392, i32 0, i32 0), i64 2 }
@const.394 = private constant [9 x i8] c"gomatcha\00", align 1
@const.395 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.394, i32 0, i32 0), i64 8 }
@const.396 = private constant [7 x i8] c"bridge\00", align 1
@const.397 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.396, i32 0, i32 0), i64 6 }
@const.398 = private constant [13 x i8] c"GoValue.java\00", align 1
@const.399 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.398, i32 0, i32 0), i64 12 }
@const.400 = private constant [18 x i8] c"java-GoValue.java\00", align 1
@const.401 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.400, i32 0, i32 0), i64 17 }
@const.402 = private constant [12 x i8] c"Bridge.java\00", align 1
@const.403 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.402, i32 0, i32 0), i64 11 }
@const.404 = private constant [17 x i8] c"java-Bridge.java\00", align 1
@const.405 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.404, i32 0, i32 0), i64 16 }
@const.406 = private constant [13 x i8] c"Tracker.java\00", align 1
@const.407 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.406, i32 0, i32 0), i64 12 }
@const.408 = private constant [18 x i8] c"java-Tracker.java\00", align 1
@const.409 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.408, i32 0, i32 0), i64 17 }
@const.410 = private constant [15 x i8] c"matcha-android\00", align 1
@const.411 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.410, i32 0, i32 0), i64 14 }
@const.412 = private constant [17 x i8] c"matchabridge.aar\00", align 1
@const.413 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.412, i32 0, i32 0), i64 16 }
@const.414 = private constant [7 x i8] c"GOPATH\00", align 1
@const.416 = private constant [8 x i8] c"GOPATH=\00", align 1
@const.417 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.416, i32 0, i32 0), i64 7 }
@const.418 = private constant [2 x i8] c":\00", align 1
@const.419 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.418, i32 0, i32 0), i64 1 }
@const.420 = private unnamed_addr constant [1 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.325, i32 0, i32 0), i64 6 }]
@const.421 = private constant [4 x i8] c"-o=\00", align 1
@const.422 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.421, i32 0, i32 0), i64 3 }
@const.423 = private constant [20 x i8] c"-buildmode=c-shared\00", align 1
@const.424 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @const.423, i32 0, i32 0), i64 19 }
@command_line_arguments.Bind..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, %IPST.3*)* @command_line_arguments.Bind to i64) }
@const.425 = private constant [7 x i8] c"GOARCH\00", align 1
@const.427 = private constant [8 x i8] c"matcha-\00", align 1
@const.428 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.427, i32 0, i32 0), i64 7 }
@const.429 = private constant [3 x i8] c".a\00", align 1
@const.430 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.429, i32 0, i32 0), i64 2 }
@const.431 = private unnamed_addr constant [2 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.325, i32 0, i32 0), i64 6 }, { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.285, i32 0, i32 0), i64 3 }]
@const.432 = private constant [21 x i8] c"-buildmode=c-archive\00", align 1
@const.433 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.432, i32 0, i32 0), i64 20 }
@const.434 = private constant [100 x i8] c"\0Apackage main\0A\0Aimport (\0A    _ \22gomatcha.io/matcha/bridge\22\0A    _ \22%s\22\0A)\0A\0Aimport \22C\22\0A\0Afunc main() {}\0A\00", align 1
@const.436 = private constant { i8*, i64, i64 } zeroinitializer
@command_line_arguments.RunCmd..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64, %Cmd.0*)* @command_line_arguments.RunCmd to i64) }
@const.437 = private constant [5 x i8] c"PWD=\00", align 1
@const.438 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.437, i32 0, i32 0), i64 4 }
@const.439 = private constant [2 x i8] c" \00", align 1
@const.440 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.439, i32 0, i32 0), i64 1 }
@bytes.Buffer..d = external constant %StructType.0
@type...1bytes.Buffer = external constant %PtrType.0
@pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bytes.Buffer, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* @bytes.Buffer.Write }, comdat
@io.Writer..d = external constant %InterfaceType.0
@const.445 = private constant [8 x i8] c"TMPDIR=\00", align 1
@const.446 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.445, i32 0, i32 0), i64 7 }
@const.447 = private constant [20 x i8] c"%s failed: %v\0A%s\0A%s\00", align 1
@os.Stderr = external local_unnamed_addr externally_initialized global %File.1*
@os.Stdout = external local_unnamed_addr externally_initialized global %File.1*
@command_line_arguments.OutputCmd..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64, i64 }, %error.0 }*, i8*, %Flags.0*, { i8*, i64, i64 }*, i64, i64, %Cmd.0*)* @command_line_arguments.OutputCmd to i64) }
@const.449 = private constant [6 x i8] c"linux\00", align 1
@type..map.6string.7string = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 297061700, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C222, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* @string..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 16, i8 0, i16 272, i8 1, i8 1 }, comdat
@const.451 = private constant [18 x i8] c"map[string]string\00", align 1
@go..C222 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.451, i32 0, i32 0), i64 17 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 272, i64 272, i32 887229860, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..kwkwkwka, i32 0, i32 0), { i8*, i64 }* @go..C223, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C228, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkwkwka = weak constant [5 x i8] c"\AA\AA\AA\AA\02", comdat
@const.452 = private constant [74 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }\00", align 1
@go..C223 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([74 x i8], [74 x i8]* @const.452, i32 0, i32 0), i64 73 }
@go..C224 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.114, i32 0, i32 0), i64 7 }
@go..C225 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.119, i32 0, i32 0), i64 4 }
@go..C226 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.120, i32 0, i32 0), i64 6 }
@go..C227 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.123, i32 0, i32 0), i64 8 }
@go..C228 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C224, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C225, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C226, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C227, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 528 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1324374500, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C229, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C240, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.453 = private constant [274 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C229 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([274 x i8], [274 x i8]* @const.453, i32 0, i32 0), i64 273 }
@go..C230 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.125, i32 0, i32 0), i64 5 }
@go..C231 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.128, i32 0, i32 0), i64 5 }
@go..C232 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.129, i32 0, i32 0), i64 1 }
@go..C233 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.130, i32 0, i32 0), i64 9 }
@go..C234 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.133, i32 0, i32 0), i64 5 }
@go..C235 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.136, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1310775881, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C236, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.454 = private constant [75 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }\00", align 1
@go..C236 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([75 x i8], [75 x i8]* @const.454, i32 0, i32 0), i64 74 }
@go..C237 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.138, i32 0, i32 0), i64 10 }
@go..C238 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.139, i32 0, i32 0), i64 9 }
@go..C239 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.142, i32 0, i32 0), i64 5 }
@go..C240 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C230, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C231, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C232, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C233, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C234, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C235, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C237, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C238, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C239, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.455 = private constant [2 x i8] c"=\00", align 1
@const.456 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.455, i32 0, i32 0), i64 1 }
@const.457 = private constant [32 x i8] c"malformed env var %q from input\00", align 1
@command_line_arguments.MergeEnviron..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void (%IPST.3*, i8*, %IPST.3*, %IPST.3*)* @command_line_arguments.MergeEnviron to i64) }
@const.460 = private constant [15 x i8] c"gomobile-work-\00", align 1
@const.462 = private constant [6 x i8] c"$WORK\00", align 1
@const.464 = private constant [5 x i8] c"work\00", align 1
@const.465 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.464, i32 0, i32 0), i64 4 }
@const.466 = private constant [6 x i8] c"WORK=\00", align 1
@const.467 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.466, i32 0, i32 0), i64 5 }
@command_line_arguments.NewTmpDir..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*, i64, i64)* @command_line_arguments.NewTmpDir to i64) }
@const.468 = private constant [19 x i8] c"go findpackage %s\0A\00", align 1
@const.471 = private constant [13 x i8] c"$GOPATH/src/\00", align 1
@const.472 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.471, i32 0, i32 0), i64 12 }
@command_line_arguments.PackageDir..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*, i64, i64)* @command_line_arguments.PackageDir to i64) }
@const.473 = private constant [13 x i8] c"rm -r -f %s\0A\00", align 1
@command_line_arguments.RemoveAll..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64)* @command_line_arguments.RemoveAll to i64) }
@const.475 = private constant [10 x i8] c"write %s\0A\00", align 1
@command_line_arguments.WriteFile..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64, i64, i64)* @command_line_arguments.WriteFile to i64) }
@const.478 = private constant [9 x i8] c"read %s\0A\00", align 1
@type...60x.7uint8 = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C241, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 0 }, comdat
@const.480 = private constant [9 x i8] c"[0]uint8\00", align 1
@go..C241 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.480, i32 0, i32 0), i64 8 }
@command_line_arguments.ReadFile..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64, i64 }, %error.0 }*, i8*, %Flags.0*, i64, i64)* @command_line_arguments.ReadFile to i64) }
@const.481 = private constant [10 x i8] c"cp %s %s\0A\00", align 1
@command_line_arguments.CopyFile..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64, i64, i64)* @command_line_arguments.CopyFile to i64) }
@const.483 = private constant [13 x i8] c"mkdir -p %s\0A\00", align 1
@command_line_arguments.Mkdir..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64)* @command_line_arguments.Mkdir to i64) }
@const.485 = private constant [10 x i8] c"which %s\0A\00", align 1
@command_line_arguments.LookPath..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*, i64, i64)* @command_line_arguments.LookPath to i64) }
@const.487 = private constant [13 x i8] c"printenv %s\0A\00", align 1
@const.489 = private constant [2 x i8] c"$\00", align 1
@const.490 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.489, i32 0, i32 0), i64 1 }
@command_line_arguments.GetEnv..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64)* @command_line_arguments.GetEnv to i64) }
@const.491 = private constant [7 x i8] c"ls %s\0A\00", align 1
@command_line_arguments.ReadDirNames..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %IPST.3, %error.0 }*, i8*, %Flags.0*, i64, i64)* @command_line_arguments.ReadDirNames to i64) }
@const.493 = private constant [12 x i8] c"test -f %s\0A\00", align 1
@command_line_arguments.IsFile..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, %Flags.0*, i64, i64)* @command_line_arguments.IsFile to i64) }
@const.496 = private constant [12 x i8] c"test -d %s\0A\00", align 1
@command_line_arguments.IsDir..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, %Flags.0*, i64, i64)* @command_line_arguments.IsDir to i64) }
@const.498 = private constant [5 x i8] c"pwd\0A\00", align 1
@const.500 = private constant [5 x i8] c"$CWD\00", align 1
@const.501 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.500, i32 0, i32 0), i64 4 }
@command_line_arguments.Getwd..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.Getwd to i64) }
@const.502 = private constant [4 x i8] c"std\00", align 1
@const.503 = private constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.502, i32 0, i32 0), i64 3 }
@const.504 = private constant [10 x i8] c"-tags=ios\00", align 1
@const.505 = private unnamed_addr constant [1 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.504, i32 0, i32 0), i64 9 }]
@type...1bytes.Reader = external constant %PtrType.0
@pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader = weak constant { %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bytes.Reader, i32 0, i32 0), void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* @bytes.Reader.Read }, comdat
@time.Duration..d = external constant %_type.0
@const.506 = private constant [16 x i8] c"Build took %s.\0A\00", align 1
@const.508 = private constant [21 x i8] c"Matcha initialized.\0A\00", align 1
@command_line_arguments.Init..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*)* @command_line_arguments.Init to i64) }
@const.510 = private constant [176 x i8] c"Invalid or unsupported Xcode installation. See https://gomatcha.io/guide/installation/\0Afor detailed instructions or set the --target=\22android\22 flag to only build for Android.\0A\00", align 1
@const.511 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([176 x i8], [176 x i8]* @const.510, i32 0, i32 0), i64 175 }
@const.512 = private constant [6 x i8] c"armv7\00", align 1
@const.514 = private constant [5 x i8] c"i386\00", align 1
@const.516 = private constant [19 x i8] c"unknown GOARCH: %q\00", align 1
@command_line_arguments.ArchClang..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, i64, i64)* @command_line_arguments.ArchClang to i64) }
@const.518 = private constant [6 x i8] c"--sdk\00", align 1
@const.519 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.518, i32 0, i32 0), i64 5 }
@const.520 = private constant [7 x i8] c"--find\00", align 1
@const.521 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.520, i32 0, i32 0), i64 6 }
@const.522 = private constant [8 x i8] c"$CLANG_\00", align 1
@const.523 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.522, i32 0, i32 0), i64 7 }
@const.524 = private constant [16 x i8] c"--show-sdk-path\00", align 1
@const.525 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.524, i32 0, i32 0), i64 15 }
@const.526 = private constant [6 x i8] c"$SDK_\00", align 1
@const.527 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.526, i32 0, i32 0), i64 5 }
@const.528 = private constant [11 x i8] c"-isysroot \00", align 1
@const.529 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.528, i32 0, i32 0), i64 10 }
@command_line_arguments.EnvClang..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, { i8*, i64 }, %error.0 }*, i8*, %Flags.0*, i64, i64)* @command_line_arguments.EnvClang to i64) }
@const.531 = private constant [9 x i8] c"iphoneos\00", align 1
@const.533 = private constant [35 x i8] c" -miphoneos-version-min=6.1 -arch \00", align 1
@const.534 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.533, i32 0, i32 0), i64 34 }
@const.535 = private constant [12 x i8] c"GOOS=darwin\00", align 1
@const.536 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.535, i32 0, i32 0), i64 11 }
@const.537 = private constant [11 x i8] c"GOARCH=arm\00", align 1
@const.538 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.537, i32 0, i32 0), i64 10 }
@command_line_arguments.DarwinArmEnv..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %IPST.3, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.DarwinArmEnv to i64) }
@const.539 = private constant [13 x i8] c"GOARCH=arm64\00", align 1
@const.540 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.539, i32 0, i32 0), i64 12 }
@type...67x.7string = weak constant %ArrayType.0 { %_type.0 { i64 112, i64 104, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkfa, i32 0, i32 0), { i8*, i64 }* @go..C242, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 7 }, comdat
@const.541 = private constant [10 x i8] c"[7]string\00", align 1
@go..C242 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.541, i32 0, i32 0), i64 9 }
@command_line_arguments.DarwinArm64Env..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %IPST.3, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.DarwinArm64Env to i64) }
@const.542 = private constant [16 x i8] c"iphonesimulator\00", align 1
@const.544 = private constant [40 x i8] c" -mios-simulator-version-min=6.1 -arch \00", align 1
@const.545 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.544, i32 0, i32 0), i64 39 }
@const.546 = private constant [11 x i8] c"GOARCH=386\00", align 1
@const.547 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.546, i32 0, i32 0), i64 10 }
@command_line_arguments.Darwin386Env..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %IPST.3, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.Darwin386Env to i64) }
@const.548 = private constant [46 x i8] c" -mios-simulator-version-min=6.1 -arch x86_64\00", align 1
@const.549 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.548, i32 0, i32 0), i64 45 }
@const.550 = private constant [13 x i8] c"GOARCH=amd64\00", align 1
@const.551 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.550, i32 0, i32 0), i64 12 }
@command_line_arguments.DarwinAmd64Env..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %IPST.3, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.DarwinAmd64Env to i64) }
@const.552 = private constant [112 x i8] c"Invalid or unsupported Go installation. See https://gomatcha.io/guide/installation/ for detailed instructions.\0A\00", align 1
@const.553 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([112 x i8], [112 x i8]* @const.552, i32 0, i32 0), i64 111 }
@const.554 = private constant [3 x i8] c"go\00", align 1
@const.556 = private constant [27 x i8] c"go was not found in $PATH.\00", align 1
@const.558 = private unnamed_addr constant [16 x i8] c"go version go1.4"
@const.559 = private unnamed_addr constant [16 x i8] c"go version go1.5"
@const.560 = private unnamed_addr constant [16 x i8] c"go version go1.6"
@const.561 = private constant [28 x i8] c"Go 1.7 or newer is required\00", align 1
@command_line_arguments.FindEnv..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %IPST.3*, i64, i64)* @command_line_arguments.FindEnv to i64) }
@const.563 = private constant [4 x i8] c"pkg\00", align 1
@const.564 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.563, i32 0, i32 0), i64 3 }
@const.565 = private constant [23 x i8] c"$GOPATH does not exist\00", align 1
@command_line_arguments.MatchaPkgPath..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.MatchaPkgPath to i64) }
@const.567 = private constant [5 x i8] c"GOOS\00", align 1
@const.569 = private constant [34 x i8] c"PkgPath(): Missing GOOS or GOARCH\00", align 1
@const.571 = private constant [6 x i8] c"/pkg_\00", align 1
@const.572 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.571, i32 0, i32 0), i64 5 }
@const.573 = private constant [2 x i8] c"_\00", align 1
@const.574 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.573, i32 0, i32 0), i64 1 }
@command_line_arguments.PkgPath..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }, %error.0 }*, i8*, %Flags.0*, i64, i64, %IPST.3*)* @command_line_arguments.PkgPath to i64) }
@const.575 = private constant [4 x i8] c"env\00", align 1
@const.576 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.575, i32 0, i32 0), i64 3 }
@command_line_arguments.GoEnv..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64)* @command_line_arguments.GoEnv to i64) }
@const.577 = private unnamed_addr constant [1 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.317, i32 0, i32 0), i64 7 }]
@type...622x.7uint8 = weak constant %ArrayType.0 { %_type.0 { i64 22, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C243, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 22 }, comdat
@const.578 = private constant [10 x i8] c"[22]uint8\00", align 1
@go..C243 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.578, i32 0, i32 0), i64 9 }
@const.579 = private unnamed_addr constant [22 x i8] c"go version goX.X.X x/x"
@command_line_arguments.GoVersion..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64, i64 }, %error.0 }*, i8*, %Flags.0*)* @command_line_arguments.GoVersion to i64) }
@const.580 = private constant [65 x i8] c"Matcha not initialized for this target. Missing directory at %v.\00", align 1
@const.582 = private constant [9 x i8] c"-pkgdir=\00", align 1
@const.583 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.582, i32 0, i32 0), i64 8 }
@const.584 = private constant [6 x i8] c"build\00", align 1
@const.585 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.584, i32 0, i32 0), i64 5 }
@const.586 = private constant [6 x i8] c"-tags\00", align 1
@const.587 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.586, i32 0, i32 0), i64 5 }
@const.588 = private constant [3 x i8] c"-v\00", align 1
@const.589 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.588, i32 0, i32 0), i64 2 }
@const.590 = private constant [3 x i8] c"-x\00", align 1
@const.591 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.590, i32 0, i32 0), i64 2 }
@const.592 = private constant [9 x i8] c"-gcflags\00", align 1
@const.593 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.592, i32 0, i32 0), i64 8 }
@const.594 = private constant [9 x i8] c"-ldflags\00", align 1
@const.595 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.594, i32 0, i32 0), i64 8 }
@const.596 = private constant [6 x i8] c"-work\00", align 1
@const.597 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.596, i32 0, i32 0), i64 5 }
@command_line_arguments.GoBuild..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, %IPST.3*, %IPST.3*, %IPST.3*, i64, i64, i64, i64, %IPST.3*)* @command_line_arguments.GoBuild to i64) }
@const.598 = private constant [8 x i8] c"install\00", align 1
@const.599 = private unnamed_addr constant [1 x { i8*, i64 }] [{ i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.598, i32 0, i32 0), i64 7 }]
@command_line_arguments.InstallPkg..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Flags.0*, i64, i64, i64, i64, { i8*, i64 }*, %IPST.3*, %IPST.3*)* @command_line_arguments.InstallPkg to i64) }
@type..map.6string.7.1go_build.Package = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 1185907539, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C244, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_build.Package, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.600 = private constant [36 x i8] c"map[string]*\09go_build\09build.Package\00", align 1
@go..C244 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.600, i32 0, i32 0), i64 35 }
@type...1go_build.Package = external constant %PtrType.0
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 -734474364, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C245, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C252, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.601 = private constant [92 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]*\09go_build\09build.Package; overflow * }\00", align 1
@go..C245 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([92 x i8], [92 x i8]* @const.601, i32 0, i32 0), i64 91 }
@go..C246 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.114, i32 0, i32 0), i64 7 }
@go..C247 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.119, i32 0, i32 0), i64 4 }
@go..C248 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.120, i32 0, i32 0), i64 6 }
@type...68x.7.1go_build.Package = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 2074753377, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C249, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_build.Package, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1go_build.Package, i32 0, i32 0), i64 8 }, comdat
@const.602 = private constant [28 x i8] c"[8]*\09go_build\09build.Package\00", align 1
@go..C249 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @const.602, i32 0, i32 0), i64 27 }
@type...6.7.1go_build.Package = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1110106953, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C250, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_build.Package, i32 0, i32 0) }, comdat
@const.603 = private constant [27 x i8] c"[]*\09go_build\09build.Package\00", align 1
@go..C250 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @const.603, i32 0, i32 0), i64 26 }
@go..C251 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.123, i32 0, i32 0), i64 8 }
@go..C252 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C246, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C247, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C248, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7.1go_build.Package, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C251, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1467718116, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C253, %uncommonType.0* null, %_type.0* null }, %IPST.24 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C264, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.604 = private constant [310 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09go_build\09build.Package; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09go_build\09build.Package; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C253 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([310 x i8], [310 x i8]* @const.604, i32 0, i32 0), i64 309 }
@go..C254 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.125, i32 0, i32 0), i64 5 }
@go..C255 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.128, i32 0, i32 0), i64 5 }
@go..C256 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.129, i32 0, i32 0), i64 1 }
@go..C257 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.130, i32 0, i32 0), i64 9 }
@go..C258 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.133, i32 0, i32 0), i64 5 }
@go..C259 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.136, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1133312073, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C260, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.605 = private constant [93 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]*\09go_build\09build.Package; overflow * }\00", align 1
@go..C260 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([93 x i8], [93 x i8]* @const.605, i32 0, i32 0), i64 92 }
@go..C261 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.138, i32 0, i32 0), i64 10 }
@go..C262 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.139, i32 0, i32 0), i64 9 }
@go..C263 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.142, i32 0, i32 0), i64 5 }
@go..C264 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C254, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C255, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C256, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C257, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C258, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C259, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C261, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C262, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C263, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.606 = private constant [20 x i8] c"go importall %v %v\0A\00", align 1
@type...60x.7.1go_build.Package = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 2074753377, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C265, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_build.Package, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1go_build.Package, i32 0, i32 0), i64 0 }, comdat
@const.609 = private constant [28 x i8] c"[0]*\09go_build\09build.Package\00", align 1
@go..C265 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @const.609, i32 0, i32 0), i64 27 }
@command_line_arguments.ImportAll..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %IPST.9, %error.0 }*, i8*, %Flags.0*, %Context.1*, %IPST.3*, i64, i64, i64)* @command_line_arguments.ImportAll to i64) }
@const.611 = private constant [2 x i8] c"C\00", align 1
@command_line_arguments.Import..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, %Context.1*, i64, i64, i64, i64, i64, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* @command_line_arguments.Import to i64) }
@command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash to i64) }
@command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq to i64) }
@gcbits..GGGGGGa = weak constant [4 x i8] c"\FF\FF\FF?", comdat
@gcbits..pppppppa = weak constant [5 x i8] c"\EF\BD\F7\DE\03", comdat
@gcbits..ppppa = weak constant [3 x i8] c"\EF\BD\07", comdat
@gcbits..pppppppppa = weak constant [6 x i8] c"\EF\BD\F7\DE{\0F", comdat
@gcbits..pa = weak constant [1 x i8] c"\0F", comdat
@gcbits..GGaa = weak constant [2 x i8] c"\FF\03", comdat
@gcbits..ppppppppppppa = weak constant [8 x i8] c"\EF\BD\F7\DE{\EF\BD\07", comdat
@gcbits..pppa = weak constant [2 x i8] c"\EF=", comdat
@gcbits..ppaa = weak constant [2 x i8] c"\EF\01", comdat
@go..C0 = internal global { i8*, i64, [26 x { i8*, i64, i64, i8* }] } { i8* null, i64 26, [26 x { i8*, i64, i64, i8* }] [{ i8*, i64, i64, i8* } { i8* bitcast ({ i8*, i64 }* @command_line_arguments.BindFile to i8*), i64 16, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C18 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C20 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C21 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([6 x %method.0]* @go..C32 to i8*), i64 240, i64 240, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..GGGGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %structField.0]* @go..C49 to i8*), i64 280, i64 272, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..pppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C65 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C97 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %structField.0]* @go..C100 to i8*), i64 40, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %imethod.0]* @go..C107 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C117 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C119 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C120 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %method.0]* @go..C122 to i8*), i64 80, i64 80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..GGaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([12 x %structField.0]* @go..C143 to i8*), i64 480, i64 472, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @gcbits..ppppppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C153 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C164 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C176 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C195 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %structField.0]* @go..C214 to i8*), i64 280, i64 272, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..pppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C218 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C221 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C228 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C240 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C252 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C264 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }] }

define { i64, i64 } @command_line_arguments.ValidateAndroidInstall(i8* nest nocapture readnone %nest.0, %Flags.0* %f) #0 !dbg !315 {
entry:
  %tmp.2.i = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.2.i = alloca { { i8*, i64 }, %error.0 }, align 8
  %sret.actual.3.i = alloca { { i8*, i64 }, %error.0 }, align 8
  %sret.actual.4.i = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmp.1 = alloca %IPST.2, align 8
  %tmpv.3 = alloca { i8*, i64 }, align 8
  %tmpv.4 = alloca [1 x %IPST.16], align 8
  %sret.actual.1 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !347, metadata !DIExpression()), !dbg !348
  %0 = bitcast [2 x { i8*, i64 }]* %tmp.2.i to i8*, !dbg !349
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0), !dbg !349
  %1 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.2.i to i8*, !dbg !349
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1), !dbg !349
  %2 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.3.i to i8*, !dbg !349
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2), !dbg !349
  %3 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.4.i to i8*, !dbg !349
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3), !dbg !349
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !353, metadata !DIExpression()), !dbg !349
  call void @command_line_arguments.AndroidPlatformPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.2.i, i8* nest undef, %Flags.0* %f), !dbg !354
  %tmpv.5.sroa.3.0.cast.30.sroa_idx49.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.2.i, i64 0, i32 1, i32 0, !dbg !354
  %tmpv.5.sroa.3.0.copyload50.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.5.sroa.3.0.cast.30.sroa_idx49.i, align 8, !dbg !354
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.5.sroa.3.0.copyload50.i, metadata !356, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !357
  %icmp.1.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.5.sroa.3.0.copyload50.i, null, !dbg !358
  br i1 %icmp.1.i, label %else.1.i, label %then.1.i

then.1.i:                                         ; preds = %entry
  %tmpv.5.sroa.4.0.cast.30.sroa_idx51.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.2.i, i64 0, i32 1, i32 1, !dbg !354
  %4 = bitcast i8** %tmpv.5.sroa.4.0.cast.30.sroa_idx51.i to i64*, !dbg !354
  %tmpv.5.sroa.4.0.copyload521.i = load i64, i64* %4, align 8, !dbg !354
  call void @llvm.dbg.value(metadata i8** %tmpv.5.sroa.4.0.cast.30.sroa_idx51.i, metadata !356, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !357
  %5 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.5.sroa.3.0.copyload50.i to i64, !dbg !359
  call void @llvm.dbg.value(metadata i64 %5, metadata !360, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !361
  call void @llvm.dbg.value(metadata i64 %tmpv.5.sroa.4.0.copyload521.i, metadata !360, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !361
  %ld.1.fca.0.insert.i = insertvalue { i64, i64 } undef, i64 %5, 0, !dbg !359
  %ld.1.fca.1.insert.i = insertvalue { i64, i64 } %ld.1.fca.0.insert.i, i64 %tmpv.5.sroa.4.0.copyload521.i, 1, !dbg !359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0), !dbg !359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1), !dbg !359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2), !dbg !359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !359
  br label %command_line_arguments.validateAndroidInstall.exit, !dbg !359

else.1.i:                                         ; preds = %entry
  call void @command_line_arguments.NDKPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.3.i, i8* nest undef, %Flags.0* %f), !dbg !362
  %tmpv.8.sroa.3.0.cast.46.sroa_idx32.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.3.i, i64 0, i32 1, i32 0, !dbg !362
  %tmpv.8.sroa.3.0.copyload33.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.8.sroa.3.0.cast.46.sroa_idx32.i, align 8, !dbg !362
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.8.sroa.3.0.copyload33.i, metadata !364, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !365
  %icmp.2.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.8.sroa.3.0.copyload33.i, null, !dbg !366
  br i1 %icmp.2.i, label %else.2.i, label %then.2.i

then.2.i:                                         ; preds = %else.1.i
  %tmpv.8.sroa.4.0.cast.46.sroa_idx34.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.3.i, i64 0, i32 1, i32 1, !dbg !362
  %6 = bitcast i8** %tmpv.8.sroa.4.0.cast.46.sroa_idx34.i to i64*, !dbg !362
  %tmpv.8.sroa.4.0.copyload352.i = load i64, i64* %6, align 8, !dbg !362
  call void @llvm.dbg.value(metadata i8** %tmpv.8.sroa.4.0.cast.46.sroa_idx34.i, metadata !364, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !365
  %7 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.8.sroa.3.0.copyload33.i to i64, !dbg !367
  call void @llvm.dbg.value(metadata i64 %7, metadata !360, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !361
  call void @llvm.dbg.value(metadata i64 %tmpv.8.sroa.4.0.copyload352.i, metadata !360, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !361
  %ld.2.fca.0.insert.i = insertvalue { i64, i64 } undef, i64 %7, 0, !dbg !367
  %ld.2.fca.1.insert.i = insertvalue { i64, i64 } %ld.2.fca.0.insert.i, i64 %tmpv.8.sroa.4.0.copyload352.i, 1, !dbg !367
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0), !dbg !367
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1), !dbg !367
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2), !dbg !367
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !367
  br label %command_line_arguments.validateAndroidInstall.exit, !dbg !367

else.2.i:                                         ; preds = %else.1.i
  call void @command_line_arguments.LookPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.4.i, i8* nest undef, %Flags.0* %f, i64 ptrtoint ([6 x i8]* @const.7 to i64), i64 5), !dbg !368
  %tmpv.11.sroa.3.0.cast.63.sroa_idx15.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.4.i, i64 0, i32 1, i32 0, !dbg !368
  %tmpv.11.sroa.3.0.copyload16.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.11.sroa.3.0.cast.63.sroa_idx15.i, align 8, !dbg !368
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.11.sroa.3.0.copyload16.i, metadata !370, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !371
  call void @llvm.dbg.value(metadata { { i8*, i64 }, %error.0 }* %sret.actual.4.i, metadata !370, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !371
  %icmp.3.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.11.sroa.3.0.copyload16.i, null, !dbg !372
  br i1 %icmp.3.i, label %else.3.i, label %then.3.i

then.3.i:                                         ; preds = %else.2.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 bitcast ({ i8*, i64 }* @const.10 to i8*), i64 16, i1 false), !dbg !373
  %tmpv.14.sroa.0.0.cast.80.sroa_idx.i = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.2.i, i64 0, i64 1, !dbg !373
  %tmpv.14.sroa.0.0.cast.80.sroa_cast.i = bitcast { i8*, i64 }* %tmpv.14.sroa.0.0.cast.80.sroa_idx.i to i64*, !dbg !373
  store i64 ptrtoint ([82 x i8]* @const.188 to i64), i64* %tmpv.14.sroa.0.0.cast.80.sroa_cast.i, align 8, !dbg !373
  %tmpv.14.sroa.2.0.cast.80.sroa_idx6.i = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.2.i, i64 0, i64 1, i32 1, !dbg !373
  store i64 81, i64* %tmpv.14.sroa.2.0.cast.80.sroa_idx6.i, align 8, !dbg !373
  %call.3.i = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.2.i), !dbg !373
  %call.3.fca.0.extract.i = extractvalue { i64, i64 } %call.3.i, 0, !dbg !373
  %call.3.fca.1.extract.i = extractvalue { i64, i64 } %call.3.i, 1, !dbg !373
  %call.4.i = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 %call.3.fca.0.extract.i, i64 %call.3.fca.1.extract.i, %IPST.2* byval nonnull @const.11), !dbg !374
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0), !dbg !375
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1), !dbg !375
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2), !dbg !375
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !375
  br label %command_line_arguments.validateAndroidInstall.exit, !dbg !375

else.3.i:                                         ; preds = %else.2.i
  call void @llvm.dbg.value(metadata i64 0, metadata !360, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !361
  call void @llvm.dbg.value(metadata i64 0, metadata !360, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !361
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0), !dbg !376
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1), !dbg !376
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2), !dbg !376
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !376
  br label %command_line_arguments.validateAndroidInstall.exit, !dbg !376

command_line_arguments.validateAndroidInstall.exit: ; preds = %else.3.i, %then.3.i, %then.2.i, %then.1.i
  %call.08 = phi { i64, i64 } [ %ld.1.fca.1.insert.i, %then.1.i ], [ %ld.2.fca.1.insert.i, %then.2.i ], [ %call.4.i, %then.3.i ], [ zeroinitializer, %else.3.i ]
  %call.0.fca.0.extract = extractvalue { i64, i64 } %call.08, 0, !dbg !377
  call void @llvm.dbg.value(metadata i64 %call.0.fca.0.extract, metadata !378, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !379
  %icmp.0 = icmp eq i64 %call.0.fca.0.extract, 0, !dbg !380
  br i1 %icmp.0, label %fallthrough.0, label %then.0

then.0:                                           ; preds = %command_line_arguments.validateAndroidInstall.exit
  %call.1 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !381
  %cast.11 = bitcast { i8*, i64 }* %tmpv.3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.11, i8* align 8 bitcast ({ i8*, i64 }* @const.2 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.1, i8* nonnull %cast.11), !dbg !381
  %tmp.0.sroa.0.0.cast.16.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.4, i64 0, i64 0, i32 0, !dbg !381
  store %_type.0* @string..d, %_type.0** %tmp.0.sroa.0.0.cast.16.sroa_idx, align 8, !dbg !381
  %tmp.0.sroa.2.0.cast.16.sroa_idx7 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.4, i64 0, i64 0, i32 1, !dbg !381
  store i8* %call.1, i8** %tmp.0.sroa.2.0.cast.16.sroa_idx7, align 8, !dbg !381
  %field.2 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.1, i64 0, i32 0, !dbg !381
  %cast.18 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.4, i64 0, i64 0, !dbg !381
  store %IPST.16* %cast.18, %IPST.16** %field.2, align 8, !dbg !381
  %field.3 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.1, i64 0, i32 1, !dbg !381
  store i64 1, i64* %field.3, align 8, !dbg !381
  %field.4 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.1, i64 0, i32 2, !dbg !381
  store i64 1, i64* %field.4, align 8, !dbg !381
  call void @fmt.Println({ i64, %error.0 }* nonnull sret %sret.actual.1, i8* nest undef, %IPST.2* byval nonnull %tmp.1), !dbg !381
  br label %fallthrough.0

fallthrough.0:                                    ; preds = %command_line_arguments.validateAndroidInstall.exit, %then.0
  call void @llvm.dbg.value(metadata i64 %call.0.fca.0.extract, metadata !382, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !383
  ret { i64, i64 } %call.08, !dbg !384
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

declare i8* @runtime.newobject(i8*, %_type.0*) local_unnamed_addr #0

declare void @runtime.typedmemmove(i8*, %_type.0*, i8*, i8*) local_unnamed_addr #0

declare void @fmt.Println({ i64, %error.0 }*, i8*, %IPST.2*) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

define void @command_line_arguments.AndroidPlatformPath({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.1, i8* nest nocapture readnone %nest.3, %Flags.0* %f) #0 !dbg !385 {
entry:
  %tmp.14 = alloca %IPST.3, align 8
  %tmp.13 = alloca %IPST.3, align 8
  %tmp.10 = alloca [2 x { i8*, i64 }], align 8
  %tmp.9 = alloca %IPST.3, align 8
  %androidHome = alloca { i8*, i64 }, align 8
  %sret.actual.15 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.38 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.20 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.50 = alloca [1 x { i8*, i64 }], align 8
  %sret.actual.22 = alloca { i64, %error.0 }, align 8
  %tmpv.62 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.64 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !392, metadata !DIExpression()), !dbg !393
  %androidHome.0.sroa_cast = bitcast { i8*, i64 }* %androidHome to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %androidHome.0.sroa_cast)
  call void @command_line_arguments.AndroidSDKPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.15, i8* nest undef, %Flags.0* %f), !dbg !394
  %tmpv.32.sroa.0.0.cast.185.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.15 to i8*, !dbg !394
  %tmpv.32.sroa.3.0.cast.185.sroa_idx142 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.15, i64 0, i32 1, i32 0, !dbg !394
  %tmpv.32.sroa.3.0.copyload143 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.32.sroa.3.0.cast.185.sroa_idx142, align 8, !dbg !394
  %tmpv.32.sroa.4.0.cast.185.sroa_idx144 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.15, i64 0, i32 1, i32 1, !dbg !394
  %0 = bitcast i8** %tmpv.32.sroa.4.0.cast.185.sroa_idx144 to i64*, !dbg !394
  %tmpv.32.sroa.4.0.copyload145231 = load i64, i64* %0, align 8, !dbg !394
  %androidHome249 = bitcast { i8*, i64 }* %androidHome to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %androidHome249, i8* nonnull align 8 %tmpv.32.sroa.0.0.cast.185.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.32.sroa.3.0.copyload143, metadata !396, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !397
  call void @llvm.dbg.value(metadata i8** %tmpv.32.sroa.4.0.cast.185.sroa_idx144, metadata !396, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !397
  %icmp.6 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.32.sroa.3.0.copyload143, null, !dbg !398
  br i1 %icmp.6, label %else.6, label %then.6

then.6:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !400
  %1 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.32.sroa.3.0.copyload143 to i64, !dbg !401
  call void @llvm.dbg.value(metadata i64 %1, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !403
  call void @llvm.dbg.value(metadata i64 %tmpv.32.sroa.4.0.copyload145231, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !403
  %tmp.8.sroa.3.0.cast.206.sroa_idx217 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !401
  %tmp.8.sroa.3.0.cast.206.sroa_cast = bitcast %error.0* %tmp.8.sroa.3.0.cast.206.sroa_idx217 to i64*, !dbg !401
  %2 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.1 to i8*, !dbg !401
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !401
  store i64 %1, i64* %tmp.8.sroa.3.0.cast.206.sroa_cast, align 8, !dbg !401
  %tmp.8.sroa.4.0.cast.206.sroa_idx218 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, i32 1, !dbg !401
  %tmp.8.sroa.4.0.cast.206.sroa_cast = bitcast i8** %tmp.8.sroa.4.0.cast.206.sroa_idx218 to i64*, !dbg !401
  store i64 %tmpv.32.sroa.4.0.copyload145231, i64* %tmp.8.sroa.4.0.cast.206.sroa_cast, align 8, !dbg !401
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %androidHome.0.sroa_cast), !dbg !401
  ret void, !dbg !401

else.6:                                           ; preds = %entry
  %cast.211 = bitcast [2 x { i8*, i64 }]* %tmpv.38 to i8*, !dbg !404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.211, i8* nonnull align 8 %androidHome.0.sroa_cast, i64 16, i1 false), !dbg !404
  %index.8 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.38, i64 0, i64 1, !dbg !404
  %cast.213 = bitcast { i8*, i64 }* %index.8 to i8*, !dbg !404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.213, i8* align 8 bitcast ({ i8*, i64 }* @const.20 to i8*), i64 16, i1 false), !dbg !404
  %field.26 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.9, i64 0, i32 0, !dbg !404
  %cast.215 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.38, i64 0, i64 0, !dbg !404
  store { i8*, i64 }* %cast.215, { i8*, i64 }** %field.26, align 8, !dbg !404
  %field.27 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.9, i64 0, i32 1, !dbg !404
  store i64 2, i64* %field.27, align 8, !dbg !404
  %field.28 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.9, i64 0, i32 2, !dbg !404
  store i64 2, i64* %field.28, align 8, !dbg !404
  %call.14 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.9), !dbg !404
  %call.14.fca.0.extract = extractvalue { i64, i64 } %call.14, 0, !dbg !404
  %call.14.fca.1.extract = extractvalue { i64, i64 } %call.14, 1, !dbg !404
  call void @llvm.dbg.value(metadata i64 %call.14.fca.0.extract, metadata !405, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !406
  call void @llvm.dbg.value(metadata i64 %call.14.fca.1.extract, metadata !405, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !406
  %call.18 = call i8 @command_line_arguments.IsDir(i8* nest undef, %Flags.0* %f, i64 %call.14.fca.0.extract, i64 %call.14.fca.1.extract), !dbg !407
  %icmp.7 = icmp eq i8 %call.18, 0, !dbg !408
  br i1 %icmp.7, label %then.7, label %else.7

then.7:                                           ; preds = %else.6
  %cast.227 = bitcast [2 x { i8*, i64 }]* %tmp.10 to i8*, !dbg !409
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.227, i8* align 8 bitcast ({ i8*, i64 }* @const.22 to i8*), i64 16, i1 false), !dbg !409
  %tmpv.40.sroa.0.0.cast.229.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.10, i64 0, i64 1, !dbg !409
  %tmpv.40.sroa.0.0.cast.229.sroa_cast = bitcast { i8*, i64 }* %tmpv.40.sroa.0.0.cast.229.sroa_idx to i64*, !dbg !409
  store i64 ptrtoint ([52 x i8]* @const.182 to i64), i64* %tmpv.40.sroa.0.0.cast.229.sroa_cast, align 8, !dbg !409
  %tmpv.40.sroa.2.0.cast.229.sroa_idx54 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.10, i64 0, i64 1, i32 1, !dbg !409
  store i64 51, i64* %tmpv.40.sroa.2.0.cast.229.sroa_idx54, align 8, !dbg !409
  %call.16 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.10), !dbg !409
  %call.16.fca.0.extract = extractvalue { i64, i64 } %call.16, 0, !dbg !409
  %call.16.fca.1.extract = extractvalue { i64, i64 } %call.16, 1, !dbg !409
  %call.17 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 %call.16.fca.0.extract, i64 %call.16.fca.1.extract, %IPST.2* byval nonnull @const.11), !dbg !410
  %call.17.fca.0.extract = extractvalue { i64, i64 } %call.17, 0, !dbg !410
  %call.17.fca.1.extract = extractvalue { i64, i64 } %call.17, 1, !dbg !410
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 %call.17.fca.0.extract, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !403
  call void @llvm.dbg.value(metadata i64 %call.17.fca.1.extract, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !403
  %tmp.11.sroa.3.0.cast.247.sroa_idx220 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !411
  %tmp.11.sroa.3.0.cast.247.sroa_cast = bitcast %error.0* %tmp.11.sroa.3.0.cast.247.sroa_idx220 to i64*, !dbg !411
  %3 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.1 to i8*, !dbg !411
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false), !dbg !411
  store i64 %call.17.fca.0.extract, i64* %tmp.11.sroa.3.0.cast.247.sroa_cast, align 8, !dbg !411
  %tmp.11.sroa.4.0.cast.247.sroa_idx221 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, i32 1, !dbg !411
  %tmp.11.sroa.4.0.cast.247.sroa_cast = bitcast i8** %tmp.11.sroa.4.0.cast.247.sroa_idx221 to i64*, !dbg !411
  store i64 %call.17.fca.1.extract, i64* %tmp.11.sroa.4.0.cast.247.sroa_cast, align 8, !dbg !411
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %androidHome.0.sroa_cast), !dbg !411
  ret void, !dbg !411

else.7:                                           ; preds = %else.6
  call void @command_line_arguments.ReadDirNames({ %IPST.3, %error.0 }* nonnull sret %sret.actual.20, i8* nest undef, %Flags.0* %f, i64 %call.14.fca.0.extract, i64 %call.14.fca.1.extract), !dbg !412
  %tmpv.45.sroa.5.sroa.0.0.tmpv.45.sroa.5.0.cast.254.sroa_cast.sroa_idx = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.20, i64 0, i32 1, i32 0, !dbg !412
  %tmpv.45.sroa.5.sroa.0.0.copyload135 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.45.sroa.5.sroa.0.0.tmpv.45.sroa.5.0.cast.254.sroa_cast.sroa_idx, align 8, !dbg !412
  call void @llvm.dbg.value(metadata { %IPST.3, %error.0 }* %sret.actual.20, metadata !413, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !414
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.45.sroa.5.sroa.0.0.copyload135, metadata !396, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !397
  %icmp.8 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.45.sroa.5.sroa.0.0.copyload135, null, !dbg !415
  br i1 %icmp.8, label %else.8, label %then.8

then.8:                                           ; preds = %else.7
  %tmpv.45.sroa.5.sroa.3.0.tmpv.45.sroa.5.0.cast.254.sroa_cast.sroa_idx136 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.20, i64 0, i32 1, i32 1, !dbg !412
  %4 = bitcast i8** %tmpv.45.sroa.5.sroa.3.0.tmpv.45.sroa.5.0.cast.254.sroa_cast.sroa_idx136 to i64*, !dbg !412
  %tmpv.45.sroa.5.sroa.3.0.copyload137232 = load i64, i64* %4, align 8, !dbg !412
  call void @llvm.dbg.value(metadata i8** %tmpv.45.sroa.5.sroa.3.0.tmpv.45.sroa.5.0.cast.254.sroa_cast.sroa_idx136, metadata !396, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !397
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !400
  %5 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.45.sroa.5.sroa.0.0.copyload135 to i64, !dbg !416
  call void @llvm.dbg.value(metadata i64 %5, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !403
  call void @llvm.dbg.value(metadata i64 %tmpv.45.sroa.5.sroa.3.0.copyload137232, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !403
  %tmp.12.sroa.3.0.cast.275.sroa_idx223 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !416
  %tmp.12.sroa.3.0.cast.275.sroa_cast = bitcast %error.0* %tmp.12.sroa.3.0.cast.275.sroa_idx223 to i64*, !dbg !416
  %6 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.1 to i8*, !dbg !416
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false), !dbg !416
  store i64 %5, i64* %tmp.12.sroa.3.0.cast.275.sroa_cast, align 8, !dbg !416
  %tmp.12.sroa.4.0.cast.275.sroa_idx224 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, i32 1, !dbg !416
  %tmp.12.sroa.4.0.cast.275.sroa_cast = bitcast i8** %tmp.12.sroa.4.0.cast.275.sroa_idx224 to i64*, !dbg !416
  store i64 %tmpv.45.sroa.5.sroa.3.0.copyload137232, i64* %tmp.12.sroa.4.0.cast.275.sroa_cast, align 8, !dbg !416
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %androidHome.0.sroa_cast), !dbg !416
  ret void, !dbg !416

else.8:                                           ; preds = %else.7
  %tmpv.45.sroa.3.0.cast.254.sroa_idx96 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.20, i64 0, i32 0, i32 1, !dbg !412
  %tmpv.45.sroa.3.0.copyload97 = load i64, i64* %tmpv.45.sroa.3.0.cast.254.sroa_idx96, align 8, !dbg !412
  call void @llvm.dbg.value(metadata i64 %tmpv.45.sroa.3.0.copyload97, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !414
  %tmpv.45.sroa.0.0.cast.254.sroa_idx = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.20, i64 0, i32 0, i32 0, !dbg !412
  %tmpv.45.sroa.0.0.copyload95 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.45.sroa.0.0.cast.254.sroa_idx, align 8, !dbg !412
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.45.sroa.0.0.copyload95, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !414
  %call.19 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !417
  %icmp.9 = icmp eq i8 %call.19, 0, !dbg !418
  br i1 %icmp.9, label %fallthrough.9.thread, label %fallthrough.9

fallthrough.9.thread:                             ; preds = %else.8
  %cast.278 = bitcast [1 x { i8*, i64 }]* %tmpv.50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.278, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.25 to i8*), i64 16, i1 false)
  %cast.280 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.50, i64 0, i64 0, !dbg !419
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.280, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !414
  call void @llvm.dbg.value(metadata i64 1, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !414
  call void @llvm.dbg.value(metadata i64 1, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !414
  call void @llvm.dbg.value(metadata i64 %tmpv.45.sroa.3.0.copyload97, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !414
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.45.sroa.0.0.copyload95, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !414
  call void @llvm.dbg.value(metadata i64 0, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 0, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 0, metadata !422, metadata !DIExpression()), !dbg !423
  br label %else.10.lr.ph

fallthrough.9:                                    ; preds = %else.8
  call void @llvm.dbg.value(metadata i64 %tmpv.45.sroa.3.0.copyload97, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !414
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.45.sroa.0.0.copyload95, metadata !413, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !414
  call void @llvm.dbg.value(metadata i64 0, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 0, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 0, metadata !422, metadata !DIExpression()), !dbg !423
  %icmp.19242 = icmp sgt i64 %tmpv.45.sroa.3.0.copyload97, 0, !dbg !424
  br i1 %icmp.19242, label %else.10.lr.ph, label %then.17

else.10.lr.ph:                                    ; preds = %fallthrough.9.thread, %fallthrough.9
  %platformsDirNames.sroa.9.0252 = phi i64 [ 1, %fallthrough.9.thread ], [ %tmpv.45.sroa.3.0.copyload97, %fallthrough.9 ]
  %platformsDirNames.sroa.0.0251 = phi { i8*, i64 }* [ %cast.280, %fallthrough.9.thread ], [ %tmpv.45.sroa.0.0.copyload95, %fallthrough.9 ]
  %tmpv.57.sroa.0.0.cast.306.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.22, i64 0, i32 0
  %tmpv.57.sroa.3.sroa.0.0.tmpv.57.sroa.3.0.cast.306.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.22, i64 0, i32 1, i32 0
  %platformsDir.sroa.0.0.cast.312.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.62 to i64*
  %platformsDir.sroa.10.0.cast.312.sroa_idx106 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.62, i64 0, i64 0, i32 1
  %i.sroa.0.0.cast.314.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.62, i64 0, i64 1
  %i.sroa.0.0.cast.314.sroa_cast = bitcast { i8*, i64 }* %i.sroa.0.0.cast.314.sroa_idx to i64*
  %i.sroa.7.0.cast.314.sroa_idx42 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.62, i64 0, i64 1, i32 1
  %field.45 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.13, i64 0, i32 0
  %cast.316 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.62, i64 0, i64 0
  %field.46 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.13, i64 0, i32 1
  %field.47 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.13, i64 0, i32 2
  %p.sroa.0.0.cast.322.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.64 to i64*
  %p.sroa.5.0.cast.322.sroa_idx13 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.64, i64 0, i64 0, i32 1
  %index.14 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.64, i64 0, i64 1
  %cast.324 = bitcast { i8*, i64 }* %index.14 to i8*
  %field.48 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.14, i64 0, i32 0
  %cast.326 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.64, i64 0, i64 0
  %field.49 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.14, i64 0, i32 1
  %field.50 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.14, i64 0, i32 2
  br label %else.10

else.10:                                          ; preds = %label.2, %else.10.lr.ph
  %apiPath.sroa.9.0246 = phi i64 [ 0, %else.10.lr.ph ], [ %apiPath.sroa.9.1, %label.2 ]
  %apiPath.sroa.0.0245 = phi i64 [ 0, %else.10.lr.ph ], [ %apiPath.sroa.0.1, %label.2 ]
  %apiVer.0244 = phi i64 [ 0, %else.10.lr.ph ], [ %apiVer.1, %label.2 ]
  %tmpv.51.0243 = phi i64 [ 0, %else.10.lr.ph ], [ %add.0, %label.2 ]
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.9.0246, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.0.0245, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiVer.0244, metadata !422, metadata !DIExpression()), !dbg !423
  %ptroff.0 = getelementptr { i8*, i64 }, { i8*, i64 }* %platformsDirNames.sroa.0.0251, i64 %tmpv.51.0243, !dbg !424
  %tmpv.52.sroa.0.0.cast.290.sroa_cast = bitcast { i8*, i64 }* %ptroff.0 to i64*, !dbg !424
  %tmpv.52.sroa.0.0.copyload47 = load i64, i64* %tmpv.52.sroa.0.0.cast.290.sroa_cast, align 8, !dbg !424
  %tmpv.52.sroa.3.0.cast.290.sroa_idx48 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %platformsDirNames.sroa.0.0251, i64 %tmpv.51.0243, i32 1, !dbg !424
  %tmpv.52.sroa.3.0.copyload49 = load i64, i64* %tmpv.52.sroa.3.0.cast.290.sroa_idx48, align 8, !dbg !424
  call void @llvm.dbg.value(metadata i64 %tmpv.52.sroa.0.0.copyload47, metadata !426, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !427
  call void @llvm.dbg.value(metadata i64 %tmpv.52.sroa.3.0.copyload49, metadata !426, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !427
  %call.20 = call { i64, i64 } @strings.TrimPrefix(i8* nest undef, i64 %tmpv.52.sroa.0.0.copyload47, i64 %tmpv.52.sroa.3.0.copyload49, i64 ptrtoint ([9 x i8]* @const.26 to i64), i64 8), !dbg !428
  %call.20.fca.0.extract = extractvalue { i64, i64 } %call.20, 0, !dbg !428
  %call.20.fca.1.extract = extractvalue { i64, i64 } %call.20, 1, !dbg !428
  call void @llvm.dbg.value(metadata i64 %call.20.fca.0.extract, metadata !430, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !431
  call void @llvm.dbg.value(metadata i64 %call.20.fca.1.extract, metadata !430, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !431
  %call.21 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.52.sroa.0.0.copyload47, i64 %tmpv.52.sroa.3.0.copyload49, i64 %call.20.fca.0.extract, i64 %call.20.fca.1.extract), !dbg !432
  %icmp.12 = icmp eq i8 %call.21, 1, !dbg !432
  br i1 %icmp.12, label %label.2, label %else.11

else.11:                                          ; preds = %else.10
  call void @strconv.Atoi({ i64, %error.0 }* nonnull sret %sret.actual.22, i8* nest undef, i64 %call.20.fca.0.extract, i64 %call.20.fca.1.extract), !dbg !433
  %tmpv.57.sroa.0.0.copyload8 = load i64, i64* %tmpv.57.sroa.0.0.cast.306.sroa_idx, align 8, !dbg !433
  %tmpv.57.sroa.3.sroa.0.0.copyload21 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.57.sroa.3.sroa.0.0.tmpv.57.sroa.3.0.cast.306.sroa_cast.sroa_idx, align 8, !dbg !433
  call void @llvm.dbg.value(metadata i64 %tmpv.57.sroa.0.0.copyload8, metadata !434, metadata !DIExpression()), !dbg !435
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.57.sroa.3.sroa.0.0.copyload21, metadata !436, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !435
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.22, metadata !436, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !435
  %icmp.13 = icmp ne { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.57.sroa.3.sroa.0.0.copyload21, null, !dbg !437
  %icmp.14 = icmp slt i64 %tmpv.57.sroa.0.0.copyload8, 15, !dbg !438
  %spec.select = or i1 %icmp.14, %icmp.13
  %icmp.16 = icmp slt i64 %tmpv.57.sroa.0.0.copyload8, %apiVer.0244, !dbg !439
  %tmpv.61.0.in = or i1 %icmp.16, %spec.select
  br i1 %tmpv.61.0.in, label %label.2, label %else.14

label.2:                                          ; preds = %else.14, %else.11, %else.10
  %apiVer.1 = phi i64 [ %apiVer.0244, %else.10 ], [ %apiVer.0244, %else.11 ], [ %spec.select233, %else.14 ]
  %apiPath.sroa.0.1 = phi i64 [ %apiPath.sroa.0.0245, %else.10 ], [ %apiPath.sroa.0.0245, %else.11 ], [ %spec.select234, %else.14 ]
  %apiPath.sroa.9.1 = phi i64 [ %apiPath.sroa.9.0246, %else.10 ], [ %apiPath.sroa.9.0246, %else.11 ], [ %spec.select235, %else.14 ]
  %add.0 = add nuw nsw i64 %tmpv.51.0243, 1, !dbg !424
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.9.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.0.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiVer.1, metadata !422, metadata !DIExpression()), !dbg !423
  %exitcond = icmp eq i64 %add.0, %platformsDirNames.sroa.9.0252, !dbg !424
  br i1 %exitcond, label %else.16, label %else.10

else.14:                                          ; preds = %else.11
  store i64 %call.14.fca.0.extract, i64* %platformsDir.sroa.0.0.cast.312.sroa_cast, align 8, !dbg !440
  store i64 %call.14.fca.1.extract, i64* %platformsDir.sroa.10.0.cast.312.sroa_idx106, align 8, !dbg !440
  store i64 %tmpv.52.sroa.0.0.copyload47, i64* %i.sroa.0.0.cast.314.sroa_cast, align 8, !dbg !440
  store i64 %tmpv.52.sroa.3.0.copyload49, i64* %i.sroa.7.0.cast.314.sroa_idx42, align 8, !dbg !440
  store { i8*, i64 }* %cast.316, { i8*, i64 }** %field.45, align 8, !dbg !440
  store i64 2, i64* %field.46, align 8, !dbg !440
  store i64 2, i64* %field.47, align 8, !dbg !440
  %call.22 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.13), !dbg !440
  %call.22.fca.0.extract = extractvalue { i64, i64 } %call.22, 0, !dbg !440
  %call.22.fca.1.extract = extractvalue { i64, i64 } %call.22, 1, !dbg !440
  call void @llvm.dbg.value(metadata i64 %call.22.fca.0.extract, metadata !441, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !442
  call void @llvm.dbg.value(metadata i64 %call.22.fca.1.extract, metadata !441, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !442
  store i64 %call.22.fca.0.extract, i64* %p.sroa.0.0.cast.322.sroa_cast, align 8, !dbg !443
  store i64 %call.22.fca.1.extract, i64* %p.sroa.5.0.cast.322.sroa_idx13, align 8, !dbg !443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.324, i8* align 8 bitcast ({ i8*, i64 }* @const.29 to i8*), i64 16, i1 false), !dbg !443
  store { i8*, i64 }* %cast.326, { i8*, i64 }** %field.48, align 8, !dbg !443
  store i64 2, i64* %field.49, align 8, !dbg !443
  store i64 2, i64* %field.50, align 8, !dbg !443
  %call.23 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.14), !dbg !443
  %call.23.fca.0.extract = extractvalue { i64, i64 } %call.23, 0, !dbg !443
  %call.23.fca.1.extract = extractvalue { i64, i64 } %call.23, 1, !dbg !443
  %call.24 = call i8 @command_line_arguments.IsFile(i8* nest undef, %Flags.0* %f, i64 %call.23.fca.0.extract, i64 %call.23.fca.1.extract), !dbg !444
  %icmp.18 = icmp eq i8 %call.24, 0, !dbg !445
  %spec.select233 = select i1 %icmp.18, i64 %apiVer.0244, i64 %tmpv.57.sroa.0.0.copyload8
  %spec.select234 = select i1 %icmp.18, i64 %apiPath.sroa.0.0245, i64 %call.22.fca.0.extract
  %spec.select235 = select i1 %icmp.18, i64 %apiPath.sroa.9.0246, i64 %call.22.fca.1.extract
  br label %label.2

else.16:                                          ; preds = %label.2
  call void @llvm.dbg.value(metadata i64 %apiVer.1, metadata !422, metadata !DIExpression()), !dbg !423
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.0.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.9.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiVer.1, metadata !422, metadata !DIExpression()), !dbg !423
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.0.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.9.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiVer.1, metadata !422, metadata !DIExpression()), !dbg !423
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.0.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.9.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiVer.1, metadata !422, metadata !DIExpression()), !dbg !423
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.0.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.9.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiVer.1, metadata !422, metadata !DIExpression()), !dbg !423
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.0.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !421
  call void @llvm.dbg.value(metadata i64 %apiPath.sroa.9.1, metadata !420, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !421
  %icmp.20 = icmp eq i64 %apiVer.1, 0, !dbg !446
  br i1 %icmp.20, label %then.17, label %else.17

then.17:                                          ; preds = %fallthrough.9, %else.16
  %call.25 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([156 x i8]* @const.30 to i64), i64 155, %IPST.2* byval nonnull @const.11), !dbg !447
  %call.25.fca.0.extract = extractvalue { i64, i64 } %call.25, 0, !dbg !447
  %call.25.fca.1.extract = extractvalue { i64, i64 } %call.25, 1, !dbg !447
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 0, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 %call.25.fca.0.extract, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !403
  call void @llvm.dbg.value(metadata i64 %call.25.fca.1.extract, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !403
  %tmp.15.sroa.3.0.cast.348.sroa_idx226 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !448
  %tmp.15.sroa.3.0.cast.348.sroa_cast = bitcast %error.0* %tmp.15.sroa.3.0.cast.348.sroa_idx226 to i64*, !dbg !448
  %7 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.1 to i8*, !dbg !448
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false), !dbg !448
  store i64 %call.25.fca.0.extract, i64* %tmp.15.sroa.3.0.cast.348.sroa_cast, align 8, !dbg !448
  %tmp.15.sroa.4.0.cast.348.sroa_idx227 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, i32 1, !dbg !448
  %tmp.15.sroa.4.0.cast.348.sroa_cast = bitcast i8** %tmp.15.sroa.4.0.cast.348.sroa_idx227 to i64*, !dbg !448
  store i64 %call.25.fca.1.extract, i64* %tmp.15.sroa.4.0.cast.348.sroa_cast, align 8, !dbg !448
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %androidHome.0.sroa_cast), !dbg !448
  ret void, !dbg !448

else.17:                                          ; preds = %else.16
  call void @llvm.dbg.value(metadata i64 undef, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 undef, metadata !399, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !400
  call void @llvm.dbg.value(metadata i64 0, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !403
  call void @llvm.dbg.value(metadata i64 0, metadata !402, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !403
  %tmp.16.sroa.0.0.cast.362.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.1 to i64*, !dbg !449
  store i64 %apiPath.sroa.0.1, i64* %tmp.16.sroa.0.0.cast.362.sroa_cast, align 8, !dbg !449
  %tmp.16.sroa.2.0.cast.362.sroa_idx228 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 0, i32 1, !dbg !449
  store i64 %apiPath.sroa.9.1, i64* %tmp.16.sroa.2.0.cast.362.sroa_idx228, align 8, !dbg !449
  %tmp.16.sroa.3.0.cast.362.sroa_idx229 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !449
  %8 = bitcast %error.0* %tmp.16.sroa.3.0.cast.362.sroa_idx229 to i8*, !dbg !449
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false), !dbg !449
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %androidHome.0.sroa_cast), !dbg !449
  ret void, !dbg !449
}

define void @command_line_arguments.NDKPath({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.2, i8* nest nocapture readnone %nest.4, %Flags.0* %f) #0 !dbg !450 {
entry:
  %tmp.18 = alloca %IPST.3, align 8
  %sret.actual.26 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.78 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !451, metadata !DIExpression()), !dbg !452
  call void @command_line_arguments.AndroidSDKPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.26, i8* nest undef, %Flags.0* %f), !dbg !453
  %tmpv.72.sroa.3.0.cast.371.sroa_idx19 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.26, i64 0, i32 1, i32 0, !dbg !453
  %tmpv.72.sroa.3.0.copyload20 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.72.sroa.3.0.cast.371.sroa_idx19, align 8, !dbg !453
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.72.sroa.3.0.copyload20, metadata !455, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !456
  %icmp.21 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.72.sroa.3.0.copyload20, null, !dbg !457
  br i1 %icmp.21, label %else.18, label %then.18

then.18:                                          ; preds = %entry
  %tmpv.72.sroa.4.0.cast.371.sroa_idx21 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.26, i64 0, i32 1, i32 1, !dbg !453
  %0 = bitcast i8** %tmpv.72.sroa.4.0.cast.371.sroa_idx21 to i64*, !dbg !453
  %tmpv.72.sroa.4.0.copyload2289 = load i64, i64* %0, align 8, !dbg !453
  call void @llvm.dbg.value(metadata i8** %tmpv.72.sroa.4.0.cast.371.sroa_idx21, metadata !455, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !456
  call void @llvm.dbg.value(metadata i64 0, metadata !458, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !459
  call void @llvm.dbg.value(metadata i64 0, metadata !458, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !459
  %1 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.72.sroa.3.0.copyload20 to i64, !dbg !460
  call void @llvm.dbg.value(metadata i64 %1, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !462
  call void @llvm.dbg.value(metadata i64 %tmpv.72.sroa.4.0.copyload2289, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !462
  %tmp.17.sroa.3.0.cast.392.sroa_idx81 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !460
  %tmp.17.sroa.3.0.cast.392.sroa_cast = bitcast %error.0* %tmp.17.sroa.3.0.cast.392.sroa_idx81 to i64*, !dbg !460
  %2 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.2 to i8*, !dbg !460
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !460
  store i64 %1, i64* %tmp.17.sroa.3.0.cast.392.sroa_cast, align 8, !dbg !460
  %tmp.17.sroa.4.0.cast.392.sroa_idx82 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !460
  %tmp.17.sroa.4.0.cast.392.sroa_cast = bitcast i8** %tmp.17.sroa.4.0.cast.392.sroa_idx82 to i64*, !dbg !460
  store i64 %tmpv.72.sroa.4.0.copyload2289, i64* %tmp.17.sroa.4.0.cast.392.sroa_cast, align 8, !dbg !460
  ret void, !dbg !460

else.18:                                          ; preds = %entry
  %tmpv.72.sroa.0.sroa.3.0.tmpv.72.sroa.0.0.cast.371.sroa_cast.sroa_idx39 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.26, i64 0, i32 0, i32 1, !dbg !453
  %tmpv.72.sroa.0.sroa.3.0.copyload40 = load i64, i64* %tmpv.72.sroa.0.sroa.3.0.tmpv.72.sroa.0.0.cast.371.sroa_cast.sroa_idx39, align 8, !dbg !453
  call void @llvm.dbg.value(metadata i64 %tmpv.72.sroa.0.sroa.3.0.copyload40, metadata !463, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !456
  %tmpv.72.sroa.0.sroa.0.0.tmpv.72.sroa.0.0.cast.371.sroa_cast.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.26 to i64*, !dbg !453
  %tmpv.72.sroa.0.sroa.0.0.copyload38 = load i64, i64* %tmpv.72.sroa.0.sroa.0.0.tmpv.72.sroa.0.0.cast.371.sroa_cast.sroa_cast, align 8, !dbg !453
  call void @llvm.dbg.value(metadata i64 %tmpv.72.sroa.0.sroa.0.0.copyload38, metadata !463, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !456
  %path.sroa.0.0.cast.397.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.78 to i64*, !dbg !464
  store i64 %tmpv.72.sroa.0.sroa.0.0.copyload38, i64* %path.sroa.0.0.cast.397.sroa_cast, align 8, !dbg !464
  %path.sroa.9.0.cast.397.sroa_idx29 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.78, i64 0, i64 0, i32 1, !dbg !464
  store i64 %tmpv.72.sroa.0.sroa.3.0.copyload40, i64* %path.sroa.9.0.cast.397.sroa_idx29, align 8, !dbg !464
  %index.16 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.78, i64 0, i64 1, !dbg !464
  %cast.399 = bitcast { i8*, i64 }* %index.16 to i8*, !dbg !464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.399, i8* align 8 bitcast ({ i8*, i64 }* @const.33 to i8*), i64 16, i1 false), !dbg !464
  %field.60 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.18, i64 0, i32 0, !dbg !464
  %cast.401 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.78, i64 0, i64 0, !dbg !464
  store { i8*, i64 }* %cast.401, { i8*, i64 }** %field.60, align 8, !dbg !464
  %field.61 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.18, i64 0, i32 1, !dbg !464
  store i64 2, i64* %field.61, align 8, !dbg !464
  %field.62 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.18, i64 0, i32 2, !dbg !464
  store i64 2, i64* %field.62, align 8, !dbg !464
  %call.26 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.18), !dbg !464
  %call.26.fca.0.extract = extractvalue { i64, i64 } %call.26, 0, !dbg !464
  %call.26.fca.1.extract = extractvalue { i64, i64 } %call.26, 1, !dbg !464
  call void @llvm.dbg.value(metadata i64 %call.26.fca.0.extract, metadata !463, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !456
  call void @llvm.dbg.value(metadata i64 %call.26.fca.1.extract, metadata !463, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !456
  %call.28 = call i8 @command_line_arguments.IsDir(i8* nest undef, %Flags.0* %f, i64 %call.26.fca.0.extract, i64 %call.26.fca.1.extract), !dbg !465
  %icmp.22 = icmp eq i8 %call.28, 0, !dbg !466
  br i1 %icmp.22, label %then.19, label %else.19

then.19:                                          ; preds = %else.18
  %call.27 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([101 x i8]* @const.34 to i64), i64 100, %IPST.2* byval nonnull @const.11), !dbg !467
  %call.27.fca.0.extract = extractvalue { i64, i64 } %call.27, 0, !dbg !467
  %call.27.fca.1.extract = extractvalue { i64, i64 } %call.27, 1, !dbg !467
  call void @llvm.dbg.value(metadata i64 0, metadata !458, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !459
  call void @llvm.dbg.value(metadata i64 0, metadata !458, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !459
  call void @llvm.dbg.value(metadata i64 %call.27.fca.0.extract, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !462
  call void @llvm.dbg.value(metadata i64 %call.27.fca.1.extract, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !462
  %tmp.19.sroa.3.0.cast.422.sroa_idx84 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !468
  %tmp.19.sroa.3.0.cast.422.sroa_cast = bitcast %error.0* %tmp.19.sroa.3.0.cast.422.sroa_idx84 to i64*, !dbg !468
  %3 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.2 to i8*, !dbg !468
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false), !dbg !468
  store i64 %call.27.fca.0.extract, i64* %tmp.19.sroa.3.0.cast.422.sroa_cast, align 8, !dbg !468
  %tmp.19.sroa.4.0.cast.422.sroa_idx85 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !468
  %tmp.19.sroa.4.0.cast.422.sroa_cast = bitcast i8** %tmp.19.sroa.4.0.cast.422.sroa_idx85 to i64*, !dbg !468
  store i64 %call.27.fca.1.extract, i64* %tmp.19.sroa.4.0.cast.422.sroa_cast, align 8, !dbg !468
  ret void, !dbg !468

else.19:                                          ; preds = %else.18
  call void @llvm.dbg.value(metadata i64 %call.26.fca.0.extract, metadata !458, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !459
  call void @llvm.dbg.value(metadata i64 %call.26.fca.1.extract, metadata !458, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !459
  call void @llvm.dbg.value(metadata i64 0, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !462
  call void @llvm.dbg.value(metadata i64 0, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !462
  %tmp.20.sroa.0.0.cast.437.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.2 to i64*, !dbg !469
  store i64 %call.26.fca.0.extract, i64* %tmp.20.sroa.0.0.cast.437.sroa_cast, align 8, !dbg !469
  %tmp.20.sroa.2.0.cast.437.sroa_idx86 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.2, i64 0, i32 0, i32 1, !dbg !469
  store i64 %call.26.fca.1.extract, i64* %tmp.20.sroa.2.0.cast.437.sroa_idx86, align 8, !dbg !469
  %tmp.20.sroa.3.0.cast.437.sroa_idx87 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !469
  %4 = bitcast %error.0* %tmp.20.sroa.3.0.cast.437.sroa_idx87 to i8*, !dbg !469
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false), !dbg !469
  ret void, !dbg !469
}

define void @command_line_arguments.LookPath({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.14, i8* nest nocapture readnone %nest.42, %Flags.0* %f, i64 %file.chunk0, i64 %file.chunk1) #0 !dbg !470 {
entry:
  %tmp.211 = alloca %IPST.2, align 8
  %tmpv.1415 = alloca { i8*, i64 }, align 8
  %tmpv.1416 = alloca [1 x %IPST.16], align 8
  %sret.actual.250 = alloca { { i8*, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !474, metadata !DIExpression()), !dbg !475
  call void @llvm.dbg.value(metadata i64 %file.chunk0, metadata !476, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !477
  call void @llvm.dbg.value(metadata i64 %file.chunk1, metadata !476, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !477
  %call.307 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !478
  %0 = and i8 %call.307, 1, !dbg !479
  %trunc.506 = icmp eq i8 %0, 0, !dbg !479
  br i1 %trunc.506, label %fallthrough.505, label %then.505

then.505:                                         ; preds = %entry
  %call.306 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !480
  %file.addr.sroa.0.0.cast.4847.sroa_cast = bitcast { i8*, i64 }* %tmpv.1415 to i64*
  store i64 %file.chunk0, i64* %file.addr.sroa.0.0.cast.4847.sroa_cast, align 8
  %file.addr.sroa.4.0.cast.4847.sroa_idx7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1415, i64 0, i32 1
  store i64 %file.chunk1, i64* %file.addr.sroa.4.0.cast.4847.sroa_idx7, align 8
  %cast.4850 = bitcast { i8*, i64 }* %tmpv.1415 to i8*, !dbg !480
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.306, i8* nonnull %cast.4850), !dbg !480
  %tmp.210.sroa.0.0.cast.4852.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1416, i64 0, i64 0, i32 0, !dbg !480
  store %_type.0* @string..d, %_type.0** %tmp.210.sroa.0.0.cast.4852.sroa_idx, align 8, !dbg !480
  %tmp.210.sroa.2.0.cast.4852.sroa_idx30 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1416, i64 0, i64 0, i32 1, !dbg !480
  store i8* %call.306, i8** %tmp.210.sroa.2.0.cast.4852.sroa_idx30, align 8, !dbg !480
  %icmp.638 = icmp eq %Flags.0* %f, null, !dbg !481
  br i1 %icmp.638, label %then.506, label %else.506

fallthrough.505:                                  ; preds = %entry, %else.506
  %call.308 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !482
  %1 = and i8 %call.308, 1, !dbg !483
  %trunc.507 = icmp eq i8 %1, 0, !dbg !483
  br i1 %trunc.507, label %else.507, label %then.507

then.506:                                         ; preds = %then.505
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !481
  unreachable

else.506:                                         ; preds = %then.505
  %field.1174 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !481
  %.field.ld.143 = load %Logger.0*, %Logger.0** %field.1174, align 8, !dbg !481
  %field.1175 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.211, i64 0, i32 0, !dbg !480
  %cast.4856 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1416, i64 0, i64 0, !dbg !480
  store %IPST.16* %cast.4856, %IPST.16** %field.1175, align 8, !dbg !480
  %field.1176 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.211, i64 0, i32 1, !dbg !480
  store i64 1, i64* %field.1176, align 8, !dbg !480
  %field.1177 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.211, i64 0, i32 2, !dbg !480
  store i64 1, i64* %field.1177, align 8, !dbg !480
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.143, i64 ptrtoint ([10 x i8]* @const.485 to i64), i64 9, %IPST.2* byval nonnull %tmp.211), !dbg !480
  br label %fallthrough.505

then.507:                                         ; preds = %fallthrough.505
  call void @os_exec.LookPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.250, i8* nest undef, i64 %file.chunk0, i64 %file.chunk1), !dbg !484
  %tmpv.1418.sroa.0.0.cast.4861.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.250 to i64*, !dbg !484
  %tmpv.1418.sroa.0.0.copyload26 = load i64, i64* %tmpv.1418.sroa.0.0.cast.4861.sroa_cast, align 8, !dbg !484
  %tmpv.1418.sroa.3.0.cast.4861.sroa_idx27 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.250, i64 0, i32 0, i32 1, !dbg !484
  %tmpv.1418.sroa.3.0.copyload28 = load i64, i64* %tmpv.1418.sroa.3.0.cast.4861.sroa_idx27, align 8, !dbg !484
  %tmpv.1418.sroa.4.0.cast.4861.sroa_idx = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.250, i64 0, i32 1, !dbg !484
  %tmpv.1418.sroa.4.0.cast.4861.sroa_cast = bitcast %error.0* %tmpv.1418.sroa.4.0.cast.4861.sroa_idx to i8*, !dbg !484
  call void @llvm.dbg.value(metadata i64 %tmpv.1418.sroa.0.0.copyload26, metadata !485, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !486
  call void @llvm.dbg.value(metadata i64 %tmpv.1418.sroa.3.0.copyload28, metadata !485, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !486
  %tmp.212.sroa.0.0.cast.4878.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.14 to i64*, !dbg !487
  store i64 %tmpv.1418.sroa.0.0.copyload26, i64* %tmp.212.sroa.0.0.cast.4878.sroa_cast, align 8, !dbg !487
  %tmp.212.sroa.2.0.cast.4878.sroa_idx31 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.14, i64 0, i32 0, i32 1, !dbg !487
  store i64 %tmpv.1418.sroa.3.0.copyload28, i64* %tmp.212.sroa.2.0.cast.4878.sroa_idx31, align 8, !dbg !487
  %tmp.212.sroa.3.0.cast.4878.sroa_idx = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.14, i64 0, i32 1, !dbg !487
  %tmp.212.sroa.3.0.cast.4878.sroa_cast = bitcast %error.0* %tmp.212.sroa.3.0.cast.4878.sroa_idx to i8*, !dbg !487
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.212.sroa.3.0.cast.4878.sroa_cast, i8* nonnull align 8 %tmpv.1418.sroa.4.0.cast.4861.sroa_cast, i64 16, i1 false), !dbg !487
  ret void, !dbg !487

else.507:                                         ; preds = %fallthrough.505
  call void @llvm.dbg.value(metadata i64 %file.chunk0, metadata !485, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !486
  call void @llvm.dbg.value(metadata i64 %file.chunk1, metadata !485, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !486
  %tmp.213.sroa.0.0.cast.4892.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.14 to i64*, !dbg !488
  store i64 %file.chunk0, i64* %tmp.213.sroa.0.0.cast.4892.sroa_cast, align 8, !dbg !488
  %tmp.213.sroa.2.0.cast.4892.sroa_idx35 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.14, i64 0, i32 0, i32 1, !dbg !488
  store i64 %file.chunk1, i64* %tmp.213.sroa.2.0.cast.4892.sroa_idx35, align 8, !dbg !488
  %tmp.213.sroa.3.0.cast.4892.sroa_idx = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.14, i64 0, i32 1, !dbg !488
  %tmp.213.sroa.3.0.cast.4892.sroa_cast = bitcast %error.0* %tmp.213.sroa.3.0.cast.4892.sroa_idx to i8*, !dbg !488
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmp.213.sroa.3.0.cast.4892.sroa_cast, i8 0, i64 16, i1 false), !dbg !488
  ret void, !dbg !488
}

declare { i64, i64 } @runtime.concatstring2(i8*, i8*, [2 x { i8*, i64 }]*) local_unnamed_addr #0

declare { i64, i64 } @fmt.Errorf(i8*, i64, i64, %IPST.2*) local_unnamed_addr #0

define void @command_line_arguments.AndroidSDKPath({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.0, i8* nest nocapture readnone %nest.2, %Flags.0* %f) #0 !dbg !489 {
entry:
  %tmp.5 = alloca [2 x { i8*, i64 }], align 8
  %tmp.3 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !490, metadata !DIExpression()), !dbg !491
  %call.5 = call { i64, i64 } @command_line_arguments.GetEnv(i8* nest undef, %Flags.0* %f, i64 ptrtoint ([13 x i8]* @const.12 to i64), i64 12), !dbg !492
  %call.5.fca.0.extract = extractvalue { i64, i64 } %call.5, 0, !dbg !492
  %call.5.fca.1.extract = extractvalue { i64, i64 } %call.5, 1, !dbg !492
  call void @llvm.dbg.value(metadata i64 %call.5.fca.0.extract, metadata !494, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !495
  call void @llvm.dbg.value(metadata i64 %call.5.fca.1.extract, metadata !494, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !495
  %call.9 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.5.fca.0.extract, i64 %call.5.fca.1.extract, i64 0, i64 0), !dbg !496
  %icmp.4 = icmp eq i8 %call.9, 1, !dbg !496
  br i1 %icmp.4, label %then.4, label %else.4

then.4:                                           ; preds = %entry
  %cast.109 = bitcast [2 x { i8*, i64 }]* %tmp.3 to i8*, !dbg !497
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.109, i8* align 8 bitcast ({ i8*, i64 }* @const.16 to i8*), i64 16, i1 false), !dbg !497
  %tmpv.19.sroa.0.0.cast.111.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.3, i64 0, i64 1, !dbg !497
  %tmpv.19.sroa.0.0.cast.111.sroa_cast = bitcast { i8*, i64 }* %tmpv.19.sroa.0.0.cast.111.sroa_idx to i64*, !dbg !497
  store i64 ptrtoint ([52 x i8]* @const.182 to i64), i64* %tmpv.19.sroa.0.0.cast.111.sroa_cast, align 8, !dbg !497
  %tmpv.19.sroa.2.0.cast.111.sroa_idx10 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.3, i64 0, i64 1, i32 1, !dbg !497
  store i64 51, i64* %tmpv.19.sroa.2.0.cast.111.sroa_idx10, align 8, !dbg !497
  %call.7 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.3), !dbg !497
  %call.7.fca.0.extract = extractvalue { i64, i64 } %call.7, 0, !dbg !497
  %call.7.fca.1.extract = extractvalue { i64, i64 } %call.7, 1, !dbg !497
  %call.8 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 %call.7.fca.0.extract, i64 %call.7.fca.1.extract, %IPST.2* byval nonnull @const.11), !dbg !498
  %call.8.fca.0.extract = extractvalue { i64, i64 } %call.8, 0, !dbg !498
  %call.8.fca.1.extract = extractvalue { i64, i64 } %call.8, 1, !dbg !498
  call void @llvm.dbg.value(metadata i64 0, metadata !499, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !500
  call void @llvm.dbg.value(metadata i64 0, metadata !499, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !500
  call void @llvm.dbg.value(metadata i64 %call.8.fca.0.extract, metadata !501, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !502
  call void @llvm.dbg.value(metadata i64 %call.8.fca.1.extract, metadata !501, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !502
  %tmp.4.sroa.3.0.cast.129.sroa_idx61 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !503
  %tmp.4.sroa.3.0.cast.129.sroa_cast = bitcast %error.0* %tmp.4.sroa.3.0.cast.129.sroa_idx61 to i64*, !dbg !503
  %0 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.0 to i8*, !dbg !503
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !503
  store i64 %call.8.fca.0.extract, i64* %tmp.4.sroa.3.0.cast.129.sroa_cast, align 8, !dbg !503
  %tmp.4.sroa.4.0.cast.129.sroa_idx62 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !503
  %tmp.4.sroa.4.0.cast.129.sroa_cast = bitcast i8** %tmp.4.sroa.4.0.cast.129.sroa_idx62 to i64*, !dbg !503
  store i64 %call.8.fca.1.extract, i64* %tmp.4.sroa.4.0.cast.129.sroa_cast, align 8, !dbg !503
  ret void, !dbg !503

else.4:                                           ; preds = %entry
  %call.13 = call i8 @command_line_arguments.IsDir(i8* nest undef, %Flags.0* %f, i64 %call.5.fca.0.extract, i64 %call.5.fca.1.extract), !dbg !504
  %icmp.5 = icmp eq i8 %call.13, 0, !dbg !505
  br i1 %icmp.5, label %then.5, label %else.5

then.5:                                           ; preds = %else.4
  %cast.141 = bitcast [2 x { i8*, i64 }]* %tmp.5 to i8*, !dbg !506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.141, i8* align 8 bitcast ({ i8*, i64 }* @const.18 to i8*), i64 16, i1 false), !dbg !506
  %tmpv.25.sroa.0.0.cast.143.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.5, i64 0, i64 1, !dbg !506
  %tmpv.25.sroa.0.0.cast.143.sroa_cast = bitcast { i8*, i64 }* %tmpv.25.sroa.0.0.cast.143.sroa_idx to i64*, !dbg !506
  store i64 ptrtoint ([52 x i8]* @const.182 to i64), i64* %tmpv.25.sroa.0.0.cast.143.sroa_cast, align 8, !dbg !506
  %tmpv.25.sroa.2.0.cast.143.sroa_idx5 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.5, i64 0, i64 1, i32 1, !dbg !506
  store i64 51, i64* %tmpv.25.sroa.2.0.cast.143.sroa_idx5, align 8, !dbg !506
  %call.11 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.5), !dbg !506
  %call.11.fca.0.extract = extractvalue { i64, i64 } %call.11, 0, !dbg !506
  %call.11.fca.1.extract = extractvalue { i64, i64 } %call.11, 1, !dbg !506
  %call.12 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 %call.11.fca.0.extract, i64 %call.11.fca.1.extract, %IPST.2* byval nonnull @const.11), !dbg !507
  %call.12.fca.0.extract = extractvalue { i64, i64 } %call.12, 0, !dbg !507
  %call.12.fca.1.extract = extractvalue { i64, i64 } %call.12, 1, !dbg !507
  call void @llvm.dbg.value(metadata i64 0, metadata !499, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !500
  call void @llvm.dbg.value(metadata i64 0, metadata !499, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !500
  call void @llvm.dbg.value(metadata i64 %call.12.fca.0.extract, metadata !501, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !502
  call void @llvm.dbg.value(metadata i64 %call.12.fca.1.extract, metadata !501, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !502
  %tmp.6.sroa.3.0.cast.161.sroa_idx64 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !508
  %tmp.6.sroa.3.0.cast.161.sroa_cast = bitcast %error.0* %tmp.6.sroa.3.0.cast.161.sroa_idx64 to i64*, !dbg !508
  %1 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.0 to i8*, !dbg !508
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !508
  store i64 %call.12.fca.0.extract, i64* %tmp.6.sroa.3.0.cast.161.sroa_cast, align 8, !dbg !508
  %tmp.6.sroa.4.0.cast.161.sroa_idx65 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.0, i64 0, i32 1, i32 1, !dbg !508
  %tmp.6.sroa.4.0.cast.161.sroa_cast = bitcast i8** %tmp.6.sroa.4.0.cast.161.sroa_idx65 to i64*, !dbg !508
  store i64 %call.12.fca.1.extract, i64* %tmp.6.sroa.4.0.cast.161.sroa_cast, align 8, !dbg !508
  ret void, !dbg !508

else.5:                                           ; preds = %else.4
  call void @llvm.dbg.value(metadata i64 %call.5.fca.0.extract, metadata !499, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !500
  call void @llvm.dbg.value(metadata i64 %call.5.fca.1.extract, metadata !499, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !500
  call void @llvm.dbg.value(metadata i64 0, metadata !501, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !502
  call void @llvm.dbg.value(metadata i64 0, metadata !501, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !502
  %tmp.7.sroa.0.0.cast.176.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.0 to i64*, !dbg !509
  store i64 %call.5.fca.0.extract, i64* %tmp.7.sroa.0.0.cast.176.sroa_cast, align 8, !dbg !509
  %tmp.7.sroa.2.0.cast.176.sroa_idx66 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.0, i64 0, i32 0, i32 1, !dbg !509
  store i64 %call.5.fca.1.extract, i64* %tmp.7.sroa.2.0.cast.176.sroa_idx66, align 8, !dbg !509
  %tmp.7.sroa.3.0.cast.176.sroa_idx67 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !509
  %2 = bitcast %error.0* %tmp.7.sroa.3.0.cast.176.sroa_idx67 to i8*, !dbg !509
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !509
  ret void, !dbg !509
}

define { i64, i64 } @command_line_arguments.GetEnv(i8* nest nocapture readnone %nest.43, %Flags.0* %f, i64 %key.chunk0, i64 %key.chunk1) #0 !dbg !510 {
entry:
  %tmp.216 = alloca [2 x { i8*, i64 }], align 8
  %tmp.215 = alloca %IPST.2, align 8
  %tmpv.1426 = alloca { i8*, i64 }, align 8
  %tmpv.1427 = alloca [1 x %IPST.16], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !513, metadata !DIExpression()), !dbg !514
  call void @llvm.dbg.value(metadata i64 %key.chunk0, metadata !515, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !516
  call void @llvm.dbg.value(metadata i64 %key.chunk1, metadata !515, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !516
  %call.310 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !517
  %0 = and i8 %call.310, 1, !dbg !518
  %trunc.509 = icmp eq i8 %0, 0, !dbg !518
  br i1 %trunc.509, label %fallthrough.508, label %then.508

then.508:                                         ; preds = %entry
  %call.309 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !519
  %key.addr.sroa.0.0.cast.4900.sroa_cast = bitcast { i8*, i64 }* %tmpv.1426 to i64*
  store i64 %key.chunk0, i64* %key.addr.sroa.0.0.cast.4900.sroa_cast, align 8
  %key.addr.sroa.4.0.cast.4900.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1426, i64 0, i32 1
  store i64 %key.chunk1, i64* %key.addr.sroa.4.0.cast.4900.sroa_idx11, align 8
  %cast.4903 = bitcast { i8*, i64 }* %tmpv.1426 to i8*, !dbg !519
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.309, i8* nonnull %cast.4903), !dbg !519
  %tmp.214.sroa.0.0.cast.4905.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1427, i64 0, i64 0, i32 0, !dbg !519
  store %_type.0* @string..d, %_type.0** %tmp.214.sroa.0.0.cast.4905.sroa_idx, align 8, !dbg !519
  %tmp.214.sroa.2.0.cast.4905.sroa_idx14 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1427, i64 0, i64 0, i32 1, !dbg !519
  store i8* %call.309, i8** %tmp.214.sroa.2.0.cast.4905.sroa_idx14, align 8, !dbg !519
  %icmp.639 = icmp eq %Flags.0* %f, null, !dbg !520
  br i1 %icmp.639, label %then.509, label %else.509

fallthrough.508:                                  ; preds = %entry, %else.509
  %call.312 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !521
  %1 = and i8 %call.312, 1, !dbg !522
  %trunc.510 = icmp eq i8 %1, 0, !dbg !522
  br i1 %trunc.510, label %else.510, label %then.510

then.509:                                         ; preds = %then.508
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !520
  unreachable

else.509:                                         ; preds = %then.508
  %field.1186 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !520
  %.field.ld.144 = load %Logger.0*, %Logger.0** %field.1186, align 8, !dbg !520
  %field.1187 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.215, i64 0, i32 0, !dbg !519
  %cast.4909 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1427, i64 0, i64 0, !dbg !519
  store %IPST.16* %cast.4909, %IPST.16** %field.1187, align 8, !dbg !519
  %field.1188 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.215, i64 0, i32 1, !dbg !519
  store i64 1, i64* %field.1188, align 8, !dbg !519
  %field.1189 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.215, i64 0, i32 2, !dbg !519
  store i64 1, i64* %field.1189, align 8, !dbg !519
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.144, i64 ptrtoint ([13 x i8]* @const.487 to i64), i64 12, %IPST.2* byval nonnull %tmp.215), !dbg !519
  br label %fallthrough.508

then.510:                                         ; preds = %fallthrough.508
  %call.311 = call { i64, i64 } @os.Getenv(i8* nest undef, i64 %key.chunk0, i64 %key.chunk1), !dbg !523
  ret { i64, i64 } %call.311, !dbg !524

else.510:                                         ; preds = %fallthrough.508
  %cast.4919 = bitcast [2 x { i8*, i64 }]* %tmp.216 to i8*, !dbg !525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4919, i8* align 8 bitcast ({ i8*, i64 }* @const.490 to i8*), i64 16, i1 false), !dbg !525
  %key.addr.sroa.0.0.cast.4921.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.216, i64 0, i64 1, !dbg !525
  %key.addr.sroa.0.0.cast.4921.sroa_cast = bitcast { i8*, i64 }* %key.addr.sroa.0.0.cast.4921.sroa_idx to i64*, !dbg !525
  store i64 %key.chunk0, i64* %key.addr.sroa.0.0.cast.4921.sroa_cast, align 8, !dbg !525
  %key.addr.sroa.4.0.cast.4921.sroa_idx12 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.216, i64 0, i64 1, i32 1, !dbg !525
  store i64 %key.chunk1, i64* %key.addr.sroa.4.0.cast.4921.sroa_idx12, align 8, !dbg !525
  %call.313 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.216), !dbg !525
  ret { i64, i64 } %call.313, !dbg !526
}

declare i8 @runtime.eqstring(i8*, i64, i64, i64, i64) local_unnamed_addr #0

define i8 @command_line_arguments.IsDir(i8* nest nocapture readnone %nest.46, %Flags.0* %f, i64 %path.chunk0, i64 %path.chunk1) #0 !dbg !527 {
entry:
  %tmp.226 = alloca %IPST.2, align 8
  %tmpv.1462 = alloca { i8*, i64 }, align 8
  %tmpv.1463 = alloca [1 x %IPST.16], align 8
  %sret.actual.256 = alloca { %FileInfo.0, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !530, metadata !DIExpression()), !dbg !531
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !532, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !533
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !532, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !533
  call void @llvm.dbg.value(metadata i8 0, metadata !534, metadata !DIExpression()), !dbg !535
  %call.324 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !536
  %0 = and i8 %call.324, 1, !dbg !537
  %trunc.521 = icmp eq i8 %0, 0, !dbg !537
  br i1 %trunc.521, label %fallthrough.520, label %then.520

then.520:                                         ; preds = %entry
  %call.323 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !538
  %path.addr.sroa.0.0.cast.5046.sroa_cast = bitcast { i8*, i64 }* %tmpv.1462 to i64*
  store i64 %path.chunk0, i64* %path.addr.sroa.0.0.cast.5046.sroa_cast, align 8
  %path.addr.sroa.3.0.cast.5046.sroa_idx25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1462, i64 0, i32 1
  store i64 %path.chunk1, i64* %path.addr.sroa.3.0.cast.5046.sroa_idx25, align 8
  %cast.5049 = bitcast { i8*, i64 }* %tmpv.1462 to i8*, !dbg !538
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.323, i8* nonnull %cast.5049), !dbg !538
  %tmp.225.sroa.0.0.cast.5051.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1463, i64 0, i64 0, i32 0, !dbg !538
  store %_type.0* @string..d, %_type.0** %tmp.225.sroa.0.0.cast.5051.sroa_idx, align 8, !dbg !538
  %tmp.225.sroa.2.0.cast.5051.sroa_idx26 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1463, i64 0, i64 0, i32 1, !dbg !538
  store i8* %call.323, i8** %tmp.225.sroa.2.0.cast.5051.sroa_idx26, align 8, !dbg !538
  %icmp.646 = icmp eq %Flags.0* %f, null, !dbg !539
  br i1 %icmp.646, label %then.521, label %else.521

fallthrough.520:                                  ; preds = %entry, %else.521
  %call.326 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !540
  %1 = and i8 %call.326, 1, !dbg !541
  %trunc.524 = icmp eq i8 %1, 0, !dbg !541
  br i1 %trunc.524, label %fallthrough.522, label %then.522

then.521:                                         ; preds = %then.520
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !539
  unreachable

else.521:                                         ; preds = %then.520
  %field.1230 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !539
  %.field.ld.148 = load %Logger.0*, %Logger.0** %field.1230, align 8, !dbg !539
  %field.1231 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.226, i64 0, i32 0, !dbg !538
  %cast.5055 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1463, i64 0, i64 0, !dbg !538
  store %IPST.16* %cast.5055, %IPST.16** %field.1231, align 8, !dbg !538
  %field.1232 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.226, i64 0, i32 1, !dbg !538
  store i64 1, i64* %field.1232, align 8, !dbg !538
  %field.1233 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.226, i64 0, i32 2, !dbg !538
  store i64 1, i64* %field.1233, align 8, !dbg !538
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.148, i64 ptrtoint ([12 x i8]* @const.496 to i64), i64 11, %IPST.2* byval nonnull %tmp.226), !dbg !538
  br label %fallthrough.520

then.522:                                         ; preds = %fallthrough.520
  call void @os.Stat({ %FileInfo.0, %error.0 }* nonnull sret %sret.actual.256, i8* nest undef, i64 %path.chunk0, i64 %path.chunk1), !dbg !542
  %tmpv.1465.sroa.3.0.cast.5060.sroa_idx11 = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.256, i64 0, i32 1, i32 0, !dbg !542
  %tmpv.1465.sroa.3.0.copyload12 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1465.sroa.3.0.cast.5060.sroa_idx11, align 8, !dbg !542
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1465.sroa.3.0.copyload12, metadata !544, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !545
  call void @llvm.dbg.value(metadata { %FileInfo.0, %error.0 }* %sret.actual.256, metadata !544, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !545
  %icmp.647 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1465.sroa.3.0.copyload12, null, !dbg !546
  br i1 %icmp.647, label %then.523, label %fallthrough.522

fallthrough.522:                                  ; preds = %then.523, %then.522, %fallthrough.520
  %merge = phi i8 [ 1, %fallthrough.520 ], [ %phitmp27, %then.523 ], [ 0, %then.522 ]
  call void @llvm.dbg.value(metadata i8 1, metadata !534, metadata !DIExpression()), !dbg !535
  ret i8 %merge, !dbg !547

then.523:                                         ; preds = %then.522
  %tmpv.1465.sroa.0.sroa.3.0.tmpv.1465.sroa.0.0.cast.5060.sroa_cast.sroa_idx22 = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.256, i64 0, i32 0, i32 1, !dbg !542
  %tmpv.1465.sroa.0.sroa.3.0.copyload23 = load i8*, i8** %tmpv.1465.sroa.0.sroa.3.0.tmpv.1465.sroa.0.0.cast.5060.sroa_cast.sroa_idx22, align 8, !dbg !542
  call void @llvm.dbg.value(metadata i8* %tmpv.1465.sroa.0.sroa.3.0.copyload23, metadata !548, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !545
  %tmpv.1465.sroa.0.sroa.0.0.tmpv.1465.sroa.0.0.cast.5060.sroa_cast.sroa_idx = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.256, i64 0, i32 0, i32 0, !dbg !542
  %tmpv.1465.sroa.0.sroa.0.0.copyload21 = load { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.1465.sroa.0.sroa.0.0.tmpv.1465.sroa.0.0.cast.5060.sroa_cast.sroa_idx, align 8, !dbg !542
  call void @llvm.dbg.value(metadata { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.1465.sroa.0.sroa.0.0.copyload21, metadata !548, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !545
  %field.1238 = getelementptr inbounds { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.1465.sroa.0.sroa.0.0.copyload21, i64 0, i32 1, !dbg !549
  %.field.ld.149 = load i8 (i8*, i8*)*, i8 (i8*, i8*)** %field.1238, align 8, !dbg !549
  %call.325 = call i8 %.field.ld.149(i8* nest undef, i8* %tmpv.1465.sroa.0.sroa.3.0.copyload23), !dbg !549
  %icmp.648 = icmp ne i8 %call.325, 0, !dbg !550
  %phitmp27 = zext i1 %icmp.648 to i8
  br label %fallthrough.522
}

declare { i64, i64 } @path_filepath.Join(i8*, %IPST.3*) local_unnamed_addr #0

define void @command_line_arguments.ReadDirNames({ %IPST.3, %error.0 }* nocapture sret %sret.formal.15, i8* nest nocapture readnone %nest.44, %Flags.0* %f, i64 %path.chunk0, i64 %path.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !551 {
entry:
  %tmp.218 = alloca %IPST.2, align 8
  %tmpv.1431 = alloca i8, align 1
  %tmpv.1433 = alloca { i8*, i64 }, align 8
  %tmpv.1434 = alloca [1 x %IPST.16], align 8
  %sret.actual.253 = alloca { %File.1*, %error.0 }, align 8
  %tmpv.1442 = alloca { %File.1* }, align 8
  %sret.actual.254 = alloca { %IPST.3, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !558, metadata !DIExpression()), !dbg !559
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !560, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !561
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !560, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !561
  store i8 0, i8* %tmpv.1431, align 1
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 0, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 0, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !563
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !565
  call void @llvm.dbg.value(metadata i8* null, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !565
  %call.315 = invoke i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f)
          to label %cont.329 unwind label %pad.10, !dbg !566

finally.5:                                        ; preds = %cont.336, %cont.338, %cont.339, %pad.10, %catchpad.5
  %"$ret52.sroa.0.1" = phi { %_type.0*, { i64, i64 } (i8*, i8*)* }* [ null, %catchpad.5 ], [ %tmpv.1436.sroa.3.sroa.0.0.copyload14, %cont.336 ], [ null, %pad.10 ], [ %tmpv.1444.sroa.3.0.copyload33, %cont.338 ], [ null, %cont.339 ]
  %"$ret52.sroa.7.1" = phi i8* [ null, %catchpad.5 ], [ %tmpv.1436.sroa.3.sroa.3.0.copyload16, %cont.336 ], [ null, %pad.10 ], [ %tmpv.1444.sroa.4.0.copyload35, %cont.338 ], [ null, %cont.339 ]
  %"$ret51.sroa.0.1" = phi { i8*, i64 }* [ null, %catchpad.5 ], [ %cast.4953, %cont.336 ], [ null, %pad.10 ], [ %tmpv.1444.sroa.0.sroa.0.0.copyload53, %cont.338 ], [ %cast.4995, %cont.339 ]
  %"$ret51.sroa.7.1" = phi i64 [ 0, %catchpad.5 ], [ 0, %cont.336 ], [ 0, %pad.10 ], [ %tmpv.1444.sroa.0.sroa.3.0.copyload55, %cont.338 ], [ 0, %cont.339 ]
  %"$ret51.sroa.9.1" = phi i64 [ 0, %catchpad.5 ], [ 0, %cont.336 ], [ 0, %pad.10 ], [ %tmpv.1444.sroa.0.sroa.4.0.copyload57, %cont.338 ], [ 0, %cont.339 ]
  %ehtmp.5.sroa.0.0 = phi i8* [ %ex2.5.fca.0.extract, %catchpad.5 ], [ undef, %cont.336 ], [ undef, %pad.10 ], [ undef, %cont.338 ], [ undef, %cont.339 ]
  %ehtmp.5.sroa.2.0 = phi i32 [ %ex2.5.fca.1.extract, %catchpad.5 ], [ undef, %cont.336 ], [ undef, %pad.10 ], [ undef, %cont.338 ], [ undef, %cont.339 ]
  %finvar.5.0 = phi i8 [ 0, %catchpad.5 ], [ 1, %cont.336 ], [ 1, %pad.10 ], [ 1, %cont.338 ], [ 1, %cont.339 ]
  call void @llvm.dbg.value(metadata i64 %"$ret51.sroa.9.1", metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 %"$ret51.sroa.7.1", metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !563
  call void @llvm.dbg.value(metadata { i8*, i64 }* %"$ret51.sroa.0.1", metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i8* %"$ret52.sroa.7.1", metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !565
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %"$ret52.sroa.0.1", metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !565
  br label %finish.5

pad.10:                                           ; preds = %else.513, %cont.337, %else.514, %then.514, %then.513, %fallthrough.511, %fallthrough.512, %then.512, %cont.330, %then.511, %entry
  %ex.10 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1431)
          to label %finally.5 unwind label %catchpad.5, !dbg !567

cont.329:                                         ; preds = %entry
  %0 = and i8 %call.315, 1, !dbg !568
  %trunc.512 = icmp eq i8 %0, 0, !dbg !568
  br i1 %trunc.512, label %fallthrough.511, label %then.511

then.511:                                         ; preds = %cont.329
  %call.314 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.330 unwind label %pad.10, !dbg !569

fallthrough.511:                                  ; preds = %cont.329, %fallthrough.512
  %call.317 = invoke i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f)
          to label %cont.334 unwind label %pad.10, !dbg !570

cont.330:                                         ; preds = %then.511
  %path.addr.sroa.0.0.cast.4932.sroa_cast = bitcast { i8*, i64 }* %tmpv.1433 to i64*
  store i64 %path.chunk0, i64* %path.addr.sroa.0.0.cast.4932.sroa_cast, align 8
  %path.addr.sroa.3.0.cast.4932.sroa_idx58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1433, i64 0, i32 1
  store i64 %path.chunk1, i64* %path.addr.sroa.3.0.cast.4932.sroa_idx58, align 8
  %cast.4935 = bitcast { i8*, i64 }* %tmpv.1433 to i8*, !dbg !569
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.314, i8* nonnull %cast.4935)
          to label %cont.331 unwind label %pad.10, !dbg !569

cont.331:                                         ; preds = %cont.330
  %tmp.217.sroa.0.0.cast.4937.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1434, i64 0, i64 0, i32 0, !dbg !569
  store %_type.0* @string..d, %_type.0** %tmp.217.sroa.0.0.cast.4937.sroa_idx, align 8, !dbg !569
  %tmp.217.sroa.2.0.cast.4937.sroa_idx59 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1434, i64 0, i64 0, i32 1, !dbg !569
  store i8* %call.314, i8** %tmp.217.sroa.2.0.cast.4937.sroa_idx59, align 8, !dbg !569
  %icmp.640 = icmp eq %Flags.0* %f, null, !dbg !571
  br i1 %icmp.640, label %then.512, label %fallthrough.512

then.512:                                         ; preds = %cont.331
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.512 unwind label %pad.10, !dbg !571

fallthrough.512:                                  ; preds = %cont.331, %then.512
  %field.1192 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !571
  %.field.ld.145 = load %Logger.0*, %Logger.0** %field.1192, align 8, !dbg !571
  %field.1193 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.218, i64 0, i32 0, !dbg !569
  %cast.4941 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1434, i64 0, i64 0, !dbg !569
  store %IPST.16* %cast.4941, %IPST.16** %field.1193, align 8, !dbg !569
  %field.1194 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.218, i64 0, i32 1, !dbg !569
  store i64 1, i64* %field.1194, align 8, !dbg !569
  %field.1195 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.218, i64 0, i32 2, !dbg !569
  store i64 1, i64* %field.1195, align 8, !dbg !569
  invoke void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.145, i64 ptrtoint ([7 x i8]* @const.491 to i64), i64 6, %IPST.2* byval nonnull %tmp.218)
          to label %fallthrough.511 unwind label %pad.10, !dbg !569

cont.334:                                         ; preds = %fallthrough.511
  %1 = and i8 %call.317, 1, !dbg !572
  %trunc.514 = icmp eq i8 %1, 0, !dbg !572
  br i1 %trunc.514, label %else.513, label %then.513

then.513:                                         ; preds = %cont.334
  invoke void @os.Open({ %File.1*, %error.0 }* nonnull sret %sret.actual.253, i8* nest undef, i64 %path.chunk0, i64 %path.chunk1)
          to label %cont.335 unwind label %pad.10, !dbg !573

else.513:                                         ; preds = %cont.334
  %call.318 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7string, i64 0, i32 0))
          to label %cont.339 unwind label %pad.10, !dbg !575

cont.335:                                         ; preds = %then.513
  %tmpv.1436.sroa.0.0.cast.4946.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.253, i64 0, i32 0, !dbg !573
  %tmpv.1436.sroa.0.0.copyload6 = load %File.1*, %File.1** %tmpv.1436.sroa.0.0.cast.4946.sroa_idx, align 8, !dbg !573
  %tmpv.1436.sroa.3.sroa.0.0.tmpv.1436.sroa.3.0.cast.4946.sroa_cast.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.253, i64 0, i32 1, i32 0, !dbg !573
  %tmpv.1436.sroa.3.sroa.0.0.copyload14 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1436.sroa.3.sroa.0.0.tmpv.1436.sroa.3.0.cast.4946.sroa_cast.sroa_idx, align 8, !dbg !573
  %tmpv.1436.sroa.3.sroa.3.0.tmpv.1436.sroa.3.0.cast.4946.sroa_cast.sroa_idx15 = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.253, i64 0, i32 1, i32 1, !dbg !573
  %tmpv.1436.sroa.3.sroa.3.0.copyload16 = load i8*, i8** %tmpv.1436.sroa.3.sroa.3.0.tmpv.1436.sroa.3.0.cast.4946.sroa_cast.sroa_idx15, align 8, !dbg !573
  call void @llvm.dbg.value(metadata %File.1* %tmpv.1436.sroa.0.0.copyload6, metadata !576, metadata !DIExpression()), !dbg !577
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1436.sroa.3.sroa.0.0.copyload14, metadata !578, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !577
  call void @llvm.dbg.value(metadata i8* %tmpv.1436.sroa.3.sroa.3.0.copyload16, metadata !578, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !577
  %icmp.641 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1436.sroa.3.sroa.0.0.copyload14, null, !dbg !579
  br i1 %icmp.641, label %else.514, label %then.514

then.514:                                         ; preds = %cont.335
  %call.316 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7string, i64 0, i32 0))
          to label %cont.336 unwind label %pad.10, !dbg !580

else.514:                                         ; preds = %cont.335
  %cast.4967 = bitcast { %File.1* }* %tmpv.1442 to i8*
  %field.1204 = getelementptr inbounds { %File.1* }, { %File.1* }* %tmpv.1442, i64 0, i32 0, !dbg !581
  store %File.1* %tmpv.1436.sroa.0.0.copyload6, %File.1** %field.1204, align 8, !dbg !581
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.1431, %__go_descriptor.27* bitcast (i8 (i8*, { %File.1* }*)* @command_line_arguments.command_line_arguments..thunk9 to %__go_descriptor.27*), i8* nonnull %cast.4967)
          to label %cont.337 unwind label %pad.10, !dbg !581

cont.336:                                         ; preds = %then.514
  %cast.4953 = bitcast i8* %call.316 to { i8*, i64 }*, !dbg !580
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.4953, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 0, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 0, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !563
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1436.sroa.3.sroa.0.0.copyload14, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !565
  call void @llvm.dbg.value(metadata i8* %tmpv.1436.sroa.3.sroa.3.0.copyload16, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !565
  br label %finally.5

cont.337:                                         ; preds = %else.514
  invoke void @os.File.Readdirnames({ %IPST.3, %error.0 }* nonnull sret %sret.actual.254, i8* nest undef, %File.1* %tmpv.1436.sroa.0.0.copyload6, i64 -1)
          to label %cont.338 unwind label %pad.10, !dbg !582

cont.338:                                         ; preds = %cont.337
  %tmpv.1444.sroa.0.sroa.0.0.tmpv.1444.sroa.0.0.cast.4974.sroa_cast.sroa_idx = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.254, i64 0, i32 0, i32 0, !dbg !582
  %tmpv.1444.sroa.0.sroa.0.0.copyload53 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1444.sroa.0.sroa.0.0.tmpv.1444.sroa.0.0.cast.4974.sroa_cast.sroa_idx, align 8, !dbg !582
  %tmpv.1444.sroa.0.sroa.3.0.tmpv.1444.sroa.0.0.cast.4974.sroa_cast.sroa_idx54 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.254, i64 0, i32 0, i32 1, !dbg !582
  %tmpv.1444.sroa.0.sroa.3.0.copyload55 = load i64, i64* %tmpv.1444.sroa.0.sroa.3.0.tmpv.1444.sroa.0.0.cast.4974.sroa_cast.sroa_idx54, align 8, !dbg !582
  %tmpv.1444.sroa.0.sroa.4.0.tmpv.1444.sroa.0.0.cast.4974.sroa_cast.sroa_idx56 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.254, i64 0, i32 0, i32 2, !dbg !582
  %tmpv.1444.sroa.0.sroa.4.0.copyload57 = load i64, i64* %tmpv.1444.sroa.0.sroa.4.0.tmpv.1444.sroa.0.0.cast.4974.sroa_cast.sroa_idx56, align 8, !dbg !582
  %tmpv.1444.sroa.3.0.cast.4974.sroa_idx32 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.254, i64 0, i32 1, i32 0, !dbg !582
  %tmpv.1444.sroa.3.0.copyload33 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1444.sroa.3.0.cast.4974.sroa_idx32, align 8, !dbg !582
  %tmpv.1444.sroa.4.0.cast.4974.sroa_idx34 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.254, i64 0, i32 1, i32 1, !dbg !582
  %tmpv.1444.sroa.4.0.copyload35 = load i8*, i8** %tmpv.1444.sroa.4.0.cast.4974.sroa_idx34, align 8, !dbg !582
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.1444.sroa.0.sroa.0.0.copyload53, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 %tmpv.1444.sroa.0.sroa.3.0.copyload55, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 %tmpv.1444.sroa.0.sroa.4.0.copyload57, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !563
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1444.sroa.3.0.copyload33, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !565
  call void @llvm.dbg.value(metadata i8* %tmpv.1444.sroa.4.0.copyload35, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !565
  br label %finally.5

cont.339:                                         ; preds = %else.513
  %cast.4995 = bitcast i8* %call.318 to { i8*, i64 }*, !dbg !575
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.4995, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 0, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !563
  call void @llvm.dbg.value(metadata i64 0, metadata !562, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !563
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !565
  call void @llvm.dbg.value(metadata i8* null, metadata !564, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !565
  br label %finally.5

catchpad.5:                                       ; preds = %pad.10
  %ex2.5 = landingpad { i8*, i32 }
          cleanup
  %ex2.5.fca.0.extract = extractvalue { i8*, i32 } %ex2.5, 0
  %ex2.5.fca.1.extract = extractvalue { i8*, i32 } %ex2.5, 1
  br label %finally.5

pad.11:                                           ; preds = %finish.5
  %ex.11 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1431), !dbg !567
  br label %finish.5

finish.5:                                         ; preds = %pad.11, %finally.5
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.1431)
          to label %cont.341 unwind label %pad.11, !dbg !567

cont.341:                                         ; preds = %finish.5
  %icmp.642 = icmp eq i8 %finvar.5.0, 1
  br i1 %icmp.642, label %finret.5, label %finres.5

finres.5:                                         ; preds = %cont.341
  %excv.5.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.5.sroa.0.0, 0
  %excv.5.fca.1.insert = insertvalue { i8*, i32 } %excv.5.fca.0.insert, i32 %ehtmp.5.sroa.2.0, 1
  resume { i8*, i32 } %excv.5.fca.1.insert

finret.5:                                         ; preds = %cont.341
  %tmp.219.sroa.0.0.cast.4964.sroa_idx = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.15, i64 0, i32 0, i32 0, !dbg !583
  store { i8*, i64 }* %"$ret51.sroa.0.1", { i8*, i64 }** %tmp.219.sroa.0.0.cast.4964.sroa_idx, align 8, !dbg !583
  %tmp.219.sroa.2.0.cast.4964.sroa_idx60 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.15, i64 0, i32 0, i32 1, !dbg !583
  store i64 %"$ret51.sroa.7.1", i64* %tmp.219.sroa.2.0.cast.4964.sroa_idx60, align 8, !dbg !583
  %tmp.219.sroa.3.0.cast.4964.sroa_idx61 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.15, i64 0, i32 0, i32 2, !dbg !583
  store i64 %"$ret51.sroa.9.1", i64* %tmp.219.sroa.3.0.cast.4964.sroa_idx61, align 8, !dbg !583
  %tmp.219.sroa.4.0.cast.4964.sroa_idx62 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.15, i64 0, i32 1, i32 0, !dbg !583
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %"$ret52.sroa.0.1", { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.219.sroa.4.0.cast.4964.sroa_idx62, align 8, !dbg !583
  %tmp.219.sroa.5.0.cast.4964.sroa_idx63 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.15, i64 0, i32 1, i32 1, !dbg !583
  store i8* %"$ret52.sroa.7.1", i8** %tmp.219.sroa.5.0.cast.4964.sroa_idx63, align 8, !dbg !583
  ret void, !dbg !583
}

define i8 @command_line_arguments.Flags.ShouldRun(i8* nest nocapture readnone %nest.58, %Flags.0* readonly %f) #0 !dbg !584 {
entry:
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !587, metadata !DIExpression()), !dbg !588
  call void @llvm.dbg.value(metadata i8 0, metadata !589, metadata !DIExpression()), !dbg !590
  %icmp.704 = icmp eq %Flags.0* %f, null, !dbg !591
  br i1 %icmp.704, label %then.587, label %else.587

then.587:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !591
  unreachable

else.587:                                         ; preds = %entry
  %field.1420 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 3, !dbg !591
  %.field.ld.157 = load i8, i8* %field.1420, align 1, !dbg !591
  %icmp.705 = icmp eq i8 %.field.ld.157, 0, !dbg !592
  %zext.698 = zext i1 %icmp.705 to i8, !dbg !592
  call void @llvm.dbg.value(metadata i8 %zext.698, metadata !589, metadata !DIExpression()), !dbg !590
  ret i8 %zext.698, !dbg !593
}

; Function Attrs: noreturn
declare void @__go_runtime_error(i8*, i32) local_unnamed_addr #3

declare { i64, i64 } @strings.TrimPrefix(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @strconv.Atoi({ i64, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

define i8 @command_line_arguments.IsFile(i8* nest nocapture readnone %nest.45, %Flags.0* %f, i64 %path.chunk0, i64 %path.chunk1) #0 !dbg !594 {
entry:
  %tmp.224 = alloca %IPST.2, align 8
  %tmpv.1453 = alloca { i8*, i64 }, align 8
  %tmpv.1454 = alloca [1 x %IPST.16], align 8
  %sret.actual.255 = alloca { %FileInfo.0, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !595, metadata !DIExpression()), !dbg !596
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !597, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !598
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !597, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !598
  call void @llvm.dbg.value(metadata i8 0, metadata !599, metadata !DIExpression()), !dbg !600
  %call.320 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !601
  %0 = and i8 %call.320, 1, !dbg !602
  %trunc.516 = icmp eq i8 %0, 0, !dbg !602
  br i1 %trunc.516, label %fallthrough.515, label %then.515

then.515:                                         ; preds = %entry
  %call.319 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !603
  %path.addr.sroa.0.0.cast.5020.sroa_cast = bitcast { i8*, i64 }* %tmpv.1453 to i64*
  store i64 %path.chunk0, i64* %path.addr.sroa.0.0.cast.5020.sroa_cast, align 8
  %path.addr.sroa.3.0.cast.5020.sroa_idx25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1453, i64 0, i32 1
  store i64 %path.chunk1, i64* %path.addr.sroa.3.0.cast.5020.sroa_idx25, align 8
  %cast.5023 = bitcast { i8*, i64 }* %tmpv.1453 to i8*, !dbg !603
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.319, i8* nonnull %cast.5023), !dbg !603
  %tmp.223.sroa.0.0.cast.5025.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1454, i64 0, i64 0, i32 0, !dbg !603
  store %_type.0* @string..d, %_type.0** %tmp.223.sroa.0.0.cast.5025.sroa_idx, align 8, !dbg !603
  %tmp.223.sroa.2.0.cast.5025.sroa_idx26 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1454, i64 0, i64 0, i32 1, !dbg !603
  store i8* %call.319, i8** %tmp.223.sroa.2.0.cast.5025.sroa_idx26, align 8, !dbg !603
  %icmp.643 = icmp eq %Flags.0* %f, null, !dbg !604
  br i1 %icmp.643, label %then.516, label %else.516

fallthrough.515:                                  ; preds = %entry, %else.516
  %call.322 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !605
  %1 = and i8 %call.322, 1, !dbg !606
  %trunc.519 = icmp eq i8 %1, 0, !dbg !606
  br i1 %trunc.519, label %fallthrough.517, label %then.517

then.516:                                         ; preds = %then.515
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !604
  unreachable

else.516:                                         ; preds = %then.515
  %field.1218 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !604
  %.field.ld.146 = load %Logger.0*, %Logger.0** %field.1218, align 8, !dbg !604
  %field.1219 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.224, i64 0, i32 0, !dbg !603
  %cast.5029 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1454, i64 0, i64 0, !dbg !603
  store %IPST.16* %cast.5029, %IPST.16** %field.1219, align 8, !dbg !603
  %field.1220 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.224, i64 0, i32 1, !dbg !603
  store i64 1, i64* %field.1220, align 8, !dbg !603
  %field.1221 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.224, i64 0, i32 2, !dbg !603
  store i64 1, i64* %field.1221, align 8, !dbg !603
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.146, i64 ptrtoint ([12 x i8]* @const.493 to i64), i64 11, %IPST.2* byval nonnull %tmp.224), !dbg !603
  br label %fallthrough.515

then.517:                                         ; preds = %fallthrough.515
  call void @os.Stat({ %FileInfo.0, %error.0 }* nonnull sret %sret.actual.255, i8* nest undef, i64 %path.chunk0, i64 %path.chunk1), !dbg !607
  %tmpv.1456.sroa.3.0.cast.5034.sroa_idx11 = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.255, i64 0, i32 1, i32 0, !dbg !607
  %tmpv.1456.sroa.3.0.copyload12 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1456.sroa.3.0.cast.5034.sroa_idx11, align 8, !dbg !607
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1456.sroa.3.0.copyload12, metadata !609, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !610
  call void @llvm.dbg.value(metadata { %FileInfo.0, %error.0 }* %sret.actual.255, metadata !609, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !610
  %icmp.644 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1456.sroa.3.0.copyload12, null, !dbg !611
  br i1 %icmp.644, label %then.518, label %fallthrough.517

fallthrough.517:                                  ; preds = %then.518, %then.517, %fallthrough.515
  %merge = phi i8 [ 1, %fallthrough.515 ], [ %2, %then.518 ], [ 0, %then.517 ]
  call void @llvm.dbg.value(metadata i8 1, metadata !599, metadata !DIExpression()), !dbg !600
  ret i8 %merge, !dbg !612

then.518:                                         ; preds = %then.517
  %tmpv.1456.sroa.0.sroa.3.0.tmpv.1456.sroa.0.0.cast.5034.sroa_cast.sroa_idx22 = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.255, i64 0, i32 0, i32 1, !dbg !607
  %tmpv.1456.sroa.0.sroa.3.0.copyload23 = load i8*, i8** %tmpv.1456.sroa.0.sroa.3.0.tmpv.1456.sroa.0.0.cast.5034.sroa_cast.sroa_idx22, align 8, !dbg !607
  call void @llvm.dbg.value(metadata i8* %tmpv.1456.sroa.0.sroa.3.0.copyload23, metadata !613, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !610
  %tmpv.1456.sroa.0.sroa.0.0.tmpv.1456.sroa.0.0.cast.5034.sroa_cast.sroa_idx = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.255, i64 0, i32 0, i32 0, !dbg !607
  %tmpv.1456.sroa.0.sroa.0.0.copyload21 = load { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.1456.sroa.0.sroa.0.0.tmpv.1456.sroa.0.0.cast.5034.sroa_cast.sroa_idx, align 8, !dbg !607
  call void @llvm.dbg.value(metadata { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.1456.sroa.0.sroa.0.0.copyload21, metadata !613, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !610
  %field.1226 = getelementptr inbounds { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.1456.sroa.0.sroa.0.0.copyload21, i64 0, i32 1, !dbg !614
  %.field.ld.147 = load i8 (i8*, i8*)*, i8 (i8*, i8*)** %field.1226, align 8, !dbg !614
  %call.321 = call i8 %.field.ld.147(i8* nest undef, i8* %tmpv.1456.sroa.0.sroa.3.0.copyload23), !dbg !614
  %phitmp = and i8 %call.321, 1
  %2 = xor i8 %phitmp, 1
  br label %fallthrough.517
}

define void @command_line_arguments.AndroidEnv({ %IPST.3, %error.0 }* nocapture sret %sret.formal.3, i8* nest nocapture readnone %nest.5, %Flags.0* %f, i64 %goarch.chunk0, i64 %goarch.chunk1) #0 !dbg !615 {
entry:
  %tmp.63.i.i = alloca [2 x { i8*, i64 }], align 8
  %tmp.61.i.i = alloca %IPST.2, align 8
  %arch.i.i = alloca { i8*, i64 }, align 8
  %tmpv.257.i.i = alloca { i8*, i64 }, align 8
  %tmpv.258.i.i = alloca [1 x %IPST.16], align 8
  %tmp.46.i = alloca %IPST.2, align 8
  %ndkRoot.i = alloca { i8*, i64 }, align 8
  %hostTag.i = alloca { i8*, i64 }, align 8
  %tmpv.153.i = alloca %.command-line-arguments.ndkToolchain.0, align 8
  %tmpv.155.i = alloca %.command-line-arguments.ndkToolchain.0, align 8
  %tmpv.157.i = alloca %.command-line-arguments.ndkToolchain.0, align 8
  %tmpv.159.i = alloca %.command-line-arguments.ndkToolchain.0, align 8
  %tmpv.160.i = alloca [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], align 8
  %tmpv.161.i = alloca { i8*, i64 }, align 8
  %tmpv.169.i = alloca { i8*, i64 }, align 8
  %tmpv.170.i = alloca [1 x %IPST.16], align 8
  %sret.actual.48.i = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmp.38 = alloca [2 x { i8*, i64 }], align 8
  %tmp.37 = alloca [2 x { i8*, i64 }], align 8
  %tmp.36 = alloca [2 x { i8*, i64 }], align 8
  %tmp.35 = alloca [2 x { i8*, i64 }], align 8
  %tmp.34 = alloca [2 x { i8*, i64 }], align 8
  %tmp.33 = alloca [2 x { i8*, i64 }], align 8
  %tmp.32 = alloca %IPST.2, align 8
  %tmp.29 = alloca %IPST.2, align 8
  %tmp.24 = alloca %IPST.2, align 8
  %tmpv.91 = alloca { i8*, i64 }, align 8
  %tmpv.94 = alloca { i8*, i64 }, align 8
  %tmpv.96 = alloca { i8*, i64 }, align 8
  %tmpv.97 = alloca [2 x %IPST.16], align 8
  %tmpv.101 = alloca { i8*, i64 }, align 8
  %tmpv.104 = alloca { i8*, i64 }, align 8
  %tmpv.106 = alloca { i8*, i64 }, align 8
  %tmpv.108 = alloca { i8*, i64 }, align 8
  %tmpv.110 = alloca { i8*, i64 }, align 8
  %tmpv.111 = alloca [4 x %IPST.16], align 8
  %tmpv.115 = alloca { i8*, i64 }, align 8
  %tmpv.117 = alloca { i8*, i64 }, align 8
  %tmpv.118 = alloca [2 x %IPST.16], align 8
  %tmpv.137 = alloca [8 x { i8*, i64 }], align 8
  %tmpv.138 = alloca %IPST.3, align 8
  %tmpv.140 = alloca { i8*, i64 }, align 8
  %sret.actual.45 = alloca %IPST.4, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !616, metadata !DIExpression()), !dbg !617
  call void @llvm.dbg.value(metadata i64 %goarch.chunk0, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !619
  call void @llvm.dbg.value(metadata i64 %goarch.chunk1, metadata !618, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !619
  %0 = bitcast %IPST.2* %tmp.46.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0), !dbg !620
  %1 = bitcast %.command-line-arguments.ndkToolchain.0* %tmpv.153.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1), !dbg !620
  %2 = bitcast %.command-line-arguments.ndkToolchain.0* %tmpv.155.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %2), !dbg !620
  %3 = bitcast %.command-line-arguments.ndkToolchain.0* %tmpv.157.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %3), !dbg !620
  %4 = bitcast %.command-line-arguments.ndkToolchain.0* %tmpv.159.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %4), !dbg !620
  %5 = bitcast [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5), !dbg !620
  %6 = bitcast { i8*, i64 }* %tmpv.161.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6), !dbg !620
  %7 = bitcast { i8*, i64 }* %tmpv.169.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7), !dbg !620
  %8 = bitcast [1 x %IPST.16]* %tmpv.170.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8), !dbg !620
  %9 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.48.i to i8*, !dbg !620
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9), !dbg !620
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !640, metadata !DIExpression()), !dbg !620
  call void @llvm.dbg.value(metadata i64 %goarch.chunk0, metadata !641, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !642
  call void @llvm.dbg.value(metadata i64 %goarch.chunk1, metadata !641, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !642
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !643, metadata !DIExpression()), !dbg !644
  %10 = bitcast { i8*, i64 }* %ndkRoot.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10)
  %11 = bitcast { i8*, i64 }* %hostTag.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %call.54.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0)), !dbg !645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 16 bitcast (%.command-line-arguments.ndkToolchain.0* @const.90 to i8*), i64 112, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0), i8* %call.54.i, i8* nonnull %1), !dbg !645
  %call.55.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0)), !dbg !647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 16 bitcast (%.command-line-arguments.ndkToolchain.0* @const.96 to i8*), i64 112, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0), i8* %call.55.i, i8* nonnull %2), !dbg !647
  %call.56.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0)), !dbg !648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 16 bitcast (%.command-line-arguments.ndkToolchain.0* @const.102 to i8*), i64 112, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0), i8* %call.56.i, i8* nonnull %3), !dbg !648
  %call.57.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0)), !dbg !649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 16 bitcast (%.command-line-arguments.ndkToolchain.0* @const.108 to i8*), i64 112, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments..command_line_arguments.ndkToolchain..d, i64 0, i32 0), i8* %call.57.i, i8* nonnull %4), !dbg !649
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i8*, i64 }* @const.65 to i8*), i64 16, i1 false), !dbg !650
  %tmp.41.sroa.2.0.cast.767.sroa_idx78.i = getelementptr inbounds [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i, i64 0, i64 0, i32 1, !dbg !650
  %12 = bitcast %.command-line-arguments.ndkToolchain.0** %tmp.41.sroa.2.0.cast.767.sroa_idx78.i to i8**, !dbg !650
  store i8* %call.54.i, i8** %12, align 8, !dbg !650
  %tmp.42.sroa.0.0.cast.769.sroa_idx.i = getelementptr inbounds [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i, i64 0, i64 1, !dbg !650
  %tmp.42.sroa.0.0.cast.769.sroa_cast.i = bitcast { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }* %tmp.42.sroa.0.0.cast.769.sroa_idx.i to i8*, !dbg !650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.42.sroa.0.0.cast.769.sroa_cast.i, i8* align 8 bitcast ({ i8*, i64 }* @const.109 to i8*), i64 16, i1 false), !dbg !650
  %tmp.42.sroa.2.0.cast.769.sroa_idx80.i = getelementptr inbounds [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i, i64 0, i64 1, i32 1, !dbg !650
  %13 = bitcast %.command-line-arguments.ndkToolchain.0** %tmp.42.sroa.2.0.cast.769.sroa_idx80.i to i8**, !dbg !650
  store i8* %call.55.i, i8** %13, align 8, !dbg !650
  %tmp.43.sroa.0.0.cast.771.sroa_idx.i = getelementptr inbounds [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i, i64 0, i64 2, !dbg !650
  %tmp.43.sroa.0.0.cast.771.sroa_cast.i = bitcast { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }* %tmp.43.sroa.0.0.cast.771.sroa_idx.i to i8*, !dbg !650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.43.sroa.0.0.cast.771.sroa_cast.i, i8* align 8 bitcast ({ i8*, i64 }* @const.110 to i8*), i64 16, i1 false), !dbg !650
  %tmp.43.sroa.2.0.cast.771.sroa_idx82.i = getelementptr inbounds [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i, i64 0, i64 2, i32 1, !dbg !650
  %14 = bitcast %.command-line-arguments.ndkToolchain.0** %tmp.43.sroa.2.0.cast.771.sroa_idx82.i to i8**, !dbg !650
  store i8* %call.56.i, i8** %14, align 8, !dbg !650
  %tmp.44.sroa.0.0.cast.773.sroa_idx.i = getelementptr inbounds [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i, i64 0, i64 3, !dbg !650
  %tmp.44.sroa.0.0.cast.773.sroa_cast.i = bitcast { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }* %tmp.44.sroa.0.0.cast.773.sroa_idx.i to i8*, !dbg !650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.44.sroa.0.0.cast.773.sroa_cast.i, i8* align 8 bitcast ({ i8*, i64 }* @const.111 to i8*), i64 16, i1 false), !dbg !650
  %tmp.44.sroa.2.0.cast.773.sroa_idx84.i = getelementptr inbounds [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }], [4 x { { i8*, i64 }, %.command-line-arguments.ndkToolchain.0* }]* %tmpv.160.i, i64 0, i64 3, i32 1, !dbg !650
  %15 = bitcast %.command-line-arguments.ndkToolchain.0** %tmp.44.sroa.2.0.cast.773.sroa_idx84.i to i8**, !dbg !650
  store i8* %call.57.i, i8** %15, align 8, !dbg !650
  %call.58.i = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7.1command_line_arguments.ndkToolchain to i8*), i64 4, i64 24, i64 16, i8* nonnull %5), !dbg !650
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.58.i, metadata !651, metadata !DIExpression()), !dbg !665
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !666, metadata !DIExpression()), !dbg !667
  call void @llvm.dbg.value(metadata i8 0, metadata !668, metadata !DIExpression()), !dbg !667
  %goarch.addr.sroa.0.0.cast.808.sroa_cast.i = bitcast { i8*, i64 }* %tmpv.161.i to i64*
  store i64 %goarch.chunk0, i64* %goarch.addr.sroa.0.0.cast.808.sroa_cast.i, align 8
  %goarch.addr.sroa.3.0.cast.808.sroa_idx74.i = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.161.i, i64 0, i32 1
  store i64 %goarch.chunk1, i64* %goarch.addr.sroa.3.0.cast.808.sroa_idx74.i, align 8
  %call.59.i = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1command_line_arguments.ndkToolchain, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.58.i, i8* nonnull %6), !dbg !669
  %call.59.fca.0.extract.i = extractvalue { i64, i8 } %call.59.i, 0, !dbg !669
  %call.59.fca.1.extract.i = extractvalue { i64, i8 } %call.59.i, 1, !dbg !669
  %cast.817.i = inttoptr i64 %call.59.fca.0.extract.i to %.command-line-arguments.ndkToolchain.0**, !dbg !669
  %.ld.12.i = load %.command-line-arguments.ndkToolchain.0*, %.command-line-arguments.ndkToolchain.0** %cast.817.i, align 8, !dbg !669
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %.ld.12.i, metadata !666, metadata !DIExpression()), !dbg !667
  call void @llvm.dbg.value(metadata i8 %call.59.fca.1.extract.i, metadata !668, metadata !DIExpression()), !dbg !667
  %icmp.38.i = icmp eq i8 %call.59.fca.1.extract.i, 0, !dbg !670
  br i1 %icmp.38.i, label %then.30.i, label %else.30.i

then.30.i:                                        ; preds = %entry
  %call.60.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !671
  %goarch.addr.sroa.0.0.cast.820.sroa_cast.i = bitcast { i8*, i64 }* %tmpv.169.i to i64*
  store i64 %goarch.chunk0, i64* %goarch.addr.sroa.0.0.cast.820.sroa_cast.i, align 8
  %goarch.addr.sroa.3.0.cast.820.sroa_idx75.i = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.169.i, i64 0, i32 1
  store i64 %goarch.chunk1, i64* %goarch.addr.sroa.3.0.cast.820.sroa_idx75.i, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.60.i, i8* nonnull %7), !dbg !671
  %tmp.45.sroa.0.0.cast.825.sroa_idx.i = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.170.i, i64 0, i64 0, i32 0, !dbg !671
  store %_type.0* @string..d, %_type.0** %tmp.45.sroa.0.0.cast.825.sroa_idx.i, align 8, !dbg !671
  %tmp.45.sroa.2.0.cast.825.sroa_idx85.i = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.170.i, i64 0, i64 0, i32 1, !dbg !671
  store i8* %call.60.i, i8** %tmp.45.sroa.2.0.cast.825.sroa_idx85.i, align 8, !dbg !671
  %field.128.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.46.i, i64 0, i32 0, !dbg !671
  %cast.828.i = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.170.i, i64 0, i64 0, !dbg !671
  store %IPST.16* %cast.828.i, %IPST.16** %field.128.i, align 8, !dbg !671
  %field.129.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.46.i, i64 0, i32 1, !dbg !671
  store i64 1, i64* %field.129.i, align 8, !dbg !671
  %field.130.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.46.i, i64 0, i32 2, !dbg !671
  store i64 1, i64* %field.130.i, align 8, !dbg !671
  %call.61.i = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([36 x i8]* @const.144 to i64), i64 35, %IPST.2* byval nonnull %tmp.46.i), !dbg !671
  %call.61.fca.0.extract.i = extractvalue { i64, i64 } %call.61.i, 0, !dbg !671
  %call.61.fca.1.extract.i = extractvalue { i64, i64 } %call.61.i, 1, !dbg !671
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !643, metadata !DIExpression()), !dbg !644
  call void @llvm.dbg.value(metadata i64 %call.61.fca.0.extract.i, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !673
  call void @llvm.dbg.value(metadata i64 %call.61.fca.1.extract.i, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !673
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %2), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8), !dbg !674
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9), !dbg !674
  br label %command_line_arguments.toolchainForArch.exit, !dbg !674

else.30.i:                                        ; preds = %entry
  call void @command_line_arguments.NDKPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.48.i, i8* nest undef, %Flags.0* %f), !dbg !675
  %tmpv.172.sroa.3.0.cast.841.sroa_idx34.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.48.i, i64 0, i32 1, i32 0, !dbg !675
  %tmpv.172.sroa.3.0.copyload35.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.172.sroa.3.0.cast.841.sroa_idx34.i, align 8, !dbg !675
  %tmpv.172.sroa.4.0.cast.841.sroa_idx36.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.48.i, i64 0, i32 1, i32 1, !dbg !675
  %16 = bitcast i8** %tmpv.172.sroa.4.0.cast.841.sroa_idx36.i to i64*, !dbg !675
  %tmpv.172.sroa.4.0.copyload371.i = load i64, i64* %16, align 8, !dbg !675
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* nonnull align 8 %9, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.172.sroa.3.0.copyload35.i, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i8** %tmpv.172.sroa.4.0.cast.841.sroa_idx36.i, metadata !676, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  %icmp.39.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.172.sroa.3.0.copyload35.i, null, !dbg !678
  br i1 %icmp.39.i, label %else.31.i, label %then.31.i

then.31.i:                                        ; preds = %else.30.i
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !643, metadata !DIExpression()), !dbg !644
  %17 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.172.sroa.3.0.copyload35.i to i64, !dbg !679
  call void @llvm.dbg.value(metadata i64 %17, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !673
  call void @llvm.dbg.value(metadata i64 %tmpv.172.sroa.4.0.copyload371.i, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !673
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %2), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8), !dbg !679
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9), !dbg !679
  br label %command_line_arguments.toolchainForArch.exit, !dbg !679

else.31.i:                                        ; preds = %else.30.i
  %icmp.40.i = icmp eq %.command-line-arguments.ndkToolchain.0* %.ld.12.i, null, !dbg !680
  br i1 %icmp.40.i, label %then.32.i, label %else.32.i

then.32.i:                                        ; preds = %else.31.i
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !680
  unreachable

else.32.i:                                        ; preds = %else.31.i
  %field.138.i = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %.ld.12.i, i64 0, i32 5, !dbg !680
  %runtime.writeBarrier.ld.1.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !681
  %icmp.42.i = icmp eq i32 %runtime.writeBarrier.ld.1.i, 0, !dbg !681
  %cast.862.i = bitcast { i8*, i64 }* %field.138.i to i8*, !dbg !681
  br i1 %icmp.42.i, label %else.34.i, label %else.33.i

fallthrough.33.i:                                 ; preds = %else.34.i, %else.33.i
  %18 = bitcast [2 x { i8*, i64 }]* %tmp.63.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18)
  %19 = bitcast %IPST.2* %tmp.61.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast { i8*, i64 }* %tmpv.257.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %21 = bitcast [1 x %IPST.16]* %tmpv.258.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  %arch.0.sroa_cast.i.i = bitcast { i8*, i64 }* %arch.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %arch.0.sroa_cast.i.i)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %arch.0.sroa_cast.i.i, i8 0, i64 16, i1 false)
  %call.74.i.i = call i8 @runtime.eqstring(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.103 to i64), i64 5, i64 ptrtoint ([4 x i8]* @const.97 to i64), i64 3), !dbg !682
  %icmp.68.i.i = icmp eq i8 %call.74.i.i, 1, !dbg !682
  br i1 %icmp.68.i.i, label %else.58.i.i, label %label.0.i.i

else.58.i.i:                                      ; preds = %fallthrough.33.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %arch.0.sroa_cast.i.i, i8* align 8 bitcast ({ i8*, i64 }* @const.170 to i8*), i64 16, i1 false), !dbg !688
  br label %command_line_arguments.ndkHostTag.exit.thread.i

label.0.i.i:                                      ; preds = %fallthrough.33.i
  %call.75.i.i = call i8 @runtime.eqstring(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.103 to i64), i64 5, i64 ptrtoint ([6 x i8]* @const.103 to i64), i64 5), !dbg !689
  %icmp.70.i.i = icmp eq i8 %call.75.i.i, 1, !dbg !689
  br i1 %icmp.70.i.i, label %else.59.i.i, label %command_line_arguments.ndkHostTag.exit.i

command_line_arguments.ndkHostTag.exit.thread.i:  ; preds = %else.59.i.i, %else.58.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast ({ i8*, i64 }* @const.177 to i8*), i64 16, i1 false), !dbg !690
  %index.86.i.i = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.63.i.i, i64 0, i64 1, !dbg !690
  %cast.1197.i.i = bitcast { i8*, i64 }* %index.86.i.i to i8*, !dbg !690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1197.i.i, i8* nonnull align 8 %arch.0.sroa_cast.i.i, i64 16, i1 false), !dbg !690
  %call.78.i.i = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.63.i.i), !dbg !690
  %call.78.fca.0.extract.i.i = extractvalue { i64, i64 } %call.78.i.i, 0, !dbg !690
  %call.78.fca.1.extract.i.i = extractvalue { i64, i64 } %call.78.i.i, 1, !dbg !690
  call void @llvm.dbg.value(metadata i64 %call.78.fca.0.extract.i.i, metadata !691, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !692
  call void @llvm.dbg.value(metadata i64 %call.78.fca.1.extract.i.i, metadata !691, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !692
  call void @llvm.dbg.value(metadata i64 0, metadata !693, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !694
  call void @llvm.dbg.value(metadata i64 0, metadata !693, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !694
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %arch.0.sroa_cast.i.i), !dbg !695
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18), !dbg !695
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19), !dbg !695
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20), !dbg !695
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21), !dbg !695
  %tmpv.181.sroa.0.0..sroa_cast11.i = bitcast { i8*, i64 }* %hostTag.i to i64*
  store i64 %call.78.fca.0.extract.i.i, i64* %tmpv.181.sroa.0.0..sroa_cast11.i, align 8
  %tmpv.181.sroa.2.0..sroa_idx712.i = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %hostTag.i, i64 0, i32 1
  store i64 %call.78.fca.1.extract.i.i, i64* %tmpv.181.sroa.2.0..sroa_idx712.i, align 8
  call void @llvm.dbg.value(metadata i64 %call.77.fca.0.extract.i.i, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i8** undef, metadata !676, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  br label %else.36.i

else.59.i.i:                                      ; preds = %label.0.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %arch.0.sroa_cast.i.i, i8* align 8 bitcast ({ i8*, i64 }* @const.171 to i8*), i64 16, i1 false), !dbg !696
  br label %command_line_arguments.ndkHostTag.exit.thread.i

command_line_arguments.ndkHostTag.exit.i:         ; preds = %label.0.i.i
  %call.76.i.i = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 bitcast ({ i8*, i64 }* @const.111 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.76.i.i, i8* nonnull %20), !dbg !697
  %tmp.60.sroa.0.0.cast.1176.sroa_idx.i.i = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.258.i.i, i64 0, i64 0, i32 0, !dbg !697
  store %_type.0* @string..d, %_type.0** %tmp.60.sroa.0.0.cast.1176.sroa_idx.i.i, align 8, !dbg !697
  %tmp.60.sroa.2.0.cast.1176.sroa_idx54.i.i = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.258.i.i, i64 0, i64 0, i32 1, !dbg !697
  store i8* %call.76.i.i, i8** %tmp.60.sroa.2.0.cast.1176.sroa_idx54.i.i, align 8, !dbg !697
  %field.182.i.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.61.i.i, i64 0, i32 0, !dbg !697
  %cast.1179.i.i = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.258.i.i, i64 0, i64 0, !dbg !697
  store %IPST.16* %cast.1179.i.i, %IPST.16** %field.182.i.i, align 8, !dbg !697
  %field.183.i.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.61.i.i, i64 0, i32 1, !dbg !697
  store i64 1, i64* %field.183.i.i, align 8, !dbg !697
  %field.184.i.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.61.i.i, i64 0, i32 2, !dbg !697
  store i64 1, i64* %field.184.i.i, align 8, !dbg !697
  %call.77.i.i = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([36 x i8]* @const.174 to i64), i64 35, %IPST.2* byval nonnull %tmp.61.i.i), !dbg !697
  %call.77.fca.0.extract.i.i = extractvalue { i64, i64 } %call.77.i.i, 0, !dbg !697
  call void @llvm.dbg.value(metadata i64 0, metadata !691, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !692
  call void @llvm.dbg.value(metadata i64 0, metadata !691, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !692
  call void @llvm.dbg.value(metadata i64 %call.77.fca.0.extract.i.i, metadata !693, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !694
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %arch.0.sroa_cast.i.i), !dbg !698
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18), !dbg !698
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19), !dbg !698
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20), !dbg !698
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21), !dbg !698
  call void @llvm.dbg.value(metadata i64 %call.77.fca.0.extract.i.i, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i8** undef, metadata !676, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  %icmp.43.i = icmp eq i64 %call.77.fca.0.extract.i.i, 0, !dbg !699
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false)
  br i1 %icmp.43.i, label %else.36.i, label %command_line_arguments.toolchainForArch.exit.thread

else.33.i:                                        ; preds = %else.32.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.862.i, i8* nonnull %10), !dbg !681
  br label %fallthrough.33.i

else.34.i:                                        ; preds = %else.32.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.862.i, i8* nonnull align 8 %10, i64 16, i1 false), !dbg !681
  br label %fallthrough.33.i

command_line_arguments.toolchainForArch.exit.thread: ; preds = %command_line_arguments.ndkHostTag.exit.i
  %call.77.fca.1.extract.i.i = extractvalue { i64, i64 } %call.77.i.i, 1, !dbg !697
  call void @llvm.dbg.value(metadata i64 %call.77.fca.1.extract.i.i, metadata !693, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !694
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !643, metadata !DIExpression()), !dbg !644
  call void @llvm.dbg.value(metadata i64 %call.77.fca.0.extract.i.i, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !673
  call void @llvm.dbg.value(metadata i64 %call.77.fca.1.extract.i.i, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !673
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %2), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8), !dbg !700
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9), !dbg !700
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !701, metadata !DIExpression()), !dbg !702
  br label %then.20

else.36.i:                                        ; preds = %command_line_arguments.ndkHostTag.exit.i, %command_line_arguments.ndkHostTag.exit.thread.i
  %field.144.i = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %.ld.12.i, i64 0, i32 6, !dbg !703
  %runtime.writeBarrier.ld.2.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !704
  %icmp.46.i = icmp eq i32 %runtime.writeBarrier.ld.2.i, 0, !dbg !704
  %cast.890.i = bitcast { i8*, i64 }* %field.144.i to i8*, !dbg !704
  br i1 %icmp.46.i, label %else.38.i, label %else.37.i

else.37.i:                                        ; preds = %else.36.i
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.890.i, i8* nonnull %11), !dbg !704
  br label %else.21

else.38.i:                                        ; preds = %else.36.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.890.i, i8* nonnull align 8 %11, i64 16, i1 false), !dbg !704
  br label %else.21

command_line_arguments.toolchainForArch.exit:     ; preds = %then.31.i, %then.30.i
  %sret.actual.29.sroa.10.0 = phi i64 [ %call.61.fca.1.extract.i, %then.30.i ], [ %tmpv.172.sroa.4.0.copyload371.i, %then.31.i ], !dbg !705
  %sret.actual.29.sroa.5.0 = phi i64 [ %call.61.fca.0.extract.i, %then.30.i ], [ %17, %then.31.i ], !dbg !705
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !701, metadata !DIExpression()), !dbg !702
  %icmp.23 = icmp eq i64 %sret.actual.29.sroa.5.0, 0, !dbg !706
  br i1 %icmp.23, label %then.21, label %then.20

then.20:                                          ; preds = %command_line_arguments.toolchainForArch.exit.thread, %command_line_arguments.toolchainForArch.exit
  %sret.actual.29.sroa.5.0177 = phi i64 [ %call.77.fca.0.extract.i.i, %command_line_arguments.toolchainForArch.exit.thread ], [ %sret.actual.29.sroa.5.0, %command_line_arguments.toolchainForArch.exit ]
  %sret.actual.29.sroa.10.0176 = phi i64 [ %call.77.fca.1.extract.i.i, %command_line_arguments.toolchainForArch.exit.thread ], [ %sret.actual.29.sroa.10.0, %command_line_arguments.toolchainForArch.exit ]
  %22 = inttoptr i64 %sret.actual.29.sroa.5.0177 to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !707
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %22, metadata !708, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !702
  call void @llvm.dbg.value(metadata i8** undef, metadata !708, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !702
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !709, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !710
  call void @llvm.dbg.value(metadata i64 0, metadata !709, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !710
  call void @llvm.dbg.value(metadata i64 0, metadata !709, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !710
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %22, metadata !711, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !712
  call void @llvm.dbg.value(metadata i8** undef, metadata !711, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !712
  %tmp.21.sroa.4.0.cast.464.sroa_idx142 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 0, !dbg !713
  %23 = bitcast { %IPST.3, %error.0 }* %sret.formal.3 to i8*, !dbg !713
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false), !dbg !713
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %22, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.21.sroa.4.0.cast.464.sroa_idx142, align 8, !dbg !713
  %tmp.21.sroa.5.0.cast.464.sroa_idx143 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 1, !dbg !713
  %24 = bitcast i8** %tmp.21.sroa.5.0.cast.464.sroa_idx143 to i64*, !dbg !713
  store i64 %sret.actual.29.sroa.10.0176, i64* %24, align 8, !dbg !713
  ret void, !dbg !713

then.21:                                          ; preds = %command_line_arguments.toolchainForArch.exit
  %call.29173 = call { i64, i64 } @command_line_arguments.ndkToolchain.gccToolchain(i8* nest undef, %.command-line-arguments.ndkToolchain.0* null), !dbg !714
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !715
  unreachable

else.21:                                          ; preds = %else.38.i, %else.37.i
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %.ld.12.i, metadata !643, metadata !DIExpression()), !dbg !644
  call void @llvm.dbg.value(metadata i64 0, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !673
  call void @llvm.dbg.value(metadata i64 0, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !673
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %2), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %4), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8), !dbg !716
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9), !dbg !716
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* null, metadata !701, metadata !DIExpression()), !dbg !702
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %22, metadata !708, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !702
  %call.29 = call { i64, i64 } @command_line_arguments.ndkToolchain.gccToolchain(i8* nest undef, %.command-line-arguments.ndkToolchain.0* nonnull %.ld.12.i), !dbg !714
  %call.29.fca.1.extract = extractvalue { i64, i64 } %call.29, 1, !dbg !714
  %call.29.fca.0.extract = extractvalue { i64, i64 } %call.29, 0, !dbg !714
  %field.72 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %.ld.12.i, i64 0, i32 4, !dbg !715
  %cast.471 = bitcast { i8*, i64 }* %tmpv.91 to i8*
  %cast.472 = bitcast { i8*, i64 }* %field.72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.471, i8* nonnull align 8 %cast.472, i64 16, i1 false)
  %call.30 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !717
  %cast.474 = bitcast { i8*, i64 }* %tmpv.94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.474, i8* nonnull align 8 %cast.471, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.30, i8* nonnull %cast.474), !dbg !717
  %call.31 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !717
  %tmpv.90.sroa.0.0.cast.479.sroa_cast = bitcast { i8*, i64 }* %tmpv.96 to i64*
  store i64 %call.29.fca.0.extract, i64* %tmpv.90.sroa.0.0.cast.479.sroa_cast, align 8
  %tmpv.90.sroa.2.0.cast.479.sroa_idx45 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.96, i64 0, i32 1
  store i64 %call.29.fca.1.extract, i64* %tmpv.90.sroa.2.0.cast.479.sroa_idx45, align 8
  %cast.482 = bitcast { i8*, i64 }* %tmpv.96 to i8*, !dbg !717
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.31, i8* nonnull %cast.482), !dbg !717
  %tmp.22.sroa.0.0.cast.485.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.97, i64 0, i64 0, i32 0, !dbg !717
  store %_type.0* @string..d, %_type.0** %tmp.22.sroa.0.0.cast.485.sroa_idx, align 8, !dbg !717
  %tmp.22.sroa.2.0.cast.485.sroa_idx144 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.97, i64 0, i64 0, i32 1, !dbg !717
  store i8* %call.30, i8** %tmp.22.sroa.2.0.cast.485.sroa_idx144, align 8, !dbg !717
  %tmp.23.sroa.0.0.cast.487.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.97, i64 0, i64 1, i32 0, !dbg !717
  store %_type.0* @string..d, %_type.0** %tmp.23.sroa.0.0.cast.487.sroa_idx, align 8, !dbg !717
  %tmp.23.sroa.2.0.cast.487.sroa_idx145 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.97, i64 0, i64 1, i32 1, !dbg !717
  store i8* %call.31, i8** %tmp.23.sroa.2.0.cast.487.sroa_idx145, align 8, !dbg !717
  %field.77 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.24, i64 0, i32 0, !dbg !717
  %cast.490 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.97, i64 0, i64 0, !dbg !717
  store %IPST.16* %cast.490, %IPST.16** %field.77, align 8, !dbg !717
  %field.78 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.24, i64 0, i32 1, !dbg !717
  store i64 2, i64* %field.78, align 8, !dbg !717
  %field.79 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.24, i64 0, i32 2, !dbg !717
  store i64 2, i64* %field.79, align 8, !dbg !717
  %call.32 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.38 to i64), i64 28, %IPST.2* byval nonnull %tmp.24), !dbg !717
  %call.32.fca.0.extract = extractvalue { i64, i64 } %call.32, 0, !dbg !717
  %call.32.fca.1.extract = extractvalue { i64, i64 } %call.32, 1, !dbg !717
  call void @llvm.dbg.value(metadata i64 %call.32.fca.0.extract, metadata !718, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !719
  call void @llvm.dbg.value(metadata i64 %call.32.fca.1.extract, metadata !718, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !719
  %call.33 = call { i64, i64 } @command_line_arguments.ndkToolchain.csysroot(i8* nest undef, %.command-line-arguments.ndkToolchain.0* nonnull %.ld.12.i), !dbg !720
  %call.34 = call { i64, i64 } @command_line_arguments.ndkToolchain.isystem(i8* nest undef, %.command-line-arguments.ndkToolchain.0* nonnull %.ld.12.i), !dbg !721
  %call.34.fca.1.extract = extractvalue { i64, i64 } %call.34, 1, !dbg !721
  %call.34.fca.0.extract = extractvalue { i64, i64 } %call.34, 0, !dbg !721
  %call.33.fca.1.extract = extractvalue { i64, i64 } %call.33, 1, !dbg !720
  %call.33.fca.0.extract = extractvalue { i64, i64 } %call.33, 0, !dbg !720
  %field.80 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %.ld.12.i, i64 0, i32 1, !dbg !722
  %cast.503 = bitcast { i8*, i64 }* %tmpv.101 to i8*
  %cast.504 = bitcast { i8*, i64 }* %field.80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.503, i8* nonnull align 8 %cast.504, i64 16, i1 false)
  %call.35 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !723
  %flags.sroa.0.0.cast.506.sroa_cast = bitcast { i8*, i64 }* %tmpv.104 to i64*
  store i64 %call.32.fca.0.extract, i64* %flags.sroa.0.0.cast.506.sroa_cast, align 8
  %flags.sroa.6.0.cast.506.sroa_idx84 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.104, i64 0, i32 1
  store i64 %call.32.fca.1.extract, i64* %flags.sroa.6.0.cast.506.sroa_idx84, align 8
  %cast.509 = bitcast { i8*, i64 }* %tmpv.104 to i8*, !dbg !723
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.35, i8* nonnull %cast.509), !dbg !723
  %call.36 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !723
  %tmpv.99.sroa.0.0.cast.511.sroa_cast = bitcast { i8*, i64 }* %tmpv.106 to i64*
  store i64 %call.33.fca.0.extract, i64* %tmpv.99.sroa.0.0.cast.511.sroa_cast, align 8
  %tmpv.99.sroa.2.0.cast.511.sroa_idx41 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.106, i64 0, i32 1
  store i64 %call.33.fca.1.extract, i64* %tmpv.99.sroa.2.0.cast.511.sroa_idx41, align 8
  %cast.514 = bitcast { i8*, i64 }* %tmpv.106 to i8*, !dbg !723
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.36, i8* nonnull %cast.514), !dbg !723
  %call.37 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !723
  %tmpv.100.sroa.0.0.cast.516.sroa_cast = bitcast { i8*, i64 }* %tmpv.108 to i64*
  store i64 %call.34.fca.0.extract, i64* %tmpv.100.sroa.0.0.cast.516.sroa_cast, align 8
  %tmpv.100.sroa.2.0.cast.516.sroa_idx39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.108, i64 0, i32 1
  store i64 %call.34.fca.1.extract, i64* %tmpv.100.sroa.2.0.cast.516.sroa_idx39, align 8
  %cast.519 = bitcast { i8*, i64 }* %tmpv.108 to i8*, !dbg !723
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.37, i8* nonnull %cast.519), !dbg !723
  %call.38 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !723
  %cast.521 = bitcast { i8*, i64 }* %tmpv.110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.521, i8* nonnull align 8 %cast.503, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.38, i8* nonnull %cast.521), !dbg !723
  %tmp.25.sroa.0.0.cast.529.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 0, i32 0, !dbg !723
  store %_type.0* @string..d, %_type.0** %tmp.25.sroa.0.0.cast.529.sroa_idx, align 8, !dbg !723
  %tmp.25.sroa.2.0.cast.529.sroa_idx146 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 0, i32 1, !dbg !723
  store i8* %call.35, i8** %tmp.25.sroa.2.0.cast.529.sroa_idx146, align 8, !dbg !723
  %tmp.26.sroa.0.0.cast.531.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 1, i32 0, !dbg !723
  store %_type.0* @string..d, %_type.0** %tmp.26.sroa.0.0.cast.531.sroa_idx, align 8, !dbg !723
  %tmp.26.sroa.2.0.cast.531.sroa_idx147 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 1, i32 1, !dbg !723
  store i8* %call.36, i8** %tmp.26.sroa.2.0.cast.531.sroa_idx147, align 8, !dbg !723
  %tmp.27.sroa.0.0.cast.533.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 2, i32 0, !dbg !723
  store %_type.0* @string..d, %_type.0** %tmp.27.sroa.0.0.cast.533.sroa_idx, align 8, !dbg !723
  %tmp.27.sroa.2.0.cast.533.sroa_idx148 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 2, i32 1, !dbg !723
  store i8* %call.37, i8** %tmp.27.sroa.2.0.cast.533.sroa_idx148, align 8, !dbg !723
  %tmp.28.sroa.0.0.cast.535.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 3, i32 0, !dbg !723
  store %_type.0* @string..d, %_type.0** %tmp.28.sroa.0.0.cast.535.sroa_idx, align 8, !dbg !723
  %tmp.28.sroa.2.0.cast.535.sroa_idx149 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 3, i32 1, !dbg !723
  store i8* %call.38, i8** %tmp.28.sroa.2.0.cast.535.sroa_idx149, align 8, !dbg !723
  %field.89 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.29, i64 0, i32 0, !dbg !723
  %cast.538 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.111, i64 0, i64 0, !dbg !723
  store %IPST.16* %cast.538, %IPST.16** %field.89, align 8, !dbg !723
  %field.90 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.29, i64 0, i32 1, !dbg !723
  store i64 4, i64* %field.90, align 8, !dbg !723
  %field.91 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.29, i64 0, i32 2, !dbg !723
  store i64 4, i64* %field.91, align 8, !dbg !723
  %call.39 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([49 x i8]* @const.40 to i64), i64 48, %IPST.2* byval nonnull %tmp.29), !dbg !723
  %call.39.fca.0.extract = extractvalue { i64, i64 } %call.39, 0, !dbg !723
  %call.39.fca.1.extract = extractvalue { i64, i64 } %call.39, 1, !dbg !723
  call void @llvm.dbg.value(metadata i64 %call.39.fca.0.extract, metadata !724, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !725
  call void @llvm.dbg.value(metadata i64 %call.39.fca.1.extract, metadata !724, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !725
  %call.40 = call { i64, i64 } @command_line_arguments.ndkToolchain.ldsysroot(i8* nest undef, %.command-line-arguments.ndkToolchain.0* nonnull %.ld.12.i), !dbg !726
  %call.40.fca.0.extract = extractvalue { i64, i64 } %call.40, 0, !dbg !726
  %call.40.fca.1.extract = extractvalue { i64, i64 } %call.40, 1, !dbg !726
  %call.41 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !727
  %flags.sroa.0.0.cast.548.sroa_cast = bitcast { i8*, i64 }* %tmpv.115 to i64*
  store i64 %call.32.fca.0.extract, i64* %flags.sroa.0.0.cast.548.sroa_cast, align 8
  %flags.sroa.6.0.cast.548.sroa_idx85 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.115, i64 0, i32 1
  store i64 %call.32.fca.1.extract, i64* %flags.sroa.6.0.cast.548.sroa_idx85, align 8
  %cast.551 = bitcast { i8*, i64 }* %tmpv.115 to i8*, !dbg !727
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.41, i8* nonnull %cast.551), !dbg !727
  %call.42 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !727
  %tmpv.113.sroa.0.0.cast.553.sroa_cast = bitcast { i8*, i64 }* %tmpv.117 to i64*
  store i64 %call.40.fca.0.extract, i64* %tmpv.113.sroa.0.0.cast.553.sroa_cast, align 8
  %tmpv.113.sroa.2.0.cast.553.sroa_idx35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.117, i64 0, i32 1
  store i64 %call.40.fca.1.extract, i64* %tmpv.113.sroa.2.0.cast.553.sroa_idx35, align 8
  %cast.556 = bitcast { i8*, i64 }* %tmpv.117 to i8*, !dbg !727
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.42, i8* nonnull %cast.556), !dbg !727
  %tmp.30.sroa.0.0.cast.559.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.118, i64 0, i64 0, i32 0, !dbg !727
  store %_type.0* @string..d, %_type.0** %tmp.30.sroa.0.0.cast.559.sroa_idx, align 8, !dbg !727
  %tmp.30.sroa.2.0.cast.559.sroa_idx150 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.118, i64 0, i64 0, i32 1, !dbg !727
  store i8* %call.41, i8** %tmp.30.sroa.2.0.cast.559.sroa_idx150, align 8, !dbg !727
  %tmp.31.sroa.0.0.cast.561.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.118, i64 0, i64 1, i32 0, !dbg !727
  store %_type.0* @string..d, %_type.0** %tmp.31.sroa.0.0.cast.561.sroa_idx, align 8, !dbg !727
  %tmp.31.sroa.2.0.cast.561.sroa_idx151 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.118, i64 0, i64 1, i32 1, !dbg !727
  store i8* %call.42, i8** %tmp.31.sroa.2.0.cast.561.sroa_idx151, align 8, !dbg !727
  %field.96 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.32, i64 0, i32 0, !dbg !727
  %cast.564 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.118, i64 0, i64 0, !dbg !727
  store %IPST.16* %cast.564, %IPST.16** %field.96, align 8, !dbg !727
  %field.97 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.32, i64 0, i32 1, !dbg !727
  store i64 2, i64* %field.97, align 8, !dbg !727
  %field.98 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.32, i64 0, i32 2, !dbg !727
  store i64 2, i64* %field.98, align 8, !dbg !727
  %call.43 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([16 x i8]* @const.42 to i64), i64 15, %IPST.2* byval nonnull %tmp.32), !dbg !727
  %call.43.fca.0.extract = extractvalue { i64, i64 } %call.43, 0, !dbg !727
  %call.43.fca.1.extract = extractvalue { i64, i64 } %call.43, 1, !dbg !727
  call void @llvm.dbg.value(metadata i64 %call.43.fca.0.extract, metadata !728, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !729
  call void @llvm.dbg.value(metadata i64 %call.43.fca.1.extract, metadata !728, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !729
  %call.44 = call { i64, i64 } @command_line_arguments.ndkToolchain.clangPath(i8* nest undef, %.command-line-arguments.ndkToolchain.0* nonnull %.ld.12.i), !dbg !730
  %call.44.fca.0.extract = extractvalue { i64, i64 } %call.44, 0, !dbg !730
  %call.44.fca.1.extract = extractvalue { i64, i64 } %call.44, 1, !dbg !730
  %call.45 = call { i64, i64 } @command_line_arguments.ndkToolchain.clangppPath(i8* nest undef, %.command-line-arguments.ndkToolchain.0* nonnull %.ld.12.i), !dbg !731
  %call.45.fca.0.extract = extractvalue { i64, i64 } %call.45, 0, !dbg !731
  %call.45.fca.1.extract = extractvalue { i64, i64 } %call.45, 1, !dbg !731
  %cast.590 = bitcast [2 x { i8*, i64 }]* %tmp.33 to i8*, !dbg !732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.590, i8* align 8 bitcast ({ i8*, i64 }* @const.45 to i8*), i64 16, i1 false), !dbg !732
  %goarch.addr.sroa.0.0.cast.592.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.33, i64 0, i64 1, !dbg !732
  %goarch.addr.sroa.0.0.cast.592.sroa_cast = bitcast { i8*, i64 }* %goarch.addr.sroa.0.0.cast.592.sroa_idx to i64*, !dbg !732
  store i64 %goarch.chunk0, i64* %goarch.addr.sroa.0.0.cast.592.sroa_cast, align 8, !dbg !732
  %goarch.addr.sroa.4.0.cast.592.sroa_idx138 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.33, i64 0, i64 1, i32 1, !dbg !732
  store i64 %goarch.chunk1, i64* %goarch.addr.sroa.4.0.cast.592.sroa_idx138, align 8, !dbg !732
  %call.46 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.33), !dbg !732
  %call.46.fca.0.extract = extractvalue { i64, i64 } %call.46, 0, !dbg !732
  %call.46.fca.1.extract = extractvalue { i64, i64 } %call.46, 1, !dbg !732
  %cast.598 = bitcast [2 x { i8*, i64 }]* %tmp.34 to i8*, !dbg !733
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.598, i8* align 8 bitcast ({ i8*, i64 }* @const.47 to i8*), i64 16, i1 false), !dbg !733
  %tmpv.120.sroa.0.0.cast.600.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.34, i64 0, i64 1, !dbg !733
  %tmpv.120.sroa.0.0.cast.600.sroa_cast = bitcast { i8*, i64 }* %tmpv.120.sroa.0.0.cast.600.sroa_idx to i64*, !dbg !733
  store i64 %call.44.fca.0.extract, i64* %tmpv.120.sroa.0.0.cast.600.sroa_cast, align 8, !dbg !733
  %tmpv.120.sroa.2.0.cast.600.sroa_idx31 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.34, i64 0, i64 1, i32 1, !dbg !733
  store i64 %call.44.fca.1.extract, i64* %tmpv.120.sroa.2.0.cast.600.sroa_idx31, align 8, !dbg !733
  %call.47 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.34), !dbg !733
  %call.47.fca.0.extract = extractvalue { i64, i64 } %call.47, 0, !dbg !733
  %call.47.fca.1.extract = extractvalue { i64, i64 } %call.47, 1, !dbg !733
  %cast.606 = bitcast [2 x { i8*, i64 }]* %tmp.35 to i8*, !dbg !734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.606, i8* align 8 bitcast ({ i8*, i64 }* @const.49 to i8*), i64 16, i1 false), !dbg !734
  %tmpv.121.sroa.0.0.cast.608.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.35, i64 0, i64 1, !dbg !734
  %tmpv.121.sroa.0.0.cast.608.sroa_cast = bitcast { i8*, i64 }* %tmpv.121.sroa.0.0.cast.608.sroa_idx to i64*, !dbg !734
  store i64 %call.45.fca.0.extract, i64* %tmpv.121.sroa.0.0.cast.608.sroa_cast, align 8, !dbg !734
  %tmpv.121.sroa.2.0.cast.608.sroa_idx29 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.35, i64 0, i64 1, i32 1, !dbg !734
  store i64 %call.45.fca.1.extract, i64* %tmpv.121.sroa.2.0.cast.608.sroa_idx29, align 8, !dbg !734
  %call.48 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.35), !dbg !734
  %call.48.fca.0.extract = extractvalue { i64, i64 } %call.48, 0, !dbg !734
  %call.48.fca.1.extract = extractvalue { i64, i64 } %call.48, 1, !dbg !734
  %cast.614 = bitcast [2 x { i8*, i64 }]* %tmp.36 to i8*, !dbg !735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.614, i8* align 8 bitcast ({ i8*, i64 }* @const.51 to i8*), i64 16, i1 false), !dbg !735
  %cflags.sroa.0.0.cast.616.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.36, i64 0, i64 1, !dbg !735
  %cflags.sroa.0.0.cast.616.sroa_cast = bitcast { i8*, i64 }* %cflags.sroa.0.0.cast.616.sroa_idx to i64*, !dbg !735
  store i64 %call.39.fca.0.extract, i64* %cflags.sroa.0.0.cast.616.sroa_cast, align 8, !dbg !735
  %cflags.sroa.6.0.cast.616.sroa_idx76 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.36, i64 0, i64 1, i32 1, !dbg !735
  store i64 %call.39.fca.1.extract, i64* %cflags.sroa.6.0.cast.616.sroa_idx76, align 8, !dbg !735
  %call.49 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.36), !dbg !735
  %call.49.fca.0.extract = extractvalue { i64, i64 } %call.49, 0, !dbg !735
  %call.49.fca.1.extract = extractvalue { i64, i64 } %call.49, 1, !dbg !735
  %cast.622 = bitcast [2 x { i8*, i64 }]* %tmp.37 to i8*, !dbg !736
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.622, i8* align 8 bitcast ({ i8*, i64 }* @const.53 to i8*), i64 16, i1 false), !dbg !736
  %cflags.sroa.0.0.cast.624.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.37, i64 0, i64 1, !dbg !736
  %cflags.sroa.0.0.cast.624.sroa_cast = bitcast { i8*, i64 }* %cflags.sroa.0.0.cast.624.sroa_idx to i64*, !dbg !736
  store i64 %call.39.fca.0.extract, i64* %cflags.sroa.0.0.cast.624.sroa_cast, align 8, !dbg !736
  %cflags.sroa.6.0.cast.624.sroa_idx77 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.37, i64 0, i64 1, i32 1, !dbg !736
  store i64 %call.39.fca.1.extract, i64* %cflags.sroa.6.0.cast.624.sroa_idx77, align 8, !dbg !736
  %call.50 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.37), !dbg !736
  %call.50.fca.0.extract = extractvalue { i64, i64 } %call.50, 0, !dbg !736
  %call.50.fca.1.extract = extractvalue { i64, i64 } %call.50, 1, !dbg !736
  %cast.630 = bitcast [2 x { i8*, i64 }]* %tmp.38 to i8*, !dbg !737
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.630, i8* align 8 bitcast ({ i8*, i64 }* @const.55 to i8*), i64 16, i1 false), !dbg !737
  %ldflags.sroa.0.0.cast.632.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.38, i64 0, i64 1, !dbg !737
  %ldflags.sroa.0.0.cast.632.sroa_cast = bitcast { i8*, i64 }* %ldflags.sroa.0.0.cast.632.sroa_idx to i64*, !dbg !737
  store i64 %call.43.fca.0.extract, i64* %ldflags.sroa.0.0.cast.632.sroa_cast, align 8, !dbg !737
  %ldflags.sroa.5.0.cast.632.sroa_idx70 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.38, i64 0, i64 1, i32 1, !dbg !737
  store i64 %call.43.fca.1.extract, i64* %ldflags.sroa.5.0.cast.632.sroa_idx70, align 8, !dbg !737
  %call.51 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.38), !dbg !737
  %call.51.fca.0.extract = extractvalue { i64, i64 } %call.51, 0, !dbg !737
  %call.51.fca.1.extract = extractvalue { i64, i64 } %call.51, 1, !dbg !737
  %call.52 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i64 0, i32 0)), !dbg !738
  %cast.645 = bitcast [8 x { i8*, i64 }]* %tmpv.137 to i8*, !dbg !738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.645, i8* align 8 bitcast ({ i8*, i64 }* @const.57 to i8*), i64 16, i1 false), !dbg !738
  %tmpv.129.sroa.0.0.cast.647.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 1, !dbg !738
  %tmpv.129.sroa.0.0.cast.647.sroa_cast = bitcast { i8*, i64 }* %tmpv.129.sroa.0.0.cast.647.sroa_idx to i64*, !dbg !738
  store i64 %call.46.fca.0.extract, i64* %tmpv.129.sroa.0.0.cast.647.sroa_cast, align 8, !dbg !738
  %tmpv.129.sroa.2.0.cast.647.sroa_idx27 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 1, i32 1, !dbg !738
  store i64 %call.46.fca.1.extract, i64* %tmpv.129.sroa.2.0.cast.647.sroa_idx27, align 8, !dbg !738
  %tmpv.130.sroa.0.0.cast.649.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 2, !dbg !738
  %tmpv.130.sroa.0.0.cast.649.sroa_cast = bitcast { i8*, i64 }* %tmpv.130.sroa.0.0.cast.649.sroa_idx to i64*, !dbg !738
  store i64 %call.47.fca.0.extract, i64* %tmpv.130.sroa.0.0.cast.649.sroa_cast, align 8, !dbg !738
  %tmpv.130.sroa.2.0.cast.649.sroa_idx25 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 2, i32 1, !dbg !738
  store i64 %call.47.fca.1.extract, i64* %tmpv.130.sroa.2.0.cast.649.sroa_idx25, align 8, !dbg !738
  %tmpv.131.sroa.0.0.cast.651.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 3, !dbg !738
  %tmpv.131.sroa.0.0.cast.651.sroa_cast = bitcast { i8*, i64 }* %tmpv.131.sroa.0.0.cast.651.sroa_idx to i64*, !dbg !738
  store i64 %call.48.fca.0.extract, i64* %tmpv.131.sroa.0.0.cast.651.sroa_cast, align 8, !dbg !738
  %tmpv.131.sroa.2.0.cast.651.sroa_idx23 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 3, i32 1, !dbg !738
  store i64 %call.48.fca.1.extract, i64* %tmpv.131.sroa.2.0.cast.651.sroa_idx23, align 8, !dbg !738
  %tmpv.132.sroa.0.0.cast.653.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 4, !dbg !738
  %tmpv.132.sroa.0.0.cast.653.sroa_cast = bitcast { i8*, i64 }* %tmpv.132.sroa.0.0.cast.653.sroa_idx to i64*, !dbg !738
  store i64 %call.49.fca.0.extract, i64* %tmpv.132.sroa.0.0.cast.653.sroa_cast, align 8, !dbg !738
  %tmpv.132.sroa.2.0.cast.653.sroa_idx21 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 4, i32 1, !dbg !738
  store i64 %call.49.fca.1.extract, i64* %tmpv.132.sroa.2.0.cast.653.sroa_idx21, align 8, !dbg !738
  %tmpv.133.sroa.0.0.cast.655.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 5, !dbg !738
  %tmpv.133.sroa.0.0.cast.655.sroa_cast = bitcast { i8*, i64 }* %tmpv.133.sroa.0.0.cast.655.sroa_idx to i64*, !dbg !738
  store i64 %call.50.fca.0.extract, i64* %tmpv.133.sroa.0.0.cast.655.sroa_cast, align 8, !dbg !738
  %tmpv.133.sroa.2.0.cast.655.sroa_idx19 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 5, i32 1, !dbg !738
  store i64 %call.50.fca.1.extract, i64* %tmpv.133.sroa.2.0.cast.655.sroa_idx19, align 8, !dbg !738
  %tmpv.134.sroa.0.0.cast.657.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 6, !dbg !738
  %tmpv.134.sroa.0.0.cast.657.sroa_cast = bitcast { i8*, i64 }* %tmpv.134.sroa.0.0.cast.657.sroa_idx to i64*, !dbg !738
  store i64 %call.51.fca.0.extract, i64* %tmpv.134.sroa.0.0.cast.657.sroa_cast, align 8, !dbg !738
  %tmpv.134.sroa.2.0.cast.657.sroa_idx17 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 6, i32 1, !dbg !738
  store i64 %call.51.fca.1.extract, i64* %tmpv.134.sroa.2.0.cast.657.sroa_idx17, align 8, !dbg !738
  %index.44 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.137, i64 0, i64 7, !dbg !738
  %cast.659 = bitcast { i8*, i64 }* %index.44 to i8*, !dbg !738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.659, i8* align 8 bitcast ({ i8*, i64 }* @const.59 to i8*), i64 16, i1 false), !dbg !738
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i64 0, i32 0), i8* %call.52, i8* nonnull %cast.645), !dbg !738
  %cast.664 = bitcast i8* %call.52 to { i8*, i64 }*, !dbg !738
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.664, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !740
  call void @llvm.dbg.value(metadata i64 8, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !740
  call void @llvm.dbg.value(metadata i64 8, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !740
  %call.53 = call i8 @runtime.eqstring(i8* nest undef, i64 %goarch.chunk0, i64 %goarch.chunk1, i64 ptrtoint ([4 x i8]* @const.62 to i64), i64 3), !dbg !741
  %icmp.37 = icmp eq i8 %call.53, 1, !dbg !741
  br i1 %icmp.37, label %then.23, label %fallthrough.23

then.23:                                          ; preds = %else.21
  %env.sroa.0.0.cast.665.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.138, i64 0, i32 0
  %25 = bitcast %IPST.3* %tmpv.138 to i8**
  store i8* %call.52, i8** %25, align 8
  %env.sroa.7.0.cast.665.sroa_idx52 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.138, i64 0, i32 1
  store i64 8, i64* %env.sroa.7.0.cast.665.sroa_idx52, align 8
  %env.sroa.8.0.cast.665.sroa_idx59 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.138, i64 0, i32 2
  store i64 8, i64* %env.sroa.8.0.cast.665.sroa_idx59, align 8
  %cast.667 = bitcast { i8*, i64 }* %tmpv.140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.667, i8* align 8 bitcast ({ i8*, i64 }* @const.64 to i8*), i64 16, i1 false)
  %cast.669 = bitcast %IPST.3* %tmpv.138 to %IPST.4*, !dbg !742
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.45, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.669, i64 9), !dbg !742
  %tmpv.145.sroa.0.0.cast.674.sroa_idx = bitcast %IPST.4* %sret.actual.45 to { i8*, i64 }**
  %tmpv.145.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.145.sroa.0.0.cast.674.sroa_idx, align 8
  %26 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.45, i64 0, i32 1
  %tmpv.145.sroa.3.0.copyload = load i64, i64* %26, align 8
  %27 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.45, i64 0, i32 2
  %tmpv.145.sroa.4.0.copyload = load i64, i64* %27, align 8
  store { i8*, i64 }* %tmpv.145.sroa.0.0.copyload, { i8*, i64 }** %env.sroa.0.0.cast.665.sroa_idx, align 8, !dbg !742
  store i64 %tmpv.145.sroa.3.0.copyload, i64* %env.sroa.7.0.cast.665.sroa_idx52, align 8, !dbg !742
  store i64 %tmpv.145.sroa.4.0.copyload, i64* %env.sroa.8.0.cast.665.sroa_idx59, align 8, !dbg !742
  %icmp.33 = icmp slt i64 %tmpv.145.sroa.3.0.copyload, 9, !dbg !742
  br i1 %icmp.33, label %then.27, label %else.27

fallthrough.23:                                   ; preds = %else.21, %fallthrough.28
  %env.sroa.0.0 = phi { i8*, i64 }* [ %env.sroa.0.0.copyload48, %fallthrough.28 ], [ %cast.664, %else.21 ], !dbg !705
  %env.sroa.7.0 = phi i64 [ %env.sroa.7.0.copyload54, %fallthrough.28 ], [ 8, %else.21 ], !dbg !705
  %env.sroa.8.0 = phi i64 [ %env.sroa.8.0.copyload61, %fallthrough.28 ], [ 8, %else.21 ], !dbg !705
  call void @llvm.dbg.value(metadata i64 %env.sroa.8.0, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !740
  call void @llvm.dbg.value(metadata i64 %env.sroa.7.0, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !740
  call void @llvm.dbg.value(metadata { i8*, i64 }* %env.sroa.0.0, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !740
  call void @llvm.dbg.value(metadata { i8*, i64 }* %env.sroa.0.0, metadata !709, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !710
  call void @llvm.dbg.value(metadata i64 %env.sroa.7.0, metadata !709, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !710
  call void @llvm.dbg.value(metadata i64 %env.sroa.8.0, metadata !709, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !710
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !711, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !712
  call void @llvm.dbg.value(metadata i8* null, metadata !711, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !712
  %tmp.40.sroa.0.0.cast.700.sroa_idx = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.3, i64 0, i32 0, i32 0, !dbg !743
  store { i8*, i64 }* %env.sroa.0.0, { i8*, i64 }** %tmp.40.sroa.0.0.cast.700.sroa_idx, align 8, !dbg !743
  %tmp.40.sroa.2.0.cast.700.sroa_idx163 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.3, i64 0, i32 0, i32 1, !dbg !743
  store i64 %env.sroa.7.0, i64* %tmp.40.sroa.2.0.cast.700.sroa_idx163, align 8, !dbg !743
  %tmp.40.sroa.3.0.cast.700.sroa_idx164 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.3, i64 0, i32 0, i32 2, !dbg !743
  store i64 %env.sroa.8.0, i64* %tmp.40.sroa.3.0.cast.700.sroa_idx164, align 8, !dbg !743
  %tmp.40.sroa.4.0.cast.700.sroa_idx165 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 0, !dbg !743
  %28 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.40.sroa.4.0.cast.700.sroa_idx165 to i8*, !dbg !743
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false), !dbg !743
  ret void, !dbg !743

then.27:                                          ; preds = %then.23
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !742
  unreachable

else.27:                                          ; preds = %then.23
  %ptroff.2 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.145.sroa.0.0.copyload, i64 8, !dbg !742
  %runtime.writeBarrier.ld.0 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !742
  %icmp.36 = icmp eq i32 %runtime.writeBarrier.ld.0, 0, !dbg !742
  br i1 %icmp.36, label %then.28, label %else.28

then.28:                                          ; preds = %else.27
  %icmp.35 = icmp eq { i8*, i64 }* %ptroff.2, null, !dbg !742
  br i1 %icmp.35, label %then.29, label %else.29

fallthrough.28:                                   ; preds = %else.28, %else.29
  %env.sroa.0.0.copyload48 = load { i8*, i64 }*, { i8*, i64 }** %env.sroa.0.0.cast.665.sroa_idx, align 8, !dbg !744
  call void @llvm.dbg.value(metadata { i8*, i64 }* %env.sroa.0.0.copyload48, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !740
  %env.sroa.7.0.copyload54 = load i64, i64* %env.sroa.7.0.cast.665.sroa_idx52, align 8, !dbg !744
  call void @llvm.dbg.value(metadata i64 %env.sroa.7.0.copyload54, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !740
  %env.sroa.8.0.copyload61 = load i64, i64* %env.sroa.8.0.cast.665.sroa_idx59, align 8, !dbg !744
  call void @llvm.dbg.value(metadata i64 %env.sroa.8.0.copyload61, metadata !739, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !740
  br label %fallthrough.23

else.28:                                          ; preds = %else.27
  %cast.682 = bitcast { i8*, i64 }* %ptroff.2 to i8*, !dbg !742
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.682, i8* nonnull %cast.667), !dbg !742
  br label %fallthrough.28

then.29:                                          ; preds = %then.28
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !742
  unreachable

else.29:                                          ; preds = %then.28
  %cast.680 = bitcast { i8*, i64 }* %ptroff.2 to i8*, !dbg !742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.680, i8* nonnull align 8 %cast.667, i64 16, i1 false), !dbg !742
  br label %fallthrough.28
}

define { i64, i64 } @command_line_arguments.ndkToolchain.gccToolchain(i8* nest nocapture readnone %nest.7, %.command-line-arguments.ndkToolchain.0* readonly %tc) #0 !dbg !745 {
entry:
  %tmp.51 = alloca %IPST.3, align 8
  %tmpv.198 = alloca [5 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %tc, metadata !748, metadata !DIExpression()), !dbg !749
  %icmp.47 = icmp eq %.command-line-arguments.ndkToolchain.0* %tc, null, !dbg !750
  br i1 %icmp.47, label %then.39, label %else.39

then.39:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !750
  unreachable

else.39:                                          ; preds = %entry
  %field.147 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 5, !dbg !750
  %cast.907 = bitcast { i8*, i64 }* %field.147 to i8*
  %tmpv.19856 = bitcast [5 x { i8*, i64 }]* %tmpv.198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.19856, i8* nonnull align 8 %cast.907, i64 16, i1 false)
  %field.148 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 2, !dbg !751
  %cast.912 = bitcast { i8*, i64 }* %field.148 to i8*
  %field.149 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 6, !dbg !752
  %cast.917 = bitcast { i8*, i64 }* %field.149 to i8*
  %index.51 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.198, i64 0, i64 1, !dbg !753
  %cast.920 = bitcast { i8*, i64 }* %index.51 to i8*, !dbg !753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.920, i8* align 8 bitcast ({ i8*, i64 }* @const.147 to i8*), i64 16, i1 false), !dbg !753
  %index.52 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.198, i64 0, i64 2, !dbg !753
  %cast.922 = bitcast { i8*, i64 }* %index.52 to i8*, !dbg !753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.922, i8* nonnull align 8 %cast.912, i64 16, i1 false), !dbg !753
  %index.53 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.198, i64 0, i64 3, !dbg !753
  %cast.924 = bitcast { i8*, i64 }* %index.53 to i8*, !dbg !753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.924, i8* align 8 bitcast ({ i8*, i64 }* @const.149 to i8*), i64 16, i1 false), !dbg !753
  %index.54 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.198, i64 0, i64 4, !dbg !753
  %cast.926 = bitcast { i8*, i64 }* %index.54 to i8*, !dbg !753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.926, i8* nonnull align 8 %cast.917, i64 16, i1 false), !dbg !753
  %field.150 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.51, i64 0, i32 0, !dbg !753
  %cast.928 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.198, i64 0, i64 0, !dbg !753
  store { i8*, i64 }* %cast.928, { i8*, i64 }** %field.150, align 8, !dbg !753
  %field.151 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.51, i64 0, i32 1, !dbg !753
  store i64 5, i64* %field.151, align 8, !dbg !753
  %field.152 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.51, i64 0, i32 2, !dbg !753
  store i64 5, i64* %field.152, align 8, !dbg !753
  %call.62 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.51), !dbg !753
  ret { i64, i64 } %call.62, !dbg !754
}

declare { i64, i64 } @fmt.Sprintf(i8*, i64, i64, %IPST.2*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.ndkToolchain.csysroot(i8* nest nocapture readnone %nest.11, %.command-line-arguments.ndkToolchain.0* readonly %tc) #0 !dbg !755 {
entry:
  %tmp.55 = alloca %IPST.3, align 8
  %tmpv.234 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %tc, metadata !756, metadata !DIExpression()), !dbg !757
  %icmp.56 = icmp eq %.command-line-arguments.ndkToolchain.0* %tc, null, !dbg !758
  br i1 %icmp.56, label %then.48, label %else.48

then.48:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !758
  unreachable

else.48:                                          ; preds = %entry
  %field.168 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 5, !dbg !758
  %cast.1048 = bitcast { i8*, i64 }* %field.168 to i8*
  %tmpv.23456 = bitcast [2 x { i8*, i64 }]* %tmpv.234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.23456, i8* nonnull align 8 %cast.1048, i64 16, i1 false)
  %index.75 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.234, i64 0, i64 1, !dbg !759
  %cast.1053 = bitcast { i8*, i64 }* %index.75 to i8*, !dbg !759
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1053, i8* align 8 bitcast ({ i8*, i64 }* @const.159 to i8*), i64 16, i1 false), !dbg !759
  %field.169 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.55, i64 0, i32 0, !dbg !759
  %cast.1055 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.234, i64 0, i64 0, !dbg !759
  store { i8*, i64 }* %cast.1055, { i8*, i64 }** %field.169, align 8, !dbg !759
  %field.170 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.55, i64 0, i32 1, !dbg !759
  store i64 2, i64* %field.170, align 8, !dbg !759
  %field.171 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.55, i64 0, i32 2, !dbg !759
  store i64 2, i64* %field.171, align 8, !dbg !759
  %call.66 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.55), !dbg !759
  ret { i64, i64 } %call.66, !dbg !760
}

define { i64, i64 } @command_line_arguments.ndkToolchain.isystem(i8* nest nocapture readnone %nest.10, %.command-line-arguments.ndkToolchain.0* readonly %tc) #0 !dbg !761 {
entry:
  %tmp.54 = alloca %IPST.3, align 8
  %tmpv.229 = alloca [5 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %tc, metadata !762, metadata !DIExpression()), !dbg !763
  %icmp.54 = icmp eq %.command-line-arguments.ndkToolchain.0* %tc, null, !dbg !764
  br i1 %icmp.54, label %then.46, label %else.46

then.46:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !764
  unreachable

else.46:                                          ; preds = %entry
  %field.163 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 5, !dbg !764
  %cast.1017 = bitcast { i8*, i64 }* %field.163 to i8*
  %tmpv.22956 = bitcast [5 x { i8*, i64 }]* %tmpv.229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.22956, i8* nonnull align 8 %cast.1017, i64 16, i1 false)
  %field.164 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 3, !dbg !765
  %cast.1026 = bitcast { i8*, i64 }* %field.164 to i8*
  %index.70 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.229, i64 0, i64 1, !dbg !766
  %cast.1029 = bitcast { i8*, i64 }* %index.70 to i8*, !dbg !766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1029, i8* align 8 bitcast ({ i8*, i64 }* @const.159 to i8*), i64 16, i1 false), !dbg !766
  %index.71 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.229, i64 0, i64 2, !dbg !766
  %cast.1031 = bitcast { i8*, i64 }* %index.71 to i8*, !dbg !766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1031, i8* align 8 bitcast ({ i8*, i64 }* @const.161 to i8*), i64 16, i1 false), !dbg !766
  %index.72 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.229, i64 0, i64 3, !dbg !766
  %cast.1033 = bitcast { i8*, i64 }* %index.72 to i8*, !dbg !766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1033, i8* align 8 bitcast ({ i8*, i64 }* @const.163 to i8*), i64 16, i1 false), !dbg !766
  %index.73 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.229, i64 0, i64 4, !dbg !766
  %cast.1035 = bitcast { i8*, i64 }* %index.73 to i8*, !dbg !766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1035, i8* nonnull align 8 %cast.1026, i64 16, i1 false), !dbg !766
  %field.165 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.54, i64 0, i32 0, !dbg !766
  %cast.1037 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.229, i64 0, i64 0, !dbg !766
  store { i8*, i64 }* %cast.1037, { i8*, i64 }** %field.165, align 8, !dbg !766
  %field.166 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.54, i64 0, i32 1, !dbg !766
  store i64 5, i64* %field.166, align 8, !dbg !766
  %field.167 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.54, i64 0, i32 2, !dbg !766
  store i64 5, i64* %field.167, align 8, !dbg !766
  %call.65 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.54), !dbg !766
  ret { i64, i64 } %call.65, !dbg !767
}

define { i64, i64 } @command_line_arguments.ndkToolchain.ldsysroot(i8* nest nocapture readnone %nest.12, %.command-line-arguments.ndkToolchain.0* readonly %tc) #0 !dbg !768 {
entry:
  %tmp.58 = alloca %IPST.3, align 8
  %tmp.57 = alloca [2 x { i8*, i64 }], align 8
  %tmp.56 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.240 = alloca { i8*, i64 }, align 8
  %tmpv.242 = alloca { i8*, i64 }, align 8
  %tmpv.247 = alloca [4 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %tc, metadata !769, metadata !DIExpression()), !dbg !770
  %icmp.57 = icmp eq %.command-line-arguments.ndkToolchain.0* %tc, null, !dbg !771
  br i1 %icmp.57, label %then.49, label %else.49

then.49:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !771
  unreachable

else.49:                                          ; preds = %entry
  %field.172 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 1, !dbg !771
  %cast.1068 = bitcast { i8*, i64 }* %field.172 to i8*
  %cast.1072 = bitcast { i8*, i64 }* %tmpv.240 to i8*
  %cast.1073 = bitcast %.command-line-arguments.ndkToolchain.0* %tc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1072, i8* align 8 %cast.1073, i64 16, i1 false)
  %field.174 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 5, !dbg !772
  %cast.1075 = bitcast { i8*, i64 }* %tmpv.242 to i8*
  %cast.1076 = bitcast { i8*, i64 }* %field.174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1075, i8* nonnull align 8 %cast.1076, i64 16, i1 false)
  %cast.1079 = bitcast [2 x { i8*, i64 }]* %tmp.56 to i8*, !dbg !773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1079, i8* align 8 bitcast ({ i8*, i64 }* @const.27 to i8*), i64 16, i1 false), !dbg !773
  %index.77 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.56, i64 0, i64 1, !dbg !773
  %cast.1081 = bitcast { i8*, i64 }* %index.77 to i8*, !dbg !773
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1081, i8* nonnull align 8 %cast.1068, i64 16, i1 false), !dbg !773
  %call.67 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.56), !dbg !773
  %call.67.fca.0.extract = extractvalue { i64, i64 } %call.67, 0, !dbg !773
  %call.67.fca.1.extract = extractvalue { i64, i64 } %call.67, 1, !dbg !773
  %cast.1087 = bitcast [2 x { i8*, i64 }]* %tmp.57 to i8*, !dbg !774
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1087, i8* align 8 bitcast ({ i8*, i64 }* @const.165 to i8*), i64 16, i1 false), !dbg !774
  %index.79 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.57, i64 0, i64 1, !dbg !774
  %cast.1089 = bitcast { i8*, i64 }* %index.79 to i8*, !dbg !774
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1089, i8* nonnull align 8 %cast.1072, i64 16, i1 false), !dbg !774
  %call.68 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.57), !dbg !774
  %call.68.fca.0.extract = extractvalue { i64, i64 } %call.68, 0, !dbg !774
  %call.68.fca.1.extract = extractvalue { i64, i64 } %call.68, 1, !dbg !774
  %cast.1095 = bitcast [4 x { i8*, i64 }]* %tmpv.247 to i8*, !dbg !775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1095, i8* nonnull align 8 %cast.1075, i64 16, i1 false), !dbg !775
  %index.81 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.247, i64 0, i64 1, !dbg !775
  %cast.1097 = bitcast { i8*, i64 }* %index.81 to i8*, !dbg !775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1097, i8* align 8 bitcast ({ i8*, i64 }* @const.20 to i8*), i64 16, i1 false), !dbg !775
  %tmpv.245.sroa.0.0.cast.1099.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.247, i64 0, i64 2, !dbg !775
  %tmpv.245.sroa.0.0.cast.1099.sroa_cast = bitcast { i8*, i64 }* %tmpv.245.sroa.0.0.cast.1099.sroa_idx to i64*, !dbg !775
  store i64 %call.67.fca.0.extract, i64* %tmpv.245.sroa.0.0.cast.1099.sroa_cast, align 8, !dbg !775
  %tmpv.245.sroa.2.0.cast.1099.sroa_idx6 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.247, i64 0, i64 2, i32 1, !dbg !775
  store i64 %call.67.fca.1.extract, i64* %tmpv.245.sroa.2.0.cast.1099.sroa_idx6, align 8, !dbg !775
  %tmpv.246.sroa.0.0.cast.1101.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.247, i64 0, i64 3, !dbg !775
  %tmpv.246.sroa.0.0.cast.1101.sroa_cast = bitcast { i8*, i64 }* %tmpv.246.sroa.0.0.cast.1101.sroa_idx to i64*, !dbg !775
  store i64 %call.68.fca.0.extract, i64* %tmpv.246.sroa.0.0.cast.1101.sroa_cast, align 8, !dbg !775
  %tmpv.246.sroa.2.0.cast.1101.sroa_idx4 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.247, i64 0, i64 3, i32 1, !dbg !775
  store i64 %call.68.fca.1.extract, i64* %tmpv.246.sroa.2.0.cast.1101.sroa_idx4, align 8, !dbg !775
  %field.175 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.58, i64 0, i32 0, !dbg !775
  %cast.1103 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.247, i64 0, i64 0, !dbg !775
  store { i8*, i64 }* %cast.1103, { i8*, i64 }** %field.175, align 8, !dbg !775
  %field.176 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.58, i64 0, i32 1, !dbg !775
  store i64 4, i64* %field.176, align 8, !dbg !775
  %field.177 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.58, i64 0, i32 2, !dbg !775
  store i64 4, i64* %field.177, align 8, !dbg !775
  %call.69 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.58), !dbg !775
  ret { i64, i64 } %call.69, !dbg !776
}

define { i64, i64 } @command_line_arguments.ndkToolchain.clangPath(i8* nest nocapture readnone %nest.8, %.command-line-arguments.ndkToolchain.0* readonly %tc) #0 !dbg !777 {
entry:
  %tmp.52 = alloca %IPST.3, align 8
  %tmpv.209 = alloca [7 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %tc, metadata !778, metadata !DIExpression()), !dbg !779
  %icmp.50 = icmp eq %.command-line-arguments.ndkToolchain.0* %tc, null, !dbg !780
  br i1 %icmp.50, label %then.42, label %else.42

then.42:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !780
  unreachable

else.42:                                          ; preds = %entry
  %field.153 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 5, !dbg !780
  %cast.939 = bitcast { i8*, i64 }* %field.153 to i8*
  %tmpv.20956 = bitcast [7 x { i8*, i64 }]* %tmpv.209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.20956, i8* nonnull align 8 %cast.939, i64 16, i1 false)
  %field.154 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 6, !dbg !781
  %cast.948 = bitcast { i8*, i64 }* %field.154 to i8*
  %index.56 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.209, i64 0, i64 1, !dbg !782
  %cast.955 = bitcast { i8*, i64 }* %index.56 to i8*, !dbg !782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.955, i8* align 8 bitcast ({ i8*, i64 }* @const.147 to i8*), i64 16, i1 false), !dbg !782
  %index.57 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.209, i64 0, i64 2, !dbg !782
  %cast.957 = bitcast { i8*, i64 }* %index.57 to i8*, !dbg !782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.957, i8* align 8 bitcast ({ i8*, i64 }* @const.151 to i8*), i64 16, i1 false), !dbg !782
  %index.58 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.209, i64 0, i64 3, !dbg !782
  %cast.959 = bitcast { i8*, i64 }* %index.58 to i8*, !dbg !782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.959, i8* align 8 bitcast ({ i8*, i64 }* @const.149 to i8*), i64 16, i1 false), !dbg !782
  %index.59 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.209, i64 0, i64 4, !dbg !782
  %cast.961 = bitcast { i8*, i64 }* %index.59 to i8*, !dbg !782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.961, i8* nonnull align 8 %cast.948, i64 16, i1 false), !dbg !782
  %index.60 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.209, i64 0, i64 5, !dbg !782
  %cast.963 = bitcast { i8*, i64 }* %index.60 to i8*, !dbg !782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.963, i8* align 8 bitcast ({ i8*, i64 }* @const.153 to i8*), i64 16, i1 false), !dbg !782
  %index.61 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.209, i64 0, i64 6, !dbg !782
  %cast.965 = bitcast { i8*, i64 }* %index.61 to i8*, !dbg !782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.965, i8* align 8 bitcast ({ i8*, i64 }* @const.155 to i8*), i64 16, i1 false), !dbg !782
  %field.155 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.52, i64 0, i32 0, !dbg !782
  %cast.967 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.209, i64 0, i64 0, !dbg !782
  store { i8*, i64 }* %cast.967, { i8*, i64 }** %field.155, align 8, !dbg !782
  %field.156 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.52, i64 0, i32 1, !dbg !782
  store i64 7, i64* %field.156, align 8, !dbg !782
  %field.157 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.52, i64 0, i32 2, !dbg !782
  store i64 7, i64* %field.157, align 8, !dbg !782
  %call.63 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.52), !dbg !782
  ret { i64, i64 } %call.63, !dbg !783
}

define { i64, i64 } @command_line_arguments.ndkToolchain.clangppPath(i8* nest nocapture readnone %nest.9, %.command-line-arguments.ndkToolchain.0* readonly %tc) #0 !dbg !784 {
entry:
  %tmp.53 = alloca %IPST.3, align 8
  %tmpv.220 = alloca [7 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %.command-line-arguments.ndkToolchain.0* %tc, metadata !785, metadata !DIExpression()), !dbg !786
  %icmp.52 = icmp eq %.command-line-arguments.ndkToolchain.0* %tc, null, !dbg !787
  br i1 %icmp.52, label %then.44, label %else.44

then.44:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !787
  unreachable

else.44:                                          ; preds = %entry
  %field.158 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 5, !dbg !787
  %cast.978 = bitcast { i8*, i64 }* %field.158 to i8*
  %tmpv.22056 = bitcast [7 x { i8*, i64 }]* %tmpv.220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.22056, i8* nonnull align 8 %cast.978, i64 16, i1 false)
  %field.159 = getelementptr inbounds %.command-line-arguments.ndkToolchain.0, %.command-line-arguments.ndkToolchain.0* %tc, i64 0, i32 6, !dbg !788
  %cast.987 = bitcast { i8*, i64 }* %field.159 to i8*
  %index.63 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.220, i64 0, i64 1, !dbg !789
  %cast.994 = bitcast { i8*, i64 }* %index.63 to i8*, !dbg !789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.994, i8* align 8 bitcast ({ i8*, i64 }* @const.147 to i8*), i64 16, i1 false), !dbg !789
  %index.64 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.220, i64 0, i64 2, !dbg !789
  %cast.996 = bitcast { i8*, i64 }* %index.64 to i8*, !dbg !789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.996, i8* align 8 bitcast ({ i8*, i64 }* @const.151 to i8*), i64 16, i1 false), !dbg !789
  %index.65 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.220, i64 0, i64 3, !dbg !789
  %cast.998 = bitcast { i8*, i64 }* %index.65 to i8*, !dbg !789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.998, i8* align 8 bitcast ({ i8*, i64 }* @const.149 to i8*), i64 16, i1 false), !dbg !789
  %index.66 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.220, i64 0, i64 4, !dbg !789
  %cast.1000 = bitcast { i8*, i64 }* %index.66 to i8*, !dbg !789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1000, i8* nonnull align 8 %cast.987, i64 16, i1 false), !dbg !789
  %index.67 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.220, i64 0, i64 5, !dbg !789
  %cast.1002 = bitcast { i8*, i64 }* %index.67 to i8*, !dbg !789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1002, i8* align 8 bitcast ({ i8*, i64 }* @const.153 to i8*), i64 16, i1 false), !dbg !789
  %index.68 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.220, i64 0, i64 6, !dbg !789
  %cast.1004 = bitcast { i8*, i64 }* %index.68 to i8*, !dbg !789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1004, i8* align 8 bitcast ({ i8*, i64 }* @const.157 to i8*), i64 16, i1 false), !dbg !789
  %field.160 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.53, i64 0, i32 0, !dbg !789
  %cast.1006 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.220, i64 0, i64 0, !dbg !789
  store { i8*, i64 }* %cast.1006, { i8*, i64 }** %field.160, align 8, !dbg !789
  %field.161 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.53, i64 0, i32 1, !dbg !789
  store i64 7, i64* %field.161, align 8, !dbg !789
  %field.162 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.53, i64 0, i32 2, !dbg !789
  store i64 7, i64* %field.162, align 8, !dbg !789
  %call.64 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.53), !dbg !789
  ret { i64, i64 } %call.64, !dbg !790
}

declare void @runtime.growslice(%IPST.4*, i8*, %_type.0*, %IPST.4*, i64) local_unnamed_addr #0

define i64 @command_line_arguments.command_line_arguments.ndkToolchain..hash(i8* nest nocapture readnone %nest.83, i8* %key, i64 %seed) #0 !dbg !791 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !792, metadata !DIExpression()), !dbg !793
  call void @llvm.dbg.value(metadata i64 %seed, metadata !794, metadata !DIExpression()), !dbg !793
  call void @llvm.dbg.value(metadata i64 0, metadata !795, metadata !DIExpression()), !dbg !793
  %pticast.50 = ptrtoint i8* %key to i64, !dbg !793
  %call.492 = call i64 @runtime.strhash(i8* nest undef, i8* %key, i64 %seed), !dbg !793
  %add.114 = add i64 %pticast.50, 16, !dbg !793
  %itpcast.13 = inttoptr i64 %add.114 to i8*, !dbg !793
  %call.493 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.13, i64 %call.492), !dbg !793
  %add.115 = add i64 %pticast.50, 32, !dbg !793
  %itpcast.14 = inttoptr i64 %add.115 to i8*, !dbg !793
  %call.494 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.14, i64 %call.493), !dbg !793
  %add.116 = add i64 %pticast.50, 48, !dbg !793
  %itpcast.15 = inttoptr i64 %add.116 to i8*, !dbg !793
  %call.495 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.15, i64 %call.494), !dbg !793
  %add.117 = add i64 %pticast.50, 64, !dbg !793
  %itpcast.16 = inttoptr i64 %add.117 to i8*, !dbg !793
  %call.496 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.16, i64 %call.495), !dbg !793
  %add.118 = add i64 %pticast.50, 80, !dbg !793
  %itpcast.17 = inttoptr i64 %add.118 to i8*, !dbg !793
  %call.497 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.17, i64 %call.496), !dbg !793
  %add.119 = add i64 %pticast.50, 96, !dbg !793
  %itpcast.18 = inttoptr i64 %add.119 to i8*, !dbg !793
  %call.498 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.18, i64 %call.497), !dbg !793
  call void @llvm.dbg.value(metadata i64 %call.498, metadata !795, metadata !DIExpression()), !dbg !793
  ret i64 %call.498, !dbg !793
}

define i8 @command_line_arguments.command_line_arguments.ndkToolchain..eq(i8* nest nocapture readnone %nest.84, i8* readonly %key1, i8* readonly %key2) #0 !dbg !796 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !797, metadata !DIExpression()), !dbg !798
  call void @llvm.dbg.value(metadata i8* %key2, metadata !799, metadata !DIExpression()), !dbg !798
  call void @llvm.dbg.value(metadata i8 0, metadata !800, metadata !DIExpression()), !dbg !798
  %icmp.1050 = icmp eq i8* %key1, null, !dbg !798
  br i1 %icmp.1050, label %then.854, label %else.854

then.854:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !798
  unreachable

else.854:                                         ; preds = %entry
  %icmp.1051 = icmp eq i8* %key2, null, !dbg !798
  br i1 %icmp.1051, label %then.855, label %else.855

then.855:                                         ; preds = %else.854
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !798
  unreachable

else.855:                                         ; preds = %else.854
  %field0.381 = bitcast i8* %key1 to i64*, !dbg !798
  %ld.835 = load i64, i64* %field0.381, align 8, !dbg !798
  %field1.381 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !798
  %0 = bitcast i8* %field1.381 to i64*, !dbg !798
  %ld.836 = load i64, i64* %0, align 8, !dbg !798
  %field0.382 = bitcast i8* %key2 to i64*, !dbg !798
  %ld.837 = load i64, i64* %field0.382, align 8, !dbg !798
  %field1.382 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !798
  %1 = bitcast i8* %field1.382 to i64*, !dbg !798
  %ld.838 = load i64, i64* %1, align 8, !dbg !798
  %call.499 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.835, i64 %ld.836, i64 %ld.837, i64 %ld.838), !dbg !798
  %icmp.1052 = icmp eq i8 %call.499, 1, !dbg !798
  br i1 %icmp.1052, label %else.858, label %then.856

then.856:                                         ; preds = %else.870, %else.867, %else.864, %else.861, %else.858, %else.855
  call void @llvm.dbg.value(metadata i8 0, metadata !800, metadata !DIExpression()), !dbg !798
  ret i8 0, !dbg !798

else.858:                                         ; preds = %else.855
  %field.1881 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !798
  %field.1882 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !798
  %field0.383 = bitcast i8* %field.1881 to i64*, !dbg !798
  %ld.839 = load i64, i64* %field0.383, align 8, !dbg !798
  %field1.383 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !798
  %2 = bitcast i8* %field1.383 to i64*, !dbg !798
  %ld.840 = load i64, i64* %2, align 8, !dbg !798
  %field0.384 = bitcast i8* %field.1882 to i64*, !dbg !798
  %ld.841 = load i64, i64* %field0.384, align 8, !dbg !798
  %field1.384 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !798
  %3 = bitcast i8* %field1.384 to i64*, !dbg !798
  %ld.842 = load i64, i64* %3, align 8, !dbg !798
  %call.500 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.839, i64 %ld.840, i64 %ld.841, i64 %ld.842), !dbg !798
  %icmp.1055 = icmp eq i8 %call.500, 1, !dbg !798
  br i1 %icmp.1055, label %else.861, label %then.856

else.861:                                         ; preds = %else.858
  %field.1883 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !798
  %field.1884 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !798
  %field0.385 = bitcast i8* %field.1883 to i64*, !dbg !798
  %ld.843 = load i64, i64* %field0.385, align 8, !dbg !798
  %field1.385 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !798
  %4 = bitcast i8* %field1.385 to i64*, !dbg !798
  %ld.844 = load i64, i64* %4, align 8, !dbg !798
  %field0.386 = bitcast i8* %field.1884 to i64*, !dbg !798
  %ld.845 = load i64, i64* %field0.386, align 8, !dbg !798
  %field1.386 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !798
  %5 = bitcast i8* %field1.386 to i64*, !dbg !798
  %ld.846 = load i64, i64* %5, align 8, !dbg !798
  %call.501 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.843, i64 %ld.844, i64 %ld.845, i64 %ld.846), !dbg !798
  %icmp.1058 = icmp eq i8 %call.501, 1, !dbg !798
  br i1 %icmp.1058, label %else.864, label %then.856

else.864:                                         ; preds = %else.861
  %field.1885 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !798
  %field.1886 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !798
  %field0.387 = bitcast i8* %field.1885 to i64*, !dbg !798
  %ld.847 = load i64, i64* %field0.387, align 8, !dbg !798
  %field1.387 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !798
  %6 = bitcast i8* %field1.387 to i64*, !dbg !798
  %ld.848 = load i64, i64* %6, align 8, !dbg !798
  %field0.388 = bitcast i8* %field.1886 to i64*, !dbg !798
  %ld.849 = load i64, i64* %field0.388, align 8, !dbg !798
  %field1.388 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !798
  %7 = bitcast i8* %field1.388 to i64*, !dbg !798
  %ld.850 = load i64, i64* %7, align 8, !dbg !798
  %call.502 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.847, i64 %ld.848, i64 %ld.849, i64 %ld.850), !dbg !798
  %icmp.1061 = icmp eq i8 %call.502, 1, !dbg !798
  br i1 %icmp.1061, label %else.867, label %then.856

else.867:                                         ; preds = %else.864
  %field.1887 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !798
  %field.1888 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !798
  %field0.389 = bitcast i8* %field.1887 to i64*, !dbg !798
  %ld.851 = load i64, i64* %field0.389, align 8, !dbg !798
  %field1.389 = getelementptr inbounds i8, i8* %key1, i64 72, !dbg !798
  %8 = bitcast i8* %field1.389 to i64*, !dbg !798
  %ld.852 = load i64, i64* %8, align 8, !dbg !798
  %field0.390 = bitcast i8* %field.1888 to i64*, !dbg !798
  %ld.853 = load i64, i64* %field0.390, align 8, !dbg !798
  %field1.390 = getelementptr inbounds i8, i8* %key2, i64 72, !dbg !798
  %9 = bitcast i8* %field1.390 to i64*, !dbg !798
  %ld.854 = load i64, i64* %9, align 8, !dbg !798
  %call.503 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.851, i64 %ld.852, i64 %ld.853, i64 %ld.854), !dbg !798
  %icmp.1064 = icmp eq i8 %call.503, 1, !dbg !798
  br i1 %icmp.1064, label %else.870, label %then.856

else.870:                                         ; preds = %else.867
  %field.1889 = getelementptr inbounds i8, i8* %key1, i64 80, !dbg !798
  %field.1890 = getelementptr inbounds i8, i8* %key2, i64 80, !dbg !798
  %field0.391 = bitcast i8* %field.1889 to i64*, !dbg !798
  %ld.855 = load i64, i64* %field0.391, align 8, !dbg !798
  %field1.391 = getelementptr inbounds i8, i8* %key1, i64 88, !dbg !798
  %10 = bitcast i8* %field1.391 to i64*, !dbg !798
  %ld.856 = load i64, i64* %10, align 8, !dbg !798
  %field0.392 = bitcast i8* %field.1890 to i64*, !dbg !798
  %ld.857 = load i64, i64* %field0.392, align 8, !dbg !798
  %field1.392 = getelementptr inbounds i8, i8* %key2, i64 88, !dbg !798
  %11 = bitcast i8* %field1.392 to i64*, !dbg !798
  %ld.858 = load i64, i64* %11, align 8, !dbg !798
  %call.504 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.855, i64 %ld.856, i64 %ld.857, i64 %ld.858), !dbg !798
  %icmp.1067 = icmp eq i8 %call.504, 1, !dbg !798
  br i1 %icmp.1067, label %else.873, label %then.856

else.873:                                         ; preds = %else.870
  %field.1891 = getelementptr inbounds i8, i8* %key1, i64 96, !dbg !798
  %field.1892 = getelementptr inbounds i8, i8* %key2, i64 96, !dbg !798
  %field0.393 = bitcast i8* %field.1891 to i64*, !dbg !798
  %ld.859 = load i64, i64* %field0.393, align 8, !dbg !798
  %field1.393 = getelementptr inbounds i8, i8* %key1, i64 104, !dbg !798
  %12 = bitcast i8* %field1.393 to i64*, !dbg !798
  %ld.860 = load i64, i64* %12, align 8, !dbg !798
  %field0.394 = bitcast i8* %field.1892 to i64*, !dbg !798
  %ld.861 = load i64, i64* %field0.394, align 8, !dbg !798
  %field1.394 = getelementptr inbounds i8, i8* %key2, i64 104, !dbg !798
  %13 = bitcast i8* %field1.394 to i64*, !dbg !798
  %ld.862 = load i64, i64* %13, align 8, !dbg !798
  %call.505 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.859, i64 %ld.860, i64 %ld.861, i64 %ld.862), !dbg !798
  %icmp.1070 = icmp eq i8 %call.505, 1, !dbg !798
  %spec.select = zext i1 %icmp.1070 to i8
  ret i8 %spec.select
}

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8*, i8*, i64, i64, i64, i8*) local_unnamed_addr #0

declare { i64, i8 } @runtime.mapaccess2(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.GetAndroidABI(i8* nest nocapture readnone %nest.13, i64 %arch.chunk0, i64 %arch.chunk1) #0 !dbg !801 {
entry:
  call void @llvm.dbg.value(metadata i64 %arch.chunk0, metadata !804, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !805
  call void @llvm.dbg.value(metadata i64 %arch.chunk1, metadata !804, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !805
  %call.70 = call i8 @runtime.eqstring(i8* nest undef, i64 %arch.chunk0, i64 %arch.chunk1, i64 ptrtoint ([4 x i8]* @const.62 to i64), i64 3), !dbg !806
  %icmp.60 = icmp eq i8 %call.70, 1, !dbg !806
  br i1 %icmp.60, label %else.52, label %label.0

else.52:                                          ; preds = %label.3, %label.2, %label.0, %entry
  %merge = phi { i64, i64 } [ { i64 ptrtoint ([12 x i8]* @const.166 to i64), i64 11 }, %entry ], [ { i64 ptrtoint ([10 x i8]* @const.168 to i64), i64 9 }, %label.0 ], [ { i64 ptrtoint ([4 x i8]* @const.98 to i64), i64 3 }, %label.2 ], [ %., %label.3 ]
  call void @llvm.dbg.value(metadata i64 ptrtoint ([12 x i8]* @const.166 to i64), metadata !807, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !808
  call void @llvm.dbg.value(metadata i64 11, metadata !807, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !808
  ret { i64, i64 } %merge, !dbg !809

label.0:                                          ; preds = %entry
  %call.71 = call i8 @runtime.eqstring(i8* nest undef, i64 %arch.chunk0, i64 %arch.chunk1, i64 ptrtoint ([6 x i8]* @const.91 to i64), i64 5), !dbg !810
  %icmp.62 = icmp eq i8 %call.71, 1, !dbg !810
  br i1 %icmp.62, label %else.52, label %label.2

label.2:                                          ; preds = %label.0
  %call.72 = call i8 @runtime.eqstring(i8* nest undef, i64 %arch.chunk0, i64 %arch.chunk1, i64 ptrtoint ([4 x i8]* @const.97 to i64), i64 3), !dbg !811
  %icmp.64 = icmp eq i8 %call.72, 1, !dbg !811
  br i1 %icmp.64, label %else.52, label %label.3

label.3:                                          ; preds = %label.2
  %call.73 = call i8 @runtime.eqstring(i8* nest undef, i64 %arch.chunk0, i64 %arch.chunk1, i64 ptrtoint ([6 x i8]* @const.103 to i64), i64 5), !dbg !812
  %icmp.66 = icmp eq i8 %call.73, 1, !dbg !812
  %. = select i1 %icmp.66, { i64, i64 } { i64 ptrtoint ([7 x i8]* @const.104 to i64), i64 6 }, { i64, i64 } zeroinitializer
  br label %else.52
}

define { i64, i64 } @command_line_arguments.BuildAAR(i8* nest nocapture readnone %nest.17, %Flags.0* %f, i64 %androidDir.chunk0, i64 %androidDir.chunk1, %IPST.9* byval nocapture readonly %pkgs, %IPST.3* byval nocapture readonly %androidArchs, i64 %tmpdir.chunk0, i64 %tmpdir.chunk1, { i8*, i64 }* byval nocapture readonly %aarPath) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !813 {
entry:
  %tmp.75 = alloca %IPST.3, align 8
  %tmp.74 = alloca [2 x { i8*, i64 }], align 8
  %tmp.73 = alloca [2 x { i8*, i64 }], align 8
  %tmp.72 = alloca [2 x { i8*, i64 }], align 8
  %tmp.71 = alloca %IPST.3, align 8
  %tmp.70 = alloca %IPST.2, align 8
  %tmp.68 = alloca %IPST.2, align 8
  %tmp.65 = alloca [3 x { i8*, i64 }], align 8
  %f.addr = alloca %Flags.0*, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %aarPath, metadata !865, metadata !DIExpression()), !dbg !866
  call void @llvm.dbg.declare(metadata %IPST.3* %androidArchs, metadata !867, metadata !DIExpression()), !dbg !868
  call void @llvm.dbg.declare(metadata %IPST.9* %pkgs, metadata !869, metadata !DIExpression()), !dbg !870
  %tmpdir.addr = alloca { i8*, i64 }, align 8
  %tmpv.263 = alloca i8, align 1
  %tmpv.264 = alloca %Writer.1*, align 8
  %tmpv.265 = alloca %error.0, align 8
  %tmpv.266 = alloca %File.1*, align 8
  %sret.actual.60 = alloca { %File.1*, %error.0 }, align 8
  %tmpv.273 = alloca { i8*, %File.1**, %error.0* }, align 8
  %tmpv.276 = alloca { %__go_descriptor.9* }, align 8
  %tmpv.282 = alloca { i8*, %Flags.0**, %Writer.1** }, align 8
  %sret.actual.61 = alloca { %Writer.0, %error.0 }, align 8
  %tmpv.298 = alloca { i8*, i64 }, align 8
  %tmpv.300 = alloca [2 x %IPST.16], align 8
  %sret.actual.63 = alloca { i64, %error.0 }, align 8
  %sret.actual.64 = alloca { %Writer.0, %error.0 }, align 8
  %tmpv.309 = alloca { i8*, i64 }, align 8
  %tmpv.310 = alloca [1 x %IPST.16], align 8
  %sret.actual.65 = alloca { i64, %error.0 }, align 8
  %sret.actual.66 = alloca { %Writer.0, %error.0 }, align 8
  %tmpv.317 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.72 = alloca { %Writer.0, %error.0 }, align 8
  %tmpv.335 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.75 = alloca { %File.1*, %error.0 }, align 8
  %tmpv.340 = alloca { %File.1* }, align 8
  %sret.actual.76 = alloca { i64, %error.0 }, align 8
  %sret.actual.77 = alloca { %Writer.0, %error.0 }, align 8
  %sret.actual.78 = alloca { %Writer.0, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !871, metadata !DIExpression()), !dbg !872
  store %Flags.0* %f, %Flags.0** %f.addr, align 8
  call void @llvm.dbg.value(metadata i64 %androidDir.chunk0, metadata !873, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !874
  call void @llvm.dbg.value(metadata i64 %androidDir.chunk1, metadata !873, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !874
  %field0.61 = bitcast { i8*, i64 }* %tmpdir.addr to i64*
  store i64 %tmpdir.chunk0, i64* %field0.61, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpdir.addr, i64 0, i32 1
  store i64 %tmpdir.chunk1, i64* %0, align 8
  store i8 0, i8* %tmpv.263, align 1
  call void @llvm.dbg.value(metadata %Writer.1* null, metadata !875, metadata !DIExpression()), !dbg !969
  store %Writer.1* null, %Writer.1** %tmpv.264, align 8
  call void @llvm.dbg.value(metadata i64 0, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 0, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %cast.1241 = bitcast %error.0* %tmpv.265 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1241, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %File.1* null, metadata !972, metadata !DIExpression()), !dbg !974
  store %File.1* null, %File.1** %tmpv.266, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !871, metadata !DIExpression()), !dbg !872
  %call.79 = invoke i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f)
          to label %cont.0 unwind label %pad.0.loopexit.split-lp, !dbg !975

finally.0:                                        ; preds = %cont.25, %cont.35, %cont.34, %cont.18, %cont.14, %cont.6, %cont.0, %then.67, %then.74, %then.79, %then.80, %cont.36, %pad.0, %catchpad.0
  %err.sroa.0.1 = phi i64 [ 0, %catchpad.0 ], [ %4, %then.67 ], [ %call.86.fca.0.extract, %then.74 ], [ %8, %then.79 ], [ %11, %then.80 ], [ 0, %pad.0 ], [ %call.93.fca.0.extract, %cont.36 ], [ 0, %cont.0 ], [ %tmpv.284.sroa.4.sroa.0.0.copyload176, %cont.6 ], [ %tmpv.301.sroa.4.sroa.0.0.copyload172, %cont.14 ], [ %tmpv.311.sroa.4.sroa.0.0.copyload181, %cont.18 ], [ %tmpv.345.sroa.4.sroa.0.0.copyload162, %cont.34 ], [ %tmpv.350.sroa.4.sroa.0.0.copyload157, %cont.35 ], [ %tmpv.326.sroa.4.sroa.0.0.copyload167, %cont.25 ], !dbg !976
  %err.sroa.24.1 = phi i64 [ %err.sroa.24.2, %catchpad.0 ], [ %err.sroa.24.0.copyload140, %then.67 ], [ %call.86.fca.1.extract, %then.74 ], [ %tmpv.332.sroa.3.sroa.3.0.copyload35197, %then.79 ], [ %tmpv.341.sroa.3.sroa.3.0.copyload19198, %then.80 ], [ %err.sroa.24.2, %pad.0 ], [ %call.93.fca.1.extract, %cont.36 ], [ 0, %cont.0 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %cont.6 ], [ %tmpv.301.sroa.4.sroa.3.0.copyload174, %cont.14 ], [ %tmpv.311.sroa.4.sroa.3.0.copyload183, %cont.18 ], [ %tmpv.345.sroa.4.sroa.3.0.copyload164, %cont.34 ], [ %tmpv.350.sroa.4.sroa.3.0.copyload159, %cont.35 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %cont.25 ], !dbg !976
  %ehtmp.0.sroa.0.0 = phi i8* [ %ex2.0.fca.0.extract, %catchpad.0 ], [ undef, %then.67 ], [ undef, %then.74 ], [ undef, %then.79 ], [ undef, %then.80 ], [ undef, %pad.0 ], [ undef, %cont.36 ], [ undef, %cont.0 ], [ undef, %cont.6 ], [ undef, %cont.14 ], [ undef, %cont.18 ], [ undef, %cont.34 ], [ undef, %cont.35 ], [ undef, %cont.25 ]
  %ehtmp.0.sroa.2.0 = phi i32 [ %ex2.0.fca.1.extract, %catchpad.0 ], [ undef, %then.67 ], [ undef, %then.74 ], [ undef, %then.79 ], [ undef, %then.80 ], [ undef, %pad.0 ], [ undef, %cont.36 ], [ undef, %cont.0 ], [ undef, %cont.6 ], [ undef, %cont.14 ], [ undef, %cont.18 ], [ undef, %cont.34 ], [ undef, %cont.35 ], [ undef, %cont.25 ]
  %finvar.0.0 = phi i8 [ 0, %catchpad.0 ], [ 1, %then.67 ], [ 1, %then.74 ], [ 1, %then.79 ], [ 1, %then.80 ], [ 1, %pad.0 ], [ 1, %cont.36 ], [ 1, %cont.0 ], [ 1, %cont.6 ], [ 1, %cont.14 ], [ 1, %cont.18 ], [ 1, %cont.34 ], [ 1, %cont.35 ], [ 1, %cont.25 ]
  call void @llvm.dbg.value(metadata i64 %err.sroa.24.1, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %err.sroa.0.1, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  br label %finish.0

pad.0.loopexit:                                   ; preds = %fallthrough.75, %cont.22, %cont.23, %cont.24, %then.77, %then.78, %cont.27, %cont.28, %else.79, %cont.30, %cont.31, %cont.32
  %err.sroa.24.2.ph = phi i64 [ %err.sroa.24.3215, %fallthrough.75 ], [ %err.sroa.24.3215, %cont.22 ], [ %err.sroa.24.3215, %cont.23 ], [ %err.sroa.24.3215, %cont.24 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %then.77 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %then.78 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %cont.27 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %cont.28 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %else.79 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %cont.30 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %cont.31 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %cont.32 ]
  %lpad.loopexit = landingpad { i8*, i32 }
          catch i8* null
  br label %pad.0

pad.0.loopexit.split-lp:                          ; preds = %entry, %then.65, %then.66, %else.67, %fallthrough.66, %cont.5, %then.70, %then.71, %fallthrough.71, %cont.9, %cont.10, %cont.11, %cont.12, %cont.13, %else.72, %cont.15, %cont.16, %cont.17, %else.73, %cont.19, %else.81, %else.82, %else.83
  %err.sroa.24.2.ph202 = phi i64 [ 0, %entry ], [ 0, %then.65 ], [ 0, %then.66 ], [ 0, %else.67 ], [ 0, %fallthrough.66 ], [ 0, %cont.5 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %then.70 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %then.71 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %fallthrough.71 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %cont.9 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %cont.10 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %cont.11 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %cont.12 ], [ %tmpv.284.sroa.4.sroa.3.0.copyload178, %cont.13 ], [ %tmpv.301.sroa.4.sroa.3.0.copyload174, %else.72 ], [ %tmpv.301.sroa.4.sroa.3.0.copyload174, %cont.15 ], [ %tmpv.301.sroa.4.sroa.3.0.copyload174, %cont.16 ], [ %tmpv.301.sroa.4.sroa.3.0.copyload174, %cont.17 ], [ %tmpv.311.sroa.4.sroa.3.0.copyload183, %else.73 ], [ %tmpv.311.sroa.4.sroa.3.0.copyload183, %cont.19 ], [ %err.sroa.24.3.lcssa, %else.81 ], [ %tmpv.345.sroa.4.sroa.3.0.copyload164, %else.82 ], [ %tmpv.350.sroa.4.sroa.3.0.copyload159, %else.83 ]
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          catch i8* null
  br label %pad.0

pad.0:                                            ; preds = %pad.0.loopexit.split-lp, %pad.0.loopexit
  %err.sroa.24.2 = phi i64 [ %err.sroa.24.2.ph, %pad.0.loopexit ], [ %err.sroa.24.2.ph202, %pad.0.loopexit.split-lp ]
  call void @llvm.dbg.value(metadata i64 %err.sroa.24.2, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 0, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.263)
          to label %finally.0 unwind label %catchpad.0, !dbg !979

cont.0:                                           ; preds = %entry
  %icmp.72 = icmp eq i8 %call.79, 0, !dbg !980
  br i1 %icmp.72, label %finally.0, label %else.64

else.64:                                          ; preds = %cont.0
  %out.sroa.0.0.copyload = load i64, i64* bitcast (%Writer.0* @io_ioutil.Discard to i64*), align 8
  call void @llvm.dbg.value(metadata i64 %out.sroa.0.0.copyload, metadata !981, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !982
  %out.sroa.4.0.copyload = load i64, i64* bitcast (i8** getelementptr inbounds (%Writer.0, %Writer.0* @io_ioutil.Discard, i64 0, i32 1) to i64*), align 8
  call void @llvm.dbg.value(metadata i64 %out.sroa.4.0.copyload, metadata !981, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !982
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !871, metadata !DIExpression()), !dbg !872
  %icmp.75 = icmp eq %Flags.0* %f, null, !dbg !983
  br i1 %icmp.75, label %then.65, label %fallthrough.65

then.65:                                          ; preds = %else.64
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.65 unwind label %pad.0.loopexit.split-lp, !dbg !983

fallthrough.65:                                   ; preds = %else.64, %then.65
  %field.198 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 3, !dbg !983
  %.field.ld.3 = load i8, i8* %field.198, align 1, !dbg !983
  %icmp.76 = icmp eq i8 %.field.ld.3, 0, !dbg !984
  br i1 %icmp.76, label %then.66, label %fallthrough.66

then.66:                                          ; preds = %fallthrough.65
  %field0.43 = bitcast { i8*, i64 }* %aarPath to i64*, !dbg !985
  %ld.103 = load i64, i64* %field0.43, align 8, !dbg !985
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %aarPath, i64 0, i32 1, !dbg !985
  %ld.104 = load i64, i64* %1, align 8, !dbg !985
  invoke void @os.Create({ %File.1*, %error.0 }* nonnull sret %sret.actual.60, i8* nest undef, i64 %ld.103, i64 %ld.104)
          to label %cont.2 unwind label %pad.0.loopexit.split-lp, !dbg !985

fallthrough.66:                                   ; preds = %fallthrough.65, %cont.4
  %out.sroa.0.0 = phi i64 [ ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), %cont.4 ], [ %out.sroa.0.0.copyload, %fallthrough.65 ]
  %out.sroa.4.0 = phi i64 [ %f.ld.16200201, %cont.4 ], [ %out.sroa.4.0.copyload, %fallthrough.65 ]
  call void @llvm.dbg.value(metadata i64 %out.sroa.4.0, metadata !981, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !982
  call void @llvm.dbg.value(metadata i64 %out.sroa.0.0, metadata !981, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !982
  %call.80 = invoke %Writer.1* @archive_zip.NewWriter(i8* nest undef, i64 %out.sroa.0.0, i64 %out.sroa.4.0)
          to label %cont.5 unwind label %pad.0.loopexit.split-lp, !dbg !986

cont.2:                                           ; preds = %then.66
  %2 = bitcast { %File.1*, %error.0 }* %sret.actual.60 to i64*, !dbg !985
  %tmpv.267.sroa.0.0.copyload71199 = load i64, i64* %2, align 8, !dbg !985
  %tmpv.267.sroa.3.0.cast.1252.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.60, i64 0, i32 1, !dbg !985
  %tmpv.267.sroa.3.0.cast.1252.sroa_cast = bitcast %error.0* %tmpv.267.sroa.3.0.cast.1252.sroa_idx to i8*, !dbg !985
  call void @llvm.dbg.value(metadata { %File.1*, %error.0 }* %sret.actual.60, metadata !972, metadata !DIExpression(DW_OP_deref)), !dbg !974
  %3 = bitcast %File.1** %tmpv.266 to i64*
  store i64 %tmpv.267.sroa.0.0.copyload71199, i64* %3, align 8
  %tmpv.265228 = bitcast %error.0* %tmpv.265 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.265228, i8* nonnull align 8 %tmpv.267.sroa.3.0.cast.1252.sroa_cast, i64 16, i1 false)
  %field.191 = getelementptr inbounds %error.0, %error.0* %tmpv.265, i64 0, i32 0, !dbg !987
  %err.field.ld.11 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %field.191, align 8, !dbg !987
  %icmp.73 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %err.field.ld.11, null, !dbg !987
  br i1 %icmp.73, label %else.67, label %then.67

then.67:                                          ; preds = %cont.2
  %4 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %err.field.ld.11 to i64
  call void @llvm.dbg.value(metadata i64 %4, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  %err.sroa.24.0.cast.1258.sroa_idx139 = getelementptr inbounds %error.0, %error.0* %tmpv.265, i64 0, i32 1, !dbg !988
  %err.sroa.24.0.cast.1258.sroa_cast = bitcast i8** %err.sroa.24.0.cast.1258.sroa_idx139 to i64*, !dbg !988
  %err.sroa.24.0.copyload140 = load i64, i64* %err.sroa.24.0.cast.1258.sroa_cast, align 8, !dbg !988
  call void @llvm.dbg.value(metadata i64 %err.sroa.24.0.copyload140, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  br label %finally.0

else.67:                                          ; preds = %cont.2
  %field.192 = getelementptr inbounds { i8*, %File.1**, %error.0* }, { i8*, %File.1**, %error.0* }* %tmpv.273, i64 0, i32 0, !dbg !989
  store i8* bitcast (void (i8*)* @command_line_arguments.BuildAAR..func1 to i8*), i8** %field.192, align 8, !dbg !989
  %field.193 = getelementptr inbounds { i8*, %File.1**, %error.0* }, { i8*, %File.1**, %error.0* }* %tmpv.273, i64 0, i32 1, !dbg !989
  store %File.1** %tmpv.266, %File.1*** %field.193, align 8, !dbg !989
  %field.194 = getelementptr inbounds { i8*, %File.1**, %error.0* }, { i8*, %File.1**, %error.0* }* %tmpv.273, i64 0, i32 2, !dbg !989
  store %error.0* %tmpv.265, %error.0** %field.194, align 8, !dbg !989
  %cast.1266 = bitcast { %__go_descriptor.9* }* %tmpv.276 to i8*
  %5 = bitcast { %__go_descriptor.9* }* %tmpv.276 to { i8*, %File.1**, %error.0* }**, !dbg !990
  store { i8*, %File.1**, %error.0* }* %tmpv.273, { i8*, %File.1**, %error.0* }** %5, align 8, !dbg !990
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.263, %__go_descriptor.27* bitcast (void (i8*, { %__go_descriptor.9* }*)* @command_line_arguments.command_line_arguments..thunk0 to %__go_descriptor.27*), i8* nonnull %cast.1266)
          to label %cont.4 unwind label %pad.0.loopexit.split-lp, !dbg !990

cont.4:                                           ; preds = %else.67
  %f.ld.16200201 = load i64, i64* %3, align 8, !dbg !991
  call void @llvm.dbg.value(metadata %File.1** %tmpv.266, metadata !972, metadata !DIExpression(DW_OP_deref)), !dbg !974
  call void @llvm.dbg.value(metadata i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), metadata !981, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !982
  call void @llvm.dbg.value(metadata i64 %f.ld.16200201, metadata !981, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !982
  br label %fallthrough.66

cont.5:                                           ; preds = %fallthrough.66
  call void @llvm.dbg.value(metadata %Writer.1* %call.80, metadata !875, metadata !DIExpression()), !dbg !969
  store %Writer.1* %call.80, %Writer.1** %tmpv.264, align 8
  %cast.1276 = bitcast { i8*, %Flags.0**, %Writer.1** }* %tmpv.282 to i8*
  %field.199 = getelementptr inbounds { i8*, %Flags.0**, %Writer.1** }, { i8*, %Flags.0**, %Writer.1** }* %tmpv.282, i64 0, i32 0, !dbg !992
  store i8* bitcast (void ({ %Writer.0, %error.0 }*, i8*, i64, i64)* @command_line_arguments.BuildAAR..func2 to i8*), i8** %field.199, align 8, !dbg !992
  %field.200 = getelementptr inbounds { i8*, %Flags.0**, %Writer.1** }, { i8*, %Flags.0**, %Writer.1** }* %tmpv.282, i64 0, i32 1, !dbg !992
  store %Flags.0** %f.addr, %Flags.0*** %field.200, align 8, !dbg !992
  %field.201 = getelementptr inbounds { i8*, %Flags.0**, %Writer.1** }, { i8*, %Flags.0**, %Writer.1** }* %tmpv.282, i64 0, i32 2, !dbg !992
  store %Writer.1** %tmpv.264, %Writer.1*** %field.201, align 8, !dbg !992
  call void @llvm.dbg.value(metadata { i8*, %Flags.0**, %Writer.1** }* %tmpv.282, metadata !993, metadata !DIExpression()), !dbg !1005
  invoke void @command_line_arguments.BuildAAR..func2({ %Writer.0, %error.0 }* nonnull sret %sret.actual.61, i8* nest nonnull %cast.1276, i64 ptrtoint ([20 x i8]* @const.195 to i64), i64 19)
          to label %cont.6 unwind label %pad.0.loopexit.split-lp, !dbg !1006

cont.6:                                           ; preds = %cont.5
  %tmpv.284.sroa.0.0.cast.1286.sroa_cast = bitcast { %Writer.0, %error.0 }* %sret.actual.61 to i64*, !dbg !1006
  %tmpv.284.sroa.0.0.copyload123 = load i64, i64* %tmpv.284.sroa.0.0.cast.1286.sroa_cast, align 8, !dbg !1006
  %tmpv.284.sroa.3.0.cast.1286.sroa_idx124 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.61, i64 0, i32 0, i32 1, !dbg !1006
  %tmpv.284.sroa.3.0.cast.1286.sroa_cast = bitcast i8** %tmpv.284.sroa.3.0.cast.1286.sroa_idx124 to i64*, !dbg !1006
  %tmpv.284.sroa.3.0.copyload125 = load i64, i64* %tmpv.284.sroa.3.0.cast.1286.sroa_cast, align 8, !dbg !1006
  %tmpv.284.sroa.4.sroa.0.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.61, i64 0, i32 1, !dbg !1006
  %tmpv.284.sroa.4.sroa.0.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.284.sroa.4.sroa.0.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_idx to i64*, !dbg !1006
  %tmpv.284.sroa.4.sroa.0.0.copyload176 = load i64, i64* %tmpv.284.sroa.4.sroa.0.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_cast, align 8, !dbg !1006
  %tmpv.284.sroa.4.sroa.3.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_idx177 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.61, i64 0, i32 1, i32 1, !dbg !1006
  %tmpv.284.sroa.4.sroa.3.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_cast = bitcast i8** %tmpv.284.sroa.4.sroa.3.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_idx177 to i64*, !dbg !1006
  %tmpv.284.sroa.4.sroa.3.0.copyload178 = load i64, i64* %tmpv.284.sroa.4.sroa.3.0.tmpv.284.sroa.4.0.cast.1286.sroa_cast.sroa_cast, align 8, !dbg !1006
  call void @llvm.dbg.value(metadata i64 %tmpv.284.sroa.0.0.copyload123, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.284.sroa.3.0.copyload125, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.284.sroa.4.sroa.0.0.copyload176, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %tmpv.284.sroa.4.sroa.3.0.copyload178, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %icmp.77 = icmp eq i64 %tmpv.284.sroa.4.sroa.0.0.copyload176, 0, !dbg !1009
  br i1 %icmp.77, label %else.69, label %finally.0

else.69:                                          ; preds = %cont.6
  %field.205 = getelementptr inbounds %IPST.9, %IPST.9* %pkgs, i64 0, i32 0, !dbg !1010
  %pkgs.field.ld.1 = load %Package.0**, %Package.0*** %field.205, align 8, !dbg !1010
  %field.206 = getelementptr inbounds %IPST.9, %IPST.9* %pkgs, i64 0, i32 1, !dbg !1010
  %pkgs.field.ld.0 = load i64, i64* %field.206, align 8, !dbg !1010
  %icmp.78 = icmp slt i64 %pkgs.field.ld.0, 1, !dbg !1011
  br i1 %icmp.78, label %then.70, label %fallthrough.70

then.70:                                          ; preds = %else.69
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.70 unwind label %pad.0.loopexit.split-lp, !dbg !1011

fallthrough.70:                                   ; preds = %else.69, %then.70
  %.ptroff.ld.0 = load %Package.0*, %Package.0** %pkgs.field.ld.1, align 8, !dbg !1011
  %icmp.80 = icmp eq %Package.0* %.ptroff.ld.0, null, !dbg !1012
  br i1 %icmp.80, label %then.71, label %fallthrough.71

then.71:                                          ; preds = %fallthrough.70
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.71 unwind label %pad.0.loopexit.split-lp, !dbg !1012

fallthrough.71:                                   ; preds = %fallthrough.70, %then.71
  %field.207 = getelementptr inbounds %Package.0, %Package.0* %.ptroff.ld.0, i64 0, i32 1, !dbg !1012
  %cast.1305 = bitcast { i8*, i64 }* %field.207 to i8*
  %cast.1308 = bitcast [3 x { i8*, i64 }]* %tmp.65 to i8*, !dbg !1013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1308, i8* align 8 bitcast ({ i8*, i64 }* @const.198 to i8*), i64 16, i1 false), !dbg !1013
  %index.88 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.65, i64 0, i64 1, !dbg !1013
  %cast.1310 = bitcast { i8*, i64 }* %index.88 to i8*, !dbg !1013
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1310, i8* nonnull align 8 %cast.1305, i64 16, i1 false), !dbg !1013
  %index.89 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.65, i64 0, i64 2, !dbg !1013
  %cast.1312 = bitcast { i8*, i64 }* %index.89 to i8*, !dbg !1013
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1312, i8* align 8 bitcast ({ i8*, i64 }* @const.200 to i8*), i64 16, i1 false), !dbg !1013
  %call.81 = invoke { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.65)
          to label %cont.9 unwind label %pad.0.loopexit.split-lp, !dbg !1013

cont.9:                                           ; preds = %fallthrough.71
  %call.82 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.10 unwind label %pad.0.loopexit.split-lp, !dbg !1014

cont.10:                                          ; preds = %cont.9
  %call.81.fca.1.extract = extractvalue { i64, i64 } %call.81, 1, !dbg !1013
  %call.81.fca.0.extract = extractvalue { i64, i64 } %call.81, 0, !dbg !1013
  %tmpv.295.sroa.0.0.cast.1319.sroa_cast = bitcast { i8*, i64 }* %tmpv.298 to i64*
  store i64 %call.81.fca.0.extract, i64* %tmpv.295.sroa.0.0.cast.1319.sroa_cast, align 8
  %tmpv.295.sroa.2.0.cast.1319.sroa_idx68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.298, i64 0, i32 1
  store i64 %call.81.fca.1.extract, i64* %tmpv.295.sroa.2.0.cast.1319.sroa_idx68, align 8
  %cast.1322 = bitcast { i8*, i64 }* %tmpv.298 to i8*, !dbg !1014
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.82, i8* nonnull %cast.1322)
          to label %cont.11 unwind label %pad.0.loopexit.split-lp, !dbg !1014

cont.11:                                          ; preds = %cont.10
  %call.83 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int..d)
          to label %cont.12 unwind label %pad.0.loopexit.split-lp, !dbg !1014

cont.12:                                          ; preds = %cont.11
  %cast.1323 = bitcast i8* %call.83 to i64*, !dbg !1014
  store i64 15, i64* %cast.1323, align 8, !dbg !1014
  %tmp.66.sroa.0.0.cast.1326.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.300, i64 0, i64 0, i32 0, !dbg !1014
  store %_type.0* @string..d, %_type.0** %tmp.66.sroa.0.0.cast.1326.sroa_idx, align 8, !dbg !1014
  %tmp.66.sroa.2.0.cast.1326.sroa_idx188 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.300, i64 0, i64 0, i32 1, !dbg !1014
  store i8* %call.82, i8** %tmp.66.sroa.2.0.cast.1326.sroa_idx188, align 8, !dbg !1014
  %tmp.67.sroa.0.0.cast.1328.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.300, i64 0, i64 1, i32 0, !dbg !1014
  store %_type.0* @int..d, %_type.0** %tmp.67.sroa.0.0.cast.1328.sroa_idx, align 8, !dbg !1014
  %tmp.67.sroa.2.0.cast.1328.sroa_idx189 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.300, i64 0, i64 1, i32 1, !dbg !1014
  store i8* %call.83, i8** %tmp.67.sroa.2.0.cast.1328.sroa_idx189, align 8, !dbg !1014
  %field.212 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.68, i64 0, i32 0, !dbg !1014
  %cast.1332 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.300, i64 0, i64 0, !dbg !1014
  store %IPST.16* %cast.1332, %IPST.16** %field.212, align 8, !dbg !1014
  %field.213 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.68, i64 0, i32 1, !dbg !1014
  store i64 2, i64* %field.213, align 8, !dbg !1014
  %field.214 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.68, i64 0, i32 2, !dbg !1014
  store i64 2, i64* %field.214, align 8, !dbg !1014
  invoke void @fmt.Fprintf({ i64, %error.0 }* nonnull sret %sret.actual.63, i8* nest undef, i64 %tmpv.284.sroa.0.0.copyload123, i64 %tmpv.284.sroa.3.0.copyload125, i64 ptrtoint ([131 x i8]* @const.201 to i64), i64 130, %IPST.2* byval nonnull %tmp.68)
          to label %cont.13 unwind label %pad.0.loopexit.split-lp, !dbg !1014

cont.13:                                          ; preds = %cont.12
  %6 = bitcast { i8*, %Flags.0**, %Writer.1** }* %tmpv.282 to void ({ %Writer.0, %error.0 }*, i8*, i64, i64)**, !dbg !1015
  %deref.ld.1192 = load void ({ %Writer.0, %error.0 }*, i8*, i64, i64)*, void ({ %Writer.0, %error.0 }*, i8*, i64, i64)** %6, align 8, !dbg !1015
  invoke void %deref.ld.1192({ %Writer.0, %error.0 }* nonnull sret %sret.actual.64, i8* nest nonnull %cast.1276, i64 ptrtoint ([13 x i8]* @const.203 to i64), i64 12)
          to label %cont.14 unwind label %pad.0.loopexit.split-lp, !dbg !1015

cont.14:                                          ; preds = %cont.13
  %tmpv.301.sroa.0.0.cast.1342.sroa_cast = bitcast { %Writer.0, %error.0 }* %sret.actual.64 to i64*, !dbg !1015
  %tmpv.301.sroa.0.0.copyload118 = load i64, i64* %tmpv.301.sroa.0.0.cast.1342.sroa_cast, align 8, !dbg !1015
  %tmpv.301.sroa.3.0.cast.1342.sroa_idx119 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.64, i64 0, i32 0, i32 1, !dbg !1015
  %tmpv.301.sroa.3.0.cast.1342.sroa_cast = bitcast i8** %tmpv.301.sroa.3.0.cast.1342.sroa_idx119 to i64*, !dbg !1015
  %tmpv.301.sroa.3.0.copyload120 = load i64, i64* %tmpv.301.sroa.3.0.cast.1342.sroa_cast, align 8, !dbg !1015
  %tmpv.301.sroa.4.sroa.0.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.64, i64 0, i32 1, !dbg !1015
  %tmpv.301.sroa.4.sroa.0.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.301.sroa.4.sroa.0.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_idx to i64*, !dbg !1015
  %tmpv.301.sroa.4.sroa.0.0.copyload172 = load i64, i64* %tmpv.301.sroa.4.sroa.0.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_cast, align 8, !dbg !1015
  %tmpv.301.sroa.4.sroa.3.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_idx173 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.64, i64 0, i32 1, i32 1, !dbg !1015
  %tmpv.301.sroa.4.sroa.3.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_cast = bitcast i8** %tmpv.301.sroa.4.sroa.3.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_idx173 to i64*, !dbg !1015
  %tmpv.301.sroa.4.sroa.3.0.copyload174 = load i64, i64* %tmpv.301.sroa.4.sroa.3.0.tmpv.301.sroa.4.0.cast.1342.sroa_cast.sroa_cast, align 8, !dbg !1015
  call void @llvm.dbg.value(metadata i64 %tmpv.301.sroa.0.0.copyload118, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.301.sroa.3.0.copyload120, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.301.sroa.4.sroa.0.0.copyload172, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %tmpv.301.sroa.4.sroa.3.0.copyload174, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %icmp.81 = icmp eq i64 %tmpv.301.sroa.4.sroa.0.0.copyload172, 0, !dbg !1016
  br i1 %icmp.81, label %else.72, label %finally.0

else.72:                                          ; preds = %cont.14
  %call.84 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.15 unwind label %pad.0.loopexit.split-lp, !dbg !1017

cont.15:                                          ; preds = %else.72
  %cast.1364 = bitcast { i8*, i64 }* %tmpv.309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1364, i8* align 8 bitcast ({ i8*, i64 }* @const.206 to i8*), i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.84, i8* nonnull %cast.1364)
          to label %cont.16 unwind label %pad.0.loopexit.split-lp, !dbg !1017

cont.16:                                          ; preds = %cont.15
  %tmp.69.sroa.0.0.cast.1369.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.310, i64 0, i64 0, i32 0, !dbg !1017
  store %_type.0* @string..d, %_type.0** %tmp.69.sroa.0.0.cast.1369.sroa_idx, align 8, !dbg !1017
  %tmp.69.sroa.2.0.cast.1369.sroa_idx190 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.310, i64 0, i64 0, i32 1, !dbg !1017
  store i8* %call.84, i8** %tmp.69.sroa.2.0.cast.1369.sroa_idx190, align 8, !dbg !1017
  %field.220 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.70, i64 0, i32 0, !dbg !1017
  %cast.1372 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.310, i64 0, i64 0, !dbg !1017
  store %IPST.16* %cast.1372, %IPST.16** %field.220, align 8, !dbg !1017
  %field.221 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.70, i64 0, i32 1, !dbg !1017
  store i64 1, i64* %field.221, align 8, !dbg !1017
  %field.222 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.70, i64 0, i32 2, !dbg !1017
  store i64 1, i64* %field.222, align 8, !dbg !1017
  invoke void @fmt.Fprintln({ i64, %error.0 }* nonnull sret %sret.actual.65, i8* nest undef, i64 %tmpv.301.sroa.0.0.copyload118, i64 %tmpv.301.sroa.3.0.copyload120, %IPST.2* byval nonnull %tmp.70)
          to label %cont.17 unwind label %pad.0.loopexit.split-lp, !dbg !1017

cont.17:                                          ; preds = %cont.16
  %deref.ld.2193 = load void ({ %Writer.0, %error.0 }*, i8*, i64, i64)*, void ({ %Writer.0, %error.0 }*, i8*, i64, i64)** %6, align 8, !dbg !1018
  invoke void %deref.ld.2193({ %Writer.0, %error.0 }* nonnull sret %sret.actual.66, i8* nest nonnull %cast.1276, i64 ptrtoint ([12 x i8]* @const.207 to i64), i64 11)
          to label %cont.18 unwind label %pad.0.loopexit.split-lp, !dbg !1018

cont.18:                                          ; preds = %cont.17
  %tmpv.311.sroa.0.0.cast.1382.sroa_cast = bitcast { %Writer.0, %error.0 }* %sret.actual.66 to i64*, !dbg !1018
  %tmpv.311.sroa.0.0.copyload112 = load i64, i64* %tmpv.311.sroa.0.0.cast.1382.sroa_cast, align 8, !dbg !1018
  %tmpv.311.sroa.3.0.cast.1382.sroa_idx113 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.66, i64 0, i32 0, i32 1, !dbg !1018
  %tmpv.311.sroa.3.0.cast.1382.sroa_cast = bitcast i8** %tmpv.311.sroa.3.0.cast.1382.sroa_idx113 to i64*, !dbg !1018
  %tmpv.311.sroa.3.0.copyload114 = load i64, i64* %tmpv.311.sroa.3.0.cast.1382.sroa_cast, align 8, !dbg !1018
  %tmpv.311.sroa.4.sroa.0.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.66, i64 0, i32 1, !dbg !1018
  %tmpv.311.sroa.4.sroa.0.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.311.sroa.4.sroa.0.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_idx to i64*, !dbg !1018
  %tmpv.311.sroa.4.sroa.0.0.copyload181 = load i64, i64* %tmpv.311.sroa.4.sroa.0.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_cast, align 8, !dbg !1018
  %tmpv.311.sroa.4.sroa.3.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_idx182 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.66, i64 0, i32 1, i32 1, !dbg !1018
  %tmpv.311.sroa.4.sroa.3.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_cast = bitcast i8** %tmpv.311.sroa.4.sroa.3.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_idx182 to i64*, !dbg !1018
  %tmpv.311.sroa.4.sroa.3.0.copyload183 = load i64, i64* %tmpv.311.sroa.4.sroa.3.0.tmpv.311.sroa.4.0.cast.1382.sroa_cast.sroa_cast, align 8, !dbg !1018
  call void @llvm.dbg.value(metadata i64 %tmpv.311.sroa.0.0.copyload112, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.311.sroa.3.0.copyload114, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.311.sroa.4.sroa.0.0.copyload181, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %tmpv.311.sroa.4.sroa.3.0.copyload183, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %icmp.82 = icmp eq i64 %tmpv.311.sroa.4.sroa.0.0.copyload181, 0, !dbg !1019
  br i1 %icmp.82, label %else.73, label %finally.0

else.73:                                          ; preds = %cont.18
  %androidDir.addr.sroa.0.0.cast.1401.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.317 to i64*, !dbg !1020
  store i64 %androidDir.chunk0, i64* %androidDir.addr.sroa.0.0.cast.1401.sroa_cast, align 8, !dbg !1020
  %androidDir.addr.sroa.3.0.cast.1401.sroa_idx185 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.317, i64 0, i64 0, i32 1, !dbg !1020
  store i64 %androidDir.chunk1, i64* %androidDir.addr.sroa.3.0.cast.1401.sroa_idx185, align 8, !dbg !1020
  %index.94 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.317, i64 0, i64 1, !dbg !1020
  %cast.1403 = bitcast { i8*, i64 }* %index.94 to i8*, !dbg !1020
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1403, i8* align 8 bitcast ({ i8*, i64 }* @const.210 to i8*), i64 16, i1 false), !dbg !1020
  %field.226 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.71, i64 0, i32 0, !dbg !1020
  %cast.1405 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.317, i64 0, i64 0, !dbg !1020
  store { i8*, i64 }* %cast.1405, { i8*, i64 }** %field.226, align 8, !dbg !1020
  %field.227 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.71, i64 0, i32 1, !dbg !1020
  store i64 2, i64* %field.227, align 8, !dbg !1020
  %field.228 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.71, i64 0, i32 2, !dbg !1020
  store i64 2, i64* %field.228, align 8, !dbg !1020
  %call.85 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.71)
          to label %cont.19 unwind label %pad.0.loopexit.split-lp, !dbg !1020

cont.19:                                          ; preds = %else.73
  %call.85.fca.0.extract = extractvalue { i64, i64 } %call.85, 0, !dbg !1020
  %call.85.fca.1.extract = extractvalue { i64, i64 } %call.85, 1, !dbg !1020
  call void @llvm.dbg.value(metadata i64 %call.85.fca.0.extract, metadata !1021, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1022
  call void @llvm.dbg.value(metadata i64 %call.85.fca.1.extract, metadata !1021, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1022
  %f.ld.18 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !1023
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.18, metadata !871, metadata !DIExpression()), !dbg !872
  %call.86 = invoke { i64, i64 } @command_line_arguments.BuildJar(i8* nest undef, %Flags.0* %f.ld.18, i64 %tmpv.311.sroa.0.0.copyload112, i64 %tmpv.311.sroa.3.0.copyload114, i64 %call.85.fca.0.extract, i64 %call.85.fca.1.extract, { i8*, i64 }* byval nonnull %tmpdir.addr)
          to label %cont.20 unwind label %pad.0.loopexit.split-lp, !dbg !1025

cont.20:                                          ; preds = %cont.19
  %call.86.fca.0.extract = extractvalue { i64, i64 } %call.86, 0, !dbg !1025
  call void @llvm.dbg.value(metadata i64 %call.86.fca.0.extract, metadata !1026, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1027
  %icmp.83 = icmp eq i64 %call.86.fca.0.extract, 0, !dbg !1028
  br i1 %icmp.83, label %else.74, label %then.74

then.74:                                          ; preds = %cont.20
  %call.86.fca.1.extract = extractvalue { i64, i64 } %call.86, 1, !dbg !1025
  call void @llvm.dbg.value(metadata i64 %call.86.fca.1.extract, metadata !1026, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1027
  call void @llvm.dbg.value(metadata i64 %call.86.fca.0.extract, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %call.86.fca.1.extract, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  br label %finally.0

else.74:                                          ; preds = %cont.20
  %tmpv.320.sroa.0.0.cast.1423.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %androidArchs, i64 0, i32 0
  %tmpv.320.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.320.sroa.0.0.cast.1423.sroa_idx, align 8
  %tmpv.320.sroa.2.0.cast.1423.sroa_idx46 = getelementptr inbounds %IPST.3, %IPST.3* %androidArchs, i64 0, i32 1
  %tmpv.320.sroa.2.0.copyload = load i64, i64* %tmpv.320.sroa.2.0.cast.1423.sroa_idx46, align 8
  call void @llvm.dbg.value(metadata i64 %tmpv.311.sroa.4.sroa.3.0.copyload183, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 0, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  %icmp.91212 = icmp sgt i64 %tmpv.320.sroa.2.0.copyload, 0, !dbg !1029
  br i1 %icmp.91212, label %then.81.lr.ph, label %else.81

then.81.lr.ph:                                    ; preds = %else.74
  %tmpv.324.sroa.0.0.cast.1436.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.72 to i64*
  %tmpv.324.sroa.2.0.cast.1436.sroa_idx39 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.72, i64 0, i64 0, i32 1
  %index.96 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.72, i64 0, i64 1
  %cast.1438 = bitcast { i8*, i64 }* %index.96 to i8*
  %cast.1450 = bitcast [2 x { i8*, i64 }]* %tmp.73 to i8*
  %lib.sroa.0.0.cast.1452.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.73, i64 0, i64 1
  %lib.sroa.0.0.cast.1452.sroa_cast = bitcast { i8*, i64 }* %lib.sroa.0.0.cast.1452.sroa_idx to i64*
  %lib.sroa.5.0.cast.1452.sroa_idx42 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.73, i64 0, i64 1, i32 1
  %tmpv.326.sroa.0.0.cast.1459.sroa_cast = bitcast { %Writer.0, %error.0 }* %sret.actual.72 to i64*
  %tmpv.326.sroa.3.0.cast.1459.sroa_idx107 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.72, i64 0, i32 0, i32 1
  %tmpv.326.sroa.3.0.cast.1459.sroa_cast = bitcast i8** %tmpv.326.sroa.3.0.cast.1459.sroa_idx107 to i64*
  %tmpv.326.sroa.4.sroa.0.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.72, i64 0, i32 1
  %tmpv.326.sroa.4.sroa.0.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.326.sroa.4.sroa.0.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_idx to i64*
  %tmpv.326.sroa.4.sroa.3.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_idx168 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.72, i64 0, i32 1, i32 1
  %tmpv.326.sroa.4.sroa.3.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_cast = bitcast i8** %tmpv.326.sroa.4.sroa.3.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_idx168 to i64*
  %cast.1480 = bitcast [2 x { i8*, i64 }]* %tmp.74 to i8*
  %lib.sroa.0.0.cast.1482.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.74, i64 0, i64 1
  %lib.sroa.0.0.cast.1482.sroa_cast = bitcast { i8*, i64 }* %lib.sroa.0.0.cast.1482.sroa_idx to i64*
  %lib.sroa.5.0.cast.1482.sroa_idx43 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.74, i64 0, i64 1, i32 1
  %androidDir.addr.sroa.0.0.cast.1488.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.335 to i64*
  %androidDir.addr.sroa.3.0.cast.1488.sroa_idx186 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.335, i64 0, i64 0, i32 1
  %tmpv.334.sroa.0.0.cast.1490.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.335, i64 0, i64 1
  %tmpv.334.sroa.0.0.cast.1490.sroa_cast = bitcast { i8*, i64 }* %tmpv.334.sroa.0.0.cast.1490.sroa_idx to i64*
  %tmpv.334.sroa.2.0.cast.1490.sroa_idx23 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.335, i64 0, i64 1, i32 1
  %field.236 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.75, i64 0, i32 0
  %cast.1492 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.335, i64 0, i64 0
  %field.237 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.75, i64 0, i32 1
  %field.238 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.75, i64 0, i32 2
  %tmpv.332.sroa.0.0.cast.1498.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.75, i64 0, i32 0
  %tmpv.332.sroa.3.sroa.0.0.tmpv.332.sroa.3.0.cast.1498.sroa_cast.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.75, i64 0, i32 1, i32 0
  %field.242 = getelementptr inbounds { %File.1* }, { %File.1* }* %tmpv.340, i64 0, i32 0
  %cast.1513 = bitcast { %File.1* }* %tmpv.340 to i8*
  %tmpv.341.sroa.3.sroa.0.0.tmpv.341.sroa.3.0.cast.1524.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.76, i64 0, i32 1, i32 0
  br label %fallthrough.75

fallthrough.75:                                   ; preds = %then.81.lr.ph, %fallthrough.78
  %tmpv.344.0216 = phi %Flags.0* [ undef, %then.81.lr.ph ], [ %tmpv.344.1, %fallthrough.78 ]
  %err.sroa.24.3215 = phi i64 [ %tmpv.311.sroa.4.sroa.3.0.copyload183, %then.81.lr.ph ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %fallthrough.78 ]
  %tmpv.318.0213 = phi i64 [ 0, %then.81.lr.ph ], [ %add.3, %fallthrough.78 ]
  call void @llvm.dbg.value(metadata i64 %err.sroa.24.3215, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %ptroff.4.phi.trans.insert = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.320.sroa.0.0.copyload, i64 %tmpv.318.0213
  %tmpv.319.sroa.0.0.cast.1425.sroa_cast.phi.trans.insert = bitcast { i8*, i64 }* %ptroff.4.phi.trans.insert to i64*
  %tmpv.319.sroa.0.0.copyload59.pre = load i64, i64* %tmpv.319.sroa.0.0.cast.1425.sroa_cast.phi.trans.insert, align 8, !dbg !1029
  %tmpv.319.sroa.3.0.cast.1425.sroa_idx60.phi.trans.insert = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.320.sroa.0.0.copyload, i64 %tmpv.318.0213, i32 1
  %tmpv.319.sroa.3.0.copyload61.pre = load i64, i64* %tmpv.319.sroa.3.0.cast.1425.sroa_idx60.phi.trans.insert, align 8, !dbg !1029
  call void @llvm.dbg.value(metadata i64 %tmpv.319.sroa.0.0.copyload59.pre, metadata !1030, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1031
  call void @llvm.dbg.value(metadata i64 %tmpv.319.sroa.3.0.copyload61.pre, metadata !1030, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1031
  %call.87 = invoke { i64, i64 } @command_line_arguments.GetAndroidABI(i8* nest undef, i64 %tmpv.319.sroa.0.0.copyload59.pre, i64 %tmpv.319.sroa.3.0.copyload61.pre)
          to label %cont.22 unwind label %pad.0.loopexit, !dbg !1032

cont.22:                                          ; preds = %fallthrough.75
  %call.87.fca.0.extract = extractvalue { i64, i64 } %call.87, 0, !dbg !1032
  %call.87.fca.1.extract = extractvalue { i64, i64 } %call.87, 1, !dbg !1032
  store i64 %call.87.fca.0.extract, i64* %tmpv.324.sroa.0.0.cast.1436.sroa_cast, align 8, !dbg !1032
  store i64 %call.87.fca.1.extract, i64* %tmpv.324.sroa.2.0.cast.1436.sroa_idx39, align 8, !dbg !1032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1438, i8* align 8 bitcast ({ i8*, i64 }* @const.212 to i8*), i64 16, i1 false), !dbg !1032
  %call.88 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.72)
          to label %cont.23 unwind label %pad.0.loopexit, !dbg !1032

cont.23:                                          ; preds = %cont.22
  %call.88.fca.0.extract = extractvalue { i64, i64 } %call.88, 0, !dbg !1032
  %call.88.fca.1.extract = extractvalue { i64, i64 } %call.88, 1, !dbg !1032
  call void @llvm.dbg.value(metadata i64 %call.88.fca.0.extract, metadata !1033, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1034
  call void @llvm.dbg.value(metadata i64 %call.88.fca.1.extract, metadata !1033, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1034
  %deref.ld.3196 = load void ({ %Writer.0, %error.0 }*, i8*, i64, i64)*, void ({ %Writer.0, %error.0 }*, i8*, i64, i64)** %6, align 8, !dbg !1035
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1450, i8* align 8 bitcast ({ i8*, i64 }* @const.214 to i8*), i64 16, i1 false), !dbg !1036
  store i64 %call.88.fca.0.extract, i64* %lib.sroa.0.0.cast.1452.sroa_cast, align 8, !dbg !1036
  store i64 %call.88.fca.1.extract, i64* %lib.sroa.5.0.cast.1452.sroa_idx42, align 8, !dbg !1036
  %call.89 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.73)
          to label %cont.24 unwind label %pad.0.loopexit, !dbg !1036

cont.24:                                          ; preds = %cont.23
  %call.89.fca.0.extract = extractvalue { i64, i64 } %call.89, 0, !dbg !1036
  %call.89.fca.1.extract = extractvalue { i64, i64 } %call.89, 1, !dbg !1036
  invoke void %deref.ld.3196({ %Writer.0, %error.0 }* nonnull sret %sret.actual.72, i8* nest nonnull %cast.1276, i64 %call.89.fca.0.extract, i64 %call.89.fca.1.extract)
          to label %cont.25 unwind label %pad.0.loopexit, !dbg !1035

cont.25:                                          ; preds = %cont.24
  %tmpv.326.sroa.0.0.copyload106 = load i64, i64* %tmpv.326.sroa.0.0.cast.1459.sroa_cast, align 8, !dbg !1035
  %tmpv.326.sroa.3.0.copyload108 = load i64, i64* %tmpv.326.sroa.3.0.cast.1459.sroa_cast, align 8, !dbg !1035
  %tmpv.326.sroa.4.sroa.0.0.copyload167 = load i64, i64* %tmpv.326.sroa.4.sroa.0.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_cast, align 8, !dbg !1035
  %tmpv.326.sroa.4.sroa.3.0.copyload169 = load i64, i64* %tmpv.326.sroa.4.sroa.3.0.tmpv.326.sroa.4.0.cast.1459.sroa_cast.sroa_cast, align 8, !dbg !1035
  call void @llvm.dbg.value(metadata i64 %tmpv.326.sroa.0.0.copyload106, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.326.sroa.3.0.copyload108, metadata !1007, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.326.sroa.4.sroa.0.0.copyload167, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  %icmp.86 = icmp eq i64 %tmpv.326.sroa.4.sroa.0.0.copyload167, 0, !dbg !1037
  br i1 %icmp.86, label %else.76, label %finally.0

else.76:                                          ; preds = %cont.25
  %f.ld.19 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !1038
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.19, metadata !871, metadata !DIExpression()), !dbg !872
  %icmp.89 = icmp eq %Flags.0* %f.ld.19, null, !dbg !1039
  br i1 %icmp.89, label %then.77, label %fallthrough.77

then.77:                                          ; preds = %else.76
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.77 unwind label %pad.0.loopexit, !dbg !1039

fallthrough.77:                                   ; preds = %else.76, %then.77
  %tmpv.344.1 = phi %Flags.0* [ %tmpv.344.0216, %then.77 ], [ %f.ld.19, %else.76 ]
  %field.248 = getelementptr inbounds %Flags.0, %Flags.0* %tmpv.344.1, i64 0, i32 3, !dbg !1039
  %.field.ld.4 = load i8, i8* %field.248, align 1, !dbg !1039
  %icmp.90 = icmp eq i8 %.field.ld.4, 0, !dbg !1040
  br i1 %icmp.90, label %then.78, label %fallthrough.78

then.78:                                          ; preds = %fallthrough.77
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1480, i8* align 8 bitcast ({ i8*, i64 }* @const.216 to i8*), i64 16, i1 false), !dbg !1041
  store i64 %call.88.fca.0.extract, i64* %lib.sroa.0.0.cast.1482.sroa_cast, align 8, !dbg !1041
  store i64 %call.88.fca.1.extract, i64* %lib.sroa.5.0.cast.1482.sroa_idx43, align 8, !dbg !1041
  %call.90 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.74)
          to label %cont.27 unwind label %pad.0.loopexit, !dbg !1041

fallthrough.78:                                   ; preds = %cont.33, %fallthrough.77
  %add.3 = add nuw nsw i64 %tmpv.318.0213, 1, !dbg !1029
  call void @llvm.dbg.value(metadata i64 %tmpv.326.sroa.4.sroa.3.0.copyload169, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 0, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  %icmp.91 = icmp slt i64 %add.3, %tmpv.320.sroa.2.0.copyload, !dbg !1029
  br i1 %icmp.91, label %fallthrough.75, label %else.81

cont.27:                                          ; preds = %then.78
  %call.90.fca.0.extract = extractvalue { i64, i64 } %call.90, 0, !dbg !1041
  %call.90.fca.1.extract = extractvalue { i64, i64 } %call.90, 1, !dbg !1041
  store i64 %androidDir.chunk0, i64* %androidDir.addr.sroa.0.0.cast.1488.sroa_cast, align 8, !dbg !1043
  store i64 %androidDir.chunk1, i64* %androidDir.addr.sroa.3.0.cast.1488.sroa_idx186, align 8, !dbg !1043
  store i64 %call.90.fca.0.extract, i64* %tmpv.334.sroa.0.0.cast.1490.sroa_cast, align 8, !dbg !1043
  store i64 %call.90.fca.1.extract, i64* %tmpv.334.sroa.2.0.cast.1490.sroa_idx23, align 8, !dbg !1043
  store { i8*, i64 }* %cast.1492, { i8*, i64 }** %field.236, align 8, !dbg !1043
  store i64 2, i64* %field.237, align 8, !dbg !1043
  store i64 2, i64* %field.238, align 8, !dbg !1043
  %call.91 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.75)
          to label %cont.28 unwind label %pad.0.loopexit, !dbg !1043

cont.28:                                          ; preds = %cont.27
  %call.91.fca.0.extract = extractvalue { i64, i64 } %call.91, 0, !dbg !1043
  %call.91.fca.1.extract = extractvalue { i64, i64 } %call.91, 1, !dbg !1043
  invoke void @os.Open({ %File.1*, %error.0 }* nonnull sret %sret.actual.75, i8* nest undef, i64 %call.91.fca.0.extract, i64 %call.91.fca.1.extract)
          to label %cont.29 unwind label %pad.0.loopexit, !dbg !1044

cont.29:                                          ; preds = %cont.28
  %tmpv.332.sroa.0.0.copyload24 = load %File.1*, %File.1** %tmpv.332.sroa.0.0.cast.1498.sroa_idx, align 8, !dbg !1044
  %tmpv.332.sroa.3.sroa.0.0.copyload33 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.332.sroa.3.sroa.0.0.tmpv.332.sroa.3.0.cast.1498.sroa_cast.sroa_idx, align 8, !dbg !1044
  call void @llvm.dbg.value(metadata %File.1* %tmpv.332.sroa.0.0.copyload24, metadata !1045, metadata !DIExpression()), !dbg !1046
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.332.sroa.3.sroa.0.0.copyload33, metadata !1047, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1046
  %icmp.87 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.332.sroa.3.sroa.0.0.copyload33, null, !dbg !1048
  br i1 %icmp.87, label %else.79, label %then.79

then.79:                                          ; preds = %cont.29
  %tmpv.332.sroa.3.sroa.3.0.tmpv.332.sroa.3.0.cast.1498.sroa_cast.sroa_idx34 = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.75, i64 0, i32 1, i32 1, !dbg !1044
  %7 = bitcast i8** %tmpv.332.sroa.3.sroa.3.0.tmpv.332.sroa.3.0.cast.1498.sroa_cast.sroa_idx34 to i64*, !dbg !1044
  %tmpv.332.sroa.3.sroa.3.0.copyload35197 = load i64, i64* %7, align 8, !dbg !1044
  call void @llvm.dbg.value(metadata i8** %tmpv.332.sroa.3.sroa.3.0.tmpv.332.sroa.3.0.cast.1498.sroa_cast.sroa_idx34, metadata !1047, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1046
  %8 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.332.sroa.3.sroa.0.0.copyload33 to i64, !dbg !1049
  call void @llvm.dbg.value(metadata i64 %8, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %tmpv.332.sroa.3.sroa.3.0.copyload35197, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  br label %finally.0

else.79:                                          ; preds = %cont.29
  %call.92 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1os.File.5, i64 0, i32 0))
          to label %cont.30 unwind label %pad.0.loopexit, !dbg !1050

cont.30:                                          ; preds = %else.79
  store %File.1* %tmpv.332.sroa.0.0.copyload24, %File.1** %field.242, align 8, !dbg !1050
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5a0.0.1os.File.5, i64 0, i32 0), i8* %call.92, i8* nonnull %cast.1513)
          to label %cont.31 unwind label %pad.0.loopexit, !dbg !1050

cont.31:                                          ; preds = %cont.30
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.263, %__go_descriptor.27* bitcast (i8 (i8*, { %File.1* }*)* @command_line_arguments.command_line_arguments..thunk1 to %__go_descriptor.27*), i8* %call.92)
          to label %cont.32 unwind label %pad.0.loopexit, !dbg !1050

cont.32:                                          ; preds = %cont.31
  %9 = ptrtoint %File.1* %tmpv.332.sroa.0.0.copyload24 to i64, !dbg !1051
  invoke void @io.Copy({ i64, %error.0 }* nonnull sret %sret.actual.76, i8* nest undef, i64 %tmpv.326.sroa.0.0.copyload106, i64 %tmpv.326.sroa.3.0.copyload108, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), i64 %9)
          to label %cont.33 unwind label %pad.0.loopexit, !dbg !1053

cont.33:                                          ; preds = %cont.32
  %tmpv.341.sroa.3.sroa.0.0.copyload17 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.341.sroa.3.sroa.0.0.tmpv.341.sroa.3.0.cast.1524.sroa_cast.sroa_idx, align 8, !dbg !1053
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.76, metadata !1054, metadata !DIExpression(DW_OP_deref)), !dbg !1055
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.341.sroa.3.sroa.0.0.copyload17, metadata !1056, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1055
  %icmp.88 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.341.sroa.3.sroa.0.0.copyload17, null, !dbg !1057
  br i1 %icmp.88, label %fallthrough.78, label %then.80

then.80:                                          ; preds = %cont.33
  %tmpv.341.sroa.3.sroa.3.0.tmpv.341.sroa.3.0.cast.1524.sroa_cast.sroa_idx18 = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.76, i64 0, i32 1, i32 1, !dbg !1053
  %10 = bitcast i8** %tmpv.341.sroa.3.sroa.3.0.tmpv.341.sroa.3.0.cast.1524.sroa_cast.sroa_idx18 to i64*, !dbg !1053
  %tmpv.341.sroa.3.sroa.3.0.copyload19198 = load i64, i64* %10, align 8, !dbg !1053
  call void @llvm.dbg.value(metadata i8** %tmpv.341.sroa.3.sroa.3.0.tmpv.341.sroa.3.0.cast.1524.sroa_cast.sroa_idx18, metadata !1056, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1055
  %11 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.341.sroa.3.sroa.0.0.copyload17 to i64, !dbg !1058
  call void @llvm.dbg.value(metadata i64 %11, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %tmpv.341.sroa.3.sroa.3.0.copyload19198, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  br label %finally.0

else.81:                                          ; preds = %fallthrough.78, %else.74
  %err.sroa.24.3.lcssa = phi i64 [ %tmpv.311.sroa.4.sroa.3.0.copyload183, %else.74 ], [ %tmpv.326.sroa.4.sroa.3.0.copyload169, %fallthrough.78 ], !dbg !976
  call void @llvm.dbg.value(metadata i64 %err.sroa.24.3.lcssa, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %deref.ld.4194 = load void ({ %Writer.0, %error.0 }*, i8*, i64, i64)*, void ({ %Writer.0, %error.0 }*, i8*, i64, i64)** %6, align 8, !dbg !1059
  invoke void %deref.ld.4194({ %Writer.0, %error.0 }* nonnull sret %sret.actual.77, i8* nest nonnull %cast.1276, i64 ptrtoint ([6 x i8]* @const.219 to i64), i64 5)
          to label %cont.34 unwind label %pad.0.loopexit.split-lp, !dbg !1059

cont.34:                                          ; preds = %else.81
  %tmpv.345.sroa.4.sroa.0.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.77, i64 0, i32 1, !dbg !1059
  %tmpv.345.sroa.4.sroa.0.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.345.sroa.4.sroa.0.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_idx to i64*, !dbg !1059
  %tmpv.345.sroa.4.sroa.0.0.copyload162 = load i64, i64* %tmpv.345.sroa.4.sroa.0.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_cast, align 8, !dbg !1059
  %tmpv.345.sroa.4.sroa.3.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_idx163 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.77, i64 0, i32 1, i32 1, !dbg !1059
  %tmpv.345.sroa.4.sroa.3.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_cast = bitcast i8** %tmpv.345.sroa.4.sroa.3.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_idx163 to i64*, !dbg !1059
  %tmpv.345.sroa.4.sroa.3.0.copyload164 = load i64, i64* %tmpv.345.sroa.4.sroa.3.0.tmpv.345.sroa.4.0.cast.1541.sroa_cast.sroa_cast, align 8, !dbg !1059
  call void @llvm.dbg.value(metadata { %Writer.0, %error.0 }* %sret.actual.77, metadata !1007, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata { %Writer.0, %error.0 }* %sret.actual.77, metadata !1007, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.345.sroa.4.sroa.0.0.copyload162, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %tmpv.345.sroa.4.sroa.3.0.copyload164, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %icmp.92 = icmp eq i64 %tmpv.345.sroa.4.sroa.0.0.copyload162, 0, !dbg !1060
  br i1 %icmp.92, label %else.82, label %finally.0

else.82:                                          ; preds = %cont.34
  %deref.ld.5195 = load void ({ %Writer.0, %error.0 }*, i8*, i64, i64)*, void ({ %Writer.0, %error.0 }*, i8*, i64, i64)** %6, align 8, !dbg !1061
  invoke void %deref.ld.5195({ %Writer.0, %error.0 }* nonnull sret %sret.actual.78, i8* nest nonnull %cast.1276, i64 ptrtoint ([5 x i8]* @const.221 to i64), i64 4)
          to label %cont.35 unwind label %pad.0.loopexit.split-lp, !dbg !1061

cont.35:                                          ; preds = %else.82
  %tmpv.350.sroa.4.sroa.0.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.78, i64 0, i32 1, !dbg !1061
  %tmpv.350.sroa.4.sroa.0.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.350.sroa.4.sroa.0.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_idx to i64*, !dbg !1061
  %tmpv.350.sroa.4.sroa.0.0.copyload157 = load i64, i64* %tmpv.350.sroa.4.sroa.0.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_cast, align 8, !dbg !1061
  %tmpv.350.sroa.4.sroa.3.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_idx158 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.78, i64 0, i32 1, i32 1, !dbg !1061
  %tmpv.350.sroa.4.sroa.3.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_cast = bitcast i8** %tmpv.350.sroa.4.sroa.3.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_idx158 to i64*, !dbg !1061
  %tmpv.350.sroa.4.sroa.3.0.copyload159 = load i64, i64* %tmpv.350.sroa.4.sroa.3.0.tmpv.350.sroa.4.0.cast.1565.sroa_cast.sroa_cast, align 8, !dbg !1061
  call void @llvm.dbg.value(metadata { %Writer.0, %error.0 }* %sret.actual.78, metadata !1007, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata { %Writer.0, %error.0 }* %sret.actual.78, metadata !1007, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !1008
  call void @llvm.dbg.value(metadata i64 %tmpv.350.sroa.4.sroa.0.0.copyload157, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %tmpv.350.sroa.4.sroa.3.0.copyload159, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  %icmp.93 = icmp eq i64 %tmpv.350.sroa.4.sroa.0.0.copyload157, 0, !dbg !1062
  br i1 %icmp.93, label %else.83, label %finally.0

else.83:                                          ; preds = %cont.35
  %aarw.ld.0 = load %Writer.1*, %Writer.1** %tmpv.264, align 8, !dbg !1063
  call void @llvm.dbg.value(metadata %Writer.1* %aarw.ld.0, metadata !875, metadata !DIExpression()), !dbg !969
  %call.93 = invoke { i64, i64 } @archive_zip.Writer.Close(i8* nest undef, %Writer.1* %aarw.ld.0)
          to label %cont.36 unwind label %pad.0.loopexit.split-lp, !dbg !1064

cont.36:                                          ; preds = %else.83
  %call.93.fca.0.extract = extractvalue { i64, i64 } %call.93, 0, !dbg !1064
  %call.93.fca.1.extract = extractvalue { i64, i64 } %call.93, 1, !dbg !1064
  call void @llvm.dbg.value(metadata i64 %call.93.fca.0.extract, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !971
  call void @llvm.dbg.value(metadata i64 %call.93.fca.1.extract, metadata !970, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !971
  br label %finally.0

catchpad.0:                                       ; preds = %pad.0
  %ex2.0 = landingpad { i8*, i32 }
          cleanup
  %ex2.0.fca.0.extract = extractvalue { i8*, i32 } %ex2.0, 0
  %ex2.0.fca.1.extract = extractvalue { i8*, i32 } %ex2.0, 1
  br label %finally.0

pad.1:                                            ; preds = %finish.0
  %ex.1 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.263), !dbg !979
  br label %finish.0

finish.0:                                         ; preds = %pad.1, %finally.0
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.263)
          to label %cont.38 unwind label %pad.1, !dbg !979

cont.38:                                          ; preds = %finish.0
  %tmpv.263.ld.0 = load i8, i8* %tmpv.263, align 1, !dbg !979
  %12 = and i8 %tmpv.263.ld.0, 1, !dbg !979
  %trunc.84 = icmp eq i8 %12, 0, !dbg !979
  br i1 %trunc.84, label %else.84, label %then.84

then.84:                                          ; preds = %cont.38
  %ld.149.fca.0.insert = insertvalue { i64, i64 } undef, i64 %err.sroa.0.1, 0, !dbg !979
  %ld.149.fca.1.insert = insertvalue { i64, i64 } %ld.149.fca.0.insert, i64 %err.sroa.24.1, 1, !dbg !979
  ret { i64, i64 } %ld.149.fca.1.insert, !dbg !979

else.84:                                          ; preds = %cont.38
  %icmp.94 = icmp eq i8 %finvar.0.0, 1
  br i1 %icmp.94, label %finret.0, label %finres.0

finres.0:                                         ; preds = %else.84
  %excv.0.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.0.sroa.0.0, 0
  %excv.0.fca.1.insert = insertvalue { i8*, i32 } %excv.0.fca.0.insert, i32 %ehtmp.0.sroa.2.0, 1
  resume { i8*, i32 } %excv.0.fca.1.insert

finret.0:                                         ; preds = %else.84
  %ld.102.fca.0.insert = insertvalue { i64, i64 } undef, i64 %err.sroa.0.1, 0, !dbg !1065
  %ld.102.fca.1.insert = insertvalue { i64, i64 } %ld.102.fca.0.insert, i64 %err.sroa.24.1, 1, !dbg !1065
  ret { i64, i64 } %ld.102.fca.1.insert, !dbg !1065
}

declare void @os.Create({ %File.1*, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

define internal void @command_line_arguments.BuildAAR..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !1066 {
entry:
  %cerr = alloca %error.0, align 8
  %0 = bitcast %error.0* %cerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  %field.255 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1069
  %1 = bitcast i8* %field.255 to %File.1***, !dbg !1069
  %.field.ld.5 = load %File.1**, %File.1*** %1, align 8, !dbg !1069
  %.ld.35 = load %File.1*, %File.1** %.field.ld.5, align 8, !dbg !1069
  %call.94 = call { i64, i64 } @os.File.Close(i8* nest undef, %File.1* %.ld.35), !dbg !1071
  %call.94.fca.0.extract = extractvalue { i64, i64 } %call.94, 0, !dbg !1071
  %call.94.fca.1.extract = extractvalue { i64, i64 } %call.94, 1, !dbg !1071
  %sret.actual.80.sroa.0.0.cast.1595.sroa_cast = bitcast %error.0* %cerr to i64*
  store i64 %call.94.fca.0.extract, i64* %sret.actual.80.sroa.0.0.cast.1595.sroa_cast, align 8
  %sret.actual.80.sroa.2.0.cast.1595.sroa_idx1 = getelementptr inbounds %error.0, %error.0* %cerr, i64 0, i32 1
  %sret.actual.80.sroa.2.0.cast.1595.sroa_cast = bitcast i8** %sret.actual.80.sroa.2.0.cast.1595.sroa_idx1 to i64*
  store i64 %call.94.fca.1.extract, i64* %sret.actual.80.sroa.2.0.cast.1595.sroa_cast, align 8
  %field.257 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1072
  %2 = bitcast i8* %field.257 to %error.0**, !dbg !1072
  %.field.ld.7 = load %error.0*, %error.0** %2, align 8, !dbg !1072
  %field.258 = getelementptr inbounds %error.0, %error.0* %.field.ld.7, i64 0, i32 0, !dbg !1073
  %.field.ld.8 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %field.258, align 8, !dbg !1073
  %icmp.97 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %.field.ld.8, null, !dbg !1073
  br i1 %icmp.97, label %then.85, label %fallthrough.85

then.85:                                          ; preds = %entry
  %runtime.writeBarrier.ld.3 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1074
  %icmp.96 = icmp eq i32 %runtime.writeBarrier.ld.3, 0, !dbg !1074
  br i1 %icmp.96, label %then.86, label %else.86

fallthrough.85:                                   ; preds = %else.87, %else.86, %entry
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  ret void

then.86:                                          ; preds = %then.85
  %icmp.95 = icmp eq %error.0* %.field.ld.7, null, !dbg !1074
  br i1 %icmp.95, label %then.87, label %else.87

else.86:                                          ; preds = %then.85
  %cast.1606 = bitcast %error.0* %.field.ld.7 to i8*, !dbg !1074
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i64 0, i32 0), i8* %cast.1606, i8* nonnull %0), !dbg !1074
  br label %fallthrough.85

then.87:                                          ; preds = %then.86
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1074
  unreachable

else.87:                                          ; preds = %then.86
  %cast.1598 = bitcast %error.0* %.field.ld.7 to i8*, !dbg !1074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1598, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !1074
  br label %fallthrough.85
}

define internal void @command_line_arguments.command_line_arguments..thunk0(i8* nest nocapture readnone %nest.70, { %__go_descriptor.9* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !1075 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.9* }* %__go_thunk_parameter, metadata !1087, metadata !DIExpression()), !dbg !1088
  %field.1836 = getelementptr inbounds { %__go_descriptor.9* }, { %__go_descriptor.9* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1088
  %.field.ld.226 = load %__go_descriptor.9*, %__go_descriptor.9** %field.1836, align 8, !dbg !1088
  %0 = getelementptr inbounds %__go_descriptor.9, %__go_descriptor.9* %.field.ld.226, i64 0, i32 0, !dbg !1088
  %deref.ld.201 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !1088
  %cast.7607 = bitcast %__go_descriptor.9* %.field.ld.226 to i8*, !dbg !1088
  call void %deref.ld.201(i8* nest %cast.7607), !dbg !1088
  ret void
}

declare void @runtime.deferproc(i8*, i8*, %__go_descriptor.27*, i8*) local_unnamed_addr #0

declare void @os.File.Write({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*) #0

declare %Writer.1* @archive_zip.NewWriter(i8*, i64, i64) local_unnamed_addr #0

define internal void @command_line_arguments.BuildAAR..func2({ %Writer.0, %error.0 }* nocapture sret %sret.formal.6, i8* nest nocapture readonly %"$closure", i64 %name.chunk0, i64 %name.chunk1) #0 !dbg !1089 {
entry:
  %tmp.79 = alloca { %Writer.0, %error.0 }, align 8
  %tmp.78 = alloca %IPST.2, align 8
  %tmpv.359 = alloca { i8*, i64 }, align 8
  %tmpv.360 = alloca [1 x %IPST.16], align 8
  %tmpv.363 = alloca { %Writer.0, %error.0 }, align 8
  %sret.actual.81 = alloca { %Writer.0, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %name.chunk0, metadata !1090, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1091
  call void @llvm.dbg.value(metadata i64 %name.chunk1, metadata !1090, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1091
  %field.267 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1092
  %0 = bitcast i8* %field.267 to %Flags.0***, !dbg !1092
  %.field.ld.12 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !1092
  %.ld.39 = load %Flags.0*, %Flags.0** %.field.ld.12, align 8, !dbg !1092
  %icmp.99 = icmp eq %Flags.0* %.ld.39, null, !dbg !1093
  br i1 %icmp.99, label %then.88, label %else.88

then.88:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1093
  unreachable

else.88:                                          ; preds = %entry
  %field.269 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.39, i64 0, i32 5, !dbg !1093
  %.field.ld.14 = load i8, i8* %field.269, align 1, !dbg !1093
  %1 = and i8 %.field.ld.14, 1, !dbg !1094
  %trunc.90 = icmp eq i8 %1, 0, !dbg !1094
  br i1 %trunc.90, label %fallthrough.89, label %then.89

then.89:                                          ; preds = %else.88
  %call.95 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1095
  %name.addr.sroa.0.0.cast.1611.sroa_cast = bitcast { i8*, i64 }* %tmpv.359 to i64*
  store i64 %name.chunk0, i64* %name.addr.sroa.0.0.cast.1611.sroa_cast, align 8
  %name.addr.sroa.3.0.cast.1611.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.359, i64 0, i32 1
  store i64 %name.chunk1, i64* %name.addr.sroa.3.0.cast.1611.sroa_idx4, align 8
  %cast.1614 = bitcast { i8*, i64 }* %tmpv.359 to i8*, !dbg !1095
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.95, i8* nonnull %cast.1614), !dbg !1095
  %tmp.77.sroa.0.0.cast.1616.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.360, i64 0, i64 0, i32 0, !dbg !1095
  store %_type.0* @string..d, %_type.0** %tmp.77.sroa.0.0.cast.1616.sroa_idx, align 8, !dbg !1095
  %tmp.77.sroa.2.0.cast.1616.sroa_idx5 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.360, i64 0, i64 0, i32 1, !dbg !1095
  store i8* %call.95, i8** %tmp.77.sroa.2.0.cast.1616.sroa_idx5, align 8, !dbg !1095
  %.field.ld.9 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !1096
  %.ld.37 = load %Flags.0*, %Flags.0** %.field.ld.9, align 8, !dbg !1096
  %icmp.98 = icmp eq %Flags.0* %.ld.37, null, !dbg !1097
  br i1 %icmp.98, label %then.90, label %else.90

fallthrough.89:                                   ; preds = %else.88, %else.90
  %cast.1622 = bitcast { %Writer.0, %error.0 }* %tmpv.363 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1622, i8 0, i64 32, i1 false)
  %field.270 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1098
  %2 = bitcast i8* %field.270 to %Writer.1***, !dbg !1098
  %.field.ld.15 = load %Writer.1**, %Writer.1*** %2, align 8, !dbg !1098
  %.ld.41 = load %Writer.1*, %Writer.1** %.field.ld.15, align 8, !dbg !1098
  call void @archive_zip.Writer.Create({ %Writer.0, %error.0 }* nonnull sret %sret.actual.81, i8* nest undef, %Writer.1* %.ld.41, i64 %name.chunk0, i64 %name.chunk1), !dbg !1099
  %cast.1626 = bitcast { %Writer.0, %error.0 }* %sret.actual.81 to i8*, !dbg !1099
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1622, i8* nonnull align 8 %cast.1626, i64 32, i1 false), !dbg !1099
  %field.272 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %tmpv.363, i64 0, i32 1, !dbg !1099
  %cast.1632 = bitcast %error.0* %field.272 to i8*
  %cast.1639 = bitcast { %Writer.0, %error.0 }* %tmp.79 to i8*, !dbg !1100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1639, i8* nonnull align 8 %cast.1626, i64 16, i1 false), !dbg !1100
  %field.274 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %tmp.79, i64 0, i32 1, !dbg !1100
  %cast.1641 = bitcast %error.0* %field.274 to i8*, !dbg !1100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1641, i8* nonnull align 8 %cast.1632, i64 16, i1 false), !dbg !1100
  %cast.1643 = bitcast { %Writer.0, %error.0 }* %sret.formal.6 to i8*, !dbg !1100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1643, i8* nonnull align 8 %cast.1639, i64 32, i1 false), !dbg !1100
  ret void, !dbg !1100

then.90:                                          ; preds = %then.89
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1097
  unreachable

else.90:                                          ; preds = %then.89
  %field.263 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.37, i64 0, i32 0, !dbg !1097
  %.field.ld.11 = load %Logger.0*, %Logger.0** %field.263, align 8, !dbg !1097
  %field.264 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.78, i64 0, i32 0, !dbg !1095
  %cast.1620 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.360, i64 0, i64 0, !dbg !1095
  store %IPST.16* %cast.1620, %IPST.16** %field.264, align 8, !dbg !1095
  %field.265 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.78, i64 0, i32 1, !dbg !1095
  store i64 1, i64* %field.265, align 8, !dbg !1095
  %field.266 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.78, i64 0, i32 2, !dbg !1095
  store i64 1, i64* %field.266, align 8, !dbg !1095
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.11, i64 ptrtoint ([9 x i8]* @const.226 to i64), i64 8, %IPST.2* byval nonnull %tmp.78), !dbg !1095
  br label %fallthrough.89
}

declare { i64, i64 } @runtime.concatstring3(i8*, i8*, [3 x { i8*, i64 }]*) local_unnamed_addr #0

declare void @fmt.Fprintf({ i64, %error.0 }*, i8*, i64, i64, i64, i64, %IPST.2*) local_unnamed_addr #0

declare void @fmt.Fprintln({ i64, %error.0 }*, i8*, i64, i64, %IPST.2*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.BuildJar(i8* nest nocapture readnone %nest.20, %Flags.0* %param, i64 %w.chunk0, i64 %w.chunk1, i64 %srcDir.chunk0, i64 %srcDir.chunk1, { i8*, i64 }* byval nocapture readonly %tmpdir) #0 !dbg !1101 {
entry:
  %tmp.90.i = alloca %IPST.3, align 8
  %apiPath.i = alloca { i8*, i64 }, align 8
  %sret.actual.102.i = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.480.i = alloca [2 x { i8*, i64 }], align 8
  %tmp.80 = alloca %IPST.3, align 8
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %tmpdir, metadata !1104, metadata !DIExpression()), !dbg !1105
  %srcDir.addr = alloca { i8*, i64 }, align 8
  %tmpv.369 = alloca %Flags.0*, align 8
  %srcFiles = alloca %IPST.3, align 8
  %dst = alloca { i8*, i64 }, align 8
  %args = alloca %IPST.3, align 8
  %jarwcreate = alloca %__go_descriptor.26*, align 8
  %tmpv.371 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.375 = alloca { i8*, %IPST.3*, { i8*, i64 }* }, align 8
  %tmpv.379 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.389 = alloca [8 x { i8*, i64 }], align 8
  %tmpv.390 = alloca %IPST.3, align 8
  %tmpv.392 = alloca %IPST.3, align 8
  %sret.actual.86 = alloca %IPST.4, align 8
  %tmpv.399 = alloca %IPST.3, align 8
  %tmpv.413 = alloca { i8*, %Flags.0**, %Writer.1** }, align 8
  %sret.actual.88 = alloca { %Writer.0, %error.0 }, align 8
  %sret.actual.89 = alloca { i64, %error.0 }, align 8
  %tmpv.422 = alloca { i8*, %__go_descriptor.26**, { i8*, i64 }* }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %param, metadata !1106, metadata !DIExpression()), !dbg !1107
  call void @llvm.dbg.value(metadata i64 %w.chunk0, metadata !1108, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1109
  call void @llvm.dbg.value(metadata i64 %w.chunk1, metadata !1108, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1109
  %field0.75 = bitcast { i8*, i64 }* %srcDir.addr to i64*
  store i64 %srcDir.chunk0, i64* %field0.75, align 8
  %0 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %srcDir.addr, i64 0, i32 1
  store i64 %srcDir.chunk1, i64* %0, align 8
  %call.96 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Flags, i64 0, i32 0)), !dbg !1107
  %cast.1671 = bitcast i8* %call.96 to %Flags.0**, !dbg !1107
  store %Flags.0* %param, %Flags.0** %tmpv.369, align 8
  %cast.1674 = bitcast %Flags.0** %tmpv.369 to i8*, !dbg !1107
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Flags, i64 0, i32 0), i8* %call.96, i8* nonnull %cast.1674), !dbg !1107
  call void @llvm.dbg.value(metadata %Flags.0** %cast.1671, metadata !1110, metadata !DIExpression()), !dbg !1107
  %1 = bitcast %IPST.3* %srcFiles to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  %2 = bitcast { i8*, i64 }* %dst to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %3 = bitcast %IPST.3* %args to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %4 = bitcast %__go_descriptor.26** %jarwcreate to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 24, i1 false)
  %.ld.42 = load %Flags.0*, %Flags.0** %cast.1671, align 8, !dbg !1112
  %call.99 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %.ld.42), !dbg !1114
  %icmp.101 = icmp eq i8 %call.99, 0, !dbg !1115
  br i1 %icmp.101, label %then.91, label %else.91

then.91:                                          ; preds = %entry
  %call.97 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...61x.7string, i64 0, i32 0)), !dbg !1116
  %cast.1681 = bitcast [1 x { i8*, i64 }]* %tmpv.371 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1681, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.253 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...61x.7string, i64 0, i32 0), i8* %call.97, i8* nonnull %cast.1681), !dbg !1116
  %5 = bitcast %IPST.3* %srcFiles to i8**, !dbg !1116
  store i8* %call.97, i8** %5, align 8, !dbg !1116
  %field.276 = getelementptr inbounds %IPST.3, %IPST.3* %srcFiles, i64 0, i32 1, !dbg !1116
  store i64 1, i64* %field.276, align 8, !dbg !1116
  %field.277 = getelementptr inbounds %IPST.3, %IPST.3* %srcFiles, i64 0, i32 2, !dbg !1116
  store i64 1, i64* %field.277, align 8, !dbg !1116
  br label %fallthrough.91

fallthrough.91:                                   ; preds = %else.91, %then.91
  %cast.1702 = bitcast [2 x { i8*, i64 }]* %tmpv.379 to i8*, !dbg !1117
  %cast.1703 = bitcast { i8*, i64 }* %tmpdir to i8*, !dbg !1117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1702, i8* nonnull align 8 %cast.1703, i64 16, i1 false), !dbg !1117
  %index.105 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.379, i64 0, i64 1, !dbg !1117
  %cast.1704 = bitcast { i8*, i64 }* %index.105 to i8*, !dbg !1117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1704, i8* align 8 bitcast ({ i8*, i64 }* @const.256 to i8*), i64 16, i1 false), !dbg !1117
  %field.282 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.80, i64 0, i32 0, !dbg !1117
  %cast.1706 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.379, i64 0, i64 0, !dbg !1117
  store { i8*, i64 }* %cast.1706, { i8*, i64 }** %field.282, align 8, !dbg !1117
  %field.283 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.80, i64 0, i32 1, !dbg !1117
  store i64 2, i64* %field.283, align 8, !dbg !1117
  %field.284 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.80, i64 0, i32 2, !dbg !1117
  store i64 2, i64* %field.284, align 8, !dbg !1117
  %call.100 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.80), !dbg !1117
  %call.100.fca.0.extract = extractvalue { i64, i64 } %call.100, 0, !dbg !1117
  %call.100.fca.1.extract = extractvalue { i64, i64 } %call.100, 1, !dbg !1117
  %sret.actual.83.sroa.0.0.cast.1708.sroa_cast = bitcast { i8*, i64 }* %dst to i64*
  store i64 %call.100.fca.0.extract, i64* %sret.actual.83.sroa.0.0.cast.1708.sroa_cast, align 8
  %sret.actual.83.sroa.2.0.cast.1708.sroa_idx39 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %dst, i64 0, i32 1
  store i64 %call.100.fca.1.extract, i64* %sret.actual.83.sroa.2.0.cast.1708.sroa_idx39, align 8
  %.ld.43 = load %Flags.0*, %Flags.0** %cast.1671, align 8, !dbg !1118
  %call.101 = call { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* %.ld.43, i64 %call.100.fca.0.extract, i64 %call.100.fca.1.extract), !dbg !1120
  %call.101.fca.0.extract = extractvalue { i64, i64 } %call.101, 0, !dbg !1120
  call void @llvm.dbg.value(metadata i64 %call.101.fca.0.extract, metadata !1121, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1122
  %icmp.102 = icmp eq i64 %call.101.fca.0.extract, 0, !dbg !1123
  br i1 %icmp.102, label %else.93, label %then.93

else.91:                                          ; preds = %entry
  %field.278 = getelementptr inbounds { i8*, %IPST.3*, { i8*, i64 }* }, { i8*, %IPST.3*, { i8*, i64 }* }* %tmpv.375, i64 0, i32 0, !dbg !1124
  store i8* bitcast ({ i64, i64 } (i8*, i64, i64, i64, i64, i64, i64)* @command_line_arguments.BuildJar..func1 to i8*), i8** %field.278, align 8, !dbg !1124
  %field.279 = getelementptr inbounds { i8*, %IPST.3*, { i8*, i64 }* }, { i8*, %IPST.3*, { i8*, i64 }* }* %tmpv.375, i64 0, i32 1, !dbg !1124
  store %IPST.3* %srcFiles, %IPST.3** %field.279, align 8, !dbg !1124
  %field.280 = getelementptr inbounds { i8*, %IPST.3*, { i8*, i64 }* }, { i8*, %IPST.3*, { i8*, i64 }* }* %tmpv.375, i64 0, i32 2, !dbg !1124
  store { i8*, i64 }* %srcDir.addr, { i8*, i64 }** %field.280, align 8, !dbg !1124
  %cast.1692 = bitcast { i8*, %IPST.3*, { i8*, i64 }* }* %tmpv.375 to %__go_descriptor.30*, !dbg !1124
  %call.98 = call { i64, i64 } @path_filepath.Walk(i8* nest undef, i64 %srcDir.chunk0, i64 %srcDir.chunk1, %__go_descriptor.30* nonnull %cast.1692), !dbg !1126
  %call.98.fca.0.extract = extractvalue { i64, i64 } %call.98, 0, !dbg !1126
  call void @llvm.dbg.value(metadata i64 %call.98.fca.0.extract, metadata !1127, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1128
  %icmp.100 = icmp eq i64 %call.98.fca.0.extract, 0, !dbg !1129
  br i1 %icmp.100, label %fallthrough.91, label %then.92

then.92:                                          ; preds = %else.91
  call void @llvm.dbg.value(metadata i64 %call.98.fca.0.extract, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1132
  ret { i64, i64 } %call.98, !dbg !1132

then.93:                                          ; preds = %fallthrough.91
  call void @llvm.dbg.value(metadata i64 %call.101.fca.0.extract, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1133
  ret { i64, i64 } %call.101, !dbg !1133

else.93:                                          ; preds = %fallthrough.91
  %.ld.44 = load %Flags.0*, %Flags.0** %cast.1671, align 8, !dbg !1134
  %6 = bitcast %IPST.3* %tmp.90.i to i8*, !dbg !1135
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6), !dbg !1135
  %7 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.102.i to i8*, !dbg !1135
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7), !dbg !1135
  %8 = bitcast [2 x { i8*, i64 }]* %tmpv.480.i to i8*, !dbg !1135
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8), !dbg !1135
  call void @llvm.dbg.value(metadata %Flags.0* %.ld.44, metadata !1138, metadata !DIExpression()), !dbg !1135
  %apiPath.0.sroa_cast.i = bitcast { i8*, i64 }* %apiPath.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %apiPath.0.sroa_cast.i)
  call void @command_line_arguments.AndroidPlatformPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.102.i, i8* nest undef, %Flags.0* %.ld.44), !dbg !1139
  %tmpv.474.sroa.3.0.cast.2051.sroa_idx15.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.102.i, i64 0, i32 1, i32 0, !dbg !1139
  %tmpv.474.sroa.3.0.copyload16.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.474.sroa.3.0.cast.2051.sroa_idx15.i, align 8, !dbg !1139
  %tmpv.474.sroa.4.0.cast.2051.sroa_idx17.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.102.i, i64 0, i32 1, i32 1, !dbg !1139
  %9 = bitcast i8** %tmpv.474.sroa.4.0.cast.2051.sroa_idx17.i to i64*, !dbg !1139
  %tmpv.474.sroa.4.0.copyload181.i = load i64, i64* %9, align 8, !dbg !1139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %apiPath.0.sroa_cast.i, i8* nonnull align 8 %7, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.474.sroa.3.0.copyload16.i, metadata !1141, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1142
  call void @llvm.dbg.value(metadata i8** %tmpv.474.sroa.4.0.cast.2051.sroa_idx17.i, metadata !1141, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1142
  %icmp.146.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.474.sroa.3.0.copyload16.i, null, !dbg !1143
  br i1 %icmp.146.i, label %command_line_arguments.bootClasspath.exit.thread, label %command_line_arguments.bootClasspath.exit

command_line_arguments.bootClasspath.exit.thread: ; preds = %else.93
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %apiPath.0.sroa_cast.i, i64 16, i1 false), !dbg !1144
  %index.118.i = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.480.i, i64 0, i64 1, !dbg !1144
  %cast.2079.i = bitcast { i8*, i64 }* %index.118.i to i8*, !dbg !1144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2079.i, i8* align 8 bitcast ({ i8*, i64 }* @const.29 to i8*), i64 16, i1 false), !dbg !1144
  %field.383.i = getelementptr inbounds %IPST.3, %IPST.3* %tmp.90.i, i64 0, i32 0, !dbg !1144
  %cast.2081.i = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.480.i, i64 0, i64 0, !dbg !1144
  store { i8*, i64 }* %cast.2081.i, { i8*, i64 }** %field.383.i, align 8, !dbg !1144
  %field.384.i = getelementptr inbounds %IPST.3, %IPST.3* %tmp.90.i, i64 0, i32 1, !dbg !1144
  store i64 2, i64* %field.384.i, align 8, !dbg !1144
  %field.385.i = getelementptr inbounds %IPST.3, %IPST.3* %tmp.90.i, i64 0, i32 2, !dbg !1144
  store i64 2, i64* %field.385.i, align 8, !dbg !1144
  %call.119.i = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.90.i), !dbg !1144
  %call.119.fca.0.extract.i = extractvalue { i64, i64 } %call.119.i, 0, !dbg !1144
  %call.119.fca.1.extract.i = extractvalue { i64, i64 } %call.119.i, 1, !dbg !1144
  call void @llvm.dbg.value(metadata i64 %call.119.fca.0.extract.i, metadata !1145, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1146
  call void @llvm.dbg.value(metadata i64 %call.119.fca.1.extract.i, metadata !1145, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1146
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !1147, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1148
  call void @llvm.dbg.value(metadata i8* null, metadata !1147, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %apiPath.0.sroa_cast.i), !dbg !1149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6), !dbg !1149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7), !dbg !1149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8), !dbg !1149
  call void @llvm.dbg.value(metadata i64 %10, metadata !1150, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1151
  call void @llvm.dbg.value(metadata i64 %tmpv.474.sroa.4.0.copyload181.i, metadata !1150, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1151
  %cast.1746 = bitcast [8 x { i8*, i64 }]* %tmpv.389 to i8*, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1746, i8* align 8 bitcast ({ i8*, i64 }* @const.258 to i8*), i64 16, i1 false), !dbg !1152
  %index.107 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 1, !dbg !1152
  %cast.1748 = bitcast { i8*, i64 }* %index.107 to i8*, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1748, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1152
  %index.108 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 2, !dbg !1152
  %cast.1750 = bitcast { i8*, i64 }* %index.108 to i8*, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1750, i8* align 8 bitcast ({ i8*, i64 }* @const.260 to i8*), i64 16, i1 false), !dbg !1152
  %index.109 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 3, !dbg !1152
  %cast.1752 = bitcast { i8*, i64 }* %index.109 to i8*, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1752, i8* align 8 bitcast ({ i8*, i64 }* @const.262 to i8*), i64 16, i1 false), !dbg !1152
  %index.110 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 4, !dbg !1152
  %cast.1754 = bitcast { i8*, i64 }* %index.110 to i8*, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1754, i8* align 8 bitcast ({ i8*, i64 }* @const.264 to i8*), i64 16, i1 false), !dbg !1152
  %index.111 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 5, !dbg !1152
  %cast.1756 = bitcast { i8*, i64 }* %index.111 to i8*, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1756, i8* align 8 bitcast ({ i8*, i64 }* @const.262 to i8*), i64 16, i1 false), !dbg !1152
  %index.112 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 6, !dbg !1152
  %cast.1758 = bitcast { i8*, i64 }* %index.112 to i8*, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1758, i8* align 8 bitcast ({ i8*, i64 }* @const.266 to i8*), i64 16, i1 false), !dbg !1152
  %bClspath.sroa.0.0.cast.1760.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 7, !dbg !1152
  %bClspath.sroa.0.0.cast.1760.sroa_cast = bitcast { i8*, i64 }* %bClspath.sroa.0.0.cast.1760.sroa_idx to i64*, !dbg !1152
  store i64 %call.119.fca.0.extract.i, i64* %bClspath.sroa.0.0.cast.1760.sroa_cast, align 8, !dbg !1152
  %bClspath.sroa.11.0.cast.1760.sroa_idx198 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 7, i32 1, !dbg !1152
  store i64 %call.119.fca.1.extract.i, i64* %bClspath.sroa.11.0.cast.1760.sroa_idx198, align 8, !dbg !1152
  %field.289 = getelementptr inbounds %IPST.3, %IPST.3* %args, i64 0, i32 0, !dbg !1152
  %cast.1762 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.389, i64 0, i64 0, !dbg !1152
  store { i8*, i64 }* %cast.1762, { i8*, i64 }** %field.289, align 8, !dbg !1152
  %field.290 = getelementptr inbounds %IPST.3, %IPST.3* %args, i64 0, i32 1, !dbg !1152
  store i64 8, i64* %field.290, align 8, !dbg !1152
  %field.291 = getelementptr inbounds %IPST.3, %IPST.3* %args, i64 0, i32 2, !dbg !1152
  store i64 8, i64* %field.291, align 8, !dbg !1152
  %cast.1763 = bitcast %IPST.3* %tmpv.390 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1763, i8* nonnull align 8 %3, i64 24, i1 false)
  %field.292 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.390, i64 0, i32 1, !dbg !1153
  %tmpv.390.field.ld.0 = load i64, i64* %field.292, align 8, !dbg !1153
  %cast.1765 = bitcast %IPST.3* %tmpv.392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1765, i8* nonnull align 8 %1, i64 24, i1 false)
  %field.293 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.392, i64 0, i32 1, !dbg !1153
  %tmpv.392.field.ld.0 = load i64, i64* %field.293, align 8, !dbg !1153
  %add.4 = add i64 %tmpv.392.field.ld.0, %tmpv.390.field.ld.0, !dbg !1153
  %field.294 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.390, i64 0, i32 2, !dbg !1153
  %tmpv.390.field.ld.1 = load i64, i64* %field.294, align 8, !dbg !1153
  %icmp.104 = icmp ugt i64 %add.4, %tmpv.390.field.ld.1, !dbg !1153
  br i1 %icmp.104, label %then.95, label %else.95

command_line_arguments.bootClasspath.exit:        ; preds = %else.93
  call void @llvm.dbg.value(metadata i64 0, metadata !1145, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1146
  call void @llvm.dbg.value(metadata i64 0, metadata !1145, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1146
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.474.sroa.3.0.copyload16.i, metadata !1147, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1148
  call void @llvm.dbg.value(metadata i8** %tmpv.474.sroa.4.0.cast.2051.sroa_idx17.i, metadata !1147, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1148
  %10 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.474.sroa.3.0.copyload16.i to i64, !dbg !1154
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %apiPath.0.sroa_cast.i), !dbg !1154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6), !dbg !1154
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7), !dbg !1154
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8), !dbg !1154
  call void @llvm.dbg.value(metadata i64 %10, metadata !1150, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1151
  call void @llvm.dbg.value(metadata i64 %tmpv.474.sroa.4.0.copyload181.i, metadata !1150, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1151
  call void @llvm.dbg.value(metadata i64 %10, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1131
  call void @llvm.dbg.value(metadata i64 %tmpv.474.sroa.4.0.copyload181.i, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1131
  %ld.160.fca.0.insert = insertvalue { i64, i64 } undef, i64 %10, 0, !dbg !1155
  %ld.160.fca.1.insert = insertvalue { i64, i64 } %ld.160.fca.0.insert, i64 %tmpv.474.sroa.4.0.copyload181.i, 1, !dbg !1155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1155
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1155
  ret { i64, i64 } %ld.160.fca.1.insert, !dbg !1155

then.95:                                          ; preds = %command_line_arguments.bootClasspath.exit.thread
  %cast.1767 = bitcast %IPST.3* %tmpv.390 to %IPST.4*, !dbg !1153
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.86, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.1767, i64 %add.4), !dbg !1153
  %tmpv.398.sroa.0.0.cast.1772.sroa_idx = bitcast %IPST.4* %sret.actual.86 to { i8*, i64 }**
  %tmpv.398.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.398.sroa.0.0.cast.1772.sroa_idx, align 8
  %11 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.86, i64 0, i32 1
  %tmpv.398.sroa.3.0.copyload = load i64, i64* %11, align 8
  %12 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.86, i64 0, i32 2
  %tmpv.398.sroa.4.0.copyload = load i64, i64* %12, align 8
  %.pre = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.390, i64 0, i32 0, !dbg !1153
  br label %fallthrough.95

fallthrough.95:                                   ; preds = %else.96, %then.95
  %tmpv.398.sroa.0.0.cast.1775.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.297, %else.96 ], [ %.pre, %then.95 ], !dbg !1153
  %tmpv.398.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.390.field.ld.3, %else.96 ], [ %tmpv.398.sroa.0.0.copyload, %then.95 ]
  %tmpv.398.sroa.3.0 = phi i64 [ %add.4, %else.96 ], [ %tmpv.398.sroa.3.0.copyload, %then.95 ]
  %tmpv.398.sroa.4.0 = phi i64 [ %tmpv.390.field.ld.1, %else.96 ], [ %tmpv.398.sroa.4.0.copyload, %then.95 ]
  store { i8*, i64 }* %tmpv.398.sroa.0.0, { i8*, i64 }** %tmpv.398.sroa.0.0.cast.1775.sroa_idx.pre-phi, align 8, !dbg !1153
  store i64 %tmpv.398.sroa.3.0, i64* %field.292, align 8, !dbg !1153
  store i64 %tmpv.398.sroa.4.0, i64* %field.294, align 8, !dbg !1153
  %icmp.111 = icmp slt i64 %tmpv.398.sroa.4.0, %tmpv.390.field.ld.0, !dbg !1153
  %13 = icmp slt i64 %tmpv.390.field.ld.0, 0, !dbg !1153
  %ior.54 = or i1 %13, %icmp.111, !dbg !1153
  br i1 %ior.54, label %then.98, label %else.98

else.95:                                          ; preds = %command_line_arguments.bootClasspath.exit.thread
  %icmp.106 = icmp sgt i64 %add.4, %tmpv.390.field.ld.1, !dbg !1153
  %add.4.lobit182 = or i64 %add.4, %tmpv.390.field.ld.1, !dbg !1153
  %14 = icmp slt i64 %add.4.lobit182, 0, !dbg !1153
  %15 = or i1 %icmp.106, %14, !dbg !1153
  br i1 %15, label %then.96, label %else.96

then.96:                                          ; preds = %else.95
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1153
  unreachable

else.96:                                          ; preds = %else.95
  %field.297 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.390, i64 0, i32 0, !dbg !1153
  %tmpv.390.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.297, align 8, !dbg !1153
  br label %fallthrough.95

then.98:                                          ; preds = %fallthrough.95
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1153
  unreachable

else.98:                                          ; preds = %fallthrough.95
  %icmp.113 = icmp eq i64 %tmpv.398.sroa.4.0, %tmpv.390.field.ld.0, !dbg !1153
  %.tmpv.390.field.ld.0 = select i1 %icmp.113, i64 0, i64 %tmpv.390.field.ld.0
  %ptroff.6 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.398.sroa.0.0, i64 %.tmpv.390.field.ld.0, !dbg !1153
  %sub.7 = sub i64 %tmpv.398.sroa.3.0, %tmpv.390.field.ld.0, !dbg !1153
  %sub.8 = sub i64 %tmpv.398.sroa.4.0, %tmpv.390.field.ld.0, !dbg !1153
  %tmpv.401.sroa.0.0.cast.1779.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.399, i64 0, i32 0
  store { i8*, i64 }* %ptroff.6, { i8*, i64 }** %tmpv.401.sroa.0.0.cast.1779.sroa_idx, align 8
  %tmpv.401.sroa.2.0.cast.1779.sroa_idx178 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.399, i64 0, i32 1
  store i64 %sub.7, i64* %tmpv.401.sroa.2.0.cast.1779.sroa_idx178, align 8
  %tmpv.401.sroa.3.0.cast.1779.sroa_idx179 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.399, i64 0, i32 2
  store i64 %sub.8, i64* %tmpv.401.sroa.3.0.cast.1779.sroa_idx179, align 8
  %cast.1781 = bitcast %IPST.3* %tmpv.399 to %IPST.4*, !dbg !1153
  %cast.1782 = bitcast %IPST.3* %tmpv.392 to %IPST.4*, !dbg !1153
  %call.102 = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.1781, %IPST.4* byval nonnull %cast.1782), !dbg !1153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %cast.1763, i64 24, i1 false), !dbg !1156
  call void @llvm.dbg.value(metadata %IPST.3* %args, metadata !1157, metadata !DIExpression(DW_OP_deref)), !dbg !1158
  %call.103 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.7 to i64), i64 5, %IPST.3* byval nonnull %args), !dbg !1159
  call void @llvm.dbg.value(metadata %Cmd.0* %call.103, metadata !1160, metadata !DIExpression()), !dbg !1333
  %icmp.114 = icmp eq %Cmd.0* %call.103, null, !dbg !1334
  br i1 %icmp.114, label %then.100, label %else.100

then.100:                                         ; preds = %else.98
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1334
  unreachable

else.100:                                         ; preds = %else.98
  %field.311 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.103, i64 0, i32 3, !dbg !1334
  %runtime.writeBarrier.ld.4 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1335
  %icmp.116 = icmp eq i32 %runtime.writeBarrier.ld.4, 0, !dbg !1335
  %cast.1788 = bitcast { i8*, i64 }* %field.311 to i8*, !dbg !1335
  %cast.1789 = bitcast { i8*, i64 }* %srcDir.addr to i8*, !dbg !1335
  br i1 %icmp.116, label %else.102, label %else.101

fallthrough.101:                                  ; preds = %else.101, %else.102
  %.ld.58 = load %Flags.0*, %Flags.0** %cast.1671, align 8, !dbg !1336
  %field0.68 = bitcast { i8*, i64 }* %tmpdir to i64*, !dbg !1338
  %ld.163 = load i64, i64* %field0.68, align 8, !dbg !1338
  %16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpdir, i64 0, i32 1, !dbg !1338
  %ld.164 = load i64, i64* %16, align 8, !dbg !1338
  %call.104 = call { i64, i64 } @command_line_arguments.RunCmd(i8* nest undef, %Flags.0* %.ld.58, i64 %ld.163, i64 %ld.164, %Cmd.0* nonnull %call.103), !dbg !1338
  %call.104.fca.0.extract = extractvalue { i64, i64 } %call.104, 0, !dbg !1338
  call void @llvm.dbg.value(metadata i64 %call.104.fca.0.extract, metadata !1339, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1340
  %icmp.117 = icmp eq i64 %call.104.fca.0.extract, 0, !dbg !1341
  br i1 %icmp.117, label %else.103, label %then.103

else.101:                                         ; preds = %else.100
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.1788, i8* nonnull %cast.1789), !dbg !1335
  br label %fallthrough.101

else.102:                                         ; preds = %else.100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1788, i8* nonnull align 8 %cast.1789, i64 16, i1 false), !dbg !1335
  br label %fallthrough.101

then.103:                                         ; preds = %fallthrough.101
  call void @llvm.dbg.value(metadata i64 %call.104.fca.0.extract, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1342
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1342
  ret { i64, i64 } %call.104, !dbg !1342

else.103:                                         ; preds = %fallthrough.101
  %.ld.59 = load %Flags.0*, %Flags.0** %cast.1671, align 8, !dbg !1343
  %call.105 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %.ld.59), !dbg !1344
  %icmp.118 = icmp eq i8 %call.105, 0, !dbg !1345
  br i1 %icmp.118, label %then.104, label %else.104

then.104:                                         ; preds = %else.103
  call void @llvm.dbg.value(metadata i64 0, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1131
  call void @llvm.dbg.value(metadata i64 0, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1346
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1346
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1346
  ret { i64, i64 } zeroinitializer, !dbg !1346

else.104:                                         ; preds = %else.103
  %call.106 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1archive_zip.Writer, i64 0, i32 0)), !dbg !1347
  %cast.1804 = bitcast i8* %call.106 to %Writer.1**, !dbg !1347
  call void @llvm.dbg.value(metadata %Writer.1** %cast.1804, metadata !1348, metadata !DIExpression()), !dbg !1350
  %call.107 = call %Writer.1* @archive_zip.NewWriter(i8* nest undef, i64 %w.chunk0, i64 %w.chunk1), !dbg !1351
  %runtime.writeBarrier.ld.5 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1351
  %icmp.120 = icmp eq i32 %runtime.writeBarrier.ld.5, 0, !dbg !1351
  br i1 %icmp.120, label %then.105, label %else.105

then.105:                                         ; preds = %else.104
  %icmp.119 = icmp eq i8* %call.106, null, !dbg !1351
  br i1 %icmp.119, label %then.106, label %else.106

fallthrough.105:                                  ; preds = %else.105, %else.106
  %call.108 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5, i64 0, i32 0)), !dbg !1352
  %field.313 = getelementptr inbounds { i8*, %Flags.0**, %Writer.1** }, { i8*, %Flags.0**, %Writer.1** }* %tmpv.413, i64 0, i32 0, !dbg !1352
  store i8* bitcast (void ({ %Writer.0, %error.0 }*, i8*, i64, i64)* @command_line_arguments.BuildJar..func2 to i8*), i8** %field.313, align 8, !dbg !1352
  %field.314 = getelementptr inbounds { i8*, %Flags.0**, %Writer.1** }, { i8*, %Flags.0**, %Writer.1** }* %tmpv.413, i64 0, i32 1, !dbg !1352
  %17 = bitcast %Flags.0*** %field.314 to i8**, !dbg !1352
  store i8* %call.96, i8** %17, align 8, !dbg !1352
  %field.315 = getelementptr inbounds { i8*, %Flags.0**, %Writer.1** }, { i8*, %Flags.0**, %Writer.1** }* %tmpv.413, i64 0, i32 2, !dbg !1352
  %18 = bitcast %Writer.1*** %field.315 to i8**, !dbg !1352
  store i8* %call.106, i8** %18, align 8, !dbg !1352
  %cast.1819 = bitcast { i8*, %Flags.0**, %Writer.1** }* %tmpv.413 to i8*, !dbg !1352
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5, i64 0, i32 0), i8* %call.108, i8* nonnull %cast.1819), !dbg !1352
  call void @llvm.dbg.value(metadata i8* %call.108, metadata !1353, metadata !DIExpression()), !dbg !1354
  %19 = bitcast %__go_descriptor.26** %jarwcreate to i8**
  store i8* %call.108, i8** %19, align 8
  %20 = bitcast i8* %call.108 to void ({ %Writer.0, %error.0 }*, i8*, i64, i64)**, !dbg !1355
  %deref.ld.8181 = load void ({ %Writer.0, %error.0 }*, i8*, i64, i64)*, void ({ %Writer.0, %error.0 }*, i8*, i64, i64)** %20, align 8, !dbg !1355
  call void %deref.ld.8181({ %Writer.0, %error.0 }* nonnull sret %sret.actual.88, i8* nest %call.108, i64 ptrtoint ([21 x i8]* @const.272 to i64), i64 20), !dbg !1355
  %tmpv.414.sroa.4.sroa.0.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.88, i64 0, i32 1, !dbg !1355
  %tmpv.414.sroa.4.sroa.0.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.414.sroa.4.sroa.0.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_idx to i64*, !dbg !1355
  %tmpv.414.sroa.4.sroa.0.0.copyload114 = load i64, i64* %tmpv.414.sroa.4.sroa.0.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_cast, align 8, !dbg !1355
  call void @llvm.dbg.value(metadata i64 %tmpv.414.sroa.4.sroa.0.0.copyload114, metadata !1150, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1151
  %icmp.121 = icmp eq i64 %tmpv.414.sroa.4.sroa.0.0.copyload114, 0, !dbg !1356
  br i1 %icmp.121, label %else.107, label %then.107

else.105:                                         ; preds = %else.104
  %cast.1808 = bitcast %Writer.1* %call.107 to i8*, !dbg !1351
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.106, i8* %cast.1808), !dbg !1351
  br label %fallthrough.105

then.106:                                         ; preds = %then.105
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1351
  unreachable

else.106:                                         ; preds = %then.105
  store %Writer.1* %call.107, %Writer.1** %cast.1804, align 8, !dbg !1351
  br label %fallthrough.105

then.107:                                         ; preds = %fallthrough.105
  %tmpv.414.sroa.4.sroa.3.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_idx115 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.88, i64 0, i32 1, i32 1, !dbg !1355
  %tmpv.414.sroa.4.sroa.3.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_cast = bitcast i8** %tmpv.414.sroa.4.sroa.3.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_idx115 to i64*, !dbg !1355
  %tmpv.414.sroa.4.sroa.3.0.copyload116 = load i64, i64* %tmpv.414.sroa.4.sroa.3.0.tmpv.414.sroa.4.0.cast.1828.sroa_cast.sroa_cast, align 8, !dbg !1355
  call void @llvm.dbg.value(metadata i64 %tmpv.414.sroa.4.sroa.3.0.copyload116, metadata !1150, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1151
  call void @llvm.dbg.value(metadata i64 %tmpv.414.sroa.4.sroa.0.0.copyload114, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1131
  call void @llvm.dbg.value(metadata i64 %tmpv.414.sroa.4.sroa.3.0.copyload116, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1131
  %ld.171.fca.0.insert = insertvalue { i64, i64 } undef, i64 %tmpv.414.sroa.4.sroa.0.0.copyload114, 0, !dbg !1357
  %ld.171.fca.1.insert = insertvalue { i64, i64 } %ld.171.fca.0.insert, i64 %tmpv.414.sroa.4.sroa.3.0.copyload116, 1, !dbg !1357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1357
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1357
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1357
  ret { i64, i64 } %ld.171.fca.1.insert, !dbg !1357

else.107:                                         ; preds = %fallthrough.105
  %tmpv.414.sroa.3.0.cast.1828.sroa_idx65 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.88, i64 0, i32 0, i32 1, !dbg !1355
  %tmpv.414.sroa.3.0.cast.1828.sroa_cast = bitcast i8** %tmpv.414.sroa.3.0.cast.1828.sroa_idx65 to i64*, !dbg !1355
  %tmpv.414.sroa.3.0.copyload66 = load i64, i64* %tmpv.414.sroa.3.0.cast.1828.sroa_cast, align 8, !dbg !1355
  call void @llvm.dbg.value(metadata i64 %tmpv.414.sroa.3.0.copyload66, metadata !1358, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1359
  %tmpv.414.sroa.0.0.cast.1828.sroa_cast = bitcast { %Writer.0, %error.0 }* %sret.actual.88 to i64*, !dbg !1355
  %tmpv.414.sroa.0.0.copyload64 = load i64, i64* %tmpv.414.sroa.0.0.cast.1828.sroa_cast, align 8, !dbg !1355
  call void @llvm.dbg.value(metadata i64 %tmpv.414.sroa.0.0.copyload64, metadata !1358, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1359
  call void @fmt.Fprintf({ i64, %error.0 }* nonnull sret %sret.actual.89, i8* nest undef, i64 %tmpv.414.sroa.0.0.copyload64, i64 %tmpv.414.sroa.3.0.copyload66, i64 ptrtoint ([45 x i8]* @const.274 to i64), i64 44, %IPST.2* byval nonnull @const.11), !dbg !1360
  %field.319 = getelementptr inbounds { i8*, %__go_descriptor.26**, { i8*, i64 }* }, { i8*, %__go_descriptor.26**, { i8*, i64 }* }* %tmpv.422, i64 0, i32 0, !dbg !1361
  store i8* bitcast ({ i64, i64 } (i8*, i64, i64, i64, i64, i64, i64)* @command_line_arguments.BuildJar..func3 to i8*), i8** %field.319, align 8, !dbg !1361
  %field.320 = getelementptr inbounds { i8*, %__go_descriptor.26**, { i8*, i64 }* }, { i8*, %__go_descriptor.26**, { i8*, i64 }* }* %tmpv.422, i64 0, i32 1, !dbg !1361
  store %__go_descriptor.26** %jarwcreate, %__go_descriptor.26*** %field.320, align 8, !dbg !1361
  %field.321 = getelementptr inbounds { i8*, %__go_descriptor.26**, { i8*, i64 }* }, { i8*, %__go_descriptor.26**, { i8*, i64 }* }* %tmpv.422, i64 0, i32 2, !dbg !1361
  store { i8*, i64 }* %dst, { i8*, i64 }** %field.321, align 8, !dbg !1361
  %cast.1853 = bitcast { i8*, %__go_descriptor.26**, { i8*, i64 }* }* %tmpv.422 to %__go_descriptor.30*, !dbg !1361
  %ld.176 = load i64, i64* %sret.actual.83.sroa.0.0.cast.1708.sroa_cast, align 8, !dbg !1362
  %ld.177 = load i64, i64* %sret.actual.83.sroa.2.0.cast.1708.sroa_idx39, align 8, !dbg !1362
  %call.109 = call { i64, i64 } @path_filepath.Walk(i8* nest undef, i64 %ld.176, i64 %ld.177, %__go_descriptor.30* nonnull %cast.1853), !dbg !1362
  %call.109.fca.0.extract = extractvalue { i64, i64 } %call.109, 0, !dbg !1362
  call void @llvm.dbg.value(metadata i64 %call.109.fca.0.extract, metadata !1150, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1151
  %icmp.122 = icmp eq i64 %call.109.fca.0.extract, 0, !dbg !1363
  br i1 %icmp.122, label %else.108, label %then.108

then.108:                                         ; preds = %else.107
  call void @llvm.dbg.value(metadata i64 %call.109.fca.0.extract, metadata !1130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1364
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1364
  ret { i64, i64 } %call.109, !dbg !1364

else.108:                                         ; preds = %else.107
  %.ld.61 = load %Writer.1*, %Writer.1** %cast.1804, align 8, !dbg !1365
  %call.110 = call { i64, i64 } @archive_zip.Writer.Close(i8* nest undef, %Writer.1* %.ld.61), !dbg !1366
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !1367
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1367
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3), !dbg !1367
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4), !dbg !1367
  ret { i64, i64 } %call.110, !dbg !1367
}

declare void @os.Open({ %File.1*, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk1(i8* nest nocapture readnone %nest.71, { %File.1* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1368 {
entry:
  call void @llvm.dbg.value(metadata { %File.1* }* %__go_thunk_parameter, metadata !1375, metadata !DIExpression()), !dbg !1376
  call void @llvm.dbg.value(metadata i8 0, metadata !1377, metadata !DIExpression()), !dbg !1376
  %call.466 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk1, %label.0)), !dbg !1376
  %0 = and i8 %call.466, 1, !dbg !1376
  %trunc.814 = icmp eq i8 %0, 0, !dbg !1376
  br i1 %trunc.814, label %else.814, label %label.0

else.814:                                         ; preds = %entry
  %field.1838 = getelementptr inbounds { %File.1* }, { %File.1* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1376
  %.field.ld.228 = load %File.1*, %File.1** %field.1838, align 8, !dbg !1376
  %call.467 = call { i64, i64 } @os.File.Close(i8* nest undef, %File.1* %.field.ld.228), !dbg !1376
  br label %label.0

label.0:                                          ; preds = %entry, %else.814
  call void @llvm.dbg.value(metadata i8 0, metadata !1377, metadata !DIExpression()), !dbg !1376
  ret i8 0, !dbg !1376
}

declare void @os.File.Read({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*) #0

declare void @io.Copy({ i64, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @archive_zip.Writer.Close(i8*, %Writer.1*) local_unnamed_addr #0

declare void @runtime.checkdefer(i8*, i8*) local_unnamed_addr #0

declare void @runtime.deferreturn(i8*, i8*) local_unnamed_addr #0

declare i32 @__gccgo_personality_v0(i32, i32, i64, i8*, i8*)

declare { i64, i64 } @os.File.Close(i8*, %File.1*) local_unnamed_addr #0

declare void @log.Logger.Printf(i8*, %Logger.0*, i64, i64, %IPST.2*) local_unnamed_addr #0

declare void @archive_zip.Writer.Create({ %Writer.0, %error.0 }*, i8*, %Writer.1*, i64, i64) local_unnamed_addr #0

define i8 @command_line_arguments.Flags.ShouldPrint(i8* nest nocapture readnone %nest.57, %Flags.0* readonly %f) #0 !dbg !1378 {
entry:
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !1379, metadata !DIExpression()), !dbg !1380
  call void @llvm.dbg.value(metadata i8 0, metadata !1381, metadata !DIExpression()), !dbg !1382
  %icmp.699 = icmp eq %Flags.0* %f, null, !dbg !1383
  br i1 %icmp.699, label %then.582, label %else.582

then.582:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1383
  unreachable

else.582:                                         ; preds = %entry
  %field.1417 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 3, !dbg !1383
  %.field.ld.154 = load i8, i8* %field.1417, align 1, !dbg !1383
  %icmp.701 = icmp eq i8 %.field.ld.154, 0, !dbg !1384
  br i1 %icmp.701, label %else.584, label %fallthrough.583

fallthrough.583:                                  ; preds = %else.582, %else.584
  %tmpv.1749.0 = phi i8 [ %.field.ld.155, %else.584 ], [ %.field.ld.154, %else.582 ]
  %0 = and i8 %tmpv.1749.0, 1, !dbg !1385
  %trunc.586 = icmp eq i8 %0, 0, !dbg !1385
  br i1 %trunc.586, label %fallthrough.585, label %else.586

else.584:                                         ; preds = %else.582
  %field.1418 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 4, !dbg !1386
  %.field.ld.155 = load i8, i8* %field.1418, align 1, !dbg !1386
  br label %fallthrough.583

fallthrough.585:                                  ; preds = %fallthrough.583, %else.586
  %tmpv.1752.0 = phi i8 [ %zext.696, %else.586 ], [ %tmpv.1749.0, %fallthrough.583 ]
  call void @llvm.dbg.value(metadata i8 %tmpv.1752.0, metadata !1381, metadata !DIExpression()), !dbg !1382
  ret i8 %tmpv.1752.0, !dbg !1387

else.586:                                         ; preds = %fallthrough.583
  %field.1419 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 2, !dbg !1388
  %.field.ld.156 = load i8, i8* %field.1419, align 1, !dbg !1388
  %icmp.703 = icmp eq i8 %.field.ld.156, 0, !dbg !1389
  %zext.696 = zext i1 %icmp.703 to i8, !dbg !1389
  br label %fallthrough.585
}

define i64 @command_line_arguments.command_line_arguments.Flags..hash(i8* nest nocapture readnone %nest.81, i8* %key, i64 %seed) #0 !dbg !1390 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !1391, metadata !DIExpression()), !dbg !1392
  call void @llvm.dbg.value(metadata i64 %seed, metadata !1393, metadata !DIExpression()), !dbg !1392
  call void @llvm.dbg.value(metadata i64 0, metadata !1394, metadata !DIExpression()), !dbg !1392
  %pticast.49 = ptrtoint i8* %key to i64, !dbg !1392
  %call.476 = call i64 @runtime.memhash64(i8* nest undef, i8* %key, i64 %seed), !dbg !1392
  %add.102 = add i64 %pticast.49, 8, !dbg !1392
  %itpcast.1 = inttoptr i64 %add.102 to i8*, !dbg !1392
  %call.477 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.1, i64 %call.476), !dbg !1392
  %add.103 = add i64 %pticast.49, 9, !dbg !1392
  %itpcast.2 = inttoptr i64 %add.103 to i8*, !dbg !1392
  %call.478 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.2, i64 %call.477), !dbg !1392
  %add.104 = add i64 %pticast.49, 10, !dbg !1392
  %itpcast.3 = inttoptr i64 %add.104 to i8*, !dbg !1392
  %call.479 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.3, i64 %call.478), !dbg !1392
  %add.105 = add i64 %pticast.49, 11, !dbg !1392
  %itpcast.4 = inttoptr i64 %add.105 to i8*, !dbg !1392
  %call.480 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.4, i64 %call.479), !dbg !1392
  %add.106 = add i64 %pticast.49, 12, !dbg !1392
  %itpcast.5 = inttoptr i64 %add.106 to i8*, !dbg !1392
  %call.481 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.5, i64 %call.480), !dbg !1392
  %add.107 = add i64 %pticast.49, 13, !dbg !1392
  %itpcast.6 = inttoptr i64 %add.107 to i8*, !dbg !1392
  %call.482 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.6, i64 %call.481), !dbg !1392
  %add.108 = add i64 %pticast.49, 16, !dbg !1392
  %itpcast.7 = inttoptr i64 %add.108 to i8*, !dbg !1392
  %call.483 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.7, i64 %call.482), !dbg !1392
  %add.109 = add i64 %pticast.49, 32, !dbg !1392
  %itpcast.8 = inttoptr i64 %add.109 to i8*, !dbg !1392
  %call.484 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.8, i64 %call.483), !dbg !1392
  %add.110 = add i64 %pticast.49, 48, !dbg !1392
  %itpcast.9 = inttoptr i64 %add.110 to i8*, !dbg !1392
  %call.485 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.9, i64 %call.484), !dbg !1392
  %add.111 = add i64 %pticast.49, 64, !dbg !1392
  %itpcast.10 = inttoptr i64 %add.111 to i8*, !dbg !1392
  %call.486 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.10, i64 %call.485), !dbg !1392
  %add.112 = add i64 %pticast.49, 72, !dbg !1392
  %itpcast.11 = inttoptr i64 %add.112 to i8*, !dbg !1392
  %call.487 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.11, i64 %call.486), !dbg !1392
  call void @llvm.dbg.value(metadata i64 %call.487, metadata !1394, metadata !DIExpression()), !dbg !1392
  ret i64 %call.487, !dbg !1392
}

define i8 @command_line_arguments.command_line_arguments.Flags..eq(i8* nest nocapture readnone %nest.82, i8* readonly %key1, i8* readonly %key2) #0 !dbg !1395 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !1396, metadata !DIExpression()), !dbg !1397
  call void @llvm.dbg.value(metadata i8* %key2, metadata !1398, metadata !DIExpression()), !dbg !1397
  call void @llvm.dbg.value(metadata i8 0, metadata !1399, metadata !DIExpression()), !dbg !1397
  %icmp.1014 = icmp eq i8* %key1, null, !dbg !1397
  br i1 %icmp.1014, label %then.818, label %else.818

then.818:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1397
  unreachable

else.818:                                         ; preds = %entry
  %icmp.1015 = icmp eq i8* %key2, null, !dbg !1397
  br i1 %icmp.1015, label %then.819, label %else.819

then.819:                                         ; preds = %else.818
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1397
  unreachable

else.819:                                         ; preds = %else.818
  %field.1855 = bitcast i8* %key1 to %Logger.0**, !dbg !1397
  %.field.ld.242 = load %Logger.0*, %Logger.0** %field.1855, align 8, !dbg !1397
  %field.1856 = bitcast i8* %key2 to %Logger.0**, !dbg !1397
  %.field.ld.243 = load %Logger.0*, %Logger.0** %field.1856, align 8, !dbg !1397
  %icmp.1016 = icmp eq %Logger.0* %.field.ld.242, %.field.ld.243, !dbg !1397
  br i1 %icmp.1016, label %else.822, label %then.820

then.820:                                         ; preds = %else.849, %else.846, %else.843, %else.840, %else.837, %else.834, %else.831, %else.828, %else.825, %else.822, %else.819
  call void @llvm.dbg.value(metadata i8 0, metadata !1399, metadata !DIExpression()), !dbg !1397
  ret i8 0, !dbg !1397

else.822:                                         ; preds = %else.819
  %0 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !1397
  %.field.ld.244 = load i8, i8* %0, align 1, !dbg !1397
  %1 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !1397
  %.field.ld.245 = load i8, i8* %1, align 1, !dbg !1397
  %icmp.1019 = icmp eq i8 %.field.ld.244, %.field.ld.245, !dbg !1397
  br i1 %icmp.1019, label %else.825, label %then.820

else.825:                                         ; preds = %else.822
  %2 = getelementptr inbounds i8, i8* %key1, i64 9, !dbg !1397
  %.field.ld.246 = load i8, i8* %2, align 1, !dbg !1397
  %3 = getelementptr inbounds i8, i8* %key2, i64 9, !dbg !1397
  %.field.ld.247 = load i8, i8* %3, align 1, !dbg !1397
  %icmp.1022 = icmp eq i8 %.field.ld.246, %.field.ld.247, !dbg !1397
  br i1 %icmp.1022, label %else.828, label %then.820

else.828:                                         ; preds = %else.825
  %4 = getelementptr inbounds i8, i8* %key1, i64 10, !dbg !1397
  %.field.ld.248 = load i8, i8* %4, align 1, !dbg !1397
  %5 = getelementptr inbounds i8, i8* %key2, i64 10, !dbg !1397
  %.field.ld.249 = load i8, i8* %5, align 1, !dbg !1397
  %icmp.1025 = icmp eq i8 %.field.ld.248, %.field.ld.249, !dbg !1397
  br i1 %icmp.1025, label %else.831, label %then.820

else.831:                                         ; preds = %else.828
  %6 = getelementptr inbounds i8, i8* %key1, i64 11, !dbg !1397
  %.field.ld.250 = load i8, i8* %6, align 1, !dbg !1397
  %7 = getelementptr inbounds i8, i8* %key2, i64 11, !dbg !1397
  %.field.ld.251 = load i8, i8* %7, align 1, !dbg !1397
  %icmp.1028 = icmp eq i8 %.field.ld.250, %.field.ld.251, !dbg !1397
  br i1 %icmp.1028, label %else.834, label %then.820

else.834:                                         ; preds = %else.831
  %8 = getelementptr inbounds i8, i8* %key1, i64 12, !dbg !1397
  %.field.ld.252 = load i8, i8* %8, align 1, !dbg !1397
  %9 = getelementptr inbounds i8, i8* %key2, i64 12, !dbg !1397
  %.field.ld.253 = load i8, i8* %9, align 1, !dbg !1397
  %icmp.1031 = icmp eq i8 %.field.ld.252, %.field.ld.253, !dbg !1397
  br i1 %icmp.1031, label %else.837, label %then.820

else.837:                                         ; preds = %else.834
  %10 = getelementptr inbounds i8, i8* %key1, i64 13, !dbg !1397
  %.field.ld.254 = load i8, i8* %10, align 1, !dbg !1397
  %11 = getelementptr inbounds i8, i8* %key2, i64 13, !dbg !1397
  %.field.ld.255 = load i8, i8* %11, align 1, !dbg !1397
  %icmp.1034 = icmp eq i8 %.field.ld.254, %.field.ld.255, !dbg !1397
  br i1 %icmp.1034, label %else.840, label %then.820

else.840:                                         ; preds = %else.837
  %field.1869 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !1397
  %field.1870 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !1397
  %field0.373 = bitcast i8* %field.1869 to i64*, !dbg !1397
  %ld.819 = load i64, i64* %field0.373, align 8, !dbg !1397
  %field1.373 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !1397
  %12 = bitcast i8* %field1.373 to i64*, !dbg !1397
  %ld.820 = load i64, i64* %12, align 8, !dbg !1397
  %field0.374 = bitcast i8* %field.1870 to i64*, !dbg !1397
  %ld.821 = load i64, i64* %field0.374, align 8, !dbg !1397
  %field1.374 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !1397
  %13 = bitcast i8* %field1.374 to i64*, !dbg !1397
  %ld.822 = load i64, i64* %13, align 8, !dbg !1397
  %call.488 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.819, i64 %ld.820, i64 %ld.821, i64 %ld.822), !dbg !1397
  %icmp.1037 = icmp eq i8 %call.488, 1, !dbg !1397
  br i1 %icmp.1037, label %else.843, label %then.820

else.843:                                         ; preds = %else.840
  %field.1871 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !1397
  %field.1872 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !1397
  %field0.375 = bitcast i8* %field.1871 to i64*, !dbg !1397
  %ld.823 = load i64, i64* %field0.375, align 8, !dbg !1397
  %field1.375 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !1397
  %14 = bitcast i8* %field1.375 to i64*, !dbg !1397
  %ld.824 = load i64, i64* %14, align 8, !dbg !1397
  %field0.376 = bitcast i8* %field.1872 to i64*, !dbg !1397
  %ld.825 = load i64, i64* %field0.376, align 8, !dbg !1397
  %field1.376 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !1397
  %15 = bitcast i8* %field1.376 to i64*, !dbg !1397
  %ld.826 = load i64, i64* %15, align 8, !dbg !1397
  %call.489 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.823, i64 %ld.824, i64 %ld.825, i64 %ld.826), !dbg !1397
  %icmp.1040 = icmp eq i8 %call.489, 1, !dbg !1397
  br i1 %icmp.1040, label %else.846, label %then.820

else.846:                                         ; preds = %else.843
  %field.1873 = getelementptr inbounds i8, i8* %key1, i64 48, !dbg !1397
  %field.1874 = getelementptr inbounds i8, i8* %key2, i64 48, !dbg !1397
  %field0.377 = bitcast i8* %field.1873 to i64*, !dbg !1397
  %ld.827 = load i64, i64* %field0.377, align 8, !dbg !1397
  %field1.377 = getelementptr inbounds i8, i8* %key1, i64 56, !dbg !1397
  %16 = bitcast i8* %field1.377 to i64*, !dbg !1397
  %ld.828 = load i64, i64* %16, align 8, !dbg !1397
  %field0.378 = bitcast i8* %field.1874 to i64*, !dbg !1397
  %ld.829 = load i64, i64* %field0.378, align 8, !dbg !1397
  %field1.378 = getelementptr inbounds i8, i8* %key2, i64 56, !dbg !1397
  %17 = bitcast i8* %field1.378 to i64*, !dbg !1397
  %ld.830 = load i64, i64* %17, align 8, !dbg !1397
  %call.490 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.827, i64 %ld.828, i64 %ld.829, i64 %ld.830), !dbg !1397
  %icmp.1043 = icmp eq i8 %call.490, 1, !dbg !1397
  br i1 %icmp.1043, label %else.849, label %then.820

else.849:                                         ; preds = %else.846
  %18 = getelementptr inbounds i8, i8* %key1, i64 64, !dbg !1397
  %.field.ld.256 = load i8, i8* %18, align 1, !dbg !1397
  %19 = getelementptr inbounds i8, i8* %key2, i64 64, !dbg !1397
  %.field.ld.257 = load i8, i8* %19, align 1, !dbg !1397
  %icmp.1046 = icmp eq i8 %.field.ld.256, %.field.ld.257, !dbg !1397
  br i1 %icmp.1046, label %else.852, label %then.820

else.852:                                         ; preds = %else.849
  %field.1877 = getelementptr inbounds i8, i8* %key1, i64 72, !dbg !1397
  %field.1878 = getelementptr inbounds i8, i8* %key2, i64 72, !dbg !1397
  %field0.379 = bitcast i8* %field.1877 to i64*, !dbg !1397
  %ld.831 = load i64, i64* %field0.379, align 8, !dbg !1397
  %field1.379 = getelementptr inbounds i8, i8* %key1, i64 80, !dbg !1397
  %20 = bitcast i8* %field1.379 to i64*, !dbg !1397
  %ld.832 = load i64, i64* %20, align 8, !dbg !1397
  %field0.380 = bitcast i8* %field.1878 to i64*, !dbg !1397
  %ld.833 = load i64, i64* %field0.380, align 8, !dbg !1397
  %field1.380 = getelementptr inbounds i8, i8* %key2, i64 80, !dbg !1397
  %21 = bitcast i8* %field1.380 to i64*, !dbg !1397
  %ld.834 = load i64, i64* %21, align 8, !dbg !1397
  %call.491 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.831, i64 %ld.832, i64 %ld.833, i64 %ld.834), !dbg !1397
  %icmp.1049 = icmp eq i8 %call.491, 1, !dbg !1397
  %spec.select = zext i1 %icmp.1049 to i8
  ret i8 %spec.select
}

define internal { i64, i64 } @command_line_arguments.BuildJar..func1(i8* nest nocapture readonly %"$closure", i64 %path.chunk0, i64 %path.chunk1, i64 %info.chunk0, i64 %info.chunk1, i64 %err.chunk0, i64 %err.chunk1) #0 !dbg !1400 {
entry:
  %tmp.83 = alloca %IPST.3, align 8
  %tmpv.431 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.432 = alloca { i8*, i64 }, align 8
  %tmpv.434 = alloca %IPST.3, align 8
  %sret.actual.94 = alloca %IPST.4, align 8
  %tmpv.445 = alloca %IPST.3, align 8
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !1403, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1404
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !1403, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1404
  call void @llvm.dbg.value(metadata i64 %info.chunk0, metadata !1405, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1406
  call void @llvm.dbg.value(metadata i64 %info.chunk1, metadata !1405, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1406
  call void @llvm.dbg.value(metadata i64 %err.chunk0, metadata !1407, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1408
  call void @llvm.dbg.value(metadata i64 %err.chunk1, metadata !1407, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1408
  %icmp.123 = icmp eq i64 %err.chunk0, 0, !dbg !1409
  br i1 %icmp.123, label %else.109, label %then.109

then.109:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i64 %err.chunk0, metadata !1410, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1411
  call void @llvm.dbg.value(metadata i64 %err.chunk1, metadata !1410, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1411
  %ld.180.fca.0.insert = insertvalue { i64, i64 } undef, i64 %err.chunk0, 0, !dbg !1412
  %ld.180.fca.1.insert = insertvalue { i64, i64 } %ld.180.fca.0.insert, i64 %err.chunk1, 1, !dbg !1412
  ret { i64, i64 } %ld.180.fca.1.insert, !dbg !1412

else.109:                                         ; preds = %entry
  %call.113 = call { i64, i64 } @path_filepath.Ext(i8* nest undef, i64 %path.chunk0, i64 %path.chunk1), !dbg !1413
  %call.113.fca.0.extract = extractvalue { i64, i64 } %call.113, 0, !dbg !1413
  %call.113.fca.1.extract = extractvalue { i64, i64 } %call.113, 1, !dbg !1413
  %call.114 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.113.fca.0.extract, i64 %call.113.fca.1.extract, i64 ptrtoint ([6 x i8]* @const.277 to i64), i64 5), !dbg !1414
  %icmp.138 = icmp eq i8 %call.114, 1, !dbg !1414
  br i1 %icmp.138, label %then.110, label %fallthrough.110

then.110:                                         ; preds = %else.109
  %field.324 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1415
  %0 = bitcast i8* %field.324 to { i8*, i64 }**, !dbg !1415
  %.field.ld.21 = load { i8*, i64 }*, { i8*, i64 }** %0, align 8, !dbg !1415
  %field.325 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %.field.ld.21, i64 0, i32 1, !dbg !1416
  %.field.ld.22 = load i64, i64* %field.325, align 8, !dbg !1416
  %icmp.124 = icmp slt i64 %.field.ld.22, 0, !dbg !1417
  br i1 %icmp.124, label %then.111, label %else.111

fallthrough.110:                                  ; preds = %else.119, %else.118, %else.109
  call void @llvm.dbg.value(metadata i64 0, metadata !1410, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1411
  call void @llvm.dbg.value(metadata i64 0, metadata !1410, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1411
  ret { i64, i64 } zeroinitializer, !dbg !1418

then.111:                                         ; preds = %then.110
  call void @__go_runtime_error(i8* nest undef, i32 5), !dbg !1417
  unreachable

else.111:                                         ; preds = %then.110
  %call.111 = call { i64, i64 } @__go_string_slice(i8* nest undef, i64 %path.chunk0, i64 %path.chunk1, i64 %.field.ld.22, i64 -1), !dbg !1417
  %call.111.fca.0.extract = extractvalue { i64, i64 } %call.111, 0, !dbg !1417
  %call.111.fca.1.extract = extractvalue { i64, i64 } %call.111, 1, !dbg !1417
  %cast.1885 = bitcast [2 x { i8*, i64 }]* %tmpv.431 to i8*, !dbg !1419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1885, i8* align 8 bitcast ({ i8*, i64 }* @const.279 to i8*), i64 16, i1 false), !dbg !1419
  %tmpv.429.sroa.0.0.cast.1887.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.431, i64 0, i64 1, !dbg !1419
  %tmpv.429.sroa.0.0.cast.1887.sroa_cast = bitcast { i8*, i64 }* %tmpv.429.sroa.0.0.cast.1887.sroa_idx to i64*, !dbg !1419
  store i64 %call.111.fca.0.extract, i64* %tmpv.429.sroa.0.0.cast.1887.sroa_cast, align 8, !dbg !1419
  %tmpv.429.sroa.2.0.cast.1887.sroa_idx21 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.431, i64 0, i64 1, i32 1, !dbg !1419
  store i64 %call.111.fca.1.extract, i64* %tmpv.429.sroa.2.0.cast.1887.sroa_idx21, align 8, !dbg !1419
  %field.326 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.83, i64 0, i32 0, !dbg !1419
  %cast.1889 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.431, i64 0, i64 0, !dbg !1419
  store { i8*, i64 }* %cast.1889, { i8*, i64 }** %field.326, align 8, !dbg !1419
  %field.327 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.83, i64 0, i32 1, !dbg !1419
  store i64 2, i64* %field.327, align 8, !dbg !1419
  %field.328 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.83, i64 0, i32 2, !dbg !1419
  store i64 2, i64* %field.328, align 8, !dbg !1419
  %call.112 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.83), !dbg !1419
  %call.112.fca.0.extract = extractvalue { i64, i64 } %call.112, 0, !dbg !1419
  %call.112.fca.1.extract = extractvalue { i64, i64 } %call.112, 1, !dbg !1419
  %sret.actual.93.sroa.0.0.cast.1891.sroa_cast = bitcast { i8*, i64 }* %tmpv.432 to i64*
  store i64 %call.112.fca.0.extract, i64* %sret.actual.93.sroa.0.0.cast.1891.sroa_cast, align 8
  %sret.actual.93.sroa.2.0.cast.1891.sroa_idx18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.432, i64 0, i32 1
  store i64 %call.112.fca.1.extract, i64* %sret.actual.93.sroa.2.0.cast.1891.sroa_idx18, align 8
  %field.329 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1420
  %1 = bitcast i8* %field.329 to %IPST.3**, !dbg !1420
  %.field.ld.23 = load %IPST.3*, %IPST.3** %1, align 8, !dbg !1420
  %cast.1893 = bitcast %IPST.3* %tmpv.434 to i8*
  %cast.1894 = bitcast %IPST.3* %.field.ld.23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1893, i8* align 8 %cast.1894, i64 24, i1 false)
  %field.331 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.434, i64 0, i32 1, !dbg !1421
  %tmpv.434.field.ld.0 = load i64, i64* %field.331, align 8, !dbg !1421
  %add.5 = add i64 %tmpv.434.field.ld.0, 1, !dbg !1421
  %field.332 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.434, i64 0, i32 2, !dbg !1421
  %tmpv.434.field.ld.1 = load i64, i64* %field.332, align 8, !dbg !1421
  %icmp.125 = icmp ugt i64 %add.5, %tmpv.434.field.ld.1, !dbg !1421
  br i1 %icmp.125, label %then.112, label %else.112

then.112:                                         ; preds = %else.111
  %cast.1895 = bitcast %IPST.3* %tmpv.434 to %IPST.4*, !dbg !1421
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.94, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.1895, i64 %add.5), !dbg !1421
  %tmpv.440.sroa.0.0.cast.1900.sroa_idx = bitcast %IPST.4* %sret.actual.94 to { i8*, i64 }**
  %tmpv.440.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.440.sroa.0.0.cast.1900.sroa_idx, align 8
  %2 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.94, i64 0, i32 1
  %tmpv.440.sroa.3.0.copyload = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.94, i64 0, i32 2
  %tmpv.440.sroa.4.0.copyload = load i64, i64* %3, align 8
  %.pre = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.434, i64 0, i32 0, !dbg !1421
  br label %fallthrough.112

fallthrough.112:                                  ; preds = %else.113, %then.112
  %tmpv.440.sroa.0.0.cast.1903.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.335, %else.113 ], [ %.pre, %then.112 ], !dbg !1421
  %tmpv.440.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.434.field.ld.3, %else.113 ], [ %tmpv.440.sroa.0.0.copyload, %then.112 ]
  %tmpv.440.sroa.3.0 = phi i64 [ %add.5, %else.113 ], [ %tmpv.440.sroa.3.0.copyload, %then.112 ]
  %tmpv.440.sroa.4.0 = phi i64 [ %tmpv.434.field.ld.1, %else.113 ], [ %tmpv.440.sroa.4.0.copyload, %then.112 ]
  store { i8*, i64 }* %tmpv.440.sroa.0.0, { i8*, i64 }** %tmpv.440.sroa.0.0.cast.1903.sroa_idx.pre-phi, align 8, !dbg !1421
  store i64 %tmpv.440.sroa.3.0, i64* %field.331, align 8, !dbg !1421
  store i64 %tmpv.440.sroa.4.0, i64* %field.332, align 8, !dbg !1421
  %icmp.132 = icmp sge i64 %tmpv.434.field.ld.0, %tmpv.440.sroa.3.0, !dbg !1421
  %4 = icmp slt i64 %tmpv.434.field.ld.0, 0, !dbg !1421
  %ior.66 = or i1 %4, %icmp.132, !dbg !1421
  br i1 %ior.66, label %then.115, label %else.115

else.112:                                         ; preds = %else.111
  %icmp.127 = icmp sgt i64 %add.5, %tmpv.434.field.ld.1, !dbg !1421
  %add.5.lobit47 = or i64 %add.5, %tmpv.434.field.ld.1, !dbg !1421
  %5 = icmp slt i64 %add.5.lobit47, 0, !dbg !1421
  %6 = or i1 %icmp.127, %5, !dbg !1421
  br i1 %6, label %then.113, label %else.113

then.113:                                         ; preds = %else.112
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1421
  unreachable

else.113:                                         ; preds = %else.112
  %field.335 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.434, i64 0, i32 0, !dbg !1421
  %tmpv.434.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.335, align 8, !dbg !1421
  br label %fallthrough.112

then.115:                                         ; preds = %fallthrough.112
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1421
  unreachable

else.115:                                         ; preds = %fallthrough.112
  %ptroff.8 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.440.sroa.0.0, i64 %tmpv.434.field.ld.0, !dbg !1421
  %runtime.writeBarrier.ld.6 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1421
  %icmp.135 = icmp eq i32 %runtime.writeBarrier.ld.6, 0, !dbg !1421
  br i1 %icmp.135, label %then.116, label %else.116

then.116:                                         ; preds = %else.115
  %icmp.134 = icmp eq { i8*, i64 }* %ptroff.8, null, !dbg !1421
  br i1 %icmp.134, label %then.117, label %else.117

fallthrough.116:                                  ; preds = %else.116, %else.117
  %cast.1910 = bitcast %IPST.3* %tmpv.445 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1910, i8* nonnull align 8 %cast.1893, i64 24, i1 false)
  %runtime.writeBarrier.ld.7 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1422
  %icmp.137 = icmp eq i32 %runtime.writeBarrier.ld.7, 0, !dbg !1422
  br i1 %icmp.137, label %then.118, label %else.118

else.116:                                         ; preds = %else.115
  %cast.1908 = bitcast { i8*, i64 }* %ptroff.8 to i8*, !dbg !1421
  %cast.1909 = bitcast { i8*, i64 }* %tmpv.432 to i8*, !dbg !1421
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.1908, i8* nonnull %cast.1909), !dbg !1421
  br label %fallthrough.116

then.117:                                         ; preds = %then.116
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1421
  unreachable

else.117:                                         ; preds = %then.116
  %cast.1906 = bitcast { i8*, i64 }* %ptroff.8 to i8*, !dbg !1421
  %cast.1907 = bitcast { i8*, i64 }* %tmpv.432 to i8*, !dbg !1421
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1906, i8* nonnull align 8 %cast.1907, i64 16, i1 false), !dbg !1421
  br label %fallthrough.116

then.118:                                         ; preds = %fallthrough.116
  %icmp.136 = icmp eq %IPST.3* %.field.ld.23, null, !dbg !1422
  br i1 %icmp.136, label %then.119, label %else.119

else.118:                                         ; preds = %fallthrough.116
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* %cast.1894, i8* nonnull %cast.1910), !dbg !1422
  br label %fallthrough.110

then.119:                                         ; preds = %then.118
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1422
  unreachable

else.119:                                         ; preds = %then.118
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1894, i8* nonnull align 8 %cast.1910, i64 24, i1 false), !dbg !1422
  br label %fallthrough.110
}

declare { i64, i64 } @path_filepath.Walk(i8*, i64, i64, %__go_descriptor.30*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Mkdir(i8* nest nocapture readnone %nest.41, %Flags.0* %f, i64 %dir.chunk0, i64 %dir.chunk1) #0 !dbg !1423 {
entry:
  %tmp.209 = alloca %IPST.2, align 8
  %tmpv.1410 = alloca { i8*, i64 }, align 8
  %tmpv.1411 = alloca [1 x %IPST.16], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !1426, metadata !DIExpression()), !dbg !1427
  call void @llvm.dbg.value(metadata i64 %dir.chunk0, metadata !1428, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1429
  call void @llvm.dbg.value(metadata i64 %dir.chunk1, metadata !1428, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1429
  %call.303 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !1430
  %0 = and i8 %call.303, 1, !dbg !1431
  %trunc.503 = icmp eq i8 %0, 0, !dbg !1431
  br i1 %trunc.503, label %fallthrough.502, label %then.502

then.502:                                         ; preds = %entry
  %call.302 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1432
  %dir.addr.sroa.0.0.cast.4823.sroa_cast = bitcast { i8*, i64 }* %tmpv.1410 to i64*
  store i64 %dir.chunk0, i64* %dir.addr.sroa.0.0.cast.4823.sroa_cast, align 8
  %dir.addr.sroa.3.0.cast.4823.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1410, i64 0, i32 1
  store i64 %dir.chunk1, i64* %dir.addr.sroa.3.0.cast.4823.sroa_idx11, align 8
  %cast.4826 = bitcast { i8*, i64 }* %tmpv.1410 to i8*, !dbg !1432
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.302, i8* nonnull %cast.4826), !dbg !1432
  %tmp.208.sroa.0.0.cast.4828.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1411, i64 0, i64 0, i32 0, !dbg !1432
  store %_type.0* @string..d, %_type.0** %tmp.208.sroa.0.0.cast.4828.sroa_idx, align 8, !dbg !1432
  %tmp.208.sroa.2.0.cast.4828.sroa_idx12 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1411, i64 0, i64 0, i32 1, !dbg !1432
  store i8* %call.302, i8** %tmp.208.sroa.2.0.cast.4828.sroa_idx12, align 8, !dbg !1432
  %icmp.637 = icmp eq %Flags.0* %f, null, !dbg !1433
  br i1 %icmp.637, label %then.503, label %else.503

fallthrough.502:                                  ; preds = %entry, %else.503
  %call.305 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !1434
  %1 = and i8 %call.305, 1, !dbg !1435
  %trunc.504 = icmp eq i8 %1, 0, !dbg !1435
  br i1 %trunc.504, label %else.504, label %then.504

then.503:                                         ; preds = %then.502
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1433
  unreachable

else.503:                                         ; preds = %then.502
  %field.1168 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !1433
  %.field.ld.142 = load %Logger.0*, %Logger.0** %field.1168, align 8, !dbg !1433
  %field.1169 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.209, i64 0, i32 0, !dbg !1432
  %cast.4832 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1411, i64 0, i64 0, !dbg !1432
  store %IPST.16* %cast.4832, %IPST.16** %field.1169, align 8, !dbg !1432
  %field.1170 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.209, i64 0, i32 1, !dbg !1432
  store i64 1, i64* %field.1170, align 8, !dbg !1432
  %field.1171 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.209, i64 0, i32 2, !dbg !1432
  store i64 1, i64* %field.1171, align 8, !dbg !1432
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.142, i64 ptrtoint ([13 x i8]* @const.483 to i64), i64 12, %IPST.2* byval nonnull %tmp.209), !dbg !1432
  br label %fallthrough.502

then.504:                                         ; preds = %fallthrough.502
  %call.304 = call { i64, i64 } @os.MkdirAll(i8* nest undef, i64 %dir.chunk0, i64 %dir.chunk1, i32 493), !dbg !1436
  ret { i64, i64 } %call.304, !dbg !1437

else.504:                                         ; preds = %fallthrough.502
  call void @llvm.dbg.value(metadata i64 0, metadata !1438, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1439
  call void @llvm.dbg.value(metadata i64 0, metadata !1438, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1439
  ret { i64, i64 } zeroinitializer, !dbg !1440
}

declare i64 @runtime.typedslicecopy(i8*, %_type.0*, %IPST.4*, %IPST.4*) local_unnamed_addr #0

declare %Cmd.0* @os_exec.Command(i8*, i64, i64, %IPST.3*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.RunCmd(i8* nest nocapture readnone %nest.29, %Flags.0* %f, i64 %tmpdir.chunk0, i64 %tmpdir.chunk1, %Cmd.0* %cmd) #0 !dbg !1441 {
entry:
  %sret.actual.206 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !1444, metadata !DIExpression()), !dbg !1445
  call void @llvm.dbg.value(metadata i64 %tmpdir.chunk0, metadata !1446, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1447
  call void @llvm.dbg.value(metadata i64 %tmpdir.chunk1, metadata !1446, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1447
  call void @llvm.dbg.value(metadata %Cmd.0* %cmd, metadata !1448, metadata !DIExpression()), !dbg !1449
  call void @command_line_arguments.OutputCmd({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.206, i8* nest undef, %Flags.0* %f, { i8*, i64, i64 }* byval nonnull @const.436, i64 %tmpdir.chunk0, i64 %tmpdir.chunk1, %Cmd.0* %cmd), !dbg !1450
  %tmpv.1088.sroa.3.0.cast.3845.sroa_idx15 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.206, i64 0, i32 1, !dbg !1450
  %tmpv.1088.sroa.3.0.cast.3845.sroa_cast = bitcast %error.0* %tmpv.1088.sroa.3.0.cast.3845.sroa_idx15 to i64*, !dbg !1450
  %tmpv.1088.sroa.3.0.copyload16 = load i64, i64* %tmpv.1088.sroa.3.0.cast.3845.sroa_cast, align 8, !dbg !1450
  %tmpv.1088.sroa.4.0.cast.3845.sroa_idx17 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.206, i64 0, i32 1, i32 1, !dbg !1450
  %tmpv.1088.sroa.4.0.cast.3845.sroa_cast = bitcast i8** %tmpv.1088.sroa.4.0.cast.3845.sroa_idx17 to i64*, !dbg !1450
  %tmpv.1088.sroa.4.0.copyload18 = load i64, i64* %tmpv.1088.sroa.4.0.cast.3845.sroa_cast, align 8, !dbg !1450
  call void @llvm.dbg.value(metadata i64 %tmpv.1088.sroa.3.0.copyload16, metadata !1452, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1453
  call void @llvm.dbg.value(metadata i64 %tmpv.1088.sroa.4.0.copyload18, metadata !1452, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1453
  call void @llvm.dbg.value(metadata i64 %tmpv.1088.sroa.3.0.copyload16, metadata !1454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1455
  call void @llvm.dbg.value(metadata i64 %tmpv.1088.sroa.4.0.copyload18, metadata !1454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1455
  %ld.406.fca.0.insert = insertvalue { i64, i64 } undef, i64 %tmpv.1088.sroa.3.0.copyload16, 0, !dbg !1456
  %ld.406.fca.1.insert = insertvalue { i64, i64 } %ld.406.fca.0.insert, i64 %tmpv.1088.sroa.4.0.copyload18, 1, !dbg !1456
  ret { i64, i64 } %ld.406.fca.1.insert, !dbg !1456
}

declare void @runtime.writebarrierptr(i8*, i8*, i8*) local_unnamed_addr #0

define internal void @command_line_arguments.BuildJar..func2({ %Writer.0, %error.0 }* nocapture sret %sret.formal.7, i8* nest nocapture readonly %"$closure", i64 %name.chunk0, i64 %name.chunk1) #0 !dbg !1457 {
entry:
  %tmp.87 = alloca { %Writer.0, %error.0 }, align 8
  %tmp.86 = alloca %IPST.2, align 8
  %tmpv.448 = alloca { i8*, i64 }, align 8
  %tmpv.449 = alloca [1 x %IPST.16], align 8
  %tmpv.452 = alloca { %Writer.0, %error.0 }, align 8
  %sret.actual.96 = alloca { %Writer.0, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %name.chunk0, metadata !1458, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1459
  call void @llvm.dbg.value(metadata i64 %name.chunk1, metadata !1458, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1459
  %field.351 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1460
  %0 = bitcast i8* %field.351 to %Flags.0***, !dbg !1460
  %.field.ld.31 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !1460
  %.ld.74 = load %Flags.0*, %Flags.0** %.field.ld.31, align 8, !dbg !1460
  %icmp.140 = icmp eq %Flags.0* %.ld.74, null, !dbg !1461
  br i1 %icmp.140, label %then.120, label %else.120

then.120:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1461
  unreachable

else.120:                                         ; preds = %entry
  %field.353 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.74, i64 0, i32 5, !dbg !1461
  %.field.ld.33 = load i8, i8* %field.353, align 1, !dbg !1461
  %1 = and i8 %.field.ld.33, 1, !dbg !1462
  %trunc.122 = icmp eq i8 %1, 0, !dbg !1462
  br i1 %trunc.122, label %fallthrough.121, label %then.121

then.121:                                         ; preds = %else.120
  %call.115 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1463
  %name.addr.sroa.0.0.cast.1932.sroa_cast = bitcast { i8*, i64 }* %tmpv.448 to i64*
  store i64 %name.chunk0, i64* %name.addr.sroa.0.0.cast.1932.sroa_cast, align 8
  %name.addr.sroa.3.0.cast.1932.sroa_idx4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.448, i64 0, i32 1
  store i64 %name.chunk1, i64* %name.addr.sroa.3.0.cast.1932.sroa_idx4, align 8
  %cast.1935 = bitcast { i8*, i64 }* %tmpv.448 to i8*, !dbg !1463
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.115, i8* nonnull %cast.1935), !dbg !1463
  %tmp.85.sroa.0.0.cast.1937.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.449, i64 0, i64 0, i32 0, !dbg !1463
  store %_type.0* @string..d, %_type.0** %tmp.85.sroa.0.0.cast.1937.sroa_idx, align 8, !dbg !1463
  %tmp.85.sroa.2.0.cast.1937.sroa_idx5 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.449, i64 0, i64 0, i32 1, !dbg !1463
  store i8* %call.115, i8** %tmp.85.sroa.2.0.cast.1937.sroa_idx5, align 8, !dbg !1463
  %.field.ld.28 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !1464
  %.ld.72 = load %Flags.0*, %Flags.0** %.field.ld.28, align 8, !dbg !1464
  %icmp.139 = icmp eq %Flags.0* %.ld.72, null, !dbg !1465
  br i1 %icmp.139, label %then.122, label %else.122

fallthrough.121:                                  ; preds = %else.120, %else.122
  %cast.1943 = bitcast { %Writer.0, %error.0 }* %tmpv.452 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1943, i8 0, i64 32, i1 false)
  %field.354 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1466
  %2 = bitcast i8* %field.354 to %Writer.1***, !dbg !1466
  %.field.ld.34 = load %Writer.1**, %Writer.1*** %2, align 8, !dbg !1466
  %.ld.76 = load %Writer.1*, %Writer.1** %.field.ld.34, align 8, !dbg !1466
  call void @archive_zip.Writer.Create({ %Writer.0, %error.0 }* nonnull sret %sret.actual.96, i8* nest undef, %Writer.1* %.ld.76, i64 %name.chunk0, i64 %name.chunk1), !dbg !1467
  %cast.1947 = bitcast { %Writer.0, %error.0 }* %sret.actual.96 to i8*, !dbg !1467
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1943, i8* nonnull align 8 %cast.1947, i64 32, i1 false), !dbg !1467
  %field.356 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %tmpv.452, i64 0, i32 1, !dbg !1467
  %cast.1953 = bitcast %error.0* %field.356 to i8*
  %cast.1960 = bitcast { %Writer.0, %error.0 }* %tmp.87 to i8*, !dbg !1468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1960, i8* nonnull align 8 %cast.1947, i64 16, i1 false), !dbg !1468
  %field.358 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %tmp.87, i64 0, i32 1, !dbg !1468
  %cast.1962 = bitcast %error.0* %field.358 to i8*, !dbg !1468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1962, i8* nonnull align 8 %cast.1953, i64 16, i1 false), !dbg !1468
  %cast.1964 = bitcast { %Writer.0, %error.0 }* %sret.formal.7 to i8*, !dbg !1468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1964, i8* nonnull align 8 %cast.1960, i64 32, i1 false), !dbg !1468
  ret void, !dbg !1468

then.122:                                         ; preds = %then.121
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1465
  unreachable

else.122:                                         ; preds = %then.121
  %field.347 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.72, i64 0, i32 0, !dbg !1465
  %.field.ld.30 = load %Logger.0*, %Logger.0** %field.347, align 8, !dbg !1465
  %field.348 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.86, i64 0, i32 0, !dbg !1463
  %cast.1941 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.449, i64 0, i64 0, !dbg !1463
  store %IPST.16* %cast.1941, %IPST.16** %field.348, align 8, !dbg !1463
  %field.349 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.86, i64 0, i32 1, !dbg !1463
  store i64 1, i64* %field.349, align 8, !dbg !1463
  %field.350 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.86, i64 0, i32 2, !dbg !1463
  store i64 1, i64* %field.350, align 8, !dbg !1463
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.30, i64 ptrtoint ([9 x i8]* @const.281 to i64), i64 8, %IPST.2* byval nonnull %tmp.86), !dbg !1463
  br label %fallthrough.121
}

define internal { i64, i64 } @command_line_arguments.BuildJar..func3(i8* nest nocapture readonly %"$closure", i64 %path.chunk0, i64 %path.chunk1, i64 %info.chunk0, i64 %info.chunk1, i64 %err.chunk0, i64 %err.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1469 {
entry:
  %tmpv.457 = alloca i8, align 1
  %sret.actual.99 = alloca { %Writer.0, %error.0 }, align 8
  %sret.actual.100 = alloca { %File.1*, %error.0 }, align 8
  %tmpv.468 = alloca { %File.1* }, align 8
  %sret.actual.101 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !1470, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1471
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !1470, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1471
  call void @llvm.dbg.value(metadata i64 %info.chunk0, metadata !1472, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1473
  call void @llvm.dbg.value(metadata i64 %info.chunk1, metadata !1472, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1473
  call void @llvm.dbg.value(metadata i64 %err.chunk0, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1475
  call void @llvm.dbg.value(metadata i64 %err.chunk1, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1475
  store i8 0, i8* %tmpv.457, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1477
  call void @llvm.dbg.value(metadata i64 0, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1477
  %icmp.141 = icmp eq i64 %err.chunk0, 0, !dbg !1478
  br i1 %icmp.141, label %else.123, label %finally.1

finally.1:                                        ; preds = %cont.39, %entry, %then.126, %then.127, %cont.46, %pad.2, %catchpad.1
  %"$ret29.sroa.0.1" = phi i64 [ 0, %catchpad.1 ], [ %tmpv.458.sroa.4.sroa.0.0.copyload53, %then.126 ], [ %tmpv.465.sroa.3.sroa.0.0.copyload49, %then.127 ], [ %tmpv.470.sroa.3.sroa.0.0.copyload45, %cont.46 ], [ 0, %pad.2 ], [ %err.chunk0, %entry ], [ 0, %cont.39 ]
  %"$ret29.sroa.9.1" = phi i64 [ 0, %catchpad.1 ], [ %tmpv.458.sroa.4.sroa.3.0.copyload55, %then.126 ], [ %tmpv.465.sroa.3.sroa.3.0.copyload51, %then.127 ], [ %tmpv.470.sroa.3.sroa.3.0.copyload47, %cont.46 ], [ 0, %pad.2 ], [ %err.chunk1, %entry ], [ 0, %cont.39 ]
  %ehtmp.1.sroa.0.0 = phi i8* [ %ex2.1.fca.0.extract, %catchpad.1 ], [ undef, %then.126 ], [ undef, %then.127 ], [ undef, %cont.46 ], [ undef, %pad.2 ], [ undef, %entry ], [ undef, %cont.39 ]
  %ehtmp.1.sroa.2.0 = phi i32 [ %ex2.1.fca.1.extract, %catchpad.1 ], [ undef, %then.126 ], [ undef, %then.127 ], [ undef, %cont.46 ], [ undef, %pad.2 ], [ undef, %entry ], [ undef, %cont.39 ]
  %finvar.1.0 = phi i8 [ 0, %catchpad.1 ], [ 1, %then.126 ], [ 1, %then.127 ], [ 1, %cont.46 ], [ 1, %pad.2 ], [ 1, %entry ], [ 1, %cont.39 ]
  call void @llvm.dbg.value(metadata i64 %"$ret29.sroa.9.1", metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1477
  call void @llvm.dbg.value(metadata i64 %"$ret29.sroa.0.1", metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1477
  br label %finish.1

pad.2:                                            ; preds = %cont.45, %else.127, %else.126, %cont.42, %fallthrough.125, %else.125, %then.125, %else.123
  %ex.2 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.457)
          to label %finally.1 unwind label %catchpad.1, !dbg !1480

else.123:                                         ; preds = %entry
  %0 = inttoptr i64 %info.chunk0 to { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, !dbg !1481
  %field.361 = getelementptr inbounds { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %0, i64 0, i32 1, !dbg !1481
  %.field.ld.35 = load i8 (i8*, i8*)*, i8 (i8*, i8*)** %field.361, align 8, !dbg !1481
  %1 = inttoptr i64 %info.chunk1 to i8*, !dbg !1481
  %call.116 = invoke i8 %.field.ld.35(i8* nest undef, i8* %1)
          to label %cont.39 unwind label %pad.2, !dbg !1481

cont.39:                                          ; preds = %else.123
  %2 = and i8 %call.116, 1, !dbg !1482
  %trunc.124 = icmp eq i8 %2, 0, !dbg !1482
  br i1 %trunc.124, label %else.124, label %finally.1

else.124:                                         ; preds = %cont.39
  %field.363 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1483
  %3 = bitcast i8* %field.363 to { i8*, i64 }**, !dbg !1483
  %.field.ld.36 = load { i8*, i64 }*, { i8*, i64 }** %3, align 8, !dbg !1483
  %field.364 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %.field.ld.36, i64 0, i32 1, !dbg !1484
  %.field.ld.37 = load i64, i64* %field.364, align 8, !dbg !1484
  %add.7 = add i64 %.field.ld.37, 1, !dbg !1485
  %icmp.142 = icmp slt i64 %add.7, 0, !dbg !1486
  br i1 %icmp.142, label %then.125, label %else.125

then.125:                                         ; preds = %else.124
  invoke void @__go_runtime_error(i8* nest undef, i32 5)
          to label %fallthrough.125 unwind label %pad.2, !dbg !1486

fallthrough.125:                                  ; preds = %then.125, %cont.41
  %tmpv.462.sroa.2.0 = phi i64 [ undef, %then.125 ], [ %call.117.fca.1.extract, %cont.41 ]
  %tmpv.462.sroa.0.0 = phi i64 [ undef, %then.125 ], [ %call.117.fca.0.extract, %cont.41 ]
  %call.118 = invoke { i64, i64 } @path_filepath.ToSlash(i8* nest undef, i64 %tmpv.462.sroa.0.0, i64 %tmpv.462.sroa.2.0)
          to label %cont.42 unwind label %pad.2, !dbg !1487

else.125:                                         ; preds = %else.124
  %call.117 = invoke { i64, i64 } @__go_string_slice(i8* nest undef, i64 %path.chunk0, i64 %path.chunk1, i64 %add.7, i64 -1)
          to label %cont.41 unwind label %pad.2, !dbg !1486

cont.41:                                          ; preds = %else.125
  %call.117.fca.0.extract = extractvalue { i64, i64 } %call.117, 0, !dbg !1486
  %call.117.fca.1.extract = extractvalue { i64, i64 } %call.117, 1, !dbg !1486
  br label %fallthrough.125

cont.42:                                          ; preds = %fallthrough.125
  %call.118.fca.0.extract = extractvalue { i64, i64 } %call.118, 0, !dbg !1487
  %call.118.fca.1.extract = extractvalue { i64, i64 } %call.118, 1, !dbg !1487
  %field.365 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1488
  %4 = bitcast i8* %field.365 to %__go_descriptor.26***, !dbg !1488
  %.field.ld.38 = load %__go_descriptor.26**, %__go_descriptor.26*** %4, align 8, !dbg !1488
  %.ld.77 = load %__go_descriptor.26*, %__go_descriptor.26** %.field.ld.38, align 8, !dbg !1488
  %5 = getelementptr inbounds %__go_descriptor.26, %__go_descriptor.26* %.ld.77, i64 0, i32 0, !dbg !1488
  %deref.ld.1158 = load void ({ %Writer.0, %error.0 }*, i8*, i64, i64)*, void ({ %Writer.0, %error.0 }*, i8*, i64, i64)** %5, align 8, !dbg !1488
  %cast.1991 = bitcast %__go_descriptor.26* %.ld.77 to i8*, !dbg !1488
  invoke void %deref.ld.1158({ %Writer.0, %error.0 }* nonnull sret %sret.actual.99, i8* nest %cast.1991, i64 %call.118.fca.0.extract, i64 %call.118.fca.1.extract)
          to label %cont.43 unwind label %pad.2, !dbg !1488

cont.43:                                          ; preds = %cont.42
  %tmpv.458.sroa.0.0.cast.1994.sroa_cast = bitcast { %Writer.0, %error.0 }* %sret.actual.99 to i64*, !dbg !1488
  %tmpv.458.sroa.0.0.copyload13 = load i64, i64* %tmpv.458.sroa.0.0.cast.1994.sroa_cast, align 8, !dbg !1488
  %tmpv.458.sroa.3.0.cast.1994.sroa_idx14 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.99, i64 0, i32 0, i32 1, !dbg !1488
  %tmpv.458.sroa.3.0.cast.1994.sroa_cast = bitcast i8** %tmpv.458.sroa.3.0.cast.1994.sroa_idx14 to i64*, !dbg !1488
  %tmpv.458.sroa.3.0.copyload15 = load i64, i64* %tmpv.458.sroa.3.0.cast.1994.sroa_cast, align 8, !dbg !1488
  %tmpv.458.sroa.4.sroa.0.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_idx = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.99, i64 0, i32 1, !dbg !1488
  %tmpv.458.sroa.4.sroa.0.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.458.sroa.4.sroa.0.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_idx to i64*, !dbg !1488
  %tmpv.458.sroa.4.sroa.0.0.copyload53 = load i64, i64* %tmpv.458.sroa.4.sroa.0.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_cast, align 8, !dbg !1488
  call void @llvm.dbg.value(metadata i64 %tmpv.458.sroa.0.0.copyload13, metadata !1489, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1490
  call void @llvm.dbg.value(metadata i64 %tmpv.458.sroa.3.0.copyload15, metadata !1489, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1490
  call void @llvm.dbg.value(metadata i64 %tmpv.458.sroa.4.sroa.0.0.copyload53, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1475
  %icmp.143 = icmp eq i64 %tmpv.458.sroa.4.sroa.0.0.copyload53, 0, !dbg !1491
  br i1 %icmp.143, label %else.126, label %then.126

then.126:                                         ; preds = %cont.43
  %tmpv.458.sroa.4.sroa.3.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_idx54 = getelementptr inbounds { %Writer.0, %error.0 }, { %Writer.0, %error.0 }* %sret.actual.99, i64 0, i32 1, i32 1, !dbg !1488
  %tmpv.458.sroa.4.sroa.3.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_cast = bitcast i8** %tmpv.458.sroa.4.sroa.3.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_idx54 to i64*, !dbg !1488
  %tmpv.458.sroa.4.sroa.3.0.copyload55 = load i64, i64* %tmpv.458.sroa.4.sroa.3.0.tmpv.458.sroa.4.0.cast.1994.sroa_cast.sroa_cast, align 8, !dbg !1488
  call void @llvm.dbg.value(metadata i64 %tmpv.458.sroa.4.sroa.3.0.copyload55, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1475
  call void @llvm.dbg.value(metadata i64 %tmpv.458.sroa.4.sroa.0.0.copyload53, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1477
  call void @llvm.dbg.value(metadata i64 %tmpv.458.sroa.4.sroa.3.0.copyload55, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1477
  br label %finally.1

else.126:                                         ; preds = %cont.43
  invoke void @os.Open({ %File.1*, %error.0 }* nonnull sret %sret.actual.100, i8* nest undef, i64 %path.chunk0, i64 %path.chunk1)
          to label %cont.44 unwind label %pad.2, !dbg !1492

cont.44:                                          ; preds = %else.126
  %tmpv.465.sroa.0.0.cast.2011.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.100, i64 0, i32 0, !dbg !1492
  %tmpv.465.sroa.0.0.copyload6 = load %File.1*, %File.1** %tmpv.465.sroa.0.0.cast.2011.sroa_idx, align 8, !dbg !1492
  %tmpv.465.sroa.3.sroa.0.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.100, i64 0, i32 1, !dbg !1492
  %tmpv.465.sroa.3.sroa.0.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.465.sroa.3.sroa.0.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_idx to i64*, !dbg !1492
  %tmpv.465.sroa.3.sroa.0.0.copyload49 = load i64, i64* %tmpv.465.sroa.3.sroa.0.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_cast, align 8, !dbg !1492
  call void @llvm.dbg.value(metadata %File.1* %tmpv.465.sroa.0.0.copyload6, metadata !1493, metadata !DIExpression()), !dbg !1494
  call void @llvm.dbg.value(metadata i64 %tmpv.465.sroa.3.sroa.0.0.copyload49, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1475
  %icmp.144 = icmp eq i64 %tmpv.465.sroa.3.sroa.0.0.copyload49, 0, !dbg !1495
  br i1 %icmp.144, label %else.127, label %then.127

then.127:                                         ; preds = %cont.44
  %tmpv.465.sroa.3.sroa.3.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_idx50 = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.100, i64 0, i32 1, i32 1, !dbg !1492
  %tmpv.465.sroa.3.sroa.3.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_cast = bitcast i8** %tmpv.465.sroa.3.sroa.3.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_idx50 to i64*, !dbg !1492
  %tmpv.465.sroa.3.sroa.3.0.copyload51 = load i64, i64* %tmpv.465.sroa.3.sroa.3.0.tmpv.465.sroa.3.0.cast.2011.sroa_cast.sroa_cast, align 8, !dbg !1492
  call void @llvm.dbg.value(metadata i64 %tmpv.465.sroa.3.sroa.3.0.copyload51, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1475
  call void @llvm.dbg.value(metadata i64 %tmpv.465.sroa.3.sroa.0.0.copyload49, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1477
  call void @llvm.dbg.value(metadata i64 %tmpv.465.sroa.3.sroa.3.0.copyload51, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1477
  br label %finally.1

else.127:                                         ; preds = %cont.44
  %cast.2020 = bitcast { %File.1* }* %tmpv.468 to i8*
  %field.373 = getelementptr inbounds { %File.1* }, { %File.1* }* %tmpv.468, i64 0, i32 0, !dbg !1496
  store %File.1* %tmpv.465.sroa.0.0.copyload6, %File.1** %field.373, align 8, !dbg !1496
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.457, %__go_descriptor.27* bitcast (i8 (i8*, { %File.1* }*)* @command_line_arguments.command_line_arguments..thunk2 to %__go_descriptor.27*), i8* nonnull %cast.2020)
          to label %cont.45 unwind label %pad.2, !dbg !1496

cont.45:                                          ; preds = %else.127
  %6 = ptrtoint %File.1* %tmpv.465.sroa.0.0.copyload6 to i64, !dbg !1497
  invoke void @io.Copy({ i64, %error.0 }* nonnull sret %sret.actual.101, i8* nest undef, i64 %tmpv.458.sroa.0.0.copyload13, i64 %tmpv.458.sroa.3.0.copyload15, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), i64 %6)
          to label %cont.46 unwind label %pad.2, !dbg !1498

cont.46:                                          ; preds = %cont.45
  %tmpv.470.sroa.3.sroa.0.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.101, i64 0, i32 1, !dbg !1498
  %tmpv.470.sroa.3.sroa.0.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.470.sroa.3.sroa.0.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_idx to i64*, !dbg !1498
  %tmpv.470.sroa.3.sroa.0.0.copyload45 = load i64, i64* %tmpv.470.sroa.3.sroa.0.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_cast, align 8, !dbg !1498
  %tmpv.470.sroa.3.sroa.3.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_idx46 = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.101, i64 0, i32 1, i32 1, !dbg !1498
  %tmpv.470.sroa.3.sroa.3.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_cast = bitcast i8** %tmpv.470.sroa.3.sroa.3.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_idx46 to i64*, !dbg !1498
  %tmpv.470.sroa.3.sroa.3.0.copyload47 = load i64, i64* %tmpv.470.sroa.3.sroa.3.0.tmpv.470.sroa.3.0.cast.2031.sroa_cast.sroa_cast, align 8, !dbg !1498
  call void @llvm.dbg.value(metadata i64 %tmpv.470.sroa.3.sroa.0.0.copyload45, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1475
  call void @llvm.dbg.value(metadata i64 %tmpv.470.sroa.3.sroa.3.0.copyload47, metadata !1474, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1475
  call void @llvm.dbg.value(metadata i64 %tmpv.470.sroa.3.sroa.0.0.copyload45, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1477
  call void @llvm.dbg.value(metadata i64 %tmpv.470.sroa.3.sroa.3.0.copyload47, metadata !1476, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1477
  br label %finally.1

catchpad.1:                                       ; preds = %pad.2
  %ex2.1 = landingpad { i8*, i32 }
          cleanup
  %ex2.1.fca.0.extract = extractvalue { i8*, i32 } %ex2.1, 0
  %ex2.1.fca.1.extract = extractvalue { i8*, i32 } %ex2.1, 1
  br label %finally.1

pad.3:                                            ; preds = %finish.1
  %ex.3 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.457), !dbg !1480
  br label %finish.1

finish.1:                                         ; preds = %pad.3, %finally.1
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.457)
          to label %cont.48 unwind label %pad.3, !dbg !1480

cont.48:                                          ; preds = %finish.1
  %icmp.145 = icmp eq i8 %finvar.1.0, 1
  br i1 %icmp.145, label %finret.1, label %finres.1

finres.1:                                         ; preds = %cont.48
  %excv.1.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.1.sroa.0.0, 0
  %excv.1.fca.1.insert = insertvalue { i8*, i32 } %excv.1.fca.0.insert, i32 %ehtmp.1.sroa.2.0, 1
  resume { i8*, i32 } %excv.1.fca.1.insert

finret.1:                                         ; preds = %cont.48
  %ld.194.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret29.sroa.0.1", 0, !dbg !1499
  %ld.194.fca.1.insert = insertvalue { i64, i64 } %ld.194.fca.0.insert, i64 %"$ret29.sroa.9.1", 1, !dbg !1499
  ret { i64, i64 } %ld.194.fca.1.insert, !dbg !1499
}

declare { i64, i64 } @path_filepath.Ext(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @__go_string_slice(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @path_filepath.ToSlash(i8*, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk2(i8* nest nocapture readnone %nest.72, { %File.1* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1500 {
entry:
  call void @llvm.dbg.value(metadata { %File.1* }* %__go_thunk_parameter, metadata !1501, metadata !DIExpression()), !dbg !1502
  call void @llvm.dbg.value(metadata i8 0, metadata !1503, metadata !DIExpression()), !dbg !1502
  %call.468 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk2, %label.0)), !dbg !1502
  %0 = and i8 %call.468, 1, !dbg !1502
  %trunc.815 = icmp eq i8 %0, 0, !dbg !1502
  br i1 %trunc.815, label %else.815, label %label.0

else.815:                                         ; preds = %entry
  %field.1839 = getelementptr inbounds { %File.1* }, { %File.1* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1502
  %.field.ld.229 = load %File.1*, %File.1** %field.1839, align 8, !dbg !1502
  %call.469 = call { i64, i64 } @os.File.Close(i8* nest undef, %File.1* %.field.ld.229), !dbg !1502
  br label %label.0

label.0:                                          ; preds = %entry, %else.815
  call void @llvm.dbg.value(metadata i8 0, metadata !1503, metadata !DIExpression()), !dbg !1502
  ret i8 0, !dbg !1502
}

define { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.ParseTargets(i8* nest nocapture readnone %nest.25, i64 %a.chunk0, i64 %a.chunk1) #0 !dbg !1504 {
entry:
  %sret.actual.104 = alloca %IPST.3, align 8
  %tmpv.484 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.492 = alloca { i8*, i64 }, align 8
  %tmpv.495 = alloca { i8*, i64 }, align 8
  %tmpv.498 = alloca { i8*, i64 }, align 8
  %tmpv.501 = alloca { i8*, i64 }, align 8
  %tmpv.504 = alloca { i8*, i64 }, align 8
  %tmpv.510 = alloca { i8*, i64 }, align 8
  %tmpv.513 = alloca { i8*, i64 }, align 8
  %tmpv.516 = alloca { i8*, i64 }, align 8
  %tmpv.519 = alloca { i8*, i64 }, align 8
  %tmpv.522 = alloca { i8*, i64 }, align 8
  %tmpv.525 = alloca { i8*, i64 }, align 8
  %tmpv.531 = alloca { i8*, i64 }, align 8
  %tmpv.534 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata i64 %a.chunk0, metadata !1507, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1508
  call void @llvm.dbg.value(metadata i64 %a.chunk1, metadata !1507, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1508
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1509, metadata !DIExpression()), !dbg !1510
  call void @strings.Fields(%IPST.3* nonnull sret %sret.actual.104, i8* nest undef, i64 %a.chunk0, i64 %a.chunk1), !dbg !1511
  %targetsSlice.sroa.5.0.cast.2103.sroa_idx42 = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.104, i64 0, i32 1
  %targetsSlice.sroa.5.0.copyload = load i64, i64* %targetsSlice.sroa.5.0.cast.2103.sroa_idx42, align 8
  call void @llvm.dbg.value(metadata i64 %targetsSlice.sroa.5.0.copyload, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1514
  call void @llvm.dbg.value(metadata %IPST.3* %sret.actual.104, metadata !1513, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !1514
  %icmp.147 = icmp eq i64 %targetsSlice.sroa.5.0.copyload, 0, !dbg !1515
  br i1 %icmp.147, label %fallthrough.129.thread, label %fallthrough.129

fallthrough.129:                                  ; preds = %entry
  %targetsSlice.sroa.0.0.cast.2103.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.104, i64 0, i32 0
  %targetsSlice.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %targetsSlice.sroa.0.0.cast.2103.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %targetsSlice.sroa.0.0.copyload, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1514
  call void @llvm.dbg.value(metadata i64 %targetsSlice.sroa.5.0.copyload, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1514
  call void @llvm.dbg.value(metadata { i8*, i64 }* %targetsSlice.sroa.0.0.copyload, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1514
  %call.120 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7struct.4.5 to i8*), i64 0, i64 16, i64 16, i8* null), !dbg !1516
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.120, metadata !1517, metadata !DIExpression()), !dbg !1518
  %icmp.17047 = icmp sgt i64 %targetsSlice.sroa.5.0.copyload, 0, !dbg !1519
  br i1 %icmp.17047, label %else.131.lr.ph, label %else.142

else.131.lr.ph:                                   ; preds = %fallthrough.129.thread, %fallthrough.129
  %call.12053 = phi { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* [ %call.12049, %fallthrough.129.thread ], [ %call.120, %fallthrough.129 ]
  %targetsSlice.sroa.5.052 = phi i64 [ 1, %fallthrough.129.thread ], [ %targetsSlice.sroa.5.0.copyload, %fallthrough.129 ]
  %targetsSlice.sroa.0.051 = phi { i8*, i64 }* [ %cast.2109, %fallthrough.129.thread ], [ %targetsSlice.sroa.0.0.copyload, %fallthrough.129 ]
  %cast.2146 = bitcast { i8*, i64 }* %tmpv.492 to i8*
  %cast.2151 = bitcast { i8*, i64 }* %tmpv.495 to i8*
  %cast.2156 = bitcast { i8*, i64 }* %tmpv.498 to i8*
  %cast.2161 = bitcast { i8*, i64 }* %tmpv.501 to i8*
  %cast.2166 = bitcast { i8*, i64 }* %tmpv.504 to i8*
  %cast.2179 = bitcast { i8*, i64 }* %tmpv.510 to i8*
  %i.sroa.0.0.cast.2184.sroa_cast = bitcast { i8*, i64 }* %tmpv.513 to i64*
  %i.sroa.7.0.cast.2184.sroa_idx31 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.513, i64 0, i32 1
  %cast.2187 = bitcast { i8*, i64 }* %tmpv.513 to i8*
  %cast.2191 = bitcast { i8*, i64 }* %tmpv.516 to i8*
  %cast.2196 = bitcast { i8*, i64 }* %tmpv.519 to i8*
  %cast.2201 = bitcast { i8*, i64 }* %tmpv.522 to i8*
  %cast.2206 = bitcast { i8*, i64 }* %tmpv.525 to i8*
  %cast.2219 = bitcast { i8*, i64 }* %tmpv.531 to i8*
  %i.sroa.0.0.cast.2224.sroa_cast = bitcast { i8*, i64 }* %tmpv.534 to i64*
  %i.sroa.7.0.cast.2224.sroa_idx33 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.534, i64 0, i32 1
  %cast.2227 = bitcast { i8*, i64 }* %tmpv.534 to i8*
  br label %else.131

fallthrough.129.thread:                           ; preds = %entry
  %cast.2107 = bitcast [1 x { i8*, i64 }]* %tmpv.484 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2107, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.287 to i8*), i64 16, i1 false)
  %cast.2109 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.484, i64 0, i64 0, !dbg !1521
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.2109, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1514
  call void @llvm.dbg.value(metadata i64 1, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1514
  call void @llvm.dbg.value(metadata i64 1, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1514
  call void @llvm.dbg.value(metadata i64 %targetsSlice.sroa.5.0.copyload, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1514
  call void @llvm.dbg.value(metadata { i8*, i64 }* %targetsSlice.sroa.0.0.copyload, metadata !1513, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1514
  %call.12049 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7struct.4.5 to i8*), i64 0, i64 16, i64 16, i8* null), !dbg !1516
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.120, metadata !1517, metadata !DIExpression()), !dbg !1518
  br label %else.131.lr.ph

else.131:                                         ; preds = %else.131.lr.ph, %label.3
  %tmpv.485.048 = phi i64 [ 0, %else.131.lr.ph ], [ %add.8, %label.3 ]
  %ptroff.9 = getelementptr { i8*, i64 }, { i8*, i64 }* %targetsSlice.sroa.0.051, i64 %tmpv.485.048, !dbg !1519
  %tmpv.486.sroa.0.0.cast.2137.sroa_cast = bitcast { i8*, i64 }* %ptroff.9 to i64*, !dbg !1519
  %tmpv.486.sroa.0.0.copyload37 = load i64, i64* %tmpv.486.sroa.0.0.cast.2137.sroa_cast, align 8, !dbg !1519
  %tmpv.486.sroa.3.0.cast.2137.sroa_idx38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %targetsSlice.sroa.0.051, i64 %tmpv.485.048, i32 1, !dbg !1519
  %tmpv.486.sroa.3.0.copyload39 = load i64, i64* %tmpv.486.sroa.3.0.cast.2137.sroa_idx38, align 8, !dbg !1519
  call void @llvm.dbg.value(metadata i64 %tmpv.486.sroa.0.0.copyload37, metadata !1522, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1523
  call void @llvm.dbg.value(metadata i64 %tmpv.486.sroa.3.0.copyload39, metadata !1522, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1523
  %call.121 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([8 x i8]* @const.284 to i64), i64 7), !dbg !1524
  %icmp.150 = icmp eq i8 %call.121, 1, !dbg !1524
  br i1 %icmp.150, label %else.132, label %label.2

else.132:                                         ; preds = %else.131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2146, i8* align 8 bitcast ({ i8*, i64 }* @const.295 to i8*), i64 16, i1 false)
  %call.122 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2146), !dbg !1525
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2151, i8* align 8 bitcast ({ i8*, i64 }* @const.297 to i8*), i64 16, i1 false)
  %call.123 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2151), !dbg !1526
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2156, i8* align 8 bitcast ({ i8*, i64 }* @const.299 to i8*), i64 16, i1 false)
  %call.124 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2156), !dbg !1527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2161, i8* align 8 bitcast ({ i8*, i64 }* @const.301 to i8*), i64 16, i1 false)
  %call.125 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2161), !dbg !1528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2166, i8* align 8 bitcast ({ i8*, i64 }* @const.303 to i8*), i64 16, i1 false)
  %call.126 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2166), !dbg !1529
  br label %label.3

label.2:                                          ; preds = %else.131
  %call.127 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([12 x i8]* @const.296 to i64), i64 11), !dbg !1530
  %icmp.152 = icmp eq i8 %call.127, 1, !dbg !1530
  br i1 %icmp.152, label %else.136, label %fallthrough.133

label.3:                                          ; preds = %fallthrough.140, %else.141, %else.137, %else.136, %else.132
  %add.8 = add nuw nsw i64 %tmpv.485.048, 1, !dbg !1519
  %icmp.170 = icmp slt i64 %add.8, %targetsSlice.sroa.5.052, !dbg !1519
  br i1 %icmp.170, label %else.131, label %else.142

fallthrough.133:                                  ; preds = %label.2
  %call.128 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([14 x i8]* @const.298 to i64), i64 13), !dbg !1530
  %icmp.153 = icmp eq i8 %call.128, 1, !dbg !1530
  br i1 %icmp.153, label %else.136, label %fallthrough.134

fallthrough.134:                                  ; preds = %fallthrough.133
  %call.129 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([12 x i8]* @const.300 to i64), i64 11), !dbg !1530
  %icmp.155 = icmp eq i8 %call.129, 1, !dbg !1530
  br i1 %icmp.155, label %else.136, label %fallthrough.135

fallthrough.135:                                  ; preds = %fallthrough.134
  %call.130 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([14 x i8]* @const.302 to i64), i64 13), !dbg !1530
  %icmp.157 = icmp eq i8 %call.130, 1, !dbg !1530
  br i1 %icmp.157, label %else.136, label %label.4

else.136:                                         ; preds = %label.2, %fallthrough.133, %fallthrough.134, %fallthrough.135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2179, i8* align 8 bitcast ({ i8*, i64 }* @const.295 to i8*), i64 16, i1 false)
  %call.131 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2179), !dbg !1531
  store i64 %tmpv.486.sroa.0.0.copyload37, i64* %i.sroa.0.0.cast.2184.sroa_cast, align 8
  store i64 %tmpv.486.sroa.3.0.copyload39, i64* %i.sroa.7.0.cast.2184.sroa_idx31, align 8
  %call.132 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2187), !dbg !1532
  br label %label.3

label.4:                                          ; preds = %fallthrough.135
  %call.133 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([4 x i8]* @const.285 to i64), i64 3), !dbg !1533
  %icmp.160 = icmp eq i8 %call.133, 1, !dbg !1533
  br i1 %icmp.160, label %else.137, label %label.5

else.137:                                         ; preds = %label.4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2191, i8* align 8 bitcast ({ i8*, i64 }* @const.304 to i8*), i64 16, i1 false)
  %call.134 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2191), !dbg !1534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2196, i8* align 8 bitcast ({ i8*, i64 }* @const.306 to i8*), i64 16, i1 false)
  %call.135 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2196), !dbg !1535
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2201, i8* align 8 bitcast ({ i8*, i64 }* @const.308 to i8*), i64 16, i1 false)
  %call.136 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2201), !dbg !1536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2206, i8* align 8 bitcast ({ i8*, i64 }* @const.310 to i8*), i64 16, i1 false)
  %call.137 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2206), !dbg !1537
  br label %label.3

label.5:                                          ; preds = %label.4
  %call.138 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([8 x i8]* @const.305 to i64), i64 7), !dbg !1538
  %icmp.162 = icmp eq i8 %call.138, 1, !dbg !1538
  br i1 %icmp.162, label %else.141, label %fallthrough.138

fallthrough.138:                                  ; preds = %label.5
  %call.139 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([10 x i8]* @const.307 to i64), i64 9), !dbg !1538
  %icmp.163 = icmp eq i8 %call.139, 1, !dbg !1538
  br i1 %icmp.163, label %else.141, label %fallthrough.139

fallthrough.139:                                  ; preds = %fallthrough.138
  %call.140 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([8 x i8]* @const.311 to i64), i64 7), !dbg !1538
  %icmp.165 = icmp eq i8 %call.140, 1, !dbg !1538
  br i1 %icmp.165, label %else.141, label %fallthrough.140

fallthrough.140:                                  ; preds = %fallthrough.139
  %call.141 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.486.sroa.0.0.copyload37, i64 %tmpv.486.sroa.3.0.copyload39, i64 ptrtoint ([10 x i8]* @const.309 to i64), i64 9), !dbg !1538
  %icmp.167 = icmp eq i8 %call.141, 1, !dbg !1538
  br i1 %icmp.167, label %else.141, label %label.3

else.141:                                         ; preds = %label.5, %fallthrough.138, %fallthrough.139, %fallthrough.140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2219, i8* align 8 bitcast ({ i8*, i64 }* @const.304 to i8*), i64 16, i1 false)
  %call.142 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2219), !dbg !1539
  store i64 %tmpv.486.sroa.0.0.copyload37, i64* %i.sroa.0.0.cast.2224.sroa_cast, align 8
  store i64 %tmpv.486.sroa.3.0.copyload39, i64* %i.sroa.7.0.cast.2224.sroa_idx33, align 8
  %call.143 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12053, i8* nonnull %cast.2227), !dbg !1540
  br label %label.3

else.142:                                         ; preds = %label.3, %fallthrough.129
  %call.12054 = phi { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* [ %call.120, %fallthrough.129 ], [ %call.12053, %label.3 ]
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.120, metadata !1509, metadata !DIExpression()), !dbg !1510
  ret { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12054, !dbg !1541
}

declare void @strings.Fields(%IPST.3*, i8*, i64, i64) local_unnamed_addr #0

declare i8* @runtime.mapassign(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Build(i8* nest nocapture readnone %nest.26, %Flags.0* %flags, %IPST.3* byval nocapture readonly %args) #0 !dbg !1542 {
entry:
  call void @llvm.dbg.declare(metadata %IPST.3* %args, metadata !1545, metadata !DIExpression()), !dbg !1546
  %iosDir = alloca { i8*, i64 }, align 8
  %sret.actual.105 = alloca { { i8*, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %flags, metadata !1547, metadata !DIExpression()), !dbg !1548
  %0 = bitcast { i8*, i64 }* %iosDir to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  call void @command_line_arguments.PackageDir({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.105, i8* nest undef, %Flags.0* %flags, i64 ptrtoint ([19 x i8]* @const.313 to i64), i64 18), !dbg !1549
  %tmpv.537.sroa.0.0.cast.2234.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.105 to i8*, !dbg !1549
  %tmpv.537.sroa.3.0.cast.2234.sroa_idx14 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.105, i64 0, i32 1, i32 0, !dbg !1549
  %tmpv.537.sroa.3.0.copyload15 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.537.sroa.3.0.cast.2234.sroa_idx14, align 8, !dbg !1549
  %tmpv.537.sroa.4.0.cast.2234.sroa_idx16 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.105, i64 0, i32 1, i32 1, !dbg !1549
  %1 = bitcast i8** %tmpv.537.sroa.4.0.cast.2234.sroa_idx16 to i64*, !dbg !1549
  %tmpv.537.sroa.4.0.copyload1723 = load i64, i64* %1, align 8, !dbg !1549
  %iosDir24 = bitcast { i8*, i64 }* %iosDir to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %iosDir24, i8* nonnull align 8 %tmpv.537.sroa.0.0.cast.2234.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.537.sroa.3.0.copyload15, metadata !1551, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1552
  call void @llvm.dbg.value(metadata i8** %tmpv.537.sroa.4.0.cast.2234.sroa_idx16, metadata !1551, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1552
  %icmp.171 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.537.sroa.3.0.copyload15, null, !dbg !1553
  br i1 %icmp.171, label %else.143, label %then.143

then.143:                                         ; preds = %entry
  %2 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.537.sroa.3.0.copyload15 to i64, !dbg !1554
  call void @llvm.dbg.value(metadata i64 %2, metadata !1555, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1556
  call void @llvm.dbg.value(metadata i64 %tmpv.537.sroa.4.0.copyload1723, metadata !1555, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1556
  %ld.256.fca.0.insert = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !1554
  %ld.256.fca.1.insert = insertvalue { i64, i64 } %ld.256.fca.0.insert, i64 %tmpv.537.sroa.4.0.copyload1723, 1, !dbg !1554
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !1554
  ret { i64, i64 } %ld.256.fca.1.insert, !dbg !1554

else.143:                                         ; preds = %entry
  %icmp.172 = icmp eq %Flags.0* %flags, null, !dbg !1557
  br i1 %icmp.172, label %then.144, label %else.144

then.144:                                         ; preds = %else.143
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1557
  unreachable

else.144:                                         ; preds = %else.143
  %field.401 = getelementptr inbounds %Flags.0, %Flags.0* %flags, i64 0, i32 9, !dbg !1557
  %runtime.writeBarrier.ld.8 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1558
  %icmp.174 = icmp eq i32 %runtime.writeBarrier.ld.8, 0, !dbg !1558
  %cast.2249 = bitcast { i8*, i64 }* %field.401 to i8*, !dbg !1558
  br i1 %icmp.174, label %else.146, label %else.145

fallthrough.145:                                  ; preds = %else.145, %else.146
  %call.144 = call { i64, i64 } @command_line_arguments.Bind(i8* nest undef, %Flags.0* nonnull %flags, %IPST.3* byval nonnull %args), !dbg !1559
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !1560
  ret { i64, i64 } %call.144, !dbg !1560

else.145:                                         ; preds = %else.144
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %cast.2249, i8* nonnull %0), !dbg !1558
  br label %fallthrough.145

else.146:                                         ; preds = %else.144
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2249, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !1558
  br label %fallthrough.145
}

define void @command_line_arguments.PackageDir({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.12, i8* nest nocapture readnone %nest.33, %Flags.0* %f, i64 %pkgpath.chunk0, i64 %pkgpath.chunk1) #0 !dbg !1561 {
entry:
  %tmp.193 = alloca [2 x { i8*, i64 }], align 8
  %tmp.190 = alloca %IPST.2, align 8
  %tmpv.1314 = alloca { i8*, i64 }, align 8
  %tmpv.1315 = alloca [1 x %IPST.16], align 8
  %sret.actual.238 = alloca { %Package.0*, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !1562, metadata !DIExpression()), !dbg !1563
  call void @llvm.dbg.value(metadata i64 %pkgpath.chunk0, metadata !1564, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1565
  call void @llvm.dbg.value(metadata i64 %pkgpath.chunk1, metadata !1564, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1565
  %call.280 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !1566
  %0 = and i8 %call.280, 1, !dbg !1567
  %trunc.469 = icmp eq i8 %0, 0, !dbg !1567
  br i1 %trunc.469, label %fallthrough.468, label %then.468

then.468:                                         ; preds = %entry
  %call.279 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1568
  %pkgpath.addr.sroa.0.0.cast.4507.sroa_cast = bitcast { i8*, i64 }* %tmpv.1314 to i64*
  store i64 %pkgpath.chunk0, i64* %pkgpath.addr.sroa.0.0.cast.4507.sroa_cast, align 8
  %pkgpath.addr.sroa.4.0.cast.4507.sroa_idx65 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1314, i64 0, i32 1
  store i64 %pkgpath.chunk1, i64* %pkgpath.addr.sroa.4.0.cast.4507.sroa_idx65, align 8
  %cast.4510 = bitcast { i8*, i64 }* %tmpv.1314 to i8*, !dbg !1568
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.279, i8* nonnull %cast.4510), !dbg !1568
  %tmp.189.sroa.0.0.cast.4512.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1315, i64 0, i64 0, i32 0, !dbg !1568
  store %_type.0* @string..d, %_type.0** %tmp.189.sroa.0.0.cast.4512.sroa_idx, align 8, !dbg !1568
  %tmp.189.sroa.2.0.cast.4512.sroa_idx68 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1315, i64 0, i64 0, i32 1, !dbg !1568
  store i8* %call.279, i8** %tmp.189.sroa.2.0.cast.4512.sroa_idx68, align 8, !dbg !1568
  %icmp.612 = icmp eq %Flags.0* %f, null, !dbg !1569
  br i1 %icmp.612, label %then.469, label %else.469

fallthrough.468:                                  ; preds = %entry, %else.469
  %call.281 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !1570
  %1 = and i8 %call.281, 1, !dbg !1571
  %trunc.472 = icmp eq i8 %1, 0, !dbg !1571
  br i1 %trunc.472, label %else.470, label %then.470

then.469:                                         ; preds = %then.468
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1569
  unreachable

else.469:                                         ; preds = %then.468
  %field.1074 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !1569
  %.field.ld.125 = load %Logger.0*, %Logger.0** %field.1074, align 8, !dbg !1569
  %field.1075 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.190, i64 0, i32 0, !dbg !1568
  %cast.4516 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1315, i64 0, i64 0, !dbg !1568
  store %IPST.16* %cast.4516, %IPST.16** %field.1075, align 8, !dbg !1568
  %field.1076 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.190, i64 0, i32 1, !dbg !1568
  store i64 1, i64* %field.1076, align 8, !dbg !1568
  %field.1077 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.190, i64 0, i32 2, !dbg !1568
  store i64 1, i64* %field.1077, align 8, !dbg !1568
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.125, i64 ptrtoint ([19 x i8]* @const.468 to i64), i64 18, %IPST.2* byval nonnull %tmp.190), !dbg !1568
  br label %fallthrough.468

then.470:                                         ; preds = %fallthrough.468
  call void @go_build.Context.Import({ %Package.0*, %error.0 }* nonnull sret %sret.actual.238, i8* nest undef, %Context.1* nonnull @go_build.Default, i64 %pkgpath.chunk0, i64 %pkgpath.chunk1, i64 0, i64 0, i64 1), !dbg !1572
  %tmpv.1317.sroa.0.0.cast.4522.sroa_idx = getelementptr inbounds { %Package.0*, %error.0 }, { %Package.0*, %error.0 }* %sret.actual.238, i64 0, i32 0, !dbg !1572
  %tmpv.1317.sroa.0.0.copyload4 = load %Package.0*, %Package.0** %tmpv.1317.sroa.0.0.cast.4522.sroa_idx, align 8, !dbg !1572
  %tmpv.1317.sroa.3.sroa.0.0.tmpv.1317.sroa.3.0.cast.4522.sroa_cast.sroa_idx = getelementptr inbounds { %Package.0*, %error.0 }, { %Package.0*, %error.0 }* %sret.actual.238, i64 0, i32 1, i32 0, !dbg !1572
  %tmpv.1317.sroa.3.sroa.0.0.copyload16 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1317.sroa.3.sroa.0.0.tmpv.1317.sroa.3.0.cast.4522.sroa_cast.sroa_idx, align 8, !dbg !1572
  call void @llvm.dbg.value(metadata %Package.0* %tmpv.1317.sroa.0.0.copyload4, metadata !1574, metadata !DIExpression()), !dbg !1575
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1317.sroa.3.sroa.0.0.copyload16, metadata !1576, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1575
  %icmp.613 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1317.sroa.3.sroa.0.0.copyload16, null, !dbg !1577
  br i1 %icmp.613, label %else.471, label %then.471

else.470:                                         ; preds = %fallthrough.468
  %cast.4559 = bitcast [2 x { i8*, i64 }]* %tmp.193 to i8*, !dbg !1578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4559, i8* align 8 bitcast ({ i8*, i64 }* @const.472 to i8*), i64 16, i1 false), !dbg !1578
  %pkgpath.addr.sroa.0.0.cast.4561.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.193, i64 0, i64 1, !dbg !1578
  %pkgpath.addr.sroa.0.0.cast.4561.sroa_cast = bitcast { i8*, i64 }* %pkgpath.addr.sroa.0.0.cast.4561.sroa_idx to i64*, !dbg !1578
  store i64 %pkgpath.chunk0, i64* %pkgpath.addr.sroa.0.0.cast.4561.sroa_cast, align 8, !dbg !1578
  %pkgpath.addr.sroa.4.0.cast.4561.sroa_idx66 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.193, i64 0, i64 1, i32 1, !dbg !1578
  store i64 %pkgpath.chunk1, i64* %pkgpath.addr.sroa.4.0.cast.4561.sroa_idx66, align 8, !dbg !1578
  %call.282 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.193), !dbg !1578
  %call.282.fca.0.extract = extractvalue { i64, i64 } %call.282, 0, !dbg !1578
  %call.282.fca.1.extract = extractvalue { i64, i64 } %call.282, 1, !dbg !1578
  call void @llvm.dbg.value(metadata i64 %call.282.fca.0.extract, metadata !1579, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1580
  call void @llvm.dbg.value(metadata i64 %call.282.fca.1.extract, metadata !1579, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1580
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !1581, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1582
  call void @llvm.dbg.value(metadata i8* null, metadata !1581, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1582
  %tmp.194.sroa.0.0.cast.4577.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.12 to i64*, !dbg !1583
  store i64 %call.282.fca.0.extract, i64* %tmp.194.sroa.0.0.cast.4577.sroa_cast, align 8, !dbg !1583
  %tmp.194.sroa.2.0.cast.4577.sroa_idx75 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.12, i64 0, i32 0, i32 1, !dbg !1583
  store i64 %call.282.fca.1.extract, i64* %tmp.194.sroa.2.0.cast.4577.sroa_idx75, align 8, !dbg !1583
  %tmp.194.sroa.3.0.cast.4577.sroa_idx76 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.12, i64 0, i32 1, i32 0, !dbg !1583
  %2 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.194.sroa.3.0.cast.4577.sroa_idx76 to i8*, !dbg !1583
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !1583
  ret void, !dbg !1583

then.471:                                         ; preds = %then.470
  %tmpv.1317.sroa.3.sroa.3.0.tmpv.1317.sroa.3.0.cast.4522.sroa_cast.sroa_idx17 = getelementptr inbounds { %Package.0*, %error.0 }, { %Package.0*, %error.0 }* %sret.actual.238, i64 0, i32 1, i32 1, !dbg !1572
  %3 = bitcast i8** %tmpv.1317.sroa.3.sroa.3.0.tmpv.1317.sroa.3.0.cast.4522.sroa_cast.sroa_idx17 to i64*, !dbg !1572
  %tmpv.1317.sroa.3.sroa.3.0.copyload1878 = load i64, i64* %3, align 8, !dbg !1572
  call void @llvm.dbg.value(metadata i8** %tmpv.1317.sroa.3.sroa.3.0.tmpv.1317.sroa.3.0.cast.4522.sroa_cast.sroa_idx17, metadata !1576, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1575
  call void @llvm.dbg.value(metadata i64 0, metadata !1579, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1580
  call void @llvm.dbg.value(metadata i64 0, metadata !1579, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1580
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1317.sroa.3.sroa.0.0.copyload16, metadata !1581, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1582
  call void @llvm.dbg.value(metadata i8** %tmpv.1317.sroa.3.sroa.3.0.tmpv.1317.sroa.3.0.cast.4522.sroa_cast.sroa_idx17, metadata !1581, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1582
  %tmp.191.sroa.3.0.cast.4539.sroa_idx70 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.12, i64 0, i32 1, i32 0, !dbg !1584
  %4 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.12 to i8*, !dbg !1584
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false), !dbg !1584
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1317.sroa.3.sroa.0.0.copyload16, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.191.sroa.3.0.cast.4539.sroa_idx70, align 8, !dbg !1584
  %tmp.191.sroa.4.0.cast.4539.sroa_idx71 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.12, i64 0, i32 1, i32 1, !dbg !1584
  %5 = bitcast i8** %tmp.191.sroa.4.0.cast.4539.sroa_idx71 to i64*, !dbg !1584
  store i64 %tmpv.1317.sroa.3.sroa.3.0.copyload1878, i64* %5, align 8, !dbg !1584
  ret void, !dbg !1584

else.471:                                         ; preds = %then.470
  %icmp.614 = icmp eq %Package.0* %tmpv.1317.sroa.0.0.copyload4, null, !dbg !1585
  br i1 %icmp.614, label %then.472, label %else.472

then.472:                                         ; preds = %else.471
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1585
  unreachable

else.472:                                         ; preds = %else.471
  %tmpv.1322.sroa.0.0.cast.4544.sroa_cast = bitcast %Package.0* %tmpv.1317.sroa.0.0.copyload4 to i64*
  %tmpv.1322.sroa.0.0.copyload = load i64, i64* %tmpv.1322.sroa.0.0.cast.4544.sroa_cast, align 8
  %tmpv.1322.sroa.2.0.cast.4544.sroa_idx63 = getelementptr inbounds %Package.0, %Package.0* %tmpv.1317.sroa.0.0.copyload4, i64 0, i32 0, i32 1
  %tmpv.1322.sroa.2.0.copyload = load i64, i64* %tmpv.1322.sroa.2.0.cast.4544.sroa_idx63, align 8
  call void @llvm.dbg.value(metadata i64 %tmpv.1322.sroa.0.0.copyload, metadata !1579, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1580
  call void @llvm.dbg.value(metadata i64 %tmpv.1322.sroa.2.0.copyload, metadata !1579, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1580
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !1581, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1582
  call void @llvm.dbg.value(metadata i8* null, metadata !1581, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1582
  %tmp.192.sroa.0.0.cast.4555.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.12 to i64*, !dbg !1586
  store i64 %tmpv.1322.sroa.0.0.copyload, i64* %tmp.192.sroa.0.0.cast.4555.sroa_cast, align 8, !dbg !1586
  %tmp.192.sroa.2.0.cast.4555.sroa_idx72 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.12, i64 0, i32 0, i32 1, !dbg !1586
  store i64 %tmpv.1322.sroa.2.0.copyload, i64* %tmp.192.sroa.2.0.cast.4555.sroa_idx72, align 8, !dbg !1586
  %tmp.192.sroa.3.0.cast.4555.sroa_idx73 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.12, i64 0, i32 1, i32 0, !dbg !1586
  %6 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.192.sroa.3.0.cast.4555.sroa_idx73 to i8*, !dbg !1586
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false), !dbg !1586
  ret void, !dbg !1586
}

define { i64, i64 } @command_line_arguments.Bind(i8* nest nocapture readnone %nest.27, %Flags.0* %param, %IPST.3* byval nocapture readonly %args) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1587 {
entry:
  %tmp.147 = alloca %IPST.3, align 8
  %tmp.146 = alloca %IPST.3, align 8
  %tmp.145 = alloca %IPST.3, align 8
  %tmp.144 = alloca %IPST.3, align 8
  %tmp.143 = alloca [2 x { i8*, i64 }], align 8
  %tmp.142 = alloca %IPST.3, align 8
  %tmp.141 = alloca [3 x { i8*, i64 }], align 8
  %tmp.139 = alloca [4 x { i8*, i64 }], align 8
  %tmp.138 = alloca %IPST.3, align 8
  %tmp.137 = alloca %IPST.3, align 8
  %tmp.136 = alloca %IPST.3, align 8
  %tmp.135 = alloca %IPST.3, align 8
  %tmp.134 = alloca %IPST.3, align 8
  %tmp.133 = alloca %IPST.3, align 8
  %tmp.132 = alloca %IPST.3, align 8
  %tmp.131 = alloca %IPST.3, align 8
  %tmp.130 = alloca %IPST.3, align 8
  %tmp.129 = alloca %IPST.3, align 8
  %tmp.128 = alloca %IPST.2, align 8
  %tmp.125 = alloca %IPST.2, align 8
  %tmp.123 = alloca %IPST.3, align 8
  %tmp.122 = alloca %IPST.3, align 8
  %tmp.117 = alloca %IPST.3, align 8
  %tmp.116 = alloca %IPST.3, align 8
  %tmp.113 = alloca %IPST.3, align 8
  %tmp.106 = alloca %IPST.2, align 8
  %tmp.103 = alloca %IPST.2, align 8
  %tmp.101 = alloca %IPST.3, align 8
  %tmp.100 = alloca %IPST.3, align 8
  %tmp.99 = alloca %IPST.3, align 8
  %tmp.98 = alloca %IPST.3, align 8
  %tmp.97 = alloca %IPST.2, align 8
  %tmp.92 = alloca %IPST.3, align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %args, metadata !1588, metadata !DIExpression()), !dbg !1589
  %tmpv.545 = alloca %Flags.0*, align 8
  %tmpv.546 = alloca i8, align 1
  %installedVersion = alloca { i8*, i64, i64 }, align 8
  %goVersion = alloca { i8*, i64, i64 }, align 8
  %importPaths = alloca %IPST.3, align 8
  %pkgs = alloca %IPST.9, align 8
  %bridgePath = alloca { i8*, i64 }, align 8
  %sret.actual.108 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.549 = alloca { i8*, i64 }, align 8
  %tmpv.554 = alloca { %Flags.0*, { i8*, i64 } }, align 8
  %sret.actual.109 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.558 = alloca { i8*, i64 }, align 8
  %tmpv.565 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.111 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %sret.actual.113 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %sret.actual.115 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.587 = alloca %IPST.3, align 8
  %tmpv.589 = alloca { i8*, i64 }, align 8
  %sret.actual.116 = alloca %IPST.4, align 8
  %tmpv.599 = alloca %IPST.3, align 8
  %tmpv.602 = alloca %IPST.3, align 8
  %tmpv.604 = alloca { i8*, i64 }, align 8
  %sret.actual.117 = alloca %IPST.4, align 8
  %i = alloca { i8*, i64 }, align 8
  %tmpv.621 = alloca %IPST.3, align 8
  %sret.actual.119 = alloca %IPST.4, align 8
  %sret.actual.120 = alloca { %IPST.9, %error.0 }, align 8
  %tmpv.641 = alloca { i8*, i64 }, align 8
  %tmpv.644 = alloca { i8*, i64 }, align 8
  %tmpv.645 = alloca [1 x %IPST.16], align 8
  %sret.actual.122 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.651 = alloca { i8*, i64 }, align 8
  %binaryPath = alloca { i8*, i64 }, align 8
  %tmpv.660 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.661 = alloca { i8*, i64 }, align 8
  %tmpv.664 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.668 = alloca [4 x { i8*, i64 }], align 8
  %tmpv.676 = alloca [4 x { i8*, i64 }], align 8
  %tmpv.677 = alloca { i8*, i64 }, align 8
  %tmpv.680 = alloca { i8*, i64 }, align 8
  %tmpv.683 = alloca { i8*, i64 }, align 8
  %tmpv.684 = alloca [1 x %IPST.16], align 8
  %tmpv.688 = alloca [1 x %IPST.16], align 8
  %tmpv.692 = alloca { i8*, i64 }, align 8
  %env = alloca %IPST.3, align 8
  %sret.actual.136 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.701 = alloca %IPST.11, align 8
  %sret.actual.137 = alloca %IPST.4, align 8
  %tmpv.711 = alloca %IPST.3, align 8
  %tmpv.713 = alloca { i8*, i64 }, align 8
  %env7 = alloca %IPST.3, align 8
  %sret.actual.139 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.722 = alloca %IPST.11, align 8
  %sret.actual.140 = alloca %IPST.4, align 8
  %tmpv.732 = alloca %IPST.3, align 8
  %tmpv.734 = alloca { i8*, i64 }, align 8
  %env10 = alloca %IPST.3, align 8
  %sret.actual.142 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.743 = alloca %IPST.11, align 8
  %sret.actual.143 = alloca %IPST.4, align 8
  %tmpv.753 = alloca %IPST.3, align 8
  %tmpv.755 = alloca { i8*, i64 }, align 8
  %env13 = alloca %IPST.3, align 8
  %sret.actual.145 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.764 = alloca %IPST.11, align 8
  %sret.actual.146 = alloca %IPST.4, align 8
  %tmpv.774 = alloca %IPST.3, align 8
  %i15 = alloca %IPST.3, align 8
  %tmpv.795 = alloca { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, align 8
  %tmpv.798 = alloca { %__go_descriptor.31*, %IPST.3 }, align 8
  %arch = alloca %.command-line-arguments.archPath.0, align 8
  %tmpv.799 = alloca %.command-line-arguments.archPath.0, align 8
  %tmpv.800 = alloca %IPST.12, align 8
  %sret.actual.147 = alloca %IPST.4, align 8
  %arch17 = alloca %.command-line-arguments.archPath.0, align 8
  %tmpv.812 = alloca %.command-line-arguments.archPath.0, align 8
  %tmpv.813 = alloca %IPST.12, align 8
  %sret.actual.148 = alloca %IPST.4, align 8
  %tmpv.825 = alloca [2 x { i8*, i64 }], align 8
  %i18.sroa.6 = alloca { i8*, i64 }, align 8
  %tmpv.832 = alloca { i8*, i64 }, align 8
  %tmpv.835 = alloca %IPST.3, align 8
  %tmpv.838 = alloca { i8*, i64 }, align 8
  %tmpv.839 = alloca { i8*, i64 }, align 8
  %sret.actual.150 = alloca %IPST.4, align 8
  %tmpv.857 = alloca %IPST.3, align 8
  %tmpv.861 = alloca %IPST.3, align 8
  %tmpv.864 = alloca { i8*, i64 }, align 8
  %sret.actual.151 = alloca %IPST.4, align 8
  %tmpv.878 = alloca %IPST.3, align 8
  %tmpv.885 = alloca [5 x { i8*, i64 }], align 8
  %tmpv.888 = alloca { i8*, i64 }, align 8
  %androidArchs = alloca %IPST.3, align 8
  %aarPath = alloca { i8*, i64 }, align 8
  %tmpv.895 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.897 = alloca { i8*, i64 }, align 8
  %tmpv.903 = alloca %IPST.3, align 8
  %tmpv.905 = alloca { i8*, i64 }, align 8
  %sret.actual.159 = alloca %IPST.4, align 8
  %tmpv.915 = alloca { i8*, i64 }, align 8
  %tmpv.921 = alloca %IPST.3, align 8
  %tmpv.923 = alloca { i8*, i64 }, align 8
  %sret.actual.161 = alloca %IPST.4, align 8
  %tmpv.933 = alloca { i8*, i64 }, align 8
  %tmpv.939 = alloca %IPST.3, align 8
  %tmpv.941 = alloca { i8*, i64 }, align 8
  %sret.actual.163 = alloca %IPST.4, align 8
  %tmpv.951 = alloca { i8*, i64 }, align 8
  %tmpv.957 = alloca %IPST.3, align 8
  %tmpv.959 = alloca { i8*, i64 }, align 8
  %sret.actual.165 = alloca %IPST.4, align 8
  %tmpv.970 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.972 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.974 = alloca { i8*, i64 }, align 8
  %tmpv.977 = alloca { i8*, i64 }, align 8
  %tmpv.978 = alloca [1 x %IPST.16], align 8
  %tmpv.982 = alloca [1 x %IPST.16], align 8
  %tmpv.991 = alloca [7 x { i8*, i64 }], align 8
  %tmpv.993 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.996 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1000 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1003 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1007 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1010 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1014 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1016 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1019 = alloca [3 x { i8*, i64 }], align 8
  %env38 = alloca %IPST.3, align 8
  %sret.actual.187 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1032 = alloca %IPST.3, align 8
  %tmpv.1034 = alloca { i8*, i64 }, align 8
  %sret.actual.190 = alloca %IPST.4, align 8
  %tmpv.1048 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1050 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.1051 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.1055 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1060 = alloca [3 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %param, metadata !1590, metadata !DIExpression()), !dbg !1591
  store i8 0, i8* %tmpv.546, align 1
  %call.145 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Flags, i64 0, i32 0))
          to label %cont.49 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1591

finally.2:                                        ; preds = %cont.274, %else.352, %cont.220, %cont.107, %cont.99, %cont.67, %fallthrough.154, %fallthrough.149, %then.148, %cont.66, %cont.70, %then.161, %cont.106, %then.199, %then.202, %then.203, %cont.129, %then.210, %then.218, %then.226, %then.234, %then.247, %then.257, %then.296, %then.299, %then.301, %cont.256, %then.333, %then.334, %then.335, %then.336, %then.337, %then.338, %then.347, %then.349, %then.352, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.2
  %"$ret34.sroa.0.1" = phi i64 [ 0, %catchpad.2 ], [ %call.147.fca.0.extract, %then.148 ], [ %call.151.fca.0.extract, %cont.66 ], [ 0, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %call.154.fca.0.extract, %cont.70 ], [ %tmpv.576.sroa.4.sroa.0.0.copyload743, %then.161 ], [ %call.159.fca.0.extract, %cont.106 ], [ %call.162.fca.0.extract, %then.199 ], [ %call.166.fca.0.extract, %then.202 ], [ %call.169.fca.0.extract, %then.203 ], [ %call.176.fca.0.extract, %cont.129 ], [ %39, %then.210 ], [ %47, %then.218 ], [ %55, %then.226 ], [ %63, %then.234 ], [ %79, %then.247 ], [ %87, %then.257 ], [ %call.189.fca.0.extract, %then.296 ], [ %call.192.fca.0.extract, %then.299 ], [ %call.194.fca.0.extract, %then.301 ], [ %call.207.fca.0.extract, %cont.256 ], [ %call.209.fca.0.extract, %then.333 ], [ %call.212.fca.0.extract, %then.334 ], [ %call.215.fca.0.extract, %then.335 ], [ %call.218.fca.0.extract, %then.336 ], [ %call.220.fca.0.extract, %then.337 ], [ %call.223.fca.0.extract, %then.338 ], [ %call.230.fca.0.extract, %then.347 ], [ %call.231.fca.0.extract, %then.349 ], [ %call.234.fca.0.extract, %then.352 ], [ %tmpv.548.sroa.3.0.copyload711, %fallthrough.149 ], [ %tmpv.557.sroa.3.0.copyload718, %fallthrough.154 ], [ %tmpv.570.sroa.3.0.copyload704, %cont.67 ], [ %tmpv.632.sroa.3.0.copyload739, %cont.99 ], [ %tmpv.648.sroa.3.0.copyload725, %cont.107 ], [ 0, %cont.220 ], [ 0, %else.352 ], [ %tmpv.1026.sroa.3.0.copyload92, %cont.274 ]
  %"$ret34.sroa.39.1" = phi i64 [ 0, %catchpad.2 ], [ %call.147.fca.1.extract, %then.148 ], [ %call.151.fca.1.extract, %cont.66 ], [ 0, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %call.154.fca.1.extract, %cont.70 ], [ %tmpv.576.sroa.4.sroa.3.0.copyload745, %then.161 ], [ %call.159.fca.1.extract, %cont.106 ], [ %call.162.fca.1.extract, %then.199 ], [ %call.166.fca.1.extract, %then.202 ], [ %call.169.fca.1.extract, %then.203 ], [ %call.176.fca.1.extract, %cont.129 ], [ %tmpv.698.sroa.4.0.copyload484958, %then.210 ], [ %tmpv.719.sroa.4.0.copyload456956, %then.218 ], [ %tmpv.740.sroa.4.0.copyload428954, %then.226 ], [ %tmpv.761.sroa.4.0.copyload400952, %then.234 ], [ %"$ret34.sroa.39.0.copyload754", %then.247 ], [ %"$ret34.sroa.39.0.copyload752", %then.257 ], [ %call.189.fca.1.extract, %then.296 ], [ %call.192.fca.1.extract, %then.299 ], [ %call.194.fca.1.extract, %then.301 ], [ %call.207.fca.1.extract, %cont.256 ], [ %call.209.fca.1.extract, %then.333 ], [ %call.212.fca.1.extract, %then.334 ], [ %call.215.fca.1.extract, %then.335 ], [ %call.218.fca.1.extract, %then.336 ], [ %call.220.fca.1.extract, %then.337 ], [ %call.223.fca.1.extract, %then.338 ], [ %call.230.fca.1.extract, %then.347 ], [ %call.231.fca.1.extract, %then.349 ], [ %call.234.fca.1.extract, %then.352 ], [ %tmpv.548.sroa.4.0.copyload713, %fallthrough.149 ], [ %tmpv.557.sroa.4.0.copyload720, %fallthrough.154 ], [ %tmpv.570.sroa.4.0.copyload706, %cont.67 ], [ %tmpv.632.sroa.4.0.copyload741, %cont.99 ], [ %tmpv.648.sroa.4.0.copyload727, %cont.107 ], [ 0, %cont.220 ], [ 0, %else.352 ], [ %tmpv.1026.sroa.4.0.copyload94, %cont.274 ]
  %ehtmp.2.sroa.0.0 = phi i8* [ %ex2.2.fca.0.extract, %catchpad.2 ], [ undef, %then.148 ], [ undef, %cont.66 ], [ undef, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.70 ], [ undef, %then.161 ], [ undef, %cont.106 ], [ undef, %then.199 ], [ undef, %then.202 ], [ undef, %then.203 ], [ undef, %cont.129 ], [ undef, %then.210 ], [ undef, %then.218 ], [ undef, %then.226 ], [ undef, %then.234 ], [ undef, %then.247 ], [ undef, %then.257 ], [ undef, %then.296 ], [ undef, %then.299 ], [ undef, %then.301 ], [ undef, %cont.256 ], [ undef, %then.333 ], [ undef, %then.334 ], [ undef, %then.335 ], [ undef, %then.336 ], [ undef, %then.337 ], [ undef, %then.338 ], [ undef, %then.347 ], [ undef, %then.349 ], [ undef, %then.352 ], [ undef, %fallthrough.149 ], [ undef, %fallthrough.154 ], [ undef, %cont.67 ], [ undef, %cont.99 ], [ undef, %cont.107 ], [ undef, %cont.220 ], [ undef, %else.352 ], [ undef, %cont.274 ]
  %ehtmp.2.sroa.2.0 = phi i32 [ %ex2.2.fca.1.extract, %catchpad.2 ], [ undef, %then.148 ], [ undef, %cont.66 ], [ undef, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.70 ], [ undef, %then.161 ], [ undef, %cont.106 ], [ undef, %then.199 ], [ undef, %then.202 ], [ undef, %then.203 ], [ undef, %cont.129 ], [ undef, %then.210 ], [ undef, %then.218 ], [ undef, %then.226 ], [ undef, %then.234 ], [ undef, %then.247 ], [ undef, %then.257 ], [ undef, %then.296 ], [ undef, %then.299 ], [ undef, %then.301 ], [ undef, %cont.256 ], [ undef, %then.333 ], [ undef, %then.334 ], [ undef, %then.335 ], [ undef, %then.336 ], [ undef, %then.337 ], [ undef, %then.338 ], [ undef, %then.347 ], [ undef, %then.349 ], [ undef, %then.352 ], [ undef, %fallthrough.149 ], [ undef, %fallthrough.154 ], [ undef, %cont.67 ], [ undef, %cont.99 ], [ undef, %cont.107 ], [ undef, %cont.220 ], [ undef, %else.352 ], [ undef, %cont.274 ]
  %finvar.2.0 = phi i8 [ 0, %catchpad.2 ], [ 1, %then.148 ], [ 1, %cont.66 ], [ 1, %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %cont.70 ], [ 1, %then.161 ], [ 1, %cont.106 ], [ 1, %then.199 ], [ 1, %then.202 ], [ 1, %then.203 ], [ 1, %cont.129 ], [ 1, %then.210 ], [ 1, %then.218 ], [ 1, %then.226 ], [ 1, %then.234 ], [ 1, %then.247 ], [ 1, %then.257 ], [ 1, %then.296 ], [ 1, %then.299 ], [ 1, %then.301 ], [ 1, %cont.256 ], [ 1, %then.333 ], [ 1, %then.334 ], [ 1, %then.335 ], [ 1, %then.336 ], [ 1, %then.337 ], [ 1, %then.338 ], [ 1, %then.347 ], [ 1, %then.349 ], [ 1, %then.352 ], [ 1, %fallthrough.149 ], [ 1, %fallthrough.154 ], [ 1, %cont.67 ], [ 1, %cont.99 ], [ 1, %cont.107 ], [ 1, %cont.220 ], [ 1, %else.352 ], [ 1, %cont.274 ]
  call void @llvm.dbg.value(metadata i64 %"$ret34.sroa.39.1", metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %"$ret34.sroa.0.1", metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  br label %finish.2

pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %fallthrough.193, %then.193, %else.340, %cont.284, %then.269, %then.245, %then.271, %cont.169, %then.273, %fallthrough.265, %fallthrough.243, %cont.282, %else.272, %then.268, %then.342, %cont.285, %fallthrough.345, %fallthrough.244, %then.279, %then.267, %then.249, %cont.283, %then.346, %cont.168, %then.263, %else.278, %then.244, %then.251, %then.248, %else.345, %cont.165, %then.266, %else.262, %fallthrough.339, %cont.275, %else.280, %else.252, %then.276, %then.341, %then.261, %then.277, %then.264, %then.246, %then.253, %else.275, %then.344, %then.259, %then.274, %then.258, %fallthrough.183, %then.187, %then.184, %else.188, %then.185, %then.189, %then.198, %cont.52, %cont.290, %cont.289, %fallthrough.350, %then.350, %else.348, %cont.271, %cont.270, %else.337, %cont.268, %else.336, %cont.266, %cont.265, %else.335, %cont.263, %cont.262, %else.334, %cont.260, %cont.259, %else.333, %cont.257, %else.331, %else.332, %cont.254, %cont.253, %cont.252, %cont.251, %fallthrough.330, %then.330, %cont.248, %fallthrough.323, %else.328, %then.329, %then.327, %then.325, %then.324, %fallthrough.316, %else.321, %then.322, %then.320, %then.318, %then.317, %fallthrough.309, %else.314, %then.315, %then.313, %then.311, %then.310, %fallthrough.302, %else.307, %then.308, %then.306, %then.304, %then.303, %cont.223, %cont.222, %else.301, %then.300, %fallthrough.198, %cont.218, %cont.217, %fallthrough.297, %then.297, %fallthrough.294, %else.294, %else.292, %then.293, %then.291, %else.289, %then.290, %then.288, %then.286, %then.285, %then.284, %then.283, %fallthrough.256, %then.255, %else.241, %then.242, %cont.160, %cont.159, %fallthrough.233, %else.239, %then.240, %then.238, %then.236, %then.235, %then.233, %fallthrough.225, %else.231, %then.232, %then.230, %then.228, %then.227, %then.225, %fallthrough.217, %else.223, %then.224, %then.222, %then.220, %then.219, %then.217, %fallthrough.209, %else.215, %then.216, %then.214, %else.210, %then.209, %cont.130, %else.207, %else.208, %cont.127, %cont.126, %cont.125, %cont.124, %fallthrough.206, %then.206, %else.204, %then.205, %cont.119, %else.203, %cont.117, %cont.116, %else.202, %cont.114, %fallthrough.200, %else.200, %then.201, %cont.110, %else.199, %else.197, %else.196, %cont.105, %cont.104, %fallthrough.195, %then.195, %fallthrough.176, %else.181, %then.182, %then.180, %then.178, %then.177, %fallthrough.174, %else.174, %else.172, %then.173, %then.171, %then.169, %then.168, %else.166, %else.164, %then.165, %else.162, %then.163, %else.161, %else.160, %then.160, %then.159, %else.158, %else.157, %then.157, %cont.64, %else.156, %else.154, %then.155, %cont.60, %fallthrough.153, %then.153, %then.152, %else.149, %then.150, %cont.54, %else.148, %fallthrough.147, %then.147, %cont.49, %entry
  %lpad.loopexit.split-lp1162 = landingpad { i8*, i32 }
          catch i8* null
  call void @llvm.dbg.value(metadata i64 0, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 0, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.546)
          to label %finally.2 unwind label %catchpad.2, !dbg !1594

cont.49:                                          ; preds = %entry
  %cast.2262 = bitcast i8* %call.145 to %Flags.0**, !dbg !1591
  store %Flags.0* %param, %Flags.0** %tmpv.545, align 8
  %cast.2265 = bitcast %Flags.0** %tmpv.545 to i8*, !dbg !1591
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Flags, i64 0, i32 0), i8* %call.145, i8* nonnull %cast.2265)
          to label %cont.50 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1591

cont.50:                                          ; preds = %cont.49
  call void @llvm.dbg.value(metadata %Flags.0** %cast.2262, metadata !1595, metadata !DIExpression()), !dbg !1591
  call void @llvm.dbg.value(metadata i64 0, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 0, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  %0 = bitcast { i8*, i64, i64 }* %installedVersion to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %1 = bitcast { i8*, i64, i64 }* %goVersion to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  %2 = bitcast %IPST.3* %importPaths to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2)
  %3 = bitcast %IPST.9* %pkgs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3)
  %bridgePath.0.sroa_cast = bitcast { i8*, i64 }* %bridgePath to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %bridgePath.0.sroa_cast)
  %.ld.82 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1596
  %icmp.175 = icmp eq %Flags.0* %.ld.82, null, !dbg !1598
  br i1 %icmp.175, label %then.147, label %fallthrough.147

then.147:                                         ; preds = %cont.50
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.147 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1598

fallthrough.147:                                  ; preds = %cont.50, %then.147
  %field.402 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.82, i64 0, i32 11, !dbg !1598
  %field0.118 = bitcast { i8*, i64 }* %field.402 to i64*, !dbg !1599
  %ld.258 = load i64, i64* %field0.118, align 8, !dbg !1599
  %4 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.82, i64 0, i32 11, i32 1, !dbg !1599
  %ld.259 = load i64, i64* %4, align 8, !dbg !1599
  %call.146 = invoke { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.ParseTargets(i8* nest undef, i64 %ld.258, i64 %ld.259)
          to label %cont.52 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1599

cont.52:                                          ; preds = %fallthrough.147
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, metadata !1600, metadata !DIExpression()), !dbg !1601
  %.ld.84 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1602
  %call.147 = invoke fastcc { i64, i64 } @command_line_arguments.validateGoInstall(%Flags.0* %.ld.84)
          to label %cont.53 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1603

cont.53:                                          ; preds = %cont.52
  %call.147.fca.0.extract = extractvalue { i64, i64 } %call.147, 0, !dbg !1603
  call void @llvm.dbg.value(metadata i64 %call.147.fca.0.extract, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  %icmp.176 = icmp eq i64 %call.147.fca.0.extract, 0, !dbg !1606
  br i1 %icmp.176, label %else.148, label %then.148

then.148:                                         ; preds = %cont.53
  %call.147.fca.1.extract = extractvalue { i64, i64 } %call.147, 1, !dbg !1603
  call void @llvm.dbg.value(metadata i64 %call.147.fca.1.extract, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata i64 %call.147.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.147.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.148:                                         ; preds = %cont.53
  %.ld.85 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1607
  invoke void @command_line_arguments.NewTmpDir({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.108, i8* nest undef, %Flags.0* %.ld.85, i64 0, i64 0)
          to label %cont.54 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1608

cont.54:                                          ; preds = %else.148
  %tmpv.548.sroa.0.0.cast.2279.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.108 to i8*, !dbg !1608
  %tmpv.548.sroa.3.0.cast.2279.sroa_idx710 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.108, i64 0, i32 1, !dbg !1608
  %tmpv.548.sroa.3.0.cast.2279.sroa_cast = bitcast %error.0* %tmpv.548.sroa.3.0.cast.2279.sroa_idx710 to i64*, !dbg !1608
  %tmpv.548.sroa.3.0.copyload711 = load i64, i64* %tmpv.548.sroa.3.0.cast.2279.sroa_cast, align 8, !dbg !1608
  %tmpv.548.sroa.4.0.cast.2279.sroa_idx712 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.108, i64 0, i32 1, i32 1, !dbg !1608
  %tmpv.548.sroa.4.0.cast.2279.sroa_cast = bitcast i8** %tmpv.548.sroa.4.0.cast.2279.sroa_idx712 to i64*, !dbg !1608
  %tmpv.548.sroa.4.0.copyload713 = load i64, i64* %tmpv.548.sroa.4.0.cast.2279.sroa_cast, align 8, !dbg !1608
  %tmpv.548.sroa.0.0.cast.2280.sroa_cast = bitcast { i8*, i64 }* %tmpv.549 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.548.sroa.0.0.cast.2280.sroa_cast, i8* nonnull align 8 %tmpv.548.sroa.0.0.cast.2279.sroa_cast, i64 16, i1 false)
  %call.148 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.55 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1609

cont.55:                                          ; preds = %cont.54
  %runtime.writeBarrier.ld.9 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1608
  %icmp.178 = icmp eq i32 %runtime.writeBarrier.ld.9, 0, !dbg !1608
  br i1 %icmp.178, label %then.149, label %else.149

then.149:                                         ; preds = %cont.55
  call void @llvm.dbg.value(metadata i8* %call.148, metadata !1610, metadata !DIExpression()), !dbg !1611
  %icmp.177 = icmp eq i8* %call.148, null, !dbg !1608
  br i1 %icmp.177, label %then.150, label %fallthrough.150

fallthrough.149:                                  ; preds = %else.149, %fallthrough.150
  call void @llvm.dbg.value(metadata i64 %tmpv.548.sroa.3.0.copyload711, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata i64 %tmpv.548.sroa.4.0.copyload713, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %icmp.179 = icmp eq i64 %tmpv.548.sroa.3.0.copyload711, 0, !dbg !1612
  br i1 %icmp.179, label %else.151, label %finally.2

else.149:                                         ; preds = %cont.55
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.148, i8* nonnull %tmpv.548.sroa.0.0.cast.2280.sroa_cast)
          to label %fallthrough.149 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1608

then.150:                                         ; preds = %then.149
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.150 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1608

fallthrough.150:                                  ; preds = %then.149, %then.150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call.148, i8* nonnull align 8 %tmpv.548.sroa.0.0.cast.2280.sroa_cast, i64 16, i1 false), !dbg !1608
  br label %fallthrough.149

else.151:                                         ; preds = %fallthrough.149
  %.ld.88 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1613
  %icmp.180 = icmp eq %Flags.0* %.ld.88, null, !dbg !1614
  br i1 %icmp.180, label %then.152, label %fallthrough.152

then.152:                                         ; preds = %else.151
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.152 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1614

fallthrough.152:                                  ; preds = %else.151, %then.152
  %field.409 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.88, i64 0, i32 6, !dbg !1614
  %.field.ld.40 = load i8, i8* %field.409, align 1, !dbg !1614
  %icmp.181 = icmp eq i8 %.field.ld.40, 0, !dbg !1615
  br i1 %icmp.181, label %then.153, label %fallthrough.153

then.153:                                         ; preds = %fallthrough.152
  %cast.2296 = bitcast { %Flags.0*, { i8*, i64 } }* %tmpv.554 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2296, i8 0, i64 24, i1 false)
  %5 = bitcast i8* %call.145 to i64*, !dbg !1616
  %.ld.87962 = load i64, i64* %5, align 8, !dbg !1616
  %6 = bitcast { %Flags.0*, { i8*, i64 } }* %tmpv.554 to i64*, !dbg !1617
  store i64 %.ld.87962, i64* %6, align 8, !dbg !1617
  %field.408 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %tmpv.554, i64 0, i32 1, !dbg !1617
  %cast.2298 = bitcast { i8*, i64 }* %field.408 to i8*, !dbg !1617
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2298, i8* align 8 %call.148, i64 16, i1 false), !dbg !1617
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.546, %__go_descriptor.27* bitcast (void (i8*, { %Flags.0*, { i8*, i64 } }*)* @command_line_arguments.command_line_arguments..thunk3 to %__go_descriptor.27*), i8* nonnull %cast.2296)
          to label %fallthrough.153 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1617

fallthrough.153:                                  ; preds = %then.153, %fallthrough.152
  %.ld.90 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1618
  invoke void @command_line_arguments.MatchaPkgPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.109, i8* nest undef, %Flags.0* %.ld.90)
          to label %cont.60 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1619

cont.60:                                          ; preds = %fallthrough.153
  %tmpv.557.sroa.0.0.cast.2306.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.109 to i8*, !dbg !1619
  %tmpv.557.sroa.3.0.cast.2306.sroa_idx717 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.109, i64 0, i32 1, !dbg !1619
  %tmpv.557.sroa.3.0.cast.2306.sroa_cast = bitcast %error.0* %tmpv.557.sroa.3.0.cast.2306.sroa_idx717 to i64*, !dbg !1619
  %tmpv.557.sroa.3.0.copyload718 = load i64, i64* %tmpv.557.sroa.3.0.cast.2306.sroa_cast, align 8, !dbg !1619
  %tmpv.557.sroa.4.0.cast.2306.sroa_idx719 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.109, i64 0, i32 1, i32 1, !dbg !1619
  %tmpv.557.sroa.4.0.cast.2306.sroa_cast = bitcast i8** %tmpv.557.sroa.4.0.cast.2306.sroa_idx719 to i64*, !dbg !1619
  %tmpv.557.sroa.4.0.copyload720 = load i64, i64* %tmpv.557.sroa.4.0.cast.2306.sroa_cast, align 8, !dbg !1619
  %tmpv.557.sroa.0.0.cast.2307.sroa_cast = bitcast { i8*, i64 }* %tmpv.558 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.557.sroa.0.0.cast.2307.sroa_cast, i8* nonnull align 8 %tmpv.557.sroa.0.0.cast.2306.sroa_cast, i64 16, i1 false)
  %call.149 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.61 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1620

cont.61:                                          ; preds = %cont.60
  %runtime.writeBarrier.ld.10 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1619
  %icmp.183 = icmp eq i32 %runtime.writeBarrier.ld.10, 0, !dbg !1619
  br i1 %icmp.183, label %then.154, label %else.154

then.154:                                         ; preds = %cont.61
  call void @llvm.dbg.value(metadata i8* %call.149, metadata !1621, metadata !DIExpression()), !dbg !1622
  %icmp.182 = icmp eq i8* %call.149, null, !dbg !1619
  br i1 %icmp.182, label %then.155, label %fallthrough.155

fallthrough.154:                                  ; preds = %else.154, %fallthrough.155
  call void @llvm.dbg.value(metadata i64 %tmpv.557.sroa.3.0.copyload718, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata i64 %tmpv.557.sroa.4.0.copyload720, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %icmp.184 = icmp eq i64 %tmpv.557.sroa.3.0.copyload718, 0, !dbg !1623
  br i1 %icmp.184, label %else.156, label %finally.2

else.154:                                         ; preds = %cont.61
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.149, i8* nonnull %tmpv.557.sroa.0.0.cast.2307.sroa_cast)
          to label %fallthrough.154 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1619

then.155:                                         ; preds = %then.154
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.155 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1619

fallthrough.155:                                  ; preds = %then.154, %then.155
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call.149, i8* nonnull align 8 %tmpv.557.sroa.0.0.cast.2307.sroa_cast, i64 16, i1 false), !dbg !1619
  br label %fallthrough.154

else.156:                                         ; preds = %fallthrough.154
  %cast.2327 = bitcast [2 x { i8*, i64 }]* %tmpv.565 to i8*, !dbg !1624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2327, i8* align 8 %call.149, i64 16, i1 false), !dbg !1624
  %index.120 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.565, i64 0, i64 1, !dbg !1624
  %cast.2329 = bitcast { i8*, i64 }* %index.120 to i8*, !dbg !1624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2329, i8* align 8 bitcast ({ i8*, i64 }* @const.318 to i8*), i64 16, i1 false), !dbg !1624
  %field.413 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.92, i64 0, i32 0, !dbg !1624
  %cast.2331 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.565, i64 0, i64 0, !dbg !1624
  store { i8*, i64 }* %cast.2331, { i8*, i64 }** %field.413, align 8, !dbg !1624
  %field.414 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.92, i64 0, i32 1, !dbg !1624
  store i64 2, i64* %field.414, align 8, !dbg !1624
  %field.415 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.92, i64 0, i32 2, !dbg !1624
  store i64 2, i64* %field.415, align 8, !dbg !1624
  %call.150 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.92)
          to label %cont.64 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1624

cont.64:                                          ; preds = %else.156
  %call.150.fca.0.extract = extractvalue { i64, i64 } %call.150, 0, !dbg !1624
  %call.150.fca.1.extract = extractvalue { i64, i64 } %call.150, 1, !dbg !1624
  %.ld.92 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1625
  invoke void @command_line_arguments.ReadFile({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.111, i8* nest undef, %Flags.0* %.ld.92, i64 %call.150.fca.0.extract, i64 %call.150.fca.1.extract)
          to label %cont.65 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1626

cont.65:                                          ; preds = %cont.64
  %tmpv.563.sroa.0.0.cast.2337.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.111 to i8*, !dbg !1626
  %7 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.111, i64 0, i32 1, i32 0, !dbg !1626
  %tmpv.563.sroa.3.0.copyload732938 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %7, align 8, !dbg !1626
  %installedVersion1113 = bitcast { i8*, i64, i64 }* %installedVersion to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %installedVersion1113, i8* nonnull align 8 %tmpv.563.sroa.0.0.cast.2337.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }** %7, metadata !1604, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata { { i8*, i64, i64 }, %error.0 }* %sret.actual.111, metadata !1604, metadata !DIExpression(DW_OP_plus_uconst, 32, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %icmp.185 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.563.sroa.3.0.copyload732938, null, !dbg !1627
  br i1 %icmp.185, label %else.157, label %then.157

then.157:                                         ; preds = %cont.65
  %call.151 = invoke { i64, i64 } @errors.New(i8* nest undef, i64 ptrtoint ([49 x i8]* @const.319 to i64), i64 48)
          to label %cont.66 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1628

else.157:                                         ; preds = %cont.65
  %.ld.93 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1629
  invoke void @command_line_arguments.GoVersion({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.113, i8* nest undef, %Flags.0* %.ld.93)
          to label %cont.67 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1630

cont.66:                                          ; preds = %then.157
  %call.151.fca.0.extract = extractvalue { i64, i64 } %call.151, 0, !dbg !1628
  %call.151.fca.1.extract = extractvalue { i64, i64 } %call.151, 1, !dbg !1628
  call void @llvm.dbg.value(metadata i64 %call.151.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.151.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

cont.67:                                          ; preds = %else.157
  %tmpv.570.sroa.0.0.cast.2357.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.113 to i8*, !dbg !1630
  %tmpv.570.sroa.3.0.cast.2357.sroa_idx703 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.113, i64 0, i32 1, !dbg !1630
  %tmpv.570.sroa.3.0.cast.2357.sroa_cast = bitcast %error.0* %tmpv.570.sroa.3.0.cast.2357.sroa_idx703 to i64*, !dbg !1630
  %tmpv.570.sroa.3.0.copyload704 = load i64, i64* %tmpv.570.sroa.3.0.cast.2357.sroa_cast, align 8, !dbg !1630
  %tmpv.570.sroa.4.0.cast.2357.sroa_idx705 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.113, i64 0, i32 1, i32 1, !dbg !1630
  %tmpv.570.sroa.4.0.cast.2357.sroa_cast = bitcast i8** %tmpv.570.sroa.4.0.cast.2357.sroa_idx705 to i64*, !dbg !1630
  %tmpv.570.sroa.4.0.copyload706 = load i64, i64* %tmpv.570.sroa.4.0.cast.2357.sroa_cast, align 8, !dbg !1630
  %goVersion1114 = bitcast { i8*, i64, i64 }* %goVersion to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %goVersion1114, i8* nonnull align 8 %tmpv.570.sroa.0.0.cast.2357.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.570.sroa.3.0.copyload704, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata i64 %tmpv.570.sroa.4.0.copyload706, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %icmp.186 = icmp eq i64 %tmpv.570.sroa.3.0.copyload704, 0, !dbg !1631
  br i1 %icmp.186, label %else.158, label %finally.2

else.158:                                         ; preds = %cont.67
  %call.152 = invoke i8 @bytes.Equal(i8* nest undef, { i8*, i64, i64 }* byval nonnull %installedVersion, { i8*, i64, i64 }* byval nonnull %goVersion)
          to label %cont.68 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1632

cont.68:                                          ; preds = %else.158
  %icmp.187 = icmp eq i8 %call.152, 0, !dbg !1633
  br i1 %icmp.187, label %then.159, label %else.160

then.159:                                         ; preds = %cont.68
  %.ld.94 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1634
  %call.153 = invoke i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %.ld.94)
          to label %fallthrough.159 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1635

fallthrough.159:                                  ; preds = %then.159
  %8 = and i8 %call.153, 1, !dbg !1636
  %trunc.160 = icmp eq i8 %8, 0, !dbg !1636
  br i1 %trunc.160, label %else.160, label %then.160

then.160:                                         ; preds = %fallthrough.159
  %call.154 = invoke { i64, i64 } @errors.New(i8* nest undef, i64 ptrtoint ([41 x i8]* @const.321 to i64), i64 40)
          to label %cont.70 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1637

else.160:                                         ; preds = %cont.68, %fallthrough.159
  %.ld.95 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1638
  invoke void @command_line_arguments.Getwd({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.115, i8* nest undef, %Flags.0* %.ld.95)
          to label %cont.71 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1639

cont.70:                                          ; preds = %then.160
  %call.154.fca.0.extract = extractvalue { i64, i64 } %call.154, 0, !dbg !1637
  %call.154.fca.1.extract = extractvalue { i64, i64 } %call.154, 1, !dbg !1637
  call void @llvm.dbg.value(metadata i64 %call.154.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.154.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

cont.71:                                          ; preds = %else.160
  %tmpv.576.sroa.0.0.cast.2380.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.115 to i64*, !dbg !1639
  %tmpv.576.sroa.0.0.copyload656 = load i64, i64* %tmpv.576.sroa.0.0.cast.2380.sroa_cast, align 8, !dbg !1639
  %tmpv.576.sroa.3.0.cast.2380.sroa_idx657 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.115, i64 0, i32 0, i32 1, !dbg !1639
  %tmpv.576.sroa.3.0.copyload658 = load i64, i64* %tmpv.576.sroa.3.0.cast.2380.sroa_idx657, align 8, !dbg !1639
  %tmpv.576.sroa.4.sroa.0.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_idx = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.115, i64 0, i32 1, !dbg !1639
  %tmpv.576.sroa.4.sroa.0.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.576.sroa.4.sroa.0.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_idx to i64*, !dbg !1639
  %tmpv.576.sroa.4.sroa.0.0.copyload743 = load i64, i64* %tmpv.576.sroa.4.sroa.0.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_cast, align 8, !dbg !1639
  call void @llvm.dbg.value(metadata i64 %tmpv.576.sroa.0.0.copyload656, metadata !1640, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1641
  call void @llvm.dbg.value(metadata i64 %tmpv.576.sroa.3.0.copyload658, metadata !1640, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1641
  call void @llvm.dbg.value(metadata i64 %tmpv.576.sroa.4.sroa.0.0.copyload743, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  %icmp.188 = icmp eq i64 %tmpv.576.sroa.4.sroa.0.0.copyload743, 0, !dbg !1642
  br i1 %icmp.188, label %else.161, label %then.161

then.161:                                         ; preds = %cont.71
  %tmpv.576.sroa.4.sroa.3.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_idx744 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.115, i64 0, i32 1, i32 1, !dbg !1639
  %tmpv.576.sroa.4.sroa.3.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_cast = bitcast i8** %tmpv.576.sroa.4.sroa.3.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_idx744 to i64*, !dbg !1639
  %tmpv.576.sroa.4.sroa.3.0.copyload745 = load i64, i64* %tmpv.576.sroa.4.sroa.3.0.tmpv.576.sroa.4.0.cast.2380.sroa_cast.sroa_cast, align 8, !dbg !1639
  call void @llvm.dbg.value(metadata i64 %tmpv.576.sroa.4.sroa.3.0.copyload745, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata i64 %tmpv.576.sroa.4.sroa.0.0.copyload743, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %tmpv.576.sroa.4.sroa.3.0.copyload745, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.161:                                         ; preds = %cont.71
  %call.155 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @go_build.Context..d, i64 0, i32 0))
          to label %cont.72 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1643

cont.72:                                          ; preds = %else.161
  %cast.2394 = bitcast i8* %call.155 to %Context.1*, !dbg !1643
  call void @llvm.dbg.value(metadata %Context.1* %cast.2394, metadata !1644, metadata !DIExpression()), !dbg !1646
  %runtime.writeBarrier.ld.11 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1647
  %icmp.190 = icmp eq i32 %runtime.writeBarrier.ld.11, 0, !dbg !1647
  br i1 %icmp.190, label %then.162, label %else.162

then.162:                                         ; preds = %cont.72
  %icmp.189 = icmp eq i8* %call.155, null, !dbg !1647
  br i1 %icmp.189, label %then.163, label %fallthrough.163

fallthrough.162:                                  ; preds = %else.162, %fallthrough.163
  %runtime.writeBarrier.ld.12 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1648
  %icmp.192 = icmp eq i32 %runtime.writeBarrier.ld.12, 0, !dbg !1648
  br i1 %icmp.192, label %then.164, label %else.164

else.162:                                         ; preds = %cont.72
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @go_build.Context..d, i64 0, i32 0), i8* %call.155, i8* bitcast (%Context.1* @go_build.Default to i8*))
          to label %fallthrough.162 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1647

then.163:                                         ; preds = %then.162
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.163 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1647

fallthrough.163:                                  ; preds = %then.162, %then.163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call.155, i8* align 8 bitcast (%Context.1* @go_build.Default to i8*), i64 208, i1 false), !dbg !1647
  br label %fallthrough.162

then.164:                                         ; preds = %fallthrough.162
  %icmp.191 = icmp eq i8* %call.155, null, !dbg !1648
  br i1 %icmp.191, label %then.165, label %fallthrough.165

fallthrough.164:                                  ; preds = %else.164, %fallthrough.165
  %field.426 = getelementptr inbounds i8, i8* %call.155, i64 16, !dbg !1649
  %runtime.writeBarrier.ld.13 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1650
  %icmp.194 = icmp eq i32 %runtime.writeBarrier.ld.13, 0, !dbg !1650
  br i1 %icmp.194, label %else.167, label %else.166

else.164:                                         ; preds = %fallthrough.162
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.155, i8* bitcast ({ i8*, i64 }* @const.65 to i8*))
          to label %fallthrough.164 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1648

then.165:                                         ; preds = %then.164
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.165 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1648

fallthrough.165:                                  ; preds = %then.164, %then.165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call.155, i8* align 8 bitcast ({ i8*, i64 }* @const.65 to i8*), i64 16, i1 false), !dbg !1648
  br label %fallthrough.164

fallthrough.166:                                  ; preds = %else.166, %else.167
  %field.427 = getelementptr inbounds i8, i8* %call.155, i64 88, !dbg !1651
  %cast.2411 = bitcast %IPST.3* %tmpv.587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2411, i8* nonnull align 8 %field.427, i64 24, i1 false)
  %field.429 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.587, i64 0, i32 1, !dbg !1652
  %tmpv.587.field.ld.0 = load i64, i64* %field.429, align 8, !dbg !1652
  %cast.2413 = bitcast { i8*, i64 }* %tmpv.589 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2413, i8* align 8 bitcast ({ i8*, i64 }* @const.326 to i8*), i64 16, i1 false)
  %add.9 = add i64 %tmpv.587.field.ld.0, 1, !dbg !1652
  %field.430 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.587, i64 0, i32 2, !dbg !1652
  %tmpv.587.field.ld.1 = load i64, i64* %field.430, align 8, !dbg !1652
  %icmp.195 = icmp ugt i64 %add.9, %tmpv.587.field.ld.1, !dbg !1652
  br i1 %icmp.195, label %then.168, label %else.168

else.166:                                         ; preds = %fallthrough.164
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* nonnull %field.426, i8* bitcast ({ i8*, i64 }* @const.324 to i8*))
          to label %fallthrough.166 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1650

else.167:                                         ; preds = %fallthrough.164
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.426, i8* align 8 bitcast ({ i8*, i64 }* @const.324 to i8*), i64 16, i1 false), !dbg !1650
  br label %fallthrough.166

then.168:                                         ; preds = %fallthrough.166
  %cast.2415 = bitcast %IPST.3* %tmpv.587 to %IPST.4*, !dbg !1652
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.116, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.2415, i64 %add.9)
          to label %cont.79 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1652

fallthrough.168:                                  ; preds = %else.169, %then.169, %cont.79
  %tmpv.594.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.594.sroa.0.0.copyload, %cont.79 ], [ undef, %then.169 ], [ %tmpv.587.field.ld.3, %else.169 ]
  %tmpv.594.sroa.3.0 = phi i64 [ %tmpv.594.sroa.3.0.copyload, %cont.79 ], [ %add.9, %then.169 ], [ %add.9, %else.169 ]
  %tmpv.594.sroa.4.0 = phi i64 [ %tmpv.594.sroa.4.0.copyload, %cont.79 ], [ undef, %then.169 ], [ %tmpv.587.field.ld.1, %else.169 ]
  %tmpv.594.sroa.0.0.cast.2423.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.587, i64 0, i32 0, !dbg !1652
  store { i8*, i64 }* %tmpv.594.sroa.0.0, { i8*, i64 }** %tmpv.594.sroa.0.0.cast.2423.sroa_idx, align 8, !dbg !1652
  store i64 %tmpv.594.sroa.3.0, i64* %field.429, align 8, !dbg !1652
  store i64 %tmpv.594.sroa.4.0, i64* %field.430, align 8, !dbg !1652
  %icmp.202 = icmp sge i64 %tmpv.587.field.ld.0, %tmpv.594.sroa.3.0, !dbg !1652
  %9 = icmp slt i64 %tmpv.587.field.ld.0, 0, !dbg !1652
  %ior.90 = or i1 %9, %icmp.202, !dbg !1652
  br i1 %ior.90, label %then.171, label %fallthrough.171

else.168:                                         ; preds = %fallthrough.166
  %icmp.197 = icmp sgt i64 %add.9, %tmpv.587.field.ld.1, !dbg !1652
  %add.9.lobit963 = or i64 %tmpv.587.field.ld.1, %add.9, !dbg !1652
  %10 = icmp slt i64 %add.9.lobit963, 0, !dbg !1652
  %11 = or i1 %icmp.197, %10, !dbg !1652
  br i1 %11, label %then.169, label %else.169

cont.79:                                          ; preds = %then.168
  %tmpv.594.sroa.0.0.cast.2420.sroa_idx = bitcast %IPST.4* %sret.actual.116 to { i8*, i64 }**
  %tmpv.594.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.594.sroa.0.0.cast.2420.sroa_idx, align 8
  %12 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.116, i64 0, i32 1
  %tmpv.594.sroa.3.0.copyload = load i64, i64* %12, align 8
  %13 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.116, i64 0, i32 2
  %tmpv.594.sroa.4.0.copyload = load i64, i64* %13, align 8
  br label %fallthrough.168

then.169:                                         ; preds = %else.168
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.168 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1652

else.169:                                         ; preds = %else.168
  %field.433 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.587, i64 0, i32 0, !dbg !1652
  %tmpv.587.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.433, align 8, !dbg !1652
  br label %fallthrough.168

then.171:                                         ; preds = %fallthrough.168
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.171 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1652

fallthrough.171:                                  ; preds = %fallthrough.168, %then.171
  %ptroff.11 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.594.sroa.0.0, i64 %tmpv.587.field.ld.0, !dbg !1652
  %runtime.writeBarrier.ld.14 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1652
  %icmp.205 = icmp eq i32 %runtime.writeBarrier.ld.14, 0, !dbg !1652
  br i1 %icmp.205, label %then.172, label %else.172

then.172:                                         ; preds = %fallthrough.171
  %icmp.204 = icmp eq { i8*, i64 }* %ptroff.11, null, !dbg !1652
  br i1 %icmp.204, label %then.173, label %fallthrough.173

fallthrough.172:                                  ; preds = %else.172, %fallthrough.173
  %cast.2430 = bitcast %IPST.3* %tmpv.599 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2430, i8* nonnull align 8 %cast.2411, i64 24, i1 false)
  %runtime.writeBarrier.ld.15 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1653
  %icmp.207 = icmp eq i32 %runtime.writeBarrier.ld.15, 0, !dbg !1653
  br i1 %icmp.207, label %else.175, label %else.174

else.172:                                         ; preds = %fallthrough.171
  %cast.2428 = bitcast { i8*, i64 }* %ptroff.11 to i8*, !dbg !1652
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.2428, i8* nonnull %cast.2413)
          to label %fallthrough.172 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1652

then.173:                                         ; preds = %then.172
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.173 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1652

fallthrough.173:                                  ; preds = %then.172, %then.173
  %cast.2426 = bitcast { i8*, i64 }* %ptroff.11 to i8*, !dbg !1652
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2426, i8* nonnull align 8 %cast.2413, i64 16, i1 false), !dbg !1652
  br label %fallthrough.172

fallthrough.174:                                  ; preds = %else.174, %else.175
  %call.156 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7string, i64 0, i32 0))
          to label %cont.86 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1654

else.174:                                         ; preds = %fallthrough.172
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %field.427, i8* nonnull %cast.2430)
          to label %fallthrough.174 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1653

else.175:                                         ; preds = %fallthrough.172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.427, i8* nonnull align 8 %cast.2430, i64 24, i1 false), !dbg !1653
  br label %fallthrough.174

cont.86:                                          ; preds = %fallthrough.174
  %14 = bitcast %IPST.3* %importPaths to i8**, !dbg !1654
  store i8* %call.156, i8** %14, align 8, !dbg !1654
  %field.442 = getelementptr inbounds %IPST.3, %IPST.3* %importPaths, i64 0, i32 1, !dbg !1654
  %field.471 = getelementptr inbounds %IPST.3, %IPST.3* %args, i64 0, i32 1, !dbg !1655
  %15 = bitcast i64* %field.442 to i8*, !dbg !1655
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false), !dbg !1654
  %args.field.ld.0 = load i64, i64* %field.471, align 8, !dbg !1655
  %icmp.233 = icmp eq i64 %args.field.ld.0, 0, !dbg !1656
  br i1 %icmp.233, label %then.176, label %else.176

then.176:                                         ; preds = %cont.86
  %cast.2442 = bitcast %IPST.3* %tmpv.602 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2442, i8* nonnull align 8 %2, i64 24, i1 false)
  %field.444 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.602, i64 0, i32 1, !dbg !1657
  %tmpv.602.field.ld.0 = load i64, i64* %field.444, align 8, !dbg !1657
  %cast.2444 = bitcast { i8*, i64 }* %tmpv.604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2444, i8* align 8 bitcast ({ i8*, i64 }* @const.279 to i8*), i64 16, i1 false)
  %add.11 = add i64 %tmpv.602.field.ld.0, 1, !dbg !1657
  %field.445 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.602, i64 0, i32 2, !dbg !1657
  %tmpv.602.field.ld.1 = load i64, i64* %field.445, align 8, !dbg !1657
  %icmp.208 = icmp ugt i64 %add.11, %tmpv.602.field.ld.1, !dbg !1657
  br i1 %icmp.208, label %then.177, label %else.177

fallthrough.176:                                  ; preds = %else.190, %fallthrough.181
  %.ld.128 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1658
  invoke void @command_line_arguments.ImportAll({ %IPST.9, %error.0 }* nonnull sret %sret.actual.120, i8* nest undef, %Flags.0* %.ld.128, %Context.1* %cast.2394, %IPST.3* byval nonnull %importPaths, i64 %tmpv.576.sroa.0.0.copyload656, i64 %tmpv.576.sroa.3.0.copyload658, i64 4)
          to label %cont.99 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1659

else.176:                                         ; preds = %cont.86
  %16 = bitcast { i8*, i64 }* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false)
  %tmpv.616.sroa.0.0.cast.2468.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %args, i64 0, i32 0
  %tmpv.616.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.616.sroa.0.0.cast.2468.sroa_idx, align 8
  %icmp.2321074 = icmp sgt i64 %args.field.ld.0, 0, !dbg !1660
  br i1 %icmp.2321074, label %then.190.lr.ph, label %else.190

then.190.lr.ph:                                   ; preds = %else.176
  %field0.123 = bitcast { i8*, i64 }* %i to i64*
  %17 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %i, i64 0, i32 1
  %cast.2481 = bitcast %IPST.3* %tmpv.621 to i8*
  %field.459 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.621, i64 0, i32 1
  %field.460 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.621, i64 0, i32 2
  %cast.2483 = bitcast %IPST.3* %tmpv.621 to %IPST.4*
  %tmpv.627.sroa.0.0.cast.2491.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.621, i64 0, i32 0
  %tmpv.627.sroa.0.0.cast.2488.sroa_idx = bitcast %IPST.4* %sret.actual.119 to { i8*, i64 }**
  %18 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.119, i64 0, i32 1
  %19 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.119, i64 0, i32 2
  br label %fallthrough.183

then.177:                                         ; preds = %then.176
  %cast.2446 = bitcast %IPST.3* %tmpv.602 to %IPST.4*, !dbg !1657
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.117, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.2446, i64 %add.11)
          to label %cont.87 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1657

fallthrough.177:                                  ; preds = %else.178, %then.178, %cont.87
  %tmpv.609.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.609.sroa.0.0.copyload, %cont.87 ], [ undef, %then.178 ], [ %tmpv.602.field.ld.3, %else.178 ]
  %tmpv.609.sroa.3.0 = phi i64 [ %tmpv.609.sroa.3.0.copyload, %cont.87 ], [ %add.11, %then.178 ], [ %add.11, %else.178 ]
  %tmpv.609.sroa.4.0 = phi i64 [ %tmpv.609.sroa.4.0.copyload, %cont.87 ], [ undef, %then.178 ], [ %tmpv.602.field.ld.1, %else.178 ]
  %tmpv.609.sroa.0.0.cast.2454.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.602, i64 0, i32 0, !dbg !1657
  store { i8*, i64 }* %tmpv.609.sroa.0.0, { i8*, i64 }** %tmpv.609.sroa.0.0.cast.2454.sroa_idx, align 8, !dbg !1657
  store i64 %tmpv.609.sroa.3.0, i64* %field.444, align 8, !dbg !1657
  store i64 %tmpv.609.sroa.4.0, i64* %field.445, align 8, !dbg !1657
  %icmp.215 = icmp sge i64 %tmpv.602.field.ld.0, %tmpv.609.sroa.3.0, !dbg !1657
  %20 = icmp slt i64 %tmpv.602.field.ld.0, 0, !dbg !1657
  %ior.98 = or i1 %20, %icmp.215, !dbg !1657
  br i1 %ior.98, label %then.180, label %fallthrough.180

else.177:                                         ; preds = %then.176
  %icmp.210 = icmp sgt i64 %add.11, %tmpv.602.field.ld.1, !dbg !1657
  %add.11.lobit977 = or i64 %tmpv.602.field.ld.1, %add.11, !dbg !1657
  %21 = icmp slt i64 %add.11.lobit977, 0, !dbg !1657
  %22 = or i1 %icmp.210, %21, !dbg !1657
  br i1 %22, label %then.178, label %else.178

cont.87:                                          ; preds = %then.177
  %tmpv.609.sroa.0.0.cast.2451.sroa_idx = bitcast %IPST.4* %sret.actual.117 to { i8*, i64 }**
  %tmpv.609.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.609.sroa.0.0.cast.2451.sroa_idx, align 8
  %23 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.117, i64 0, i32 1
  %tmpv.609.sroa.3.0.copyload = load i64, i64* %23, align 8
  %24 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.117, i64 0, i32 2
  %tmpv.609.sroa.4.0.copyload = load i64, i64* %24, align 8
  br label %fallthrough.177

then.178:                                         ; preds = %else.177
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.177 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1657

else.178:                                         ; preds = %else.177
  %field.448 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.602, i64 0, i32 0, !dbg !1657
  %tmpv.602.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.448, align 8, !dbg !1657
  br label %fallthrough.177

then.180:                                         ; preds = %fallthrough.177
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.180 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1657

fallthrough.180:                                  ; preds = %fallthrough.177, %then.180
  %ptroff.13 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.609.sroa.0.0, i64 %tmpv.602.field.ld.0, !dbg !1657
  %runtime.writeBarrier.ld.16 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1657
  %icmp.218 = icmp eq i32 %runtime.writeBarrier.ld.16, 0, !dbg !1657
  br i1 %icmp.218, label %then.181, label %else.181

then.181:                                         ; preds = %fallthrough.180
  %icmp.217 = icmp eq { i8*, i64 }* %ptroff.13, null, !dbg !1657
  br i1 %icmp.217, label %then.182, label %fallthrough.182

fallthrough.181:                                  ; preds = %else.181, %fallthrough.182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %cast.2442, i64 24, i1 false), !dbg !1662
  br label %fallthrough.176

else.181:                                         ; preds = %fallthrough.180
  %cast.2459 = bitcast { i8*, i64 }* %ptroff.13 to i8*, !dbg !1657
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.2459, i8* nonnull %cast.2444)
          to label %fallthrough.181 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1657

then.182:                                         ; preds = %then.181
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.182 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1657

fallthrough.182:                                  ; preds = %then.181, %then.182
  %cast.2457 = bitcast { i8*, i64 }* %ptroff.13 to i8*, !dbg !1657
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2457, i8* nonnull align 8 %cast.2444, i64 16, i1 false), !dbg !1657
  br label %fallthrough.181

fallthrough.183:                                  ; preds = %fallthrough.188, %then.190.lr.ph
  %tmpv.626.sroa.3.01081 = phi i64 [ undef, %then.190.lr.ph ], [ %tmpv.626.sroa.3.1, %fallthrough.188 ]
  %tmpv.626.sroa.2.01080 = phi i64 [ undef, %then.190.lr.ph ], [ %tmpv.626.sroa.2.1, %fallthrough.188 ]
  %tmpv.626.sroa.0.01079 = phi { i8*, i64 }* [ undef, %then.190.lr.ph ], [ %tmpv.626.sroa.0.1, %fallthrough.188 ]
  %tmpv.614.01078 = phi i64 [ 0, %then.190.lr.ph ], [ %add.15, %fallthrough.188 ]
  %tmpv.630.01076 = phi i64 [ undef, %then.190.lr.ph ], [ %tmpv.630.1, %fallthrough.188 ]
  %tmpv.631.01075 = phi { i8*, i64 }* [ undef, %then.190.lr.ph ], [ %tmpv.631.1, %fallthrough.188 ]
  %ptroff.14 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.616.sroa.0.0.copyload, i64 %tmpv.614.01078, !dbg !1660
  %cast.2470 = bitcast { i8*, i64 }* %ptroff.14 to i8*, !dbg !1660
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %cast.2470, i64 16, i1 false), !dbg !1660
  %ld.275 = load i64, i64* %field0.123, align 8, !dbg !1663
  %ld.276 = load i64, i64* %17, align 8, !dbg !1663
  %call.157 = invoke { i64, i64 } @path.Clean(i8* nest undef, i64 %ld.275, i64 %ld.276)
          to label %cont.93 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1663

cont.93:                                          ; preds = %fallthrough.183
  %call.157.fca.0.extract = extractvalue { i64, i64 } %call.157, 0, !dbg !1663
  %call.157.fca.1.extract = extractvalue { i64, i64 } %call.157, 1, !dbg !1663
  store i64 %call.157.fca.0.extract, i64* %field0.123, align 8, !dbg !1664
  store i64 %call.157.fca.1.extract, i64* %17, align 8, !dbg !1664
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2481, i8* nonnull align 8 %2, i64 24, i1 false)
  %tmpv.621.field.ld.0 = load i64, i64* %field.459, align 8, !dbg !1665
  %add.13 = add i64 %tmpv.621.field.ld.0, 1, !dbg !1665
  %tmpv.621.field.ld.1 = load i64, i64* %field.460, align 8, !dbg !1665
  %icmp.221 = icmp ugt i64 %add.13, %tmpv.621.field.ld.1, !dbg !1665
  br i1 %icmp.221, label %then.184, label %else.184

then.184:                                         ; preds = %cont.93
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.119, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.2483, i64 %add.13)
          to label %cont.94 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1665

fallthrough.184:                                  ; preds = %else.185, %then.185, %cont.94
  %tmpv.626.sroa.0.1 = phi { i8*, i64 }* [ %tmpv.626.sroa.0.01079, %cont.94 ], [ %tmpv.626.sroa.0.01079, %then.185 ], [ %tmpv.621.field.ld.3, %else.185 ]
  %tmpv.626.sroa.2.1 = phi i64 [ %tmpv.626.sroa.2.01080, %cont.94 ], [ %tmpv.626.sroa.2.01080, %then.185 ], [ %add.13, %else.185 ]
  %tmpv.626.sroa.3.1 = phi i64 [ %tmpv.626.sroa.3.01081, %cont.94 ], [ %tmpv.626.sroa.3.01081, %then.185 ], [ %tmpv.621.field.ld.1, %else.185 ]
  %tmpv.627.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.627.sroa.0.0.copyload, %cont.94 ], [ %tmpv.626.sroa.0.01079, %then.185 ], [ %tmpv.621.field.ld.3, %else.185 ]
  %tmpv.627.sroa.3.0 = phi i64 [ %tmpv.627.sroa.3.0.copyload, %cont.94 ], [ %tmpv.626.sroa.2.01080, %then.185 ], [ %add.13, %else.185 ]
  %tmpv.627.sroa.4.0 = phi i64 [ %tmpv.627.sroa.4.0.copyload, %cont.94 ], [ %tmpv.626.sroa.3.01081, %then.185 ], [ %tmpv.621.field.ld.1, %else.185 ]
  store { i8*, i64 }* %tmpv.627.sroa.0.0, { i8*, i64 }** %tmpv.627.sroa.0.0.cast.2491.sroa_idx, align 8, !dbg !1665
  store i64 %tmpv.627.sroa.3.0, i64* %field.459, align 8, !dbg !1665
  store i64 %tmpv.627.sroa.4.0, i64* %field.460, align 8, !dbg !1665
  %icmp.228 = icmp sge i64 %tmpv.621.field.ld.0, %tmpv.627.sroa.3.0, !dbg !1665
  %25 = icmp slt i64 %tmpv.621.field.ld.0, 0, !dbg !1665
  %ior.108 = or i1 %25, %icmp.228, !dbg !1665
  br i1 %ior.108, label %then.187, label %fallthrough.187

else.184:                                         ; preds = %cont.93
  %icmp.223 = icmp sgt i64 %add.13, %tmpv.621.field.ld.1, !dbg !1665
  %add.13.lobit976 = or i64 %add.13, %tmpv.621.field.ld.1, !dbg !1665
  %26 = icmp slt i64 %add.13.lobit976, 0, !dbg !1665
  %27 = or i1 %icmp.223, %26, !dbg !1665
  br i1 %27, label %then.185, label %else.185

cont.94:                                          ; preds = %then.184
  %tmpv.627.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.627.sroa.0.0.cast.2488.sroa_idx, align 8
  %tmpv.627.sroa.3.0.copyload = load i64, i64* %18, align 8
  %tmpv.627.sroa.4.0.copyload = load i64, i64* %19, align 8
  br label %fallthrough.184

then.185:                                         ; preds = %else.184
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.184 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1665

else.185:                                         ; preds = %else.184
  %tmpv.621.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.627.sroa.0.0.cast.2491.sroa_idx, align 8, !dbg !1665
  br label %fallthrough.184

then.187:                                         ; preds = %fallthrough.184
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.187 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1665

fallthrough.187:                                  ; preds = %fallthrough.184, %then.187
  %tmpv.630.1 = phi i64 [ %tmpv.630.01076, %then.187 ], [ %tmpv.621.field.ld.0, %fallthrough.184 ]
  %ptroff.16 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.627.sroa.0.0, i64 %tmpv.630.1, !dbg !1665
  %runtime.writeBarrier.ld.17 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1665
  %icmp.231 = icmp eq i32 %runtime.writeBarrier.ld.17, 0, !dbg !1665
  br i1 %icmp.231, label %then.188, label %else.188

then.188:                                         ; preds = %fallthrough.187
  %icmp.230 = icmp eq { i8*, i64 }* %ptroff.16, null, !dbg !1665
  br i1 %icmp.230, label %then.189, label %fallthrough.189

fallthrough.188:                                  ; preds = %else.188, %fallthrough.189
  %tmpv.631.1 = phi { i8*, i64 }* [ %tmpv.631.2, %fallthrough.189 ], [ %tmpv.631.01075, %else.188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %cast.2481, i64 24, i1 false), !dbg !1666
  %add.15 = add nuw nsw i64 %tmpv.614.01078, 1, !dbg !1660
  %icmp.232 = icmp slt i64 %add.15, %args.field.ld.0, !dbg !1660
  br i1 %icmp.232, label %fallthrough.183, label %else.190

else.188:                                         ; preds = %fallthrough.187
  %cast.2496 = bitcast { i8*, i64 }* %ptroff.16 to i8*, !dbg !1665
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.2496, i8* nonnull %16)
          to label %fallthrough.188 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1665

then.189:                                         ; preds = %then.188
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.189 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1665

fallthrough.189:                                  ; preds = %then.188, %then.189
  %tmpv.631.2 = phi { i8*, i64 }* [ %tmpv.631.01075, %then.189 ], [ %ptroff.16, %then.188 ]
  %cast.2494 = bitcast { i8*, i64 }* %tmpv.631.2 to i8*, !dbg !1665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2494, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !1665
  br label %fallthrough.188

else.190:                                         ; preds = %fallthrough.188, %else.176
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16)
  br label %fallthrough.176

cont.99:                                          ; preds = %fallthrough.176
  %tmpv.632.sroa.0.0.cast.2504.sroa_cast = bitcast { %IPST.9, %error.0 }* %sret.actual.120 to i8*, !dbg !1659
  %tmpv.632.sroa.3.0.cast.2504.sroa_idx738 = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.actual.120, i64 0, i32 1, !dbg !1659
  %tmpv.632.sroa.3.0.cast.2504.sroa_cast = bitcast %error.0* %tmpv.632.sroa.3.0.cast.2504.sroa_idx738 to i64*, !dbg !1659
  %tmpv.632.sroa.3.0.copyload739 = load i64, i64* %tmpv.632.sroa.3.0.cast.2504.sroa_cast, align 8, !dbg !1659
  %tmpv.632.sroa.4.0.cast.2504.sroa_idx740 = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.actual.120, i64 0, i32 1, i32 1, !dbg !1659
  %tmpv.632.sroa.4.0.cast.2504.sroa_cast = bitcast i8** %tmpv.632.sroa.4.0.cast.2504.sroa_idx740 to i64*, !dbg !1659
  %tmpv.632.sroa.4.0.copyload741 = load i64, i64* %tmpv.632.sroa.4.0.cast.2504.sroa_cast, align 8, !dbg !1659
  %pkgs1115 = bitcast %IPST.9* %pkgs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %pkgs1115, i8* nonnull align 8 %tmpv.632.sroa.0.0.cast.2504.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.632.sroa.3.0.copyload739, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata i64 %tmpv.632.sroa.4.0.copyload741, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %icmp.234 = icmp eq i64 %tmpv.632.sroa.3.0.copyload739, 0, !dbg !1667
  br i1 %icmp.234, label %else.191, label %finally.2

else.191:                                         ; preds = %cont.99
  call void @llvm.dbg.value(metadata %Package.0* null, metadata !1668, metadata !DIExpression()), !dbg !1670
  %tmpv.637.sroa.0.0.cast.2518.sroa_idx = getelementptr inbounds %IPST.9, %IPST.9* %pkgs, i64 0, i32 0
  %tmpv.637.sroa.0.0.copyload = load %Package.0**, %Package.0*** %tmpv.637.sroa.0.0.cast.2518.sroa_idx, align 8
  %tmpv.637.sroa.2.0.cast.2518.sroa_idx588 = getelementptr inbounds %IPST.9, %IPST.9* %pkgs, i64 0, i32 1
  %tmpv.637.sroa.2.0.copyload = load i64, i64* %tmpv.637.sroa.2.0.cast.2518.sroa_idx588, align 8
  %icmp.2401070 = icmp sgt i64 %tmpv.637.sroa.2.0.copyload, 0, !dbg !1671
  br i1 %icmp.2401070, label %fallthrough.192, label %else.196

label.2:                                          ; preds = %cont.102
  %icmp.240 = icmp slt i64 %add.16, %tmpv.637.sroa.2.0.copyload, !dbg !1671
  br i1 %icmp.240, label %fallthrough.192, label %else.196

fallthrough.192:                                  ; preds = %else.191, %label.2
  %tmpv.635.01073 = phi i64 [ %add.16, %label.2 ], [ 0, %else.191 ]
  %tmpv.647.01071 = phi %Package.0* [ %tmpv.647.1, %label.2 ], [ undef, %else.191 ]
  %ptroff.17.phi.trans.insert = getelementptr %Package.0*, %Package.0** %tmpv.637.sroa.0.0.copyload, i64 %tmpv.635.01073
  %.ptroff.ld.1.pre = load %Package.0*, %Package.0** %ptroff.17.phi.trans.insert, align 8, !dbg !1671
  call void @llvm.dbg.value(metadata %Package.0* %.ptroff.ld.1.pre, metadata !1668, metadata !DIExpression()), !dbg !1670
  %icmp.238 = icmp eq %Package.0* %.ptroff.ld.1.pre, null, !dbg !1672
  br i1 %icmp.238, label %then.193, label %fallthrough.193

then.193:                                         ; preds = %fallthrough.192
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.193 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1672

fallthrough.193:                                  ; preds = %fallthrough.192, %then.193
  %icmp.2381127 = phi i1 [ true, %then.193 ], [ false, %fallthrough.192 ]
  %.ptroff.ld.11125 = phi %Package.0* [ null, %then.193 ], [ %.ptroff.ld.1.pre, %fallthrough.192 ]
  %tmpv.647.1 = phi %Package.0* [ %tmpv.647.01071, %then.193 ], [ %.ptroff.ld.1.pre, %fallthrough.192 ]
  %field.484 = getelementptr inbounds %Package.0, %Package.0* %tmpv.647.1, i64 0, i32 1, !dbg !1672
  %field0.126 = bitcast { i8*, i64 }* %field.484 to i64*, !dbg !1673
  %ld.283 = load i64, i64* %field0.126, align 8, !dbg !1673
  %28 = getelementptr inbounds %Package.0, %Package.0* %tmpv.647.1, i64 0, i32 1, i32 1, !dbg !1673
  %ld.284 = load i64, i64* %28, align 8, !dbg !1673
  %call.160 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %ld.283, i64 %ld.284, i64 ptrtoint ([5 x i8]* @const.329 to i64), i64 4)
          to label %cont.102 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1673

cont.102:                                         ; preds = %fallthrough.193
  %icmp.239 = icmp eq i8 %call.160, 1, !dbg !1673
  %add.16 = add nuw nsw i64 %tmpv.635.01073, 1, !dbg !1671
  br i1 %icmp.239, label %then.194, label %label.2

then.194:                                         ; preds = %cont.102
  br i1 %icmp.2381127, label %then.195, label %fallthrough.195

then.195:                                         ; preds = %then.194
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.195 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1674

fallthrough.195:                                  ; preds = %then.194, %then.195
  %field.478 = getelementptr inbounds %Package.0, %Package.0* %.ptroff.ld.11125, i64 0, i32 2, !dbg !1674
  %cast.2520 = bitcast { i8*, i64 }* %tmpv.641 to i8*
  %cast.2521 = bitcast { i8*, i64 }* %field.478 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2520, i8* nonnull align 8 %cast.2521, i64 16, i1 false)
  %call.158 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.104 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1675

cont.104:                                         ; preds = %fallthrough.195
  %cast.2523 = bitcast { i8*, i64 }* %tmpv.644 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2523, i8* nonnull align 8 %cast.2520, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.158, i8* nonnull %cast.2523)
          to label %cont.105 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1675

cont.105:                                         ; preds = %cont.104
  %tmp.96.sroa.0.0.cast.2528.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.645, i64 0, i64 0, i32 0, !dbg !1675
  store %_type.0* @string..d, %_type.0** %tmp.96.sroa.0.0.cast.2528.sroa_idx, align 8, !dbg !1675
  %tmp.96.sroa.2.0.cast.2528.sroa_idx790 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.645, i64 0, i64 0, i32 1, !dbg !1675
  store i8* %call.158, i8** %tmp.96.sroa.2.0.cast.2528.sroa_idx790, align 8, !dbg !1675
  %field.481 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.97, i64 0, i32 0, !dbg !1675
  %cast.2531 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.645, i64 0, i64 0, !dbg !1675
  store %IPST.16* %cast.2531, %IPST.16** %field.481, align 8, !dbg !1675
  %field.482 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.97, i64 0, i32 1, !dbg !1675
  store i64 1, i64* %field.482, align 8, !dbg !1675
  %field.483 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.97, i64 0, i32 2, !dbg !1675
  store i64 1, i64* %field.483, align 8, !dbg !1675
  %call.159 = invoke { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([45 x i8]* @const.330 to i64), i64 44, %IPST.2* byval nonnull %tmp.97)
          to label %cont.106 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1675

cont.106:                                         ; preds = %cont.105
  %call.159.fca.0.extract = extractvalue { i64, i64 } %call.159, 0, !dbg !1675
  %call.159.fca.1.extract = extractvalue { i64, i64 } %call.159, 1, !dbg !1675
  call void @llvm.dbg.value(metadata i64 %call.159.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.159.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.196:                                         ; preds = %label.2, %else.191
  %.ld.132 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1676
  invoke void @command_line_arguments.PackageDir({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.122, i8* nest undef, %Flags.0* %.ld.132, i64 ptrtoint ([26 x i8]* @const.333 to i64), i64 25)
          to label %cont.107 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1677

cont.107:                                         ; preds = %else.196
  %tmpv.648.sroa.0.0.cast.2545.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.122 to i8*, !dbg !1677
  %tmpv.648.sroa.3.0.cast.2545.sroa_idx724 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.122, i64 0, i32 1, !dbg !1677
  %tmpv.648.sroa.3.0.cast.2545.sroa_cast = bitcast %error.0* %tmpv.648.sroa.3.0.cast.2545.sroa_idx724 to i64*, !dbg !1677
  %tmpv.648.sroa.3.0.copyload725 = load i64, i64* %tmpv.648.sroa.3.0.cast.2545.sroa_cast, align 8, !dbg !1677
  %tmpv.648.sroa.4.0.cast.2545.sroa_idx726 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.122, i64 0, i32 1, i32 1, !dbg !1677
  %tmpv.648.sroa.4.0.cast.2545.sroa_cast = bitcast i8** %tmpv.648.sroa.4.0.cast.2545.sroa_idx726 to i64*, !dbg !1677
  %tmpv.648.sroa.4.0.copyload727 = load i64, i64* %tmpv.648.sroa.4.0.cast.2545.sroa_cast, align 8, !dbg !1677
  %bridgePath1116 = bitcast { i8*, i64 }* %bridgePath to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %bridgePath1116, i8* nonnull align 8 %tmpv.648.sroa.0.0.cast.2545.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.648.sroa.3.0.copyload725, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  call void @llvm.dbg.value(metadata i64 %tmpv.648.sroa.4.0.copyload727, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %icmp.241 = icmp eq i64 %tmpv.648.sroa.3.0.copyload725, 0, !dbg !1678
  br i1 %icmp.241, label %else.197, label %finally.2

else.197:                                         ; preds = %cont.107
  call void @llvm.dbg.value(metadata i8 0, metadata !1679, metadata !DIExpression()), !dbg !1681
  %cast.2558 = bitcast { i8*, i64 }* %tmpv.651 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2558, i8* align 8 bitcast ({ i8*, i64 }* @const.304 to i8*), i64 16, i1 false)
  %call.161 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.2558)
          to label %cont.108 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1682

cont.108:                                         ; preds = %else.197
  %call.161.fca.1.extract = extractvalue { i64, i8 } %call.161, 1, !dbg !1682
  call void @llvm.dbg.value(metadata i8 %call.161.fca.1.extract, metadata !1679, metadata !DIExpression()), !dbg !1681
  %29 = and i8 %call.161.fca.1.extract, 1, !dbg !1683
  %trunc.299 = icmp eq i8 %29, 0, !dbg !1683
  br i1 %trunc.299, label %fallthrough.198, label %then.198

then.198:                                         ; preds = %cont.108
  %30 = bitcast { i8*, i64 }* %binaryPath to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  %.ld.133 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1684
  %call.162 = invoke fastcc { i64, i64 } @command_line_arguments.validateXcodeInstall(%Flags.0* %.ld.133)
          to label %cont.109 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1687

fallthrough.198:                                  ; preds = %cont.108, %else.299
  call void @llvm.dbg.value(metadata i8 0, metadata !1688, metadata !DIExpression()), !dbg !1690
  %cast.3177 = bitcast { i8*, i64 }* %tmpv.888 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3177, i8* align 8 bitcast ({ i8*, i64 }* @const.295 to i8*), i64 16, i1 false)
  %call.193 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.3177)
          to label %cont.220 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1691

cont.109:                                         ; preds = %then.198
  %call.162.fca.0.extract = extractvalue { i64, i64 } %call.162, 0, !dbg !1687
  call void @llvm.dbg.value(metadata i64 %call.162.fca.0.extract, metadata !1692, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1693
  %icmp.242 = icmp eq i64 %call.162.fca.0.extract, 0, !dbg !1694
  br i1 %icmp.242, label %else.199, label %then.199

then.199:                                         ; preds = %cont.109
  %call.162.fca.1.extract = extractvalue { i64, i64 } %call.162, 1, !dbg !1687
  call void @llvm.dbg.value(metadata i64 %call.162.fca.1.extract, metadata !1692, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1693
  call void @llvm.dbg.value(metadata i64 %call.162.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.162.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.199:                                         ; preds = %cont.109
  %call.163 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.110 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1695

cont.110:                                         ; preds = %else.199
  call void @llvm.dbg.value(metadata i8* %call.163, metadata !1696, metadata !DIExpression()), !dbg !1697
  %cast.2578 = bitcast [2 x { i8*, i64 }]* %tmpv.660 to i8*, !dbg !1698
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2578, i8* align 8 %call.148, i64 16, i1 false), !dbg !1698
  %index.123 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.660, i64 0, i64 1, !dbg !1698
  %cast.2580 = bitcast { i8*, i64 }* %index.123 to i8*, !dbg !1698
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2580, i8* align 8 bitcast ({ i8*, i64 }* @const.336 to i8*), i64 16, i1 false), !dbg !1698
  %field.491 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 0, !dbg !1698
  %cast.2582 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.660, i64 0, i64 0, !dbg !1698
  store { i8*, i64 }* %cast.2582, { i8*, i64 }** %field.491, align 8, !dbg !1698
  %field.492 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 1, !dbg !1698
  store i64 2, i64* %field.492, align 8, !dbg !1698
  %field.493 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 2, !dbg !1698
  store i64 2, i64* %field.493, align 8, !dbg !1698
  %call.164 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.98)
          to label %cont.111 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1698

cont.111:                                         ; preds = %cont.110
  %call.164.fca.0.extract = extractvalue { i64, i64 } %call.164, 0, !dbg !1698
  %call.164.fca.1.extract = extractvalue { i64, i64 } %call.164, 1, !dbg !1698
  %sret.actual.125.sroa.0.0.cast.2584.sroa_cast = bitcast { i8*, i64 }* %tmpv.661 to i64*
  store i64 %call.164.fca.0.extract, i64* %sret.actual.125.sroa.0.0.cast.2584.sroa_cast, align 8
  %sret.actual.125.sroa.2.0.cast.2584.sroa_idx506 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.661, i64 0, i32 1
  store i64 %call.164.fca.1.extract, i64* %sret.actual.125.sroa.2.0.cast.2584.sroa_idx506, align 8
  %runtime.writeBarrier.ld.18 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1698
  %icmp.244 = icmp eq i32 %runtime.writeBarrier.ld.18, 0, !dbg !1698
  br i1 %icmp.244, label %then.200, label %else.200

then.200:                                         ; preds = %cont.111
  %icmp.243 = icmp eq i8* %call.163, null, !dbg !1698
  br i1 %icmp.243, label %then.201, label %fallthrough.201

fallthrough.200:                                  ; preds = %else.200, %fallthrough.201
  %cast.2593 = bitcast [2 x { i8*, i64 }]* %tmpv.664 to i8*, !dbg !1699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2593, i8* nonnull align 8 %call.148, i64 16, i1 false), !dbg !1699
  %index.125 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.664, i64 0, i64 1, !dbg !1699
  %cast.2595 = bitcast { i8*, i64 }* %index.125 to i8*, !dbg !1699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2595, i8* align 8 bitcast ({ i8*, i64 }* @const.338 to i8*), i64 16, i1 false), !dbg !1699
  %field.494 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.99, i64 0, i32 0, !dbg !1699
  %cast.2597 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.664, i64 0, i64 0, !dbg !1699
  store { i8*, i64 }* %cast.2597, { i8*, i64 }** %field.494, align 8, !dbg !1699
  %field.495 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.99, i64 0, i32 1, !dbg !1699
  store i64 2, i64* %field.495, align 8, !dbg !1699
  %field.496 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.99, i64 0, i32 2, !dbg !1699
  store i64 2, i64* %field.496, align 8, !dbg !1699
  %call.165 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.99)
          to label %cont.114 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1699

else.200:                                         ; preds = %cont.111
  %cast.2590 = bitcast { i8*, i64 }* %tmpv.661 to i8*, !dbg !1698
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.163, i8* nonnull %cast.2590)
          to label %fallthrough.200 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1698

then.201:                                         ; preds = %then.200
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.201 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1698

fallthrough.201:                                  ; preds = %then.200, %then.201
  %cast.2588 = bitcast { i8*, i64 }* %tmpv.661 to i8*, !dbg !1698
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call.163, i8* nonnull align 8 %cast.2588, i64 16, i1 false), !dbg !1698
  br label %fallthrough.200

cont.114:                                         ; preds = %fallthrough.200
  %call.165.fca.0.extract = extractvalue { i64, i64 } %call.165, 0, !dbg !1699
  %call.165.fca.1.extract = extractvalue { i64, i64 } %call.165, 1, !dbg !1699
  call void @llvm.dbg.value(metadata i64 %call.165.fca.0.extract, metadata !1700, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1701
  call void @llvm.dbg.value(metadata i64 %call.165.fca.1.extract, metadata !1700, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1701
  %.ld.135 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1702
  %call.166 = invoke { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* %.ld.135, i64 %call.165.fca.0.extract, i64 %call.165.fca.1.extract)
          to label %cont.115 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1704

cont.115:                                         ; preds = %cont.114
  %call.166.fca.0.extract = extractvalue { i64, i64 } %call.166, 0, !dbg !1704
  call void @llvm.dbg.value(metadata i64 %call.166.fca.0.extract, metadata !1705, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1706
  %icmp.245 = icmp eq i64 %call.166.fca.0.extract, 0, !dbg !1707
  br i1 %icmp.245, label %else.202, label %then.202

then.202:                                         ; preds = %cont.115
  %call.166.fca.1.extract = extractvalue { i64, i64 } %call.166, 1, !dbg !1704
  call void @llvm.dbg.value(metadata i64 %call.166.fca.1.extract, metadata !1705, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1706
  call void @llvm.dbg.value(metadata i64 %call.166.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.166.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.202:                                         ; preds = %cont.115
  %workOutputDir.sroa.0.0.cast.2615.sroa_cast = bitcast [4 x { i8*, i64 }]* %tmpv.668 to i64*, !dbg !1708
  store i64 %call.165.fca.0.extract, i64* %workOutputDir.sroa.0.0.cast.2615.sroa_cast, align 8, !dbg !1708
  %workOutputDir.sroa.5.0.cast.2615.sroa_idx583 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.668, i64 0, i64 0, i32 1, !dbg !1708
  store i64 %call.165.fca.1.extract, i64* %workOutputDir.sroa.5.0.cast.2615.sroa_idx583, align 8, !dbg !1708
  %index.127 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.668, i64 0, i64 1, !dbg !1708
  %cast.2617 = bitcast { i8*, i64 }* %index.127 to i8*, !dbg !1708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2617, i8* align 8 bitcast ({ i8*, i64 }* @const.340 to i8*), i64 16, i1 false), !dbg !1708
  %index.128 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.668, i64 0, i64 2, !dbg !1708
  %cast.2619 = bitcast { i8*, i64 }* %index.128 to i8*, !dbg !1708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2619, i8* align 8 bitcast ({ i8*, i64 }* @const.340 to i8*), i64 16, i1 false), !dbg !1708
  %index.129 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.668, i64 0, i64 3, !dbg !1708
  %cast.2621 = bitcast { i8*, i64 }* %index.129 to i8*, !dbg !1708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2621, i8* align 8 bitcast ({ i8*, i64 }* @const.342 to i8*), i64 16, i1 false), !dbg !1708
  %field.498 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.100, i64 0, i32 0, !dbg !1708
  %cast.2623 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.668, i64 0, i64 0, !dbg !1708
  store { i8*, i64 }* %cast.2623, { i8*, i64 }** %field.498, align 8, !dbg !1708
  %field.499 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.100, i64 0, i32 1, !dbg !1708
  store i64 4, i64* %field.499, align 8, !dbg !1708
  %field.500 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.100, i64 0, i32 2, !dbg !1708
  store i64 4, i64* %field.500, align 8, !dbg !1708
  %call.167 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.100)
          to label %cont.116 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1708

cont.116:                                         ; preds = %else.202
  %call.167.fca.0.extract = extractvalue { i64, i64 } %call.167, 0, !dbg !1708
  %call.167.fca.1.extract = extractvalue { i64, i64 } %call.167, 1, !dbg !1708
  %sret.actual.128.sroa.0.0.cast.2625.sroa_cast = bitcast { i8*, i64 }* %binaryPath to i64*
  store i64 %call.167.fca.0.extract, i64* %sret.actual.128.sroa.0.0.cast.2625.sroa_cast, align 8
  %sret.actual.128.sroa.2.0.cast.2625.sroa_idx500 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %binaryPath, i64 0, i32 1
  store i64 %call.167.fca.1.extract, i64* %sret.actual.128.sroa.2.0.cast.2625.sroa_idx500, align 8
  %call.168 = invoke { i64, i64 } @path_filepath.Dir(i8* nest undef, i64 %call.167.fca.0.extract, i64 %call.167.fca.1.extract)
          to label %cont.117 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1709

cont.117:                                         ; preds = %cont.116
  %call.168.fca.0.extract = extractvalue { i64, i64 } %call.168, 0, !dbg !1709
  %call.168.fca.1.extract = extractvalue { i64, i64 } %call.168, 1, !dbg !1709
  %.ld.136 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1711
  %call.169 = invoke { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* %.ld.136, i64 %call.168.fca.0.extract, i64 %call.168.fca.1.extract)
          to label %cont.118 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1712

cont.118:                                         ; preds = %cont.117
  %call.169.fca.0.extract = extractvalue { i64, i64 } %call.169, 0, !dbg !1712
  call void @llvm.dbg.value(metadata i64 %call.169.fca.0.extract, metadata !1713, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1714
  %icmp.246 = icmp eq i64 %call.169.fca.0.extract, 0, !dbg !1715
  br i1 %icmp.246, label %else.203, label %then.203

then.203:                                         ; preds = %cont.118
  %call.169.fca.1.extract = extractvalue { i64, i64 } %call.169, 1, !dbg !1712
  call void @llvm.dbg.value(metadata i64 %call.169.fca.1.extract, metadata !1713, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1714
  call void @llvm.dbg.value(metadata i64 %call.169.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.169.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.203:                                         ; preds = %cont.118
  %call.170 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.119 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1716

cont.119:                                         ; preds = %else.203
  call void @llvm.dbg.value(metadata i8* %call.170, metadata !1717, metadata !DIExpression()), !dbg !1718
  %cast.2648 = bitcast [4 x { i8*, i64 }]* %tmpv.676 to i8*, !dbg !1719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2648, i8* nonnull align 8 %call.148, i64 16, i1 false), !dbg !1719
  %index.131 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.676, i64 0, i64 1, !dbg !1719
  %cast.2650 = bitcast { i8*, i64 }* %index.131 to i8*, !dbg !1719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2650, i8* align 8 bitcast ({ i8*, i64 }* @const.344 to i8*), i64 16, i1 false), !dbg !1719
  %index.132 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.676, i64 0, i64 2, !dbg !1719
  %cast.2652 = bitcast { i8*, i64 }* %index.132 to i8*, !dbg !1719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2652, i8* align 8 bitcast ({ i8*, i64 }* @const.346 to i8*), i64 16, i1 false), !dbg !1719
  %index.133 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.676, i64 0, i64 3, !dbg !1719
  %cast.2654 = bitcast { i8*, i64 }* %index.133 to i8*, !dbg !1719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2654, i8* align 8 bitcast ({ i8*, i64 }* @const.348 to i8*), i64 16, i1 false), !dbg !1719
  %field.502 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.101, i64 0, i32 0, !dbg !1719
  %cast.2656 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.676, i64 0, i64 0, !dbg !1719
  store { i8*, i64 }* %cast.2656, { i8*, i64 }** %field.502, align 8, !dbg !1719
  %field.503 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.101, i64 0, i32 1, !dbg !1719
  store i64 4, i64* %field.503, align 8, !dbg !1719
  %field.504 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.101, i64 0, i32 2, !dbg !1719
  store i64 4, i64* %field.504, align 8, !dbg !1719
  %call.171 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.101)
          to label %cont.120 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1719

cont.120:                                         ; preds = %cont.119
  %call.171.fca.0.extract = extractvalue { i64, i64 } %call.171, 0, !dbg !1719
  %call.171.fca.1.extract = extractvalue { i64, i64 } %call.171, 1, !dbg !1719
  %sret.actual.131.sroa.0.0.cast.2658.sroa_cast = bitcast { i8*, i64 }* %tmpv.677 to i64*
  store i64 %call.171.fca.0.extract, i64* %sret.actual.131.sroa.0.0.cast.2658.sroa_cast, align 8
  %sret.actual.131.sroa.2.0.cast.2658.sroa_idx493 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.677, i64 0, i32 1
  store i64 %call.171.fca.1.extract, i64* %sret.actual.131.sroa.2.0.cast.2658.sroa_idx493, align 8
  %runtime.writeBarrier.ld.19 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1719
  %icmp.248 = icmp eq i32 %runtime.writeBarrier.ld.19, 0, !dbg !1719
  br i1 %icmp.248, label %then.204, label %else.204

then.204:                                         ; preds = %cont.120
  %icmp.247 = icmp eq i8* %call.170, null, !dbg !1719
  br i1 %icmp.247, label %then.205, label %fallthrough.205

fallthrough.204:                                  ; preds = %else.204, %fallthrough.205
  %31 = bitcast %IPST.3* %args to i8**, !dbg !1720
  %args.field.ld.2947 = load i8*, i8** %31, align 8, !dbg !1720
  %icmp.249 = icmp slt i64 %args.field.ld.0, 1, !dbg !1721
  br i1 %icmp.249, label %then.206, label %fallthrough.206

else.204:                                         ; preds = %cont.120
  %cast.2664 = bitcast { i8*, i64 }* %tmpv.677 to i8*, !dbg !1719
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.170, i8* nonnull %cast.2664)
          to label %fallthrough.204 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1719

then.205:                                         ; preds = %then.204
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.205 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1719

fallthrough.205:                                  ; preds = %then.204, %then.205
  %cast.2662 = bitcast { i8*, i64 }* %tmpv.677 to i8*, !dbg !1719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call.170, i8* nonnull align 8 %cast.2662, i64 16, i1 false), !dbg !1719
  br label %fallthrough.204

then.206:                                         ; preds = %fallthrough.204
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.206 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1721

fallthrough.206:                                  ; preds = %fallthrough.204, %then.206
  %cast.2665 = bitcast { i8*, i64 }* %tmpv.680 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2665, i8* align 8 %args.field.ld.2947, i64 16, i1 false)
  %call.172 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.124 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1722

cont.124:                                         ; preds = %fallthrough.206
  %cast.2668 = bitcast { i8*, i64 }* %tmpv.683 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2668, i8* nonnull align 8 %cast.2665, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.172, i8* nonnull %cast.2668)
          to label %cont.125 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1722

cont.125:                                         ; preds = %cont.124
  %tmp.102.sroa.0.0.cast.2673.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.684, i64 0, i64 0, i32 0, !dbg !1722
  store %_type.0* @string..d, %_type.0** %tmp.102.sroa.0.0.cast.2673.sroa_idx, align 8, !dbg !1722
  %tmp.102.sroa.2.0.cast.2673.sroa_idx791 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.684, i64 0, i64 0, i32 1, !dbg !1722
  store i8* %call.172, i8** %tmp.102.sroa.2.0.cast.2673.sroa_idx791, align 8, !dbg !1722
  %field.509 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.103, i64 0, i32 0, !dbg !1722
  %cast.2676 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.684, i64 0, i64 0, !dbg !1722
  store %IPST.16* %cast.2676, %IPST.16** %field.509, align 8, !dbg !1722
  %field.510 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.103, i64 0, i32 1, !dbg !1722
  store i64 1, i64* %field.510, align 8, !dbg !1722
  %field.511 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.103, i64 0, i32 2, !dbg !1722
  store i64 1, i64* %field.511, align 8, !dbg !1722
  %ld.299 = load i64, i64* bitcast ({ i8*, i64 }* @command_line_arguments.BindFile to i64*), align 8, !dbg !1722
  %ld.300 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* @command_line_arguments.BindFile, i64 0, i32 1), align 8, !dbg !1722
  %call.173 = invoke { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 %ld.299, i64 %ld.300, %IPST.2* byval nonnull %tmp.103)
          to label %cont.126 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1722

cont.126:                                         ; preds = %cont.125
  %call.173.fca.0.extract = extractvalue { i64, i64 } %call.173, 0, !dbg !1722
  %call.173.fca.1.extract = extractvalue { i64, i64 } %call.173, 1, !dbg !1722
  %call.174 = invoke %Reader.3* @strings.NewReader(i8* nest undef, i64 %call.173.fca.0.extract, i64 %call.173.fca.1.extract)
          to label %cont.127 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1723

cont.127:                                         ; preds = %cont.126
  %.ld.139 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1724
  %32 = ptrtoint %Reader.3* %call.174 to i64, !dbg !1723
  %field0.134 = bitcast i8* %call.170 to i64*, !dbg !1725
  %ld.303 = load i64, i64* %field0.134, align 8, !dbg !1725
  %field1.134 = getelementptr inbounds i8, i8* %call.170, i64 8, !dbg !1725
  %33 = bitcast i8* %field1.134 to i64*, !dbg !1725
  %ld.304 = load i64, i64* %33, align 8, !dbg !1725
  %call.175 = invoke { i64, i64 } @command_line_arguments.WriteFile(i8* nest undef, %Flags.0* %.ld.139, i64 %ld.303, i64 %ld.304, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.3*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader to i64), i64 %32)
          to label %cont.128 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1725

cont.128:                                         ; preds = %cont.127
  %call.175.fca.0.extract = extractvalue { i64, i64 } %call.175, 0, !dbg !1725
  call void @llvm.dbg.value(metadata i64 %call.175.fca.0.extract, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  %icmp.252 = icmp eq i64 %call.175.fca.0.extract, 0, !dbg !1726
  br i1 %icmp.252, label %else.207, label %else.208

else.207:                                         ; preds = %cont.128
  %call.177 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7.6.7string, i64 0, i32 0))
          to label %cont.130 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1727

else.208:                                         ; preds = %cont.128
  %call.175.fca.1.extract = extractvalue { i64, i64 } %call.175, 1, !dbg !1725
  call void @llvm.dbg.value(metadata i64 %call.175.fca.1.extract, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %34 = inttoptr i64 %call.175.fca.0.extract to i64*, !dbg !1728
  %.field.ld.50959 = load i64, i64* %34, align 8, !dbg !1728
  %35 = inttoptr i64 %call.175.fca.1.extract to i8*, !dbg !1729
  %36 = bitcast [1 x %IPST.16]* %tmpv.688 to i64*, !dbg !1729
  store i64 %.field.ld.50959, i64* %36, align 8, !dbg !1729
  %tmp.105.sroa.2.0.cast.2693.sroa_idx792 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.688, i64 0, i64 0, i32 1, !dbg !1729
  store i8* %35, i8** %tmp.105.sroa.2.0.cast.2693.sroa_idx792, align 8, !dbg !1729
  %field.520 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.106, i64 0, i32 0, !dbg !1729
  %cast.2696 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.688, i64 0, i64 0, !dbg !1729
  store %IPST.16* %cast.2696, %IPST.16** %field.520, align 8, !dbg !1729
  %field.521 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.106, i64 0, i32 1, !dbg !1729
  store i64 1, i64* %field.521, align 8, !dbg !1729
  %field.522 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.106, i64 0, i32 2, !dbg !1729
  store i64 1, i64* %field.522, align 8, !dbg !1729
  %call.176 = invoke { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([49 x i8]* @const.349 to i64), i64 48, %IPST.2* byval nonnull %tmp.106)
          to label %cont.129 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1729

cont.129:                                         ; preds = %else.208
  %call.176.fca.0.extract = extractvalue { i64, i64 } %call.176, 0, !dbg !1729
  %call.176.fca.1.extract = extractvalue { i64, i64 } %call.176, 1, !dbg !1729
  call void @llvm.dbg.value(metadata i64 %call.176.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.176.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

cont.130:                                         ; preds = %else.207
  call void @llvm.dbg.value(metadata i64 0, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i64 0, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i8 0, metadata !1736, metadata !DIExpression()), !dbg !1738
  %cast.2711 = bitcast { i8*, i64 }* %tmpv.692 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2711, i8* align 8 bitcast ({ i8*, i64 }* @const.306 to i8*), i64 16, i1 false)
  %call.178 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.2711)
          to label %cont.131 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1739

cont.131:                                         ; preds = %cont.130
  %cast.2710 = bitcast i8* %call.177 to %IPST.3*, !dbg !1727
  call void @llvm.dbg.value(metadata %IPST.3* %cast.2710, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  %call.178.fca.1.extract = extractvalue { i64, i8 } %call.178, 1, !dbg !1739
  call void @llvm.dbg.value(metadata i8 %call.178.fca.1.extract, metadata !1736, metadata !DIExpression()), !dbg !1738
  %37 = and i8 %call.178.fca.1.extract, 1, !dbg !1740
  %trunc.215 = icmp eq i8 %37, 0, !dbg !1740
  br i1 %trunc.215, label %fallthrough.209, label %then.209

then.209:                                         ; preds = %cont.131
  %env.0.sroa_cast = bitcast %IPST.3* %env to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %env.0.sroa_cast)
  %.ld.140 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1741
  invoke void @command_line_arguments.DarwinArmEnv({ %IPST.3, %error.0 }* nonnull sret %sret.actual.136, i8* nest undef, %Flags.0* %.ld.140)
          to label %cont.132 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1743

fallthrough.209:                                  ; preds = %cont.131, %fallthrough.215
  %envs.sroa.0.0 = phi %IPST.3* [ %envs.sroa.0.0.copyload547, %fallthrough.215 ], [ %cast.2710, %cont.131 ], !dbg !1744
  %envs.sroa.12.0 = phi i64 [ %envs.sroa.12.0.copyload562, %fallthrough.215 ], [ 0, %cont.131 ], !dbg !1744
  %envs.sroa.15.0 = phi i64 [ %envs.sroa.15.0.copyload578, %fallthrough.215 ], [ 0, %cont.131 ], !dbg !1744
  call void @llvm.dbg.value(metadata i64 %envs.sroa.15.0, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.0, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.0, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i8 0, metadata !1745, metadata !DIExpression()), !dbg !1747
  %cast.2760 = bitcast { i8*, i64 }* %tmpv.713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2760, i8* align 8 bitcast ({ i8*, i64 }* @const.308 to i8*), i64 16, i1 false)
  %call.179 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.2760)
          to label %cont.138 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1748

cont.132:                                         ; preds = %then.209
  %tmpv.698.sroa.0.0.cast.2724.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.136 to i8*, !dbg !1743
  %tmpv.698.sroa.3.0.cast.2724.sroa_idx481 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.136, i64 0, i32 1, i32 0, !dbg !1743
  %tmpv.698.sroa.3.0.copyload482 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.698.sroa.3.0.cast.2724.sroa_idx481, align 8, !dbg !1743
  %tmpv.698.sroa.4.0.cast.2724.sroa_idx483 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.136, i64 0, i32 1, i32 1, !dbg !1743
  %38 = bitcast i8** %tmpv.698.sroa.4.0.cast.2724.sroa_idx483 to i64*, !dbg !1743
  %tmpv.698.sroa.4.0.copyload484958 = load i64, i64* %38, align 8, !dbg !1743
  %env1117 = bitcast %IPST.3* %env to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env1117, i8* nonnull align 8 %tmpv.698.sroa.0.0.cast.2724.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.698.sroa.3.0.copyload482, metadata !1749, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1750
  call void @llvm.dbg.value(metadata i8** %tmpv.698.sroa.4.0.cast.2724.sroa_idx483, metadata !1749, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1750
  %icmp.253 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.698.sroa.3.0.copyload482, null, !dbg !1751
  br i1 %icmp.253, label %else.210, label %then.210

then.210:                                         ; preds = %cont.132
  %39 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.698.sroa.3.0.copyload482 to i64, !dbg !1752
  call void @llvm.dbg.value(metadata i64 %39, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %tmpv.698.sroa.4.0.copyload484958, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.210:                                         ; preds = %cont.132
  %envs.sroa.0.0.cast.2737.sroa_idx = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.701, i64 0, i32 0
  %40 = bitcast %IPST.11* %tmpv.701 to i8**
  store i8* %call.177, i8** %40, align 8
  %envs.sroa.12.0.cast.2737.sroa_idx563 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.701, i64 0, i32 1
  %envs.sroa.15.0.cast.2737.sroa_idx579 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.701, i64 0, i32 2
  %cast.2740 = bitcast %IPST.11* %tmpv.701 to %IPST.4*, !dbg !1753
  %41 = bitcast i64* %envs.sroa.12.0.cast.2737.sroa_idx563 to i8*, !dbg !1753
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 16, i1 false)
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.137, i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), %IPST.4* byval nonnull %cast.2740, i64 1)
          to label %cont.133 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1753

cont.133:                                         ; preds = %else.210
  %tmpv.707.sroa.0.0.cast.2745.sroa_idx = bitcast %IPST.4* %sret.actual.137 to %IPST.3**
  %tmpv.707.sroa.0.0.copyload = load %IPST.3*, %IPST.3** %tmpv.707.sroa.0.0.cast.2745.sroa_idx, align 8
  %42 = bitcast %IPST.3* %tmpv.707.sroa.0.0.copyload to i8*
  %43 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.137, i64 0, i32 1
  %tmpv.707.sroa.3.0.copyload = load i64, i64* %43, align 8
  %44 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.137, i64 0, i32 2
  %tmpv.707.sroa.4.0.copyload = load i64, i64* %44, align 8
  store %IPST.3* %tmpv.707.sroa.0.0.copyload, %IPST.3** %envs.sroa.0.0.cast.2737.sroa_idx, align 8, !dbg !1753
  store i64 %tmpv.707.sroa.3.0.copyload, i64* %envs.sroa.12.0.cast.2737.sroa_idx563, align 8, !dbg !1753
  store i64 %tmpv.707.sroa.4.0.copyload, i64* %envs.sroa.15.0.cast.2737.sroa_idx579, align 8, !dbg !1753
  %icmp.261 = icmp slt i64 %tmpv.707.sroa.3.0.copyload, 1, !dbg !1753
  br i1 %icmp.261, label %then.214, label %fallthrough.214

then.214:                                         ; preds = %cont.133
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.214 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1753

fallthrough.214:                                  ; preds = %cont.133, %then.214
  %cast.2750 = bitcast %IPST.3* %tmpv.711 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2750, i8* nonnull align 8 %env.0.sroa_cast, i64 24, i1 false)
  %runtime.writeBarrier.ld.20 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1753
  %icmp.264 = icmp eq i32 %runtime.writeBarrier.ld.20, 0, !dbg !1753
  br i1 %icmp.264, label %then.215, label %else.215

then.215:                                         ; preds = %fallthrough.214
  %icmp.263 = icmp eq %IPST.3* %tmpv.707.sroa.0.0.copyload, null, !dbg !1753
  br i1 %icmp.263, label %then.216, label %fallthrough.216

fallthrough.215:                                  ; preds = %else.215, %fallthrough.216
  %envs.sroa.0.0.copyload547 = load %IPST.3*, %IPST.3** %envs.sroa.0.0.cast.2737.sroa_idx, align 8, !dbg !1754
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.0.copyload547, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  %envs.sroa.12.0.copyload562 = load i64, i64* %envs.sroa.12.0.cast.2737.sroa_idx563, align 8, !dbg !1754
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.0.copyload562, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  %envs.sroa.15.0.copyload578 = load i64, i64* %envs.sroa.15.0.cast.2737.sroa_idx579, align 8, !dbg !1754
  call void @llvm.dbg.value(metadata i64 %envs.sroa.15.0.copyload578, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %env.0.sroa_cast)
  br label %fallthrough.209

else.215:                                         ; preds = %fallthrough.214
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* %42, i8* nonnull %cast.2750)
          to label %fallthrough.215 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1753

then.216:                                         ; preds = %then.215
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.216 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1753

fallthrough.216:                                  ; preds = %then.215, %then.216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %cast.2750, i64 24, i1 false), !dbg !1753
  br label %fallthrough.215

cont.138:                                         ; preds = %fallthrough.209
  %call.179.fca.1.extract = extractvalue { i64, i8 } %call.179, 1, !dbg !1748
  call void @llvm.dbg.value(metadata i8 %call.179.fca.1.extract, metadata !1745, metadata !DIExpression()), !dbg !1747
  %45 = and i8 %call.179.fca.1.extract, 1, !dbg !1755
  %trunc.223 = icmp eq i8 %45, 0, !dbg !1755
  br i1 %trunc.223, label %fallthrough.217, label %then.217

then.217:                                         ; preds = %cont.138
  %env7.0.sroa_cast = bitcast %IPST.3* %env7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %env7.0.sroa_cast)
  %.ld.150 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1756
  invoke void @command_line_arguments.DarwinArm64Env({ %IPST.3, %error.0 }* nonnull sret %sret.actual.139, i8* nest undef, %Flags.0* %.ld.150)
          to label %cont.139 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1758

fallthrough.217:                                  ; preds = %cont.138, %fallthrough.223
  %envs.sroa.0.1 = phi %IPST.3* [ %envs.sroa.0.0.copyload545, %fallthrough.223 ], [ %envs.sroa.0.0, %cont.138 ], !dbg !1759
  %envs.sroa.12.1 = phi i64 [ %envs.sroa.12.0.copyload558, %fallthrough.223 ], [ %envs.sroa.12.0, %cont.138 ], !dbg !1759
  %envs.sroa.15.1 = phi i64 [ %envs.sroa.15.0.copyload574, %fallthrough.223 ], [ %envs.sroa.15.0, %cont.138 ], !dbg !1759
  call void @llvm.dbg.value(metadata i64 %envs.sroa.15.1, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.1, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.1, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i8 0, metadata !1760, metadata !DIExpression()), !dbg !1762
  %cast.2809 = bitcast { i8*, i64 }* %tmpv.734 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2809, i8* align 8 bitcast ({ i8*, i64 }* @const.312 to i8*), i64 16, i1 false)
  %call.180 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.2809)
          to label %cont.145 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1763

cont.139:                                         ; preds = %then.217
  %tmpv.719.sroa.0.0.cast.2773.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.139 to i8*, !dbg !1758
  %tmpv.719.sroa.3.0.cast.2773.sroa_idx453 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.139, i64 0, i32 1, i32 0, !dbg !1758
  %tmpv.719.sroa.3.0.copyload454 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.719.sroa.3.0.cast.2773.sroa_idx453, align 8, !dbg !1758
  %tmpv.719.sroa.4.0.cast.2773.sroa_idx455 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.139, i64 0, i32 1, i32 1, !dbg !1758
  %46 = bitcast i8** %tmpv.719.sroa.4.0.cast.2773.sroa_idx455 to i64*, !dbg !1758
  %tmpv.719.sroa.4.0.copyload456956 = load i64, i64* %46, align 8, !dbg !1758
  %env71118 = bitcast %IPST.3* %env7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env71118, i8* nonnull align 8 %tmpv.719.sroa.0.0.cast.2773.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.719.sroa.3.0.copyload454, metadata !1764, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1765
  call void @llvm.dbg.value(metadata i8** %tmpv.719.sroa.4.0.cast.2773.sroa_idx455, metadata !1764, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1765
  %icmp.265 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.719.sroa.3.0.copyload454, null, !dbg !1766
  br i1 %icmp.265, label %else.218, label %then.218

then.218:                                         ; preds = %cont.139
  %47 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.719.sroa.3.0.copyload454 to i64, !dbg !1767
  call void @llvm.dbg.value(metadata i64 %47, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %tmpv.719.sroa.4.0.copyload456956, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.218:                                         ; preds = %cont.139
  %envs.sroa.0.0.cast.2786.sroa_idx = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.722, i64 0, i32 0
  store %IPST.3* %envs.sroa.0.0, %IPST.3** %envs.sroa.0.0.cast.2786.sroa_idx, align 8
  %envs.sroa.12.0.cast.2786.sroa_idx559 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.722, i64 0, i32 1
  store i64 %envs.sroa.12.0, i64* %envs.sroa.12.0.cast.2786.sroa_idx559, align 8
  %envs.sroa.15.0.cast.2786.sroa_idx575 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.722, i64 0, i32 2
  store i64 %envs.sroa.15.0, i64* %envs.sroa.15.0.cast.2786.sroa_idx575, align 8
  %add.19 = add i64 %envs.sroa.12.0, 1, !dbg !1768
  %icmp.266 = icmp ugt i64 %add.19, %envs.sroa.15.0, !dbg !1768
  br i1 %icmp.266, label %then.219, label %else.219

then.219:                                         ; preds = %else.218
  %cast.2789 = bitcast %IPST.11* %tmpv.722 to %IPST.4*, !dbg !1768
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.140, i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), %IPST.4* byval nonnull %cast.2789, i64 %add.19)
          to label %cont.140 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1768

fallthrough.219:                                  ; preds = %else.219, %then.220, %cont.140
  %tmpv.728.sroa.0.0 = phi %IPST.3* [ %tmpv.728.sroa.0.0.copyload, %cont.140 ], [ undef, %then.220 ], [ %envs.sroa.0.0, %else.219 ]
  %tmpv.728.sroa.3.0 = phi i64 [ %tmpv.728.sroa.3.0.copyload, %cont.140 ], [ %add.19, %then.220 ], [ %add.19, %else.219 ]
  %tmpv.728.sroa.4.0 = phi i64 [ %tmpv.728.sroa.4.0.copyload, %cont.140 ], [ undef, %then.220 ], [ %envs.sroa.15.0, %else.219 ]
  store %IPST.3* %tmpv.728.sroa.0.0, %IPST.3** %envs.sroa.0.0.cast.2786.sroa_idx, align 8, !dbg !1768
  store i64 %tmpv.728.sroa.3.0, i64* %envs.sroa.12.0.cast.2786.sroa_idx559, align 8, !dbg !1768
  store i64 %tmpv.728.sroa.4.0, i64* %envs.sroa.15.0.cast.2786.sroa_idx575, align 8, !dbg !1768
  %icmp.273 = icmp sge i64 %envs.sroa.12.0, %tmpv.728.sroa.3.0, !dbg !1768
  %48 = icmp slt i64 %envs.sroa.12.0, 0, !dbg !1768
  %ior.128 = or i1 %48, %icmp.273, !dbg !1768
  br i1 %ior.128, label %then.222, label %fallthrough.222

else.219:                                         ; preds = %else.218
  %icmp.268 = icmp sgt i64 %add.19, %envs.sroa.15.0, !dbg !1768
  %add.19.lobit964 = or i64 %add.19, %envs.sroa.15.0, !dbg !1768
  %49 = icmp slt i64 %add.19.lobit964, 0, !dbg !1768
  %50 = or i1 %icmp.268, %49, !dbg !1768
  br i1 %50, label %then.220, label %fallthrough.219

cont.140:                                         ; preds = %then.219
  %tmpv.728.sroa.0.0.cast.2794.sroa_idx = bitcast %IPST.4* %sret.actual.140 to %IPST.3**
  %tmpv.728.sroa.0.0.copyload = load %IPST.3*, %IPST.3** %tmpv.728.sroa.0.0.cast.2794.sroa_idx, align 8
  %51 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.140, i64 0, i32 1
  %tmpv.728.sroa.3.0.copyload = load i64, i64* %51, align 8
  %52 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.140, i64 0, i32 2
  %tmpv.728.sroa.4.0.copyload = load i64, i64* %52, align 8
  br label %fallthrough.219

then.220:                                         ; preds = %else.219
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.219 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1768

then.222:                                         ; preds = %fallthrough.219
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.222 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1768

fallthrough.222:                                  ; preds = %fallthrough.219, %then.222
  %ptroff.22 = getelementptr %IPST.3, %IPST.3* %tmpv.728.sroa.0.0, i64 %envs.sroa.12.0, !dbg !1768
  %cast.2799 = bitcast %IPST.3* %tmpv.732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2799, i8* nonnull align 8 %env7.0.sroa_cast, i64 24, i1 false)
  %runtime.writeBarrier.ld.21 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1768
  %icmp.276 = icmp eq i32 %runtime.writeBarrier.ld.21, 0, !dbg !1768
  br i1 %icmp.276, label %then.223, label %else.223

then.223:                                         ; preds = %fallthrough.222
  %icmp.275 = icmp eq %IPST.3* %ptroff.22, null, !dbg !1768
  br i1 %icmp.275, label %then.224, label %fallthrough.224

fallthrough.223:                                  ; preds = %else.223, %fallthrough.224
  %envs.sroa.0.0.copyload545 = load %IPST.3*, %IPST.3** %envs.sroa.0.0.cast.2786.sroa_idx, align 8, !dbg !1769
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.0.copyload545, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  %envs.sroa.12.0.copyload558 = load i64, i64* %envs.sroa.12.0.cast.2786.sroa_idx559, align 8, !dbg !1769
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.0.copyload558, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  %envs.sroa.15.0.copyload574 = load i64, i64* %envs.sroa.15.0.cast.2786.sroa_idx575, align 8, !dbg !1769
  call void @llvm.dbg.value(metadata i64 %envs.sroa.15.0.copyload574, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %env7.0.sroa_cast)
  br label %fallthrough.217

else.223:                                         ; preds = %fallthrough.222
  %cast.2805 = bitcast %IPST.3* %ptroff.22 to i8*, !dbg !1768
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* %cast.2805, i8* nonnull %cast.2799)
          to label %fallthrough.223 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1768

then.224:                                         ; preds = %then.223
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.224 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1768

fallthrough.224:                                  ; preds = %then.223, %then.224
  %cast.2802 = bitcast %IPST.3* %ptroff.22 to i8*, !dbg !1768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2802, i8* nonnull align 8 %cast.2799, i64 24, i1 false), !dbg !1768
  br label %fallthrough.223

cont.145:                                         ; preds = %fallthrough.217
  %call.180.fca.1.extract = extractvalue { i64, i8 } %call.180, 1, !dbg !1763
  call void @llvm.dbg.value(metadata i8 %call.180.fca.1.extract, metadata !1760, metadata !DIExpression()), !dbg !1762
  %53 = and i8 %call.180.fca.1.extract, 1, !dbg !1770
  %trunc.231 = icmp eq i8 %53, 0, !dbg !1770
  br i1 %trunc.231, label %fallthrough.225, label %then.225

then.225:                                         ; preds = %cont.145
  %env10.0.sroa_cast = bitcast %IPST.3* %env10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %env10.0.sroa_cast)
  %.ld.160 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1771
  invoke void @command_line_arguments.Darwin386Env({ %IPST.3, %error.0 }* nonnull sret %sret.actual.142, i8* nest undef, %Flags.0* %.ld.160)
          to label %cont.146 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1773

fallthrough.225:                                  ; preds = %cont.145, %fallthrough.231
  %envs.sroa.0.2 = phi %IPST.3* [ %envs.sroa.0.0.copyload543, %fallthrough.231 ], [ %envs.sroa.0.1, %cont.145 ], !dbg !1774
  %envs.sroa.12.2 = phi i64 [ %envs.sroa.12.0.copyload554, %fallthrough.231 ], [ %envs.sroa.12.1, %cont.145 ], !dbg !1774
  %envs.sroa.15.2 = phi i64 [ %envs.sroa.15.0.copyload570, %fallthrough.231 ], [ %envs.sroa.15.1, %cont.145 ], !dbg !1774
  call void @llvm.dbg.value(metadata i64 %envs.sroa.15.2, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.2, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.2, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i8 0, metadata !1775, metadata !DIExpression()), !dbg !1777
  %cast.2858 = bitcast { i8*, i64 }* %tmpv.755 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2858, i8* align 8 bitcast ({ i8*, i64 }* @const.310 to i8*), i64 16, i1 false)
  %call.181 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.2858)
          to label %cont.152 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1778

cont.146:                                         ; preds = %then.225
  %tmpv.740.sroa.0.0.cast.2822.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.142 to i8*, !dbg !1773
  %tmpv.740.sroa.3.0.cast.2822.sroa_idx425 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.142, i64 0, i32 1, i32 0, !dbg !1773
  %tmpv.740.sroa.3.0.copyload426 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.740.sroa.3.0.cast.2822.sroa_idx425, align 8, !dbg !1773
  %tmpv.740.sroa.4.0.cast.2822.sroa_idx427 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.142, i64 0, i32 1, i32 1, !dbg !1773
  %54 = bitcast i8** %tmpv.740.sroa.4.0.cast.2822.sroa_idx427 to i64*, !dbg !1773
  %tmpv.740.sroa.4.0.copyload428954 = load i64, i64* %54, align 8, !dbg !1773
  %env101119 = bitcast %IPST.3* %env10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env101119, i8* nonnull align 8 %tmpv.740.sroa.0.0.cast.2822.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.740.sroa.3.0.copyload426, metadata !1779, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1780
  call void @llvm.dbg.value(metadata i8** %tmpv.740.sroa.4.0.cast.2822.sroa_idx427, metadata !1779, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1780
  %icmp.277 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.740.sroa.3.0.copyload426, null, !dbg !1781
  br i1 %icmp.277, label %else.226, label %then.226

then.226:                                         ; preds = %cont.146
  %55 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.740.sroa.3.0.copyload426 to i64, !dbg !1782
  call void @llvm.dbg.value(metadata i64 %55, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %tmpv.740.sroa.4.0.copyload428954, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.226:                                         ; preds = %cont.146
  %envs.sroa.0.0.cast.2835.sroa_idx = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.743, i64 0, i32 0
  store %IPST.3* %envs.sroa.0.1, %IPST.3** %envs.sroa.0.0.cast.2835.sroa_idx, align 8
  %envs.sroa.12.0.cast.2835.sroa_idx555 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.743, i64 0, i32 1
  store i64 %envs.sroa.12.1, i64* %envs.sroa.12.0.cast.2835.sroa_idx555, align 8
  %envs.sroa.15.0.cast.2835.sroa_idx571 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.743, i64 0, i32 2
  store i64 %envs.sroa.15.1, i64* %envs.sroa.15.0.cast.2835.sroa_idx571, align 8
  %add.21 = add i64 %envs.sroa.12.1, 1, !dbg !1783
  %icmp.278 = icmp ugt i64 %add.21, %envs.sroa.15.1, !dbg !1783
  br i1 %icmp.278, label %then.227, label %else.227

then.227:                                         ; preds = %else.226
  %cast.2838 = bitcast %IPST.11* %tmpv.743 to %IPST.4*, !dbg !1783
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.143, i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), %IPST.4* byval nonnull %cast.2838, i64 %add.21)
          to label %cont.147 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1783

fallthrough.227:                                  ; preds = %else.227, %then.228, %cont.147
  %tmpv.749.sroa.0.0 = phi %IPST.3* [ %tmpv.749.sroa.0.0.copyload, %cont.147 ], [ undef, %then.228 ], [ %envs.sroa.0.1, %else.227 ]
  %tmpv.749.sroa.3.0 = phi i64 [ %tmpv.749.sroa.3.0.copyload, %cont.147 ], [ %add.21, %then.228 ], [ %add.21, %else.227 ]
  %tmpv.749.sroa.4.0 = phi i64 [ %tmpv.749.sroa.4.0.copyload, %cont.147 ], [ undef, %then.228 ], [ %envs.sroa.15.1, %else.227 ]
  store %IPST.3* %tmpv.749.sroa.0.0, %IPST.3** %envs.sroa.0.0.cast.2835.sroa_idx, align 8, !dbg !1783
  store i64 %tmpv.749.sroa.3.0, i64* %envs.sroa.12.0.cast.2835.sroa_idx555, align 8, !dbg !1783
  store i64 %tmpv.749.sroa.4.0, i64* %envs.sroa.15.0.cast.2835.sroa_idx571, align 8, !dbg !1783
  %icmp.285 = icmp sge i64 %envs.sroa.12.1, %tmpv.749.sroa.3.0, !dbg !1783
  %56 = icmp slt i64 %envs.sroa.12.1, 0, !dbg !1783
  %ior.136 = or i1 %56, %icmp.285, !dbg !1783
  br i1 %ior.136, label %then.230, label %fallthrough.230

else.227:                                         ; preds = %else.226
  %icmp.280 = icmp sgt i64 %add.21, %envs.sroa.15.1, !dbg !1783
  %add.21.lobit965 = or i64 %add.21, %envs.sroa.15.1, !dbg !1783
  %57 = icmp slt i64 %add.21.lobit965, 0, !dbg !1783
  %58 = or i1 %icmp.280, %57, !dbg !1783
  br i1 %58, label %then.228, label %fallthrough.227

cont.147:                                         ; preds = %then.227
  %tmpv.749.sroa.0.0.cast.2843.sroa_idx = bitcast %IPST.4* %sret.actual.143 to %IPST.3**
  %tmpv.749.sroa.0.0.copyload = load %IPST.3*, %IPST.3** %tmpv.749.sroa.0.0.cast.2843.sroa_idx, align 8
  %59 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.143, i64 0, i32 1
  %tmpv.749.sroa.3.0.copyload = load i64, i64* %59, align 8
  %60 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.143, i64 0, i32 2
  %tmpv.749.sroa.4.0.copyload = load i64, i64* %60, align 8
  br label %fallthrough.227

then.228:                                         ; preds = %else.227
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.227 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1783

then.230:                                         ; preds = %fallthrough.227
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.230 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1783

fallthrough.230:                                  ; preds = %fallthrough.227, %then.230
  %ptroff.24 = getelementptr %IPST.3, %IPST.3* %tmpv.749.sroa.0.0, i64 %envs.sroa.12.1, !dbg !1783
  %cast.2848 = bitcast %IPST.3* %tmpv.753 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2848, i8* nonnull align 8 %env10.0.sroa_cast, i64 24, i1 false)
  %runtime.writeBarrier.ld.22 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1783
  %icmp.288 = icmp eq i32 %runtime.writeBarrier.ld.22, 0, !dbg !1783
  br i1 %icmp.288, label %then.231, label %else.231

then.231:                                         ; preds = %fallthrough.230
  %icmp.287 = icmp eq %IPST.3* %ptroff.24, null, !dbg !1783
  br i1 %icmp.287, label %then.232, label %fallthrough.232

fallthrough.231:                                  ; preds = %else.231, %fallthrough.232
  %envs.sroa.0.0.copyload543 = load %IPST.3*, %IPST.3** %envs.sroa.0.0.cast.2835.sroa_idx, align 8, !dbg !1784
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.0.copyload543, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  %envs.sroa.12.0.copyload554 = load i64, i64* %envs.sroa.12.0.cast.2835.sroa_idx555, align 8, !dbg !1784
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.0.copyload554, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  %envs.sroa.15.0.copyload570 = load i64, i64* %envs.sroa.15.0.cast.2835.sroa_idx571, align 8, !dbg !1784
  call void @llvm.dbg.value(metadata i64 %envs.sroa.15.0.copyload570, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %env10.0.sroa_cast)
  br label %fallthrough.225

else.231:                                         ; preds = %fallthrough.230
  %cast.2854 = bitcast %IPST.3* %ptroff.24 to i8*, !dbg !1783
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* %cast.2854, i8* nonnull %cast.2848)
          to label %fallthrough.231 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1783

then.232:                                         ; preds = %then.231
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.232 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1783

fallthrough.232:                                  ; preds = %then.231, %then.232
  %cast.2851 = bitcast %IPST.3* %ptroff.24 to i8*, !dbg !1783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2851, i8* nonnull align 8 %cast.2848, i64 24, i1 false), !dbg !1783
  br label %fallthrough.231

cont.152:                                         ; preds = %fallthrough.225
  %call.181.fca.1.extract = extractvalue { i64, i8 } %call.181, 1, !dbg !1778
  call void @llvm.dbg.value(metadata i8 %call.181.fca.1.extract, metadata !1775, metadata !DIExpression()), !dbg !1777
  %61 = and i8 %call.181.fca.1.extract, 1, !dbg !1785
  %trunc.239 = icmp eq i8 %61, 0, !dbg !1785
  br i1 %trunc.239, label %fallthrough.233, label %then.233

then.233:                                         ; preds = %cont.152
  %env13.0.sroa_cast = bitcast %IPST.3* %env13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %env13.0.sroa_cast)
  %.ld.170 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1786
  invoke void @command_line_arguments.DarwinAmd64Env({ %IPST.3, %error.0 }* nonnull sret %sret.actual.145, i8* nest undef, %Flags.0* %.ld.170)
          to label %cont.153 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1788

fallthrough.233:                                  ; preds = %cont.152, %fallthrough.239
  %envs.sroa.0.3 = phi %IPST.3* [ %envs.sroa.0.0.copyload542, %fallthrough.239 ], [ %envs.sroa.0.2, %cont.152 ], !dbg !1789
  %envs.sroa.12.3 = phi i64 [ %envs.sroa.12.0.copyload552, %fallthrough.239 ], [ %envs.sroa.12.2, %cont.152 ], !dbg !1789
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.3, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.3, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  %call.182 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7command_line_arguments.Bind.archPath, i64 0, i32 0))
          to label %cont.159 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1790

cont.153:                                         ; preds = %then.233
  %tmpv.761.sroa.0.0.cast.2871.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.145 to i8*, !dbg !1788
  %tmpv.761.sroa.3.0.cast.2871.sroa_idx397 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.145, i64 0, i32 1, i32 0, !dbg !1788
  %tmpv.761.sroa.3.0.copyload398 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.761.sroa.3.0.cast.2871.sroa_idx397, align 8, !dbg !1788
  %tmpv.761.sroa.4.0.cast.2871.sroa_idx399 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.145, i64 0, i32 1, i32 1, !dbg !1788
  %62 = bitcast i8** %tmpv.761.sroa.4.0.cast.2871.sroa_idx399 to i64*, !dbg !1788
  %tmpv.761.sroa.4.0.copyload400952 = load i64, i64* %62, align 8, !dbg !1788
  %env131120 = bitcast %IPST.3* %env13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env131120, i8* nonnull align 8 %tmpv.761.sroa.0.0.cast.2871.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.761.sroa.3.0.copyload398, metadata !1791, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1792
  call void @llvm.dbg.value(metadata i8** %tmpv.761.sroa.4.0.cast.2871.sroa_idx399, metadata !1791, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1792
  %icmp.289 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.761.sroa.3.0.copyload398, null, !dbg !1793
  br i1 %icmp.289, label %else.234, label %then.234

then.234:                                         ; preds = %cont.153
  %63 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.761.sroa.3.0.copyload398 to i64, !dbg !1794
  call void @llvm.dbg.value(metadata i64 %63, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %tmpv.761.sroa.4.0.copyload400952, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.234:                                         ; preds = %cont.153
  %envs.sroa.0.0.cast.2884.sroa_idx = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.764, i64 0, i32 0
  store %IPST.3* %envs.sroa.0.2, %IPST.3** %envs.sroa.0.0.cast.2884.sroa_idx, align 8
  %envs.sroa.12.0.cast.2884.sroa_idx549 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.764, i64 0, i32 1
  store i64 %envs.sroa.12.2, i64* %envs.sroa.12.0.cast.2884.sroa_idx549, align 8
  %envs.sroa.15.0.cast.2884.sroa_idx565 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.764, i64 0, i32 2
  store i64 %envs.sroa.15.2, i64* %envs.sroa.15.0.cast.2884.sroa_idx565, align 8
  %add.23 = add i64 %envs.sroa.12.2, 1, !dbg !1795
  %icmp.290 = icmp ugt i64 %add.23, %envs.sroa.15.2, !dbg !1795
  br i1 %icmp.290, label %then.235, label %else.235

then.235:                                         ; preds = %else.234
  %cast.2887 = bitcast %IPST.11* %tmpv.764 to %IPST.4*, !dbg !1795
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.146, i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), %IPST.4* byval nonnull %cast.2887, i64 %add.23)
          to label %cont.154 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1795

fallthrough.235:                                  ; preds = %else.235, %then.236, %cont.154
  %tmpv.770.sroa.0.0 = phi %IPST.3* [ %tmpv.770.sroa.0.0.copyload, %cont.154 ], [ undef, %then.236 ], [ %envs.sroa.0.2, %else.235 ]
  %tmpv.770.sroa.3.0 = phi i64 [ %tmpv.770.sroa.3.0.copyload, %cont.154 ], [ %add.23, %then.236 ], [ %add.23, %else.235 ]
  %tmpv.770.sroa.4.0 = phi i64 [ %tmpv.770.sroa.4.0.copyload, %cont.154 ], [ undef, %then.236 ], [ %envs.sroa.15.2, %else.235 ]
  store %IPST.3* %tmpv.770.sroa.0.0, %IPST.3** %envs.sroa.0.0.cast.2884.sroa_idx, align 8, !dbg !1795
  store i64 %tmpv.770.sroa.3.0, i64* %envs.sroa.12.0.cast.2884.sroa_idx549, align 8, !dbg !1795
  store i64 %tmpv.770.sroa.4.0, i64* %envs.sroa.15.0.cast.2884.sroa_idx565, align 8, !dbg !1795
  %icmp.297 = icmp sge i64 %envs.sroa.12.2, %tmpv.770.sroa.3.0, !dbg !1795
  %64 = icmp slt i64 %envs.sroa.12.2, 0, !dbg !1795
  %ior.144 = or i1 %64, %icmp.297, !dbg !1795
  br i1 %ior.144, label %then.238, label %fallthrough.238

else.235:                                         ; preds = %else.234
  %icmp.292 = icmp sgt i64 %add.23, %envs.sroa.15.2, !dbg !1795
  %add.23.lobit966 = or i64 %add.23, %envs.sroa.15.2, !dbg !1795
  %65 = icmp slt i64 %add.23.lobit966, 0, !dbg !1795
  %66 = or i1 %icmp.292, %65, !dbg !1795
  br i1 %66, label %then.236, label %fallthrough.235

cont.154:                                         ; preds = %then.235
  %tmpv.770.sroa.0.0.cast.2892.sroa_idx = bitcast %IPST.4* %sret.actual.146 to %IPST.3**
  %tmpv.770.sroa.0.0.copyload = load %IPST.3*, %IPST.3** %tmpv.770.sroa.0.0.cast.2892.sroa_idx, align 8
  %67 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.146, i64 0, i32 1
  %tmpv.770.sroa.3.0.copyload = load i64, i64* %67, align 8
  %68 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.146, i64 0, i32 2
  %tmpv.770.sroa.4.0.copyload = load i64, i64* %68, align 8
  br label %fallthrough.235

then.236:                                         ; preds = %else.235
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.235 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1795

then.238:                                         ; preds = %fallthrough.235
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.238 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1795

fallthrough.238:                                  ; preds = %fallthrough.235, %then.238
  %ptroff.26 = getelementptr %IPST.3, %IPST.3* %tmpv.770.sroa.0.0, i64 %envs.sroa.12.2, !dbg !1795
  %cast.2897 = bitcast %IPST.3* %tmpv.774 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2897, i8* nonnull align 8 %env13.0.sroa_cast, i64 24, i1 false)
  %runtime.writeBarrier.ld.23 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1795
  %icmp.300 = icmp eq i32 %runtime.writeBarrier.ld.23, 0, !dbg !1795
  br i1 %icmp.300, label %then.239, label %else.239

then.239:                                         ; preds = %fallthrough.238
  %icmp.299 = icmp eq %IPST.3* %ptroff.26, null, !dbg !1795
  br i1 %icmp.299, label %then.240, label %fallthrough.240

fallthrough.239:                                  ; preds = %else.239, %fallthrough.240
  %envs.sroa.0.0.copyload542 = load %IPST.3*, %IPST.3** %envs.sroa.0.0.cast.2884.sroa_idx, align 8, !dbg !1796
  call void @llvm.dbg.value(metadata %IPST.3* %envs.sroa.0.0.copyload542, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1735
  %envs.sroa.12.0.copyload552 = load i64, i64* %envs.sroa.12.0.cast.2884.sroa_idx549, align 8, !dbg !1796
  call void @llvm.dbg.value(metadata i64 %envs.sroa.12.0.copyload552, metadata !1730, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1735
  call void @llvm.dbg.value(metadata i64* %envs.sroa.15.0.cast.2884.sroa_idx565, metadata !1730, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 128, 64)), !dbg !1735
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %env13.0.sroa_cast)
  br label %fallthrough.233

else.239:                                         ; preds = %fallthrough.238
  %cast.2903 = bitcast %IPST.3* %ptroff.26 to i8*, !dbg !1795
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* %cast.2903, i8* nonnull %cast.2897)
          to label %fallthrough.239 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1795

then.240:                                         ; preds = %then.239
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.240 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1795

fallthrough.240:                                  ; preds = %then.239, %then.240
  %cast.2900 = bitcast %IPST.3* %ptroff.26 to i8*, !dbg !1795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2900, i8* nonnull align 8 %cast.2897, i64 24, i1 false), !dbg !1795
  br label %fallthrough.239

cont.159:                                         ; preds = %fallthrough.233
  %cast.2920 = bitcast i8* %call.182 to %.command-line-arguments.archPath.0*, !dbg !1790
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %cast.2920, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 0, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 0, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  %call.183 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0command_line_arguments.Bind.archPath, i64 0, i32 0))
          to label %cont.160 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1808

cont.160:                                         ; preds = %cont.159
  %cast.2924 = bitcast i8* %call.183 to {}**, !dbg !1808
  call void @llvm.dbg.value(metadata {}** %cast.2924, metadata !1809, metadata !DIExpression()), !dbg !1811
  %call.184 = invoke {}* @runtime.makechan(i8* nest undef, %_type.0* getelementptr inbounds (%ChanType.0, %ChanType.0* @type..chan.0command_line_arguments.Bind.archPath, i64 0, i32 0), i64 0)
          to label %cont.161 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1812

cont.161:                                         ; preds = %cont.160
  %runtime.writeBarrier.ld.24 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1812
  %icmp.302 = icmp eq i32 %runtime.writeBarrier.ld.24, 0, !dbg !1812
  br i1 %icmp.302, label %then.241, label %else.241

then.241:                                         ; preds = %cont.161
  %icmp.301 = icmp eq i8* %call.183, null, !dbg !1812
  br i1 %icmp.301, label %then.242, label %fallthrough.242

fallthrough.241:                                  ; preds = %else.241, %fallthrough.242
  %i15.0.sroa_cast = bitcast %IPST.3* %i15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %i15.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %i15.0.sroa_cast, i8 0, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 0, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 0, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %cast.2920, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  %icmp.3201055 = icmp sgt i64 %envs.sroa.12.3, 0, !dbg !1813
  br i1 %icmp.3201055, label %then.254.lr.ph, label %else.254

then.254.lr.ph:                                   ; preds = %fallthrough.241
  %field.601 = getelementptr inbounds { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795, i64 0, i32 0
  %field.602 = getelementptr inbounds { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795, i64 0, i32 1
  %69 = bitcast { i8*, i64 }** %field.602 to i8**
  %field.603 = getelementptr inbounds { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795, i64 0, i32 2
  %70 = bitcast %Flags.0*** %field.603 to i8**
  %field.604 = getelementptr inbounds { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795, i64 0, i32 3
  %71 = bitcast { i8*, i64 }** %field.604 to i8**
  %field.605 = getelementptr inbounds { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795, i64 0, i32 4
  %72 = bitcast { i8*, i64 }** %field.605 to i8**
  %field.606 = getelementptr inbounds { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795, i64 0, i32 5
  %73 = bitcast { i8*, i64 }** %field.606 to i8**
  %field.607 = getelementptr inbounds { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }, { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795, i64 0, i32 6
  %74 = bitcast {}*** %field.607 to i8**
  %cast.2955 = bitcast { i8*, { i8*, i64 }*, %Flags.0**, { i8*, i64 }*, { i8*, i64 }*, { i8*, i64 }*, {}** }* %tmpv.795 to i8*
  %75 = bitcast { %__go_descriptor.31*, %IPST.3 }* %tmpv.798 to i8**
  %field.609 = getelementptr inbounds { %__go_descriptor.31*, %IPST.3 }, { %__go_descriptor.31*, %IPST.3 }* %tmpv.798, i64 0, i32 1
  %cast.2965 = bitcast %IPST.3* %field.609 to i8*
  %cast.2969 = bitcast { %__go_descriptor.31*, %IPST.3 }* %tmpv.798 to i8*
  %76 = bitcast %.command-line-arguments.archPath.0* %arch to i8*
  %cast.2972 = bitcast %.command-line-arguments.archPath.0* %tmpv.799 to i8*
  %field.612 = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %arch, i64 0, i32 2, i32 0
  %archs.sroa.0.0.cast.2981.sroa_idx = getelementptr inbounds %IPST.12, %IPST.12* %tmpv.800, i64 0, i32 0
  %archs.sroa.8.0.cast.2981.sroa_idx525 = getelementptr inbounds %IPST.12, %IPST.12* %tmpv.800, i64 0, i32 1
  %archs.sroa.10.0.cast.2981.sroa_idx533 = getelementptr inbounds %IPST.12, %IPST.12* %tmpv.800, i64 0, i32 2
  %cast.2984 = bitcast %IPST.12* %tmpv.800 to %IPST.4*
  %tmpv.806.sroa.0.0.cast.2989.sroa_idx = bitcast %IPST.4* %sret.actual.147 to %.command-line-arguments.archPath.0**
  %77 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.147, i64 0, i32 1
  %78 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.147, i64 0, i32 2
  %i151121 = bitcast %IPST.3* %i15 to i8*
  br label %fallthrough.243

else.241:                                         ; preds = %cont.161
  %cast.2928 = bitcast {}* %call.184 to i8*, !dbg !1812
  invoke void @runtime.writebarrierptr(i8* nest undef, i8* %call.183, i8* %cast.2928)
          to label %fallthrough.241 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1812

then.242:                                         ; preds = %then.241
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.242 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1812

fallthrough.242:                                  ; preds = %then.241, %then.242
  store {}* %call.184, {}** %cast.2924, align 8, !dbg !1812
  br label %fallthrough.241

fallthrough.243:                                  ; preds = %fallthrough.246, %then.254.lr.ph
  %tmpv.805.sroa.3.01066 = phi i64 [ undef, %then.254.lr.ph ], [ %tmpv.805.sroa.3.1, %fallthrough.246 ]
  %tmpv.805.sroa.2.01065 = phi i64 [ undef, %then.254.lr.ph ], [ %tmpv.805.sroa.2.1, %fallthrough.246 ]
  %tmpv.805.sroa.0.01064 = phi %.command-line-arguments.archPath.0* [ undef, %then.254.lr.ph ], [ %tmpv.805.sroa.0.1, %fallthrough.246 ]
  %archs.sroa.10.01063 = phi i64 [ 0, %then.254.lr.ph ], [ %archs.sroa.10.1, %fallthrough.246 ]
  %archs.sroa.8.01062 = phi i64 [ 0, %then.254.lr.ph ], [ %archs.sroa.8.1, %fallthrough.246 ]
  %archs.sroa.0.01061 = phi %.command-line-arguments.archPath.0* [ %cast.2920, %then.254.lr.ph ], [ %archs.sroa.0.1, %fallthrough.246 ]
  %tmpv.781.01060 = phi i64 [ 0, %then.254.lr.ph ], [ %add.27, %fallthrough.246 ]
  %tmpv.809.01058 = phi i64 [ undef, %then.254.lr.ph ], [ %tmpv.809.1, %fallthrough.246 ]
  %tmpv.810.01057 = phi %.command-line-arguments.archPath.0* [ undef, %then.254.lr.ph ], [ %tmpv.810.1, %fallthrough.246 ]
  %tmpv.811.01056 = phi %Flags.0* [ undef, %then.254.lr.ph ], [ %tmpv.811.1, %fallthrough.246 ]
  call void @llvm.dbg.value(metadata i64 %archs.sroa.10.01063, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.01062, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.01061, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  %ptroff.27 = getelementptr %IPST.3, %IPST.3* %envs.sroa.0.3, i64 %tmpv.781.01060, !dbg !1813
  %cast.2936 = bitcast %IPST.3* %ptroff.27 to i8*, !dbg !1813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %i151121, i8* align 8 %cast.2936, i64 24, i1 false)
  %call.185 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5, i64 0, i32 0))
          to label %cont.165 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1815

cont.165:                                         ; preds = %fallthrough.243
  store i8* bitcast (void (i8*, %IPST.3*)* @command_line_arguments.Bind..func1 to i8*), i8** %field.601, align 8, !dbg !1815
  store i8* %call.163, i8** %69, align 8, !dbg !1815
  store i8* %call.145, i8** %70, align 8, !dbg !1815
  store i8* %call.148, i8** %71, align 8, !dbg !1815
  store i8* %call.170, i8** %72, align 8, !dbg !1815
  store i8* %call.149, i8** %73, align 8, !dbg !1815
  store i8* %call.183, i8** %74, align 8, !dbg !1815
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5, i64 0, i32 0), i8* %call.185, i8* nonnull %cast.2955)
          to label %cont.166 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1815

cont.166:                                         ; preds = %cont.165
  %icmp.305 = icmp eq i8* %call.185, null, !dbg !1816
  br i1 %icmp.305, label %then.244, label %fallthrough.244

then.244:                                         ; preds = %cont.166
  invoke void @__go_runtime_error(i8* nest undef, i32 11)
          to label %fallthrough.244 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1816

fallthrough.244:                                  ; preds = %then.244, %cont.166
  %call.186 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5, i64 0, i32 0))
          to label %cont.168 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1816

cont.168:                                         ; preds = %fallthrough.244
  store i8* %call.185, i8** %75, align 8, !dbg !1816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2965, i8* nonnull align 8 %i15.0.sroa_cast, i64 24, i1 false), !dbg !1816
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5, i64 0, i32 0), i8* %call.186, i8* nonnull %cast.2969)
          to label %cont.169 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1816

cont.169:                                         ; preds = %cont.168
  invoke void @__go_go(i8* nest undef, %__go_descriptor.27* bitcast (void (i8*, { %__go_descriptor.31*, %IPST.3 }*)* @command_line_arguments.command_line_arguments..thunk4 to %__go_descriptor.27*), i8* %call.186)
          to label %cont.170 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1816

cont.170:                                         ; preds = %cont.169
  %.ld.192 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1817
  %icmp.318 = icmp eq %Flags.0* %.ld.192, null, !dbg !1818
  br i1 %icmp.318, label %then.245, label %fallthrough.245

then.245:                                         ; preds = %cont.170
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.245 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1818

fallthrough.245:                                  ; preds = %cont.170, %then.245
  %tmpv.811.1 = phi %Flags.0* [ %tmpv.811.01056, %then.245 ], [ %.ld.192, %cont.170 ]
  %field.625 = getelementptr inbounds %Flags.0, %Flags.0* %tmpv.811.1, i64 0, i32 1, !dbg !1818
  %.field.ld.66 = load i8, i8* %field.625, align 1, !dbg !1818
  %icmp.319 = icmp eq i8 %.field.ld.66, 0, !dbg !1819
  br i1 %icmp.319, label %then.246, label %fallthrough.246

then.246:                                         ; preds = %fallthrough.245
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %76)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2972, i8 0, i64 48, i1 false)
  %.ld.182 = load {}*, {}** %cast.2924, align 8, !dbg !1820
  invoke void @runtime.chanrecv1(i8* nest undef, {}* %.ld.182, i8* nonnull %cast.2972)
          to label %cont.172 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1822

fallthrough.246:                                  ; preds = %fallthrough.245, %fallthrough.252
  %tmpv.810.1 = phi %.command-line-arguments.archPath.0* [ %tmpv.810.2, %fallthrough.252 ], [ %tmpv.810.01057, %fallthrough.245 ]
  %tmpv.809.1 = phi i64 [ %tmpv.809.2, %fallthrough.252 ], [ %tmpv.809.01058, %fallthrough.245 ]
  %archs.sroa.0.1 = phi %.command-line-arguments.archPath.0* [ %archs.sroa.0.0.copyload521, %fallthrough.252 ], [ %archs.sroa.0.01061, %fallthrough.245 ], !dbg !1744
  %archs.sroa.8.1 = phi i64 [ %archs.sroa.8.0.copyload527, %fallthrough.252 ], [ %archs.sroa.8.01062, %fallthrough.245 ], !dbg !1744
  %archs.sroa.10.1 = phi i64 [ %archs.sroa.10.0.copyload535, %fallthrough.252 ], [ %archs.sroa.10.01063, %fallthrough.245 ], !dbg !1744
  %tmpv.805.sroa.0.1 = phi %.command-line-arguments.archPath.0* [ %tmpv.805.sroa.0.2, %fallthrough.252 ], [ %tmpv.805.sroa.0.01064, %fallthrough.245 ]
  %tmpv.805.sroa.2.1 = phi i64 [ %tmpv.805.sroa.2.2, %fallthrough.252 ], [ %tmpv.805.sroa.2.01065, %fallthrough.245 ]
  %tmpv.805.sroa.3.1 = phi i64 [ %tmpv.805.sroa.3.2, %fallthrough.252 ], [ %tmpv.805.sroa.3.01066, %fallthrough.245 ]
  %add.27 = add nuw nsw i64 %tmpv.781.01060, 1, !dbg !1813
  call void @llvm.dbg.value(metadata i64 %archs.sroa.10.1, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.1, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.1, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  %icmp.320 = icmp slt i64 %add.27, %envs.sroa.12.3, !dbg !1813
  br i1 %icmp.320, label %fallthrough.243, label %else.254

cont.172:                                         ; preds = %then.246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 8 %cast.2972, i64 48, i1 false)
  %arch.field.field.ld.0 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %field.612, align 8, !dbg !1823
  %icmp.306 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %arch.field.field.ld.0, null, !dbg !1823
  br i1 %icmp.306, label %else.247, label %then.247

then.247:                                         ; preds = %cont.172
  %79 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %arch.field.field.ld.0 to i64
  call void @llvm.dbg.value(metadata i64 %79, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  %"$ret34.sroa.39.0.cast.2978.sroa_idx753" = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %arch, i64 0, i32 2, i32 1, !dbg !1824
  %"$ret34.sroa.39.0.cast.2978.sroa_cast" = bitcast i8** %"$ret34.sroa.39.0.cast.2978.sroa_idx753" to i64*, !dbg !1824
  %"$ret34.sroa.39.0.copyload754" = load i64, i64* %"$ret34.sroa.39.0.cast.2978.sroa_cast", align 8, !dbg !1824
  call void @llvm.dbg.value(metadata i64 %"$ret34.sroa.39.0.copyload754", metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.247:                                         ; preds = %cont.172
  store %.command-line-arguments.archPath.0* %archs.sroa.0.01061, %.command-line-arguments.archPath.0** %archs.sroa.0.0.cast.2981.sroa_idx, align 8
  store i64 %archs.sroa.8.01062, i64* %archs.sroa.8.0.cast.2981.sroa_idx525, align 8
  store i64 %archs.sroa.10.01063, i64* %archs.sroa.10.0.cast.2981.sroa_idx533, align 8
  %add.25 = add i64 %archs.sroa.8.01062, 1, !dbg !1825
  %icmp.307 = icmp ugt i64 %add.25, %archs.sroa.10.01063, !dbg !1825
  br i1 %icmp.307, label %then.248, label %else.248

then.248:                                         ; preds = %else.247
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.147, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i64 0, i32 0), %IPST.4* byval nonnull %cast.2984, i64 %add.25)
          to label %cont.173 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1825

fallthrough.248:                                  ; preds = %else.248, %then.249, %cont.173
  %tmpv.805.sroa.0.2 = phi %.command-line-arguments.archPath.0* [ %tmpv.805.sroa.0.01064, %cont.173 ], [ %tmpv.805.sroa.0.01064, %then.249 ], [ %archs.sroa.0.01061, %else.248 ]
  %tmpv.805.sroa.2.2 = phi i64 [ %tmpv.805.sroa.2.01065, %cont.173 ], [ %tmpv.805.sroa.2.01065, %then.249 ], [ %add.25, %else.248 ]
  %tmpv.805.sroa.3.2 = phi i64 [ %tmpv.805.sroa.3.01066, %cont.173 ], [ %tmpv.805.sroa.3.01066, %then.249 ], [ %archs.sroa.10.01063, %else.248 ]
  %tmpv.806.sroa.0.0 = phi %.command-line-arguments.archPath.0* [ %tmpv.806.sroa.0.0.copyload, %cont.173 ], [ %tmpv.805.sroa.0.01064, %then.249 ], [ %archs.sroa.0.01061, %else.248 ]
  %tmpv.806.sroa.3.0 = phi i64 [ %tmpv.806.sroa.3.0.copyload, %cont.173 ], [ %tmpv.805.sroa.2.01065, %then.249 ], [ %add.25, %else.248 ]
  %tmpv.806.sroa.4.0 = phi i64 [ %tmpv.806.sroa.4.0.copyload, %cont.173 ], [ %tmpv.805.sroa.3.01066, %then.249 ], [ %archs.sroa.10.01063, %else.248 ]
  store %.command-line-arguments.archPath.0* %tmpv.806.sroa.0.0, %.command-line-arguments.archPath.0** %archs.sroa.0.0.cast.2981.sroa_idx, align 8, !dbg !1825
  store i64 %tmpv.806.sroa.3.0, i64* %archs.sroa.8.0.cast.2981.sroa_idx525, align 8, !dbg !1825
  store i64 %tmpv.806.sroa.4.0, i64* %archs.sroa.10.0.cast.2981.sroa_idx533, align 8, !dbg !1825
  %icmp.314 = icmp sge i64 %archs.sroa.8.01062, %tmpv.806.sroa.3.0, !dbg !1825
  %80 = icmp slt i64 %archs.sroa.8.01062, 0, !dbg !1825
  %ior.166 = or i1 %80, %icmp.314, !dbg !1825
  br i1 %ior.166, label %then.251, label %fallthrough.251

else.248:                                         ; preds = %else.247
  %icmp.309 = icmp sgt i64 %add.25, %archs.sroa.10.01063, !dbg !1825
  %add.25.lobit975 = or i64 %add.25, %archs.sroa.10.01063, !dbg !1825
  %81 = icmp slt i64 %add.25.lobit975, 0, !dbg !1825
  %82 = or i1 %icmp.309, %81, !dbg !1825
  br i1 %82, label %then.249, label %fallthrough.248

cont.173:                                         ; preds = %then.248
  %tmpv.806.sroa.0.0.copyload = load %.command-line-arguments.archPath.0*, %.command-line-arguments.archPath.0** %tmpv.806.sroa.0.0.cast.2989.sroa_idx, align 8
  %tmpv.806.sroa.3.0.copyload = load i64, i64* %77, align 8
  %tmpv.806.sroa.4.0.copyload = load i64, i64* %78, align 8
  br label %fallthrough.248

then.249:                                         ; preds = %else.248
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.248 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1825

then.251:                                         ; preds = %fallthrough.248
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.251 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1825

fallthrough.251:                                  ; preds = %fallthrough.248, %then.251
  %tmpv.809.2 = phi i64 [ %tmpv.809.01058, %then.251 ], [ %archs.sroa.8.01062, %fallthrough.248 ]
  %ptroff.29 = getelementptr %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %tmpv.806.sroa.0.0, i64 %tmpv.809.2, !dbg !1825
  %runtime.writeBarrier.ld.25 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1825
  %icmp.317 = icmp eq i32 %runtime.writeBarrier.ld.25, 0, !dbg !1825
  br i1 %icmp.317, label %then.252, label %else.252

then.252:                                         ; preds = %fallthrough.251
  %icmp.316 = icmp eq %.command-line-arguments.archPath.0* %ptroff.29, null, !dbg !1825
  br i1 %icmp.316, label %then.253, label %fallthrough.253

fallthrough.252:                                  ; preds = %else.252, %fallthrough.253
  %tmpv.810.2 = phi %.command-line-arguments.archPath.0* [ %tmpv.810.3, %fallthrough.253 ], [ %tmpv.810.01057, %else.252 ]
  %archs.sroa.0.0.copyload521 = load %.command-line-arguments.archPath.0*, %.command-line-arguments.archPath.0** %archs.sroa.0.0.cast.2981.sroa_idx, align 8, !dbg !1826
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.0.copyload521, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  %archs.sroa.8.0.copyload527 = load i64, i64* %archs.sroa.8.0.cast.2981.sroa_idx525, align 8, !dbg !1826
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.0.copyload527, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  %archs.sroa.10.0.copyload535 = load i64, i64* %archs.sroa.10.0.cast.2981.sroa_idx533, align 8, !dbg !1826
  call void @llvm.dbg.value(metadata i64 %archs.sroa.10.0.copyload535, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76)
  br label %fallthrough.246

else.252:                                         ; preds = %fallthrough.251
  %cast.2998 = bitcast %.command-line-arguments.archPath.0* %ptroff.29 to i8*, !dbg !1825
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i64 0, i32 0), i8* %cast.2998, i8* nonnull %76)
          to label %fallthrough.252 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1825

then.253:                                         ; preds = %then.252
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.253 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1825

fallthrough.253:                                  ; preds = %then.252, %then.253
  %tmpv.810.3 = phi %.command-line-arguments.archPath.0* [ %tmpv.810.01057, %then.253 ], [ %ptroff.29, %then.252 ]
  %cast.2995 = bitcast %.command-line-arguments.archPath.0* %tmpv.810.3 to i8*, !dbg !1825
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2995, i8* nonnull align 8 %76, i64 48, i1 false), !dbg !1825
  br label %fallthrough.252

else.254:                                         ; preds = %fallthrough.246, %fallthrough.241
  %archs.sroa.0.0.lcssa = phi %.command-line-arguments.archPath.0* [ %cast.2920, %fallthrough.241 ], [ %archs.sroa.0.1, %fallthrough.246 ], !dbg !1827
  %archs.sroa.8.0.lcssa = phi i64 [ 0, %fallthrough.241 ], [ %archs.sroa.8.1, %fallthrough.246 ], !dbg !1827
  %archs.sroa.10.0.lcssa = phi i64 [ 0, %fallthrough.241 ], [ %archs.sroa.10.1, %fallthrough.246 ], !dbg !1827
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.0.lcssa, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.0.lcssa, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %archs.sroa.10.0.lcssa, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %i15.0.sroa_cast)
  %.ld.204 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1828
  %icmp.334 = icmp eq %Flags.0* %.ld.204, null, !dbg !1829
  br i1 %icmp.334, label %then.255, label %fallthrough.255

then.255:                                         ; preds = %else.254
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.255 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1829

fallthrough.255:                                  ; preds = %else.254, %then.255
  %field.642 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.204, i64 0, i32 1, !dbg !1829
  %.field.ld.70 = load i8, i8* %field.642, align 1, !dbg !1829
  %83 = and i8 %.field.ld.70, 1, !dbg !1830
  %trunc.263 = icmp ne i8 %83, 0, !dbg !1830
  %or.cond = and i1 %trunc.263, %icmp.3201055
  call void @llvm.dbg.value(metadata i64 %archs.sroa.10.0.lcssa, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.0.lcssa, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.0.lcssa, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 0, metadata !1831, metadata !DIExpression()), !dbg !1833
  br i1 %or.cond, label %then.264.lr.ph, label %fallthrough.256

then.264.lr.ph:                                   ; preds = %fallthrough.255
  %84 = bitcast %.command-line-arguments.archPath.0* %arch17 to i8*
  %cast.3003 = bitcast %.command-line-arguments.archPath.0* %tmpv.812 to i8*
  %field.628 = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %arch17, i64 0, i32 2, i32 0
  %archs.sroa.0.0.cast.3012.sroa_idx = getelementptr inbounds %IPST.12, %IPST.12* %tmpv.813, i64 0, i32 0
  %archs.sroa.8.0.cast.3012.sroa_idx528 = getelementptr inbounds %IPST.12, %IPST.12* %tmpv.813, i64 0, i32 1
  %archs.sroa.10.0.cast.3012.sroa_idx536 = getelementptr inbounds %IPST.12, %IPST.12* %tmpv.813, i64 0, i32 2
  %cast.3015 = bitcast %IPST.12* %tmpv.813 to %IPST.4*
  %tmpv.819.sroa.0.0.cast.3020.sroa_idx = bitcast %IPST.4* %sret.actual.148 to %.command-line-arguments.archPath.0**
  %85 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.148, i64 0, i32 1
  %86 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.148, i64 0, i32 2
  br label %then.264

fallthrough.256:                                  ; preds = %fallthrough.262, %fallthrough.255
  %archs.sroa.0.2 = phi %.command-line-arguments.archPath.0* [ %archs.sroa.0.0.lcssa, %fallthrough.255 ], [ %archs.sroa.0.0.copyload523, %fallthrough.262 ], !dbg !1790
  %archs.sroa.8.2 = phi i64 [ %archs.sroa.8.0.lcssa, %fallthrough.255 ], [ %archs.sroa.8.0.copyload531, %fallthrough.262 ], !dbg !1790
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.2, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.2, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  %cast.3034 = bitcast [2 x { i8*, i64 }]* %tmpv.825 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3034, i8* align 16 bitcast ([2 x { i8*, i64 }]* @const.375 to i8*), i64 32, i1 false)
  %field.643 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.113, i64 0, i32 0, !dbg !1834
  %cast.3037 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.825, i64 0, i64 0, !dbg !1834
  store { i8*, i64 }* %cast.3037, { i8*, i64 }** %field.643, align 8, !dbg !1834
  %field.644 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.113, i64 0, i32 1, !dbg !1834
  store i64 2, i64* %field.644, align 8, !dbg !1834
  %field.645 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.113, i64 0, i32 2, !dbg !1834
  store i64 2, i64* %field.645, align 8, !dbg !1834
  %call.187 = invoke %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.376 to i64), i64 5, %IPST.3* byval nonnull %tmp.113)
          to label %cont.185 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1834

cont.179:                                         ; preds = %then.264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* nonnull align 8 %cast.3003, i64 48, i1 false)
  %arch.field.field.ld.1 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %field.628, align 8, !dbg !1835
  %icmp.321 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %arch.field.field.ld.1, null, !dbg !1835
  br i1 %icmp.321, label %else.257, label %then.257

then.257:                                         ; preds = %cont.179
  %87 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %arch.field.field.ld.1 to i64
  call void @llvm.dbg.value(metadata i64 %87, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  %"$ret34.sroa.39.0.cast.3009.sroa_idx751" = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %arch17, i64 0, i32 2, i32 1, !dbg !1837
  %"$ret34.sroa.39.0.cast.3009.sroa_cast" = bitcast i8** %"$ret34.sroa.39.0.cast.3009.sroa_idx751" to i64*, !dbg !1837
  %"$ret34.sroa.39.0.copyload752" = load i64, i64* %"$ret34.sroa.39.0.cast.3009.sroa_cast", align 8, !dbg !1837
  call void @llvm.dbg.value(metadata i64 %"$ret34.sroa.39.0.copyload752", metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.257:                                         ; preds = %cont.179
  store %.command-line-arguments.archPath.0* %archs.sroa.0.31048, %.command-line-arguments.archPath.0** %archs.sroa.0.0.cast.3012.sroa_idx, align 8
  store i64 %archs.sroa.8.31049, i64* %archs.sroa.8.0.cast.3012.sroa_idx528, align 8
  store i64 %archs.sroa.10.31050, i64* %archs.sroa.10.0.cast.3012.sroa_idx536, align 8
  %add.28 = add i64 %archs.sroa.8.31049, 1, !dbg !1838
  %icmp.322 = icmp ugt i64 %add.28, %archs.sroa.10.31050, !dbg !1838
  br i1 %icmp.322, label %then.258, label %else.258

then.258:                                         ; preds = %else.257
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.148, i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i64 0, i32 0), %IPST.4* byval nonnull %cast.3015, i64 %add.28)
          to label %cont.180 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1838

fallthrough.258:                                  ; preds = %else.258, %then.259, %cont.180
  %tmpv.818.sroa.0.1 = phi %.command-line-arguments.archPath.0* [ %tmpv.818.sroa.0.01051, %cont.180 ], [ %tmpv.818.sroa.0.01051, %then.259 ], [ %archs.sroa.0.31048, %else.258 ]
  %tmpv.818.sroa.2.1 = phi i64 [ %tmpv.818.sroa.2.01052, %cont.180 ], [ %tmpv.818.sroa.2.01052, %then.259 ], [ %add.28, %else.258 ]
  %tmpv.818.sroa.3.1 = phi i64 [ %tmpv.818.sroa.3.01053, %cont.180 ], [ %tmpv.818.sroa.3.01053, %then.259 ], [ %archs.sroa.10.31050, %else.258 ]
  %tmpv.819.sroa.0.0 = phi %.command-line-arguments.archPath.0* [ %tmpv.819.sroa.0.0.copyload, %cont.180 ], [ %tmpv.818.sroa.0.01051, %then.259 ], [ %archs.sroa.0.31048, %else.258 ]
  %tmpv.819.sroa.3.0 = phi i64 [ %tmpv.819.sroa.3.0.copyload, %cont.180 ], [ %tmpv.818.sroa.2.01052, %then.259 ], [ %add.28, %else.258 ]
  %tmpv.819.sroa.4.0 = phi i64 [ %tmpv.819.sroa.4.0.copyload, %cont.180 ], [ %tmpv.818.sroa.3.01053, %then.259 ], [ %archs.sroa.10.31050, %else.258 ]
  store %.command-line-arguments.archPath.0* %tmpv.819.sroa.0.0, %.command-line-arguments.archPath.0** %archs.sroa.0.0.cast.3012.sroa_idx, align 8, !dbg !1838
  store i64 %tmpv.819.sroa.3.0, i64* %archs.sroa.8.0.cast.3012.sroa_idx528, align 8, !dbg !1838
  store i64 %tmpv.819.sroa.4.0, i64* %archs.sroa.10.0.cast.3012.sroa_idx536, align 8, !dbg !1838
  %icmp.329 = icmp sge i64 %archs.sroa.8.31049, %tmpv.819.sroa.3.0, !dbg !1838
  %88 = icmp slt i64 %archs.sroa.8.31049, 0, !dbg !1838
  %ior.174 = or i1 %88, %icmp.329, !dbg !1838
  br i1 %ior.174, label %then.261, label %fallthrough.261

else.258:                                         ; preds = %else.257
  %icmp.324 = icmp sgt i64 %add.28, %archs.sroa.10.31050, !dbg !1838
  %add.28.lobit974 = or i64 %add.28, %archs.sroa.10.31050, !dbg !1838
  %89 = icmp slt i64 %add.28.lobit974, 0, !dbg !1838
  %90 = or i1 %icmp.324, %89, !dbg !1838
  br i1 %90, label %then.259, label %fallthrough.258

cont.180:                                         ; preds = %then.258
  %tmpv.819.sroa.0.0.copyload = load %.command-line-arguments.archPath.0*, %.command-line-arguments.archPath.0** %tmpv.819.sroa.0.0.cast.3020.sroa_idx, align 8
  %tmpv.819.sroa.3.0.copyload = load i64, i64* %85, align 8
  %tmpv.819.sroa.4.0.copyload = load i64, i64* %86, align 8
  br label %fallthrough.258

then.259:                                         ; preds = %else.258
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.258 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1838

then.261:                                         ; preds = %fallthrough.258
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.261 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1838

fallthrough.261:                                  ; preds = %fallthrough.258, %then.261
  %tmpv.822.1 = phi i64 [ %tmpv.822.01046, %then.261 ], [ %archs.sroa.8.31049, %fallthrough.258 ]
  %ptroff.31 = getelementptr %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %tmpv.819.sroa.0.0, i64 %tmpv.822.1, !dbg !1838
  %runtime.writeBarrier.ld.26 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1838
  %icmp.332 = icmp eq i32 %runtime.writeBarrier.ld.26, 0, !dbg !1838
  br i1 %icmp.332, label %then.262, label %else.262

then.262:                                         ; preds = %fallthrough.261
  %icmp.331 = icmp eq %.command-line-arguments.archPath.0* %ptroff.31, null, !dbg !1838
  br i1 %icmp.331, label %then.263, label %fallthrough.263

fallthrough.262:                                  ; preds = %else.262, %fallthrough.263
  %tmpv.823.1 = phi %.command-line-arguments.archPath.0* [ %tmpv.823.2, %fallthrough.263 ], [ %tmpv.823.01045, %else.262 ]
  %archs.sroa.0.0.copyload523 = load %.command-line-arguments.archPath.0*, %.command-line-arguments.archPath.0** %archs.sroa.0.0.cast.3012.sroa_idx, align 8, !dbg !1839
  %archs.sroa.8.0.copyload531 = load i64, i64* %archs.sroa.8.0.cast.3012.sroa_idx528, align 8, !dbg !1839
  %archs.sroa.10.0.copyload539 = load i64, i64* %archs.sroa.10.0.cast.3012.sroa_idx536, align 8, !dbg !1839
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %84)
  %add.30 = add nuw nsw i64 %i16.01047, 1, !dbg !1840
  call void @llvm.dbg.value(metadata i64 %archs.sroa.10.0.copyload539, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.0.copyload531, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.0.copyload523, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %add.30, metadata !1831, metadata !DIExpression()), !dbg !1833
  %icmp.333 = icmp slt i64 %add.30, %envs.sroa.12.3, !dbg !1841
  br i1 %icmp.333, label %then.264, label %fallthrough.256

else.262:                                         ; preds = %fallthrough.261
  %cast.3029 = bitcast %.command-line-arguments.archPath.0* %ptroff.31 to i8*, !dbg !1838
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, i64 0, i32 0), i8* %cast.3029, i8* nonnull %84)
          to label %fallthrough.262 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1838

then.263:                                         ; preds = %then.262
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.263 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1838

fallthrough.263:                                  ; preds = %then.262, %then.263
  %tmpv.823.2 = phi %.command-line-arguments.archPath.0* [ %tmpv.823.01045, %then.263 ], [ %ptroff.31, %then.262 ]
  %cast.3026 = bitcast %.command-line-arguments.archPath.0* %tmpv.823.2 to i8*, !dbg !1838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3026, i8* nonnull align 8 %84, i64 48, i1 false), !dbg !1838
  br label %fallthrough.262

then.264:                                         ; preds = %then.264.lr.ph, %fallthrough.262
  %tmpv.818.sroa.3.01053 = phi i64 [ undef, %then.264.lr.ph ], [ %tmpv.818.sroa.3.1, %fallthrough.262 ]
  %tmpv.818.sroa.2.01052 = phi i64 [ undef, %then.264.lr.ph ], [ %tmpv.818.sroa.2.1, %fallthrough.262 ]
  %tmpv.818.sroa.0.01051 = phi %.command-line-arguments.archPath.0* [ undef, %then.264.lr.ph ], [ %tmpv.818.sroa.0.1, %fallthrough.262 ]
  %archs.sroa.10.31050 = phi i64 [ %archs.sroa.10.0.lcssa, %then.264.lr.ph ], [ %archs.sroa.10.0.copyload539, %fallthrough.262 ]
  %archs.sroa.8.31049 = phi i64 [ %archs.sroa.8.0.lcssa, %then.264.lr.ph ], [ %archs.sroa.8.0.copyload531, %fallthrough.262 ]
  %archs.sroa.0.31048 = phi %.command-line-arguments.archPath.0* [ %archs.sroa.0.0.lcssa, %then.264.lr.ph ], [ %archs.sroa.0.0.copyload523, %fallthrough.262 ]
  %i16.01047 = phi i64 [ 0, %then.264.lr.ph ], [ %add.30, %fallthrough.262 ]
  %tmpv.822.01046 = phi i64 [ undef, %then.264.lr.ph ], [ %tmpv.822.1, %fallthrough.262 ]
  %tmpv.823.01045 = phi %.command-line-arguments.archPath.0* [ undef, %then.264.lr.ph ], [ %tmpv.823.1, %fallthrough.262 ]
  call void @llvm.dbg.value(metadata i64 %archs.sroa.10.31050, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %archs.sroa.8.31049, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata %.command-line-arguments.archPath.0* %archs.sroa.0.31048, metadata !1797, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1807
  call void @llvm.dbg.value(metadata i64 %i16.01047, metadata !1831, metadata !DIExpression()), !dbg !1833
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %84)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.3003, i8 0, i64 48, i1 false)
  %.ld.194 = load {}*, {}** %cast.2924, align 8, !dbg !1842
  invoke void @runtime.chanrecv1(i8* nest undef, {}* %.ld.194, i8* nonnull %cast.3003)
          to label %cont.179 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1843

cont.185:                                         ; preds = %fallthrough.256
  call void @llvm.dbg.value(metadata %Cmd.0* %call.187, metadata !1844, metadata !DIExpression()), !dbg !1845
  %i18.sroa.6.0.sroa_cast329 = bitcast { i8*, i64 }* %i18.sroa.6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %i18.sroa.6.0.sroa_cast329)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %i18.sroa.6.0.sroa_cast329, i8* align 16 bitcast ({ i8*, i64 }* getelementptr inbounds (%.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* @const.372, i64 0, i32 1) to i8*), i64 16, i1 false)
  %icmp.3601030 = icmp sgt i64 %archs.sroa.8.2, 0, !dbg !1846
  br i1 %icmp.3601030, label %then.282.lr.ph, label %else.282

then.282.lr.ph:                                   ; preds = %cont.185
  %sret.actual.149.sroa.0.0.cast.3052.sroa_cast = bitcast { i8*, i64 }* %tmpv.832 to i64*
  %sret.actual.149.sroa.2.0.cast.3052.sroa_idx303 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.832, i64 0, i32 1
  %icmp.337 = icmp eq %Cmd.0* %call.187, null
  %cast.3056 = bitcast %IPST.3* %tmpv.835 to i8*
  %field.652 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.835, i64 0, i32 1
  %cast.3058 = bitcast { i8*, i64 }* %tmpv.838 to i8*
  %i18.sroa.6.16.cast.3060.sroa_cast = bitcast { i8*, i64 }* %tmpv.839 to i8*
  %field.654 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.835, i64 0, i32 2
  %cast.3062 = bitcast %IPST.3* %tmpv.835 to %IPST.4*
  %tmpv.844.sroa.0.0.cast.3070.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.835, i64 0, i32 0
  %tmpv.844.sroa.0.0.cast.3067.sroa_idx = bitcast %IPST.4* %sret.actual.150 to { i8*, i64 }**
  %91 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.150, i64 0, i32 1
  %92 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.150, i64 0, i32 2
  %cast.3081 = bitcast { i8*, i64 }* %tmpv.832 to i8*
  %cast.3087 = bitcast %IPST.3* %tmpv.857 to i8*
  %i18.sroa.61122 = bitcast { i8*, i64 }* %i18.sroa.6 to i8*
  br label %fallthrough.265

fallthrough.265:                                  ; preds = %then.282.lr.ph, %fallthrough.280
  %tmpv.843.sroa.3.01043 = phi i64 [ undef, %then.282.lr.ph ], [ %tmpv.843.sroa.3.1, %fallthrough.280 ]
  %tmpv.843.sroa.2.01042 = phi i64 [ undef, %then.282.lr.ph ], [ %tmpv.843.sroa.2.1, %fallthrough.280 ]
  %tmpv.843.sroa.0.01041 = phi { i8*, i64 }* [ undef, %then.282.lr.ph ], [ %tmpv.843.sroa.0.1, %fallthrough.280 ]
  %tmpv.856.01040 = phi { i8*, i64 }* [ undef, %then.282.lr.ph ], [ %tmpv.856.1, %fallthrough.280 ]
  %tmpv.855.01039 = phi i64 [ undef, %then.282.lr.ph ], [ %tmpv.855.1, %fallthrough.280 ]
  %tmpv.826.01038 = phi i64 [ 0, %then.282.lr.ph ], [ %add.35, %fallthrough.280 ]
  %tmpv.852.01037 = phi { i8*, i64 }* [ undef, %then.282.lr.ph ], [ %tmpv.852.1, %fallthrough.280 ]
  %tmpv.851.01036 = phi i64 [ undef, %then.282.lr.ph ], [ %tmpv.851.1, %fallthrough.280 ]
  %tmpv.834.01034 = phi %Cmd.0* [ undef, %then.282.lr.ph ], [ %tmpv.834.0.pn, %fallthrough.280 ]
  %tmpv.848.01033 = phi { i8*, i64 }* [ undef, %then.282.lr.ph ], [ %tmpv.848.1, %fallthrough.280 ]
  %tmpv.847.01032 = phi i64 [ undef, %then.282.lr.ph ], [ %tmpv.847.1, %fallthrough.280 ]
  %tmpv.836.01031 = phi %Cmd.0* [ undef, %then.282.lr.ph ], [ %tmpv.836.1, %fallthrough.280 ]
  %ptroff.32.phi.trans.insert = getelementptr %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %archs.sroa.0.2, i64 %tmpv.826.01038
  %tmpv.827.sroa.0.0.cast.3045.sroa_cast.phi.trans.insert = bitcast %.command-line-arguments.archPath.0* %ptroff.32.phi.trans.insert to i64*
  %tmpv.827.sroa.0.0.copyload331.pre = load i64, i64* %tmpv.827.sroa.0.0.cast.3045.sroa_cast.phi.trans.insert, align 8, !dbg !1846
  %tmpv.827.sroa.3.0.cast.3045.sroa_idx332.phi.trans.insert = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %archs.sroa.0.2, i64 %tmpv.826.01038, i32 0, i32 1
  %tmpv.827.sroa.3.0.copyload333.pre = load i64, i64* %tmpv.827.sroa.3.0.cast.3045.sroa_idx332.phi.trans.insert, align 8, !dbg !1846
  %tmpv.827.sroa.4.0.cast.3045.sroa_idx = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %archs.sroa.0.2, i64 %tmpv.826.01038, i32 1, !dbg !1846
  %tmpv.827.sroa.4.0.cast.3045.sroa_cast = bitcast { i8*, i64 }* %tmpv.827.sroa.4.0.cast.3045.sroa_idx to i8*, !dbg !1846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %i18.sroa.61122, i8* nonnull align 8 %tmpv.827.sroa.4.0.cast.3045.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.827.sroa.0.0.copyload331.pre, metadata !1848, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1849
  call void @llvm.dbg.value(metadata i64 %tmpv.827.sroa.3.0.copyload333.pre, metadata !1848, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1849
  %call.188 = invoke { i64, i64 } @command_line_arguments.ArchClang(i8* nest undef, i64 %tmpv.827.sroa.0.0.copyload331.pre, i64 %tmpv.827.sroa.3.0.copyload333.pre)
          to label %cont.187 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1850

cont.187:                                         ; preds = %fallthrough.265
  %call.188.fca.0.extract = extractvalue { i64, i64 } %call.188, 0, !dbg !1850
  %call.188.fca.1.extract = extractvalue { i64, i64 } %call.188, 1, !dbg !1850
  store i64 %call.188.fca.0.extract, i64* %sret.actual.149.sroa.0.0.cast.3052.sroa_cast, align 8
  store i64 %call.188.fca.1.extract, i64* %sret.actual.149.sroa.2.0.cast.3052.sroa_idx303, align 8
  br i1 %icmp.337, label %then.266, label %fallthrough.267

then.266:                                         ; preds = %cont.187
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.267 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1851

then.267:                                         ; preds = %then.266
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.267 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1852

fallthrough.267:                                  ; preds = %cont.187, %then.267
  %tmpv.834.0.pn = phi %Cmd.0* [ %tmpv.834.01034, %then.267 ], [ %call.187, %cont.187 ]
  %tmpv.836.1 = phi %Cmd.0* [ %tmpv.836.01031, %then.267 ], [ %call.187, %cont.187 ]
  %field.650997 = getelementptr inbounds %Cmd.0, %Cmd.0* %tmpv.834.0.pn, i64 0, i32 1, !dbg !1851
  %field.651 = getelementptr inbounds %Cmd.0, %Cmd.0* %tmpv.836.1, i64 0, i32 1, !dbg !1852
  %cast.3057 = bitcast %IPST.3* %field.651 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3056, i8* nonnull align 8 %cast.3057, i64 24, i1 false)
  %tmpv.835.field.ld.0 = load i64, i64* %field.652, align 8, !dbg !1853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3058, i8* align 8 bitcast ({ i8*, i64 }* @const.379 to i8*), i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %i18.sroa.6.16.cast.3060.sroa_cast, i8* nonnull align 8 %i18.sroa.6.0.sroa_cast329, i64 16, i1 false)
  %add.31 = add i64 %tmpv.835.field.ld.0, 3, !dbg !1853
  %tmpv.835.field.ld.1 = load i64, i64* %field.654, align 8, !dbg !1853
  %icmp.339 = icmp ugt i64 %add.31, %tmpv.835.field.ld.1, !dbg !1853
  br i1 %icmp.339, label %then.268, label %else.268

then.268:                                         ; preds = %fallthrough.267
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.150, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3062, i64 %add.31)
          to label %cont.190 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

fallthrough.268:                                  ; preds = %else.269, %then.269, %cont.190
  %tmpv.843.sroa.0.1 = phi { i8*, i64 }* [ %tmpv.843.sroa.0.01041, %cont.190 ], [ %tmpv.843.sroa.0.01041, %then.269 ], [ %tmpv.835.field.ld.3, %else.269 ]
  %tmpv.843.sroa.2.1 = phi i64 [ %tmpv.843.sroa.2.01042, %cont.190 ], [ %tmpv.843.sroa.2.01042, %then.269 ], [ %add.31, %else.269 ]
  %tmpv.843.sroa.3.1 = phi i64 [ %tmpv.843.sroa.3.01043, %cont.190 ], [ %tmpv.843.sroa.3.01043, %then.269 ], [ %tmpv.835.field.ld.1, %else.269 ]
  %tmpv.844.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.844.sroa.0.0.copyload, %cont.190 ], [ %tmpv.843.sroa.0.01041, %then.269 ], [ %tmpv.835.field.ld.3, %else.269 ]
  %tmpv.844.sroa.3.0 = phi i64 [ %tmpv.844.sroa.3.0.copyload, %cont.190 ], [ %tmpv.843.sroa.2.01042, %then.269 ], [ %add.31, %else.269 ]
  %tmpv.844.sroa.4.0 = phi i64 [ %tmpv.844.sroa.4.0.copyload, %cont.190 ], [ %tmpv.843.sroa.3.01043, %then.269 ], [ %tmpv.835.field.ld.1, %else.269 ]
  store { i8*, i64 }* %tmpv.844.sroa.0.0, { i8*, i64 }** %tmpv.844.sroa.0.0.cast.3070.sroa_idx, align 8, !dbg !1853
  store i64 %tmpv.844.sroa.3.0, i64* %field.652, align 8, !dbg !1853
  store i64 %tmpv.844.sroa.4.0, i64* %field.654, align 8, !dbg !1853
  %icmp.346 = icmp sge i64 %tmpv.835.field.ld.0, %tmpv.844.sroa.3.0, !dbg !1853
  %93 = icmp slt i64 %tmpv.835.field.ld.0, 0, !dbg !1853
  %ior.184 = or i1 %93, %icmp.346, !dbg !1853
  br i1 %ior.184, label %then.271, label %fallthrough.271

else.268:                                         ; preds = %fallthrough.267
  %icmp.341 = icmp sgt i64 %add.31, %tmpv.835.field.ld.1, !dbg !1853
  %add.31.lobit973 = or i64 %tmpv.835.field.ld.1, %add.31, !dbg !1853
  %94 = icmp slt i64 %add.31.lobit973, 0, !dbg !1853
  %95 = or i1 %icmp.341, %94, !dbg !1853
  br i1 %95, label %then.269, label %else.269

cont.190:                                         ; preds = %then.268
  %tmpv.844.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.844.sroa.0.0.cast.3067.sroa_idx, align 8
  %tmpv.844.sroa.3.0.copyload = load i64, i64* %91, align 8
  %tmpv.844.sroa.4.0.copyload = load i64, i64* %92, align 8
  br label %fallthrough.268

then.269:                                         ; preds = %else.268
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.268 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

else.269:                                         ; preds = %else.268
  %tmpv.835.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.844.sroa.0.0.cast.3070.sroa_idx, align 8, !dbg !1853
  br label %fallthrough.268

then.271:                                         ; preds = %fallthrough.268
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.271 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

fallthrough.271:                                  ; preds = %fallthrough.268, %then.271
  %tmpv.847.1 = phi i64 [ %tmpv.847.01032, %then.271 ], [ %tmpv.835.field.ld.0, %fallthrough.268 ]
  %ptroff.34 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.844.sroa.0.0, i64 %tmpv.847.1, !dbg !1853
  %runtime.writeBarrier.ld.27 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1853
  %icmp.349 = icmp eq i32 %runtime.writeBarrier.ld.27, 0, !dbg !1853
  br i1 %icmp.349, label %then.272, label %else.272

then.272:                                         ; preds = %fallthrough.271
  %icmp.348 = icmp eq { i8*, i64 }* %ptroff.34, null, !dbg !1853
  br i1 %icmp.348, label %then.273, label %fallthrough.273

fallthrough.272:                                  ; preds = %else.272, %fallthrough.273
  %tmpv.848.1 = phi { i8*, i64 }* [ %tmpv.848.2, %fallthrough.273 ], [ %tmpv.848.01033, %else.272 ]
  %add.33 = add i64 %tmpv.835.field.ld.0, 1, !dbg !1853
  %tmpv.835.field.ld.7 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.844.sroa.0.0.cast.3070.sroa_idx, align 8, !dbg !1853
  %tmpv.835.field.ld.6 = load i64, i64* %field.652, align 8, !dbg !1853
  %icmp.350 = icmp sge i64 %add.33, %tmpv.835.field.ld.6, !dbg !1853
  %96 = icmp slt i64 %add.33, 0, !dbg !1853
  %ior.186 = or i1 %96, %icmp.350, !dbg !1853
  br i1 %ior.186, label %then.274, label %fallthrough.274

else.272:                                         ; preds = %fallthrough.271
  %cast.3075 = bitcast { i8*, i64 }* %ptroff.34 to i8*, !dbg !1853
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3075, i8* nonnull %cast.3058)
          to label %fallthrough.272 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

then.273:                                         ; preds = %then.272
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.273 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

fallthrough.273:                                  ; preds = %then.272, %then.273
  %tmpv.848.2 = phi { i8*, i64 }* [ %tmpv.848.01033, %then.273 ], [ %ptroff.34, %then.272 ]
  %cast.3073 = bitcast { i8*, i64 }* %tmpv.848.2 to i8*, !dbg !1853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3073, i8* nonnull align 8 %cast.3058, i64 16, i1 false), !dbg !1853
  br label %fallthrough.272

then.274:                                         ; preds = %fallthrough.272
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.274 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

fallthrough.274:                                  ; preds = %fallthrough.272, %then.274
  %tmpv.851.1 = phi i64 [ %tmpv.851.01036, %then.274 ], [ %add.33, %fallthrough.272 ]
  %ptroff.35 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.835.field.ld.7, i64 %tmpv.851.1, !dbg !1853
  %runtime.writeBarrier.ld.28 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1853
  %icmp.353 = icmp eq i32 %runtime.writeBarrier.ld.28, 0, !dbg !1853
  br i1 %icmp.353, label %then.275, label %else.275

then.275:                                         ; preds = %fallthrough.274
  %icmp.352 = icmp eq { i8*, i64 }* %ptroff.35, null, !dbg !1853
  br i1 %icmp.352, label %then.276, label %fallthrough.276

fallthrough.275:                                  ; preds = %else.275, %fallthrough.276
  %tmpv.852.1 = phi { i8*, i64 }* [ %tmpv.852.2, %fallthrough.276 ], [ %tmpv.852.01037, %else.275 ]
  %add.34 = add i64 %tmpv.835.field.ld.0, 2, !dbg !1853
  %tmpv.835.field.ld.9 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.844.sroa.0.0.cast.3070.sroa_idx, align 8, !dbg !1853
  %tmpv.835.field.ld.8 = load i64, i64* %field.652, align 8, !dbg !1853
  %icmp.354 = icmp sge i64 %add.34, %tmpv.835.field.ld.8, !dbg !1853
  %97 = icmp slt i64 %add.34, 0, !dbg !1853
  %ior.188 = or i1 %97, %icmp.354, !dbg !1853
  br i1 %ior.188, label %then.277, label %fallthrough.277

else.275:                                         ; preds = %fallthrough.274
  %cast.3080 = bitcast { i8*, i64 }* %ptroff.35 to i8*, !dbg !1853
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3080, i8* nonnull %cast.3081)
          to label %fallthrough.275 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

then.276:                                         ; preds = %then.275
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.276 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

fallthrough.276:                                  ; preds = %then.275, %then.276
  %tmpv.852.2 = phi { i8*, i64 }* [ %tmpv.852.01037, %then.276 ], [ %ptroff.35, %then.275 ]
  %cast.3078 = bitcast { i8*, i64 }* %tmpv.852.2 to i8*, !dbg !1853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3078, i8* nonnull align 8 %cast.3081, i64 16, i1 false), !dbg !1853
  br label %fallthrough.275

then.277:                                         ; preds = %fallthrough.275
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.277 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

fallthrough.277:                                  ; preds = %fallthrough.275, %then.277
  %tmpv.855.1 = phi i64 [ %tmpv.855.01039, %then.277 ], [ %add.34, %fallthrough.275 ]
  %ptroff.36 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.835.field.ld.9, i64 %tmpv.855.1, !dbg !1853
  %runtime.writeBarrier.ld.29 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1853
  %icmp.357 = icmp eq i32 %runtime.writeBarrier.ld.29, 0, !dbg !1853
  br i1 %icmp.357, label %then.278, label %else.278

then.278:                                         ; preds = %fallthrough.277
  %icmp.356 = icmp eq { i8*, i64 }* %ptroff.36, null, !dbg !1853
  br i1 %icmp.356, label %then.279, label %fallthrough.279

fallthrough.278:                                  ; preds = %else.278, %fallthrough.279
  %tmpv.856.1 = phi { i8*, i64 }* [ %tmpv.856.2, %fallthrough.279 ], [ %tmpv.856.01040, %else.278 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3087, i8* nonnull align 8 %cast.3056, i64 24, i1 false)
  %runtime.writeBarrier.ld.30 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1854
  %icmp.359 = icmp eq i32 %runtime.writeBarrier.ld.30, 0, !dbg !1854
  %cast.3090 = bitcast %IPST.3* %field.650997 to i8*, !dbg !1854
  br i1 %icmp.359, label %else.281, label %else.280

else.278:                                         ; preds = %fallthrough.277
  %cast.3085 = bitcast { i8*, i64 }* %ptroff.36 to i8*, !dbg !1853
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3085, i8* nonnull %i18.sroa.6.16.cast.3060.sroa_cast)
          to label %fallthrough.278 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

then.279:                                         ; preds = %then.278
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.279 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1853

fallthrough.279:                                  ; preds = %then.278, %then.279
  %tmpv.856.2 = phi { i8*, i64 }* [ %tmpv.856.01040, %then.279 ], [ %ptroff.36, %then.278 ]
  %cast.3083 = bitcast { i8*, i64 }* %tmpv.856.2 to i8*, !dbg !1853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3083, i8* nonnull align 8 %i18.sroa.6.16.cast.3060.sroa_cast, i64 16, i1 false), !dbg !1853
  br label %fallthrough.278

fallthrough.280:                                  ; preds = %else.280, %else.281
  %add.35 = add nuw nsw i64 %tmpv.826.01038, 1, !dbg !1846
  %icmp.360 = icmp slt i64 %add.35, %archs.sroa.8.2, !dbg !1846
  br i1 %icmp.360, label %fallthrough.265, label %else.282

else.280:                                         ; preds = %fallthrough.278
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.3090, i8* nonnull %cast.3087)
          to label %fallthrough.280 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1854

else.281:                                         ; preds = %fallthrough.278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3090, i8* nonnull align 8 %cast.3087, i64 24, i1 false), !dbg !1854
  br label %fallthrough.280

else.282:                                         ; preds = %fallthrough.280, %cont.185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %i18.sroa.6.0.sroa_cast329)
  %icmp.361 = icmp eq %Cmd.0* %call.187, null, !dbg !1855
  br i1 %icmp.361, label %then.283, label %fallthrough.284

then.283:                                         ; preds = %else.282
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.284 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1855

then.284:                                         ; preds = %then.283
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.284 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1856

fallthrough.284:                                  ; preds = %else.282, %then.284
  %field.6691000 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.187, i64 0, i32 1, !dbg !1855
  %cast.3097 = bitcast %IPST.3* %tmpv.861 to i8*
  %cast.3098 = bitcast %IPST.3* %field.6691000 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3097, i8* nonnull align 8 %cast.3098, i64 24, i1 false)
  %field.671 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.861, i64 0, i32 1, !dbg !1857
  %tmpv.861.field.ld.0 = load i64, i64* %field.671, align 8, !dbg !1857
  %cast.3099 = bitcast { i8*, i64 }* %tmpv.864 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3099, i8* align 8 bitcast ({ i8*, i64 }* @const.381 to i8*), i64 16, i1 false)
  %add.36 = add i64 %tmpv.861.field.ld.0, 2, !dbg !1857
  %field.672 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.861, i64 0, i32 2, !dbg !1857
  %tmpv.861.field.ld.1 = load i64, i64* %field.672, align 8, !dbg !1857
  %icmp.363 = icmp ugt i64 %add.36, %tmpv.861.field.ld.1, !dbg !1857
  br i1 %icmp.363, label %then.285, label %else.285

then.285:                                         ; preds = %fallthrough.284
  %cast.3101 = bitcast %IPST.3* %tmpv.861 to %IPST.4*, !dbg !1857
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.151, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3101, i64 %add.36)
          to label %cont.205 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

fallthrough.285:                                  ; preds = %else.286, %then.286, %cont.205
  %tmpv.869.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.869.sroa.0.0.copyload, %cont.205 ], [ undef, %then.286 ], [ %tmpv.861.field.ld.3, %else.286 ]
  %tmpv.869.sroa.3.0 = phi i64 [ %tmpv.869.sroa.3.0.copyload, %cont.205 ], [ %add.36, %then.286 ], [ %add.36, %else.286 ]
  %tmpv.869.sroa.4.0 = phi i64 [ %tmpv.869.sroa.4.0.copyload, %cont.205 ], [ undef, %then.286 ], [ %tmpv.861.field.ld.1, %else.286 ]
  %tmpv.869.sroa.0.0.cast.3109.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.861, i64 0, i32 0, !dbg !1857
  store { i8*, i64 }* %tmpv.869.sroa.0.0, { i8*, i64 }** %tmpv.869.sroa.0.0.cast.3109.sroa_idx, align 8, !dbg !1857
  store i64 %tmpv.869.sroa.3.0, i64* %field.671, align 8, !dbg !1857
  store i64 %tmpv.869.sroa.4.0, i64* %field.672, align 8, !dbg !1857
  %icmp.370 = icmp sge i64 %tmpv.861.field.ld.0, %tmpv.869.sroa.3.0, !dbg !1857
  %98 = icmp slt i64 %tmpv.861.field.ld.0, 0, !dbg !1857
  %ior.196 = or i1 %98, %icmp.370, !dbg !1857
  br i1 %ior.196, label %then.288, label %fallthrough.288

else.285:                                         ; preds = %fallthrough.284
  %icmp.365 = icmp sgt i64 %add.36, %tmpv.861.field.ld.1, !dbg !1857
  %add.36.lobit967 = or i64 %tmpv.861.field.ld.1, %add.36, !dbg !1857
  %99 = icmp slt i64 %add.36.lobit967, 0, !dbg !1857
  %100 = or i1 %icmp.365, %99, !dbg !1857
  br i1 %100, label %then.286, label %else.286

cont.205:                                         ; preds = %then.285
  %tmpv.869.sroa.0.0.cast.3106.sroa_idx = bitcast %IPST.4* %sret.actual.151 to { i8*, i64 }**
  %tmpv.869.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.869.sroa.0.0.cast.3106.sroa_idx, align 8
  %101 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.151, i64 0, i32 1
  %tmpv.869.sroa.3.0.copyload = load i64, i64* %101, align 8
  %102 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.151, i64 0, i32 2
  %tmpv.869.sroa.4.0.copyload = load i64, i64* %102, align 8
  br label %fallthrough.285

then.286:                                         ; preds = %else.285
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.285 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

else.286:                                         ; preds = %else.285
  %field.675 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.861, i64 0, i32 0, !dbg !1857
  %tmpv.861.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.675, align 8, !dbg !1857
  br label %fallthrough.285

then.288:                                         ; preds = %fallthrough.285
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.288 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

fallthrough.288:                                  ; preds = %fallthrough.285, %then.288
  %ptroff.38 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.869.sroa.0.0, i64 %tmpv.861.field.ld.0, !dbg !1857
  %runtime.writeBarrier.ld.31 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1857
  %icmp.373 = icmp eq i32 %runtime.writeBarrier.ld.31, 0, !dbg !1857
  br i1 %icmp.373, label %then.289, label %else.289

then.289:                                         ; preds = %fallthrough.288
  %icmp.372 = icmp eq { i8*, i64 }* %ptroff.38, null, !dbg !1857
  br i1 %icmp.372, label %then.290, label %fallthrough.290

fallthrough.289:                                  ; preds = %else.289, %fallthrough.290
  %add.38 = add i64 %tmpv.861.field.ld.0, 1, !dbg !1857
  %tmpv.861.field.ld.7 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.869.sroa.0.0.cast.3109.sroa_idx, align 8, !dbg !1857
  %tmpv.861.field.ld.6 = load i64, i64* %field.671, align 8, !dbg !1857
  %icmp.374 = icmp sge i64 %add.38, %tmpv.861.field.ld.6, !dbg !1857
  %103 = icmp slt i64 %add.38, 0, !dbg !1857
  %ior.198 = or i1 %103, %icmp.374, !dbg !1857
  br i1 %ior.198, label %then.291, label %fallthrough.291

else.289:                                         ; preds = %fallthrough.288
  %cast.3114 = bitcast { i8*, i64 }* %ptroff.38 to i8*, !dbg !1857
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3114, i8* nonnull %cast.3099)
          to label %fallthrough.289 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

then.290:                                         ; preds = %then.289
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.290 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

fallthrough.290:                                  ; preds = %then.289, %then.290
  %cast.3112 = bitcast { i8*, i64 }* %ptroff.38 to i8*, !dbg !1857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3112, i8* nonnull align 8 %cast.3099, i64 16, i1 false), !dbg !1857
  br label %fallthrough.289

then.291:                                         ; preds = %fallthrough.289
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.291 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

fallthrough.291:                                  ; preds = %fallthrough.289, %then.291
  %ptroff.39 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.861.field.ld.7, i64 %add.38, !dbg !1857
  %runtime.writeBarrier.ld.32 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1857
  %icmp.377 = icmp eq i32 %runtime.writeBarrier.ld.32, 0, !dbg !1857
  br i1 %icmp.377, label %then.292, label %else.292

then.292:                                         ; preds = %fallthrough.291
  %icmp.376 = icmp eq { i8*, i64 }* %ptroff.39, null, !dbg !1857
  br i1 %icmp.376, label %then.293, label %fallthrough.293

fallthrough.292:                                  ; preds = %else.292, %fallthrough.293
  %cast.3121 = bitcast %IPST.3* %tmpv.878 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3121, i8* nonnull align 8 %cast.3097, i64 24, i1 false)
  %runtime.writeBarrier.ld.33 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1858
  %icmp.379 = icmp eq i32 %runtime.writeBarrier.ld.33, 0, !dbg !1858
  br i1 %icmp.379, label %else.295, label %else.294

else.292:                                         ; preds = %fallthrough.291
  %cast.3119 = bitcast { i8*, i64 }* %ptroff.39 to i8*, !dbg !1857
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3119, i8* nonnull %30)
          to label %fallthrough.292 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

then.293:                                         ; preds = %then.292
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.293 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1857

fallthrough.293:                                  ; preds = %then.292, %then.293
  %cast.3117 = bitcast { i8*, i64 }* %ptroff.39 to i8*, !dbg !1857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3117, i8* nonnull align 8 %30, i64 16, i1 false), !dbg !1857
  br label %fallthrough.292

fallthrough.294:                                  ; preds = %else.294, %else.295
  %.ld.237 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1859
  %field0.139 = bitcast i8* %call.148 to i64*, !dbg !1861
  %ld.320 = load i64, i64* %field0.139, align 8, !dbg !1861
  %field1.139 = getelementptr inbounds i8, i8* %call.148, i64 8, !dbg !1861
  %104 = bitcast i8* %field1.139 to i64*, !dbg !1861
  %ld.321 = load i64, i64* %104, align 8, !dbg !1861
  %call.189 = invoke { i64, i64 } @command_line_arguments.RunCmd(i8* nest undef, %Flags.0* %.ld.237, i64 %ld.320, i64 %ld.321, %Cmd.0* nonnull %call.187)
          to label %cont.215 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1861

else.294:                                         ; preds = %fallthrough.292
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.3098, i8* nonnull %cast.3121)
          to label %fallthrough.294 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1858

else.295:                                         ; preds = %fallthrough.292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3098, i8* nonnull align 8 %cast.3121, i64 24, i1 false), !dbg !1858
  br label %fallthrough.294

cont.215:                                         ; preds = %fallthrough.294
  %call.189.fca.0.extract = extractvalue { i64, i64 } %call.189, 0, !dbg !1861
  call void @llvm.dbg.value(metadata i64 %call.189.fca.0.extract, metadata !1862, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1863
  %icmp.380 = icmp eq i64 %call.189.fca.0.extract, 0, !dbg !1864
  br i1 %icmp.380, label %else.296, label %then.296

then.296:                                         ; preds = %cont.215
  %call.189.fca.1.extract = extractvalue { i64, i64 } %call.189, 1, !dbg !1861
  call void @llvm.dbg.value(metadata i64 %call.189.fca.1.extract, metadata !1862, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1863
  call void @llvm.dbg.value(metadata i64 %call.189.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.189.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.296:                                         ; preds = %cont.215
  %.ld.238 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1865
  %icmp.381 = icmp eq %Flags.0* %.ld.238, null, !dbg !1866
  br i1 %icmp.381, label %then.297, label %fallthrough.297

then.297:                                         ; preds = %else.296
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.297 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1866

fallthrough.297:                                  ; preds = %else.296, %then.297
  %outputDir.sroa.0.0.cast.3139.sroa_idx = getelementptr inbounds %Flags.0, %Flags.0* %.ld.238, i64 0, i32 9
  %outputDir.sroa.0.0.cast.3139.sroa_cast = bitcast { i8*, i64 }* %outputDir.sroa.0.0.cast.3139.sroa_idx to i64*
  %outputDir.sroa.0.0.copyload = load i64, i64* %outputDir.sroa.0.0.cast.3139.sroa_cast, align 8
  call void @llvm.dbg.value(metadata i64 %outputDir.sroa.0.0.copyload, metadata !1867, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1868
  %outputDir.sroa.6.0.cast.3139.sroa_idx514 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.238, i64 0, i32 9, i32 1
  %outputDir.sroa.6.0.copyload = load i64, i64* %outputDir.sroa.6.0.cast.3139.sroa_idx514, align 8
  call void @llvm.dbg.value(metadata i64 %outputDir.sroa.6.0.copyload, metadata !1867, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1868
  %call.190 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %outputDir.sroa.0.0.copyload, i64 %outputDir.sroa.6.0.copyload, i64 0, i64 0)
          to label %cont.217 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1869

cont.217:                                         ; preds = %fallthrough.297
  %icmp.382 = icmp eq i8 %call.190, 1, !dbg !1869
  %spec.select = select i1 %icmp.382, i64 ptrtoint ([11 x i8]* @const.382 to i64), i64 %outputDir.sroa.0.0.copyload
  %spec.select978 = select i1 %icmp.382, i64 10, i64 %outputDir.sroa.6.0.copyload
  call void @llvm.dbg.value(metadata i64 %spec.select978, metadata !1867, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1868
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !1867, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1868
  %outputDir.sroa.0.0.cast.3152.sroa_cast = bitcast [5 x { i8*, i64 }]* %tmpv.885 to i64*, !dbg !1870
  store i64 %spec.select, i64* %outputDir.sroa.0.0.cast.3152.sroa_cast, align 8, !dbg !1870
  %outputDir.sroa.6.0.cast.3152.sroa_idx516 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.885, i64 0, i64 0, i32 1, !dbg !1870
  store i64 %spec.select978, i64* %outputDir.sroa.6.0.cast.3152.sroa_idx516, align 8, !dbg !1870
  %index.137 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.885, i64 0, i64 1, !dbg !1870
  %cast.3154 = bitcast { i8*, i64 }* %index.137 to i8*, !dbg !1870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3154, i8* align 8 bitcast ({ i8*, i64 }* @const.304 to i8*), i64 16, i1 false), !dbg !1870
  %index.138 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.885, i64 0, i64 2, !dbg !1870
  %cast.3156 = bitcast { i8*, i64 }* %index.138 to i8*, !dbg !1870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3156, i8* align 8 bitcast ({ i8*, i64 }* @const.340 to i8*), i64 16, i1 false), !dbg !1870
  %index.139 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.885, i64 0, i64 3, !dbg !1870
  %cast.3158 = bitcast { i8*, i64 }* %index.139 to i8*, !dbg !1870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3158, i8* align 8 bitcast ({ i8*, i64 }* @const.340 to i8*), i64 16, i1 false), !dbg !1870
  %index.140 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.885, i64 0, i64 4, !dbg !1870
  %cast.3160 = bitcast { i8*, i64 }* %index.140 to i8*, !dbg !1870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3160, i8* align 8 bitcast ({ i8*, i64 }* @const.342 to i8*), i64 16, i1 false), !dbg !1870
  %field.687 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.116, i64 0, i32 0, !dbg !1870
  %cast.3162 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmpv.885, i64 0, i64 0, !dbg !1870
  store { i8*, i64 }* %cast.3162, { i8*, i64 }** %field.687, align 8, !dbg !1870
  %field.688 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.116, i64 0, i32 1, !dbg !1870
  store i64 5, i64* %field.688, align 8, !dbg !1870
  %field.689 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.116, i64 0, i32 2, !dbg !1870
  store i64 5, i64* %field.689, align 8, !dbg !1870
  %call.191 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.116)
          to label %cont.218 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1870

cont.218:                                         ; preds = %cont.217
  %call.191.fca.0.extract = extractvalue { i64, i64 } %call.191, 0, !dbg !1870
  %call.191.fca.1.extract = extractvalue { i64, i64 } %call.191, 1, !dbg !1870
  %.ld.240 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1872
  %ld.329 = load i64, i64* %sret.actual.128.sroa.0.0.cast.2625.sroa_cast, align 8, !dbg !1873
  %ld.330 = load i64, i64* %sret.actual.128.sroa.2.0.cast.2625.sroa_idx500, align 8, !dbg !1873
  %call.192 = invoke { i64, i64 } @command_line_arguments.CopyFile(i8* nest undef, %Flags.0* %.ld.240, i64 %call.191.fca.0.extract, i64 %call.191.fca.1.extract, i64 %ld.329, i64 %ld.330)
          to label %cont.219 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1873

cont.219:                                         ; preds = %cont.218
  %call.192.fca.0.extract = extractvalue { i64, i64 } %call.192, 0, !dbg !1873
  call void @llvm.dbg.value(metadata i64 %call.192.fca.0.extract, metadata !1874, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1875
  %icmp.383 = icmp eq i64 %call.192.fca.0.extract, 0, !dbg !1876
  br i1 %icmp.383, label %else.299, label %then.299

then.299:                                         ; preds = %cont.219
  %call.192.fca.1.extract = extractvalue { i64, i64 } %call.192, 1, !dbg !1873
  call void @llvm.dbg.value(metadata i64 %call.192.fca.1.extract, metadata !1874, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1875
  call void @llvm.dbg.value(metadata i64 %call.192.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.192.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.299:                                         ; preds = %cont.219
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  br label %fallthrough.198

cont.220:                                         ; preds = %fallthrough.198
  %call.193.fca.1.extract = extractvalue { i64, i8 } %call.193, 1, !dbg !1691
  call void @llvm.dbg.value(metadata i8 %call.193.fca.1.extract, metadata !1688, metadata !DIExpression()), !dbg !1690
  %105 = and i8 %call.193.fca.1.extract, 1, !dbg !1877
  %trunc.352 = icmp eq i8 %105, 0, !dbg !1877
  br i1 %trunc.352, label %finally.2, label %then.300

then.300:                                         ; preds = %cont.220
  %106 = bitcast %IPST.3* %androidArchs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106)
  %107 = bitcast { i8*, i64 }* %aarPath to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107)
  %.ld.241 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1878
  %call.194 = invoke { i64, i64 } @command_line_arguments.ValidateAndroidInstall(i8* nest undef, %Flags.0* %.ld.241)
          to label %cont.221 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1881

cont.221:                                         ; preds = %then.300
  %call.194.fca.0.extract = extractvalue { i64, i64 } %call.194, 0, !dbg !1881
  call void @llvm.dbg.value(metadata i64 %call.194.fca.0.extract, metadata !1882, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1883
  %icmp.384 = icmp eq i64 %call.194.fca.0.extract, 0, !dbg !1884
  br i1 %icmp.384, label %else.301, label %then.301

then.301:                                         ; preds = %cont.221
  %call.194.fca.1.extract = extractvalue { i64, i64 } %call.194, 1, !dbg !1881
  call void @llvm.dbg.value(metadata i64 %call.194.fca.1.extract, metadata !1882, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1883
  call void @llvm.dbg.value(metadata i64 %call.194.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.194.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.301:                                         ; preds = %cont.221
  %cast.3196 = bitcast [2 x { i8*, i64 }]* %tmpv.895 to i8*, !dbg !1885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3196, i8* align 8 %call.148, i64 16, i1 false), !dbg !1885
  %index.142 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.895, i64 0, i64 1, !dbg !1885
  %cast.3198 = bitcast { i8*, i64 }* %index.142 to i8*, !dbg !1885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3198, i8* align 8 bitcast ({ i8*, i64 }* @const.385 to i8*), i64 16, i1 false), !dbg !1885
  %field.694 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.117, i64 0, i32 0, !dbg !1885
  %cast.3200 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.895, i64 0, i64 0, !dbg !1885
  store { i8*, i64 }* %cast.3200, { i8*, i64 }** %field.694, align 8, !dbg !1885
  %field.695 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.117, i64 0, i32 1, !dbg !1885
  store i64 2, i64* %field.695, align 8, !dbg !1885
  %field.696 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.117, i64 0, i32 2, !dbg !1885
  store i64 2, i64* %field.696, align 8, !dbg !1885
  %call.195 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.117)
          to label %cont.222 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1885

cont.222:                                         ; preds = %else.301
  %call.195.fca.0.extract = extractvalue { i64, i64 } %call.195, 0, !dbg !1885
  %call.195.fca.1.extract = extractvalue { i64, i64 } %call.195, 1, !dbg !1885
  call void @llvm.dbg.value(metadata i64 %call.195.fca.0.extract, metadata !1886, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1887
  call void @llvm.dbg.value(metadata i64 %call.195.fca.1.extract, metadata !1886, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1887
  %call.196 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7string, i64 0, i32 0))
          to label %cont.223 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1888

cont.223:                                         ; preds = %cont.222
  %108 = bitcast %IPST.3* %androidArchs to i8**, !dbg !1888
  store i8* %call.196, i8** %108, align 8, !dbg !1888
  %field.698 = getelementptr inbounds %IPST.3, %IPST.3* %androidArchs, i64 0, i32 1, !dbg !1888
  call void @llvm.dbg.value(metadata i8 0, metadata !1889, metadata !DIExpression()), !dbg !1891
  %cast.3207 = bitcast { i8*, i64 }* %tmpv.897 to i8*
  %109 = bitcast i64* %field.698 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 0, i64 16, i1 false), !dbg !1888
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3207, i8* align 8 bitcast ({ i8*, i64 }* @const.297 to i8*), i64 16, i1 false)
  %call.197 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.3207)
          to label %cont.224 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1892

cont.224:                                         ; preds = %cont.223
  %call.197.fca.1.extract = extractvalue { i64, i8 } %call.197, 1, !dbg !1892
  call void @llvm.dbg.value(metadata i8 %call.197.fca.1.extract, metadata !1889, metadata !DIExpression()), !dbg !1891
  %110 = and i8 %call.197.fca.1.extract, 1, !dbg !1893
  %trunc.307 = icmp eq i8 %110, 0, !dbg !1893
  br i1 %trunc.307, label %fallthrough.302, label %then.302

then.302:                                         ; preds = %cont.224
  %cast.3217 = bitcast %IPST.3* %tmpv.903 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3217, i8* nonnull align 8 %106, i64 24, i1 false)
  %field.702 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.903, i64 0, i32 1, !dbg !1894
  %tmpv.903.field.ld.0 = load i64, i64* %field.702, align 8, !dbg !1894
  %cast.3219 = bitcast { i8*, i64 }* %tmpv.905 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3219, i8* align 8 bitcast ({ i8*, i64 }* @const.65 to i8*), i64 16, i1 false)
  %add.39 = add i64 %tmpv.903.field.ld.0, 1, !dbg !1894
  %field.703 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.903, i64 0, i32 2, !dbg !1894
  %tmpv.903.field.ld.1 = load i64, i64* %field.703, align 8, !dbg !1894
  %icmp.385 = icmp ugt i64 %add.39, %tmpv.903.field.ld.1, !dbg !1894
  br i1 %icmp.385, label %then.303, label %else.303

fallthrough.302:                                  ; preds = %cont.224, %fallthrough.307
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression()), !dbg !1897
  %cast.3238 = bitcast { i8*, i64 }* %tmpv.915 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3238, i8* align 8 bitcast ({ i8*, i64 }* @const.299 to i8*), i64 16, i1 false)
  %call.198 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.3238)
          to label %cont.230 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1898

then.303:                                         ; preds = %then.302
  %cast.3221 = bitcast %IPST.3* %tmpv.903 to %IPST.4*, !dbg !1894
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.159, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3221, i64 %add.39)
          to label %cont.225 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1894

fallthrough.303:                                  ; preds = %else.304, %then.304, %cont.225
  %tmpv.910.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.910.sroa.0.0.copyload, %cont.225 ], [ undef, %then.304 ], [ %tmpv.903.field.ld.3, %else.304 ]
  %tmpv.910.sroa.3.0 = phi i64 [ %tmpv.910.sroa.3.0.copyload, %cont.225 ], [ %add.39, %then.304 ], [ %add.39, %else.304 ]
  %tmpv.910.sroa.4.0 = phi i64 [ %tmpv.910.sroa.4.0.copyload, %cont.225 ], [ undef, %then.304 ], [ %tmpv.903.field.ld.1, %else.304 ]
  %tmpv.910.sroa.0.0.cast.3229.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.903, i64 0, i32 0, !dbg !1894
  store { i8*, i64 }* %tmpv.910.sroa.0.0, { i8*, i64 }** %tmpv.910.sroa.0.0.cast.3229.sroa_idx, align 8, !dbg !1894
  store i64 %tmpv.910.sroa.3.0, i64* %field.702, align 8, !dbg !1894
  store i64 %tmpv.910.sroa.4.0, i64* %field.703, align 8, !dbg !1894
  %icmp.392 = icmp sge i64 %tmpv.903.field.ld.0, %tmpv.910.sroa.3.0, !dbg !1894
  %111 = icmp slt i64 %tmpv.903.field.ld.0, 0, !dbg !1894
  %ior.206 = or i1 %111, %icmp.392, !dbg !1894
  br i1 %ior.206, label %then.306, label %fallthrough.306

else.303:                                         ; preds = %then.302
  %icmp.387 = icmp sgt i64 %add.39, %tmpv.903.field.ld.1, !dbg !1894
  %add.39.lobit968 = or i64 %tmpv.903.field.ld.1, %add.39, !dbg !1894
  %112 = icmp slt i64 %add.39.lobit968, 0, !dbg !1894
  %113 = or i1 %icmp.387, %112, !dbg !1894
  br i1 %113, label %then.304, label %else.304

cont.225:                                         ; preds = %then.303
  %tmpv.910.sroa.0.0.cast.3226.sroa_idx = bitcast %IPST.4* %sret.actual.159 to { i8*, i64 }**
  %tmpv.910.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.910.sroa.0.0.cast.3226.sroa_idx, align 8
  %114 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.159, i64 0, i32 1
  %tmpv.910.sroa.3.0.copyload = load i64, i64* %114, align 8
  %115 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.159, i64 0, i32 2
  %tmpv.910.sroa.4.0.copyload = load i64, i64* %115, align 8
  br label %fallthrough.303

then.304:                                         ; preds = %else.303
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.303 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1894

else.304:                                         ; preds = %else.303
  %field.706 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.903, i64 0, i32 0, !dbg !1894
  %tmpv.903.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.706, align 8, !dbg !1894
  br label %fallthrough.303

then.306:                                         ; preds = %fallthrough.303
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.306 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1894

fallthrough.306:                                  ; preds = %fallthrough.303, %then.306
  %ptroff.41 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.910.sroa.0.0, i64 %tmpv.903.field.ld.0, !dbg !1894
  %runtime.writeBarrier.ld.34 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1894
  %icmp.395 = icmp eq i32 %runtime.writeBarrier.ld.34, 0, !dbg !1894
  br i1 %icmp.395, label %then.307, label %else.307

then.307:                                         ; preds = %fallthrough.306
  %icmp.394 = icmp eq { i8*, i64 }* %ptroff.41, null, !dbg !1894
  br i1 %icmp.394, label %then.308, label %fallthrough.308

fallthrough.307:                                  ; preds = %else.307, %fallthrough.308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %cast.3217, i64 24, i1 false), !dbg !1899
  br label %fallthrough.302

else.307:                                         ; preds = %fallthrough.306
  %cast.3234 = bitcast { i8*, i64 }* %ptroff.41 to i8*, !dbg !1894
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3234, i8* nonnull %cast.3219)
          to label %fallthrough.307 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1894

then.308:                                         ; preds = %then.307
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.308 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1894

fallthrough.308:                                  ; preds = %then.307, %then.308
  %cast.3232 = bitcast { i8*, i64 }* %ptroff.41 to i8*, !dbg !1894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3232, i8* nonnull align 8 %cast.3219, i64 16, i1 false), !dbg !1894
  br label %fallthrough.307

cont.230:                                         ; preds = %fallthrough.302
  %call.198.fca.1.extract = extractvalue { i64, i8 } %call.198, 1, !dbg !1898
  call void @llvm.dbg.value(metadata i8 %call.198.fca.1.extract, metadata !1895, metadata !DIExpression()), !dbg !1897
  %116 = and i8 %call.198.fca.1.extract, 1, !dbg !1900
  %trunc.314 = icmp eq i8 %116, 0, !dbg !1900
  br i1 %trunc.314, label %fallthrough.309, label %then.309

then.309:                                         ; preds = %cont.230
  %cast.3248 = bitcast %IPST.3* %tmpv.921 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3248, i8* nonnull align 8 %106, i64 24, i1 false)
  %field.716 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.921, i64 0, i32 1, !dbg !1901
  %tmpv.921.field.ld.0 = load i64, i64* %field.716, align 8, !dbg !1901
  %cast.3250 = bitcast { i8*, i64 }* %tmpv.923 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3250, i8* align 8 bitcast ({ i8*, i64 }* @const.109 to i8*), i64 16, i1 false)
  %add.41 = add i64 %tmpv.921.field.ld.0, 1, !dbg !1901
  %field.717 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.921, i64 0, i32 2, !dbg !1901
  %tmpv.921.field.ld.1 = load i64, i64* %field.717, align 8, !dbg !1901
  %icmp.396 = icmp ugt i64 %add.41, %tmpv.921.field.ld.1, !dbg !1901
  br i1 %icmp.396, label %then.310, label %else.310

fallthrough.309:                                  ; preds = %cont.230, %fallthrough.314
  call void @llvm.dbg.value(metadata i8 0, metadata !1902, metadata !DIExpression()), !dbg !1904
  %cast.3269 = bitcast { i8*, i64 }* %tmpv.933 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3269, i8* align 8 bitcast ({ i8*, i64 }* @const.301 to i8*), i64 16, i1 false)
  %call.199 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.3269)
          to label %cont.236 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1905

then.310:                                         ; preds = %then.309
  %cast.3252 = bitcast %IPST.3* %tmpv.921 to %IPST.4*, !dbg !1901
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.161, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3252, i64 %add.41)
          to label %cont.231 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1901

fallthrough.310:                                  ; preds = %else.311, %then.311, %cont.231
  %tmpv.928.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.928.sroa.0.0.copyload, %cont.231 ], [ undef, %then.311 ], [ %tmpv.921.field.ld.3, %else.311 ]
  %tmpv.928.sroa.3.0 = phi i64 [ %tmpv.928.sroa.3.0.copyload, %cont.231 ], [ %add.41, %then.311 ], [ %add.41, %else.311 ]
  %tmpv.928.sroa.4.0 = phi i64 [ %tmpv.928.sroa.4.0.copyload, %cont.231 ], [ undef, %then.311 ], [ %tmpv.921.field.ld.1, %else.311 ]
  %tmpv.928.sroa.0.0.cast.3260.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.921, i64 0, i32 0, !dbg !1901
  store { i8*, i64 }* %tmpv.928.sroa.0.0, { i8*, i64 }** %tmpv.928.sroa.0.0.cast.3260.sroa_idx, align 8, !dbg !1901
  store i64 %tmpv.928.sroa.3.0, i64* %field.716, align 8, !dbg !1901
  store i64 %tmpv.928.sroa.4.0, i64* %field.717, align 8, !dbg !1901
  %icmp.403 = icmp sge i64 %tmpv.921.field.ld.0, %tmpv.928.sroa.3.0, !dbg !1901
  %117 = icmp slt i64 %tmpv.921.field.ld.0, 0, !dbg !1901
  %ior.214 = or i1 %117, %icmp.403, !dbg !1901
  br i1 %ior.214, label %then.313, label %fallthrough.313

else.310:                                         ; preds = %then.309
  %icmp.398 = icmp sgt i64 %add.41, %tmpv.921.field.ld.1, !dbg !1901
  %add.41.lobit969 = or i64 %tmpv.921.field.ld.1, %add.41, !dbg !1901
  %118 = icmp slt i64 %add.41.lobit969, 0, !dbg !1901
  %119 = or i1 %icmp.398, %118, !dbg !1901
  br i1 %119, label %then.311, label %else.311

cont.231:                                         ; preds = %then.310
  %tmpv.928.sroa.0.0.cast.3257.sroa_idx = bitcast %IPST.4* %sret.actual.161 to { i8*, i64 }**
  %tmpv.928.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.928.sroa.0.0.cast.3257.sroa_idx, align 8
  %120 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.161, i64 0, i32 1
  %tmpv.928.sroa.3.0.copyload = load i64, i64* %120, align 8
  %121 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.161, i64 0, i32 2
  %tmpv.928.sroa.4.0.copyload = load i64, i64* %121, align 8
  br label %fallthrough.310

then.311:                                         ; preds = %else.310
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.310 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1901

else.311:                                         ; preds = %else.310
  %field.720 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.921, i64 0, i32 0, !dbg !1901
  %tmpv.921.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.720, align 8, !dbg !1901
  br label %fallthrough.310

then.313:                                         ; preds = %fallthrough.310
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.313 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1901

fallthrough.313:                                  ; preds = %fallthrough.310, %then.313
  %ptroff.43 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.928.sroa.0.0, i64 %tmpv.921.field.ld.0, !dbg !1901
  %runtime.writeBarrier.ld.35 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1901
  %icmp.406 = icmp eq i32 %runtime.writeBarrier.ld.35, 0, !dbg !1901
  br i1 %icmp.406, label %then.314, label %else.314

then.314:                                         ; preds = %fallthrough.313
  %icmp.405 = icmp eq { i8*, i64 }* %ptroff.43, null, !dbg !1901
  br i1 %icmp.405, label %then.315, label %fallthrough.315

fallthrough.314:                                  ; preds = %else.314, %fallthrough.315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %cast.3248, i64 24, i1 false), !dbg !1906
  br label %fallthrough.309

else.314:                                         ; preds = %fallthrough.313
  %cast.3265 = bitcast { i8*, i64 }* %ptroff.43 to i8*, !dbg !1901
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3265, i8* nonnull %cast.3250)
          to label %fallthrough.314 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1901

then.315:                                         ; preds = %then.314
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.315 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1901

fallthrough.315:                                  ; preds = %then.314, %then.315
  %cast.3263 = bitcast { i8*, i64 }* %ptroff.43 to i8*, !dbg !1901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3263, i8* nonnull align 8 %cast.3250, i64 16, i1 false), !dbg !1901
  br label %fallthrough.314

cont.236:                                         ; preds = %fallthrough.309
  %call.199.fca.1.extract = extractvalue { i64, i8 } %call.199, 1, !dbg !1905
  call void @llvm.dbg.value(metadata i8 %call.199.fca.1.extract, metadata !1902, metadata !DIExpression()), !dbg !1904
  %122 = and i8 %call.199.fca.1.extract, 1, !dbg !1907
  %trunc.321 = icmp eq i8 %122, 0, !dbg !1907
  br i1 %trunc.321, label %fallthrough.316, label %then.316

then.316:                                         ; preds = %cont.236
  %cast.3279 = bitcast %IPST.3* %tmpv.939 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3279, i8* nonnull align 8 %106, i64 24, i1 false)
  %field.730 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.939, i64 0, i32 1, !dbg !1908
  %tmpv.939.field.ld.0 = load i64, i64* %field.730, align 8, !dbg !1908
  %cast.3281 = bitcast { i8*, i64 }* %tmpv.941 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3281, i8* align 8 bitcast ({ i8*, i64 }* @const.110 to i8*), i64 16, i1 false)
  %add.43 = add i64 %tmpv.939.field.ld.0, 1, !dbg !1908
  %field.731 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.939, i64 0, i32 2, !dbg !1908
  %tmpv.939.field.ld.1 = load i64, i64* %field.731, align 8, !dbg !1908
  %icmp.407 = icmp ugt i64 %add.43, %tmpv.939.field.ld.1, !dbg !1908
  br i1 %icmp.407, label %then.317, label %else.317

fallthrough.316:                                  ; preds = %cont.236, %fallthrough.321
  call void @llvm.dbg.value(metadata i8 0, metadata !1909, metadata !DIExpression()), !dbg !1911
  %cast.3300 = bitcast { i8*, i64 }* %tmpv.951 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3300, i8* align 8 bitcast ({ i8*, i64 }* @const.303 to i8*), i64 16, i1 false)
  %call.200 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.146, i8* nonnull %cast.3300)
          to label %cont.242 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1912

then.317:                                         ; preds = %then.316
  %cast.3283 = bitcast %IPST.3* %tmpv.939 to %IPST.4*, !dbg !1908
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.163, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3283, i64 %add.43)
          to label %cont.237 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1908

fallthrough.317:                                  ; preds = %else.318, %then.318, %cont.237
  %tmpv.946.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.946.sroa.0.0.copyload, %cont.237 ], [ undef, %then.318 ], [ %tmpv.939.field.ld.3, %else.318 ]
  %tmpv.946.sroa.3.0 = phi i64 [ %tmpv.946.sroa.3.0.copyload, %cont.237 ], [ %add.43, %then.318 ], [ %add.43, %else.318 ]
  %tmpv.946.sroa.4.0 = phi i64 [ %tmpv.946.sroa.4.0.copyload, %cont.237 ], [ undef, %then.318 ], [ %tmpv.939.field.ld.1, %else.318 ]
  %tmpv.946.sroa.0.0.cast.3291.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.939, i64 0, i32 0, !dbg !1908
  store { i8*, i64 }* %tmpv.946.sroa.0.0, { i8*, i64 }** %tmpv.946.sroa.0.0.cast.3291.sroa_idx, align 8, !dbg !1908
  store i64 %tmpv.946.sroa.3.0, i64* %field.730, align 8, !dbg !1908
  store i64 %tmpv.946.sroa.4.0, i64* %field.731, align 8, !dbg !1908
  %icmp.414 = icmp sge i64 %tmpv.939.field.ld.0, %tmpv.946.sroa.3.0, !dbg !1908
  %123 = icmp slt i64 %tmpv.939.field.ld.0, 0, !dbg !1908
  %ior.222 = or i1 %123, %icmp.414, !dbg !1908
  br i1 %ior.222, label %then.320, label %fallthrough.320

else.317:                                         ; preds = %then.316
  %icmp.409 = icmp sgt i64 %add.43, %tmpv.939.field.ld.1, !dbg !1908
  %add.43.lobit970 = or i64 %tmpv.939.field.ld.1, %add.43, !dbg !1908
  %124 = icmp slt i64 %add.43.lobit970, 0, !dbg !1908
  %125 = or i1 %icmp.409, %124, !dbg !1908
  br i1 %125, label %then.318, label %else.318

cont.237:                                         ; preds = %then.317
  %tmpv.946.sroa.0.0.cast.3288.sroa_idx = bitcast %IPST.4* %sret.actual.163 to { i8*, i64 }**
  %tmpv.946.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.946.sroa.0.0.cast.3288.sroa_idx, align 8
  %126 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.163, i64 0, i32 1
  %tmpv.946.sroa.3.0.copyload = load i64, i64* %126, align 8
  %127 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.163, i64 0, i32 2
  %tmpv.946.sroa.4.0.copyload = load i64, i64* %127, align 8
  br label %fallthrough.317

then.318:                                         ; preds = %else.317
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.317 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1908

else.318:                                         ; preds = %else.317
  %field.734 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.939, i64 0, i32 0, !dbg !1908
  %tmpv.939.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.734, align 8, !dbg !1908
  br label %fallthrough.317

then.320:                                         ; preds = %fallthrough.317
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.320 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1908

fallthrough.320:                                  ; preds = %fallthrough.317, %then.320
  %ptroff.45 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.946.sroa.0.0, i64 %tmpv.939.field.ld.0, !dbg !1908
  %runtime.writeBarrier.ld.36 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1908
  %icmp.417 = icmp eq i32 %runtime.writeBarrier.ld.36, 0, !dbg !1908
  br i1 %icmp.417, label %then.321, label %else.321

then.321:                                         ; preds = %fallthrough.320
  %icmp.416 = icmp eq { i8*, i64 }* %ptroff.45, null, !dbg !1908
  br i1 %icmp.416, label %then.322, label %fallthrough.322

fallthrough.321:                                  ; preds = %else.321, %fallthrough.322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %cast.3279, i64 24, i1 false), !dbg !1913
  br label %fallthrough.316

else.321:                                         ; preds = %fallthrough.320
  %cast.3296 = bitcast { i8*, i64 }* %ptroff.45 to i8*, !dbg !1908
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3296, i8* nonnull %cast.3281)
          to label %fallthrough.321 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1908

then.322:                                         ; preds = %then.321
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.322 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1908

fallthrough.322:                                  ; preds = %then.321, %then.322
  %cast.3294 = bitcast { i8*, i64 }* %ptroff.45 to i8*, !dbg !1908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3294, i8* nonnull align 8 %cast.3281, i64 16, i1 false), !dbg !1908
  br label %fallthrough.321

cont.242:                                         ; preds = %fallthrough.316
  %call.200.fca.1.extract = extractvalue { i64, i8 } %call.200, 1, !dbg !1912
  call void @llvm.dbg.value(metadata i8 %call.200.fca.1.extract, metadata !1909, metadata !DIExpression()), !dbg !1911
  %128 = and i8 %call.200.fca.1.extract, 1, !dbg !1914
  %trunc.328 = icmp eq i8 %128, 0, !dbg !1914
  br i1 %trunc.328, label %fallthrough.323, label %then.323

then.323:                                         ; preds = %cont.242
  %cast.3310 = bitcast %IPST.3* %tmpv.957 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3310, i8* nonnull align 8 %106, i64 24, i1 false)
  %field.744 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.957, i64 0, i32 1, !dbg !1915
  %tmpv.957.field.ld.0 = load i64, i64* %field.744, align 8, !dbg !1915
  %cast.3312 = bitcast { i8*, i64 }* %tmpv.959 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3312, i8* align 8 bitcast ({ i8*, i64 }* @const.111 to i8*), i64 16, i1 false)
  %add.45 = add i64 %tmpv.957.field.ld.0, 1, !dbg !1915
  %field.745 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.957, i64 0, i32 2, !dbg !1915
  %tmpv.957.field.ld.1 = load i64, i64* %field.745, align 8, !dbg !1915
  %icmp.418 = icmp ugt i64 %add.45, %tmpv.957.field.ld.1, !dbg !1915
  br i1 %icmp.418, label %then.324, label %else.324

fallthrough.323:                                  ; preds = %cont.242, %fallthrough.328
  %cast.3333 = bitcast [2 x { i8*, i64 }]* %tmpv.970 to i8*, !dbg !1916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3333, i8* nonnull align 8 %call.148, i64 16, i1 false), !dbg !1916
  %index.144 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.970, i64 0, i64 1, !dbg !1916
  %cast.3335 = bitcast { i8*, i64 }* %index.144 to i8*, !dbg !1916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3335, i8* align 8 bitcast ({ i8*, i64 }* @const.295 to i8*), i64 16, i1 false), !dbg !1916
  %field.756 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.122, i64 0, i32 0, !dbg !1916
  %cast.3337 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.970, i64 0, i64 0, !dbg !1916
  store { i8*, i64 }* %cast.3337, { i8*, i64 }** %field.756, align 8, !dbg !1916
  %field.757 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.122, i64 0, i32 1, !dbg !1916
  store i64 2, i64* %field.757, align 8, !dbg !1916
  %field.758 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.122, i64 0, i32 2, !dbg !1916
  store i64 2, i64* %field.758, align 8, !dbg !1916
  %call.201 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.122)
          to label %cont.248 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1916

then.324:                                         ; preds = %then.323
  %cast.3314 = bitcast %IPST.3* %tmpv.957 to %IPST.4*, !dbg !1915
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.165, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3314, i64 %add.45)
          to label %cont.243 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1915

fallthrough.324:                                  ; preds = %else.325, %then.325, %cont.243
  %tmpv.964.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.964.sroa.0.0.copyload, %cont.243 ], [ undef, %then.325 ], [ %tmpv.957.field.ld.3, %else.325 ]
  %tmpv.964.sroa.3.0 = phi i64 [ %tmpv.964.sroa.3.0.copyload, %cont.243 ], [ %add.45, %then.325 ], [ %add.45, %else.325 ]
  %tmpv.964.sroa.4.0 = phi i64 [ %tmpv.964.sroa.4.0.copyload, %cont.243 ], [ undef, %then.325 ], [ %tmpv.957.field.ld.1, %else.325 ]
  %tmpv.964.sroa.0.0.cast.3322.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.957, i64 0, i32 0, !dbg !1915
  store { i8*, i64 }* %tmpv.964.sroa.0.0, { i8*, i64 }** %tmpv.964.sroa.0.0.cast.3322.sroa_idx, align 8, !dbg !1915
  store i64 %tmpv.964.sroa.3.0, i64* %field.744, align 8, !dbg !1915
  store i64 %tmpv.964.sroa.4.0, i64* %field.745, align 8, !dbg !1915
  %icmp.425 = icmp sge i64 %tmpv.957.field.ld.0, %tmpv.964.sroa.3.0, !dbg !1915
  %129 = icmp slt i64 %tmpv.957.field.ld.0, 0, !dbg !1915
  %ior.230 = or i1 %129, %icmp.425, !dbg !1915
  br i1 %ior.230, label %then.327, label %fallthrough.327

else.324:                                         ; preds = %then.323
  %icmp.420 = icmp sgt i64 %add.45, %tmpv.957.field.ld.1, !dbg !1915
  %add.45.lobit971 = or i64 %tmpv.957.field.ld.1, %add.45, !dbg !1915
  %130 = icmp slt i64 %add.45.lobit971, 0, !dbg !1915
  %131 = or i1 %icmp.420, %130, !dbg !1915
  br i1 %131, label %then.325, label %else.325

cont.243:                                         ; preds = %then.324
  %tmpv.964.sroa.0.0.cast.3319.sroa_idx = bitcast %IPST.4* %sret.actual.165 to { i8*, i64 }**
  %tmpv.964.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.964.sroa.0.0.cast.3319.sroa_idx, align 8
  %132 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.165, i64 0, i32 1
  %tmpv.964.sroa.3.0.copyload = load i64, i64* %132, align 8
  %133 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.165, i64 0, i32 2
  %tmpv.964.sroa.4.0.copyload = load i64, i64* %133, align 8
  br label %fallthrough.324

then.325:                                         ; preds = %else.324
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.324 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1915

else.325:                                         ; preds = %else.324
  %field.748 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.957, i64 0, i32 0, !dbg !1915
  %tmpv.957.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.748, align 8, !dbg !1915
  br label %fallthrough.324

then.327:                                         ; preds = %fallthrough.324
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.327 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1915

fallthrough.327:                                  ; preds = %fallthrough.324, %then.327
  %ptroff.47 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.964.sroa.0.0, i64 %tmpv.957.field.ld.0, !dbg !1915
  %runtime.writeBarrier.ld.37 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1915
  %icmp.428 = icmp eq i32 %runtime.writeBarrier.ld.37, 0, !dbg !1915
  br i1 %icmp.428, label %then.328, label %else.328

then.328:                                         ; preds = %fallthrough.327
  %icmp.427 = icmp eq { i8*, i64 }* %ptroff.47, null, !dbg !1915
  br i1 %icmp.427, label %then.329, label %fallthrough.329

fallthrough.328:                                  ; preds = %else.328, %fallthrough.329
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* nonnull align 8 %cast.3310, i64 24, i1 false), !dbg !1917
  br label %fallthrough.323

else.328:                                         ; preds = %fallthrough.327
  %cast.3327 = bitcast { i8*, i64 }* %ptroff.47 to i8*, !dbg !1915
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3327, i8* nonnull %cast.3312)
          to label %fallthrough.328 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1915

then.329:                                         ; preds = %then.328
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.329 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1915

fallthrough.329:                                  ; preds = %then.328, %then.329
  %cast.3325 = bitcast { i8*, i64 }* %ptroff.47 to i8*, !dbg !1915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3325, i8* nonnull align 8 %cast.3312, i64 16, i1 false), !dbg !1915
  br label %fallthrough.328

cont.248:                                         ; preds = %fallthrough.323
  %call.201.fca.0.extract = extractvalue { i64, i64 } %call.201, 0, !dbg !1916
  %call.201.fca.1.extract = extractvalue { i64, i64 } %call.201, 1, !dbg !1916
  call void @llvm.dbg.value(metadata i64 %call.201.fca.0.extract, metadata !1918, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1919
  call void @llvm.dbg.value(metadata i64 %call.201.fca.1.extract, metadata !1918, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1919
  %cast.3343 = bitcast [2 x { i8*, i64 }]* %tmpv.972 to i8*, !dbg !1920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3343, i8* nonnull align 8 %call.148, i64 16, i1 false), !dbg !1920
  %index.146 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.972, i64 0, i64 1, !dbg !1920
  %cast.3345 = bitcast { i8*, i64 }* %index.146 to i8*, !dbg !1920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3345, i8* align 8 bitcast ({ i8*, i64 }* @const.387 to i8*), i64 16, i1 false), !dbg !1920
  %field.759 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.123, i64 0, i32 0, !dbg !1920
  %cast.3347 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.972, i64 0, i64 0, !dbg !1920
  store { i8*, i64 }* %cast.3347, { i8*, i64 }** %field.759, align 8, !dbg !1920
  %field.760 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.123, i64 0, i32 1, !dbg !1920
  store i64 2, i64* %field.760, align 8, !dbg !1920
  %field.761 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.123, i64 0, i32 2, !dbg !1920
  store i64 2, i64* %field.761, align 8, !dbg !1920
  %call.202 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.123)
          to label %cont.249 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1920

cont.249:                                         ; preds = %cont.248
  %call.202.fca.0.extract = extractvalue { i64, i64 } %call.202, 0, !dbg !1920
  %call.202.fca.1.extract = extractvalue { i64, i64 } %call.202, 1, !dbg !1920
  call void @llvm.dbg.value(metadata i64 %call.202.fca.0.extract, metadata !1921, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1922
  call void @llvm.dbg.value(metadata i64 %call.202.fca.1.extract, metadata !1921, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1922
  %134 = bitcast %IPST.3* %args to i8**, !dbg !1923
  %args.field.ld.4940 = load i8*, i8** %134, align 8, !dbg !1923
  %icmp.429 = icmp slt i64 %args.field.ld.0, 1, !dbg !1924
  br i1 %icmp.429, label %then.330, label %fallthrough.330

then.330:                                         ; preds = %cont.249
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.330 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1924

fallthrough.330:                                  ; preds = %cont.249, %then.330
  %cast.3351 = bitcast { i8*, i64 }* %tmpv.974 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3351, i8* align 8 %args.field.ld.4940, i64 16, i1 false)
  %call.203 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.251 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1925

cont.251:                                         ; preds = %fallthrough.330
  %cast.3354 = bitcast { i8*, i64 }* %tmpv.977 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3354, i8* nonnull align 8 %cast.3351, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.203, i8* nonnull %cast.3354)
          to label %cont.252 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1925

cont.252:                                         ; preds = %cont.251
  %tmp.124.sroa.0.0.cast.3359.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.978, i64 0, i64 0, i32 0, !dbg !1925
  store %_type.0* @string..d, %_type.0** %tmp.124.sroa.0.0.cast.3359.sroa_idx, align 8, !dbg !1925
  %tmp.124.sroa.2.0.cast.3359.sroa_idx925 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.978, i64 0, i64 0, i32 1, !dbg !1925
  store i8* %call.203, i8** %tmp.124.sroa.2.0.cast.3359.sroa_idx925, align 8, !dbg !1925
  %field.766 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.125, i64 0, i32 0, !dbg !1925
  %cast.3362 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.978, i64 0, i64 0, !dbg !1925
  store %IPST.16* %cast.3362, %IPST.16** %field.766, align 8, !dbg !1925
  %field.767 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.125, i64 0, i32 1, !dbg !1925
  store i64 1, i64* %field.767, align 8, !dbg !1925
  %field.768 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.125, i64 0, i32 2, !dbg !1925
  store i64 1, i64* %field.768, align 8, !dbg !1925
  %ld.333 = load i64, i64* bitcast ({ i8*, i64 }* @command_line_arguments.BindFile to i64*), align 8, !dbg !1925
  %ld.334 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* @command_line_arguments.BindFile, i64 0, i32 1), align 8, !dbg !1925
  %call.204 = invoke { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 %ld.333, i64 %ld.334, %IPST.2* byval nonnull %tmp.125)
          to label %cont.253 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1925

cont.253:                                         ; preds = %cont.252
  %call.204.fca.0.extract = extractvalue { i64, i64 } %call.204, 0, !dbg !1925
  %call.204.fca.1.extract = extractvalue { i64, i64 } %call.204, 1, !dbg !1925
  %call.205 = invoke %Reader.3* @strings.NewReader(i8* nest undef, i64 %call.204.fca.0.extract, i64 %call.204.fca.1.extract)
          to label %cont.254 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1926

cont.254:                                         ; preds = %cont.253
  %.ld.279 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1927
  %135 = ptrtoint %Reader.3* %call.205 to i64, !dbg !1926
  %call.206 = invoke { i64, i64 } @command_line_arguments.WriteFile(i8* nest undef, %Flags.0* %.ld.279, i64 %call.202.fca.0.extract, i64 %call.202.fca.1.extract, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.3*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader to i64), i64 %135)
          to label %cont.255 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1928

cont.255:                                         ; preds = %cont.254
  %call.206.fca.0.extract = extractvalue { i64, i64 } %call.206, 0, !dbg !1928
  call void @llvm.dbg.value(metadata i64 %call.206.fca.0.extract, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1605
  %icmp.432 = icmp eq i64 %call.206.fca.0.extract, 0, !dbg !1929
  br i1 %icmp.432, label %else.331, label %else.332

else.331:                                         ; preds = %cont.255
  %androidDir.sroa.0.0.cast.3401.sroa_cast = bitcast [7 x { i8*, i64 }]* %tmpv.991 to i64*, !dbg !1930
  store i64 %call.201.fca.0.extract, i64* %androidDir.sroa.0.0.cast.3401.sroa_cast, align 8, !dbg !1930
  %androidDir.sroa.6.0.cast.3401.sroa_idx249 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 0, i32 1, !dbg !1930
  store i64 %call.201.fca.1.extract, i64* %androidDir.sroa.6.0.cast.3401.sroa_idx249, align 8, !dbg !1930
  %index.150 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 1, !dbg !1930
  %cast.3403 = bitcast { i8*, i64 }* %index.150 to i8*, !dbg !1930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3403, i8* align 8 bitcast ({ i8*, i64 }* @const.344 to i8*), i64 16, i1 false), !dbg !1930
  %index.151 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 2, !dbg !1930
  %cast.3405 = bitcast { i8*, i64 }* %index.151 to i8*, !dbg !1930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3405, i8* align 8 bitcast ({ i8*, i64 }* @const.332 to i8*), i64 16, i1 false), !dbg !1930
  %index.152 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 3, !dbg !1930
  %cast.3407 = bitcast { i8*, i64 }* %index.152 to i8*, !dbg !1930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3407, i8* align 8 bitcast ({ i8*, i64 }* @const.391 to i8*), i64 16, i1 false), !dbg !1930
  %index.153 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 4, !dbg !1930
  %cast.3409 = bitcast { i8*, i64 }* %index.153 to i8*, !dbg !1930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3409, i8* align 8 bitcast ({ i8*, i64 }* @const.393 to i8*), i64 16, i1 false), !dbg !1930
  %index.154 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 5, !dbg !1930
  %cast.3411 = bitcast { i8*, i64 }* %index.154 to i8*, !dbg !1930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3411, i8* align 8 bitcast ({ i8*, i64 }* @const.395 to i8*), i64 16, i1 false), !dbg !1930
  %index.155 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 6, !dbg !1930
  %cast.3413 = bitcast { i8*, i64 }* %index.155 to i8*, !dbg !1930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3413, i8* align 8 bitcast ({ i8*, i64 }* @const.397 to i8*), i64 16, i1 false), !dbg !1930
  %field.781 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.129, i64 0, i32 0, !dbg !1930
  %cast.3415 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.991, i64 0, i64 0, !dbg !1930
  store { i8*, i64 }* %cast.3415, { i8*, i64 }** %field.781, align 8, !dbg !1930
  %field.782 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.129, i64 0, i32 1, !dbg !1930
  store i64 7, i64* %field.782, align 8, !dbg !1930
  %field.783 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.129, i64 0, i32 2, !dbg !1930
  store i64 7, i64* %field.783, align 8, !dbg !1930
  %call.208 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.129)
          to label %cont.257 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1930

else.332:                                         ; preds = %cont.255
  %call.206.fca.1.extract = extractvalue { i64, i64 } %call.206, 1, !dbg !1928
  call void @llvm.dbg.value(metadata i64 %call.206.fca.1.extract, metadata !1604, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1605
  %136 = inttoptr i64 %call.206.fca.0.extract to i64*, !dbg !1931
  %.field.ld.89942 = load i64, i64* %136, align 8, !dbg !1931
  %137 = inttoptr i64 %call.206.fca.1.extract to i8*, !dbg !1932
  %138 = bitcast [1 x %IPST.16]* %tmpv.982 to i64*, !dbg !1932
  store i64 %.field.ld.89942, i64* %138, align 8, !dbg !1932
  %tmp.127.sroa.2.0.cast.3378.sroa_idx926 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.982, i64 0, i64 0, i32 1, !dbg !1932
  store i8* %137, i8** %tmp.127.sroa.2.0.cast.3378.sroa_idx926, align 8, !dbg !1932
  %field.777 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.128, i64 0, i32 0, !dbg !1932
  %cast.3381 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.982, i64 0, i64 0, !dbg !1932
  store %IPST.16* %cast.3381, %IPST.16** %field.777, align 8, !dbg !1932
  %field.778 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.128, i64 0, i32 1, !dbg !1932
  store i64 1, i64* %field.778, align 8, !dbg !1932
  %field.779 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.128, i64 0, i32 2, !dbg !1932
  store i64 1, i64* %field.779, align 8, !dbg !1932
  %call.207 = invoke { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([50 x i8]* @const.388 to i64), i64 49, %IPST.2* byval nonnull %tmp.128)
          to label %cont.256 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1932

cont.256:                                         ; preds = %else.332
  %call.207.fca.0.extract = extractvalue { i64, i64 } %call.207, 0, !dbg !1932
  %call.207.fca.1.extract = extractvalue { i64, i64 } %call.207, 1, !dbg !1932
  call void @llvm.dbg.value(metadata i64 %call.207.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.207.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

cont.257:                                         ; preds = %else.331
  %call.208.fca.0.extract = extractvalue { i64, i64 } %call.208, 0, !dbg !1930
  %call.208.fca.1.extract = extractvalue { i64, i64 } %call.208, 1, !dbg !1930
  call void @llvm.dbg.value(metadata i64 %call.208.fca.0.extract, metadata !1933, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1934
  call void @llvm.dbg.value(metadata i64 %call.208.fca.1.extract, metadata !1933, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1934
  %.ld.280 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1935
  %call.209 = invoke { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* %.ld.280, i64 %call.208.fca.0.extract, i64 %call.208.fca.1.extract)
          to label %cont.258 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1937

cont.258:                                         ; preds = %cont.257
  %call.209.fca.0.extract = extractvalue { i64, i64 } %call.209, 0, !dbg !1937
  call void @llvm.dbg.value(metadata i64 %call.209.fca.0.extract, metadata !1938, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1939
  %icmp.433 = icmp eq i64 %call.209.fca.0.extract, 0, !dbg !1940
  br i1 %icmp.433, label %else.333, label %then.333

then.333:                                         ; preds = %cont.258
  %call.209.fca.1.extract = extractvalue { i64, i64 } %call.209, 1, !dbg !1937
  call void @llvm.dbg.value(metadata i64 %call.209.fca.1.extract, metadata !1938, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1939
  call void @llvm.dbg.value(metadata i64 %call.209.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.209.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.333:                                         ; preds = %cont.258
  %javaDir2.sroa.0.0.cast.3429.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.993 to i64*, !dbg !1941
  store i64 %call.208.fca.0.extract, i64* %javaDir2.sroa.0.0.cast.3429.sroa_cast, align 8, !dbg !1941
  %javaDir2.sroa.7.0.cast.3429.sroa_idx238 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.993, i64 0, i64 0, i32 1, !dbg !1941
  store i64 %call.208.fca.1.extract, i64* %javaDir2.sroa.7.0.cast.3429.sroa_idx238, align 8, !dbg !1941
  %index.157 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.993, i64 0, i64 1, !dbg !1941
  %cast.3431 = bitcast { i8*, i64 }* %index.157 to i8*, !dbg !1941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3431, i8* align 8 bitcast ({ i8*, i64 }* @const.399 to i8*), i64 16, i1 false), !dbg !1941
  %field.785 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.130, i64 0, i32 0, !dbg !1941
  %cast.3433 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.993, i64 0, i64 0, !dbg !1941
  store { i8*, i64 }* %cast.3433, { i8*, i64 }** %field.785, align 8, !dbg !1941
  %field.786 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.130, i64 0, i32 1, !dbg !1941
  store i64 2, i64* %field.786, align 8, !dbg !1941
  %field.787 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.130, i64 0, i32 2, !dbg !1941
  store i64 2, i64* %field.787, align 8, !dbg !1941
  %call.210 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.130)
          to label %cont.259 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1941

cont.259:                                         ; preds = %else.333
  %cast.3439 = bitcast [2 x { i8*, i64 }]* %tmpv.996 to i8*, !dbg !1943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3439, i8* nonnull align 8 %bridgePath.0.sroa_cast, i64 16, i1 false), !dbg !1943
  %index.159 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.996, i64 0, i64 1, !dbg !1943
  %cast.3441 = bitcast { i8*, i64 }* %index.159 to i8*, !dbg !1943
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3441, i8* align 8 bitcast ({ i8*, i64 }* @const.401 to i8*), i64 16, i1 false), !dbg !1943
  %field.788 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.131, i64 0, i32 0, !dbg !1943
  %cast.3443 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.996, i64 0, i64 0, !dbg !1943
  store { i8*, i64 }* %cast.3443, { i8*, i64 }** %field.788, align 8, !dbg !1943
  %field.789 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.131, i64 0, i32 1, !dbg !1943
  store i64 2, i64* %field.789, align 8, !dbg !1943
  %field.790 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.131, i64 0, i32 2, !dbg !1943
  store i64 2, i64* %field.790, align 8, !dbg !1943
  %call.211 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.131)
          to label %cont.260 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1943

cont.260:                                         ; preds = %cont.259
  %call.210.fca.1.extract = extractvalue { i64, i64 } %call.210, 1, !dbg !1941
  %call.210.fca.0.extract = extractvalue { i64, i64 } %call.210, 0, !dbg !1941
  %call.211.fca.0.extract = extractvalue { i64, i64 } %call.211, 0, !dbg !1943
  %call.211.fca.1.extract = extractvalue { i64, i64 } %call.211, 1, !dbg !1943
  %.ld.281 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1944
  %call.212 = invoke { i64, i64 } @command_line_arguments.CopyFile(i8* nest undef, %Flags.0* %.ld.281, i64 %call.210.fca.0.extract, i64 %call.210.fca.1.extract, i64 %call.211.fca.0.extract, i64 %call.211.fca.1.extract)
          to label %cont.261 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1945

cont.261:                                         ; preds = %cont.260
  %call.212.fca.0.extract = extractvalue { i64, i64 } %call.212, 0, !dbg !1945
  call void @llvm.dbg.value(metadata i64 %call.212.fca.0.extract, metadata !1946, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1947
  %icmp.434 = icmp eq i64 %call.212.fca.0.extract, 0, !dbg !1948
  br i1 %icmp.434, label %else.334, label %then.334

then.334:                                         ; preds = %cont.261
  %call.212.fca.1.extract = extractvalue { i64, i64 } %call.212, 1, !dbg !1945
  call void @llvm.dbg.value(metadata i64 %call.212.fca.1.extract, metadata !1946, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1947
  call void @llvm.dbg.value(metadata i64 %call.212.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.212.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.334:                                         ; preds = %cont.261
  %javaDir2.sroa.0.0.cast.3460.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.1000 to i64*, !dbg !1949
  store i64 %call.208.fca.0.extract, i64* %javaDir2.sroa.0.0.cast.3460.sroa_cast, align 8, !dbg !1949
  %javaDir2.sroa.7.0.cast.3460.sroa_idx239 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1000, i64 0, i64 0, i32 1, !dbg !1949
  store i64 %call.208.fca.1.extract, i64* %javaDir2.sroa.7.0.cast.3460.sroa_idx239, align 8, !dbg !1949
  %index.161 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1000, i64 0, i64 1, !dbg !1949
  %cast.3462 = bitcast { i8*, i64 }* %index.161 to i8*, !dbg !1949
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3462, i8* align 8 bitcast ({ i8*, i64 }* @const.403 to i8*), i64 16, i1 false), !dbg !1949
  %field.792 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.132, i64 0, i32 0, !dbg !1949
  %cast.3464 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1000, i64 0, i64 0, !dbg !1949
  store { i8*, i64 }* %cast.3464, { i8*, i64 }** %field.792, align 8, !dbg !1949
  %field.793 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.132, i64 0, i32 1, !dbg !1949
  store i64 2, i64* %field.793, align 8, !dbg !1949
  %field.794 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.132, i64 0, i32 2, !dbg !1949
  store i64 2, i64* %field.794, align 8, !dbg !1949
  %call.213 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.132)
          to label %cont.262 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1949

cont.262:                                         ; preds = %else.334
  %cast.3470 = bitcast [2 x { i8*, i64 }]* %tmpv.1003 to i8*, !dbg !1951
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3470, i8* nonnull align 8 %bridgePath.0.sroa_cast, i64 16, i1 false), !dbg !1951
  %index.163 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1003, i64 0, i64 1, !dbg !1951
  %cast.3472 = bitcast { i8*, i64 }* %index.163 to i8*, !dbg !1951
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3472, i8* align 8 bitcast ({ i8*, i64 }* @const.405 to i8*), i64 16, i1 false), !dbg !1951
  %field.795 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.133, i64 0, i32 0, !dbg !1951
  %cast.3474 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1003, i64 0, i64 0, !dbg !1951
  store { i8*, i64 }* %cast.3474, { i8*, i64 }** %field.795, align 8, !dbg !1951
  %field.796 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.133, i64 0, i32 1, !dbg !1951
  store i64 2, i64* %field.796, align 8, !dbg !1951
  %field.797 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.133, i64 0, i32 2, !dbg !1951
  store i64 2, i64* %field.797, align 8, !dbg !1951
  %call.214 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.133)
          to label %cont.263 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1951

cont.263:                                         ; preds = %cont.262
  %call.213.fca.1.extract = extractvalue { i64, i64 } %call.213, 1, !dbg !1949
  %call.213.fca.0.extract = extractvalue { i64, i64 } %call.213, 0, !dbg !1949
  %call.214.fca.0.extract = extractvalue { i64, i64 } %call.214, 0, !dbg !1951
  %call.214.fca.1.extract = extractvalue { i64, i64 } %call.214, 1, !dbg !1951
  %.ld.282 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1952
  %call.215 = invoke { i64, i64 } @command_line_arguments.CopyFile(i8* nest undef, %Flags.0* %.ld.282, i64 %call.213.fca.0.extract, i64 %call.213.fca.1.extract, i64 %call.214.fca.0.extract, i64 %call.214.fca.1.extract)
          to label %cont.264 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1953

cont.264:                                         ; preds = %cont.263
  %call.215.fca.0.extract = extractvalue { i64, i64 } %call.215, 0, !dbg !1953
  call void @llvm.dbg.value(metadata i64 %call.215.fca.0.extract, metadata !1954, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1955
  %icmp.435 = icmp eq i64 %call.215.fca.0.extract, 0, !dbg !1956
  br i1 %icmp.435, label %else.335, label %then.335

then.335:                                         ; preds = %cont.264
  %call.215.fca.1.extract = extractvalue { i64, i64 } %call.215, 1, !dbg !1953
  call void @llvm.dbg.value(metadata i64 %call.215.fca.1.extract, metadata !1954, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1955
  call void @llvm.dbg.value(metadata i64 %call.215.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.215.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.335:                                         ; preds = %cont.264
  %javaDir2.sroa.0.0.cast.3491.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.1007 to i64*, !dbg !1957
  store i64 %call.208.fca.0.extract, i64* %javaDir2.sroa.0.0.cast.3491.sroa_cast, align 8, !dbg !1957
  %javaDir2.sroa.7.0.cast.3491.sroa_idx241 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1007, i64 0, i64 0, i32 1, !dbg !1957
  store i64 %call.208.fca.1.extract, i64* %javaDir2.sroa.7.0.cast.3491.sroa_idx241, align 8, !dbg !1957
  %index.165 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1007, i64 0, i64 1, !dbg !1957
  %cast.3493 = bitcast { i8*, i64 }* %index.165 to i8*, !dbg !1957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3493, i8* align 8 bitcast ({ i8*, i64 }* @const.407 to i8*), i64 16, i1 false), !dbg !1957
  %field.799 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.134, i64 0, i32 0, !dbg !1957
  %cast.3495 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1007, i64 0, i64 0, !dbg !1957
  store { i8*, i64 }* %cast.3495, { i8*, i64 }** %field.799, align 8, !dbg !1957
  %field.800 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.134, i64 0, i32 1, !dbg !1957
  store i64 2, i64* %field.800, align 8, !dbg !1957
  %field.801 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.134, i64 0, i32 2, !dbg !1957
  store i64 2, i64* %field.801, align 8, !dbg !1957
  %call.216 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.134)
          to label %cont.265 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1957

cont.265:                                         ; preds = %else.335
  %cast.3501 = bitcast [2 x { i8*, i64 }]* %tmpv.1010 to i8*, !dbg !1959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3501, i8* nonnull align 8 %bridgePath.0.sroa_cast, i64 16, i1 false), !dbg !1959
  %index.167 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1010, i64 0, i64 1, !dbg !1959
  %cast.3503 = bitcast { i8*, i64 }* %index.167 to i8*, !dbg !1959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3503, i8* align 8 bitcast ({ i8*, i64 }* @const.409 to i8*), i64 16, i1 false), !dbg !1959
  %field.802 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.135, i64 0, i32 0, !dbg !1959
  %cast.3505 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1010, i64 0, i64 0, !dbg !1959
  store { i8*, i64 }* %cast.3505, { i8*, i64 }** %field.802, align 8, !dbg !1959
  %field.803 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.135, i64 0, i32 1, !dbg !1959
  store i64 2, i64* %field.803, align 8, !dbg !1959
  %field.804 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.135, i64 0, i32 2, !dbg !1959
  store i64 2, i64* %field.804, align 8, !dbg !1959
  %call.217 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.135)
          to label %cont.266 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1959

cont.266:                                         ; preds = %cont.265
  %call.216.fca.1.extract = extractvalue { i64, i64 } %call.216, 1, !dbg !1957
  %call.216.fca.0.extract = extractvalue { i64, i64 } %call.216, 0, !dbg !1957
  %call.217.fca.0.extract = extractvalue { i64, i64 } %call.217, 0, !dbg !1959
  %call.217.fca.1.extract = extractvalue { i64, i64 } %call.217, 1, !dbg !1959
  %.ld.283 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1960
  %call.218 = invoke { i64, i64 } @command_line_arguments.CopyFile(i8* nest undef, %Flags.0* %.ld.283, i64 %call.216.fca.0.extract, i64 %call.216.fca.1.extract, i64 %call.217.fca.0.extract, i64 %call.217.fca.1.extract)
          to label %cont.267 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1961

cont.267:                                         ; preds = %cont.266
  %call.218.fca.0.extract = extractvalue { i64, i64 } %call.218, 0, !dbg !1961
  call void @llvm.dbg.value(metadata i64 %call.218.fca.0.extract, metadata !1962, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1963
  %icmp.436 = icmp eq i64 %call.218.fca.0.extract, 0, !dbg !1964
  br i1 %icmp.436, label %else.336, label %then.336

then.336:                                         ; preds = %cont.267
  %call.218.fca.1.extract = extractvalue { i64, i64 } %call.218, 1, !dbg !1961
  call void @llvm.dbg.value(metadata i64 %call.218.fca.1.extract, metadata !1962, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1963
  call void @llvm.dbg.value(metadata i64 %call.218.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.218.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.336:                                         ; preds = %cont.267
  %cast.3522 = bitcast [2 x { i8*, i64 }]* %tmpv.1014 to i8*, !dbg !1965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3522, i8* nonnull align 8 %call.148, i64 16, i1 false), !dbg !1965
  %index.169 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1014, i64 0, i64 1, !dbg !1965
  %cast.3524 = bitcast { i8*, i64 }* %index.169 to i8*, !dbg !1965
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3524, i8* align 8 bitcast ({ i8*, i64 }* @const.411 to i8*), i64 16, i1 false), !dbg !1965
  %field.806 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.136, i64 0, i32 0, !dbg !1965
  %cast.3526 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1014, i64 0, i64 0, !dbg !1965
  store { i8*, i64 }* %cast.3526, { i8*, i64 }** %field.806, align 8, !dbg !1965
  %field.807 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.136, i64 0, i32 1, !dbg !1965
  store i64 2, i64* %field.807, align 8, !dbg !1965
  %field.808 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.136, i64 0, i32 2, !dbg !1965
  store i64 2, i64* %field.808, align 8, !dbg !1965
  %call.219 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.136)
          to label %cont.268 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1965

cont.268:                                         ; preds = %else.336
  %call.219.fca.0.extract = extractvalue { i64, i64 } %call.219, 0, !dbg !1965
  %call.219.fca.1.extract = extractvalue { i64, i64 } %call.219, 1, !dbg !1965
  call void @llvm.dbg.value(metadata i64 %call.219.fca.0.extract, metadata !1966, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1967
  call void @llvm.dbg.value(metadata i64 %call.219.fca.1.extract, metadata !1966, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1967
  %.ld.284 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1968
  %call.220 = invoke { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* %.ld.284, i64 %call.219.fca.0.extract, i64 %call.219.fca.1.extract)
          to label %cont.269 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1970

cont.269:                                         ; preds = %cont.268
  %call.220.fca.0.extract = extractvalue { i64, i64 } %call.220, 0, !dbg !1970
  call void @llvm.dbg.value(metadata i64 %call.220.fca.0.extract, metadata !1971, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1972
  %icmp.437 = icmp eq i64 %call.220.fca.0.extract, 0, !dbg !1973
  br i1 %icmp.437, label %else.337, label %then.337

then.337:                                         ; preds = %cont.269
  %call.220.fca.1.extract = extractvalue { i64, i64 } %call.220, 1, !dbg !1970
  call void @llvm.dbg.value(metadata i64 %call.220.fca.1.extract, metadata !1971, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1972
  call void @llvm.dbg.value(metadata i64 %call.220.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.220.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.337:                                         ; preds = %cont.269
  %workOutputDir24.sroa.0.0.cast.3540.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.1016 to i64*, !dbg !1974
  store i64 %call.219.fca.0.extract, i64* %workOutputDir24.sroa.0.0.cast.3540.sroa_cast, align 8, !dbg !1974
  %workOutputDir24.sroa.6.0.cast.3540.sroa_idx231 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1016, i64 0, i64 0, i32 1, !dbg !1974
  store i64 %call.219.fca.1.extract, i64* %workOutputDir24.sroa.6.0.cast.3540.sroa_idx231, align 8, !dbg !1974
  %index.171 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1016, i64 0, i64 1, !dbg !1974
  %cast.3542 = bitcast { i8*, i64 }* %index.171 to i8*, !dbg !1974
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3542, i8* align 8 bitcast ({ i8*, i64 }* @const.340 to i8*), i64 16, i1 false), !dbg !1974
  %field.810 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.137, i64 0, i32 0, !dbg !1974
  %cast.3544 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1016, i64 0, i64 0, !dbg !1974
  store { i8*, i64 }* %cast.3544, { i8*, i64 }** %field.810, align 8, !dbg !1974
  %field.811 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.137, i64 0, i32 1, !dbg !1974
  store i64 2, i64* %field.811, align 8, !dbg !1974
  %field.812 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.137, i64 0, i32 2, !dbg !1974
  store i64 2, i64* %field.812, align 8, !dbg !1974
  %call.221 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.137)
          to label %cont.270 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1974

cont.270:                                         ; preds = %else.337
  %workOutputDir24.sroa.0.0.cast.3552.sroa_cast = bitcast [3 x { i8*, i64 }]* %tmpv.1019 to i64*, !dbg !1975
  store i64 %call.219.fca.0.extract, i64* %workOutputDir24.sroa.0.0.cast.3552.sroa_cast, align 8, !dbg !1975
  %workOutputDir24.sroa.6.0.cast.3552.sroa_idx232 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1019, i64 0, i64 0, i32 1, !dbg !1975
  store i64 %call.219.fca.1.extract, i64* %workOutputDir24.sroa.6.0.cast.3552.sroa_idx232, align 8, !dbg !1975
  %index.173 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1019, i64 0, i64 1, !dbg !1975
  %cast.3554 = bitcast { i8*, i64 }* %index.173 to i8*, !dbg !1975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3554, i8* align 8 bitcast ({ i8*, i64 }* @const.340 to i8*), i64 16, i1 false), !dbg !1975
  %index.174 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1019, i64 0, i64 2, !dbg !1975
  %cast.3556 = bitcast { i8*, i64 }* %index.174 to i8*, !dbg !1975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3556, i8* align 8 bitcast ({ i8*, i64 }* @const.413 to i8*), i64 16, i1 false), !dbg !1975
  %field.813 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.138, i64 0, i32 0, !dbg !1975
  %cast.3558 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1019, i64 0, i64 0, !dbg !1975
  store { i8*, i64 }* %cast.3558, { i8*, i64 }** %field.813, align 8, !dbg !1975
  %field.814 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.138, i64 0, i32 1, !dbg !1975
  store i64 3, i64* %field.814, align 8, !dbg !1975
  %field.815 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.138, i64 0, i32 2, !dbg !1975
  store i64 3, i64* %field.815, align 8, !dbg !1975
  %call.222 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.138)
          to label %cont.271 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1975

cont.271:                                         ; preds = %cont.270
  %call.221.fca.1.extract = extractvalue { i64, i64 } %call.221, 1, !dbg !1974
  call void @llvm.dbg.value(metadata i64 %call.221.fca.1.extract, metadata !1976, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1977
  %call.221.fca.0.extract = extractvalue { i64, i64 } %call.221, 0, !dbg !1974
  call void @llvm.dbg.value(metadata i64 %call.221.fca.0.extract, metadata !1976, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1977
  %call.222.fca.0.extract = extractvalue { i64, i64 } %call.222, 0, !dbg !1975
  %call.222.fca.1.extract = extractvalue { i64, i64 } %call.222, 1, !dbg !1975
  %sret.actual.185.sroa.0.0.cast.3560.sroa_cast = bitcast { i8*, i64 }* %aarPath to i64*
  store i64 %call.222.fca.0.extract, i64* %sret.actual.185.sroa.0.0.cast.3560.sroa_cast, align 8
  %sret.actual.185.sroa.2.0.cast.3560.sroa_idx116 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %aarPath, i64 0, i32 1
  store i64 %call.222.fca.1.extract, i64* %sret.actual.185.sroa.2.0.cast.3560.sroa_idx116, align 8
  %.ld.285 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1978
  %call.223 = invoke { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* %.ld.285, i64 %call.221.fca.0.extract, i64 %call.221.fca.1.extract)
          to label %cont.272 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1980

cont.272:                                         ; preds = %cont.271
  %call.223.fca.0.extract = extractvalue { i64, i64 } %call.223, 0, !dbg !1980
  call void @llvm.dbg.value(metadata i64 %call.223.fca.0.extract, metadata !1981, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1982
  %icmp.438 = icmp eq i64 %call.223.fca.0.extract, 0, !dbg !1983
  br i1 %icmp.438, label %else.338, label %then.338

then.338:                                         ; preds = %cont.272
  %call.223.fca.1.extract = extractvalue { i64, i64 } %call.223, 1, !dbg !1980
  call void @llvm.dbg.value(metadata i64 %call.223.fca.1.extract, metadata !1981, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1982
  call void @llvm.dbg.value(metadata i64 %call.223.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.223.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.338:                                         ; preds = %cont.272
  %tmpv.1022.sroa.0.0.cast.3575.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %androidArchs, i64 0, i32 0
  %tmpv.1022.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1022.sroa.0.0.cast.3575.sroa_idx, align 8
  %tmpv.1022.sroa.2.0.copyload = load i64, i64* %field.698, align 8
  %icmp.4541022 = icmp sgt i64 %tmpv.1022.sroa.2.0.copyload, 0, !dbg !1984
  br i1 %icmp.4541022, label %then.348.lr.ph, label %else.338.else.348_crit_edge

else.338.else.348_crit_edge:                      ; preds = %else.338
  %.pre1110 = bitcast i8* %call.148 to i64*, !dbg !1986
  %.pre1111 = getelementptr inbounds i8, i8* %call.148, i64 8, !dbg !1986
  %.pre1112 = bitcast i8* %.pre1111 to i64*, !dbg !1986
  br label %else.348

then.348.lr.ph:                                   ; preds = %else.338
  %139 = bitcast %IPST.3* %env38 to i8*
  %tmpv.1026.sroa.0.0.cast.3586.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.187 to i8*
  %tmpv.1026.sroa.3.0.cast.3586.sroa_idx91 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.187, i64 0, i32 1
  %tmpv.1026.sroa.3.0.cast.3586.sroa_cast = bitcast %error.0* %tmpv.1026.sroa.3.0.cast.3586.sroa_idx91 to i64*
  %tmpv.1026.sroa.4.0.cast.3586.sroa_idx93 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.187, i64 0, i32 1, i32 1
  %tmpv.1026.sroa.4.0.cast.3586.sroa_cast = bitcast i8** %tmpv.1026.sroa.4.0.cast.3586.sroa_idx93 to i64*
  %cast.3607 = bitcast %IPST.3* %tmpv.1032 to i8*
  %field.823 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1032, i64 0, i32 1
  %cast.3609 = bitcast [4 x { i8*, i64 }]* %tmp.139 to i8*
  %gopathDir22.sroa.0.0.cast.3611.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.139, i64 0, i64 1
  %gopathDir22.sroa.0.0.cast.3611.sroa_cast = bitcast { i8*, i64 }* %gopathDir22.sroa.0.0.cast.3611.sroa_idx to i64*
  %gopathDir22.sroa.4.0.cast.3611.sroa_idx254 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.139, i64 0, i64 1, i32 1
  %index.177 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.139, i64 0, i64 2
  %cast.3613 = bitcast { i8*, i64 }* %index.177 to i8*
  %tmpv.1029.sroa.0.0.cast.3615.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.139, i64 0, i64 3
  %tmpv.1029.sroa.0.0.cast.3615.sroa_cast = bitcast { i8*, i64 }* %tmpv.1029.sroa.0.0.cast.3615.sroa_idx to i64*
  %tmpv.1029.sroa.2.0.cast.3615.sroa_idx78 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.139, i64 0, i64 3, i32 1
  %sret.actual.189.sroa.0.0.cast.3619.sroa_cast = bitcast { i8*, i64 }* %tmpv.1034 to i64*
  %sret.actual.189.sroa.2.0.cast.3619.sroa_idx75 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1034, i64 0, i32 1
  %field.824 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1032, i64 0, i32 2
  %cast.3621 = bitcast %IPST.3* %tmpv.1032 to %IPST.4*
  %tmpv.1039.sroa.0.0.cast.3629.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1032, i64 0, i32 0
  %tmpv.1039.sroa.0.0.cast.3626.sroa_idx = bitcast %IPST.4* %sret.actual.190 to { i8*, i64 }**
  %140 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.190, i64 0, i32 1
  %141 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.190, i64 0, i32 2
  %cast.3635 = bitcast { i8*, i64 }* %tmpv.1034 to i8*
  %cast.3646 = bitcast [3 x { i8*, i64 }]* %tmp.141 to i8*
  %tmpv.1044.sroa.0.0.cast.3648.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.141, i64 0, i64 1
  %tmpv.1044.sroa.0.0.cast.3648.sroa_cast = bitcast { i8*, i64 }* %tmpv.1044.sroa.0.0.cast.3648.sroa_idx to i64*
  %tmpv.1044.sroa.2.0.cast.3648.sroa_idx61 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.141, i64 0, i64 1, i32 1
  %index.181 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.141, i64 0, i64 2
  %cast.3650 = bitcast { i8*, i64 }* %index.181 to i8*
  %androidDir.sroa.0.0.cast.3656.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.1048 to i64*
  %androidDir.sroa.6.0.cast.3656.sroa_idx250 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1048, i64 0, i64 0, i32 1
  %tmpv.1047.sroa.0.0.cast.3658.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1048, i64 0, i64 1
  %tmpv.1047.sroa.0.0.cast.3658.sroa_cast = bitcast { i8*, i64 }* %tmpv.1047.sroa.0.0.cast.3658.sroa_idx to i64*
  %tmpv.1047.sroa.2.0.cast.3658.sroa_idx59 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1048, i64 0, i64 1, i32 1
  %field.835 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.142, i64 0, i32 0
  %cast.3660 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1048, i64 0, i64 0
  %field.836 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.142, i64 0, i32 1
  %field.837 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.142, i64 0, i32 2
  %mainPath23.sroa.0.0.cast.3664.sroa_cast = bitcast [1 x { i8*, i64 }]* %tmpv.1050 to i64*
  %mainPath23.sroa.5.0.cast.3664.sroa_idx245 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.1050, i64 0, i64 0, i32 1
  %cast.3666 = bitcast [1 x { i8*, i64 }]* %tmpv.1051 to i8*
  %cast.3672 = bitcast [2 x { i8*, i64 }]* %tmp.143 to i8*
  %tmpv.1049.sroa.0.0.cast.3674.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.143, i64 0, i64 1
  %tmpv.1049.sroa.0.0.cast.3674.sroa_cast = bitcast { i8*, i64 }* %tmpv.1049.sroa.0.0.cast.3674.sroa_idx to i64*
  %tmpv.1049.sroa.2.0.cast.3674.sroa_idx57 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.143, i64 0, i64 1, i32 1
  %cast.3680 = bitcast [2 x { i8*, i64 }]* %tmpv.1055 to i8*
  %tmpv.1054.sroa.0.0.cast.3682.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1055, i64 0, i64 1
  %tmpv.1054.sroa.0.0.cast.3682.sroa_cast = bitcast { i8*, i64 }* %tmpv.1054.sroa.0.0.cast.3682.sroa_idx to i64*
  %tmpv.1054.sroa.2.0.cast.3682.sroa_idx55 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1055, i64 0, i64 1, i32 1
  %field.838 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.144, i64 0, i32 0
  %cast.3684 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.1050, i64 0, i64 0
  %field.839 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.144, i64 0, i32 1
  %field.840 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.144, i64 0, i32 2
  %field.841 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.145, i64 0, i32 0
  %cast.3685 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.1051, i64 0, i64 0
  %field.842 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.145, i64 0, i32 1
  %field.843 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.145, i64 0, i32 2
  %field.844 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.146, i64 0, i32 0
  %cast.3688 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1055, i64 0, i64 0
  %field.845 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.146, i64 0, i32 1
  %field.846 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.146, i64 0, i32 2
  %field0.161 = bitcast i8* %call.149 to i64*
  %field1.161 = getelementptr inbounds i8, i8* %call.149, i64 8
  %142 = bitcast i8* %field1.161 to i64*
  %field0.162 = bitcast i8* %call.148 to i64*
  %field1.162 = getelementptr inbounds i8, i8* %call.148, i64 8
  %143 = bitcast i8* %field1.162 to i64*
  %env381123 = bitcast %IPST.3* %env38 to i8*
  br label %fallthrough.339

fallthrough.339:                                  ; preds = %then.348.lr.ph, %else.347
  %tmpv.1038.sroa.3.01029 = phi i64 [ undef, %then.348.lr.ph ], [ %tmpv.1038.sroa.3.1, %else.347 ]
  %tmpv.1038.sroa.2.01028 = phi i64 [ undef, %then.348.lr.ph ], [ %tmpv.1038.sroa.2.1, %else.347 ]
  %tmpv.1038.sroa.0.01027 = phi { i8*, i64 }* [ undef, %then.348.lr.ph ], [ %tmpv.1038.sroa.0.1, %else.347 ]
  %tmpv.1043.01026 = phi { i8*, i64 }* [ undef, %then.348.lr.ph ], [ %tmpv.1043.1, %else.347 ]
  %tmpv.1042.01025 = phi i64 [ undef, %then.348.lr.ph ], [ %tmpv.1042.1, %else.347 ]
  %tmpv.1020.01023 = phi i64 [ 0, %then.348.lr.ph ], [ %add.49, %else.347 ]
  %ptroff.49.phi.trans.insert = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1022.sroa.0.0.copyload, i64 %tmpv.1020.01023
  %tmpv.1021.sroa.0.0.cast.3577.sroa_cast.phi.trans.insert = bitcast { i8*, i64 }* %ptroff.49.phi.trans.insert to i64*
  %tmpv.1021.sroa.0.0.copyload109.pre = load i64, i64* %tmpv.1021.sroa.0.0.cast.3577.sroa_cast.phi.trans.insert, align 8, !dbg !1984
  %tmpv.1021.sroa.3.0.cast.3577.sroa_idx110.phi.trans.insert = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1022.sroa.0.0.copyload, i64 %tmpv.1020.01023, i32 1
  %tmpv.1021.sroa.3.0.copyload111.pre = load i64, i64* %tmpv.1021.sroa.3.0.cast.3577.sroa_idx110.phi.trans.insert, align 8, !dbg !1984
  %.ld.287.pre = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1988
  call void @llvm.dbg.value(metadata i64 %tmpv.1021.sroa.0.0.copyload109.pre, metadata !1990, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1991
  call void @llvm.dbg.value(metadata i64 %tmpv.1021.sroa.3.0.copyload111.pre, metadata !1990, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1991
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139)
  invoke void @command_line_arguments.AndroidEnv({ %IPST.3, %error.0 }* nonnull sret %sret.actual.187, i8* nest undef, %Flags.0* %.ld.287.pre, i64 %tmpv.1021.sroa.0.0.copyload109.pre, i64 %tmpv.1021.sroa.3.0.copyload111.pre)
          to label %cont.274 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1992

cont.274:                                         ; preds = %fallthrough.339
  %tmpv.1026.sroa.3.0.copyload92 = load i64, i64* %tmpv.1026.sroa.3.0.cast.3586.sroa_cast, align 8, !dbg !1992
  %tmpv.1026.sroa.4.0.copyload94 = load i64, i64* %tmpv.1026.sroa.4.0.cast.3586.sroa_cast, align 8, !dbg !1992
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env381123, i8* nonnull align 8 %tmpv.1026.sroa.0.0.cast.3586.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.1026.sroa.3.0.copyload92, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %tmpv.1026.sroa.4.0.copyload94, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  %icmp.441 = icmp eq i64 %tmpv.1026.sroa.3.0.copyload92, 0, !dbg !1995
  br i1 %icmp.441, label %else.340, label %finally.2

else.340:                                         ; preds = %cont.274
  %.ld.288 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !1996
  %call.224 = invoke { i64, i64 } @command_line_arguments.GoEnv(i8* nest undef, %Flags.0* %.ld.288, i64 ptrtoint ([7 x i8]* @const.414 to i64), i64 6)
          to label %cont.275 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1997

cont.275:                                         ; preds = %else.340
  %call.224.fca.0.extract = extractvalue { i64, i64 } %call.224, 0, !dbg !1997
  %call.224.fca.1.extract = extractvalue { i64, i64 } %call.224, 1, !dbg !1997
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3607, i8* nonnull align 8 %139, i64 24, i1 false)
  %tmpv.1032.field.ld.0 = load i64, i64* %field.823, align 8, !dbg !1998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3609, i8* align 8 bitcast ({ i8*, i64 }* @const.417 to i8*), i64 16, i1 false), !dbg !1999
  store i64 %call.195.fca.0.extract, i64* %gopathDir22.sroa.0.0.cast.3611.sroa_cast, align 8, !dbg !1999
  store i64 %call.195.fca.1.extract, i64* %gopathDir22.sroa.4.0.cast.3611.sroa_idx254, align 8, !dbg !1999
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3613, i8* align 8 bitcast ({ i8*, i64 }* @const.419 to i8*), i64 16, i1 false), !dbg !1999
  store i64 %call.224.fca.0.extract, i64* %tmpv.1029.sroa.0.0.cast.3615.sroa_cast, align 8, !dbg !1999
  store i64 %call.224.fca.1.extract, i64* %tmpv.1029.sroa.2.0.cast.3615.sroa_idx78, align 8, !dbg !1999
  %call.225 = invoke { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.139)
          to label %cont.276 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1999

cont.276:                                         ; preds = %cont.275
  %call.225.fca.0.extract = extractvalue { i64, i64 } %call.225, 0, !dbg !1999
  %call.225.fca.1.extract = extractvalue { i64, i64 } %call.225, 1, !dbg !1999
  store i64 %call.225.fca.0.extract, i64* %sret.actual.189.sroa.0.0.cast.3619.sroa_cast, align 8
  store i64 %call.225.fca.1.extract, i64* %sret.actual.189.sroa.2.0.cast.3619.sroa_idx75, align 8
  %add.47 = add i64 %tmpv.1032.field.ld.0, 1, !dbg !1998
  %tmpv.1032.field.ld.1 = load i64, i64* %field.824, align 8, !dbg !1998
  %icmp.442 = icmp ugt i64 %add.47, %tmpv.1032.field.ld.1, !dbg !1998
  br i1 %icmp.442, label %then.341, label %else.341

then.341:                                         ; preds = %cont.276
  invoke void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.190, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3621, i64 %add.47)
          to label %cont.277 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1998

fallthrough.341:                                  ; preds = %else.342, %then.342, %cont.277
  %tmpv.1038.sroa.0.1 = phi { i8*, i64 }* [ %tmpv.1038.sroa.0.01027, %cont.277 ], [ %tmpv.1038.sroa.0.01027, %then.342 ], [ %tmpv.1032.field.ld.3, %else.342 ]
  %tmpv.1038.sroa.2.1 = phi i64 [ %tmpv.1038.sroa.2.01028, %cont.277 ], [ %tmpv.1038.sroa.2.01028, %then.342 ], [ %add.47, %else.342 ]
  %tmpv.1038.sroa.3.1 = phi i64 [ %tmpv.1038.sroa.3.01029, %cont.277 ], [ %tmpv.1038.sroa.3.01029, %then.342 ], [ %tmpv.1032.field.ld.1, %else.342 ]
  %tmpv.1039.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1039.sroa.0.0.copyload, %cont.277 ], [ %tmpv.1038.sroa.0.01027, %then.342 ], [ %tmpv.1032.field.ld.3, %else.342 ]
  %tmpv.1039.sroa.3.0 = phi i64 [ %tmpv.1039.sroa.3.0.copyload, %cont.277 ], [ %tmpv.1038.sroa.2.01028, %then.342 ], [ %add.47, %else.342 ]
  %tmpv.1039.sroa.4.0 = phi i64 [ %tmpv.1039.sroa.4.0.copyload, %cont.277 ], [ %tmpv.1038.sroa.3.01029, %then.342 ], [ %tmpv.1032.field.ld.1, %else.342 ]
  store { i8*, i64 }* %tmpv.1039.sroa.0.0, { i8*, i64 }** %tmpv.1039.sroa.0.0.cast.3629.sroa_idx, align 8, !dbg !1998
  store i64 %tmpv.1039.sroa.3.0, i64* %field.823, align 8, !dbg !1998
  store i64 %tmpv.1039.sroa.4.0, i64* %field.824, align 8, !dbg !1998
  %icmp.449 = icmp sge i64 %tmpv.1032.field.ld.0, %tmpv.1039.sroa.3.0, !dbg !1998
  %144 = icmp slt i64 %tmpv.1032.field.ld.0, 0, !dbg !1998
  %ior.242 = or i1 %144, %icmp.449, !dbg !1998
  br i1 %ior.242, label %then.344, label %fallthrough.344

else.341:                                         ; preds = %cont.276
  %icmp.444 = icmp sgt i64 %add.47, %tmpv.1032.field.ld.1, !dbg !1998
  %add.47.lobit972 = or i64 %tmpv.1032.field.ld.1, %add.47, !dbg !1998
  %145 = icmp slt i64 %add.47.lobit972, 0, !dbg !1998
  %146 = or i1 %icmp.444, %145, !dbg !1998
  br i1 %146, label %then.342, label %else.342

cont.277:                                         ; preds = %then.341
  %tmpv.1039.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1039.sroa.0.0.cast.3626.sroa_idx, align 8
  %tmpv.1039.sroa.3.0.copyload = load i64, i64* %140, align 8
  %tmpv.1039.sroa.4.0.copyload = load i64, i64* %141, align 8
  br label %fallthrough.341

then.342:                                         ; preds = %else.341
  invoke void @__go_runtime_error(i8* nest undef, i32 3)
          to label %fallthrough.341 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1998

else.342:                                         ; preds = %else.341
  %tmpv.1032.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1039.sroa.0.0.cast.3629.sroa_idx, align 8, !dbg !1998
  br label %fallthrough.341

then.344:                                         ; preds = %fallthrough.341
  invoke void @__go_runtime_error(i8* nest undef, i32 0)
          to label %fallthrough.344 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1998

fallthrough.344:                                  ; preds = %fallthrough.341, %then.344
  %tmpv.1042.1 = phi i64 [ %tmpv.1042.01025, %then.344 ], [ %tmpv.1032.field.ld.0, %fallthrough.341 ]
  %ptroff.51 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1039.sroa.0.0, i64 %tmpv.1042.1, !dbg !1998
  %runtime.writeBarrier.ld.38 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1998
  %icmp.452 = icmp eq i32 %runtime.writeBarrier.ld.38, 0, !dbg !1998
  br i1 %icmp.452, label %then.345, label %else.345

then.345:                                         ; preds = %fallthrough.344
  %icmp.451 = icmp eq { i8*, i64 }* %ptroff.51, null, !dbg !1998
  br i1 %icmp.451, label %then.346, label %fallthrough.346

fallthrough.345:                                  ; preds = %else.345, %fallthrough.346
  %tmpv.1043.1 = phi { i8*, i64 }* [ %tmpv.1043.2, %fallthrough.346 ], [ %tmpv.1043.01026, %else.345 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* nonnull align 8 %cast.3607, i64 24, i1 false), !dbg !2000
  %call.226 = invoke { i64, i64 } @command_line_arguments.GetAndroidABI(i8* nest undef, i64 %tmpv.1021.sroa.0.0.copyload109.pre, i64 %tmpv.1021.sroa.3.0.copyload111.pre)
          to label %cont.282 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2001

else.345:                                         ; preds = %fallthrough.344
  %cast.3634 = bitcast { i8*, i64 }* %ptroff.51 to i8*, !dbg !1998
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3634, i8* nonnull %cast.3635)
          to label %fallthrough.345 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1998

then.346:                                         ; preds = %then.345
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.346 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1998

fallthrough.346:                                  ; preds = %then.345, %then.346
  %tmpv.1043.2 = phi { i8*, i64 }* [ %tmpv.1043.01026, %then.346 ], [ %ptroff.51, %then.345 ]
  %cast.3632 = bitcast { i8*, i64 }* %tmpv.1043.2 to i8*, !dbg !1998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3632, i8* nonnull align 8 %cast.3635, i64 16, i1 false), !dbg !1998
  br label %fallthrough.345

cont.282:                                         ; preds = %fallthrough.345
  %call.226.fca.0.extract = extractvalue { i64, i64 } %call.226, 0, !dbg !2001
  %call.226.fca.1.extract = extractvalue { i64, i64 } %call.226, 1, !dbg !2001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3646, i8* align 8 bitcast ({ i8*, i64 }* @const.216 to i8*), i64 16, i1 false), !dbg !2002
  store i64 %call.226.fca.0.extract, i64* %tmpv.1044.sroa.0.0.cast.3648.sroa_cast, align 8, !dbg !2002
  store i64 %call.226.fca.1.extract, i64* %tmpv.1044.sroa.2.0.cast.3648.sroa_idx61, align 8, !dbg !2002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3650, i8* align 8 bitcast ({ i8*, i64 }* @const.212 to i8*), i64 16, i1 false), !dbg !2002
  %call.227 = invoke { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.141)
          to label %cont.283 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2002

cont.283:                                         ; preds = %cont.282
  %call.227.fca.0.extract = extractvalue { i64, i64 } %call.227, 0, !dbg !2002
  %call.227.fca.1.extract = extractvalue { i64, i64 } %call.227, 1, !dbg !2002
  store i64 %call.201.fca.0.extract, i64* %androidDir.sroa.0.0.cast.3656.sroa_cast, align 8, !dbg !2003
  store i64 %call.201.fca.1.extract, i64* %androidDir.sroa.6.0.cast.3656.sroa_idx250, align 8, !dbg !2003
  store i64 %call.227.fca.0.extract, i64* %tmpv.1047.sroa.0.0.cast.3658.sroa_cast, align 8, !dbg !2003
  store i64 %call.227.fca.1.extract, i64* %tmpv.1047.sroa.2.0.cast.3658.sroa_idx59, align 8, !dbg !2003
  store { i8*, i64 }* %cast.3660, { i8*, i64 }** %field.835, align 8, !dbg !2003
  store i64 2, i64* %field.836, align 8, !dbg !2003
  store i64 2, i64* %field.837, align 8, !dbg !2003
  %call.228 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.142)
          to label %cont.284 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2003

cont.284:                                         ; preds = %cont.283
  %call.228.fca.0.extract = extractvalue { i64, i64 } %call.228, 0, !dbg !2003
  %call.228.fca.1.extract = extractvalue { i64, i64 } %call.228, 1, !dbg !2003
  store i64 %call.202.fca.0.extract, i64* %mainPath23.sroa.0.0.cast.3664.sroa_cast, align 8, !dbg !2004
  store i64 %call.202.fca.1.extract, i64* %mainPath23.sroa.5.0.cast.3664.sroa_idx245, align 8, !dbg !2004
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3666, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.420 to i8*), i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3672, i8* align 8 bitcast ({ i8*, i64 }* @const.422 to i8*), i64 16, i1 false), !dbg !2005
  store i64 %call.228.fca.0.extract, i64* %tmpv.1049.sroa.0.0.cast.3674.sroa_cast, align 8, !dbg !2005
  store i64 %call.228.fca.1.extract, i64* %tmpv.1049.sroa.2.0.cast.3674.sroa_idx57, align 8, !dbg !2005
  %call.229 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.143)
          to label %cont.285 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2005

cont.285:                                         ; preds = %cont.284
  %call.229.fca.0.extract = extractvalue { i64, i64 } %call.229, 0, !dbg !2005
  %call.229.fca.1.extract = extractvalue { i64, i64 } %call.229, 1, !dbg !2005
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3680, i8* align 8 bitcast ({ i8*, i64 }* @const.424 to i8*), i64 16, i1 false), !dbg !2006
  store i64 %call.229.fca.0.extract, i64* %tmpv.1054.sroa.0.0.cast.3682.sroa_cast, align 8, !dbg !2006
  store i64 %call.229.fca.1.extract, i64* %tmpv.1054.sroa.2.0.cast.3682.sroa_idx55, align 8, !dbg !2006
  %.ld.298 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !2007
  store { i8*, i64 }* %cast.3684, { i8*, i64 }** %field.838, align 8, !dbg !2004
  store i64 1, i64* %field.839, align 8, !dbg !2004
  store i64 1, i64* %field.840, align 8, !dbg !2004
  store { i8*, i64 }* %cast.3685, { i8*, i64 }** %field.841, align 8, !dbg !2008
  store i64 1, i64* %field.842, align 8, !dbg !2008
  store i64 1, i64* %field.843, align 8, !dbg !2008
  store { i8*, i64 }* %cast.3688, { i8*, i64 }** %field.844, align 8, !dbg !2006
  store i64 2, i64* %field.845, align 8, !dbg !2006
  store i64 2, i64* %field.846, align 8, !dbg !2006
  %ld.375 = load i64, i64* %field0.161, align 8, !dbg !2006
  %ld.376 = load i64, i64* %142, align 8, !dbg !2006
  %ld.377 = load i64, i64* %field0.162, align 8, !dbg !2006
  %ld.378 = load i64, i64* %143, align 8, !dbg !2006
  %call.230 = invoke { i64, i64 } @command_line_arguments.GoBuild(i8* nest undef, %Flags.0* %.ld.298, %IPST.3* byval nonnull %tmp.144, %IPST.3* byval nonnull %env38, %IPST.3* byval nonnull %tmp.145, i64 %ld.375, i64 %ld.376, i64 %ld.377, i64 %ld.378, %IPST.3* byval nonnull %tmp.146)
          to label %cont.286 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2006

cont.286:                                         ; preds = %cont.285
  %call.230.fca.0.extract = extractvalue { i64, i64 } %call.230, 0, !dbg !2006
  call void @llvm.dbg.value(metadata i64 %call.230.fca.0.extract, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1994
  %icmp.453 = icmp eq i64 %call.230.fca.0.extract, 0, !dbg !2009
  br i1 %icmp.453, label %else.347, label %then.347

then.347:                                         ; preds = %cont.286
  %call.230.fca.1.extract = extractvalue { i64, i64 } %call.230, 1, !dbg !2006
  call void @llvm.dbg.value(metadata i64 %call.230.fca.1.extract, metadata !1993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1994
  call void @llvm.dbg.value(metadata i64 %call.230.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.230.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.347:                                         ; preds = %cont.286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139)
  %add.49 = add nuw nsw i64 %tmpv.1020.01023, 1, !dbg !1984
  %icmp.454 = icmp slt i64 %add.49, %tmpv.1022.sroa.2.0.copyload, !dbg !1984
  br i1 %icmp.454, label %fallthrough.339, label %else.348

else.348:                                         ; preds = %else.347, %else.338.else.348_crit_edge
  %.pre-phi = phi i64* [ %.pre1112, %else.338.else.348_crit_edge ], [ %143, %else.347 ], !dbg !1986
  %field0.164.pre-phi = phi i64* [ %.pre1110, %else.338.else.348_crit_edge ], [ %field0.162, %else.347 ], !dbg !1986
  %.ld.299 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !2010
  %ld.382 = load i64, i64* %field0.164.pre-phi, align 8, !dbg !1986
  %ld.383 = load i64, i64* %.pre-phi, align 8, !dbg !1986
  %call.231 = invoke { i64, i64 } @command_line_arguments.BuildAAR(i8* nest undef, %Flags.0* %.ld.299, i64 %call.201.fca.0.extract, i64 %call.201.fca.1.extract, %IPST.9* byval nonnull %pkgs, %IPST.3* byval nonnull %androidArchs, i64 %ld.382, i64 %ld.383, { i8*, i64 }* byval nonnull %aarPath)
          to label %cont.287 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1986

cont.287:                                         ; preds = %else.348
  %call.231.fca.0.extract = extractvalue { i64, i64 } %call.231, 0, !dbg !1986
  call void @llvm.dbg.value(metadata i64 %call.231.fca.0.extract, metadata !2011, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2012
  %icmp.455 = icmp eq i64 %call.231.fca.0.extract, 0, !dbg !2013
  br i1 %icmp.455, label %else.349, label %then.349

then.349:                                         ; preds = %cont.287
  %call.231.fca.1.extract = extractvalue { i64, i64 } %call.231, 1, !dbg !1986
  call void @llvm.dbg.value(metadata i64 %call.231.fca.1.extract, metadata !2011, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2012
  call void @llvm.dbg.value(metadata i64 %call.231.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.231.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.349:                                         ; preds = %cont.287
  %.ld.300 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !2014
  %icmp.456 = icmp eq %Flags.0* %.ld.300, null, !dbg !2015
  br i1 %icmp.456, label %then.350, label %fallthrough.350

then.350:                                         ; preds = %else.349
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.350 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2015

fallthrough.350:                                  ; preds = %else.349, %then.350
  %outputDir25.sroa.0.0.cast.3709.sroa_idx = getelementptr inbounds %Flags.0, %Flags.0* %.ld.300, i64 0, i32 9
  %outputDir25.sroa.0.0.cast.3709.sroa_cast = bitcast { i8*, i64 }* %outputDir25.sroa.0.0.cast.3709.sroa_idx to i64*
  %outputDir25.sroa.0.0.copyload = load i64, i64* %outputDir25.sroa.0.0.cast.3709.sroa_cast, align 8
  call void @llvm.dbg.value(metadata i64 %outputDir25.sroa.0.0.copyload, metadata !2016, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2017
  %outputDir25.sroa.6.0.cast.3709.sroa_idx222 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.300, i64 0, i32 9, i32 1
  %outputDir25.sroa.6.0.copyload = load i64, i64* %outputDir25.sroa.6.0.cast.3709.sroa_idx222, align 8
  call void @llvm.dbg.value(metadata i64 %outputDir25.sroa.6.0.copyload, metadata !2016, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2017
  %call.232 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %outputDir25.sroa.0.0.copyload, i64 %outputDir25.sroa.6.0.copyload, i64 0, i64 0)
          to label %cont.289 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2018

cont.289:                                         ; preds = %fallthrough.350
  %icmp.457 = icmp eq i8 %call.232, 1, !dbg !2018
  %spec.select979 = select i1 %icmp.457, i64 10, i64 %outputDir25.sroa.6.0.copyload
  %spec.select980 = select i1 %icmp.457, i64 ptrtoint ([11 x i8]* @const.382 to i64), i64 %outputDir25.sroa.0.0.copyload
  call void @llvm.dbg.value(metadata i64 %spec.select980, metadata !2016, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2017
  call void @llvm.dbg.value(metadata i64 %spec.select979, metadata !2016, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2017
  %outputDir25.sroa.0.0.cast.3718.sroa_cast = bitcast [3 x { i8*, i64 }]* %tmpv.1060 to i64*, !dbg !2019
  store i64 %spec.select980, i64* %outputDir25.sroa.0.0.cast.3718.sroa_cast, align 8, !dbg !2019
  %outputDir25.sroa.6.0.cast.3718.sroa_idx224 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1060, i64 0, i64 0, i32 1, !dbg !2019
  store i64 %spec.select979, i64* %outputDir25.sroa.6.0.cast.3718.sroa_idx224, align 8, !dbg !2019
  %index.190 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1060, i64 0, i64 1, !dbg !2019
  %cast.3720 = bitcast { i8*, i64 }* %index.190 to i8*, !dbg !2019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3720, i8* align 8 bitcast ({ i8*, i64 }* @const.295 to i8*), i64 16, i1 false), !dbg !2019
  %index.191 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1060, i64 0, i64 2, !dbg !2019
  %cast.3722 = bitcast { i8*, i64 }* %index.191 to i8*, !dbg !2019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3722, i8* align 8 bitcast ({ i8*, i64 }* @const.413 to i8*), i64 16, i1 false), !dbg !2019
  %field.850 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.147, i64 0, i32 0, !dbg !2019
  %cast.3724 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1060, i64 0, i64 0, !dbg !2019
  store { i8*, i64 }* %cast.3724, { i8*, i64 }** %field.850, align 8, !dbg !2019
  %field.851 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.147, i64 0, i32 1, !dbg !2019
  store i64 3, i64* %field.851, align 8, !dbg !2019
  %field.852 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.147, i64 0, i32 2, !dbg !2019
  store i64 3, i64* %field.852, align 8, !dbg !2019
  %call.233 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.147)
          to label %cont.290 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2019

cont.290:                                         ; preds = %cont.289
  %call.233.fca.0.extract = extractvalue { i64, i64 } %call.233, 0, !dbg !2019
  %call.233.fca.1.extract = extractvalue { i64, i64 } %call.233, 1, !dbg !2019
  %.ld.302 = load %Flags.0*, %Flags.0** %cast.2262, align 8, !dbg !2021
  %call.234 = invoke { i64, i64 } @command_line_arguments.CopyFile(i8* nest undef, %Flags.0* %.ld.302, i64 %call.233.fca.0.extract, i64 %call.233.fca.1.extract, i64 %call.222.fca.0.extract, i64 %call.222.fca.1.extract)
          to label %cont.291 unwind label %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !2022

cont.291:                                         ; preds = %cont.290
  %call.234.fca.0.extract = extractvalue { i64, i64 } %call.234, 0, !dbg !2022
  call void @llvm.dbg.value(metadata i64 %call.234.fca.0.extract, metadata !2023, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2024
  %icmp.458 = icmp eq i64 %call.234.fca.0.extract, 0, !dbg !2025
  br i1 %icmp.458, label %else.352, label %then.352

then.352:                                         ; preds = %cont.291
  %call.234.fca.1.extract = extractvalue { i64, i64 } %call.234, 1, !dbg !2022
  call void @llvm.dbg.value(metadata i64 %call.234.fca.1.extract, metadata !2023, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2024
  call void @llvm.dbg.value(metadata i64 %call.234.fca.0.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1593
  call void @llvm.dbg.value(metadata i64 %call.234.fca.1.extract, metadata !1592, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1593
  br label %finally.2

else.352:                                         ; preds = %cont.291
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107)
  br label %finally.2

catchpad.2:                                       ; preds = %pad.4.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.2 = landingpad { i8*, i32 }
          cleanup
  %ex2.2.fca.0.extract = extractvalue { i8*, i32 } %ex2.2, 0
  %ex2.2.fca.1.extract = extractvalue { i8*, i32 } %ex2.2, 1
  br label %finally.2

pad.5:                                            ; preds = %finish.2
  %ex.5 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.546), !dbg !1594
  br label %finish.2

finish.2:                                         ; preds = %pad.5, %finally.2
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.546)
          to label %cont.293 unwind label %pad.5, !dbg !1594

cont.293:                                         ; preds = %finish.2
  %icmp.459 = icmp eq i8 %finvar.2.0, 1
  br i1 %icmp.459, label %finret.2, label %finres.2

finres.2:                                         ; preds = %cont.293
  %excv.2.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.2.sroa.0.0, 0
  %excv.2.fca.1.insert = insertvalue { i8*, i32 } %excv.2.fca.0.insert, i32 %ehtmp.2.sroa.2.0, 1
  resume { i8*, i32 } %excv.2.fca.1.insert

finret.2:                                         ; preds = %cont.293
  %ld.260.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret34.sroa.0.1", 0, !dbg !2026
  %ld.260.fca.1.insert = insertvalue { i64, i64 } %ld.260.fca.0.insert, i64 %"$ret34.sroa.39.1", 1, !dbg !2026
  ret { i64, i64 } %ld.260.fca.1.insert, !dbg !2026
}

define internal fastcc { i64, i64 } @command_line_arguments.validateGoInstall(%Flags.0* %f) unnamed_addr #0 !dbg !2027 {
entry:
  %tmp.276.i = alloca { i8*, i64, i64 }, align 8
  %tmp.275.i = alloca { i8*, i64, i64 }, align 8
  %tmp.274.i = alloca { i8*, i64, i64 }, align 8
  %ver.i = alloca { i8*, i64, i64 }, align 8
  %sret.actual.340.i = alloca { { i8*, i64 }, %error.0 }, align 8
  %sret.actual.342.i = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %tmpv.17692.i = alloca [16 x i8], align 1
  %tmpv.17714.i = alloca [16 x i8], align 1
  %tmpv.17743.i = alloca [16 x i8], align 1
  %tmp.273 = alloca %IPST.2, align 8
  %tmpv.1759 = alloca { i8*, i64 }, align 8
  %tmpv.1760 = alloca [1 x %IPST.16], align 8
  %sret.actual.339 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2028, metadata !DIExpression()), !dbg !2029
  %0 = bitcast { i8*, i64, i64 }* %tmp.276.i to i8*, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0), !dbg !2030
  %1 = bitcast { i8*, i64, i64 }* %tmp.275.i to i8*, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1), !dbg !2030
  %2 = bitcast { i8*, i64, i64 }* %tmp.274.i to i8*, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2), !dbg !2030
  %3 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.340.i to i8*, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3), !dbg !2030
  %4 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.342.i to i8*, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4), !dbg !2030
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %tmpv.17692.i, i64 0, i64 0, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5), !dbg !2030
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %tmpv.17714.i, i64 0, i64 0, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6), !dbg !2030
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %tmpv.17743.i, i64 0, i64 0, !dbg !2030
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7), !dbg !2030
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2034, metadata !DIExpression()), !dbg !2030
  %8 = bitcast { i8*, i64, i64 }* %ver.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  call void @command_line_arguments.LookPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.340.i, i8* nest undef, %Flags.0* %f, i64 ptrtoint ([3 x i8]* @const.554 to i64), i64 2), !dbg !2035
  %tmpv.1761.sroa.3.0.cast.6417.sroa_idx16.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.340.i, i64 0, i32 1, i32 0, !dbg !2035
  %tmpv.1761.sroa.3.0.copyload17.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1761.sroa.3.0.cast.6417.sroa_idx16.i, align 8, !dbg !2035
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1761.sroa.3.0.copyload17.i, metadata !2038, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2039
  call void @llvm.dbg.value(metadata { { i8*, i64 }, %error.0 }* %sret.actual.340.i, metadata !2038, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !2039
  %icmp.707.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1761.sroa.3.0.copyload17.i, null, !dbg !2040
  br i1 %icmp.707.i, label %else.589.i, label %then.589.i

then.589.i:                                       ; preds = %entry
  %call.406.i = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([27 x i8]* @const.556 to i64), i64 26, %IPST.2* byval nonnull @const.11), !dbg !2041
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !2042
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !2042
  br label %command_line_arguments._validateGoInstall.exit, !dbg !2042

else.589.i:                                       ; preds = %entry
  call void @command_line_arguments.GoVersion({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.342.i, i8* nest undef, %Flags.0* %f), !dbg !2043
  %tmpv.1766.sroa.3.0.cast.6438.sroa_idx37.i = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.342.i, i64 0, i32 1, i32 0, !dbg !2043
  %tmpv.1766.sroa.3.0.copyload38.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1766.sroa.3.0.cast.6438.sroa_idx37.i, align 8, !dbg !2043
  %tmpv.1766.sroa.4.0.cast.6438.sroa_idx39.i = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.342.i, i64 0, i32 1, i32 1, !dbg !2043
  %9 = bitcast i8** %tmpv.1766.sroa.4.0.cast.6438.sroa_idx39.i to i64*, !dbg !2043
  %tmpv.1766.sroa.4.0.copyload401.i = load i64, i64* %9, align 8, !dbg !2043
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %4, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1766.sroa.3.0.copyload38.i, metadata !2044, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2045
  call void @llvm.dbg.value(metadata i8** %tmpv.1766.sroa.4.0.cast.6438.sroa_idx39.i, metadata !2044, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2045
  %icmp.708.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1766.sroa.3.0.copyload38.i, null, !dbg !2046
  br i1 %icmp.708.i, label %else.590.i, label %then.590.i

then.590.i:                                       ; preds = %else.589.i
  %10 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1766.sroa.3.0.copyload38.i to i64, !dbg !2047
  call void @llvm.dbg.value(metadata i64 %10, metadata !2048, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2049
  call void @llvm.dbg.value(metadata i64 %tmpv.1766.sroa.4.0.copyload401.i, metadata !2048, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2049
  %ld.701.fca.0.insert.i = insertvalue { i64, i64 } undef, i64 %10, 0, !dbg !2047
  %ld.701.fca.1.insert.i = insertvalue { i64, i64 } %ld.701.fca.0.insert.i, i64 %tmpv.1766.sroa.4.0.copyload401.i, 1, !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !2047
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !2047
  br label %command_line_arguments._validateGoInstall.exit, !dbg !2047

else.590.i:                                       ; preds = %else.589.i
  %call.411.i = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !2050
  %11 = and i8 %call.411.i, 1, !dbg !2051
  %trunc.594.i = icmp eq i8 %11, 0, !dbg !2051
  br i1 %trunc.594.i, label %fallthrough.591.i, label %then.591.i

then.591.i:                                       ; preds = %else.590.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @const.558, i64 0, i64 0), i64 16, i1 false)
  %field.1433.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.274.i, i64 0, i32 0, !dbg !2052
  store i8* %5, i8** %field.1433.i, align 8, !dbg !2052
  %field.1434.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.274.i, i64 0, i32 1, !dbg !2052
  store i64 16, i64* %field.1434.i, align 8, !dbg !2052
  %field.1435.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.274.i, i64 0, i32 2, !dbg !2052
  store i64 16, i64* %field.1435.i, align 8, !dbg !2052
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %ver.i, metadata !2053, metadata !DIExpression(DW_OP_deref)), !dbg !2045
  %call.407.i = call i8 @bytes.HasPrefix(i8* nest undef, { i8*, i64, i64 }* byval nonnull %ver.i, { i8*, i64, i64 }* byval nonnull %tmp.274.i), !dbg !2054
  %icmp.709.i = icmp eq i8 %call.407.i, 0, !dbg !2055
  br i1 %icmp.709.i, label %fallthrough.592.i, label %fallthrough.593.i

fallthrough.591.i:                                ; preds = %fallthrough.593.i, %else.590.i
  call void @llvm.dbg.value(metadata i64 0, metadata !2048, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2049
  call void @llvm.dbg.value(metadata i64 0, metadata !2048, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2049
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !2056
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !2056
  br label %command_line_arguments._validateGoInstall.exit, !dbg !2056

fallthrough.592.i:                                ; preds = %then.591.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @const.559, i64 0, i64 0), i64 16, i1 false)
  %field.1436.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.275.i, i64 0, i32 0, !dbg !2057
  store i8* %6, i8** %field.1436.i, align 8, !dbg !2057
  %field.1437.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.275.i, i64 0, i32 1, !dbg !2057
  store i64 16, i64* %field.1437.i, align 8, !dbg !2057
  %field.1438.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.275.i, i64 0, i32 2, !dbg !2057
  store i64 16, i64* %field.1438.i, align 8, !dbg !2057
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %ver.i, metadata !2053, metadata !DIExpression(DW_OP_deref)), !dbg !2045
  %call.408.i = call i8 @bytes.HasPrefix(i8* nest undef, { i8*, i64, i64 }* byval nonnull %ver.i, { i8*, i64, i64 }* byval nonnull %tmp.275.i), !dbg !2058
  %icmp.710.i = icmp eq i8 %call.408.i, 0, !dbg !2059
  br i1 %icmp.710.i, label %then.593.i, label %fallthrough.593.i

then.593.i:                                       ; preds = %fallthrough.592.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @const.560, i64 0, i64 0), i64 16, i1 false)
  %field.1439.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.276.i, i64 0, i32 0, !dbg !2060
  store i8* %7, i8** %field.1439.i, align 8, !dbg !2060
  %field.1440.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.276.i, i64 0, i32 1, !dbg !2060
  store i64 16, i64* %field.1440.i, align 8, !dbg !2060
  %field.1441.i = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.276.i, i64 0, i32 2, !dbg !2060
  store i64 16, i64* %field.1441.i, align 8, !dbg !2060
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %ver.i, metadata !2053, metadata !DIExpression(DW_OP_deref)), !dbg !2045
  %call.409.i = call i8 @bytes.HasPrefix(i8* nest undef, { i8*, i64, i64 }* byval nonnull %ver.i, { i8*, i64, i64 }* byval nonnull %tmp.276.i), !dbg !2061
  br label %fallthrough.593.i

fallthrough.593.i:                                ; preds = %then.593.i, %fallthrough.592.i, %then.591.i
  %tmpv.1773.0.i = phi i8 [ %call.409.i, %then.593.i ], [ %call.408.i, %fallthrough.592.i ], [ %call.407.i, %then.591.i ]
  %12 = and i8 %tmpv.1773.0.i, 1, !dbg !2062
  %trunc.593.i = icmp eq i8 %12, 0, !dbg !2062
  br i1 %trunc.593.i, label %fallthrough.591.i, label %then.594.i

then.594.i:                                       ; preds = %fallthrough.593.i
  %call.410.i = call { i64, i64 } @errors.New(i8* nest undef, i64 ptrtoint ([28 x i8]* @const.561 to i64), i64 27), !dbg !2063
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6), !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7), !dbg !2064
  br label %command_line_arguments._validateGoInstall.exit, !dbg !2064

command_line_arguments._validateGoInstall.exit:   ; preds = %then.594.i, %fallthrough.591.i, %then.590.i, %then.589.i
  %call.4041 = phi { i64, i64 } [ %call.406.i, %then.589.i ], [ %ld.701.fca.1.insert.i, %then.590.i ], [ zeroinitializer, %fallthrough.591.i ], [ %call.410.i, %then.594.i ]
  %call.404.fca.0.extract = extractvalue { i64, i64 } %call.4041, 0, !dbg !2065
  call void @llvm.dbg.value(metadata i64 %call.404.fca.0.extract, metadata !2066, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2067
  %icmp.706 = icmp eq i64 %call.404.fca.0.extract, 0, !dbg !2068
  br i1 %icmp.706, label %fallthrough.588, label %then.588

then.588:                                         ; preds = %command_line_arguments._validateGoInstall.exit
  %call.405 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2069
  %cast.6397 = bitcast { i8*, i64 }* %tmpv.1759 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6397, i8* align 8 bitcast ({ i8*, i64 }* @const.553 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.405, i8* nonnull %cast.6397), !dbg !2069
  %tmp.272.sroa.0.0.cast.6402.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1760, i64 0, i64 0, i32 0, !dbg !2069
  store %_type.0* @string..d, %_type.0** %tmp.272.sroa.0.0.cast.6402.sroa_idx, align 8, !dbg !2069
  %tmp.272.sroa.2.0.cast.6402.sroa_idx7 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1760, i64 0, i64 0, i32 1, !dbg !2069
  store i8* %call.405, i8** %tmp.272.sroa.2.0.cast.6402.sroa_idx7, align 8, !dbg !2069
  %field.1423 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.273, i64 0, i32 0, !dbg !2069
  %cast.6404 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1760, i64 0, i64 0, !dbg !2069
  store %IPST.16* %cast.6404, %IPST.16** %field.1423, align 8, !dbg !2069
  %field.1424 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.273, i64 0, i32 1, !dbg !2069
  store i64 1, i64* %field.1424, align 8, !dbg !2069
  %field.1425 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.273, i64 0, i32 2, !dbg !2069
  store i64 1, i64* %field.1425, align 8, !dbg !2069
  call void @fmt.Println({ i64, %error.0 }* nonnull sret %sret.actual.339, i8* nest undef, %IPST.2* byval nonnull %tmp.273), !dbg !2069
  br label %fallthrough.588

fallthrough.588:                                  ; preds = %command_line_arguments._validateGoInstall.exit, %then.588
  call void @llvm.dbg.value(metadata i64 %call.404.fca.0.extract, metadata !2070, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2071
  ret { i64, i64 } %call.4041, !dbg !2072
}

define void @command_line_arguments.NewTmpDir({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.11, i8* nest nocapture readnone %nest.32, %Flags.0* %f, i64 %path.chunk0, i64 %path.chunk1) #0 !dbg !2073 {
entry:
  %tmp.187 = alloca %IPST.2, align 8
  %tmp.185 = alloca [2 x { i8*, i64 }], align 8
  %tmp.184 = alloca %IPST.3, align 8
  %sret.actual.235 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.1301 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1308 = alloca { i8*, i64 }, align 8
  %tmpv.1309 = alloca [1 x %IPST.16], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2074, metadata !DIExpression()), !dbg !2075
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !2076, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2077
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !2076, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2077
  %call.275 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !2078
  %0 = and i8 %call.275, 1, !dbg !2080
  %trunc.463 = icmp eq i8 %0, 0, !dbg !2080
  br i1 %trunc.463, label %else.461, label %then.461

then.461:                                         ; preds = %entry
  call void @io_ioutil.TempDir({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.235, i8* nest undef, i64 %path.chunk0, i64 %path.chunk1, i64 ptrtoint ([15 x i8]* @const.460 to i64), i64 14), !dbg !2081
  %tmpv.1293.sroa.3.0.cast.4422.sroa_idx22 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.235, i64 0, i32 1, i32 0, !dbg !2081
  %tmpv.1293.sroa.3.0.copyload23 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1293.sroa.3.0.cast.4422.sroa_idx22, align 8, !dbg !2081
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1293.sroa.3.0.copyload23, metadata !2083, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2084
  %icmp.607 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1293.sroa.3.0.copyload23, null, !dbg !2085
  br i1 %icmp.607, label %else.462, label %then.462

fallthrough.461:                                  ; preds = %else.461, %else.463, %else.462
  %tmpdir.sroa.0.0 = phi i64 [ %tmpv.1293.sroa.0.sroa.0.0.copyload44, %else.462 ], [ %call.273.fca.0.extract, %else.463 ], [ ptrtoint ([6 x i8]* @const.462 to i64), %else.461 ], !dbg !2086
  %tmpdir.sroa.9.0 = phi i64 [ %tmpv.1293.sroa.0.sroa.3.0.copyload46, %else.462 ], [ %call.273.fca.1.extract, %else.463 ], [ 5, %else.461 ], !dbg !2086
  call void @llvm.dbg.value(metadata i64 %tmpdir.sroa.9.0, metadata !2087, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2088
  call void @llvm.dbg.value(metadata i64 %tmpdir.sroa.0.0, metadata !2087, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2088
  %call.276 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !2089
  %icmp.610 = icmp eq i8 %call.276, 0, !dbg !2090
  br i1 %icmp.610, label %then.464, label %fallthrough.464

else.461:                                         ; preds = %entry
  %call.274 = call i8 @runtime.eqstring(i8* nest undef, i64 %path.chunk0, i64 %path.chunk1, i64 0, i64 0), !dbg !2091
  %icmp.608 = icmp eq i8 %call.274, 1, !dbg !2091
  br i1 %icmp.608, label %fallthrough.461, label %else.463

then.462:                                         ; preds = %then.461
  %tmpv.1293.sroa.4.0.cast.4422.sroa_idx24 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.235, i64 0, i32 1, i32 1, !dbg !2081
  %1 = bitcast i8** %tmpv.1293.sroa.4.0.cast.4422.sroa_idx24 to i64*, !dbg !2081
  %tmpv.1293.sroa.4.0.copyload2582 = load i64, i64* %1, align 8, !dbg !2081
  call void @llvm.dbg.value(metadata i8** %tmpv.1293.sroa.4.0.cast.4422.sroa_idx24, metadata !2083, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2084
  call void @llvm.dbg.value(metadata i64 0, metadata !2092, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2093
  call void @llvm.dbg.value(metadata i64 0, metadata !2092, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2093
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1293.sroa.3.0.copyload23, metadata !2094, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2095
  call void @llvm.dbg.value(metadata i8** %tmpv.1293.sroa.4.0.cast.4422.sroa_idx24, metadata !2094, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2095
  %tmp.183.sroa.3.0.cast.4447.sroa_idx76 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.11, i64 0, i32 1, i32 0, !dbg !2096
  %2 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.11 to i8*, !dbg !2096
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !2096
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1293.sroa.3.0.copyload23, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.183.sroa.3.0.cast.4447.sroa_idx76, align 8, !dbg !2096
  %tmp.183.sroa.4.0.cast.4447.sroa_idx77 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.11, i64 0, i32 1, i32 1, !dbg !2096
  %3 = bitcast i8** %tmp.183.sroa.4.0.cast.4447.sroa_idx77 to i64*, !dbg !2096
  store i64 %tmpv.1293.sroa.4.0.copyload2582, i64* %3, align 8, !dbg !2096
  ret void, !dbg !2096

else.462:                                         ; preds = %then.461
  %tmpv.1293.sroa.0.sroa.3.0.tmpv.1293.sroa.0.0.cast.4422.sroa_cast.sroa_idx45 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.235, i64 0, i32 0, i32 1, !dbg !2081
  %tmpv.1293.sroa.0.sroa.3.0.copyload46 = load i64, i64* %tmpv.1293.sroa.0.sroa.3.0.tmpv.1293.sroa.0.0.cast.4422.sroa_cast.sroa_idx45, align 8, !dbg !2081
  call void @llvm.dbg.value(metadata i64 %tmpv.1293.sroa.0.sroa.3.0.copyload46, metadata !2087, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2088
  %tmpv.1293.sroa.0.sroa.0.0.tmpv.1293.sroa.0.0.cast.4422.sroa_cast.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.235 to i64*, !dbg !2081
  %tmpv.1293.sroa.0.sroa.0.0.copyload44 = load i64, i64* %tmpv.1293.sroa.0.sroa.0.0.tmpv.1293.sroa.0.0.cast.4422.sroa_cast.sroa_cast, align 8, !dbg !2081
  call void @llvm.dbg.value(metadata i64 %tmpv.1293.sroa.0.sroa.0.0.copyload44, metadata !2087, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2088
  br label %fallthrough.461

else.463:                                         ; preds = %else.461
  %path.addr.sroa.0.0.cast.4454.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.1301 to i64*, !dbg !2097
  store i64 %path.chunk0, i64* %path.addr.sroa.0.0.cast.4454.sroa_cast, align 8, !dbg !2097
  %path.addr.sroa.4.0.cast.4454.sroa_idx73 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1301, i64 0, i64 0, i32 1, !dbg !2097
  store i64 %path.chunk1, i64* %path.addr.sroa.4.0.cast.4454.sroa_idx73, align 8, !dbg !2097
  %index.230 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1301, i64 0, i64 1, !dbg !2097
  %cast.4456 = bitcast { i8*, i64 }* %index.230 to i8*, !dbg !2097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4456, i8* align 8 bitcast ({ i8*, i64 }* @const.465 to i8*), i64 16, i1 false), !dbg !2097
  %field.1060 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.184, i64 0, i32 0, !dbg !2097
  %cast.4458 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1301, i64 0, i64 0, !dbg !2097
  store { i8*, i64 }* %cast.4458, { i8*, i64 }** %field.1060, align 8, !dbg !2097
  %field.1061 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.184, i64 0, i32 1, !dbg !2097
  store i64 2, i64* %field.1061, align 8, !dbg !2097
  %field.1062 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.184, i64 0, i32 2, !dbg !2097
  store i64 2, i64* %field.1062, align 8, !dbg !2097
  %call.273 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.184), !dbg !2097
  %call.273.fca.0.extract = extractvalue { i64, i64 } %call.273, 0, !dbg !2097
  %call.273.fca.1.extract = extractvalue { i64, i64 } %call.273, 1, !dbg !2097
  call void @llvm.dbg.value(metadata i64 %call.273.fca.0.extract, metadata !2087, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2088
  call void @llvm.dbg.value(metadata i64 %call.273.fca.1.extract, metadata !2087, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2088
  br label %fallthrough.461

then.464:                                         ; preds = %fallthrough.461
  %icmp.609 = icmp eq %Flags.0* %f, null, !dbg !2098
  br i1 %icmp.609, label %then.465, label %else.465

fallthrough.464:                                  ; preds = %fallthrough.461, %else.465
  %tmpv.1303.0 = phi i8 [ %.field.ld.123, %else.465 ], [ %call.276, %fallthrough.461 ]
  %4 = and i8 %tmpv.1303.0, 1, !dbg !2099
  %trunc.467 = icmp eq i8 %4, 0, !dbg !2099
  br i1 %trunc.467, label %fallthrough.466, label %then.466

then.465:                                         ; preds = %then.464
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2098
  unreachable

else.465:                                         ; preds = %then.464
  %field.1063 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 6, !dbg !2098
  %.field.ld.123 = load i8, i8* %field.1063, align 1, !dbg !2098
  br label %fallthrough.464

then.466:                                         ; preds = %fallthrough.464
  %cast.4469 = bitcast [2 x { i8*, i64 }]* %tmp.185 to i8*, !dbg !2100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4469, i8* align 8 bitcast ({ i8*, i64 }* @const.467 to i8*), i64 16, i1 false), !dbg !2100
  %tmpdir.sroa.0.0.cast.4471.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.185, i64 0, i64 1, !dbg !2100
  %tmpdir.sroa.0.0.cast.4471.sroa_cast = bitcast { i8*, i64 }* %tmpdir.sroa.0.0.cast.4471.sroa_idx to i64*, !dbg !2100
  store i64 %tmpdir.sroa.0.0, i64* %tmpdir.sroa.0.0.cast.4471.sroa_cast, align 8, !dbg !2100
  %tmpdir.sroa.9.0.cast.4471.sroa_idx35 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.185, i64 0, i64 1, i32 1, !dbg !2100
  store i64 %tmpdir.sroa.9.0, i64* %tmpdir.sroa.9.0.cast.4471.sroa_idx35, align 8, !dbg !2100
  %call.277 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.185), !dbg !2100
  %call.277.fca.0.extract = extractvalue { i64, i64 } %call.277, 0, !dbg !2100
  %call.277.fca.1.extract = extractvalue { i64, i64 } %call.277, 1, !dbg !2100
  %call.278 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2101
  %tmpv.1306.sroa.0.0.cast.4478.sroa_cast = bitcast { i8*, i64 }* %tmpv.1308 to i64*
  store i64 %call.277.fca.0.extract, i64* %tmpv.1306.sroa.0.0.cast.4478.sroa_cast, align 8
  %tmpv.1306.sroa.2.0.cast.4478.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1308, i64 0, i32 1
  store i64 %call.277.fca.1.extract, i64* %tmpv.1306.sroa.2.0.cast.4478.sroa_idx3, align 8
  %cast.4481 = bitcast { i8*, i64 }* %tmpv.1308 to i8*, !dbg !2101
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.278, i8* nonnull %cast.4481), !dbg !2101
  %tmp.186.sroa.0.0.cast.4483.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1309, i64 0, i64 0, i32 0, !dbg !2101
  store %_type.0* @string..d, %_type.0** %tmp.186.sroa.0.0.cast.4483.sroa_idx, align 8, !dbg !2101
  %tmp.186.sroa.2.0.cast.4483.sroa_idx78 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1309, i64 0, i64 0, i32 1, !dbg !2101
  store i8* %call.278, i8** %tmp.186.sroa.2.0.cast.4483.sroa_idx78, align 8, !dbg !2101
  %icmp.611 = icmp eq %Flags.0* %f, null, !dbg !2102
  br i1 %icmp.611, label %then.467, label %else.467

fallthrough.466:                                  ; preds = %fallthrough.464, %else.467
  call void @llvm.dbg.value(metadata i64 %tmpdir.sroa.0.0, metadata !2092, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2093
  call void @llvm.dbg.value(metadata i64 %tmpdir.sroa.9.0, metadata !2092, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2093
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2094, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2095
  call void @llvm.dbg.value(metadata i8* null, metadata !2094, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2095
  %tmp.188.sroa.0.0.cast.4499.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.11 to i64*, !dbg !2103
  store i64 %tmpdir.sroa.0.0, i64* %tmp.188.sroa.0.0.cast.4499.sroa_cast, align 8, !dbg !2103
  %tmp.188.sroa.2.0.cast.4499.sroa_idx79 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.11, i64 0, i32 0, i32 1, !dbg !2103
  store i64 %tmpdir.sroa.9.0, i64* %tmp.188.sroa.2.0.cast.4499.sroa_idx79, align 8, !dbg !2103
  %tmp.188.sroa.3.0.cast.4499.sroa_idx80 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.11, i64 0, i32 1, i32 0, !dbg !2103
  %5 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.188.sroa.3.0.cast.4499.sroa_idx80 to i8*, !dbg !2103
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false), !dbg !2103
  ret void, !dbg !2103

then.467:                                         ; preds = %then.466
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2102
  unreachable

else.467:                                         ; preds = %then.466
  %field.1066 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !2102
  %.field.ld.124 = load %Logger.0*, %Logger.0** %field.1066, align 8, !dbg !2102
  %field.1067 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.187, i64 0, i32 0, !dbg !2101
  %cast.4486 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1309, i64 0, i64 0, !dbg !2101
  store %IPST.16* %cast.4486, %IPST.16** %field.1067, align 8, !dbg !2101
  %field.1068 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.187, i64 0, i32 1, !dbg !2101
  store i64 1, i64* %field.1068, align 8, !dbg !2101
  %field.1069 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.187, i64 0, i32 2, !dbg !2101
  store i64 1, i64* %field.1069, align 8, !dbg !2101
  call void @log.Logger.Println(i8* nest undef, %Logger.0* %.field.ld.124, %IPST.2* byval nonnull %tmp.187), !dbg !2101
  br label %fallthrough.466
}

define internal void @command_line_arguments.command_line_arguments..thunk3(i8* nest nocapture readnone %nest.73, { %Flags.0*, { i8*, i64 } }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2104 {
entry:
  call void @llvm.dbg.value(metadata { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, metadata !2112, metadata !DIExpression()), !dbg !2113
  %field.1840 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2113
  %.field.ld.230 = load %Flags.0*, %Flags.0** %field.1840, align 8, !dbg !2113
  %field.1841 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, i64 0, i32 1, !dbg !2113
  %field0.371 = bitcast { i8*, i64 }* %field.1841 to i64*, !dbg !2113
  %ld.815 = load i64, i64* %field0.371, align 8, !dbg !2113
  %0 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, i64 0, i32 1, i32 1, !dbg !2113
  %ld.816 = load i64, i64* %0, align 8, !dbg !2113
  %call.470 = call { i64, i64 } @command_line_arguments.RemoveAll(i8* nest undef, %Flags.0* %.field.ld.230, i64 %ld.815, i64 %ld.816), !dbg !2113
  ret void
}

define void @command_line_arguments.MatchaPkgPath({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.22, i8* nest nocapture readnone %nest.62, %Flags.0* %f) #0 !dbg !2114 {
entry:
  %tmp.280 = alloca %IPST.3, align 8
  %tmp.278 = alloca %IPST.3, align 8
  %sret.actual.347 = alloca %IPST.3, align 8
  %tmpv.1796 = alloca [3 x { i8*, i64 }], align 8
  %tmpv.1806 = alloca [3 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2115, metadata !DIExpression()), !dbg !2116
  %call.415 = call { i64, i64 } @command_line_arguments.GoEnv(i8* nest undef, %Flags.0* %f, i64 ptrtoint ([7 x i8]* @const.414 to i64), i64 6), !dbg !2117
  %call.415.fca.0.extract = extractvalue { i64, i64 } %call.415, 0, !dbg !2117
  %call.415.fca.1.extract = extractvalue { i64, i64 } %call.415, 1, !dbg !2117
  call void @path_filepath.SplitList(%IPST.3* nonnull sret %sret.actual.347, i8* nest undef, i64 %call.415.fca.0.extract, i64 %call.415.fca.1.extract), !dbg !2119
  %tmpv.1787.sroa.0.0.cast.6515.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.347, i64 0, i32 0
  %tmpv.1787.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1787.sroa.0.0.cast.6515.sroa_idx, align 8
  %tmpv.1787.sroa.2.0.cast.6515.sroa_idx40 = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.347, i64 0, i32 1
  %tmpv.1787.sroa.2.0.copyload = load i64, i64* %tmpv.1787.sroa.2.0.cast.6515.sroa_idx40, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.1787.sroa.0.0.copyload, metadata !2120, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2121
  call void @llvm.dbg.value(metadata i64 %tmpv.1787.sroa.2.0.copyload, metadata !2120, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2121
  call void @llvm.dbg.value(metadata %IPST.3* %sret.actual.347, metadata !2120, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2121
  call void @llvm.dbg.value(metadata i64 0, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2123
  call void @llvm.dbg.value(metadata i64 0, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2123
  call void @llvm.dbg.value(metadata i64 0, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2123
  call void @llvm.dbg.value(metadata i64 0, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2123
  %icmp.71792 = icmp sgt i64 %tmpv.1787.sroa.2.0.copyload, 0, !dbg !2124
  br i1 %icmp.71792, label %else.599.lr.ph, label %label.2

else.599.lr.ph:                                   ; preds = %entry
  %cast.6536 = bitcast [3 x { i8*, i64 }]* %tmpv.1796 to i8*
  %index.347 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1796, i64 0, i64 1
  %cast.6538 = bitcast { i8*, i64 }* %index.347 to i8*
  %index.348 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1796, i64 0, i64 2
  %cast.6540 = bitcast { i8*, i64 }* %index.348 to i8*
  %field.1449 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.278, i64 0, i32 0
  %cast.6542 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1796, i64 0, i64 0
  %field.1450 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.278, i64 0, i32 1
  %field.1451 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.278, i64 0, i32 2
  br label %else.599

else.599:                                         ; preds = %else.599, %else.599.lr.ph
  %tmpv.1788.093 = phi i64 [ 0, %else.599.lr.ph ], [ %add.66, %else.599 ]
  %ptroff.77 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1787.sroa.0.0.copyload, i64 %tmpv.1788.093, !dbg !2124
  %cast.6527 = bitcast { i8*, i64 }* %ptroff.77 to i8*, !dbg !2124
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6536, i8* align 8 %cast.6527, i64 16, i1 false), !dbg !2126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6538, i8* align 8 bitcast ({ i8*, i64 }* @const.564 to i8*), i64 16, i1 false), !dbg !2126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6540, i8* align 8 bitcast ({ i8*, i64 }* @const.326 to i8*), i64 16, i1 false), !dbg !2126
  store { i8*, i64 }* %cast.6542, { i8*, i64 }** %field.1449, align 8, !dbg !2126
  store i64 3, i64* %field.1450, align 8, !dbg !2126
  store i64 3, i64* %field.1451, align 8, !dbg !2126
  %call.416 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.278), !dbg !2126
  %call.416.fca.0.extract = extractvalue { i64, i64 } %call.416, 0, !dbg !2126
  %call.416.fca.1.extract = extractvalue { i64, i64 } %call.416, 1, !dbg !2126
  call void @llvm.dbg.value(metadata i64 %call.416.fca.0.extract, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2123
  call void @llvm.dbg.value(metadata i64 %call.416.fca.1.extract, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2123
  %call.417 = call i8 @command_line_arguments.IsDir(i8* nest undef, %Flags.0* %f, i64 %call.416.fca.0.extract, i64 %call.416.fca.1.extract), !dbg !2127
  %0 = and i8 %call.417, 1, !dbg !2128
  %trunc.600 = icmp eq i8 %0, 0, !dbg !2128
  %add.66 = add nuw nsw i64 %tmpv.1788.093, 1, !dbg !2124
  %icmp.717 = icmp slt i64 %add.66, %tmpv.1787.sroa.2.0.copyload, !dbg !2124
  %or.cond = and i1 %trunc.600, %icmp.717
  call void @llvm.dbg.value(metadata i64 %call.416.fca.1.extract, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2123
  call void @llvm.dbg.value(metadata i64 %call.416.fca.0.extract, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2123
  br i1 %or.cond, label %else.599, label %label.2

label.2:                                          ; preds = %else.599, %entry
  %p.sroa.0.1 = phi i64 [ 0, %entry ], [ %call.416.fca.0.extract, %else.599 ]
  %p.sroa.9.1 = phi i64 [ 0, %entry ], [ %call.416.fca.1.extract, %else.599 ]
  call void @llvm.dbg.value(metadata i64 %p.sroa.9.1, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2123
  call void @llvm.dbg.value(metadata i64 %p.sroa.0.1, metadata !2122, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2123
  %call.420 = call i8 @runtime.eqstring(i8* nest undef, i64 %p.sroa.0.1, i64 %p.sroa.9.1, i64 0, i64 0), !dbg !2129
  %icmp.721 = icmp eq i8 %call.420, 1, !dbg !2129
  br i1 %icmp.721, label %then.602, label %else.602

then.602:                                         ; preds = %label.2
  %icmp.720 = icmp eq i64 %tmpv.1787.sroa.2.0.copyload, 0, !dbg !2130
  br i1 %icmp.720, label %then.603, label %else.603

else.602:                                         ; preds = %label.2
  call void @llvm.dbg.value(metadata i64 %p.sroa.0.1, metadata !2131, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %p.sroa.9.1, metadata !2131, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2132
  call void @llvm.dbg.value(metadata i64 0, metadata !2133, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2134
  call void @llvm.dbg.value(metadata i64 0, metadata !2133, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2134
  %tmp.282.sroa.0.0.cast.6608.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.22 to i64*, !dbg !2135
  store i64 %p.sroa.0.1, i64* %tmp.282.sroa.0.0.cast.6608.sroa_cast, align 8, !dbg !2135
  %tmp.282.sroa.2.0.cast.6608.sroa_idx87 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.22, i64 0, i32 0, i32 1, !dbg !2135
  store i64 %p.sroa.9.1, i64* %tmp.282.sroa.2.0.cast.6608.sroa_idx87, align 8, !dbg !2135
  %tmp.282.sroa.3.0.cast.6608.sroa_idx88 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.22, i64 0, i32 1, !dbg !2135
  %1 = bitcast %error.0* %tmp.282.sroa.3.0.cast.6608.sroa_idx88 to i8*, !dbg !2135
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 16, i1 false), !dbg !2135
  ret void, !dbg !2135

then.603:                                         ; preds = %then.602
  %call.418 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([23 x i8]* @const.565 to i64), i64 22, %IPST.2* byval nonnull @const.11), !dbg !2136
  %call.418.fca.0.extract = extractvalue { i64, i64 } %call.418, 0, !dbg !2136
  %call.418.fca.1.extract = extractvalue { i64, i64 } %call.418, 1, !dbg !2136
  call void @llvm.dbg.value(metadata i64 0, metadata !2131, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2132
  call void @llvm.dbg.value(metadata i64 0, metadata !2131, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %call.418.fca.0.extract, metadata !2133, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2134
  call void @llvm.dbg.value(metadata i64 %call.418.fca.1.extract, metadata !2133, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2134
  %tmp.279.sroa.3.0.cast.6564.sroa_idx82 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.22, i64 0, i32 1, !dbg !2137
  %tmp.279.sroa.3.0.cast.6564.sroa_cast = bitcast %error.0* %tmp.279.sroa.3.0.cast.6564.sroa_idx82 to i64*, !dbg !2137
  %2 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.22 to i8*, !dbg !2137
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !2137
  store i64 %call.418.fca.0.extract, i64* %tmp.279.sroa.3.0.cast.6564.sroa_cast, align 8, !dbg !2137
  %tmp.279.sroa.4.0.cast.6564.sroa_idx83 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.22, i64 0, i32 1, i32 1, !dbg !2137
  %tmp.279.sroa.4.0.cast.6564.sroa_cast = bitcast i8** %tmp.279.sroa.4.0.cast.6564.sroa_idx83 to i64*, !dbg !2137
  store i64 %call.418.fca.1.extract, i64* %tmp.279.sroa.4.0.cast.6564.sroa_cast, align 8, !dbg !2137
  ret void, !dbg !2137

else.603:                                         ; preds = %then.602
  %icmp.718 = icmp slt i64 %tmpv.1787.sroa.2.0.copyload, 1, !dbg !2138
  br i1 %icmp.718, label %then.604, label %else.604

then.604:                                         ; preds = %else.603
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2138
  unreachable

else.604:                                         ; preds = %else.603
  %cast.6567 = bitcast { i8*, i64 }* %tmpv.1787.sroa.0.0.copyload to i8*
  %cast.6572 = bitcast [3 x { i8*, i64 }]* %tmpv.1806 to i8*, !dbg !2139
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6572, i8* align 8 %cast.6567, i64 16, i1 false), !dbg !2139
  %index.350 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1806, i64 0, i64 1, !dbg !2139
  %cast.6574 = bitcast { i8*, i64 }* %index.350 to i8*, !dbg !2139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6574, i8* align 8 bitcast ({ i8*, i64 }* @const.564 to i8*), i64 16, i1 false), !dbg !2139
  %index.351 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1806, i64 0, i64 2, !dbg !2139
  %cast.6576 = bitcast { i8*, i64 }* %index.351 to i8*, !dbg !2139
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6576, i8* align 8 bitcast ({ i8*, i64 }* @const.326 to i8*), i64 16, i1 false), !dbg !2139
  %field.1456 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.280, i64 0, i32 0, !dbg !2139
  %cast.6578 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1806, i64 0, i64 0, !dbg !2139
  store { i8*, i64 }* %cast.6578, { i8*, i64 }** %field.1456, align 8, !dbg !2139
  %field.1457 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.280, i64 0, i32 1, !dbg !2139
  store i64 3, i64* %field.1457, align 8, !dbg !2139
  %field.1458 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.280, i64 0, i32 2, !dbg !2139
  store i64 3, i64* %field.1458, align 8, !dbg !2139
  %call.419 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.280), !dbg !2139
  %call.419.fca.0.extract = extractvalue { i64, i64 } %call.419, 0, !dbg !2139
  %call.419.fca.1.extract = extractvalue { i64, i64 } %call.419, 1, !dbg !2139
  call void @llvm.dbg.value(metadata i64 %call.419.fca.0.extract, metadata !2131, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2132
  call void @llvm.dbg.value(metadata i64 %call.419.fca.1.extract, metadata !2131, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2132
  call void @llvm.dbg.value(metadata i64 0, metadata !2133, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2134
  call void @llvm.dbg.value(metadata i64 0, metadata !2133, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2134
  %tmp.281.sroa.0.0.cast.6592.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.22 to i64*, !dbg !2140
  store i64 %call.419.fca.0.extract, i64* %tmp.281.sroa.0.0.cast.6592.sroa_cast, align 8, !dbg !2140
  %tmp.281.sroa.2.0.cast.6592.sroa_idx84 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.22, i64 0, i32 0, i32 1, !dbg !2140
  store i64 %call.419.fca.1.extract, i64* %tmp.281.sroa.2.0.cast.6592.sroa_idx84, align 8, !dbg !2140
  %tmp.281.sroa.3.0.cast.6592.sroa_idx85 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.22, i64 0, i32 1, !dbg !2140
  %3 = bitcast %error.0* %tmp.281.sroa.3.0.cast.6592.sroa_idx85 to i8*, !dbg !2140
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false), !dbg !2140
  ret void, !dbg !2140
}

define void @command_line_arguments.ReadFile({ { i8*, i64, i64 }, %error.0 }* nocapture sret %sret.formal.13, i8* nest nocapture readnone %nest.38, %Flags.0* %f, i64 %filename.chunk0, i64 %filename.chunk1) #0 !dbg !2141 {
entry:
  %tmp.201 = alloca %IPST.2, align 8
  %tmpv.1373 = alloca { i8*, i64 }, align 8
  %tmpv.1374 = alloca [1 x %IPST.16], align 8
  %sret.actual.246 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2148, metadata !DIExpression()), !dbg !2149
  call void @llvm.dbg.value(metadata i64 %filename.chunk0, metadata !2150, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2151
  call void @llvm.dbg.value(metadata i64 %filename.chunk1, metadata !2150, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2151
  %call.294 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !2152
  %0 = and i8 %call.294, 1, !dbg !2153
  %trunc.492 = icmp eq i8 %0, 0, !dbg !2153
  br i1 %trunc.492, label %fallthrough.491, label %then.491

then.491:                                         ; preds = %entry
  %call.293 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2154
  %filename.addr.sroa.0.0.cast.4701.sroa_cast = bitcast { i8*, i64 }* %tmpv.1373 to i64*
  store i64 %filename.chunk0, i64* %filename.addr.sroa.0.0.cast.4701.sroa_cast, align 8
  %filename.addr.sroa.3.0.cast.4701.sroa_idx37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1373, i64 0, i32 1
  store i64 %filename.chunk1, i64* %filename.addr.sroa.3.0.cast.4701.sroa_idx37, align 8
  %cast.4704 = bitcast { i8*, i64 }* %tmpv.1373 to i8*, !dbg !2154
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.293, i8* nonnull %cast.4704), !dbg !2154
  %tmp.200.sroa.0.0.cast.4706.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1374, i64 0, i64 0, i32 0, !dbg !2154
  store %_type.0* @string..d, %_type.0** %tmp.200.sroa.0.0.cast.4706.sroa_idx, align 8, !dbg !2154
  %tmp.200.sroa.2.0.cast.4706.sroa_idx38 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1374, i64 0, i64 0, i32 1, !dbg !2154
  store i8* %call.293, i8** %tmp.200.sroa.2.0.cast.4706.sroa_idx38, align 8, !dbg !2154
  %icmp.629 = icmp eq %Flags.0* %f, null, !dbg !2155
  br i1 %icmp.629, label %then.492, label %else.492

fallthrough.491:                                  ; preds = %entry, %else.492
  %call.295 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !2156
  %1 = and i8 %call.295, 1, !dbg !2157
  %trunc.493 = icmp eq i8 %1, 0, !dbg !2157
  br i1 %trunc.493, label %else.493, label %then.493

then.492:                                         ; preds = %then.491
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2155
  unreachable

else.492:                                         ; preds = %then.491
  %field.1129 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !2155
  %.field.ld.136 = load %Logger.0*, %Logger.0** %field.1129, align 8, !dbg !2155
  %field.1130 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.201, i64 0, i32 0, !dbg !2154
  %cast.4710 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1374, i64 0, i64 0, !dbg !2154
  store %IPST.16* %cast.4710, %IPST.16** %field.1130, align 8, !dbg !2154
  %field.1131 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.201, i64 0, i32 1, !dbg !2154
  store i64 1, i64* %field.1131, align 8, !dbg !2154
  %field.1132 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.201, i64 0, i32 2, !dbg !2154
  store i64 1, i64* %field.1132, align 8, !dbg !2154
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.136, i64 ptrtoint ([9 x i8]* @const.478 to i64), i64 8, %IPST.2* byval nonnull %tmp.201), !dbg !2154
  br label %fallthrough.491

then.493:                                         ; preds = %fallthrough.491
  call void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.246, i8* nest undef, i64 %filename.chunk0, i64 %filename.chunk1), !dbg !2158
  %2 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.246 to i64*, !dbg !2158
  %tmpv.1376.sroa.0.0.copyload3148 = load i64, i64* %2, align 8, !dbg !2158
  %tmpv.1376.sroa.3.0.cast.4715.sroa_idx32 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.246, i64 0, i32 0, i32 1, !dbg !2158
  %tmpv.1376.sroa.3.0.copyload33 = load i64, i64* %tmpv.1376.sroa.3.0.cast.4715.sroa_idx32, align 8, !dbg !2158
  %tmpv.1376.sroa.4.0.cast.4715.sroa_idx34 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.246, i64 0, i32 0, i32 2, !dbg !2158
  %tmpv.1376.sroa.4.0.copyload35 = load i64, i64* %tmpv.1376.sroa.4.0.cast.4715.sroa_idx34, align 8, !dbg !2158
  %tmpv.1376.sroa.5.0.cast.4715.sroa_idx = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.246, i64 0, i32 1, !dbg !2158
  %tmpv.1376.sroa.5.0.cast.4715.sroa_cast = bitcast %error.0* %tmpv.1376.sroa.5.0.cast.4715.sroa_idx to i8*, !dbg !2158
  call void @llvm.dbg.value(metadata { { i8*, i64, i64 }, %error.0 }* %sret.actual.246, metadata !2159, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !2160
  call void @llvm.dbg.value(metadata i64 %tmpv.1376.sroa.3.0.copyload33, metadata !2159, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2160
  call void @llvm.dbg.value(metadata i64 %tmpv.1376.sroa.4.0.copyload35, metadata !2159, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2160
  %3 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.formal.13 to i64*, !dbg !2161
  store i64 %tmpv.1376.sroa.0.0.copyload3148, i64* %3, align 8, !dbg !2161
  %tmp.202.sroa.2.0.cast.4732.sroa_idx39 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.13, i64 0, i32 0, i32 1, !dbg !2161
  store i64 %tmpv.1376.sroa.3.0.copyload33, i64* %tmp.202.sroa.2.0.cast.4732.sroa_idx39, align 8, !dbg !2161
  %tmp.202.sroa.3.0.cast.4732.sroa_idx40 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.13, i64 0, i32 0, i32 2, !dbg !2161
  store i64 %tmpv.1376.sroa.4.0.copyload35, i64* %tmp.202.sroa.3.0.cast.4732.sroa_idx40, align 8, !dbg !2161
  %tmp.202.sroa.4.0.cast.4732.sroa_idx = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.13, i64 0, i32 1, !dbg !2161
  %tmp.202.sroa.4.0.cast.4732.sroa_cast = bitcast %error.0* %tmp.202.sroa.4.0.cast.4732.sroa_idx to i8*, !dbg !2161
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.202.sroa.4.0.cast.4732.sroa_cast, i8* nonnull align 8 %tmpv.1376.sroa.5.0.cast.4715.sroa_cast, i64 16, i1 false), !dbg !2161
  ret void, !dbg !2161

else.493:                                         ; preds = %fallthrough.491
  %call.296 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7uint8, i64 0, i32 0)), !dbg !2162
  call void @llvm.dbg.value(metadata i8* %call.296, metadata !2159, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2160
  call void @llvm.dbg.value(metadata i64 0, metadata !2159, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2160
  call void @llvm.dbg.value(metadata i64 0, metadata !2159, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2160
  %tmp.203.sroa.0.0.cast.4748.sroa_idx = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.13, i64 0, i32 0, i32 0, !dbg !2163
  store i8* %call.296, i8** %tmp.203.sroa.0.0.cast.4748.sroa_idx, align 8, !dbg !2163
  %tmp.203.sroa.2.0.cast.4748.sroa_idx44 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.13, i64 0, i32 0, i32 1, !dbg !2163
  %4 = bitcast i64* %tmp.203.sroa.2.0.cast.4748.sroa_idx44 to i8*, !dbg !2163
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 32, i1 false), !dbg !2163
  ret void, !dbg !2163
}

declare { i64, i64 } @errors.New(i8*, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.GoVersion({ { i8*, i64, i64 }, %error.0 }* nocapture sret %sret.formal.24, i8* nest nocapture readnone %nest.65, %Flags.0* %f) #0 !dbg !2164 {
entry:
  %tmp.292 = alloca { i8*, i64, i64 }, align 8
  %tmp.291 = alloca %IPST.3, align 8
  %ver = alloca { i8*, i64, i64 }, align 8
  %tmpv.1830 = alloca [1 x { i8*, i64 }], align 8
  %sret.actual.361 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2167, metadata !DIExpression()), !dbg !2168
  %ver.0.sroa_cast = bitcast { i8*, i64, i64 }* %ver to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %ver.0.sroa_cast)
  %cast.6752 = bitcast [1 x { i8*, i64 }]* %tmpv.1830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6752, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.577 to i8*), i64 16, i1 false)
  %field.1481 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.291, i64 0, i32 0, !dbg !2169
  %cast.6755 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.1830, i64 0, i64 0, !dbg !2169
  store { i8*, i64 }* %cast.6755, { i8*, i64 }** %field.1481, align 8, !dbg !2169
  %field.1482 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.291, i64 0, i32 1, !dbg !2169
  store i64 1, i64* %field.1482, align 8, !dbg !2169
  %field.1483 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.291, i64 0, i32 2, !dbg !2169
  store i64 1, i64* %field.1483, align 8, !dbg !2169
  %call.435 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([3 x i8]* @const.554 to i64), i64 2, %IPST.3* byval nonnull %tmp.291), !dbg !2169
  call void @llvm.dbg.value(metadata %Cmd.0* %call.435, metadata !2171, metadata !DIExpression()), !dbg !2172
  %call.436 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...622x.7uint8, i64 0, i32 0)), !dbg !2173
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call.436, i8* align 16 getelementptr inbounds ([22 x i8], [22 x i8]* @const.579, i64 0, i64 0), i64 22, i1 false), !dbg !2173
  %field.1484 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.292, i64 0, i32 0, !dbg !2173
  store i8* %call.436, i8** %field.1484, align 8, !dbg !2173
  %field.1485 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.292, i64 0, i32 1, !dbg !2173
  store i64 22, i64* %field.1485, align 8, !dbg !2173
  %field.1486 = getelementptr inbounds { i8*, i64, i64 }, { i8*, i64, i64 }* %tmp.292, i64 0, i32 2, !dbg !2173
  store i64 22, i64* %field.1486, align 8, !dbg !2173
  call void @command_line_arguments.OutputCmd({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.361, i8* nest undef, %Flags.0* %f, { i8*, i64, i64 }* byval nonnull %tmp.292, i64 0, i64 0, %Cmd.0* %call.435), !dbg !2174
  %tmpv.1831.sroa.0.0.cast.6766.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.361 to i8*, !dbg !2174
  %tmpv.1831.sroa.3.0.cast.6766.sroa_idx13 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.361, i64 0, i32 1, i32 0, !dbg !2174
  %tmpv.1831.sroa.3.0.copyload14 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1831.sroa.3.0.cast.6766.sroa_idx13, align 8, !dbg !2174
  %tmpv.1831.sroa.4.0.cast.6766.sroa_idx15 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.361, i64 0, i32 1, i32 1, !dbg !2174
  %0 = bitcast i8** %tmpv.1831.sroa.4.0.cast.6766.sroa_idx15 to i64*, !dbg !2174
  %tmpv.1831.sroa.4.0.copyload1647 = load i64, i64* %0, align 8, !dbg !2174
  %ver54 = bitcast { i8*, i64, i64 }* %ver to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %ver54, i8* nonnull align 8 %tmpv.1831.sroa.0.0.cast.6766.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1831.sroa.3.0.copyload14, metadata !2175, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2176
  call void @llvm.dbg.value(metadata i8** %tmpv.1831.sroa.4.0.cast.6766.sroa_idx15, metadata !2175, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2176
  %icmp.727 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1831.sroa.3.0.copyload14, null, !dbg !2177
  %sret.formal.245859 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.formal.24 to i8*
  br i1 %icmp.727, label %else.609, label %then.609

then.609:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1831.sroa.3.0.copyload14, metadata !2178, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2179
  call void @llvm.dbg.value(metadata i8** %tmpv.1831.sroa.4.0.cast.6766.sroa_idx15, metadata !2178, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2179
  call void @llvm.memset.p0i8.i64(i8* align 8 %sret.formal.245859, i8 0, i64 24, i1 false), !dbg !2180
  %tmp.293.sroa.2.0.cast.6787.sroa_idx37 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.24, i64 0, i32 1, i32 0, !dbg !2180
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1831.sroa.3.0.copyload14, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.293.sroa.2.0.cast.6787.sroa_idx37, align 8, !dbg !2180
  %tmp.293.sroa.3.0.cast.6787.sroa_idx38 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.24, i64 0, i32 1, i32 1, !dbg !2180
  %1 = bitcast i8** %tmp.293.sroa.3.0.cast.6787.sroa_idx38 to i64*, !dbg !2180
  store i64 %tmpv.1831.sroa.4.0.copyload1647, i64* %1, align 8, !dbg !2180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %ver.0.sroa_cast), !dbg !2180
  ret void, !dbg !2180

else.609:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2178, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2179
  call void @llvm.dbg.value(metadata i8* null, metadata !2178, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %sret.formal.245859, i8* nonnull align 8 %ver.0.sroa_cast, i64 24, i1 false), !dbg !2181
  %tmp.294.sroa.2.0.cast.6802.sroa_idx43 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.24, i64 0, i32 1, i32 0, !dbg !2181
  %2 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.294.sroa.2.0.cast.6802.sroa_idx43 to i8*, !dbg !2181
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !2181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %ver.0.sroa_cast), !dbg !2181
  ret void, !dbg !2181
}

declare i8 @bytes.Equal(i8*, { i8*, i64, i64 }*, { i8*, i64, i64 }*) local_unnamed_addr #0

define void @command_line_arguments.Getwd({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.16, i8* nest nocapture readnone %nest.47, %Flags.0* %f) #0 !dbg !2182 {
entry:
  %tmp.228 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmp.227 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.1472 = alloca { { i8*, i64 }, %error.0 }, align 8
  %sret.actual.257 = alloca { { i8*, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2183, metadata !DIExpression()), !dbg !2184
  %call.327 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !2185
  %0 = and i8 %call.327, 1, !dbg !2186
  %trunc.526 = icmp eq i8 %0, 0, !dbg !2186
  br i1 %trunc.526, label %fallthrough.525, label %then.525

then.525:                                         ; preds = %entry
  %icmp.650 = icmp eq %Flags.0* %f, null, !dbg !2187
  br i1 %icmp.650, label %then.526, label %else.526

fallthrough.525:                                  ; preds = %entry, %else.526
  %call.328 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !2188
  %1 = and i8 %call.328, 1, !dbg !2189
  %trunc.527 = icmp eq i8 %1, 0, !dbg !2189
  br i1 %trunc.527, label %else.527, label %then.527

then.526:                                         ; preds = %then.525
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2187
  unreachable

else.526:                                         ; preds = %then.525
  %field.1240 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !2187
  %.field.ld.150 = load %Logger.0*, %Logger.0** %field.1240, align 8, !dbg !2187
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.150, i64 ptrtoint ([5 x i8]* @const.498 to i64), i64 4, %IPST.2* byval nonnull @const.11), !dbg !2190
  br label %fallthrough.525

then.527:                                         ; preds = %fallthrough.525
  %cast.5074 = bitcast { { i8*, i64 }, %error.0 }* %tmpv.1472 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.5074, i8 0, i64 32, i1 false)
  call void @os.Getwd({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.257, i8* nest undef), !dbg !2191
  %cast.5077 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.257 to i8*, !dbg !2191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5074, i8* nonnull align 8 %cast.5077, i64 32, i1 false), !dbg !2191
  %field.1242 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %tmpv.1472, i64 0, i32 1, !dbg !2191
  %cast.5083 = bitcast %error.0* %field.1242 to i8*
  %cast.5090 = bitcast { { i8*, i64 }, %error.0 }* %tmp.227 to i8*, !dbg !2192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5090, i8* nonnull align 8 %cast.5077, i64 16, i1 false), !dbg !2192
  %field.1244 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %tmp.227, i64 0, i32 1, !dbg !2192
  %cast.5092 = bitcast %error.0* %field.1244 to i8*, !dbg !2192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5092, i8* nonnull align 8 %cast.5083, i64 16, i1 false), !dbg !2192
  %cast.5094 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.16 to i8*, !dbg !2192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.5094, i8* nonnull align 8 %cast.5090, i64 32, i1 false), !dbg !2192
  ret void, !dbg !2192

else.527:                                         ; preds = %fallthrough.525
  %cast.5104 = bitcast { { i8*, i64 }, %error.0 }* %tmp.228 to i8*, !dbg !2193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5104, i8* align 8 bitcast ({ i8*, i64 }* @const.501 to i8*), i64 16, i1 false), !dbg !2193
  %field.1246 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %tmp.228, i64 0, i32 1, !dbg !2193
  %cast.5106 = bitcast %error.0* %field.1246 to i8*, !dbg !2193
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.5106, i8 0, i64 16, i1 false), !dbg !2193
  %cast.5108 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.16 to i8*, !dbg !2193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.5108, i8* nonnull align 8 %cast.5104, i64 32, i1 false), !dbg !2193
  ret void, !dbg !2193
}

declare { i64, i64 } @path.Clean(i8*, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.ImportAll({ %IPST.9, %error.0 }* nocapture sret %sret.formal.25, i8* nest nocapture readnone %nest.68, %Flags.0* %f, %Context.1* %ctx, %IPST.3* byval nocapture readonly %paths, i64 %srcDir.chunk0, i64 %srcDir.chunk1, i64 %mode) #0 !dbg !2194 {
entry:
  %tmp.324 = alloca %IPST.2, align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %paths, metadata !2202, metadata !DIExpression()), !dbg !2203
  %tmpv.2155 = alloca { i8*, i64 }, align 8
  %tmpv.2157 = alloca { i8*, i64 }, align 8
  %tmpv.2158 = alloca [2 x %IPST.16], align 8
  %tmpv.2165 = alloca %IPST.10, align 8
  %tmpv.2167 = alloca %IPST.9, align 8
  %sret.actual.387 = alloca %IPST.4, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2204, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.value(metadata %Context.1* %ctx, metadata !2206, metadata !DIExpression()), !dbg !2207
  call void @llvm.dbg.value(metadata i64 %srcDir.chunk0, metadata !2208, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2209
  call void @llvm.dbg.value(metadata i64 %srcDir.chunk1, metadata !2208, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2209
  call void @llvm.dbg.value(metadata i64 %mode, metadata !2210, metadata !DIExpression()), !dbg !2211
  %call.456 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7.1go_build.Package to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !2212
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.456, metadata !2214, metadata !DIExpression()), !dbg !2215
  %tmpv.2150.sroa.0.0.cast.7433.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %paths, i64 0, i32 0
  %tmpv.2150.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2150.sroa.0.0.cast.7433.sroa_idx, align 8
  %tmpv.2150.sroa.2.0.cast.7433.sroa_idx25 = getelementptr inbounds %IPST.3, %IPST.3* %paths, i64 0, i32 1
  %tmpv.2150.sroa.2.0.copyload = load i64, i64* %tmpv.2150.sroa.2.0.cast.7433.sroa_idx25, align 8
  %icmp.989142 = icmp sgt i64 %tmpv.2150.sroa.2.0.copyload, 0, !dbg !2216
  br i1 %icmp.989142, label %else.790.lr.ph, label %else.794

else.790.lr.ph:                                   ; preds = %entry
  %srcDir.addr.sroa.0.0.cast.7441.sroa_cast = bitcast { i8*, i64 }* %tmpv.2155 to i64*
  %srcDir.addr.sroa.3.0.cast.7441.sroa_idx102 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.2155, i64 0, i32 1
  %cast.7444 = bitcast { i8*, i64 }* %tmpv.2155 to i8*
  %i.sroa.0.0.cast.7446.sroa_cast = bitcast { i8*, i64 }* %tmpv.2157 to i64*
  %i.sroa.7.0.cast.7446.sroa_idx38 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.2157, i64 0, i32 1
  %cast.7449 = bitcast { i8*, i64 }* %tmpv.2157 to i8*
  %tmp.322.sroa.0.0.cast.7452.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.2158, i64 0, i64 0, i32 0
  %tmp.322.sroa.2.0.cast.7452.sroa_idx103 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.2158, i64 0, i64 0, i32 1
  %tmp.323.sroa.0.0.cast.7454.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.2158, i64 0, i64 1, i32 0
  %tmp.323.sroa.2.0.cast.7454.sroa_idx104 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.2158, i64 0, i64 1, i32 1
  %icmp.987 = icmp eq %Flags.0* %f, null
  %field.1796 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0
  %field.1797 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.324, i64 0, i32 0
  %cast.7458 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.2158, i64 0, i64 0
  %field.1798 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.324, i64 0, i32 1
  %field.1799 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.324, i64 0, i32 2
  br label %else.790

label.0:                                          ; preds = %fallthrough.791
  %icmp.989 = icmp slt i64 %add.97, %tmpv.2150.sroa.2.0.copyload, !dbg !2216
  br i1 %icmp.989, label %else.790, label %else.794

else.790:                                         ; preds = %else.790.lr.ph, %label.0
  %tmpv.2148.0143 = phi i64 [ 0, %else.790.lr.ph ], [ %add.97, %label.0 ]
  %ptroff.114 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2150.sroa.0.0.copyload, i64 %tmpv.2148.0143, !dbg !2216
  %tmpv.2149.sroa.0.0.cast.7435.sroa_cast = bitcast { i8*, i64 }* %ptroff.114 to i64*, !dbg !2216
  %tmpv.2149.sroa.0.0.copyload43 = load i64, i64* %tmpv.2149.sroa.0.0.cast.7435.sroa_cast, align 8, !dbg !2216
  %tmpv.2149.sroa.3.0.cast.7435.sroa_idx44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.2150.sroa.0.0.copyload, i64 %tmpv.2148.0143, i32 1, !dbg !2216
  %tmpv.2149.sroa.3.0.copyload45 = load i64, i64* %tmpv.2149.sroa.3.0.cast.7435.sroa_idx44, align 8, !dbg !2216
  call void @llvm.dbg.value(metadata i64 %tmpv.2149.sroa.0.0.copyload43, metadata !2218, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2219
  call void @llvm.dbg.value(metadata i64 %tmpv.2149.sroa.3.0.copyload45, metadata !2218, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2219
  %call.459 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !2220
  %0 = and i8 %call.459, 1, !dbg !2221
  %trunc.792 = icmp eq i8 %0, 0, !dbg !2221
  br i1 %trunc.792, label %fallthrough.791, label %then.791

then.791:                                         ; preds = %else.790
  %call.457 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2222
  store i64 %srcDir.chunk0, i64* %srcDir.addr.sroa.0.0.cast.7441.sroa_cast, align 8
  store i64 %srcDir.chunk1, i64* %srcDir.addr.sroa.3.0.cast.7441.sroa_idx102, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.457, i8* nonnull %cast.7444), !dbg !2222
  %call.458 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2222
  store i64 %tmpv.2149.sroa.0.0.copyload43, i64* %i.sroa.0.0.cast.7446.sroa_cast, align 8
  store i64 %tmpv.2149.sroa.3.0.copyload45, i64* %i.sroa.7.0.cast.7446.sroa_idx38, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.458, i8* nonnull %cast.7449), !dbg !2222
  store %_type.0* @string..d, %_type.0** %tmp.322.sroa.0.0.cast.7452.sroa_idx, align 8, !dbg !2222
  store i8* %call.457, i8** %tmp.322.sroa.2.0.cast.7452.sroa_idx103, align 8, !dbg !2222
  store %_type.0* @string..d, %_type.0** %tmp.323.sroa.0.0.cast.7454.sroa_idx, align 8, !dbg !2222
  store i8* %call.458, i8** %tmp.323.sroa.2.0.cast.7454.sroa_idx104, align 8, !dbg !2222
  br i1 %icmp.987, label %then.792, label %else.792

fallthrough.791:                                  ; preds = %else.790, %else.792
  %call.460 = call { i64, i64 } @command_line_arguments.Import(i8* nest undef, %Context.1* %ctx, i64 %tmpv.2149.sroa.0.0.copyload43, i64 %tmpv.2149.sroa.3.0.copyload45, i64 %srcDir.chunk0, i64 %srcDir.chunk1, i64 %mode, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.456), !dbg !2223
  %call.460.fca.0.extract = extractvalue { i64, i64 } %call.460, 0, !dbg !2223
  call void @llvm.dbg.value(metadata i64 %call.460.fca.0.extract, metadata !2225, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2226
  %icmp.988 = icmp eq i64 %call.460.fca.0.extract, 0, !dbg !2227
  %add.97 = add nuw nsw i64 %tmpv.2148.0143, 1, !dbg !2216
  br i1 %icmp.988, label %label.0, label %then.793

then.792:                                         ; preds = %then.791
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2228
  unreachable

else.792:                                         ; preds = %then.791
  %.field.ld.222 = load %Logger.0*, %Logger.0** %field.1796, align 8, !dbg !2228
  store %IPST.16* %cast.7458, %IPST.16** %field.1797, align 8, !dbg !2222
  store i64 2, i64* %field.1798, align 8, !dbg !2222
  store i64 2, i64* %field.1799, align 8, !dbg !2222
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.222, i64 ptrtoint ([20 x i8]* @const.606 to i64), i64 19, %IPST.2* byval nonnull %tmp.324), !dbg !2222
  br label %fallthrough.791

then.793:                                         ; preds = %fallthrough.791
  %call.460.fca.1.extract = extractvalue { i64, i64 } %call.460, 1, !dbg !2223
  call void @llvm.dbg.value(metadata i64 %call.460.fca.1.extract, metadata !2225, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2226
  call void @llvm.dbg.value(metadata %Package.0** null, metadata !2229, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2230
  call void @llvm.dbg.value(metadata i64 0, metadata !2229, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2230
  call void @llvm.dbg.value(metadata i64 0, metadata !2229, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2230
  call void @llvm.dbg.value(metadata i64 %call.460.fca.0.extract, metadata !2231, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2232
  call void @llvm.dbg.value(metadata i64 %call.460.fca.1.extract, metadata !2231, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2232
  %tmp.325.sroa.4.0.cast.7476.sroa_idx107 = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.formal.25, i64 0, i32 1, !dbg !2233
  %tmp.325.sroa.4.0.cast.7476.sroa_cast = bitcast %error.0* %tmp.325.sroa.4.0.cast.7476.sroa_idx107 to i64*, !dbg !2233
  %1 = bitcast { %IPST.9, %error.0 }* %sret.formal.25 to i8*, !dbg !2233
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 24, i1 false), !dbg !2233
  store i64 %call.460.fca.0.extract, i64* %tmp.325.sroa.4.0.cast.7476.sroa_cast, align 8, !dbg !2233
  %tmp.325.sroa.5.0.cast.7476.sroa_idx108 = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.formal.25, i64 0, i32 1, i32 1, !dbg !2233
  %tmp.325.sroa.5.0.cast.7476.sroa_cast = bitcast i8** %tmp.325.sroa.5.0.cast.7476.sroa_idx108 to i64*, !dbg !2233
  store i64 %call.460.fca.1.extract, i64* %tmp.325.sroa.5.0.cast.7476.sroa_cast, align 8, !dbg !2233
  ret void, !dbg !2233

else.794:                                         ; preds = %label.0, %entry
  %call.461 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7.1go_build.Package, i64 0, i32 0)), !dbg !2234
  %cast.7483 = bitcast i8* %call.461 to %Package.0**, !dbg !2234
  call void @llvm.dbg.value(metadata %Package.0** %cast.7483, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata i64 0, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata i64 0, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata %Package.0* null, metadata !2237, metadata !DIExpression()), !dbg !2239
  %cast.7486 = bitcast %IPST.10* %tmpv.2165 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.7486, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1go_build.Package, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.456, i8* nonnull %cast.7486), !dbg !2240
  call void @llvm.dbg.value(metadata i64 0, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata i64 0, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata %Package.0** %cast.7483, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2236
  %field.1820 = getelementptr inbounds %IPST.10, %IPST.10* %tmpv.2165, i64 0, i32 0, !dbg !2240
  %tmpv.2165.field.ld.2135 = load { i8*, i64 }*, { i8*, i64 }** %field.1820, align 8, !dbg !2240
  %icmp.1001136 = icmp eq { i8*, i64 }* %tmpv.2165.field.ld.2135, null, !dbg !2240
  br i1 %icmp.1001136, label %else.801, label %then.801.lr.ph

then.801.lr.ph:                                   ; preds = %else.794
  %field.1807 = getelementptr inbounds %IPST.10, %IPST.10* %tmpv.2165, i64 0, i32 1
  %pkgSlice.sroa.0.0.cast.7492.sroa_idx = getelementptr inbounds %IPST.9, %IPST.9* %tmpv.2167, i64 0, i32 0
  %pkgSlice.sroa.7.0.cast.7492.sroa_idx50 = getelementptr inbounds %IPST.9, %IPST.9* %tmpv.2167, i64 0, i32 1
  %pkgSlice.sroa.8.0.cast.7492.sroa_idx57 = getelementptr inbounds %IPST.9, %IPST.9* %tmpv.2167, i64 0, i32 2
  %cast.7495 = bitcast %IPST.9* %tmpv.2167 to %IPST.4*
  %tmpv.2173.sroa.0.0.cast.7500.sroa_idx = bitcast %IPST.4* %sret.actual.387 to %Package.0***
  %2 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.387, i64 0, i32 1
  %3 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.387, i64 0, i32 2
  br label %then.801

then.795:                                         ; preds = %then.801
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.387, i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_build.Package, i64 0, i32 0), %IPST.4* byval nonnull %cast.7495, i64 %add.98), !dbg !2241
  %tmpv.2173.sroa.0.0.copyload = load %Package.0**, %Package.0*** %tmpv.2173.sroa.0.0.cast.7500.sroa_idx, align 8
  %tmpv.2173.sroa.3.0.copyload = load i64, i64* %2, align 8
  %tmpv.2173.sroa.4.0.copyload = load i64, i64* %3, align 8
  br label %fallthrough.795

fallthrough.795:                                  ; preds = %else.795, %then.795
  %tmpv.2173.sroa.0.0 = phi %Package.0** [ %tmpv.2173.sroa.0.0.copyload, %then.795 ], [ %pkgSlice.sroa.0.0137, %else.795 ]
  %tmpv.2173.sroa.3.0 = phi i64 [ %tmpv.2173.sroa.3.0.copyload, %then.795 ], [ %add.98, %else.795 ]
  %tmpv.2173.sroa.4.0 = phi i64 [ %tmpv.2173.sroa.4.0.copyload, %then.795 ], [ %pkgSlice.sroa.8.0139, %else.795 ]
  store %Package.0** %tmpv.2173.sroa.0.0, %Package.0*** %pkgSlice.sroa.0.0.cast.7492.sroa_idx, align 8, !dbg !2241
  store i64 %tmpv.2173.sroa.3.0, i64* %pkgSlice.sroa.7.0.cast.7492.sroa_idx50, align 8, !dbg !2241
  store i64 %tmpv.2173.sroa.4.0, i64* %pkgSlice.sroa.8.0.cast.7492.sroa_idx57, align 8, !dbg !2241
  %icmp.997 = icmp sge i64 %pkgSlice.sroa.7.0138, %tmpv.2173.sroa.3.0, !dbg !2241
  %4 = icmp slt i64 %pkgSlice.sroa.7.0138, 0, !dbg !2241
  %ior.491 = or i1 %4, %icmp.997, !dbg !2241
  br i1 %ior.491, label %then.798, label %else.798

else.795:                                         ; preds = %then.801
  %icmp.992 = icmp sgt i64 %add.98, %pkgSlice.sroa.8.0139, !dbg !2241
  %add.98.lobit125 = or i64 %add.98, %pkgSlice.sroa.8.0139, !dbg !2241
  %5 = icmp slt i64 %add.98.lobit125, 0, !dbg !2241
  %6 = or i1 %icmp.992, %5, !dbg !2241
  br i1 %6, label %then.796, label %fallthrough.795

then.796:                                         ; preds = %else.795
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2241
  unreachable

then.798:                                         ; preds = %fallthrough.795
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2241
  unreachable

else.798:                                         ; preds = %fallthrough.795
  %ptroff.116 = getelementptr %Package.0*, %Package.0** %tmpv.2173.sroa.0.0, i64 %pkgSlice.sroa.7.0138, !dbg !2241
  %runtime.writeBarrier.ld.85 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2241
  %icmp.1000 = icmp eq i32 %runtime.writeBarrier.ld.85, 0, !dbg !2241
  br i1 %icmp.1000, label %then.799, label %else.799

then.799:                                         ; preds = %else.798
  %icmp.999 = icmp eq %Package.0** %ptroff.116, null, !dbg !2241
  br i1 %icmp.999, label %then.800, label %else.800

fallthrough.799:                                  ; preds = %else.799, %else.800
  %pkgSlice.sroa.0.0.copyload46 = load %Package.0**, %Package.0*** %pkgSlice.sroa.0.0.cast.7492.sroa_idx, align 8, !dbg !2242
  %pkgSlice.sroa.7.0.copyload52 = load i64, i64* %pkgSlice.sroa.7.0.cast.7492.sroa_idx50, align 8, !dbg !2242
  %pkgSlice.sroa.8.0.copyload59 = load i64, i64* %pkgSlice.sroa.8.0.cast.7492.sroa_idx57, align 8, !dbg !2242
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.7486), !dbg !2240
  call void @llvm.dbg.value(metadata i64 %pkgSlice.sroa.8.0.copyload59, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata i64 %pkgSlice.sroa.7.0.copyload52, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata %Package.0** %pkgSlice.sroa.0.0.copyload46, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2236
  %tmpv.2165.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.1820, align 8, !dbg !2240
  %icmp.1001 = icmp eq { i8*, i64 }* %tmpv.2165.field.ld.2, null, !dbg !2240
  br i1 %icmp.1001, label %else.801, label %then.801

else.799:                                         ; preds = %else.798
  %cast.7506 = bitcast %Package.0** %ptroff.116 to i8*, !dbg !2241
  %cast.7507 = bitcast %Package.0* %.ld.654 to i8*, !dbg !2241
  call void @runtime.writebarrierptr(i8* nest undef, i8* %cast.7506, i8* %cast.7507), !dbg !2241
  br label %fallthrough.799

then.800:                                         ; preds = %then.799
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2241
  unreachable

else.800:                                         ; preds = %then.799
  store %Package.0* %.ld.654, %Package.0** %ptroff.116, align 8, !dbg !2241
  br label %fallthrough.799

then.801:                                         ; preds = %then.801.lr.ph, %fallthrough.799
  %pkgSlice.sroa.8.0139 = phi i64 [ 0, %then.801.lr.ph ], [ %pkgSlice.sroa.8.0.copyload59, %fallthrough.799 ]
  %pkgSlice.sroa.7.0138 = phi i64 [ 0, %then.801.lr.ph ], [ %pkgSlice.sroa.7.0.copyload52, %fallthrough.799 ]
  %pkgSlice.sroa.0.0137 = phi %Package.0** [ %cast.7483, %then.801.lr.ph ], [ %pkgSlice.sroa.0.0.copyload46, %fallthrough.799 ]
  call void @llvm.dbg.value(metadata i64 %pkgSlice.sroa.8.0139, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata i64 %pkgSlice.sroa.7.0138, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata %Package.0** %pkgSlice.sroa.0.0137, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2236
  %tmpv.2165.field.ld.1 = load %Package.0**, %Package.0*** %field.1807, align 8, !dbg !2240
  %.ld.654 = load %Package.0*, %Package.0** %tmpv.2165.field.ld.1, align 8, !dbg !2240
  call void @llvm.dbg.value(metadata %Package.0* %.ld.654, metadata !2237, metadata !DIExpression()), !dbg !2239
  store %Package.0** %pkgSlice.sroa.0.0137, %Package.0*** %pkgSlice.sroa.0.0.cast.7492.sroa_idx, align 8
  store i64 %pkgSlice.sroa.7.0138, i64* %pkgSlice.sroa.7.0.cast.7492.sroa_idx50, align 8
  store i64 %pkgSlice.sroa.8.0139, i64* %pkgSlice.sroa.8.0.cast.7492.sroa_idx57, align 8
  %add.98 = add i64 %pkgSlice.sroa.7.0138, 1, !dbg !2241
  %icmp.990 = icmp ugt i64 %add.98, %pkgSlice.sroa.8.0139, !dbg !2241
  br i1 %icmp.990, label %then.795, label %else.795

else.801:                                         ; preds = %fallthrough.799, %else.794
  %pkgSlice.sroa.0.0.lcssa = phi %Package.0** [ %cast.7483, %else.794 ], [ %pkgSlice.sroa.0.0.copyload46, %fallthrough.799 ], !dbg !2243
  %pkgSlice.sroa.7.0.lcssa = phi i64 [ 0, %else.794 ], [ %pkgSlice.sroa.7.0.copyload52, %fallthrough.799 ], !dbg !2243
  %pkgSlice.sroa.8.0.lcssa = phi i64 [ 0, %else.794 ], [ %pkgSlice.sroa.8.0.copyload59, %fallthrough.799 ], !dbg !2243
  call void @llvm.dbg.value(metadata %Package.0** %pkgSlice.sroa.0.0.lcssa, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata i64 %pkgSlice.sroa.7.0.lcssa, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata i64 %pkgSlice.sroa.8.0.lcssa, metadata !2235, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2236
  call void @llvm.dbg.value(metadata %Package.0** undef, metadata !2229, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2230
  call void @llvm.dbg.value(metadata i64 undef, metadata !2229, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2230
  call void @llvm.dbg.value(metadata i64 undef, metadata !2229, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2230
  call void @llvm.dbg.value(metadata i64 0, metadata !2231, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2232
  call void @llvm.dbg.value(metadata i64 0, metadata !2231, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2232
  %tmp.327.sroa.0.0.cast.7524.sroa_idx = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.formal.25, i64 0, i32 0, i32 0, !dbg !2244
  store %Package.0** %pkgSlice.sroa.0.0.lcssa, %Package.0*** %tmp.327.sroa.0.0.cast.7524.sroa_idx, align 8, !dbg !2244
  %tmp.327.sroa.2.0.cast.7524.sroa_idx120 = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.formal.25, i64 0, i32 0, i32 1, !dbg !2244
  store i64 %pkgSlice.sroa.7.0.lcssa, i64* %tmp.327.sroa.2.0.cast.7524.sroa_idx120, align 8, !dbg !2244
  %tmp.327.sroa.3.0.cast.7524.sroa_idx121 = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.formal.25, i64 0, i32 0, i32 2, !dbg !2244
  store i64 %pkgSlice.sroa.8.0.lcssa, i64* %tmp.327.sroa.3.0.cast.7524.sroa_idx121, align 8, !dbg !2244
  %tmp.327.sroa.4.0.cast.7524.sroa_idx122 = getelementptr inbounds { %IPST.9, %error.0 }, { %IPST.9, %error.0 }* %sret.formal.25, i64 0, i32 1, !dbg !2244
  %7 = bitcast %error.0* %tmp.327.sroa.4.0.cast.7524.sroa_idx122 to i8*, !dbg !2244
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false), !dbg !2244
  ret void, !dbg !2244
}

define internal fastcc { i64, i64 } @command_line_arguments.validateXcodeInstall(%Flags.0* %f) unnamed_addr #0 !dbg !2245 {
entry:
  %sret.actual.297.i = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmp.236 = alloca %IPST.2, align 8
  %tmpv.1608 = alloca { i8*, i64 }, align 8
  %tmpv.1609 = alloca [1 x %IPST.16], align 8
  %sret.actual.296 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2247, metadata !DIExpression()), !dbg !2248
  %0 = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.297.i to i8*, !dbg !2249
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0), !dbg !2249
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2253, metadata !DIExpression()), !dbg !2249
  call void @command_line_arguments.LookPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.297.i, i8* nest undef, %Flags.0* %f, i64 ptrtoint ([6 x i8]* @const.376 to i64), i64 5), !dbg !2254
  %tmpv.1610.sroa.3.0.cast.5613.sroa_idx12.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.297.i, i64 0, i32 1, i32 0, !dbg !2254
  %tmpv.1610.sroa.3.0.copyload13.i = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1610.sroa.3.0.cast.5613.sroa_idx12.i, align 8, !dbg !2254
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1610.sroa.3.0.copyload13.i, metadata !2256, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2257
  %icmp.684.i = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1610.sroa.3.0.copyload13.i, null, !dbg !2258
  br i1 %icmp.684.i, label %else.571.i, label %then.571.i

then.571.i:                                       ; preds = %entry
  %tmpv.1610.sroa.4.0.cast.5613.sroa_idx14.i = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.297.i, i64 0, i32 1, i32 1, !dbg !2254
  %1 = bitcast i8** %tmpv.1610.sroa.4.0.cast.5613.sroa_idx14.i to i64*, !dbg !2254
  %tmpv.1610.sroa.4.0.copyload151.i = load i64, i64* %1, align 8, !dbg !2254
  call void @llvm.dbg.value(metadata i8** %tmpv.1610.sroa.4.0.cast.5613.sroa_idx14.i, metadata !2256, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2257
  %2 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1610.sroa.3.0.copyload13.i to i64, !dbg !2259
  call void @llvm.dbg.value(metadata i64 %2, metadata !2260, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2261
  call void @llvm.dbg.value(metadata i64 %tmpv.1610.sroa.4.0.copyload151.i, metadata !2260, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2261
  %ld.629.fca.0.insert.i = insertvalue { i64, i64 } undef, i64 %2, 0, !dbg !2259
  %ld.629.fca.1.insert.i = insertvalue { i64, i64 } %ld.629.fca.0.insert.i, i64 %tmpv.1610.sroa.4.0.copyload151.i, 1, !dbg !2259
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0), !dbg !2259
  br label %command_line_arguments._validateXcodeInstall.exit, !dbg !2259

else.571.i:                                       ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !2260, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2261
  call void @llvm.dbg.value(metadata i64 0, metadata !2260, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0), !dbg !2262
  br label %command_line_arguments._validateXcodeInstall.exit, !dbg !2262

command_line_arguments._validateXcodeInstall.exit: ; preds = %else.571.i, %then.571.i
  %call.3581 = phi { i64, i64 } [ %ld.629.fca.1.insert.i, %then.571.i ], [ zeroinitializer, %else.571.i ]
  %call.358.fca.0.extract = extractvalue { i64, i64 } %call.3581, 0, !dbg !2263
  call void @llvm.dbg.value(metadata i64 %call.358.fca.0.extract, metadata !2264, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2265
  %icmp.683 = icmp eq i64 %call.358.fca.0.extract, 0, !dbg !2266
  br i1 %icmp.683, label %fallthrough.570, label %then.570

then.570:                                         ; preds = %command_line_arguments._validateXcodeInstall.exit
  %call.359 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2267
  %cast.5593 = bitcast { i8*, i64 }* %tmpv.1608 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5593, i8* align 8 bitcast ({ i8*, i64 }* @const.511 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.359, i8* nonnull %cast.5593), !dbg !2267
  %tmp.235.sroa.0.0.cast.5598.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1609, i64 0, i64 0, i32 0, !dbg !2267
  store %_type.0* @string..d, %_type.0** %tmp.235.sroa.0.0.cast.5598.sroa_idx, align 8, !dbg !2267
  %tmp.235.sroa.2.0.cast.5598.sroa_idx7 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1609, i64 0, i64 0, i32 1, !dbg !2267
  store i8* %call.359, i8** %tmp.235.sroa.2.0.cast.5598.sroa_idx7, align 8, !dbg !2267
  %field.1338 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.236, i64 0, i32 0, !dbg !2267
  %cast.5600 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1609, i64 0, i64 0, !dbg !2267
  store %IPST.16* %cast.5600, %IPST.16** %field.1338, align 8, !dbg !2267
  %field.1339 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.236, i64 0, i32 1, !dbg !2267
  store i64 1, i64* %field.1339, align 8, !dbg !2267
  %field.1340 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.236, i64 0, i32 2, !dbg !2267
  store i64 1, i64* %field.1340, align 8, !dbg !2267
  call void @fmt.Println({ i64, %error.0 }* nonnull sret %sret.actual.296, i8* nest undef, %IPST.2* byval nonnull %tmp.236), !dbg !2267
  br label %fallthrough.570

fallthrough.570:                                  ; preds = %command_line_arguments._validateXcodeInstall.exit, %then.570
  call void @llvm.dbg.value(metadata i64 %call.358.fca.0.extract, metadata !2268, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2269
  ret { i64, i64 } %call.3581, !dbg !2270
}

declare { i64, i64 } @path_filepath.Dir(i8*, i64, i64) local_unnamed_addr #0

declare %Reader.3* @strings.NewReader(i8*, i64, i64) local_unnamed_addr #0

declare void @strings.Reader.Read({ i64, %error.0 }*, i8*, %Reader.3*, { i8*, i64, i64 }*) #0

define { i64, i64 } @command_line_arguments.WriteFile(i8* nest nocapture readnone %nest.35, %Flags.0* %f, i64 %filename.chunk0, i64 %filename.chunk1, i64 %r.chunk0, i64 %r.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !2271 {
entry:
  %tmp.198 = alloca %IPST.2, align 8
  %f.addr = alloca %Flags.0*, align 8
  %err = alloca %error.0, align 8
  %tmpv.1333 = alloca i8, align 1
  %tmpv.1334 = alloca i8, align 1
  %tmpv.1335 = alloca %File.1*, align 8
  %tmpv.1337 = alloca { i8*, i64 }, align 8
  %tmpv.1338 = alloca [1 x %IPST.16], align 8
  %tmpv.1345 = alloca { i8*, %Flags.0**, i8* }, align 8
  %tmpv.1348 = alloca { %__go_descriptor.9* }, align 8
  %sret.actual.243 = alloca { %File.1*, %error.0 }, align 8
  %tmpv.1360 = alloca { i8*, %File.1**, %error.0* }, align 8
  %tmpv.1363 = alloca { %__go_descriptor.9* }, align 8
  %sret.actual.244 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2274, metadata !DIExpression()), !dbg !2275
  store %Flags.0* %f, %Flags.0** %f.addr, align 8
  call void @llvm.dbg.value(metadata i64 %filename.chunk0, metadata !2276, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2277
  call void @llvm.dbg.value(metadata i64 %filename.chunk1, metadata !2276, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2277
  call void @llvm.dbg.value(metadata i64 %r.chunk0, metadata !2278, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2279
  call void @llvm.dbg.value(metadata i64 %r.chunk1, metadata !2278, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2279
  %0 = bitcast %error.0* %err to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  store i8 0, i8* %tmpv.1333, align 1
  call void @llvm.dbg.value(metadata i8 0, metadata !2280, metadata !DIExpression()), !dbg !2282
  store i8 0, i8* %tmpv.1334, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %File.1* null, metadata !2283, metadata !DIExpression()), !dbg !2285
  store %File.1* null, %File.1** %tmpv.1335, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2274, metadata !DIExpression()), !dbg !2275
  %call.288 = invoke i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f)
          to label %cont.294 unwind label %pad.6, !dbg !2286

finally.3:                                        ; preds = %pad.6, %cont.309, %cont.304, %cont.305, %cont.306, %catchpad.3
  %ehtmp.3.sroa.0.0 = phi i8* [ %ex2.3.fca.0.extract, %catchpad.3 ], [ undef, %cont.306 ], [ undef, %cont.305 ], [ undef, %cont.304 ], [ undef, %cont.309 ], [ undef, %pad.6 ]
  %ehtmp.3.sroa.2.0 = phi i32 [ %ex2.3.fca.1.extract, %catchpad.3 ], [ undef, %cont.306 ], [ undef, %cont.305 ], [ undef, %cont.304 ], [ undef, %cont.309 ], [ undef, %pad.6 ]
  %finvar.3.0 = phi i8 [ 0, %catchpad.3 ], [ 1, %cont.306 ], [ 1, %cont.305 ], [ 1, %cont.304 ], [ 1, %cont.309 ], [ 1, %pad.6 ]
  br label %finish.3

pad.6:                                            ; preds = %cont.308, %else.483, %then.482, %else.481, %cont.303, %cont.302, %fallthrough.479, %then.479, %then.478, %fallthrough.477, %then.477, %cont.295, %then.476, %entry
  %ex.6 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1333)
          to label %finally.3 unwind label %catchpad.3, !dbg !2287

cont.294:                                         ; preds = %entry
  %1 = and i8 %call.288, 1, !dbg !2288
  %trunc.477 = icmp eq i8 %1, 0, !dbg !2288
  br i1 %trunc.477, label %fallthrough.476, label %then.476

then.476:                                         ; preds = %cont.294
  %call.287 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.295 unwind label %pad.6, !dbg !2289

fallthrough.476:                                  ; preds = %fallthrough.477.fallthrough.476_crit_edge, %cont.294
  %f.ld.45 = phi %Flags.0* [ %f.ld.45.pre, %fallthrough.477.fallthrough.476_crit_edge ], [ %f, %cont.294 ], !dbg !2290
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.45, metadata !2274, metadata !DIExpression()), !dbg !2275
  %icmp.617 = icmp eq %Flags.0* %f.ld.45, null, !dbg !2291
  br i1 %icmp.617, label %then.478, label %fallthrough.478.thread

fallthrough.478.thread:                           ; preds = %fallthrough.476
  %field.110016 = getelementptr inbounds %Flags.0, %Flags.0* %f.ld.45, i64 0, i32 2, !dbg !2291
  %.field.ld.12817 = load i8, i8* %field.110016, align 1, !dbg !2291
  call void @llvm.dbg.value(metadata i8 %.field.ld.128, metadata !2280, metadata !DIExpression()), !dbg !2282
  store i8 %.field.ld.12817, i8* %tmpv.1334, align 1
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.46.pr, metadata !2274, metadata !DIExpression()), !dbg !2275
  br label %fallthrough.479

cont.295:                                         ; preds = %then.476
  %filename.addr.sroa.0.0.cast.4609.sroa_cast = bitcast { i8*, i64 }* %tmpv.1337 to i64*
  store i64 %filename.chunk0, i64* %filename.addr.sroa.0.0.cast.4609.sroa_cast, align 8
  %filename.addr.sroa.4.0.cast.4609.sroa_idx10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1337, i64 0, i32 1
  store i64 %filename.chunk1, i64* %filename.addr.sroa.4.0.cast.4609.sroa_idx10, align 8
  %cast.4612 = bitcast { i8*, i64 }* %tmpv.1337 to i8*, !dbg !2289
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.287, i8* nonnull %cast.4612)
          to label %cont.296 unwind label %pad.6, !dbg !2289

cont.296:                                         ; preds = %cont.295
  %tmp.197.sroa.0.0.cast.4614.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1338, i64 0, i64 0, i32 0, !dbg !2289
  store %_type.0* @string..d, %_type.0** %tmp.197.sroa.0.0.cast.4614.sroa_idx, align 8, !dbg !2289
  %tmp.197.sroa.2.0.cast.4614.sroa_idx12 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1338, i64 0, i64 0, i32 1, !dbg !2289
  store i8* %call.287, i8** %tmp.197.sroa.2.0.cast.4614.sroa_idx12, align 8, !dbg !2289
  %f.ld.43 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2292
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.43, metadata !2274, metadata !DIExpression()), !dbg !2275
  %icmp.616 = icmp eq %Flags.0* %f.ld.43, null, !dbg !2293
  br i1 %icmp.616, label %then.477, label %fallthrough.477

then.477:                                         ; preds = %cont.296
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.477 unwind label %pad.6, !dbg !2293

fallthrough.477:                                  ; preds = %cont.296, %then.477
  %field.1096 = getelementptr inbounds %Flags.0, %Flags.0* %f.ld.43, i64 0, i32 0, !dbg !2293
  %.field.ld.127 = load %Logger.0*, %Logger.0** %field.1096, align 8, !dbg !2293
  %field.1097 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.198, i64 0, i32 0, !dbg !2289
  %cast.4618 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1338, i64 0, i64 0, !dbg !2289
  store %IPST.16* %cast.4618, %IPST.16** %field.1097, align 8, !dbg !2289
  %field.1098 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.198, i64 0, i32 1, !dbg !2289
  store i64 1, i64* %field.1098, align 8, !dbg !2289
  %field.1099 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.198, i64 0, i32 2, !dbg !2289
  store i64 1, i64* %field.1099, align 8, !dbg !2289
  invoke void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.127, i64 ptrtoint ([10 x i8]* @const.475 to i64), i64 9, %IPST.2* byval nonnull %tmp.198)
          to label %fallthrough.477.fallthrough.476_crit_edge unwind label %pad.6, !dbg !2289

fallthrough.477.fallthrough.476_crit_edge:        ; preds = %fallthrough.477
  %f.ld.45.pre = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2290
  br label %fallthrough.476, !dbg !2289

then.478:                                         ; preds = %fallthrough.476
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.478 unwind label %pad.6, !dbg !2291

fallthrough.478:                                  ; preds = %then.478
  %f.ld.46.pr = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2294
  %.field.ld.128 = load i8, i8* inttoptr (i64 9 to i8*), align 1, !dbg !2291
  call void @llvm.dbg.value(metadata i8 %.field.ld.128, metadata !2280, metadata !DIExpression()), !dbg !2282
  store i8 %.field.ld.128, i8* %tmpv.1334, align 1
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.46.pr, metadata !2274, metadata !DIExpression()), !dbg !2275
  %icmp.618 = icmp eq %Flags.0* %f.ld.46.pr, null, !dbg !2295
  br i1 %icmp.618, label %then.479, label %fallthrough.479

then.479:                                         ; preds = %fallthrough.478
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.479 unwind label %pad.6, !dbg !2295

fallthrough.479:                                  ; preds = %fallthrough.478.thread, %fallthrough.478, %then.479
  %f.ld.4619 = phi %Flags.0* [ %f.ld.45, %fallthrough.478.thread ], [ %f.ld.46.pr, %fallthrough.478 ], [ null, %then.479 ]
  %field.1101 = getelementptr inbounds %Flags.0, %Flags.0* %f.ld.4619, i64 0, i32 2, !dbg !2295
  store i8 1, i8* %field.1101, align 1, !dbg !2296
  %field.1102 = getelementptr inbounds { i8*, %Flags.0**, i8* }, { i8*, %Flags.0**, i8* }* %tmpv.1345, i64 0, i32 0, !dbg !2297
  store i8* bitcast (void (i8*)* @command_line_arguments.WriteFile..func1 to i8*), i8** %field.1102, align 8, !dbg !2297
  %field.1103 = getelementptr inbounds { i8*, %Flags.0**, i8* }, { i8*, %Flags.0**, i8* }* %tmpv.1345, i64 0, i32 1, !dbg !2297
  store %Flags.0** %f.addr, %Flags.0*** %field.1103, align 8, !dbg !2297
  %field.1104 = getelementptr inbounds { i8*, %Flags.0**, i8* }, { i8*, %Flags.0**, i8* }* %tmpv.1345, i64 0, i32 2, !dbg !2297
  store i8* %tmpv.1334, i8** %field.1104, align 8, !dbg !2297
  %cast.4626 = bitcast { %__go_descriptor.9* }* %tmpv.1348 to i8*
  %2 = bitcast { %__go_descriptor.9* }* %tmpv.1348 to { i8*, %Flags.0**, i8* }**, !dbg !2298
  store { i8*, %Flags.0**, i8* }* %tmpv.1345, { i8*, %Flags.0**, i8* }** %2, align 8, !dbg !2298
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.1333, %__go_descriptor.27* bitcast (void (i8*, { %__go_descriptor.9* }*)* @command_line_arguments.command_line_arguments..thunk5 to %__go_descriptor.27*), i8* nonnull %cast.4626)
          to label %cont.302 unwind label %pad.6, !dbg !2298

cont.302:                                         ; preds = %fallthrough.479
  %call.289 = invoke { i64, i64 } @path_filepath.Dir(i8* nest undef, i64 %filename.chunk0, i64 %filename.chunk1)
          to label %cont.303 unwind label %pad.6, !dbg !2299

cont.303:                                         ; preds = %cont.302
  %call.289.fca.0.extract = extractvalue { i64, i64 } %call.289, 0, !dbg !2299
  %call.289.fca.1.extract = extractvalue { i64, i64 } %call.289, 1, !dbg !2299
  %f.ld.47 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2300
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.47, metadata !2274, metadata !DIExpression()), !dbg !2275
  %call.290 = invoke { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* %f.ld.47, i64 %call.289.fca.0.extract, i64 %call.289.fca.1.extract)
          to label %cont.304 unwind label %pad.6, !dbg !2301

cont.304:                                         ; preds = %cont.303
  %call.290.fca.0.extract = extractvalue { i64, i64 } %call.290, 0, !dbg !2301
  %call.290.fca.1.extract = extractvalue { i64, i64 } %call.290, 1, !dbg !2301
  %tmpv.1351.sroa.0.0.cast.4638.sroa_cast = bitcast %error.0* %err to i64*, !dbg !2302
  store i64 %call.290.fca.0.extract, i64* %tmpv.1351.sroa.0.0.cast.4638.sroa_cast, align 8, !dbg !2302
  %tmpv.1351.sroa.2.0.cast.4638.sroa_idx8 = getelementptr inbounds %error.0, %error.0* %err, i64 0, i32 1, !dbg !2302
  %tmpv.1351.sroa.2.0.cast.4638.sroa_cast = bitcast i8** %tmpv.1351.sroa.2.0.cast.4638.sroa_idx8 to i64*, !dbg !2302
  store i64 %call.290.fca.1.extract, i64* %tmpv.1351.sroa.2.0.cast.4638.sroa_cast, align 8, !dbg !2302
  %field.1106 = getelementptr inbounds %error.0, %error.0* %err, i64 0, i32 0, !dbg !2303
  %icmp.620 = icmp eq i64 %call.290.fca.0.extract, 0, !dbg !2303
  br i1 %icmp.620, label %else.481, label %finally.3

else.481:                                         ; preds = %cont.304
  %f.ld.48 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2304
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.48, metadata !2274, metadata !DIExpression()), !dbg !2275
  %call.291 = invoke i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f.ld.48)
          to label %cont.305 unwind label %pad.6, !dbg !2305

cont.305:                                         ; preds = %else.481
  %3 = and i8 %call.291, 1, !dbg !2306
  %trunc.485 = icmp eq i8 %3, 0, !dbg !2306
  br i1 %trunc.485, label %finally.3, label %then.482

then.482:                                         ; preds = %cont.305
  call void @llvm.dbg.value(metadata %File.1* null, metadata !2283, metadata !DIExpression()), !dbg !2285
  store %File.1* null, %File.1** %tmpv.1335, align 8
  invoke void @os.Create({ %File.1*, %error.0 }* nonnull sret %sret.actual.243, i8* nest undef, i64 %filename.chunk0, i64 %filename.chunk1)
          to label %cont.306 unwind label %pad.6, !dbg !2307

cont.306:                                         ; preds = %then.482
  %4 = bitcast { %File.1*, %error.0 }* %sret.actual.243 to i64*, !dbg !2307
  %tmpv.1352.sroa.0.0.copyload513 = load i64, i64* %4, align 8, !dbg !2307
  %tmpv.1352.sroa.3.0.cast.4646.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.243, i64 0, i32 1, !dbg !2307
  %tmpv.1352.sroa.3.0.cast.4646.sroa_cast = bitcast %error.0* %tmpv.1352.sroa.3.0.cast.4646.sroa_idx to i8*, !dbg !2307
  %err22 = bitcast %error.0* %err to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %err22, i8* nonnull align 8 %tmpv.1352.sroa.3.0.cast.4646.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %File.1*, %error.0 }* %sret.actual.243, metadata !2283, metadata !DIExpression(DW_OP_deref)), !dbg !2285
  %5 = bitcast %File.1** %tmpv.1335 to i64*, !dbg !2308
  store i64 %tmpv.1352.sroa.0.0.copyload513, i64* %5, align 8, !dbg !2308
  %err.field.ld.78 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %field.1106, align 8, !dbg !2309
  %icmp.621 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %err.field.ld.78, null, !dbg !2309
  br i1 %icmp.621, label %else.483, label %finally.3

else.483:                                         ; preds = %cont.306
  %field.1110 = getelementptr inbounds { i8*, %File.1**, %error.0* }, { i8*, %File.1**, %error.0* }* %tmpv.1360, i64 0, i32 0, !dbg !2310
  store i8* bitcast (void (i8*)* @command_line_arguments.WriteFile..func2 to i8*), i8** %field.1110, align 8, !dbg !2310
  %field.1111 = getelementptr inbounds { i8*, %File.1**, %error.0* }, { i8*, %File.1**, %error.0* }* %tmpv.1360, i64 0, i32 1, !dbg !2310
  store %File.1** %tmpv.1335, %File.1*** %field.1111, align 8, !dbg !2310
  %field.1112 = getelementptr inbounds { i8*, %File.1**, %error.0* }, { i8*, %File.1**, %error.0* }* %tmpv.1360, i64 0, i32 2, !dbg !2310
  store %error.0* %err, %error.0** %field.1112, align 8, !dbg !2310
  %cast.4660 = bitcast { %__go_descriptor.9* }* %tmpv.1363 to i8*
  %6 = bitcast { %__go_descriptor.9* }* %tmpv.1363 to { i8*, %File.1**, %error.0* }**, !dbg !2311
  store { i8*, %File.1**, %error.0* }* %tmpv.1360, { i8*, %File.1**, %error.0* }** %6, align 8, !dbg !2311
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.1333, %__go_descriptor.27* bitcast (void (i8*, { %__go_descriptor.9* }*)* @command_line_arguments.command_line_arguments..thunk6 to %__go_descriptor.27*), i8* nonnull %cast.4660)
          to label %cont.308 unwind label %pad.6, !dbg !2311

cont.308:                                         ; preds = %else.483
  %file.ld.01415 = load i64, i64* %5, align 8, !dbg !2312
  call void @llvm.dbg.value(metadata %File.1** %tmpv.1335, metadata !2283, metadata !DIExpression(DW_OP_deref)), !dbg !2285
  invoke void @io.Copy({ i64, %error.0 }* nonnull sret %sret.actual.244, i8* nest undef, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), i64 %file.ld.01415, i64 %r.chunk0, i64 %r.chunk1)
          to label %cont.309 unwind label %pad.6, !dbg !2313

cont.309:                                         ; preds = %cont.308
  %tmpv.1365.sroa.3.0.cast.4671.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.244, i64 0, i32 1, !dbg !2313
  %tmpv.1365.sroa.3.0.cast.4671.sroa_cast = bitcast %error.0* %tmpv.1365.sroa.3.0.cast.4671.sroa_idx to i8*, !dbg !2313
  %err24 = bitcast %error.0* %err to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %err24, i8* nonnull align 8 %tmpv.1365.sroa.3.0.cast.4671.sroa_cast, i64 16, i1 false)
  br label %finally.3

catchpad.3:                                       ; preds = %pad.6
  %ex2.3 = landingpad { i8*, i32 }
          cleanup
  %ex2.3.fca.0.extract = extractvalue { i8*, i32 } %ex2.3, 0
  %ex2.3.fca.1.extract = extractvalue { i8*, i32 } %ex2.3, 1
  br label %finally.3

pad.7:                                            ; preds = %finish.3
  %ex.7 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1333), !dbg !2287
  br label %finish.3

finish.3:                                         ; preds = %pad.7, %finally.3
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.1333)
          to label %cont.311 unwind label %pad.7, !dbg !2287

cont.311:                                         ; preds = %finish.3
  %tmpv.1333.ld.0 = load i8, i8* %tmpv.1333, align 1, !dbg !2287
  %7 = and i8 %tmpv.1333.ld.0, 1, !dbg !2287
  %trunc.486 = icmp eq i8 %7, 0, !dbg !2287
  br i1 %trunc.486, label %else.486, label %then.486

then.486:                                         ; preds = %cont.311
  %ld.496.fca.0.gep = bitcast %error.0* %err to i64*, !dbg !2287
  %ld.496.fca.0.load = load i64, i64* %ld.496.fca.0.gep, align 8, !dbg !2287
  %ld.496.fca.0.insert = insertvalue { i64, i64 } undef, i64 %ld.496.fca.0.load, 0, !dbg !2287
  %ld.496.fca.1.gep = getelementptr inbounds %error.0, %error.0* %err, i64 0, i32 1, !dbg !2287
  %8 = bitcast i8** %ld.496.fca.1.gep to i64*, !dbg !2287
  %ld.496.fca.1.load = load i64, i64* %8, align 8, !dbg !2287
  %ld.496.fca.1.insert = insertvalue { i64, i64 } %ld.496.fca.0.insert, i64 %ld.496.fca.1.load, 1, !dbg !2287
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !2287
  ret { i64, i64 } %ld.496.fca.1.insert, !dbg !2287

else.486:                                         ; preds = %cont.311
  %icmp.624 = icmp eq i8 %finvar.3.0, 1
  br i1 %icmp.624, label %finret.3, label %finres.3

finres.3:                                         ; preds = %else.486
  %excv.3.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.3.sroa.0.0, 0
  %excv.3.fca.1.insert = insertvalue { i8*, i32 } %excv.3.fca.0.insert, i32 %ehtmp.3.sroa.2.0, 1
  resume { i8*, i32 } %excv.3.fca.1.insert

finret.3:                                         ; preds = %else.486
  %ld.485.fca.0.gep = bitcast %error.0* %err to i64*, !dbg !2314
  %ld.485.fca.0.load = load i64, i64* %ld.485.fca.0.gep, align 8, !dbg !2314
  %ld.485.fca.0.insert = insertvalue { i64, i64 } undef, i64 %ld.485.fca.0.load, 0, !dbg !2314
  %ld.485.fca.1.gep = getelementptr inbounds %error.0, %error.0* %err, i64 0, i32 1, !dbg !2314
  %9 = bitcast i8** %ld.485.fca.1.gep to i64*, !dbg !2314
  %ld.485.fca.1.load = load i64, i64* %9, align 8, !dbg !2314
  %ld.485.fca.1.insert = insertvalue { i64, i64 } %ld.485.fca.0.insert, i64 %ld.485.fca.1.load, 1, !dbg !2314
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0), !dbg !2314
  ret { i64, i64 } %ld.485.fca.1.insert, !dbg !2314
}

define void @command_line_arguments.DarwinArmEnv({ %IPST.3, %error.0 }* nocapture sret %sret.formal.18, i8* nest nocapture readnone %nest.53, %Flags.0* %f) #0 !dbg !2315 {
entry:
  %tmp.252 = alloca [4 x { i8*, i64 }], align 8
  %tmp.251 = alloca [4 x { i8*, i64 }], align 8
  %tmp.250 = alloca [2 x { i8*, i64 }], align 8
  %tmp.249 = alloca [2 x { i8*, i64 }], align 8
  %clang = alloca { i8*, i64 }, align 8
  %cflags = alloca { i8*, i64 }, align 8
  %tmpv.1650.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.312 = alloca { { i8*, i64 }, { i8*, i64 }, %error.0 }, align 8
  %tmpv.1673 = alloca [8 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2318, metadata !DIExpression()), !dbg !2319
  %clang.0.sroa_cast = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast)
  %cflags.0.sroa_cast = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast)
  %tmpv.1650.sroa.0.0.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.1650.sroa.0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmpv.1650.sroa.0.0.sroa_cast, i8 0, i64 32, i1 false)
  call void @command_line_arguments.EnvClang({ { i8*, i64 }, { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.312, i8* nest undef, %Flags.0* %f, i64 ptrtoint ([9 x i8]* @const.531 to i64), i64 8), !dbg !2320
  %tmpv.1650.sroa.0.0.cast.5859.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.312 to i8*, !dbg !2320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.1650.sroa.0.0.sroa_cast, i8* nonnull align 8 %tmpv.1650.sroa.0.0.cast.5859.sroa_cast, i64 32, i1 false), !dbg !2320
  %tmpv.1650.sroa.4.0.cast.5859.sroa_idx27 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.312, i64 0, i32 2, i32 0, !dbg !2320
  %tmpv.1650.sroa.4.0.copyload28 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1650.sroa.4.0.cast.5859.sroa_idx27, align 8, !dbg !2320
  %tmpv.1650.sroa.5.0.cast.5859.sroa_idx29 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.312, i64 0, i32 2, i32 1, !dbg !2320
  %0 = bitcast i8** %tmpv.1650.sroa.5.0.cast.5859.sroa_idx29 to i64*, !dbg !2320
  %tmpv.1650.sroa.5.0.copyload3077 = load i64, i64* %0, align 8, !dbg !2320
  %clang84 = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %clang84, i8* nonnull align 8 %tmpv.1650.sroa.0.0.cast.5859.sroa_cast, i64 16, i1 false)
  %tmpv.1650.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmpv.1650.sroa.0, i64 0, i32 1
  %tmpv.1650.sroa.0.16.sroa_cast = bitcast { i8*, i64 }* %tmpv.1650.sroa.0.16.sroa_idx to i8*
  %cflags85 = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cflags85, i8* nonnull align 8 %tmpv.1650.sroa.0.16.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1650.sroa.4.0.copyload28, metadata !2322, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2323
  call void @llvm.dbg.value(metadata i8** %tmpv.1650.sroa.5.0.cast.5859.sroa_idx29, metadata !2322, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2323
  %icmp.695 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1650.sroa.4.0.copyload28, null, !dbg !2324
  br i1 %icmp.695, label %else.578, label %then.578

then.578:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !2325, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2326
  call void @llvm.dbg.value(metadata i64 0, metadata !2325, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2326
  call void @llvm.dbg.value(metadata i64 0, metadata !2325, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2326
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1650.sroa.4.0.copyload28, metadata !2327, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2328
  call void @llvm.dbg.value(metadata i8** %tmpv.1650.sroa.5.0.cast.5859.sroa_idx29, metadata !2327, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2328
  %tmp.248.sroa.4.0.cast.5884.sroa_idx71 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.18, i64 0, i32 1, i32 0, !dbg !2329
  %1 = bitcast { %IPST.3, %error.0 }* %sret.formal.18 to i8*, !dbg !2329
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 24, i1 false), !dbg !2329
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1650.sroa.4.0.copyload28, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.248.sroa.4.0.cast.5884.sroa_idx71, align 8, !dbg !2329
  %tmp.248.sroa.5.0.cast.5884.sroa_idx72 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.18, i64 0, i32 1, i32 1, !dbg !2329
  %2 = bitcast i8** %tmp.248.sroa.5.0.cast.5884.sroa_idx72 to i64*, !dbg !2329
  store i64 %tmpv.1650.sroa.5.0.copyload3077, i64* %2, align 8, !dbg !2329
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2329
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2329
  ret void, !dbg !2329

else.578:                                         ; preds = %entry
  %call.378 = call { i64, i64 } @command_line_arguments.ArchClang(i8* nest undef, i64 ptrtoint ([4 x i8]* @const.62 to i64), i64 3), !dbg !2330
  %call.378.fca.0.extract = extractvalue { i64, i64 } %call.378, 0, !dbg !2330
  %call.378.fca.1.extract = extractvalue { i64, i64 } %call.378, 1, !dbg !2330
  %call.379 = call { i64, i64 } @command_line_arguments.ArchClang(i8* nest undef, i64 ptrtoint ([4 x i8]* @const.62 to i64), i64 3), !dbg !2331
  %call.379.fca.0.extract = extractvalue { i64, i64 } %call.379, 0, !dbg !2331
  %call.379.fca.1.extract = extractvalue { i64, i64 } %call.379, 1, !dbg !2331
  %cast.5913 = bitcast [2 x { i8*, i64 }]* %tmp.249 to i8*, !dbg !2332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5913, i8* align 8 bitcast ({ i8*, i64 }* @const.47 to i8*), i64 16, i1 false), !dbg !2332
  %index.269 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.249, i64 0, i64 1, !dbg !2332
  %cast.5915 = bitcast { i8*, i64 }* %index.269 to i8*, !dbg !2332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5915, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2332
  %call.380 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.249), !dbg !2332
  %call.380.fca.0.extract = extractvalue { i64, i64 } %call.380, 0, !dbg !2332
  %call.380.fca.1.extract = extractvalue { i64, i64 } %call.380, 1, !dbg !2332
  %cast.5921 = bitcast [2 x { i8*, i64 }]* %tmp.250 to i8*, !dbg !2333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5921, i8* align 8 bitcast ({ i8*, i64 }* @const.49 to i8*), i64 16, i1 false), !dbg !2333
  %index.271 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.250, i64 0, i64 1, !dbg !2333
  %cast.5923 = bitcast { i8*, i64 }* %index.271 to i8*, !dbg !2333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5923, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2333
  %call.381 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.250), !dbg !2333
  %call.381.fca.0.extract = extractvalue { i64, i64 } %call.381, 0, !dbg !2333
  %call.381.fca.1.extract = extractvalue { i64, i64 } %call.381, 1, !dbg !2333
  %cast.5929 = bitcast [4 x { i8*, i64 }]* %tmp.251 to i8*, !dbg !2334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5929, i8* align 8 bitcast ({ i8*, i64 }* @const.51 to i8*), i64 16, i1 false), !dbg !2334
  %index.273 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.251, i64 0, i64 1, !dbg !2334
  %cast.5931 = bitcast { i8*, i64 }* %index.273 to i8*, !dbg !2334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5931, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2334
  %index.274 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.251, i64 0, i64 2, !dbg !2334
  %cast.5933 = bitcast { i8*, i64 }* %index.274 to i8*, !dbg !2334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5933, i8* align 8 bitcast ({ i8*, i64 }* @const.534 to i8*), i64 16, i1 false), !dbg !2334
  %tmpv.1656.sroa.0.0.cast.5935.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.251, i64 0, i64 3, !dbg !2334
  %tmpv.1656.sroa.0.0.cast.5935.sroa_cast = bitcast { i8*, i64 }* %tmpv.1656.sroa.0.0.cast.5935.sroa_idx to i64*, !dbg !2334
  store i64 %call.378.fca.0.extract, i64* %tmpv.1656.sroa.0.0.cast.5935.sroa_cast, align 8, !dbg !2334
  %tmpv.1656.sroa.2.0.cast.5935.sroa_idx14 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.251, i64 0, i64 3, i32 1, !dbg !2334
  store i64 %call.378.fca.1.extract, i64* %tmpv.1656.sroa.2.0.cast.5935.sroa_idx14, align 8, !dbg !2334
  %call.382 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.251), !dbg !2334
  %call.382.fca.0.extract = extractvalue { i64, i64 } %call.382, 0, !dbg !2334
  %call.382.fca.1.extract = extractvalue { i64, i64 } %call.382, 1, !dbg !2334
  %cast.5941 = bitcast [4 x { i8*, i64 }]* %tmp.252 to i8*, !dbg !2335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5941, i8* align 8 bitcast ({ i8*, i64 }* @const.55 to i8*), i64 16, i1 false), !dbg !2335
  %index.277 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.252, i64 0, i64 1, !dbg !2335
  %cast.5943 = bitcast { i8*, i64 }* %index.277 to i8*, !dbg !2335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5943, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2335
  %index.278 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.252, i64 0, i64 2, !dbg !2335
  %cast.5945 = bitcast { i8*, i64 }* %index.278 to i8*, !dbg !2335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5945, i8* align 8 bitcast ({ i8*, i64 }* @const.534 to i8*), i64 16, i1 false), !dbg !2335
  %tmpv.1657.sroa.0.0.cast.5947.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.252, i64 0, i64 3, !dbg !2335
  %tmpv.1657.sroa.0.0.cast.5947.sroa_cast = bitcast { i8*, i64 }* %tmpv.1657.sroa.0.0.cast.5947.sroa_idx to i64*, !dbg !2335
  store i64 %call.379.fca.0.extract, i64* %tmpv.1657.sroa.0.0.cast.5947.sroa_cast, align 8, !dbg !2335
  %tmpv.1657.sroa.2.0.cast.5947.sroa_idx12 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.252, i64 0, i64 3, i32 1, !dbg !2335
  store i64 %call.379.fca.1.extract, i64* %tmpv.1657.sroa.2.0.cast.5947.sroa_idx12, align 8, !dbg !2335
  %call.383 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.252), !dbg !2335
  %call.383.fca.0.extract = extractvalue { i64, i64 } %call.383, 0, !dbg !2335
  %call.383.fca.1.extract = extractvalue { i64, i64 } %call.383, 1, !dbg !2335
  %call.384 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i64 0, i32 0)), !dbg !2336
  %cast.5957 = bitcast [8 x { i8*, i64 }]* %tmpv.1673 to i8*, !dbg !2336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5957, i8* align 8 bitcast ({ i8*, i64 }* @const.536 to i8*), i64 16, i1 false), !dbg !2336
  %index.281 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 1, !dbg !2336
  %cast.5959 = bitcast { i8*, i64 }* %index.281 to i8*, !dbg !2336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5959, i8* align 8 bitcast ({ i8*, i64 }* @const.538 to i8*), i64 16, i1 false), !dbg !2336
  %index.282 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 2, !dbg !2336
  %cast.5961 = bitcast { i8*, i64 }* %index.282 to i8*, !dbg !2336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5961, i8* align 8 bitcast ({ i8*, i64 }* @const.64 to i8*), i64 16, i1 false), !dbg !2336
  %tmpv.1667.sroa.0.0.cast.5963.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 3, !dbg !2336
  %tmpv.1667.sroa.0.0.cast.5963.sroa_cast = bitcast { i8*, i64 }* %tmpv.1667.sroa.0.0.cast.5963.sroa_idx to i64*, !dbg !2336
  store i64 %call.380.fca.0.extract, i64* %tmpv.1667.sroa.0.0.cast.5963.sroa_cast, align 8, !dbg !2336
  %tmpv.1667.sroa.2.0.cast.5963.sroa_idx10 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 3, i32 1, !dbg !2336
  store i64 %call.380.fca.1.extract, i64* %tmpv.1667.sroa.2.0.cast.5963.sroa_idx10, align 8, !dbg !2336
  %tmpv.1668.sroa.0.0.cast.5965.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 4, !dbg !2336
  %tmpv.1668.sroa.0.0.cast.5965.sroa_cast = bitcast { i8*, i64 }* %tmpv.1668.sroa.0.0.cast.5965.sroa_idx to i64*, !dbg !2336
  store i64 %call.381.fca.0.extract, i64* %tmpv.1668.sroa.0.0.cast.5965.sroa_cast, align 8, !dbg !2336
  %tmpv.1668.sroa.2.0.cast.5965.sroa_idx8 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 4, i32 1, !dbg !2336
  store i64 %call.381.fca.1.extract, i64* %tmpv.1668.sroa.2.0.cast.5965.sroa_idx8, align 8, !dbg !2336
  %tmpv.1669.sroa.0.0.cast.5967.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 5, !dbg !2336
  %tmpv.1669.sroa.0.0.cast.5967.sroa_cast = bitcast { i8*, i64 }* %tmpv.1669.sroa.0.0.cast.5967.sroa_idx to i64*, !dbg !2336
  store i64 %call.382.fca.0.extract, i64* %tmpv.1669.sroa.0.0.cast.5967.sroa_cast, align 8, !dbg !2336
  %tmpv.1669.sroa.2.0.cast.5967.sroa_idx6 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 5, i32 1, !dbg !2336
  store i64 %call.382.fca.1.extract, i64* %tmpv.1669.sroa.2.0.cast.5967.sroa_idx6, align 8, !dbg !2336
  %tmpv.1670.sroa.0.0.cast.5969.sroa_idx = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 6, !dbg !2336
  %tmpv.1670.sroa.0.0.cast.5969.sroa_cast = bitcast { i8*, i64 }* %tmpv.1670.sroa.0.0.cast.5969.sroa_idx to i64*, !dbg !2336
  store i64 %call.383.fca.0.extract, i64* %tmpv.1670.sroa.0.0.cast.5969.sroa_cast, align 8, !dbg !2336
  %tmpv.1670.sroa.2.0.cast.5969.sroa_idx4 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 6, i32 1, !dbg !2336
  store i64 %call.383.fca.1.extract, i64* %tmpv.1670.sroa.2.0.cast.5969.sroa_idx4, align 8, !dbg !2336
  %index.287 = getelementptr inbounds [8 x { i8*, i64 }], [8 x { i8*, i64 }]* %tmpv.1673, i64 0, i64 7, !dbg !2336
  %cast.5971 = bitcast { i8*, i64 }* %index.287 to i8*, !dbg !2336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5971, i8* align 8 bitcast ({ i8*, i64 }* @const.59 to i8*), i64 16, i1 false), !dbg !2336
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i64 0, i32 0), i8* %call.384, i8* nonnull %cast.5957), !dbg !2336
  call void @llvm.dbg.value(metadata i8* %call.384, metadata !2325, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2326
  call void @llvm.dbg.value(metadata i64 8, metadata !2325, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2326
  call void @llvm.dbg.value(metadata i64 8, metadata !2325, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2326
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2327, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2328
  call void @llvm.dbg.value(metadata i8* null, metadata !2327, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2328
  %3 = bitcast { %IPST.3, %error.0 }* %sret.formal.18 to i8**, !dbg !2337
  store i8* %call.384, i8** %3, align 8, !dbg !2337
  %tmp.253.sroa.2.0.cast.5987.sroa_idx73 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.18, i64 0, i32 0, i32 1, !dbg !2337
  store i64 8, i64* %tmp.253.sroa.2.0.cast.5987.sroa_idx73, align 8, !dbg !2337
  %tmp.253.sroa.3.0.cast.5987.sroa_idx74 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.18, i64 0, i32 0, i32 2, !dbg !2337
  store i64 8, i64* %tmp.253.sroa.3.0.cast.5987.sroa_idx74, align 8, !dbg !2337
  %tmp.253.sroa.4.0.cast.5987.sroa_idx75 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.18, i64 0, i32 1, i32 0, !dbg !2337
  %4 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.253.sroa.4.0.cast.5987.sroa_idx75 to i8*, !dbg !2337
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false), !dbg !2337
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2337
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2337
  ret void, !dbg !2337
}

define void @command_line_arguments.DarwinArm64Env({ %IPST.3, %error.0 }* nocapture sret %sret.formal.19, i8* nest nocapture readnone %nest.54, %Flags.0* %f) #0 !dbg !2338 {
entry:
  %tmp.258 = alloca [4 x { i8*, i64 }], align 8
  %tmp.257 = alloca [4 x { i8*, i64 }], align 8
  %tmp.256 = alloca [2 x { i8*, i64 }], align 8
  %tmp.255 = alloca [2 x { i8*, i64 }], align 8
  %clang = alloca { i8*, i64 }, align 8
  %cflags = alloca { i8*, i64 }, align 8
  %tmpv.1676.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.319 = alloca { { i8*, i64 }, { i8*, i64 }, %error.0 }, align 8
  %tmpv.1698 = alloca [7 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2339, metadata !DIExpression()), !dbg !2340
  %clang.0.sroa_cast = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast)
  %cflags.0.sroa_cast = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast)
  %tmpv.1676.sroa.0.0.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.1676.sroa.0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmpv.1676.sroa.0.0.sroa_cast, i8 0, i64 32, i1 false)
  call void @command_line_arguments.EnvClang({ { i8*, i64 }, { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.319, i8* nest undef, %Flags.0* %f, i64 ptrtoint ([9 x i8]* @const.531 to i64), i64 8), !dbg !2341
  %tmpv.1676.sroa.0.0.cast.5997.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.319 to i8*, !dbg !2341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.1676.sroa.0.0.sroa_cast, i8* nonnull align 8 %tmpv.1676.sroa.0.0.cast.5997.sroa_cast, i64 32, i1 false), !dbg !2341
  %tmpv.1676.sroa.4.0.cast.5997.sroa_idx27 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.319, i64 0, i32 2, i32 0, !dbg !2341
  %tmpv.1676.sroa.4.0.copyload28 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1676.sroa.4.0.cast.5997.sroa_idx27, align 8, !dbg !2341
  %tmpv.1676.sroa.5.0.cast.5997.sroa_idx29 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.319, i64 0, i32 2, i32 1, !dbg !2341
  %0 = bitcast i8** %tmpv.1676.sroa.5.0.cast.5997.sroa_idx29 to i64*, !dbg !2341
  %tmpv.1676.sroa.5.0.copyload3077 = load i64, i64* %0, align 8, !dbg !2341
  %clang84 = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %clang84, i8* nonnull align 8 %tmpv.1676.sroa.0.0.cast.5997.sroa_cast, i64 16, i1 false)
  %tmpv.1676.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmpv.1676.sroa.0, i64 0, i32 1
  %tmpv.1676.sroa.0.16.sroa_cast = bitcast { i8*, i64 }* %tmpv.1676.sroa.0.16.sroa_idx to i8*
  %cflags85 = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cflags85, i8* nonnull align 8 %tmpv.1676.sroa.0.16.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1676.sroa.4.0.copyload28, metadata !2343, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2344
  call void @llvm.dbg.value(metadata i8** %tmpv.1676.sroa.5.0.cast.5997.sroa_idx29, metadata !2343, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2344
  %icmp.696 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1676.sroa.4.0.copyload28, null, !dbg !2345
  br i1 %icmp.696, label %else.579, label %then.579

then.579:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !2346, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2347
  call void @llvm.dbg.value(metadata i64 0, metadata !2346, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2347
  call void @llvm.dbg.value(metadata i64 0, metadata !2346, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2347
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1676.sroa.4.0.copyload28, metadata !2348, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2349
  call void @llvm.dbg.value(metadata i8** %tmpv.1676.sroa.5.0.cast.5997.sroa_idx29, metadata !2348, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2349
  %tmp.254.sroa.4.0.cast.6022.sroa_idx71 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.19, i64 0, i32 1, i32 0, !dbg !2350
  %1 = bitcast { %IPST.3, %error.0 }* %sret.formal.19 to i8*, !dbg !2350
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 24, i1 false), !dbg !2350
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1676.sroa.4.0.copyload28, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.254.sroa.4.0.cast.6022.sroa_idx71, align 8, !dbg !2350
  %tmp.254.sroa.5.0.cast.6022.sroa_idx72 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.19, i64 0, i32 1, i32 1, !dbg !2350
  %2 = bitcast i8** %tmp.254.sroa.5.0.cast.6022.sroa_idx72 to i64*, !dbg !2350
  store i64 %tmpv.1676.sroa.5.0.copyload3077, i64* %2, align 8, !dbg !2350
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2350
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2350
  ret void, !dbg !2350

else.579:                                         ; preds = %entry
  %call.385 = call { i64, i64 } @command_line_arguments.ArchClang(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.91 to i64), i64 5), !dbg !2351
  %call.385.fca.0.extract = extractvalue { i64, i64 } %call.385, 0, !dbg !2351
  %call.385.fca.1.extract = extractvalue { i64, i64 } %call.385, 1, !dbg !2351
  %call.386 = call { i64, i64 } @command_line_arguments.ArchClang(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.91 to i64), i64 5), !dbg !2352
  %call.386.fca.0.extract = extractvalue { i64, i64 } %call.386, 0, !dbg !2352
  %call.386.fca.1.extract = extractvalue { i64, i64 } %call.386, 1, !dbg !2352
  %cast.6049 = bitcast [2 x { i8*, i64 }]* %tmp.255 to i8*, !dbg !2353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6049, i8* align 8 bitcast ({ i8*, i64 }* @const.47 to i8*), i64 16, i1 false), !dbg !2353
  %index.289 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.255, i64 0, i64 1, !dbg !2353
  %cast.6051 = bitcast { i8*, i64 }* %index.289 to i8*, !dbg !2353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6051, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2353
  %call.387 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.255), !dbg !2353
  %call.387.fca.0.extract = extractvalue { i64, i64 } %call.387, 0, !dbg !2353
  %call.387.fca.1.extract = extractvalue { i64, i64 } %call.387, 1, !dbg !2353
  %cast.6057 = bitcast [2 x { i8*, i64 }]* %tmp.256 to i8*, !dbg !2354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6057, i8* align 8 bitcast ({ i8*, i64 }* @const.49 to i8*), i64 16, i1 false), !dbg !2354
  %index.291 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.256, i64 0, i64 1, !dbg !2354
  %cast.6059 = bitcast { i8*, i64 }* %index.291 to i8*, !dbg !2354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6059, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2354
  %call.388 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.256), !dbg !2354
  %call.388.fca.0.extract = extractvalue { i64, i64 } %call.388, 0, !dbg !2354
  %call.388.fca.1.extract = extractvalue { i64, i64 } %call.388, 1, !dbg !2354
  %cast.6065 = bitcast [4 x { i8*, i64 }]* %tmp.257 to i8*, !dbg !2355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6065, i8* align 8 bitcast ({ i8*, i64 }* @const.51 to i8*), i64 16, i1 false), !dbg !2355
  %index.293 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.257, i64 0, i64 1, !dbg !2355
  %cast.6067 = bitcast { i8*, i64 }* %index.293 to i8*, !dbg !2355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6067, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2355
  %index.294 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.257, i64 0, i64 2, !dbg !2355
  %cast.6069 = bitcast { i8*, i64 }* %index.294 to i8*, !dbg !2355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6069, i8* align 8 bitcast ({ i8*, i64 }* @const.534 to i8*), i64 16, i1 false), !dbg !2355
  %tmpv.1682.sroa.0.0.cast.6071.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.257, i64 0, i64 3, !dbg !2355
  %tmpv.1682.sroa.0.0.cast.6071.sroa_cast = bitcast { i8*, i64 }* %tmpv.1682.sroa.0.0.cast.6071.sroa_idx to i64*, !dbg !2355
  store i64 %call.385.fca.0.extract, i64* %tmpv.1682.sroa.0.0.cast.6071.sroa_cast, align 8, !dbg !2355
  %tmpv.1682.sroa.2.0.cast.6071.sroa_idx14 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.257, i64 0, i64 3, i32 1, !dbg !2355
  store i64 %call.385.fca.1.extract, i64* %tmpv.1682.sroa.2.0.cast.6071.sroa_idx14, align 8, !dbg !2355
  %call.389 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.257), !dbg !2355
  %call.389.fca.0.extract = extractvalue { i64, i64 } %call.389, 0, !dbg !2355
  %call.389.fca.1.extract = extractvalue { i64, i64 } %call.389, 1, !dbg !2355
  %cast.6077 = bitcast [4 x { i8*, i64 }]* %tmp.258 to i8*, !dbg !2356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6077, i8* align 8 bitcast ({ i8*, i64 }* @const.55 to i8*), i64 16, i1 false), !dbg !2356
  %index.297 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.258, i64 0, i64 1, !dbg !2356
  %cast.6079 = bitcast { i8*, i64 }* %index.297 to i8*, !dbg !2356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6079, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2356
  %index.298 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.258, i64 0, i64 2, !dbg !2356
  %cast.6081 = bitcast { i8*, i64 }* %index.298 to i8*, !dbg !2356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6081, i8* align 8 bitcast ({ i8*, i64 }* @const.534 to i8*), i64 16, i1 false), !dbg !2356
  %tmpv.1683.sroa.0.0.cast.6083.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.258, i64 0, i64 3, !dbg !2356
  %tmpv.1683.sroa.0.0.cast.6083.sroa_cast = bitcast { i8*, i64 }* %tmpv.1683.sroa.0.0.cast.6083.sroa_idx to i64*, !dbg !2356
  store i64 %call.386.fca.0.extract, i64* %tmpv.1683.sroa.0.0.cast.6083.sroa_cast, align 8, !dbg !2356
  %tmpv.1683.sroa.2.0.cast.6083.sroa_idx12 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.258, i64 0, i64 3, i32 1, !dbg !2356
  store i64 %call.386.fca.1.extract, i64* %tmpv.1683.sroa.2.0.cast.6083.sroa_idx12, align 8, !dbg !2356
  %call.390 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.258), !dbg !2356
  %call.390.fca.0.extract = extractvalue { i64, i64 } %call.390, 0, !dbg !2356
  %call.390.fca.1.extract = extractvalue { i64, i64 } %call.390, 1, !dbg !2356
  %call.391 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...67x.7string, i64 0, i32 0)), !dbg !2357
  %cast.6095 = bitcast [7 x { i8*, i64 }]* %tmpv.1698 to i8*, !dbg !2357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6095, i8* align 8 bitcast ({ i8*, i64 }* @const.536 to i8*), i64 16, i1 false), !dbg !2357
  %index.301 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 1, !dbg !2357
  %cast.6097 = bitcast { i8*, i64 }* %index.301 to i8*, !dbg !2357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6097, i8* align 8 bitcast ({ i8*, i64 }* @const.540 to i8*), i64 16, i1 false), !dbg !2357
  %tmpv.1692.sroa.0.0.cast.6099.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 2, !dbg !2357
  %tmpv.1692.sroa.0.0.cast.6099.sroa_cast = bitcast { i8*, i64 }* %tmpv.1692.sroa.0.0.cast.6099.sroa_idx to i64*, !dbg !2357
  store i64 %call.387.fca.0.extract, i64* %tmpv.1692.sroa.0.0.cast.6099.sroa_cast, align 8, !dbg !2357
  %tmpv.1692.sroa.2.0.cast.6099.sroa_idx10 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 2, i32 1, !dbg !2357
  store i64 %call.387.fca.1.extract, i64* %tmpv.1692.sroa.2.0.cast.6099.sroa_idx10, align 8, !dbg !2357
  %tmpv.1693.sroa.0.0.cast.6101.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 3, !dbg !2357
  %tmpv.1693.sroa.0.0.cast.6101.sroa_cast = bitcast { i8*, i64 }* %tmpv.1693.sroa.0.0.cast.6101.sroa_idx to i64*, !dbg !2357
  store i64 %call.388.fca.0.extract, i64* %tmpv.1693.sroa.0.0.cast.6101.sroa_cast, align 8, !dbg !2357
  %tmpv.1693.sroa.2.0.cast.6101.sroa_idx8 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 3, i32 1, !dbg !2357
  store i64 %call.388.fca.1.extract, i64* %tmpv.1693.sroa.2.0.cast.6101.sroa_idx8, align 8, !dbg !2357
  %tmpv.1694.sroa.0.0.cast.6103.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 4, !dbg !2357
  %tmpv.1694.sroa.0.0.cast.6103.sroa_cast = bitcast { i8*, i64 }* %tmpv.1694.sroa.0.0.cast.6103.sroa_idx to i64*, !dbg !2357
  store i64 %call.389.fca.0.extract, i64* %tmpv.1694.sroa.0.0.cast.6103.sroa_cast, align 8, !dbg !2357
  %tmpv.1694.sroa.2.0.cast.6103.sroa_idx6 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 4, i32 1, !dbg !2357
  store i64 %call.389.fca.1.extract, i64* %tmpv.1694.sroa.2.0.cast.6103.sroa_idx6, align 8, !dbg !2357
  %tmpv.1695.sroa.0.0.cast.6105.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 5, !dbg !2357
  %tmpv.1695.sroa.0.0.cast.6105.sroa_cast = bitcast { i8*, i64 }* %tmpv.1695.sroa.0.0.cast.6105.sroa_idx to i64*, !dbg !2357
  store i64 %call.390.fca.0.extract, i64* %tmpv.1695.sroa.0.0.cast.6105.sroa_cast, align 8, !dbg !2357
  %tmpv.1695.sroa.2.0.cast.6105.sroa_idx4 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 5, i32 1, !dbg !2357
  store i64 %call.390.fca.1.extract, i64* %tmpv.1695.sroa.2.0.cast.6105.sroa_idx4, align 8, !dbg !2357
  %index.306 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1698, i64 0, i64 6, !dbg !2357
  %cast.6107 = bitcast { i8*, i64 }* %index.306 to i8*, !dbg !2357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6107, i8* align 8 bitcast ({ i8*, i64 }* @const.59 to i8*), i64 16, i1 false), !dbg !2357
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...67x.7string, i64 0, i32 0), i8* %call.391, i8* nonnull %cast.6095), !dbg !2357
  call void @llvm.dbg.value(metadata i8* %call.391, metadata !2346, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2347
  call void @llvm.dbg.value(metadata i64 7, metadata !2346, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2347
  call void @llvm.dbg.value(metadata i64 7, metadata !2346, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2347
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2348, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2349
  call void @llvm.dbg.value(metadata i8* null, metadata !2348, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2349
  %3 = bitcast { %IPST.3, %error.0 }* %sret.formal.19 to i8**, !dbg !2358
  store i8* %call.391, i8** %3, align 8, !dbg !2358
  %tmp.259.sroa.2.0.cast.6123.sroa_idx73 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.19, i64 0, i32 0, i32 1, !dbg !2358
  store i64 7, i64* %tmp.259.sroa.2.0.cast.6123.sroa_idx73, align 8, !dbg !2358
  %tmp.259.sroa.3.0.cast.6123.sroa_idx74 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.19, i64 0, i32 0, i32 2, !dbg !2358
  store i64 7, i64* %tmp.259.sroa.3.0.cast.6123.sroa_idx74, align 8, !dbg !2358
  %tmp.259.sroa.4.0.cast.6123.sroa_idx75 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.19, i64 0, i32 1, i32 0, !dbg !2358
  %4 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.259.sroa.4.0.cast.6123.sroa_idx75 to i8*, !dbg !2358
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false), !dbg !2358
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2358
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2358
  ret void, !dbg !2358
}

define void @command_line_arguments.Darwin386Env({ %IPST.3, %error.0 }* nocapture sret %sret.formal.20, i8* nest nocapture readnone %nest.55, %Flags.0* %f) #0 !dbg !2359 {
entry:
  %tmp.264 = alloca [4 x { i8*, i64 }], align 8
  %tmp.263 = alloca [4 x { i8*, i64 }], align 8
  %tmp.262 = alloca [2 x { i8*, i64 }], align 8
  %tmp.261 = alloca [2 x { i8*, i64 }], align 8
  %clang = alloca { i8*, i64 }, align 8
  %cflags = alloca { i8*, i64 }, align 8
  %tmpv.1701.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.326 = alloca { { i8*, i64 }, { i8*, i64 }, %error.0 }, align 8
  %tmpv.1723 = alloca [7 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2360, metadata !DIExpression()), !dbg !2361
  %clang.0.sroa_cast = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast)
  %cflags.0.sroa_cast = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast)
  %tmpv.1701.sroa.0.0.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.1701.sroa.0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmpv.1701.sroa.0.0.sroa_cast, i8 0, i64 32, i1 false)
  call void @command_line_arguments.EnvClang({ { i8*, i64 }, { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.326, i8* nest undef, %Flags.0* %f, i64 ptrtoint ([16 x i8]* @const.542 to i64), i64 15), !dbg !2362
  %tmpv.1701.sroa.0.0.cast.6133.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.326 to i8*, !dbg !2362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.1701.sroa.0.0.sroa_cast, i8* nonnull align 8 %tmpv.1701.sroa.0.0.cast.6133.sroa_cast, i64 32, i1 false), !dbg !2362
  %tmpv.1701.sroa.4.0.cast.6133.sroa_idx27 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.326, i64 0, i32 2, i32 0, !dbg !2362
  %tmpv.1701.sroa.4.0.copyload28 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1701.sroa.4.0.cast.6133.sroa_idx27, align 8, !dbg !2362
  %tmpv.1701.sroa.5.0.cast.6133.sroa_idx29 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.326, i64 0, i32 2, i32 1, !dbg !2362
  %0 = bitcast i8** %tmpv.1701.sroa.5.0.cast.6133.sroa_idx29 to i64*, !dbg !2362
  %tmpv.1701.sroa.5.0.copyload3077 = load i64, i64* %0, align 8, !dbg !2362
  %clang84 = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %clang84, i8* nonnull align 8 %tmpv.1701.sroa.0.0.cast.6133.sroa_cast, i64 16, i1 false)
  %tmpv.1701.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmpv.1701.sroa.0, i64 0, i32 1
  %tmpv.1701.sroa.0.16.sroa_cast = bitcast { i8*, i64 }* %tmpv.1701.sroa.0.16.sroa_idx to i8*
  %cflags85 = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cflags85, i8* nonnull align 8 %tmpv.1701.sroa.0.16.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1701.sroa.4.0.copyload28, metadata !2364, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2365
  call void @llvm.dbg.value(metadata i8** %tmpv.1701.sroa.5.0.cast.6133.sroa_idx29, metadata !2364, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2365
  %icmp.697 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1701.sroa.4.0.copyload28, null, !dbg !2366
  br i1 %icmp.697, label %else.580, label %then.580

then.580:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !2367, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2368
  call void @llvm.dbg.value(metadata i64 0, metadata !2367, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2368
  call void @llvm.dbg.value(metadata i64 0, metadata !2367, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2368
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1701.sroa.4.0.copyload28, metadata !2369, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2370
  call void @llvm.dbg.value(metadata i8** %tmpv.1701.sroa.5.0.cast.6133.sroa_idx29, metadata !2369, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2370
  %tmp.260.sroa.4.0.cast.6158.sroa_idx71 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.20, i64 0, i32 1, i32 0, !dbg !2371
  %1 = bitcast { %IPST.3, %error.0 }* %sret.formal.20 to i8*, !dbg !2371
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 24, i1 false), !dbg !2371
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1701.sroa.4.0.copyload28, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.260.sroa.4.0.cast.6158.sroa_idx71, align 8, !dbg !2371
  %tmp.260.sroa.5.0.cast.6158.sroa_idx72 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.20, i64 0, i32 1, i32 1, !dbg !2371
  %2 = bitcast i8** %tmp.260.sroa.5.0.cast.6158.sroa_idx72 to i64*, !dbg !2371
  store i64 %tmpv.1701.sroa.5.0.copyload3077, i64* %2, align 8, !dbg !2371
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2371
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2371
  ret void, !dbg !2371

else.580:                                         ; preds = %entry
  %call.392 = call { i64, i64 } @command_line_arguments.ArchClang(i8* nest undef, i64 ptrtoint ([4 x i8]* @const.97 to i64), i64 3), !dbg !2372
  %call.392.fca.0.extract = extractvalue { i64, i64 } %call.392, 0, !dbg !2372
  %call.392.fca.1.extract = extractvalue { i64, i64 } %call.392, 1, !dbg !2372
  %call.393 = call { i64, i64 } @command_line_arguments.ArchClang(i8* nest undef, i64 ptrtoint ([4 x i8]* @const.97 to i64), i64 3), !dbg !2373
  %call.393.fca.0.extract = extractvalue { i64, i64 } %call.393, 0, !dbg !2373
  %call.393.fca.1.extract = extractvalue { i64, i64 } %call.393, 1, !dbg !2373
  %cast.6185 = bitcast [2 x { i8*, i64 }]* %tmp.261 to i8*, !dbg !2374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6185, i8* align 8 bitcast ({ i8*, i64 }* @const.47 to i8*), i64 16, i1 false), !dbg !2374
  %index.308 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.261, i64 0, i64 1, !dbg !2374
  %cast.6187 = bitcast { i8*, i64 }* %index.308 to i8*, !dbg !2374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6187, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2374
  %call.394 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.261), !dbg !2374
  %call.394.fca.0.extract = extractvalue { i64, i64 } %call.394, 0, !dbg !2374
  %call.394.fca.1.extract = extractvalue { i64, i64 } %call.394, 1, !dbg !2374
  %cast.6193 = bitcast [2 x { i8*, i64 }]* %tmp.262 to i8*, !dbg !2375
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6193, i8* align 8 bitcast ({ i8*, i64 }* @const.49 to i8*), i64 16, i1 false), !dbg !2375
  %index.310 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.262, i64 0, i64 1, !dbg !2375
  %cast.6195 = bitcast { i8*, i64 }* %index.310 to i8*, !dbg !2375
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6195, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2375
  %call.395 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.262), !dbg !2375
  %call.395.fca.0.extract = extractvalue { i64, i64 } %call.395, 0, !dbg !2375
  %call.395.fca.1.extract = extractvalue { i64, i64 } %call.395, 1, !dbg !2375
  %cast.6201 = bitcast [4 x { i8*, i64 }]* %tmp.263 to i8*, !dbg !2376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6201, i8* align 8 bitcast ({ i8*, i64 }* @const.51 to i8*), i64 16, i1 false), !dbg !2376
  %index.312 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.263, i64 0, i64 1, !dbg !2376
  %cast.6203 = bitcast { i8*, i64 }* %index.312 to i8*, !dbg !2376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6203, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2376
  %index.313 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.263, i64 0, i64 2, !dbg !2376
  %cast.6205 = bitcast { i8*, i64 }* %index.313 to i8*, !dbg !2376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6205, i8* align 8 bitcast ({ i8*, i64 }* @const.545 to i8*), i64 16, i1 false), !dbg !2376
  %tmpv.1707.sroa.0.0.cast.6207.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.263, i64 0, i64 3, !dbg !2376
  %tmpv.1707.sroa.0.0.cast.6207.sroa_cast = bitcast { i8*, i64 }* %tmpv.1707.sroa.0.0.cast.6207.sroa_idx to i64*, !dbg !2376
  store i64 %call.392.fca.0.extract, i64* %tmpv.1707.sroa.0.0.cast.6207.sroa_cast, align 8, !dbg !2376
  %tmpv.1707.sroa.2.0.cast.6207.sroa_idx14 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.263, i64 0, i64 3, i32 1, !dbg !2376
  store i64 %call.392.fca.1.extract, i64* %tmpv.1707.sroa.2.0.cast.6207.sroa_idx14, align 8, !dbg !2376
  %call.396 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.263), !dbg !2376
  %call.396.fca.0.extract = extractvalue { i64, i64 } %call.396, 0, !dbg !2376
  %call.396.fca.1.extract = extractvalue { i64, i64 } %call.396, 1, !dbg !2376
  %cast.6213 = bitcast [4 x { i8*, i64 }]* %tmp.264 to i8*, !dbg !2377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6213, i8* align 8 bitcast ({ i8*, i64 }* @const.55 to i8*), i64 16, i1 false), !dbg !2377
  %index.316 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.264, i64 0, i64 1, !dbg !2377
  %cast.6215 = bitcast { i8*, i64 }* %index.316 to i8*, !dbg !2377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6215, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2377
  %index.317 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.264, i64 0, i64 2, !dbg !2377
  %cast.6217 = bitcast { i8*, i64 }* %index.317 to i8*, !dbg !2377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6217, i8* align 8 bitcast ({ i8*, i64 }* @const.545 to i8*), i64 16, i1 false), !dbg !2377
  %tmpv.1708.sroa.0.0.cast.6219.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.264, i64 0, i64 3, !dbg !2377
  %tmpv.1708.sroa.0.0.cast.6219.sroa_cast = bitcast { i8*, i64 }* %tmpv.1708.sroa.0.0.cast.6219.sroa_idx to i64*, !dbg !2377
  store i64 %call.393.fca.0.extract, i64* %tmpv.1708.sroa.0.0.cast.6219.sroa_cast, align 8, !dbg !2377
  %tmpv.1708.sroa.2.0.cast.6219.sroa_idx12 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.264, i64 0, i64 3, i32 1, !dbg !2377
  store i64 %call.393.fca.1.extract, i64* %tmpv.1708.sroa.2.0.cast.6219.sroa_idx12, align 8, !dbg !2377
  %call.397 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.264), !dbg !2377
  %call.397.fca.0.extract = extractvalue { i64, i64 } %call.397, 0, !dbg !2377
  %call.397.fca.1.extract = extractvalue { i64, i64 } %call.397, 1, !dbg !2377
  %call.398 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...67x.7string, i64 0, i32 0)), !dbg !2378
  %cast.6229 = bitcast [7 x { i8*, i64 }]* %tmpv.1723 to i8*, !dbg !2378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6229, i8* align 8 bitcast ({ i8*, i64 }* @const.536 to i8*), i64 16, i1 false), !dbg !2378
  %index.320 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 1, !dbg !2378
  %cast.6231 = bitcast { i8*, i64 }* %index.320 to i8*, !dbg !2378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6231, i8* align 8 bitcast ({ i8*, i64 }* @const.547 to i8*), i64 16, i1 false), !dbg !2378
  %tmpv.1717.sroa.0.0.cast.6233.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 2, !dbg !2378
  %tmpv.1717.sroa.0.0.cast.6233.sroa_cast = bitcast { i8*, i64 }* %tmpv.1717.sroa.0.0.cast.6233.sroa_idx to i64*, !dbg !2378
  store i64 %call.394.fca.0.extract, i64* %tmpv.1717.sroa.0.0.cast.6233.sroa_cast, align 8, !dbg !2378
  %tmpv.1717.sroa.2.0.cast.6233.sroa_idx10 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 2, i32 1, !dbg !2378
  store i64 %call.394.fca.1.extract, i64* %tmpv.1717.sroa.2.0.cast.6233.sroa_idx10, align 8, !dbg !2378
  %tmpv.1718.sroa.0.0.cast.6235.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 3, !dbg !2378
  %tmpv.1718.sroa.0.0.cast.6235.sroa_cast = bitcast { i8*, i64 }* %tmpv.1718.sroa.0.0.cast.6235.sroa_idx to i64*, !dbg !2378
  store i64 %call.395.fca.0.extract, i64* %tmpv.1718.sroa.0.0.cast.6235.sroa_cast, align 8, !dbg !2378
  %tmpv.1718.sroa.2.0.cast.6235.sroa_idx8 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 3, i32 1, !dbg !2378
  store i64 %call.395.fca.1.extract, i64* %tmpv.1718.sroa.2.0.cast.6235.sroa_idx8, align 8, !dbg !2378
  %tmpv.1719.sroa.0.0.cast.6237.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 4, !dbg !2378
  %tmpv.1719.sroa.0.0.cast.6237.sroa_cast = bitcast { i8*, i64 }* %tmpv.1719.sroa.0.0.cast.6237.sroa_idx to i64*, !dbg !2378
  store i64 %call.396.fca.0.extract, i64* %tmpv.1719.sroa.0.0.cast.6237.sroa_cast, align 8, !dbg !2378
  %tmpv.1719.sroa.2.0.cast.6237.sroa_idx6 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 4, i32 1, !dbg !2378
  store i64 %call.396.fca.1.extract, i64* %tmpv.1719.sroa.2.0.cast.6237.sroa_idx6, align 8, !dbg !2378
  %tmpv.1720.sroa.0.0.cast.6239.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 5, !dbg !2378
  %tmpv.1720.sroa.0.0.cast.6239.sroa_cast = bitcast { i8*, i64 }* %tmpv.1720.sroa.0.0.cast.6239.sroa_idx to i64*, !dbg !2378
  store i64 %call.397.fca.0.extract, i64* %tmpv.1720.sroa.0.0.cast.6239.sroa_cast, align 8, !dbg !2378
  %tmpv.1720.sroa.2.0.cast.6239.sroa_idx4 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 5, i32 1, !dbg !2378
  store i64 %call.397.fca.1.extract, i64* %tmpv.1720.sroa.2.0.cast.6239.sroa_idx4, align 8, !dbg !2378
  %index.325 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1723, i64 0, i64 6, !dbg !2378
  %cast.6241 = bitcast { i8*, i64 }* %index.325 to i8*, !dbg !2378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6241, i8* align 8 bitcast ({ i8*, i64 }* @const.59 to i8*), i64 16, i1 false), !dbg !2378
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...67x.7string, i64 0, i32 0), i8* %call.398, i8* nonnull %cast.6229), !dbg !2378
  call void @llvm.dbg.value(metadata i8* %call.398, metadata !2367, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2368
  call void @llvm.dbg.value(metadata i64 7, metadata !2367, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2368
  call void @llvm.dbg.value(metadata i64 7, metadata !2367, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2368
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2369, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2370
  call void @llvm.dbg.value(metadata i8* null, metadata !2369, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2370
  %3 = bitcast { %IPST.3, %error.0 }* %sret.formal.20 to i8**, !dbg !2379
  store i8* %call.398, i8** %3, align 8, !dbg !2379
  %tmp.265.sroa.2.0.cast.6257.sroa_idx73 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.20, i64 0, i32 0, i32 1, !dbg !2379
  store i64 7, i64* %tmp.265.sroa.2.0.cast.6257.sroa_idx73, align 8, !dbg !2379
  %tmp.265.sroa.3.0.cast.6257.sroa_idx74 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.20, i64 0, i32 0, i32 2, !dbg !2379
  store i64 7, i64* %tmp.265.sroa.3.0.cast.6257.sroa_idx74, align 8, !dbg !2379
  %tmp.265.sroa.4.0.cast.6257.sroa_idx75 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.20, i64 0, i32 1, i32 0, !dbg !2379
  %4 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.265.sroa.4.0.cast.6257.sroa_idx75 to i8*, !dbg !2379
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false), !dbg !2379
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2379
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2379
  ret void, !dbg !2379
}

define void @command_line_arguments.DarwinAmd64Env({ %IPST.3, %error.0 }* nocapture sret %sret.formal.21, i8* nest nocapture readnone %nest.56, %Flags.0* %f) #0 !dbg !2380 {
entry:
  %tmp.270 = alloca [3 x { i8*, i64 }], align 8
  %tmp.269 = alloca [3 x { i8*, i64 }], align 8
  %tmp.268 = alloca [2 x { i8*, i64 }], align 8
  %tmp.267 = alloca [2 x { i8*, i64 }], align 8
  %clang = alloca { i8*, i64 }, align 8
  %cflags = alloca { i8*, i64 }, align 8
  %tmpv.1726.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %sret.actual.333 = alloca { { i8*, i64 }, { i8*, i64 }, %error.0 }, align 8
  %tmpv.1746 = alloca [7 x { i8*, i64 }], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2381, metadata !DIExpression()), !dbg !2382
  %clang.0.sroa_cast = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast)
  %cflags.0.sroa_cast = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast)
  %tmpv.1726.sroa.0.0.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.1726.sroa.0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmpv.1726.sroa.0.0.sroa_cast, i8 0, i64 32, i1 false)
  call void @command_line_arguments.EnvClang({ { i8*, i64 }, { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.333, i8* nest undef, %Flags.0* %f, i64 ptrtoint ([16 x i8]* @const.542 to i64), i64 15), !dbg !2383
  %tmpv.1726.sroa.0.0.cast.6267.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.333 to i8*, !dbg !2383
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.1726.sroa.0.0.sroa_cast, i8* nonnull align 8 %tmpv.1726.sroa.0.0.cast.6267.sroa_cast, i64 32, i1 false), !dbg !2383
  %tmpv.1726.sroa.4.0.cast.6267.sroa_idx23 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.333, i64 0, i32 2, i32 0, !dbg !2383
  %tmpv.1726.sroa.4.0.copyload24 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1726.sroa.4.0.cast.6267.sroa_idx23, align 8, !dbg !2383
  %tmpv.1726.sroa.5.0.cast.6267.sroa_idx25 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.actual.333, i64 0, i32 2, i32 1, !dbg !2383
  %0 = bitcast i8** %tmpv.1726.sroa.5.0.cast.6267.sroa_idx25 to i64*, !dbg !2383
  %tmpv.1726.sroa.5.0.copyload2673 = load i64, i64* %0, align 8, !dbg !2383
  %clang80 = bitcast { i8*, i64 }* %clang to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %clang80, i8* nonnull align 8 %tmpv.1726.sroa.0.0.cast.6267.sroa_cast, i64 16, i1 false)
  %tmpv.1726.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmpv.1726.sroa.0, i64 0, i32 1
  %tmpv.1726.sroa.0.16.sroa_cast = bitcast { i8*, i64 }* %tmpv.1726.sroa.0.16.sroa_idx to i8*
  %cflags81 = bitcast { i8*, i64 }* %cflags to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cflags81, i8* nonnull align 8 %tmpv.1726.sroa.0.16.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1726.sroa.4.0.copyload24, metadata !2385, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2386
  call void @llvm.dbg.value(metadata i8** %tmpv.1726.sroa.5.0.cast.6267.sroa_idx25, metadata !2385, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2386
  %icmp.698 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1726.sroa.4.0.copyload24, null, !dbg !2387
  br i1 %icmp.698, label %else.581, label %then.581

then.581:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !2388, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2389
  call void @llvm.dbg.value(metadata i64 0, metadata !2388, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2389
  call void @llvm.dbg.value(metadata i64 0, metadata !2388, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2389
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1726.sroa.4.0.copyload24, metadata !2390, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2391
  call void @llvm.dbg.value(metadata i8** %tmpv.1726.sroa.5.0.cast.6267.sroa_idx25, metadata !2390, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2391
  %tmp.266.sroa.4.0.cast.6292.sroa_idx67 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.21, i64 0, i32 1, i32 0, !dbg !2392
  %1 = bitcast { %IPST.3, %error.0 }* %sret.formal.21 to i8*, !dbg !2392
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 24, i1 false), !dbg !2392
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1726.sroa.4.0.copyload24, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.266.sroa.4.0.cast.6292.sroa_idx67, align 8, !dbg !2392
  %tmp.266.sroa.5.0.cast.6292.sroa_idx68 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.21, i64 0, i32 1, i32 1, !dbg !2392
  %2 = bitcast i8** %tmp.266.sroa.5.0.cast.6292.sroa_idx68 to i64*, !dbg !2392
  store i64 %tmpv.1726.sroa.5.0.copyload2673, i64* %2, align 8, !dbg !2392
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2392
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2392
  ret void, !dbg !2392

else.581:                                         ; preds = %entry
  %cast.6311 = bitcast [2 x { i8*, i64 }]* %tmp.267 to i8*, !dbg !2393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6311, i8* align 8 bitcast ({ i8*, i64 }* @const.47 to i8*), i64 16, i1 false), !dbg !2393
  %index.327 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.267, i64 0, i64 1, !dbg !2393
  %cast.6313 = bitcast { i8*, i64 }* %index.327 to i8*, !dbg !2393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6313, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2393
  %call.399 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.267), !dbg !2393
  %call.399.fca.0.extract = extractvalue { i64, i64 } %call.399, 0, !dbg !2393
  %call.399.fca.1.extract = extractvalue { i64, i64 } %call.399, 1, !dbg !2393
  %cast.6319 = bitcast [2 x { i8*, i64 }]* %tmp.268 to i8*, !dbg !2394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6319, i8* align 8 bitcast ({ i8*, i64 }* @const.49 to i8*), i64 16, i1 false), !dbg !2394
  %index.329 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.268, i64 0, i64 1, !dbg !2394
  %cast.6321 = bitcast { i8*, i64 }* %index.329 to i8*, !dbg !2394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6321, i8* nonnull align 8 %clang.0.sroa_cast, i64 16, i1 false), !dbg !2394
  %call.400 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.268), !dbg !2394
  %call.400.fca.0.extract = extractvalue { i64, i64 } %call.400, 0, !dbg !2394
  %call.400.fca.1.extract = extractvalue { i64, i64 } %call.400, 1, !dbg !2394
  %cast.6327 = bitcast [3 x { i8*, i64 }]* %tmp.269 to i8*, !dbg !2395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6327, i8* align 8 bitcast ({ i8*, i64 }* @const.51 to i8*), i64 16, i1 false), !dbg !2395
  %index.331 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.269, i64 0, i64 1, !dbg !2395
  %cast.6329 = bitcast { i8*, i64 }* %index.331 to i8*, !dbg !2395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6329, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2395
  %index.332 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.269, i64 0, i64 2, !dbg !2395
  %cast.6331 = bitcast { i8*, i64 }* %index.332 to i8*, !dbg !2395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6331, i8* align 8 bitcast ({ i8*, i64 }* @const.549 to i8*), i64 16, i1 false), !dbg !2395
  %call.401 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.269), !dbg !2395
  %call.401.fca.0.extract = extractvalue { i64, i64 } %call.401, 0, !dbg !2395
  %call.401.fca.1.extract = extractvalue { i64, i64 } %call.401, 1, !dbg !2395
  %cast.6337 = bitcast [3 x { i8*, i64 }]* %tmp.270 to i8*, !dbg !2396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6337, i8* align 8 bitcast ({ i8*, i64 }* @const.55 to i8*), i64 16, i1 false), !dbg !2396
  %index.334 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.270, i64 0, i64 1, !dbg !2396
  %cast.6339 = bitcast { i8*, i64 }* %index.334 to i8*, !dbg !2396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6339, i8* nonnull align 8 %cflags.0.sroa_cast, i64 16, i1 false), !dbg !2396
  %index.335 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.270, i64 0, i64 2, !dbg !2396
  %cast.6341 = bitcast { i8*, i64 }* %index.335 to i8*, !dbg !2396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6341, i8* align 8 bitcast ({ i8*, i64 }* @const.549 to i8*), i64 16, i1 false), !dbg !2396
  %call.402 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.270), !dbg !2396
  %call.402.fca.0.extract = extractvalue { i64, i64 } %call.402, 0, !dbg !2396
  %call.402.fca.1.extract = extractvalue { i64, i64 } %call.402, 1, !dbg !2396
  %call.403 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...67x.7string, i64 0, i32 0)), !dbg !2397
  %cast.6351 = bitcast [7 x { i8*, i64 }]* %tmpv.1746 to i8*, !dbg !2397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6351, i8* align 8 bitcast ({ i8*, i64 }* @const.536 to i8*), i64 16, i1 false), !dbg !2397
  %index.337 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 1, !dbg !2397
  %cast.6353 = bitcast { i8*, i64 }* %index.337 to i8*, !dbg !2397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6353, i8* align 8 bitcast ({ i8*, i64 }* @const.551 to i8*), i64 16, i1 false), !dbg !2397
  %tmpv.1740.sroa.0.0.cast.6355.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 2, !dbg !2397
  %tmpv.1740.sroa.0.0.cast.6355.sroa_cast = bitcast { i8*, i64 }* %tmpv.1740.sroa.0.0.cast.6355.sroa_idx to i64*, !dbg !2397
  store i64 %call.399.fca.0.extract, i64* %tmpv.1740.sroa.0.0.cast.6355.sroa_cast, align 8, !dbg !2397
  %tmpv.1740.sroa.2.0.cast.6355.sroa_idx10 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 2, i32 1, !dbg !2397
  store i64 %call.399.fca.1.extract, i64* %tmpv.1740.sroa.2.0.cast.6355.sroa_idx10, align 8, !dbg !2397
  %tmpv.1741.sroa.0.0.cast.6357.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 3, !dbg !2397
  %tmpv.1741.sroa.0.0.cast.6357.sroa_cast = bitcast { i8*, i64 }* %tmpv.1741.sroa.0.0.cast.6357.sroa_idx to i64*, !dbg !2397
  store i64 %call.400.fca.0.extract, i64* %tmpv.1741.sroa.0.0.cast.6357.sroa_cast, align 8, !dbg !2397
  %tmpv.1741.sroa.2.0.cast.6357.sroa_idx8 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 3, i32 1, !dbg !2397
  store i64 %call.400.fca.1.extract, i64* %tmpv.1741.sroa.2.0.cast.6357.sroa_idx8, align 8, !dbg !2397
  %tmpv.1742.sroa.0.0.cast.6359.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 4, !dbg !2397
  %tmpv.1742.sroa.0.0.cast.6359.sroa_cast = bitcast { i8*, i64 }* %tmpv.1742.sroa.0.0.cast.6359.sroa_idx to i64*, !dbg !2397
  store i64 %call.401.fca.0.extract, i64* %tmpv.1742.sroa.0.0.cast.6359.sroa_cast, align 8, !dbg !2397
  %tmpv.1742.sroa.2.0.cast.6359.sroa_idx6 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 4, i32 1, !dbg !2397
  store i64 %call.401.fca.1.extract, i64* %tmpv.1742.sroa.2.0.cast.6359.sroa_idx6, align 8, !dbg !2397
  %tmpv.1743.sroa.0.0.cast.6361.sroa_idx = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 5, !dbg !2397
  %tmpv.1743.sroa.0.0.cast.6361.sroa_cast = bitcast { i8*, i64 }* %tmpv.1743.sroa.0.0.cast.6361.sroa_idx to i64*, !dbg !2397
  store i64 %call.402.fca.0.extract, i64* %tmpv.1743.sroa.0.0.cast.6361.sroa_cast, align 8, !dbg !2397
  %tmpv.1743.sroa.2.0.cast.6361.sroa_idx4 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 5, i32 1, !dbg !2397
  store i64 %call.402.fca.1.extract, i64* %tmpv.1743.sroa.2.0.cast.6361.sroa_idx4, align 8, !dbg !2397
  %index.342 = getelementptr inbounds [7 x { i8*, i64 }], [7 x { i8*, i64 }]* %tmpv.1746, i64 0, i64 6, !dbg !2397
  %cast.6363 = bitcast { i8*, i64 }* %index.342 to i8*, !dbg !2397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6363, i8* align 8 bitcast ({ i8*, i64 }* @const.59 to i8*), i64 16, i1 false), !dbg !2397
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...67x.7string, i64 0, i32 0), i8* %call.403, i8* nonnull %cast.6351), !dbg !2397
  call void @llvm.dbg.value(metadata i8* %call.403, metadata !2388, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2389
  call void @llvm.dbg.value(metadata i64 7, metadata !2388, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2389
  call void @llvm.dbg.value(metadata i64 7, metadata !2388, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !2389
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !2390, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2391
  call void @llvm.dbg.value(metadata i8* null, metadata !2390, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2391
  %3 = bitcast { %IPST.3, %error.0 }* %sret.formal.21 to i8**, !dbg !2398
  store i8* %call.403, i8** %3, align 8, !dbg !2398
  %tmp.271.sroa.2.0.cast.6379.sroa_idx69 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.21, i64 0, i32 0, i32 1, !dbg !2398
  store i64 7, i64* %tmp.271.sroa.2.0.cast.6379.sroa_idx69, align 8, !dbg !2398
  %tmp.271.sroa.3.0.cast.6379.sroa_idx70 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.21, i64 0, i32 0, i32 2, !dbg !2398
  store i64 7, i64* %tmp.271.sroa.3.0.cast.6379.sroa_idx70, align 8, !dbg !2398
  %tmp.271.sroa.4.0.cast.6379.sroa_idx71 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.formal.21, i64 0, i32 1, i32 0, !dbg !2398
  %4 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.271.sroa.4.0.cast.6379.sroa_idx71 to i8*, !dbg !2398
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false), !dbg !2398
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %clang.0.sroa_cast), !dbg !2398
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cflags.0.sroa_cast), !dbg !2398
  ret void, !dbg !2398
}

define i64 @command_line_arguments.command_line_arguments.Bind.archPath..hash(i8* nest nocapture readnone %nest.85, i8* %key, i64 %seed) #0 !dbg !2399 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !2400, metadata !DIExpression()), !dbg !2401
  call void @llvm.dbg.value(metadata i64 %seed, metadata !2402, metadata !DIExpression()), !dbg !2401
  call void @llvm.dbg.value(metadata i64 0, metadata !2403, metadata !DIExpression()), !dbg !2401
  %pticast.51 = ptrtoint i8* %key to i64, !dbg !2401
  %call.506 = call i64 @runtime.strhash(i8* nest undef, i8* %key, i64 %seed), !dbg !2401
  %add.121 = add i64 %pticast.51, 16, !dbg !2401
  %itpcast.20 = inttoptr i64 %add.121 to i8*, !dbg !2401
  %call.507 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.20, i64 %call.506), !dbg !2401
  %add.122 = add i64 %pticast.51, 32, !dbg !2401
  %itpcast.21 = inttoptr i64 %add.122 to i8*, !dbg !2401
  %call.508 = call i64 @runtime.interhash(i8* nest undef, i8* %itpcast.21, i64 %call.507), !dbg !2401
  call void @llvm.dbg.value(metadata i64 %call.508, metadata !2403, metadata !DIExpression()), !dbg !2401
  ret i64 %call.508, !dbg !2401
}

define i8 @command_line_arguments.command_line_arguments.Bind.archPath..eq(i8* nest nocapture readnone %nest.86, i8* readonly %key1, i8* readonly %key2) #0 !dbg !2404 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !2405, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i8* %key2, metadata !2407, metadata !DIExpression()), !dbg !2406
  call void @llvm.dbg.value(metadata i8 0, metadata !2408, metadata !DIExpression()), !dbg !2406
  %icmp.1071 = icmp eq i8* %key1, null, !dbg !2406
  br i1 %icmp.1071, label %then.875, label %else.875

then.875:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2406
  unreachable

else.875:                                         ; preds = %entry
  %icmp.1072 = icmp eq i8* %key2, null, !dbg !2406
  br i1 %icmp.1072, label %then.876, label %else.876

then.876:                                         ; preds = %else.875
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2406
  unreachable

else.876:                                         ; preds = %else.875
  %field0.395 = bitcast i8* %key1 to i64*, !dbg !2406
  %ld.863 = load i64, i64* %field0.395, align 8, !dbg !2406
  %field1.395 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !2406
  %0 = bitcast i8* %field1.395 to i64*, !dbg !2406
  %ld.864 = load i64, i64* %0, align 8, !dbg !2406
  %field0.396 = bitcast i8* %key2 to i64*, !dbg !2406
  %ld.865 = load i64, i64* %field0.396, align 8, !dbg !2406
  %field1.396 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !2406
  %1 = bitcast i8* %field1.396 to i64*, !dbg !2406
  %ld.866 = load i64, i64* %1, align 8, !dbg !2406
  %call.509 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.863, i64 %ld.864, i64 %ld.865, i64 %ld.866), !dbg !2406
  %icmp.1073 = icmp eq i8 %call.509, 1, !dbg !2406
  br i1 %icmp.1073, label %else.879, label %then.877

then.877:                                         ; preds = %else.879, %else.876
  call void @llvm.dbg.value(metadata i8 0, metadata !2408, metadata !DIExpression()), !dbg !2406
  ret i8 0, !dbg !2406

else.879:                                         ; preds = %else.876
  %field.1895 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !2406
  %field.1896 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !2406
  %field0.397 = bitcast i8* %field.1895 to i64*, !dbg !2406
  %ld.867 = load i64, i64* %field0.397, align 8, !dbg !2406
  %field1.397 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !2406
  %2 = bitcast i8* %field1.397 to i64*, !dbg !2406
  %ld.868 = load i64, i64* %2, align 8, !dbg !2406
  %field0.398 = bitcast i8* %field.1896 to i64*, !dbg !2406
  %ld.869 = load i64, i64* %field0.398, align 8, !dbg !2406
  %field1.398 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !2406
  %3 = bitcast i8* %field1.398 to i64*, !dbg !2406
  %ld.870 = load i64, i64* %3, align 8, !dbg !2406
  %call.510 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.867, i64 %ld.868, i64 %ld.869, i64 %ld.870), !dbg !2406
  %icmp.1076 = icmp eq i8 %call.510, 1, !dbg !2406
  br i1 %icmp.1076, label %else.882, label %then.877

else.882:                                         ; preds = %else.879
  %field.1897 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !2406
  %field.1898 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !2406
  %field0.399 = bitcast i8* %field.1897 to i64*, !dbg !2406
  %ld.871 = load i64, i64* %field0.399, align 8, !dbg !2406
  %field1.399 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !2406
  %4 = bitcast i8* %field1.399 to i64*, !dbg !2406
  %ld.872 = load i64, i64* %4, align 8, !dbg !2406
  %field0.400 = bitcast i8* %field.1898 to i64*, !dbg !2406
  %ld.873 = load i64, i64* %field0.400, align 8, !dbg !2406
  %field1.400 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !2406
  %5 = bitcast i8* %field1.400 to i64*, !dbg !2406
  %ld.874 = load i64, i64* %5, align 8, !dbg !2406
  %call.511 = call i8 @runtime.ifaceeq(i8* nest undef, i64 %ld.871, i64 %ld.872, i64 %ld.873, i64 %ld.874), !dbg !2406
  %icmp.1079 = icmp eq i8 %call.511, 1, !dbg !2406
  %spec.select = zext i1 %icmp.1079 to i8
  ret i8 %spec.select
}

declare {}* @runtime.makechan(i8*, %_type.0*, i64) local_unnamed_addr #0

define internal void @command_line_arguments.Bind..func1(i8* nest nocapture readonly %"$closure", %IPST.3* byval nocapture %env) #0 !dbg !2409 {
entry:
  %tmp.154 = alloca %IPST.3, align 8
  %tmp.153 = alloca %IPST.3, align 8
  %tmp.152 = alloca %IPST.3, align 8
  %tmp.151 = alloca %IPST.3, align 8
  %tmp.150 = alloca [3 x { i8*, i64 }], align 8
  %tmp.148 = alloca [4 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %env, metadata !2412, metadata !DIExpression()), !dbg !2413
  %tmpv.1066 = alloca %IPST.3, align 8
  %tmpv.1068 = alloca { i8*, i64 }, align 8
  %sret.actual.202 = alloca %IPST.4, align 8
  %tmpv.1081 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1082 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.1083 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1086 = alloca [3 x { i8*, i64 }], align 8
  %tmpv.1087 = alloca %.command-line-arguments.archPath.0, align 8
  %call.235 = call { i64, i64 } @command_line_arguments.FindEnv(i8* nest undef, %IPST.3* byval nonnull %env, i64 ptrtoint ([7 x i8]* @const.425 to i64), i64 6), !dbg !2414
  %call.235.fca.0.extract = extractvalue { i64, i64 } %call.235, 0, !dbg !2414
  %call.235.fca.1.extract = extractvalue { i64, i64 } %call.235, 1, !dbg !2414
  call void @llvm.dbg.value(metadata i64 %call.235.fca.0.extract, metadata !2416, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2417
  call void @llvm.dbg.value(metadata i64 %call.235.fca.1.extract, metadata !2416, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2417
  %field.854 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !2418
  %0 = bitcast i8* %field.854 to %Flags.0***, !dbg !2418
  %.field.ld.93 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !2418
  %.ld.303 = load %Flags.0*, %Flags.0** %.field.ld.93, align 8, !dbg !2418
  %call.236 = call { i64, i64 } @command_line_arguments.GoEnv(i8* nest undef, %Flags.0* %.ld.303, i64 ptrtoint ([7 x i8]* @const.414 to i64), i64 6), !dbg !2419
  %call.236.fca.0.extract = extractvalue { i64, i64 } %call.236, 0, !dbg !2419
  %call.236.fca.1.extract = extractvalue { i64, i64 } %call.236, 1, !dbg !2419
  %cast.3757 = bitcast %IPST.3* %tmpv.1066 to i8*
  %cast.3758 = bitcast %IPST.3* %env to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3757, i8* nonnull align 8 %cast.3758, i64 24, i1 false)
  %field.855 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1066, i64 0, i32 1, !dbg !2420
  %tmpv.1066.field.ld.0 = load i64, i64* %field.855, align 8, !dbg !2420
  %field.856 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !2421
  %1 = bitcast i8* %field.856 to i8**, !dbg !2421
  %.field.ld.9449 = load i8*, i8** %1, align 8, !dbg !2421
  %cast.3759 = bitcast [4 x { i8*, i64 }]* %tmp.148 to i8*, !dbg !2422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3759, i8* align 8 bitcast ({ i8*, i64 }* @const.417 to i8*), i64 16, i1 false), !dbg !2422
  %index.193 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.148, i64 0, i64 1, !dbg !2422
  %cast.3761 = bitcast { i8*, i64 }* %index.193 to i8*, !dbg !2422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3761, i8* align 8 %.field.ld.9449, i64 16, i1 false), !dbg !2422
  %index.194 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.148, i64 0, i64 2, !dbg !2422
  %cast.3763 = bitcast { i8*, i64 }* %index.194 to i8*, !dbg !2422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3763, i8* align 8 bitcast ({ i8*, i64 }* @const.419 to i8*), i64 16, i1 false), !dbg !2422
  %tmpv.1063.sroa.0.0.cast.3765.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.148, i64 0, i64 3, !dbg !2422
  %tmpv.1063.sroa.0.0.cast.3765.sroa_cast = bitcast { i8*, i64 }* %tmpv.1063.sroa.0.0.cast.3765.sroa_idx to i64*, !dbg !2422
  store i64 %call.236.fca.0.extract, i64* %tmpv.1063.sroa.0.0.cast.3765.sroa_cast, align 8, !dbg !2422
  %tmpv.1063.sroa.2.0.cast.3765.sroa_idx21 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.148, i64 0, i64 3, i32 1, !dbg !2422
  store i64 %call.236.fca.1.extract, i64* %tmpv.1063.sroa.2.0.cast.3765.sroa_idx21, align 8, !dbg !2422
  %call.237 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.148), !dbg !2422
  %call.237.fca.0.extract = extractvalue { i64, i64 } %call.237, 0, !dbg !2422
  %call.237.fca.1.extract = extractvalue { i64, i64 } %call.237, 1, !dbg !2422
  %sret.actual.201.sroa.0.0.cast.3769.sroa_cast = bitcast { i8*, i64 }* %tmpv.1068 to i64*
  store i64 %call.237.fca.0.extract, i64* %sret.actual.201.sroa.0.0.cast.3769.sroa_cast, align 8
  %sret.actual.201.sroa.2.0.cast.3769.sroa_idx18 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1068, i64 0, i32 1
  store i64 %call.237.fca.1.extract, i64* %sret.actual.201.sroa.2.0.cast.3769.sroa_idx18, align 8
  %add.50 = add i64 %tmpv.1066.field.ld.0, 1, !dbg !2420
  %field.857 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1066, i64 0, i32 2, !dbg !2420
  %tmpv.1066.field.ld.1 = load i64, i64* %field.857, align 8, !dbg !2420
  %icmp.460 = icmp ugt i64 %add.50, %tmpv.1066.field.ld.1, !dbg !2420
  br i1 %icmp.460, label %then.353, label %else.353

then.353:                                         ; preds = %entry
  %cast.3771 = bitcast %IPST.3* %tmpv.1066 to %IPST.4*, !dbg !2420
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.202, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.3771, i64 %add.50), !dbg !2420
  %tmpv.1073.sroa.0.0.cast.3776.sroa_idx = bitcast %IPST.4* %sret.actual.202 to { i8*, i64 }**
  %tmpv.1073.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1073.sroa.0.0.cast.3776.sroa_idx, align 8
  %2 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.202, i64 0, i32 1
  %tmpv.1073.sroa.3.0.copyload = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.202, i64 0, i32 2
  %tmpv.1073.sroa.4.0.copyload = load i64, i64* %3, align 8
  %.pre = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1066, i64 0, i32 0, !dbg !2420
  br label %fallthrough.353

fallthrough.353:                                  ; preds = %else.354, %then.353
  %tmpv.1073.sroa.0.0.cast.3779.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.860, %else.354 ], [ %.pre, %then.353 ], !dbg !2420
  %tmpv.1073.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1066.field.ld.3, %else.354 ], [ %tmpv.1073.sroa.0.0.copyload, %then.353 ]
  %tmpv.1073.sroa.3.0 = phi i64 [ %add.50, %else.354 ], [ %tmpv.1073.sroa.3.0.copyload, %then.353 ]
  %tmpv.1073.sroa.4.0 = phi i64 [ %tmpv.1066.field.ld.1, %else.354 ], [ %tmpv.1073.sroa.4.0.copyload, %then.353 ]
  store { i8*, i64 }* %tmpv.1073.sroa.0.0, { i8*, i64 }** %tmpv.1073.sroa.0.0.cast.3779.sroa_idx.pre-phi, align 8, !dbg !2420
  store i64 %tmpv.1073.sroa.3.0, i64* %field.855, align 8, !dbg !2420
  store i64 %tmpv.1073.sroa.4.0, i64* %field.857, align 8, !dbg !2420
  %icmp.467 = icmp sge i64 %tmpv.1066.field.ld.0, %tmpv.1073.sroa.3.0, !dbg !2420
  %4 = icmp slt i64 %tmpv.1066.field.ld.0, 0, !dbg !2420
  %ior.250 = or i1 %4, %icmp.467, !dbg !2420
  br i1 %ior.250, label %then.356, label %else.356

else.353:                                         ; preds = %entry
  %icmp.462 = icmp sgt i64 %add.50, %tmpv.1066.field.ld.1, !dbg !2420
  %add.50.lobit55 = or i64 %tmpv.1066.field.ld.1, %add.50, !dbg !2420
  %5 = icmp slt i64 %add.50.lobit55, 0, !dbg !2420
  %6 = or i1 %icmp.462, %5, !dbg !2420
  br i1 %6, label %then.354, label %else.354

then.354:                                         ; preds = %else.353
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2420
  unreachable

else.354:                                         ; preds = %else.353
  %field.860 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1066, i64 0, i32 0, !dbg !2420
  %tmpv.1066.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.860, align 8, !dbg !2420
  br label %fallthrough.353

then.356:                                         ; preds = %fallthrough.353
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2420
  unreachable

else.356:                                         ; preds = %fallthrough.353
  %ptroff.53 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1073.sroa.0.0, i64 %tmpv.1066.field.ld.0, !dbg !2420
  %runtime.writeBarrier.ld.39 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2420
  %icmp.470 = icmp eq i32 %runtime.writeBarrier.ld.39, 0, !dbg !2420
  br i1 %icmp.470, label %then.357, label %else.357

then.357:                                         ; preds = %else.356
  %icmp.469 = icmp eq { i8*, i64 }* %ptroff.53, null, !dbg !2420
  br i1 %icmp.469, label %then.358, label %else.358

fallthrough.357:                                  ; preds = %else.357, %else.358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3758, i8* nonnull align 8 %cast.3757, i64 24, i1 false), !dbg !2423
  %cast.3792 = bitcast [3 x { i8*, i64 }]* %tmp.150 to i8*, !dbg !2424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3792, i8* align 8 bitcast ({ i8*, i64 }* @const.428 to i8*), i64 16, i1 false), !dbg !2424
  %arch.sroa.0.0.cast.3794.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.150, i64 0, i64 1, !dbg !2424
  %arch.sroa.0.0.cast.3794.sroa_cast = bitcast { i8*, i64 }* %arch.sroa.0.0.cast.3794.sroa_idx to i64*, !dbg !2424
  store i64 %call.235.fca.0.extract, i64* %arch.sroa.0.0.cast.3794.sroa_cast, align 8, !dbg !2424
  %arch.sroa.5.0.cast.3794.sroa_idx34 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.150, i64 0, i64 1, i32 1, !dbg !2424
  store i64 %call.235.fca.1.extract, i64* %arch.sroa.5.0.cast.3794.sroa_idx34, align 8, !dbg !2424
  %index.198 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.150, i64 0, i64 2, !dbg !2424
  %cast.3796 = bitcast { i8*, i64 }* %index.198 to i8*, !dbg !2424
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3796, i8* align 8 bitcast ({ i8*, i64 }* @const.430 to i8*), i64 16, i1 false), !dbg !2424
  %call.238 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.150), !dbg !2424
  %call.238.fca.0.extract = extractvalue { i64, i64 } %call.238, 0, !dbg !2424
  %call.238.fca.1.extract = extractvalue { i64, i64 } %call.238, 1, !dbg !2424
  %field.868 = getelementptr inbounds i8, i8* %"$closure", i64 24, !dbg !2425
  %7 = bitcast i8* %field.868 to i8**, !dbg !2425
  %.field.ld.9851 = load i8*, i8** %7, align 8, !dbg !2425
  %cast.3802 = bitcast [2 x { i8*, i64 }]* %tmpv.1081 to i8*, !dbg !2426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3802, i8* align 8 %.field.ld.9851, i64 16, i1 false), !dbg !2426
  %tmpv.1080.sroa.0.0.cast.3804.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1081, i64 0, i64 1, !dbg !2426
  %tmpv.1080.sroa.0.0.cast.3804.sroa_cast = bitcast { i8*, i64 }* %tmpv.1080.sroa.0.0.cast.3804.sroa_idx to i64*, !dbg !2426
  store i64 %call.238.fca.0.extract, i64* %tmpv.1080.sroa.0.0.cast.3804.sroa_cast, align 8, !dbg !2426
  %tmpv.1080.sroa.2.0.cast.3804.sroa_idx4 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1081, i64 0, i64 1, i32 1, !dbg !2426
  store i64 %call.238.fca.1.extract, i64* %tmpv.1080.sroa.2.0.cast.3804.sroa_idx4, align 8, !dbg !2426
  %field.869 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.151, i64 0, i32 0, !dbg !2426
  %cast.3806 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1081, i64 0, i64 0, !dbg !2426
  store { i8*, i64 }* %cast.3806, { i8*, i64 }** %field.869, align 8, !dbg !2426
  %field.870 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.151, i64 0, i32 1, !dbg !2426
  store i64 2, i64* %field.870, align 8, !dbg !2426
  %field.871 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.151, i64 0, i32 2, !dbg !2426
  store i64 2, i64* %field.871, align 8, !dbg !2426
  %call.239 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.151), !dbg !2426
  %call.239.fca.0.extract = extractvalue { i64, i64 } %call.239, 0, !dbg !2426
  %call.239.fca.1.extract = extractvalue { i64, i64 } %call.239, 1, !dbg !2426
  call void @llvm.dbg.value(metadata i64 %call.239.fca.0.extract, metadata !2427, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2428
  call void @llvm.dbg.value(metadata i64 %call.239.fca.1.extract, metadata !2427, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2428
  %field.872 = getelementptr inbounds i8, i8* %"$closure", i64 32, !dbg !2429
  %8 = bitcast i8* %field.872 to i8**, !dbg !2429
  %.field.ld.9952 = load i8*, i8** %8, align 8, !dbg !2429
  %cast.3810 = bitcast [1 x { i8*, i64 }]* %tmpv.1082 to i8*, !dbg !2430
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3810, i8* align 8 %.field.ld.9952, i64 16, i1 false), !dbg !2430
  %cast.3812 = bitcast [2 x { i8*, i64 }]* %tmpv.1083 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3812, i8* align 16 bitcast ([2 x { i8*, i64 }]* @const.431 to i8*), i64 32, i1 false)
  %cast.3818 = bitcast [3 x { i8*, i64 }]* %tmpv.1086 to i8*, !dbg !2431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3818, i8* align 8 bitcast ({ i8*, i64 }* @const.433 to i8*), i64 16, i1 false), !dbg !2431
  %index.203 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1086, i64 0, i64 1, !dbg !2431
  %cast.3820 = bitcast { i8*, i64 }* %index.203 to i8*, !dbg !2431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3820, i8* align 8 bitcast ({ i8*, i64 }* @const.381 to i8*), i64 16, i1 false), !dbg !2431
  %path.sroa.0.0.cast.3822.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1086, i64 0, i64 2, !dbg !2431
  %path.sroa.0.0.cast.3822.sroa_cast = bitcast { i8*, i64 }* %path.sroa.0.0.cast.3822.sroa_idx to i64*, !dbg !2431
  store i64 %call.239.fca.0.extract, i64* %path.sroa.0.0.cast.3822.sroa_cast, align 8, !dbg !2431
  %path.sroa.5.0.cast.3822.sroa_idx28 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1086, i64 0, i64 2, i32 1, !dbg !2431
  store i64 %call.239.fca.1.extract, i64* %path.sroa.5.0.cast.3822.sroa_idx28, align 8, !dbg !2431
  %.field.ld.100 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !2432
  %.ld.313 = load %Flags.0*, %Flags.0** %.field.ld.100, align 8, !dbg !2432
  %field.876 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.152, i64 0, i32 0, !dbg !2430
  %cast.3824 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.1082, i64 0, i64 0, !dbg !2430
  store { i8*, i64 }* %cast.3824, { i8*, i64 }** %field.876, align 8, !dbg !2430
  %field.877 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.152, i64 0, i32 1, !dbg !2430
  store i64 1, i64* %field.877, align 8, !dbg !2430
  %field.878 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.152, i64 0, i32 2, !dbg !2430
  store i64 1, i64* %field.878, align 8, !dbg !2430
  %field.879 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.153, i64 0, i32 0, !dbg !2433
  %cast.3825 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1083, i64 0, i64 0, !dbg !2433
  store { i8*, i64 }* %cast.3825, { i8*, i64 }** %field.879, align 8, !dbg !2433
  %field.880 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.153, i64 0, i32 1, !dbg !2433
  store i64 2, i64* %field.880, align 8, !dbg !2433
  %field.881 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.153, i64 0, i32 2, !dbg !2433
  store i64 2, i64* %field.881, align 8, !dbg !2433
  %field.874 = getelementptr inbounds i8, i8* %"$closure", i64 40, !dbg !2434
  %9 = bitcast i8* %field.874 to { i64, i64 }**, !dbg !2434
  %.field.ld.10153 = load { i64, i64 }*, { i64, i64 }** %9, align 8, !dbg !2434
  %10 = bitcast i8* %field.868 to { i64, i64 }**, !dbg !2435
  %.field.ld.10254 = load { i64, i64 }*, { i64, i64 }** %10, align 8, !dbg !2435
  %field.882 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.154, i64 0, i32 0, !dbg !2431
  %cast.3828 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1086, i64 0, i64 0, !dbg !2431
  store { i8*, i64 }* %cast.3828, { i8*, i64 }** %field.882, align 8, !dbg !2431
  %field.883 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.154, i64 0, i32 1, !dbg !2431
  store i64 3, i64* %field.883, align 8, !dbg !2431
  %field.884 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.154, i64 0, i32 2, !dbg !2431
  store i64 3, i64* %field.884, align 8, !dbg !2431
  %field0.171 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.10153, i64 0, i32 0, !dbg !2431
  %ld.400 = load i64, i64* %field0.171, align 8, !dbg !2431
  %field1.171 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.10153, i64 0, i32 1, !dbg !2431
  %ld.401 = load i64, i64* %field1.171, align 8, !dbg !2431
  %field0.172 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.10254, i64 0, i32 0, !dbg !2431
  %ld.402 = load i64, i64* %field0.172, align 8, !dbg !2431
  %field1.172 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.10254, i64 0, i32 1, !dbg !2431
  %ld.403 = load i64, i64* %field1.172, align 8, !dbg !2431
  %call.240 = call { i64, i64 } @command_line_arguments.GoBuild(i8* nest undef, %Flags.0* %.ld.313, %IPST.3* byval nonnull %tmp.152, %IPST.3* byval nonnull %env, %IPST.3* byval nonnull %tmp.153, i64 %ld.400, i64 %ld.401, i64 %ld.402, i64 %ld.403, %IPST.3* byval nonnull %tmp.154), !dbg !2431
  %call.240.fca.0.extract = extractvalue { i64, i64 } %call.240, 0, !dbg !2431
  %call.240.fca.1.extract = extractvalue { i64, i64 } %call.240, 1, !dbg !2431
  call void @llvm.dbg.value(metadata i64 %call.240.fca.0.extract, metadata !2436, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2437
  call void @llvm.dbg.value(metadata i64 %call.240.fca.1.extract, metadata !2436, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2437
  %arch.sroa.0.0.cast.3832.sroa_cast = bitcast %.command-line-arguments.archPath.0* %tmpv.1087 to i64*, !dbg !2438
  store i64 %call.235.fca.0.extract, i64* %arch.sroa.0.0.cast.3832.sroa_cast, align 8, !dbg !2438
  %arch.sroa.5.0.cast.3832.sroa_idx35 = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %tmpv.1087, i64 0, i32 0, i32 1, !dbg !2438
  store i64 %call.235.fca.1.extract, i64* %arch.sroa.5.0.cast.3832.sroa_idx35, align 8, !dbg !2438
  %path.sroa.0.0.cast.3834.sroa_idx = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %tmpv.1087, i64 0, i32 1, !dbg !2438
  %path.sroa.0.0.cast.3834.sroa_cast = bitcast { i8*, i64 }* %path.sroa.0.0.cast.3834.sroa_idx to i64*, !dbg !2438
  store i64 %call.239.fca.0.extract, i64* %path.sroa.0.0.cast.3834.sroa_cast, align 8, !dbg !2438
  %path.sroa.5.0.cast.3834.sroa_idx29 = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %tmpv.1087, i64 0, i32 1, i32 1, !dbg !2438
  store i64 %call.239.fca.1.extract, i64* %path.sroa.5.0.cast.3834.sroa_idx29, align 8, !dbg !2438
  %err.sroa.0.0.cast.3836.sroa_idx = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %tmpv.1087, i64 0, i32 2, !dbg !2438
  %err.sroa.0.0.cast.3836.sroa_cast = bitcast %error.0* %err.sroa.0.0.cast.3836.sroa_idx to i64*, !dbg !2438
  store i64 %call.240.fca.0.extract, i64* %err.sroa.0.0.cast.3836.sroa_cast, align 8, !dbg !2438
  %err.sroa.4.0.cast.3836.sroa_idx24 = getelementptr inbounds %.command-line-arguments.archPath.0, %.command-line-arguments.archPath.0* %tmpv.1087, i64 0, i32 2, i32 1, !dbg !2438
  %err.sroa.4.0.cast.3836.sroa_cast = bitcast i8** %err.sroa.4.0.cast.3836.sroa_idx24 to i64*, !dbg !2438
  store i64 %call.240.fca.1.extract, i64* %err.sroa.4.0.cast.3836.sroa_cast, align 8, !dbg !2438
  %field.888 = getelementptr inbounds i8, i8* %"$closure", i64 48, !dbg !2439
  %11 = bitcast i8* %field.888 to {}***, !dbg !2439
  %.field.ld.103 = load {}**, {}*** %11, align 8, !dbg !2439
  %.ld.314 = load {}*, {}** %.field.ld.103, align 8, !dbg !2439
  %cast.3838 = bitcast %.command-line-arguments.archPath.0* %tmpv.1087 to i8*, !dbg !2440
  call void @runtime.chansend1(i8* nest undef, {}* %.ld.314, i8* nonnull %cast.3838), !dbg !2440
  ret void

else.357:                                         ; preds = %else.356
  %cast.3784 = bitcast { i8*, i64 }* %ptroff.53 to i8*, !dbg !2420
  %cast.3785 = bitcast { i8*, i64 }* %tmpv.1068 to i8*, !dbg !2420
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.3784, i8* nonnull %cast.3785), !dbg !2420
  br label %fallthrough.357

then.358:                                         ; preds = %then.357
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2420
  unreachable

else.358:                                         ; preds = %then.357
  %cast.3782 = bitcast { i8*, i64 }* %ptroff.53 to i8*, !dbg !2420
  %cast.3783 = bitcast { i8*, i64 }* %tmpv.1068 to i8*, !dbg !2420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.3782, i8* nonnull align 8 %cast.3783, i64 16, i1 false), !dbg !2420
  br label %fallthrough.357
}

define internal void @command_line_arguments.command_line_arguments..thunk4(i8* nest nocapture readnone %nest.74, { %__go_descriptor.31*, %IPST.3 }* %__go_thunk_parameter) #0 !dbg !2441 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.31*, %IPST.3 }* %__go_thunk_parameter, metadata !2454, metadata !DIExpression()), !dbg !2455
  %field.1842 = getelementptr inbounds { %__go_descriptor.31*, %IPST.3 }, { %__go_descriptor.31*, %IPST.3 }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2455
  %.field.ld.231 = load %__go_descriptor.31*, %__go_descriptor.31** %field.1842, align 8, !dbg !2455
  %0 = getelementptr inbounds %__go_descriptor.31, %__go_descriptor.31* %.field.ld.231, i64 0, i32 0, !dbg !2455
  %deref.ld.211 = load void (i8*, %IPST.3*)*, void (i8*, %IPST.3*)** %0, align 8, !dbg !2455
  %cast.7614 = bitcast %__go_descriptor.31* %.field.ld.231 to i8*, !dbg !2455
  %field.1844 = getelementptr inbounds { %__go_descriptor.31*, %IPST.3 }, { %__go_descriptor.31*, %IPST.3 }* %__go_thunk_parameter, i64 0, i32 1, !dbg !2455
  call void %deref.ld.211(i8* nest %cast.7614, %IPST.3* byval nonnull %field.1844), !dbg !2455
  ret void
}

declare void @__go_go(i8*, %__go_descriptor.27*, i8*) local_unnamed_addr #0

declare void @runtime.chanrecv1(i8*, {}*, i8*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.ArchClang(i8* nest nocapture readnone %nest.51, i64 %goarch.chunk0, i64 %goarch.chunk1) #0 !dbg !2456 {
entry:
  %tmp.238 = alloca %IPST.2, align 8
  %tmpv.1615 = alloca { i8*, i64 }, align 8
  %tmpv.1616 = alloca [1 x %IPST.16], align 8
  %tmpv.1619 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata i64 %goarch.chunk0, metadata !2457, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2458
  call void @llvm.dbg.value(metadata i64 %goarch.chunk1, metadata !2457, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2458
  %call.360 = call i8 @runtime.eqstring(i8* nest undef, i64 %goarch.chunk0, i64 %goarch.chunk1, i64 ptrtoint ([4 x i8]* @const.62 to i64), i64 3), !dbg !2459
  %icmp.685 = icmp eq i8 %call.360, 1, !dbg !2459
  br i1 %icmp.685, label %else.572, label %label.0

else.572:                                         ; preds = %label.3, %label.2, %label.0, %entry
  %merge = phi { i64, i64 } [ { i64 ptrtoint ([6 x i8]* @const.512 to i64), i64 5 }, %entry ], [ { i64 ptrtoint ([6 x i8]* @const.91 to i64), i64 5 }, %label.0 ], [ { i64 ptrtoint ([5 x i8]* @const.514 to i64), i64 4 }, %label.2 ], [ { i64 ptrtoint ([7 x i8]* @const.104 to i64), i64 6 }, %label.3 ]
  call void @llvm.dbg.value(metadata i64 ptrtoint ([6 x i8]* @const.512 to i64), metadata !2460, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2461
  call void @llvm.dbg.value(metadata i64 5, metadata !2460, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2461
  ret { i64, i64 } %merge, !dbg !2462

label.0:                                          ; preds = %entry
  %call.361 = call i8 @runtime.eqstring(i8* nest undef, i64 %goarch.chunk0, i64 %goarch.chunk1, i64 ptrtoint ([6 x i8]* @const.91 to i64), i64 5), !dbg !2463
  %icmp.687 = icmp eq i8 %call.361, 1, !dbg !2463
  br i1 %icmp.687, label %else.572, label %label.2

label.2:                                          ; preds = %label.0
  %call.362 = call i8 @runtime.eqstring(i8* nest undef, i64 %goarch.chunk0, i64 %goarch.chunk1, i64 ptrtoint ([4 x i8]* @const.97 to i64), i64 3), !dbg !2464
  %icmp.689 = icmp eq i8 %call.362, 1, !dbg !2464
  br i1 %icmp.689, label %else.572, label %label.3

label.3:                                          ; preds = %label.2
  %call.363 = call i8 @runtime.eqstring(i8* nest undef, i64 %goarch.chunk0, i64 %goarch.chunk1, i64 ptrtoint ([6 x i8]* @const.103 to i64), i64 5), !dbg !2465
  %icmp.691 = icmp eq i8 %call.363, 1, !dbg !2465
  br i1 %icmp.691, label %else.572, label %label.4

label.4:                                          ; preds = %label.3
  %call.364 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2466
  %goarch.addr.sroa.0.0.cast.5654.sroa_cast = bitcast { i8*, i64 }* %tmpv.1615 to i64*
  store i64 %goarch.chunk0, i64* %goarch.addr.sroa.0.0.cast.5654.sroa_cast, align 8
  %goarch.addr.sroa.3.0.cast.5654.sroa_idx27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1615, i64 0, i32 1
  store i64 %goarch.chunk1, i64* %goarch.addr.sroa.3.0.cast.5654.sroa_idx27, align 8
  %cast.5657 = bitcast { i8*, i64 }* %tmpv.1615 to i8*, !dbg !2466
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.364, i8* nonnull %cast.5657), !dbg !2466
  %tmp.237.sroa.0.0.cast.5659.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1616, i64 0, i64 0, i32 0, !dbg !2466
  store %_type.0* @string..d, %_type.0** %tmp.237.sroa.0.0.cast.5659.sroa_idx, align 8, !dbg !2466
  %tmp.237.sroa.2.0.cast.5659.sroa_idx28 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1616, i64 0, i64 0, i32 1, !dbg !2466
  store i8* %call.364, i8** %tmp.237.sroa.2.0.cast.5659.sroa_idx28, align 8, !dbg !2466
  %field.1347 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.238, i64 0, i32 0, !dbg !2466
  %cast.5662 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1616, i64 0, i64 0, !dbg !2466
  store %IPST.16* %cast.5662, %IPST.16** %field.1347, align 8, !dbg !2466
  %field.1348 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.238, i64 0, i32 1, !dbg !2466
  store i64 1, i64* %field.1348, align 8, !dbg !2466
  %field.1349 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.238, i64 0, i32 2, !dbg !2466
  store i64 1, i64* %field.1349, align 8, !dbg !2466
  %call.365 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([19 x i8]* @const.516 to i64), i64 18, %IPST.2* byval nonnull %tmp.238), !dbg !2466
  %call.365.fca.0.extract = extractvalue { i64, i64 } %call.365, 0, !dbg !2466
  %call.365.fca.1.extract = extractvalue { i64, i64 } %call.365, 1, !dbg !2466
  %call.366 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2467
  %tmpv.1617.sroa.0.0.cast.5667.sroa_cast = bitcast { i8*, i64 }* %tmpv.1619 to i64*
  store i64 %call.365.fca.0.extract, i64* %tmpv.1617.sroa.0.0.cast.5667.sroa_cast, align 8
  %tmpv.1617.sroa.2.0.cast.5667.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1619, i64 0, i32 1
  store i64 %call.365.fca.1.extract, i64* %tmpv.1617.sroa.2.0.cast.5667.sroa_idx3, align 8
  %cast.5670 = bitcast { i8*, i64 }* %tmpv.1619 to i8*, !dbg !2467
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.366, i8* nonnull %cast.5670), !dbg !2467
  %0 = ptrtoint i8* %call.366 to i64, !dbg !2467
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %0), !dbg !2467
  unreachable
}

define { i64, i64 } @command_line_arguments.CopyFile(i8* nest nocapture readnone %nest.39, %Flags.0* %f, i64 %dst.chunk0, i64 %dst.chunk1, i64 %src.chunk0, i64 %src.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !2468 {
entry:
  %tmp.206 = alloca %IPST.2, align 8
  %f.addr = alloca %Flags.0*, align 8
  %tmpv.1384 = alloca i8, align 1
  %tmpv.1385 = alloca i8, align 1
  %tmpv.1387 = alloca { i8*, i64 }, align 8
  %tmpv.1389 = alloca { i8*, i64 }, align 8
  %tmpv.1390 = alloca [2 x %IPST.16], align 8
  %tmpv.1397 = alloca { i8*, %Flags.0**, i8* }, align 8
  %tmpv.1400 = alloca { %__go_descriptor.9* }, align 8
  %sret.actual.247 = alloca { %File.1*, %error.0 }, align 8
  %tmpv.1405 = alloca { %File.1* }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2471, metadata !DIExpression()), !dbg !2472
  store %Flags.0* %f, %Flags.0** %f.addr, align 8
  call void @llvm.dbg.value(metadata i64 %dst.chunk0, metadata !2473, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2474
  call void @llvm.dbg.value(metadata i64 %dst.chunk1, metadata !2473, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2474
  call void @llvm.dbg.value(metadata i64 %src.chunk0, metadata !2475, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2476
  call void @llvm.dbg.value(metadata i64 %src.chunk1, metadata !2475, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2476
  store i8 0, i8* %tmpv.1384, align 1
  call void @llvm.dbg.value(metadata i8 0, metadata !2477, metadata !DIExpression()), !dbg !2479
  store i8 0, i8* %tmpv.1385, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2481
  call void @llvm.dbg.value(metadata i64 0, metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2481
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2471, metadata !DIExpression()), !dbg !2472
  %call.299 = invoke i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f)
          to label %cont.312 unwind label %pad.8, !dbg !2482

finally.4:                                        ; preds = %cont.323, %then.500, %cont.326, %pad.8, %catchpad.4
  %"$ret46.sroa.0.1" = phi i64 [ 0, %catchpad.4 ], [ %4, %then.500 ], [ %call.300.fca.0.extract, %cont.326 ], [ 0, %pad.8 ], [ 0, %cont.323 ]
  %"$ret46.sroa.7.1" = phi i64 [ 0, %catchpad.4 ], [ %tmpv.1402.sroa.3.sroa.3.0.copyload1423, %then.500 ], [ %call.300.fca.1.extract, %cont.326 ], [ 0, %pad.8 ], [ 0, %cont.323 ]
  %ehtmp.4.sroa.0.0 = phi i8* [ %ex2.4.fca.0.extract, %catchpad.4 ], [ undef, %then.500 ], [ undef, %cont.326 ], [ undef, %pad.8 ], [ undef, %cont.323 ]
  %ehtmp.4.sroa.2.0 = phi i32 [ %ex2.4.fca.1.extract, %catchpad.4 ], [ undef, %then.500 ], [ undef, %cont.326 ], [ undef, %pad.8 ], [ undef, %cont.323 ]
  %finvar.4.0 = phi i8 [ 0, %catchpad.4 ], [ 1, %then.500 ], [ 1, %cont.326 ], [ 1, %pad.8 ], [ 1, %cont.323 ]
  call void @llvm.dbg.value(metadata i64 %"$ret46.sroa.7.1", metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2481
  call void @llvm.dbg.value(metadata i64 %"$ret46.sroa.0.1", metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2481
  br label %finish.4

pad.8:                                            ; preds = %cont.325, %else.500, %then.499, %cont.322, %fallthrough.497, %then.497, %then.496, %fallthrough.495, %then.495, %cont.315, %cont.314, %cont.313, %then.494, %entry
  %ex.8 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1384)
          to label %finally.4 unwind label %catchpad.4, !dbg !2483

cont.312:                                         ; preds = %entry
  %0 = and i8 %call.299, 1, !dbg !2484
  %trunc.495 = icmp eq i8 %0, 0, !dbg !2484
  br i1 %trunc.495, label %fallthrough.494, label %then.494

then.494:                                         ; preds = %cont.312
  %call.297 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.313 unwind label %pad.8, !dbg !2485

fallthrough.494:                                  ; preds = %fallthrough.495.fallthrough.494_crit_edge, %cont.312
  %f.ld.54 = phi %Flags.0* [ %f.ld.54.pre, %fallthrough.495.fallthrough.494_crit_edge ], [ %f, %cont.312 ], !dbg !2486
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.54, metadata !2471, metadata !DIExpression()), !dbg !2472
  %icmp.631 = icmp eq %Flags.0* %f.ld.54, null, !dbg !2487
  br i1 %icmp.631, label %then.496, label %fallthrough.496.thread

fallthrough.496.thread:                           ; preds = %fallthrough.494
  %field.115024 = getelementptr inbounds %Flags.0, %Flags.0* %f.ld.54, i64 0, i32 2, !dbg !2487
  %.field.ld.13825 = load i8, i8* %field.115024, align 1, !dbg !2487
  call void @llvm.dbg.value(metadata i8 %.field.ld.138, metadata !2477, metadata !DIExpression()), !dbg !2479
  store i8 %.field.ld.13825, i8* %tmpv.1385, align 1
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.55.pr, metadata !2471, metadata !DIExpression()), !dbg !2472
  br label %fallthrough.497

cont.313:                                         ; preds = %then.494
  %src.addr.sroa.0.0.cast.4756.sroa_cast = bitcast { i8*, i64 }* %tmpv.1387 to i64*
  store i64 %src.chunk0, i64* %src.addr.sroa.0.0.cast.4756.sroa_cast, align 8
  %src.addr.sroa.3.0.cast.4756.sroa_idx19 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1387, i64 0, i32 1
  store i64 %src.chunk1, i64* %src.addr.sroa.3.0.cast.4756.sroa_idx19, align 8
  %cast.4759 = bitcast { i8*, i64 }* %tmpv.1387 to i8*, !dbg !2485
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.297, i8* nonnull %cast.4759)
          to label %cont.314 unwind label %pad.8, !dbg !2485

cont.314:                                         ; preds = %cont.313
  %call.298 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.315 unwind label %pad.8, !dbg !2485

cont.315:                                         ; preds = %cont.314
  %dst.addr.sroa.0.0.cast.4761.sroa_cast = bitcast { i8*, i64 }* %tmpv.1389 to i64*
  store i64 %dst.chunk0, i64* %dst.addr.sroa.0.0.cast.4761.sroa_cast, align 8
  %dst.addr.sroa.3.0.cast.4761.sroa_idx20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1389, i64 0, i32 1
  store i64 %dst.chunk1, i64* %dst.addr.sroa.3.0.cast.4761.sroa_idx20, align 8
  %cast.4764 = bitcast { i8*, i64 }* %tmpv.1389 to i8*, !dbg !2485
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.298, i8* nonnull %cast.4764)
          to label %cont.316 unwind label %pad.8, !dbg !2485

cont.316:                                         ; preds = %cont.315
  %tmp.204.sroa.0.0.cast.4767.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1390, i64 0, i64 0, i32 0, !dbg !2485
  store %_type.0* @string..d, %_type.0** %tmp.204.sroa.0.0.cast.4767.sroa_idx, align 8, !dbg !2485
  %tmp.204.sroa.2.0.cast.4767.sroa_idx21 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1390, i64 0, i64 0, i32 1, !dbg !2485
  store i8* %call.297, i8** %tmp.204.sroa.2.0.cast.4767.sroa_idx21, align 8, !dbg !2485
  %tmp.205.sroa.0.0.cast.4769.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1390, i64 0, i64 1, i32 0, !dbg !2485
  store %_type.0* @string..d, %_type.0** %tmp.205.sroa.0.0.cast.4769.sroa_idx, align 8, !dbg !2485
  %tmp.205.sroa.2.0.cast.4769.sroa_idx22 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1390, i64 0, i64 1, i32 1, !dbg !2485
  store i8* %call.298, i8** %tmp.205.sroa.2.0.cast.4769.sroa_idx22, align 8, !dbg !2485
  %f.ld.52 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2488
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.52, metadata !2471, metadata !DIExpression()), !dbg !2472
  %icmp.630 = icmp eq %Flags.0* %f.ld.52, null, !dbg !2489
  br i1 %icmp.630, label %then.495, label %fallthrough.495

then.495:                                         ; preds = %cont.316
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.495 unwind label %pad.8, !dbg !2489

fallthrough.495:                                  ; preds = %cont.316, %then.495
  %field.1146 = getelementptr inbounds %Flags.0, %Flags.0* %f.ld.52, i64 0, i32 0, !dbg !2489
  %.field.ld.137 = load %Logger.0*, %Logger.0** %field.1146, align 8, !dbg !2489
  %field.1147 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.206, i64 0, i32 0, !dbg !2485
  %cast.4773 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1390, i64 0, i64 0, !dbg !2485
  store %IPST.16* %cast.4773, %IPST.16** %field.1147, align 8, !dbg !2485
  %field.1148 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.206, i64 0, i32 1, !dbg !2485
  store i64 2, i64* %field.1148, align 8, !dbg !2485
  %field.1149 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.206, i64 0, i32 2, !dbg !2485
  store i64 2, i64* %field.1149, align 8, !dbg !2485
  invoke void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.137, i64 ptrtoint ([10 x i8]* @const.481 to i64), i64 9, %IPST.2* byval nonnull %tmp.206)
          to label %fallthrough.495.fallthrough.494_crit_edge unwind label %pad.8, !dbg !2485

fallthrough.495.fallthrough.494_crit_edge:        ; preds = %fallthrough.495
  %f.ld.54.pre = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2486
  br label %fallthrough.494, !dbg !2485

then.496:                                         ; preds = %fallthrough.494
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.496 unwind label %pad.8, !dbg !2487

fallthrough.496:                                  ; preds = %then.496
  %f.ld.55.pr = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2490
  %.field.ld.138 = load i8, i8* inttoptr (i64 9 to i8*), align 1, !dbg !2487
  call void @llvm.dbg.value(metadata i8 %.field.ld.138, metadata !2477, metadata !DIExpression()), !dbg !2479
  store i8 %.field.ld.138, i8* %tmpv.1385, align 1
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.55.pr, metadata !2471, metadata !DIExpression()), !dbg !2472
  %icmp.632 = icmp eq %Flags.0* %f.ld.55.pr, null, !dbg !2491
  br i1 %icmp.632, label %then.497, label %fallthrough.497

then.497:                                         ; preds = %fallthrough.496
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.497 unwind label %pad.8, !dbg !2491

fallthrough.497:                                  ; preds = %fallthrough.496.thread, %fallthrough.496, %then.497
  %f.ld.5527 = phi %Flags.0* [ %f.ld.54, %fallthrough.496.thread ], [ %f.ld.55.pr, %fallthrough.496 ], [ null, %then.497 ]
  %field.1151 = getelementptr inbounds %Flags.0, %Flags.0* %f.ld.5527, i64 0, i32 2, !dbg !2491
  store i8 1, i8* %field.1151, align 1, !dbg !2492
  %field.1152 = getelementptr inbounds { i8*, %Flags.0**, i8* }, { i8*, %Flags.0**, i8* }* %tmpv.1397, i64 0, i32 0, !dbg !2493
  store i8* bitcast (void (i8*)* @command_line_arguments.CopyFile..func1 to i8*), i8** %field.1152, align 8, !dbg !2493
  %field.1153 = getelementptr inbounds { i8*, %Flags.0**, i8* }, { i8*, %Flags.0**, i8* }* %tmpv.1397, i64 0, i32 1, !dbg !2493
  store %Flags.0** %f.addr, %Flags.0*** %field.1153, align 8, !dbg !2493
  %field.1154 = getelementptr inbounds { i8*, %Flags.0**, i8* }, { i8*, %Flags.0**, i8* }* %tmpv.1397, i64 0, i32 2, !dbg !2493
  store i8* %tmpv.1385, i8** %field.1154, align 8, !dbg !2493
  %cast.4781 = bitcast { %__go_descriptor.9* }* %tmpv.1400 to i8*
  %1 = bitcast { %__go_descriptor.9* }* %tmpv.1400 to { i8*, %Flags.0**, i8* }**, !dbg !2494
  store { i8*, %Flags.0**, i8* }* %tmpv.1397, { i8*, %Flags.0**, i8* }** %1, align 8, !dbg !2494
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.1384, %__go_descriptor.27* bitcast (void (i8*, { %__go_descriptor.9* }*)* @command_line_arguments.command_line_arguments..thunk7 to %__go_descriptor.27*), i8* nonnull %cast.4781)
          to label %cont.322 unwind label %pad.8, !dbg !2494

cont.322:                                         ; preds = %fallthrough.497
  %f.ld.57 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2495
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.57, metadata !2471, metadata !DIExpression()), !dbg !2472
  %call.301 = invoke i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f.ld.57)
          to label %cont.323 unwind label %pad.8, !dbg !2496

cont.323:                                         ; preds = %cont.322
  %2 = and i8 %call.301, 1, !dbg !2497
  %trunc.500 = icmp eq i8 %2, 0, !dbg !2497
  br i1 %trunc.500, label %finally.4, label %then.499

then.499:                                         ; preds = %cont.323
  invoke void @os.Open({ %File.1*, %error.0 }* nonnull sret %sret.actual.247, i8* nest undef, i64 %src.chunk0, i64 %src.chunk1)
          to label %cont.324 unwind label %pad.8, !dbg !2498

cont.324:                                         ; preds = %then.499
  %tmpv.1402.sroa.0.0.cast.4789.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.247, i64 0, i32 0, !dbg !2498
  %tmpv.1402.sroa.0.0.copyload5 = load %File.1*, %File.1** %tmpv.1402.sroa.0.0.cast.4789.sroa_idx, align 8, !dbg !2498
  %tmpv.1402.sroa.3.sroa.0.0.tmpv.1402.sroa.3.0.cast.4789.sroa_cast.sroa_idx = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.247, i64 0, i32 1, i32 0, !dbg !2498
  %tmpv.1402.sroa.3.sroa.0.0.copyload12 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1402.sroa.3.sroa.0.0.tmpv.1402.sroa.3.0.cast.4789.sroa_cast.sroa_idx, align 8, !dbg !2498
  call void @llvm.dbg.value(metadata %File.1* %tmpv.1402.sroa.0.0.copyload5, metadata !2500, metadata !DIExpression()), !dbg !2501
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1402.sroa.3.sroa.0.0.copyload12, metadata !2502, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2501
  %icmp.634 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1402.sroa.3.sroa.0.0.copyload12, null, !dbg !2503
  br i1 %icmp.634, label %else.500, label %then.500

then.500:                                         ; preds = %cont.324
  %tmpv.1402.sroa.3.sroa.3.0.tmpv.1402.sroa.3.0.cast.4789.sroa_cast.sroa_idx13 = getelementptr inbounds { %File.1*, %error.0 }, { %File.1*, %error.0 }* %sret.actual.247, i64 0, i32 1, i32 1, !dbg !2498
  %3 = bitcast i8** %tmpv.1402.sroa.3.sroa.3.0.tmpv.1402.sroa.3.0.cast.4789.sroa_cast.sroa_idx13 to i64*, !dbg !2498
  %tmpv.1402.sroa.3.sroa.3.0.copyload1423 = load i64, i64* %3, align 8, !dbg !2498
  call void @llvm.dbg.value(metadata i8** %tmpv.1402.sroa.3.sroa.3.0.tmpv.1402.sroa.3.0.cast.4789.sroa_cast.sroa_idx13, metadata !2502, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2501
  %4 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1402.sroa.3.sroa.0.0.copyload12 to i64, !dbg !2504
  call void @llvm.dbg.value(metadata i64 %4, metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2481
  call void @llvm.dbg.value(metadata i64 %tmpv.1402.sroa.3.sroa.3.0.copyload1423, metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2481
  br label %finally.4

else.500:                                         ; preds = %cont.324
  %cast.4798 = bitcast { %File.1* }* %tmpv.1405 to i8*
  %field.1159 = getelementptr inbounds { %File.1* }, { %File.1* }* %tmpv.1405, i64 0, i32 0, !dbg !2505
  store %File.1* %tmpv.1402.sroa.0.0.copyload5, %File.1** %field.1159, align 8, !dbg !2505
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.1384, %__go_descriptor.27* bitcast (i8 (i8*, { %File.1* }*)* @command_line_arguments.command_line_arguments..thunk8 to %__go_descriptor.27*), i8* nonnull %cast.4798)
          to label %cont.325 unwind label %pad.8, !dbg !2505

cont.325:                                         ; preds = %else.500
  %f.ld.56 = load %Flags.0*, %Flags.0** %f.addr, align 8, !dbg !2506
  call void @llvm.dbg.value(metadata %Flags.0* %f.ld.56, metadata !2471, metadata !DIExpression()), !dbg !2472
  %5 = ptrtoint %File.1* %tmpv.1402.sroa.0.0.copyload5 to i64, !dbg !2507
  %call.300 = invoke { i64, i64 } @command_line_arguments.WriteFile(i8* nest undef, %Flags.0* %f.ld.56, i64 %dst.chunk0, i64 %dst.chunk1, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), i64 %5)
          to label %cont.326 unwind label %pad.8, !dbg !2508

cont.326:                                         ; preds = %cont.325
  %call.300.fca.0.extract = extractvalue { i64, i64 } %call.300, 0, !dbg !2508
  %call.300.fca.1.extract = extractvalue { i64, i64 } %call.300, 1, !dbg !2508
  call void @llvm.dbg.value(metadata i64 %call.300.fca.0.extract, metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2481
  call void @llvm.dbg.value(metadata i64 %call.300.fca.1.extract, metadata !2480, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2481
  br label %finally.4

catchpad.4:                                       ; preds = %pad.8
  %ex2.4 = landingpad { i8*, i32 }
          cleanup
  %ex2.4.fca.0.extract = extractvalue { i8*, i32 } %ex2.4, 0
  %ex2.4.fca.1.extract = extractvalue { i8*, i32 } %ex2.4, 1
  br label %finally.4

pad.9:                                            ; preds = %finish.4
  %ex.9 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1384), !dbg !2483
  br label %finish.4

finish.4:                                         ; preds = %pad.9, %finally.4
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.1384)
          to label %cont.328 unwind label %pad.9, !dbg !2483

cont.328:                                         ; preds = %finish.4
  %icmp.635 = icmp eq i8 %finvar.4.0, 1
  br i1 %icmp.635, label %finret.4, label %finres.4

finres.4:                                         ; preds = %cont.328
  %excv.4.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.4.sroa.0.0, 0
  %excv.4.fca.1.insert = insertvalue { i8*, i32 } %excv.4.fca.0.insert, i32 %ehtmp.4.sroa.2.0, 1
  resume { i8*, i32 } %excv.4.fca.1.insert

finret.4:                                         ; preds = %cont.328
  %ld.505.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret46.sroa.0.1", 0, !dbg !2509
  %ld.505.fca.1.insert = insertvalue { i64, i64 } %ld.505.fca.0.insert, i64 %"$ret46.sroa.7.1", 1, !dbg !2509
  ret { i64, i64 } %ld.505.fca.1.insert, !dbg !2509
}

define { i64, i64 } @command_line_arguments.GoEnv(i8* nest nocapture readnone %nest.64, %Flags.0* %f, i64 %name.chunk0, i64 %name.chunk1) #0 !dbg !2510 {
entry:
  %tmp.290 = alloca [2 x { i8*, i64 }], align 8
  %tmp.289 = alloca %IPST.3, align 8
  %out = alloca { i8*, i64, i64 }, align 8
  %tmpv.1824 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.357 = alloca %IPST.4, align 8
  %sret.actual.358 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2511, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata i64 %name.chunk0, metadata !2513, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2514
  call void @llvm.dbg.value(metadata i64 %name.chunk1, metadata !2513, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2514
  %0 = bitcast { i8*, i64, i64 }* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %call.429 = call { i64, i64 } @command_line_arguments.GetEnv(i8* nest undef, %Flags.0* %f, i64 %name.chunk0, i64 %name.chunk1), !dbg !2515
  %call.429.fca.0.extract = extractvalue { i64, i64 } %call.429, 0, !dbg !2515
  %call.429.fca.1.extract = extractvalue { i64, i64 } %call.429, 1, !dbg !2515
  call void @llvm.dbg.value(metadata i64 %call.429.fca.0.extract, metadata !2518, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2519
  call void @llvm.dbg.value(metadata i64 %call.429.fca.1.extract, metadata !2518, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2519
  %call.430 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.429.fca.0.extract, i64 %call.429.fca.1.extract, i64 0, i64 0), !dbg !2520
  %icmp.725 = icmp eq i8 %call.430, 1, !dbg !2520
  br i1 %icmp.725, label %else.607, label %then.607

then.607:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i64 %call.429.fca.0.extract, metadata !2521, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2522
  call void @llvm.dbg.value(metadata i64 %call.429.fca.1.extract, metadata !2521, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !2523
  ret { i64, i64 } %call.429, !dbg !2523

else.607:                                         ; preds = %entry
  %cast.6705 = bitcast [2 x { i8*, i64 }]* %tmpv.1824 to i8*, !dbg !2524
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6705, i8* align 8 bitcast ({ i8*, i64 }* @const.576 to i8*), i64 16, i1 false), !dbg !2524
  %name.addr.sroa.0.0.cast.6707.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1824, i64 0, i64 1, !dbg !2524
  %name.addr.sroa.0.0.cast.6707.sroa_cast = bitcast { i8*, i64 }* %name.addr.sroa.0.0.cast.6707.sroa_idx to i64*, !dbg !2524
  store i64 %name.chunk0, i64* %name.addr.sroa.0.0.cast.6707.sroa_cast, align 8, !dbg !2524
  %name.addr.sroa.4.0.cast.6707.sroa_idx38 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1824, i64 0, i64 1, i32 1, !dbg !2524
  store i64 %name.chunk1, i64* %name.addr.sroa.4.0.cast.6707.sroa_idx38, align 8, !dbg !2524
  %field.1475 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.289, i64 0, i32 0, !dbg !2524
  %cast.6710 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1824, i64 0, i64 0, !dbg !2524
  store { i8*, i64 }* %cast.6710, { i8*, i64 }** %field.1475, align 8, !dbg !2524
  %field.1476 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.289, i64 0, i32 1, !dbg !2524
  store i64 2, i64* %field.1476, align 8, !dbg !2524
  %field.1477 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.289, i64 0, i32 2, !dbg !2524
  store i64 2, i64* %field.1477, align 8, !dbg !2524
  %call.431 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([3 x i8]* @const.554 to i64), i64 2, %IPST.3* byval nonnull %tmp.289), !dbg !2524
  call void @llvm.dbg.value(metadata %Cmd.0* %call.431, metadata !2525, metadata !DIExpression()), !dbg !2526
  %cast.6715 = bitcast [2 x { i8*, i64 }]* %tmp.290 to i8*, !dbg !2527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6715, i8* align 8 bitcast ({ i8*, i64 }* @const.490 to i8*), i64 16, i1 false), !dbg !2527
  %name.addr.sroa.0.0.cast.6717.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.290, i64 0, i64 1, !dbg !2527
  %name.addr.sroa.0.0.cast.6717.sroa_cast = bitcast { i8*, i64 }* %name.addr.sroa.0.0.cast.6717.sroa_idx to i64*, !dbg !2527
  store i64 %name.chunk0, i64* %name.addr.sroa.0.0.cast.6717.sroa_cast, align 8, !dbg !2527
  %name.addr.sroa.4.0.cast.6717.sroa_idx39 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.290, i64 0, i64 1, i32 1, !dbg !2527
  store i64 %name.chunk1, i64* %name.addr.sroa.4.0.cast.6717.sroa_idx39, align 8, !dbg !2527
  %call.432 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.290), !dbg !2527
  %call.432.fca.0.extract = extractvalue { i64, i64 } %call.432, 0, !dbg !2527
  %call.432.fca.1.extract = extractvalue { i64, i64 } %call.432, 1, !dbg !2527
  call void @runtime.stringtoslicebyte(%IPST.4* nonnull sret %sret.actual.357, i8* nest undef, i8* null, i64 %call.432.fca.0.extract, i64 %call.432.fca.1.extract), !dbg !2528
  %cast.6723 = bitcast %IPST.4* %sret.actual.357 to { i8*, i64, i64 }*, !dbg !2528
  call void @command_line_arguments.OutputCmd({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.358, i8* nest undef, %Flags.0* %f, { i8*, i64, i64 }* byval nonnull %cast.6723, i64 0, i64 0, %Cmd.0* %call.431), !dbg !2529
  %tmpv.1825.sroa.0.0.cast.6726.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.358 to i8*, !dbg !2529
  %tmpv.1825.sroa.3.0.cast.6726.sroa_idx20 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.358, i64 0, i32 1, i32 0, !dbg !2529
  %tmpv.1825.sroa.3.0.copyload21 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1825.sroa.3.0.cast.6726.sroa_idx20, align 8, !dbg !2529
  %out41 = bitcast { i8*, i64, i64 }* %out to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %out41, i8* nonnull align 8 %tmpv.1825.sroa.0.0.cast.6726.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1825.sroa.3.0.copyload21, metadata !2530, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2531
  call void @llvm.dbg.value(metadata { { i8*, i64, i64 }, %error.0 }* %sret.actual.358, metadata !2530, metadata !DIExpression(DW_OP_plus_uconst, 32, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !2531
  %icmp.726 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1825.sroa.3.0.copyload21, null, !dbg !2532
  br i1 %icmp.726, label %else.608, label %then.608

then.608:                                         ; preds = %else.607
  call void @llvm.dbg.value(metadata i64 0, metadata !2521, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2522
  call void @llvm.dbg.value(metadata i64 0, metadata !2521, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !2533
  ret { i64, i64 } zeroinitializer, !dbg !2533

else.608:                                         ; preds = %else.607
  %cast.6739 = bitcast { i8*, i64, i64 }* %out to %IPST.4*, !dbg !2534
  %call.433 = call { i64, i64 } @runtime.slicebytetostring(i8* nest undef, i8* null, %IPST.4* byval nonnull %cast.6739), !dbg !2534
  %call.433.fca.0.extract = extractvalue { i64, i64 } %call.433, 0, !dbg !2534
  %call.433.fca.1.extract = extractvalue { i64, i64 } %call.433, 1, !dbg !2534
  %call.434 = call { i64, i64 } @strings.TrimSpace(i8* nest undef, i64 %call.433.fca.0.extract, i64 %call.433.fca.1.extract), !dbg !2535
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !2536
  ret { i64, i64 } %call.434, !dbg !2536
}

declare { i64, i64 } @runtime.concatstring4(i8*, i8*, [4 x { i8*, i64 }]*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.GoBuild(i8* nest nocapture readnone %nest.66, %Flags.0* %f, %IPST.3* byval nocapture readonly %srcs, %IPST.3* byval nocapture readonly %env, %IPST.3* byval %buildTags, i64 %matchaPkgPath.chunk0, i64 %matchaPkgPath.chunk1, i64 %tmpdir.chunk0, i64 %tmpdir.chunk1, %IPST.3* byval nocapture readonly %args) #0 !dbg !2537 {
entry:
  %tmp.298 = alloca %IPST.3, align 8
  %tmp.297 = alloca [2 x { i8*, i64 }], align 8
  %tmp.296 = alloca %IPST.2, align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %args, metadata !2540, metadata !DIExpression()), !dbg !2541
  call void @llvm.dbg.declare(metadata %IPST.3* %buildTags, metadata !2542, metadata !DIExpression()), !dbg !2543
  call void @llvm.dbg.declare(metadata %IPST.3* %env, metadata !2544, metadata !DIExpression()), !dbg !2545
  call void @llvm.dbg.declare(metadata %IPST.3* %srcs, metadata !2546, metadata !DIExpression()), !dbg !2547
  %sret.actual.362 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.1843 = alloca { i8*, i64 }, align 8
  %tmpv.1844 = alloca [1 x %IPST.16], align 8
  %tmpv.1849 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1850 = alloca { i8*, i64 }, align 8
  %tmpv.1853 = alloca %IPST.3, align 8
  %tmpv.1856 = alloca { i8*, i64 }, align 8
  %sret.actual.366 = alloca %IPST.4, align 8
  %tmpv.1870 = alloca %IPST.3, align 8
  %tmpv.1874 = alloca %IPST.3, align 8
  %tmpv.1877 = alloca { i8*, i64 }, align 8
  %sret.actual.367 = alloca %IPST.4, align 8
  %tmpv.1887 = alloca %IPST.3, align 8
  %tmpv.1892 = alloca %IPST.3, align 8
  %tmpv.1895 = alloca { i8*, i64 }, align 8
  %sret.actual.368 = alloca %IPST.4, align 8
  %tmpv.1905 = alloca %IPST.3, align 8
  %tmpv.1910 = alloca %IPST.3, align 8
  %tmpv.1913 = alloca { i8*, i64 }, align 8
  %tmpv.1914 = alloca { i8*, i64 }, align 8
  %sret.actual.369 = alloca %IPST.4, align 8
  %tmpv.1929 = alloca %IPST.3, align 8
  %tmpv.1934 = alloca %IPST.3, align 8
  %tmpv.1937 = alloca { i8*, i64 }, align 8
  %tmpv.1938 = alloca { i8*, i64 }, align 8
  %sret.actual.370 = alloca %IPST.4, align 8
  %tmpv.1953 = alloca %IPST.3, align 8
  %tmpv.1958 = alloca %IPST.3, align 8
  %tmpv.1961 = alloca { i8*, i64 }, align 8
  %sret.actual.371 = alloca %IPST.4, align 8
  %tmpv.1971 = alloca %IPST.3, align 8
  %tmpv.1976 = alloca %IPST.3, align 8
  %tmpv.1979 = alloca %IPST.3, align 8
  %sret.actual.372 = alloca %IPST.4, align 8
  %tmpv.1986 = alloca %IPST.3, align 8
  %tmpv.1989 = alloca %IPST.3, align 8
  %tmpv.1993 = alloca %IPST.3, align 8
  %tmpv.1996 = alloca %IPST.3, align 8
  %sret.actual.373 = alloca %IPST.4, align 8
  %tmpv.2003 = alloca %IPST.3, align 8
  %tmpv.2006 = alloca %IPST.3, align 8
  %tmpv.2011 = alloca %IPST.3, align 8
  %tmpv.2013 = alloca %IPST.3, align 8
  %sret.actual.374 = alloca %IPST.4, align 8
  %tmpv.2020 = alloca %IPST.3, align 8
  %tmpv.2023 = alloca %IPST.3, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2548, metadata !DIExpression()), !dbg !2549
  call void @llvm.dbg.value(metadata i64 %matchaPkgPath.chunk0, metadata !2550, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2551
  call void @llvm.dbg.value(metadata i64 %matchaPkgPath.chunk1, metadata !2550, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2551
  call void @llvm.dbg.value(metadata i64 %tmpdir.chunk0, metadata !2552, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2553
  call void @llvm.dbg.value(metadata i64 %tmpdir.chunk1, metadata !2552, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2553
  call void @command_line_arguments.PkgPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.362, i8* nest undef, %Flags.0* undef, i64 %matchaPkgPath.chunk0, i64 %matchaPkgPath.chunk1, %IPST.3* byval nonnull %env), !dbg !2554
  %tmpv.1839.sroa.0.sroa.0.0.tmpv.1839.sroa.0.0.cast.6812.sroa_cast.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.362 to i64*, !dbg !2554
  %tmpv.1839.sroa.0.sroa.0.0.copyload188 = load i64, i64* %tmpv.1839.sroa.0.sroa.0.0.tmpv.1839.sroa.0.0.cast.6812.sroa_cast.sroa_cast, align 8, !dbg !2554
  %tmpv.1839.sroa.0.sroa.3.0.tmpv.1839.sroa.0.0.cast.6812.sroa_cast.sroa_idx189 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.362, i64 0, i32 0, i32 1, !dbg !2554
  %tmpv.1839.sroa.0.sroa.3.0.copyload190 = load i64, i64* %tmpv.1839.sroa.0.sroa.3.0.tmpv.1839.sroa.0.0.cast.6812.sroa_cast.sroa_idx189, align 8, !dbg !2554
  %tmpv.1839.sroa.3.0.cast.6812.sroa_idx170 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.362, i64 0, i32 1, i32 0, !dbg !2554
  %tmpv.1839.sroa.3.0.copyload171 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1839.sroa.3.0.cast.6812.sroa_idx170, align 8, !dbg !2554
  call void @llvm.dbg.value(metadata i64 %tmpv.1839.sroa.0.sroa.0.0.copyload188, metadata !2556, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2557
  call void @llvm.dbg.value(metadata i64 %tmpv.1839.sroa.0.sroa.3.0.copyload190, metadata !2556, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2557
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1839.sroa.3.0.copyload171, metadata !2558, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2557
  %icmp.728 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1839.sroa.3.0.copyload171, null, !dbg !2559
  br i1 %icmp.728, label %else.610, label %then.610

then.610:                                         ; preds = %entry
  %tmpv.1839.sroa.4.0.cast.6812.sroa_idx172 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.362, i64 0, i32 1, i32 1, !dbg !2554
  %0 = bitcast i8** %tmpv.1839.sroa.4.0.cast.6812.sroa_idx172 to i64*, !dbg !2554
  %tmpv.1839.sroa.4.0.copyload173311 = load i64, i64* %0, align 8, !dbg !2554
  call void @llvm.dbg.value(metadata i8** %tmpv.1839.sroa.4.0.cast.6812.sroa_idx172, metadata !2558, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2557
  %1 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1839.sroa.3.0.copyload171 to i64, !dbg !2560
  call void @llvm.dbg.value(metadata i64 %1, metadata !2561, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2562
  call void @llvm.dbg.value(metadata i64 %tmpv.1839.sroa.4.0.copyload173311, metadata !2561, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2562
  %ld.763.fca.0.insert = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !2560
  %ld.763.fca.1.insert = insertvalue { i64, i64 } %ld.763.fca.0.insert, i64 %tmpv.1839.sroa.4.0.copyload173311, 1, !dbg !2560
  ret { i64, i64 } %ld.763.fca.1.insert, !dbg !2560

else.610:                                         ; preds = %entry
  %call.439 = call i8 @command_line_arguments.IsDir(i8* nest undef, %Flags.0* %f, i64 %tmpv.1839.sroa.0.sroa.0.0.copyload188, i64 %tmpv.1839.sroa.0.sroa.3.0.copyload190), !dbg !2563
  %icmp.729 = icmp eq i8 %call.439, 0, !dbg !2564
  br i1 %icmp.729, label %then.611, label %else.611

then.611:                                         ; preds = %else.610
  %call.437 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2565
  %pkgPath.sroa.0.0.cast.6826.sroa_cast = bitcast { i8*, i64 }* %tmpv.1843 to i64*
  store i64 %tmpv.1839.sroa.0.sroa.0.0.copyload188, i64* %pkgPath.sroa.0.0.cast.6826.sroa_cast, align 8
  %pkgPath.sroa.8.0.cast.6826.sroa_idx180 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1843, i64 0, i32 1
  store i64 %tmpv.1839.sroa.0.sroa.3.0.copyload190, i64* %pkgPath.sroa.8.0.cast.6826.sroa_idx180, align 8
  %cast.6829 = bitcast { i8*, i64 }* %tmpv.1843 to i8*, !dbg !2565
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.437, i8* nonnull %cast.6829), !dbg !2565
  %tmp.295.sroa.0.0.cast.6831.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1844, i64 0, i64 0, i32 0, !dbg !2565
  store %_type.0* @string..d, %_type.0** %tmp.295.sroa.0.0.cast.6831.sroa_idx, align 8, !dbg !2565
  %tmp.295.sroa.2.0.cast.6831.sroa_idx199 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1844, i64 0, i64 0, i32 1, !dbg !2565
  store i8* %call.437, i8** %tmp.295.sroa.2.0.cast.6831.sroa_idx199, align 8, !dbg !2565
  %field.1499 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.296, i64 0, i32 0, !dbg !2565
  %cast.6834 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1844, i64 0, i64 0, !dbg !2565
  store %IPST.16* %cast.6834, %IPST.16** %field.1499, align 8, !dbg !2565
  %field.1500 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.296, i64 0, i32 1, !dbg !2565
  store i64 1, i64* %field.1500, align 8, !dbg !2565
  %field.1501 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.296, i64 0, i32 2, !dbg !2565
  store i64 1, i64* %field.1501, align 8, !dbg !2565
  %call.438 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([65 x i8]* @const.580 to i64), i64 64, %IPST.2* byval nonnull %tmp.296), !dbg !2565
  ret { i64, i64 } %call.438, !dbg !2566

else.611:                                         ; preds = %else.610
  %cast.6846 = bitcast [2 x { i8*, i64 }]* %tmp.297 to i8*, !dbg !2567
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6846, i8* align 8 bitcast ({ i8*, i64 }* @const.583 to i8*), i64 16, i1 false), !dbg !2567
  %pkgPath.sroa.0.0.cast.6848.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.297, i64 0, i64 1, !dbg !2567
  %pkgPath.sroa.0.0.cast.6848.sroa_cast = bitcast { i8*, i64 }* %pkgPath.sroa.0.0.cast.6848.sroa_idx to i64*, !dbg !2567
  store i64 %tmpv.1839.sroa.0.sroa.0.0.copyload188, i64* %pkgPath.sroa.0.0.cast.6848.sroa_cast, align 8, !dbg !2567
  %pkgPath.sroa.8.0.cast.6848.sroa_idx182 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.297, i64 0, i64 1, i32 1, !dbg !2567
  store i64 %tmpv.1839.sroa.0.sroa.3.0.copyload190, i64* %pkgPath.sroa.8.0.cast.6848.sroa_idx182, align 8, !dbg !2567
  %call.440 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.297), !dbg !2567
  %call.440.fca.0.extract = extractvalue { i64, i64 } %call.440, 0, !dbg !2567
  %call.440.fca.1.extract = extractvalue { i64, i64 } %call.440, 1, !dbg !2567
  %cast.6854 = bitcast [2 x { i8*, i64 }]* %tmpv.1849 to i8*, !dbg !2568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6854, i8* align 8 bitcast ({ i8*, i64 }* @const.585 to i8*), i64 16, i1 false), !dbg !2568
  %tmpv.1848.sroa.0.0.cast.6856.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1849, i64 0, i64 1, !dbg !2568
  %tmpv.1848.sroa.0.0.cast.6856.sroa_cast = bitcast { i8*, i64 }* %tmpv.1848.sroa.0.0.cast.6856.sroa_idx to i64*, !dbg !2568
  store i64 %call.440.fca.0.extract, i64* %tmpv.1848.sroa.0.0.cast.6856.sroa_cast, align 8, !dbg !2568
  %tmpv.1848.sroa.2.0.cast.6856.sroa_idx151 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1849, i64 0, i64 1, i32 1, !dbg !2568
  store i64 %call.440.fca.1.extract, i64* %tmpv.1848.sroa.2.0.cast.6856.sroa_idx151, align 8, !dbg !2568
  %field.1502 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.298, i64 0, i32 0, !dbg !2568
  %cast.6859 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1849, i64 0, i64 0, !dbg !2568
  store { i8*, i64 }* %cast.6859, { i8*, i64 }** %field.1502, align 8, !dbg !2568
  %field.1503 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.298, i64 0, i32 1, !dbg !2568
  store i64 2, i64* %field.1503, align 8, !dbg !2568
  %field.1504 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.298, i64 0, i32 2, !dbg !2568
  store i64 2, i64* %field.1504, align 8, !dbg !2568
  %call.441 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([3 x i8]* @const.554 to i64), i64 2, %IPST.3* byval nonnull %tmp.298), !dbg !2568
  call void @llvm.dbg.value(metadata %Cmd.0* %call.441, metadata !2569, metadata !DIExpression()), !dbg !2570
  %field.1521 = getelementptr inbounds %IPST.3, %IPST.3* %buildTags, i64 0, i32 1, !dbg !2571
  %buildTags.field.ld.0 = load i64, i64* %field.1521, align 8, !dbg !2571
  %icmp.749 = icmp sgt i64 %buildTags.field.ld.0, 0, !dbg !2572
  br i1 %icmp.749, label %then.612, label %fallthrough.612

then.612:                                         ; preds = %else.611
  %call.442 = call { i64, i64 } @strings.Join(i8* nest undef, %IPST.3* byval nonnull %buildTags, i64 ptrtoint ([2 x i8]* @const.439 to i64), i64 1), !dbg !2573
  %call.442.fca.0.extract = extractvalue { i64, i64 } %call.442, 0, !dbg !2573
  %call.442.fca.1.extract = extractvalue { i64, i64 } %call.442, 1, !dbg !2573
  %sret.actual.365.sroa.0.0.cast.6862.sroa_cast = bitcast { i8*, i64 }* %tmpv.1850 to i64*
  store i64 %call.442.fca.0.extract, i64* %sret.actual.365.sroa.0.0.cast.6862.sroa_cast, align 8
  %sret.actual.365.sroa.2.0.cast.6862.sroa_idx149 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1850, i64 0, i32 1
  store i64 %call.442.fca.1.extract, i64* %sret.actual.365.sroa.2.0.cast.6862.sroa_idx149, align 8
  %icmp.730 = icmp eq %Cmd.0* %call.441, null, !dbg !2574
  br i1 %icmp.730, label %then.613, label %else.614

fallthrough.612:                                  ; preds = %else.625, %else.624, %else.611
  %icmp.765 = icmp eq %Flags.0* %f, null, !dbg !2575
  br i1 %icmp.765, label %then.626, label %else.626

then.613:                                         ; preds = %then.612
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2574
  unreachable

else.614:                                         ; preds = %then.612
  %field.1505 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 1, !dbg !2574
  %cast.6866 = bitcast %IPST.3* %tmpv.1853 to i8*
  %cast.6867 = bitcast %IPST.3* %field.1505 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6866, i8* nonnull align 8 %cast.6867, i64 24, i1 false)
  %field.1507 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1853, i64 0, i32 1, !dbg !2576
  %tmpv.1853.field.ld.0 = load i64, i64* %field.1507, align 8, !dbg !2576
  %cast.6868 = bitcast { i8*, i64 }* %tmpv.1856 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6868, i8* align 8 bitcast ({ i8*, i64 }* @const.587 to i8*), i64 16, i1 false)
  %add.67 = add i64 %tmpv.1853.field.ld.0, 2, !dbg !2576
  %field.1508 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1853, i64 0, i32 2, !dbg !2576
  %tmpv.1853.field.ld.1 = load i64, i64* %field.1508, align 8, !dbg !2576
  %icmp.732 = icmp ugt i64 %add.67, %tmpv.1853.field.ld.1, !dbg !2576
  br i1 %icmp.732, label %then.615, label %else.615

then.615:                                         ; preds = %else.614
  %cast.6870 = bitcast %IPST.3* %tmpv.1853 to %IPST.4*, !dbg !2576
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.366, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.6870, i64 %add.67), !dbg !2576
  %tmpv.1861.sroa.0.0.cast.6875.sroa_idx = bitcast %IPST.4* %sret.actual.366 to { i8*, i64 }**
  %tmpv.1861.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1861.sroa.0.0.cast.6875.sroa_idx, align 8
  %2 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.366, i64 0, i32 1
  %tmpv.1861.sroa.3.0.copyload = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.366, i64 0, i32 2
  %tmpv.1861.sroa.4.0.copyload = load i64, i64* %3, align 8
  %.pre = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1853, i64 0, i32 0, !dbg !2576
  br label %fallthrough.615

fallthrough.615:                                  ; preds = %else.616, %then.615
  %tmpv.1861.sroa.0.0.cast.6878.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1511, %else.616 ], [ %.pre, %then.615 ], !dbg !2576
  %tmpv.1861.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1853.field.ld.3, %else.616 ], [ %tmpv.1861.sroa.0.0.copyload, %then.615 ]
  %tmpv.1861.sroa.3.0 = phi i64 [ %add.67, %else.616 ], [ %tmpv.1861.sroa.3.0.copyload, %then.615 ]
  %tmpv.1861.sroa.4.0 = phi i64 [ %tmpv.1853.field.ld.1, %else.616 ], [ %tmpv.1861.sroa.4.0.copyload, %then.615 ]
  store { i8*, i64 }* %tmpv.1861.sroa.0.0, { i8*, i64 }** %tmpv.1861.sroa.0.0.cast.6878.sroa_idx.pre-phi, align 8, !dbg !2576
  store i64 %tmpv.1861.sroa.3.0, i64* %field.1507, align 8, !dbg !2576
  store i64 %tmpv.1861.sroa.4.0, i64* %field.1508, align 8, !dbg !2576
  %icmp.739 = icmp sge i64 %tmpv.1853.field.ld.0, %tmpv.1861.sroa.3.0, !dbg !2576
  %4 = icmp slt i64 %tmpv.1853.field.ld.0, 0, !dbg !2576
  %ior.342 = or i1 %4, %icmp.739, !dbg !2576
  br i1 %ior.342, label %then.618, label %else.618

else.615:                                         ; preds = %else.614
  %icmp.734 = icmp sgt i64 %add.67, %tmpv.1853.field.ld.1, !dbg !2576
  %add.67.lobit328 = or i64 %tmpv.1853.field.ld.1, %add.67, !dbg !2576
  %5 = icmp slt i64 %add.67.lobit328, 0, !dbg !2576
  %6 = or i1 %icmp.734, %5, !dbg !2576
  br i1 %6, label %then.616, label %else.616

then.616:                                         ; preds = %else.615
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2576
  unreachable

else.616:                                         ; preds = %else.615
  %field.1511 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1853, i64 0, i32 0, !dbg !2576
  %tmpv.1853.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1511, align 8, !dbg !2576
  br label %fallthrough.615

then.618:                                         ; preds = %fallthrough.615
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2576
  unreachable

else.618:                                         ; preds = %fallthrough.615
  %ptroff.80 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1861.sroa.0.0, i64 %tmpv.1853.field.ld.0, !dbg !2576
  %runtime.writeBarrier.ld.56 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2576
  %icmp.742 = icmp eq i32 %runtime.writeBarrier.ld.56, 0, !dbg !2576
  br i1 %icmp.742, label %then.619, label %else.619

then.619:                                         ; preds = %else.618
  %icmp.741 = icmp eq { i8*, i64 }* %ptroff.80, null, !dbg !2576
  br i1 %icmp.741, label %then.620, label %else.620

fallthrough.619:                                  ; preds = %else.619, %else.620
  %add.69 = add i64 %tmpv.1853.field.ld.0, 1, !dbg !2576
  %tmpv.1853.field.ld.6 = load i64, i64* %field.1507, align 8, !dbg !2576
  %icmp.743 = icmp sge i64 %add.69, %tmpv.1853.field.ld.6, !dbg !2576
  %7 = icmp slt i64 %add.69, 0, !dbg !2576
  %ior.344 = or i1 %7, %icmp.743, !dbg !2576
  br i1 %ior.344, label %then.621, label %else.621

else.619:                                         ; preds = %else.618
  %cast.6883 = bitcast { i8*, i64 }* %ptroff.80 to i8*, !dbg !2576
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.6883, i8* nonnull %cast.6868), !dbg !2576
  br label %fallthrough.619

then.620:                                         ; preds = %then.619
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2576
  unreachable

else.620:                                         ; preds = %then.619
  %cast.6881 = bitcast { i8*, i64 }* %ptroff.80 to i8*, !dbg !2576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.6881, i8* nonnull align 8 %cast.6868, i64 16, i1 false), !dbg !2576
  br label %fallthrough.619

then.621:                                         ; preds = %fallthrough.619
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2576
  unreachable

else.621:                                         ; preds = %fallthrough.619
  %tmpv.1853.field.ld.7 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1861.sroa.0.0.cast.6878.sroa_idx.pre-phi, align 8, !dbg !2576
  %ptroff.81 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1853.field.ld.7, i64 %add.69, !dbg !2576
  %runtime.writeBarrier.ld.57 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2576
  %icmp.746 = icmp eq i32 %runtime.writeBarrier.ld.57, 0, !dbg !2576
  br i1 %icmp.746, label %then.622, label %else.622

then.622:                                         ; preds = %else.621
  %icmp.745 = icmp eq { i8*, i64 }* %ptroff.81, null, !dbg !2576
  br i1 %icmp.745, label %then.623, label %else.623

fallthrough.622:                                  ; preds = %else.622, %else.623
  %cast.6890 = bitcast %IPST.3* %tmpv.1870 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6890, i8* nonnull align 8 %cast.6866, i64 24, i1 false)
  %runtime.writeBarrier.ld.58 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2577
  %icmp.748 = icmp eq i32 %runtime.writeBarrier.ld.58, 0, !dbg !2577
  br i1 %icmp.748, label %else.625, label %else.624

else.622:                                         ; preds = %else.621
  %cast.6888 = bitcast { i8*, i64 }* %ptroff.81 to i8*, !dbg !2576
  %cast.6889 = bitcast { i8*, i64 }* %tmpv.1850 to i8*, !dbg !2576
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.6888, i8* nonnull %cast.6889), !dbg !2576
  br label %fallthrough.622

then.623:                                         ; preds = %then.622
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2576
  unreachable

else.623:                                         ; preds = %then.622
  %cast.6886 = bitcast { i8*, i64 }* %ptroff.81 to i8*, !dbg !2576
  %cast.6887 = bitcast { i8*, i64 }* %tmpv.1850 to i8*, !dbg !2576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.6886, i8* nonnull align 8 %cast.6887, i64 16, i1 false), !dbg !2576
  br label %fallthrough.622

else.624:                                         ; preds = %fallthrough.622
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.6867, i8* nonnull %cast.6890), !dbg !2577
  br label %fallthrough.612

else.625:                                         ; preds = %fallthrough.622
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6867, i8* nonnull align 8 %cast.6890, i64 24, i1 false), !dbg !2577
  br label %fallthrough.612

then.626:                                         ; preds = %fallthrough.612
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2575
  unreachable

else.626:                                         ; preds = %fallthrough.612
  %field.1536 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 5, !dbg !2575
  %.field.ld.164 = load i8, i8* %field.1536, align 1, !dbg !2575
  %8 = and i8 %.field.ld.164, 1, !dbg !2578
  %trunc.637 = icmp eq i8 %8, 0, !dbg !2578
  br i1 %trunc.637, label %else.638, label %then.627

then.627:                                         ; preds = %else.626
  %icmp.750 = icmp eq %Cmd.0* %call.441, null, !dbg !2579
  br i1 %icmp.750, label %then.628, label %else.629

then.628:                                         ; preds = %then.627
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2579
  unreachable

else.629:                                         ; preds = %then.627
  %field.1522 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 1, !dbg !2579
  %cast.6900 = bitcast %IPST.3* %tmpv.1874 to i8*
  %cast.6901 = bitcast %IPST.3* %field.1522 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6900, i8* nonnull align 8 %cast.6901, i64 24, i1 false)
  %field.1524 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1874, i64 0, i32 1, !dbg !2580
  %tmpv.1874.field.ld.0 = load i64, i64* %field.1524, align 8, !dbg !2580
  %cast.6902 = bitcast { i8*, i64 }* %tmpv.1877 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6902, i8* align 8 bitcast ({ i8*, i64 }* @const.589 to i8*), i64 16, i1 false)
  %add.70 = add i64 %tmpv.1874.field.ld.0, 1, !dbg !2580
  %field.1525 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1874, i64 0, i32 2, !dbg !2580
  %tmpv.1874.field.ld.1 = load i64, i64* %field.1525, align 8, !dbg !2580
  %icmp.752 = icmp ugt i64 %add.70, %tmpv.1874.field.ld.1, !dbg !2580
  br i1 %icmp.752, label %then.630, label %else.630

then.630:                                         ; preds = %else.629
  %cast.6904 = bitcast %IPST.3* %tmpv.1874 to %IPST.4*, !dbg !2580
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.367, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.6904, i64 %add.70), !dbg !2580
  %tmpv.1882.sroa.0.0.cast.6909.sroa_idx = bitcast %IPST.4* %sret.actual.367 to { i8*, i64 }**
  %tmpv.1882.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1882.sroa.0.0.cast.6909.sroa_idx, align 8
  %9 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.367, i64 0, i32 1
  %tmpv.1882.sroa.3.0.copyload = load i64, i64* %9, align 8
  %10 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.367, i64 0, i32 2
  %tmpv.1882.sroa.4.0.copyload = load i64, i64* %10, align 8
  %.pre343 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1874, i64 0, i32 0, !dbg !2580
  br label %fallthrough.630

fallthrough.630:                                  ; preds = %else.631, %then.630
  %tmpv.1882.sroa.0.0.cast.6912.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1528, %else.631 ], [ %.pre343, %then.630 ], !dbg !2580
  %tmpv.1882.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1874.field.ld.3, %else.631 ], [ %tmpv.1882.sroa.0.0.copyload, %then.630 ]
  %tmpv.1882.sroa.3.0 = phi i64 [ %add.70, %else.631 ], [ %tmpv.1882.sroa.3.0.copyload, %then.630 ]
  %tmpv.1882.sroa.4.0 = phi i64 [ %tmpv.1874.field.ld.1, %else.631 ], [ %tmpv.1882.sroa.4.0.copyload, %then.630 ]
  store { i8*, i64 }* %tmpv.1882.sroa.0.0, { i8*, i64 }** %tmpv.1882.sroa.0.0.cast.6912.sroa_idx.pre-phi, align 8, !dbg !2580
  store i64 %tmpv.1882.sroa.3.0, i64* %field.1524, align 8, !dbg !2580
  store i64 %tmpv.1882.sroa.4.0, i64* %field.1525, align 8, !dbg !2580
  %icmp.759 = icmp sge i64 %tmpv.1874.field.ld.0, %tmpv.1882.sroa.3.0, !dbg !2580
  %11 = icmp slt i64 %tmpv.1874.field.ld.0, 0, !dbg !2580
  %ior.352 = or i1 %11, %icmp.759, !dbg !2580
  br i1 %ior.352, label %then.633, label %else.633

else.630:                                         ; preds = %else.629
  %icmp.754 = icmp sgt i64 %add.70, %tmpv.1874.field.ld.1, !dbg !2580
  %add.70.lobit321 = or i64 %tmpv.1874.field.ld.1, %add.70, !dbg !2580
  %12 = icmp slt i64 %add.70.lobit321, 0, !dbg !2580
  %13 = or i1 %icmp.754, %12, !dbg !2580
  br i1 %13, label %then.631, label %else.631

then.631:                                         ; preds = %else.630
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2580
  unreachable

else.631:                                         ; preds = %else.630
  %field.1528 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1874, i64 0, i32 0, !dbg !2580
  %tmpv.1874.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1528, align 8, !dbg !2580
  br label %fallthrough.630

then.633:                                         ; preds = %fallthrough.630
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2580
  unreachable

else.633:                                         ; preds = %fallthrough.630
  %ptroff.83 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1882.sroa.0.0, i64 %tmpv.1874.field.ld.0, !dbg !2580
  %runtime.writeBarrier.ld.59 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2580
  %icmp.762 = icmp eq i32 %runtime.writeBarrier.ld.59, 0, !dbg !2580
  br i1 %icmp.762, label %then.634, label %else.634

then.634:                                         ; preds = %else.633
  %icmp.761 = icmp eq { i8*, i64 }* %ptroff.83, null, !dbg !2580
  br i1 %icmp.761, label %then.635, label %else.635

fallthrough.634:                                  ; preds = %else.634, %else.635
  %cast.6919 = bitcast %IPST.3* %tmpv.1887 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6919, i8* nonnull align 8 %cast.6900, i64 24, i1 false)
  %runtime.writeBarrier.ld.60 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2581
  %icmp.764 = icmp eq i32 %runtime.writeBarrier.ld.60, 0, !dbg !2581
  br i1 %icmp.764, label %else.637, label %else.636

else.634:                                         ; preds = %else.633
  %cast.6917 = bitcast { i8*, i64 }* %ptroff.83 to i8*, !dbg !2580
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.6917, i8* nonnull %cast.6902), !dbg !2580
  br label %fallthrough.634

then.635:                                         ; preds = %then.634
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2580
  unreachable

else.635:                                         ; preds = %then.634
  %cast.6915 = bitcast { i8*, i64 }* %ptroff.83 to i8*, !dbg !2580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.6915, i8* nonnull align 8 %cast.6902, i64 16, i1 false), !dbg !2580
  br label %fallthrough.634

else.636:                                         ; preds = %fallthrough.634
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.6901, i8* nonnull %cast.6919), !dbg !2581
  br label %else.638

else.637:                                         ; preds = %fallthrough.634
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6901, i8* nonnull align 8 %cast.6919, i64 24, i1 false), !dbg !2581
  br label %else.638

else.638:                                         ; preds = %else.636, %else.637, %else.626
  %field.1551 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 4, !dbg !2582
  %.field.ld.168 = load i8, i8* %field.1551, align 1, !dbg !2582
  %14 = and i8 %.field.ld.168, 1, !dbg !2583
  %trunc.649 = icmp eq i8 %14, 0, !dbg !2583
  br i1 %trunc.649, label %else.650, label %then.639

then.639:                                         ; preds = %else.638
  %icmp.766 = icmp eq %Cmd.0* %call.441, null, !dbg !2584
  br i1 %icmp.766, label %then.640, label %else.641

then.640:                                         ; preds = %then.639
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2584
  unreachable

else.641:                                         ; preds = %then.639
  %field.1537 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 1, !dbg !2584
  %cast.6930 = bitcast %IPST.3* %tmpv.1892 to i8*
  %cast.6931 = bitcast %IPST.3* %field.1537 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6930, i8* nonnull align 8 %cast.6931, i64 24, i1 false)
  %field.1539 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1892, i64 0, i32 1, !dbg !2585
  %tmpv.1892.field.ld.0 = load i64, i64* %field.1539, align 8, !dbg !2585
  %cast.6932 = bitcast { i8*, i64 }* %tmpv.1895 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6932, i8* align 8 bitcast ({ i8*, i64 }* @const.591 to i8*), i64 16, i1 false)
  %add.72 = add i64 %tmpv.1892.field.ld.0, 1, !dbg !2585
  %field.1540 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1892, i64 0, i32 2, !dbg !2585
  %tmpv.1892.field.ld.1 = load i64, i64* %field.1540, align 8, !dbg !2585
  %icmp.768 = icmp ugt i64 %add.72, %tmpv.1892.field.ld.1, !dbg !2585
  br i1 %icmp.768, label %then.642, label %else.642

then.642:                                         ; preds = %else.641
  %cast.6934 = bitcast %IPST.3* %tmpv.1892 to %IPST.4*, !dbg !2585
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.368, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.6934, i64 %add.72), !dbg !2585
  %tmpv.1900.sroa.0.0.cast.6939.sroa_idx = bitcast %IPST.4* %sret.actual.368 to { i8*, i64 }**
  %tmpv.1900.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1900.sroa.0.0.cast.6939.sroa_idx, align 8
  %15 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.368, i64 0, i32 1
  %tmpv.1900.sroa.3.0.copyload = load i64, i64* %15, align 8
  %16 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.368, i64 0, i32 2
  %tmpv.1900.sroa.4.0.copyload = load i64, i64* %16, align 8
  %.pre342 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1892, i64 0, i32 0, !dbg !2585
  br label %fallthrough.642

fallthrough.642:                                  ; preds = %else.643, %then.642
  %tmpv.1900.sroa.0.0.cast.6942.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1543, %else.643 ], [ %.pre342, %then.642 ], !dbg !2585
  %tmpv.1900.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1892.field.ld.3, %else.643 ], [ %tmpv.1900.sroa.0.0.copyload, %then.642 ]
  %tmpv.1900.sroa.3.0 = phi i64 [ %add.72, %else.643 ], [ %tmpv.1900.sroa.3.0.copyload, %then.642 ]
  %tmpv.1900.sroa.4.0 = phi i64 [ %tmpv.1892.field.ld.1, %else.643 ], [ %tmpv.1900.sroa.4.0.copyload, %then.642 ]
  store { i8*, i64 }* %tmpv.1900.sroa.0.0, { i8*, i64 }** %tmpv.1900.sroa.0.0.cast.6942.sroa_idx.pre-phi, align 8, !dbg !2585
  store i64 %tmpv.1900.sroa.3.0, i64* %field.1539, align 8, !dbg !2585
  store i64 %tmpv.1900.sroa.4.0, i64* %field.1540, align 8, !dbg !2585
  %icmp.775 = icmp sge i64 %tmpv.1892.field.ld.0, %tmpv.1900.sroa.3.0, !dbg !2585
  %17 = icmp slt i64 %tmpv.1892.field.ld.0, 0, !dbg !2585
  %ior.360 = or i1 %17, %icmp.775, !dbg !2585
  br i1 %ior.360, label %then.645, label %else.645

else.642:                                         ; preds = %else.641
  %icmp.770 = icmp sgt i64 %add.72, %tmpv.1892.field.ld.1, !dbg !2585
  %add.72.lobit322 = or i64 %tmpv.1892.field.ld.1, %add.72, !dbg !2585
  %18 = icmp slt i64 %add.72.lobit322, 0, !dbg !2585
  %19 = or i1 %icmp.770, %18, !dbg !2585
  br i1 %19, label %then.643, label %else.643

then.643:                                         ; preds = %else.642
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2585
  unreachable

else.643:                                         ; preds = %else.642
  %field.1543 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1892, i64 0, i32 0, !dbg !2585
  %tmpv.1892.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1543, align 8, !dbg !2585
  br label %fallthrough.642

then.645:                                         ; preds = %fallthrough.642
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2585
  unreachable

else.645:                                         ; preds = %fallthrough.642
  %ptroff.85 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1900.sroa.0.0, i64 %tmpv.1892.field.ld.0, !dbg !2585
  %runtime.writeBarrier.ld.61 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2585
  %icmp.778 = icmp eq i32 %runtime.writeBarrier.ld.61, 0, !dbg !2585
  br i1 %icmp.778, label %then.646, label %else.646

then.646:                                         ; preds = %else.645
  %icmp.777 = icmp eq { i8*, i64 }* %ptroff.85, null, !dbg !2585
  br i1 %icmp.777, label %then.647, label %else.647

fallthrough.646:                                  ; preds = %else.646, %else.647
  %cast.6949 = bitcast %IPST.3* %tmpv.1905 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6949, i8* nonnull align 8 %cast.6930, i64 24, i1 false)
  %runtime.writeBarrier.ld.62 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2586
  %icmp.780 = icmp eq i32 %runtime.writeBarrier.ld.62, 0, !dbg !2586
  br i1 %icmp.780, label %else.649, label %else.648

else.646:                                         ; preds = %else.645
  %cast.6947 = bitcast { i8*, i64 }* %ptroff.85 to i8*, !dbg !2585
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.6947, i8* nonnull %cast.6932), !dbg !2585
  br label %fallthrough.646

then.647:                                         ; preds = %then.646
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2585
  unreachable

else.647:                                         ; preds = %then.646
  %cast.6945 = bitcast { i8*, i64 }* %ptroff.85 to i8*, !dbg !2585
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.6945, i8* nonnull align 8 %cast.6932, i64 16, i1 false), !dbg !2585
  br label %fallthrough.646

else.648:                                         ; preds = %fallthrough.646
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.6931, i8* nonnull %cast.6949), !dbg !2586
  br label %else.650

else.649:                                         ; preds = %fallthrough.646
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6931, i8* nonnull align 8 %cast.6949, i64 24, i1 false), !dbg !2586
  br label %else.650

else.650:                                         ; preds = %else.648, %else.649, %else.638
  %field.1569 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 7, !dbg !2587
  %field0.347 = bitcast { i8*, i64 }* %field.1569 to i64*, !dbg !2588
  %ld.773 = load i64, i64* %field0.347, align 8, !dbg !2588
  %20 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 7, i32 1, !dbg !2588
  %ld.774 = load i64, i64* %20, align 8, !dbg !2588
  %call.443 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.773, i64 %ld.774, i64 0, i64 0), !dbg !2588
  %icmp.803 = icmp eq i8 %call.443, 1, !dbg !2588
  br i1 %icmp.803, label %else.666, label %then.651

then.651:                                         ; preds = %else.650
  %icmp.782 = icmp eq %Cmd.0* %call.441, null, !dbg !2589
  br i1 %icmp.782, label %then.652, label %else.653

then.652:                                         ; preds = %then.651
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2589
  unreachable

else.653:                                         ; preds = %then.651
  %field.1552 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 1, !dbg !2589
  %cast.6960 = bitcast %IPST.3* %tmpv.1910 to i8*
  %cast.6961 = bitcast %IPST.3* %field.1552 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6960, i8* nonnull align 8 %cast.6961, i64 24, i1 false)
  %field.1554 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1910, i64 0, i32 1, !dbg !2590
  %tmpv.1910.field.ld.0 = load i64, i64* %field.1554, align 8, !dbg !2590
  %cast.6962 = bitcast { i8*, i64 }* %tmpv.1913 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6962, i8* align 8 bitcast ({ i8*, i64 }* @const.593 to i8*), i64 16, i1 false)
  %cast.6965 = bitcast { i8*, i64 }* %tmpv.1914 to i8*
  %cast.6966 = bitcast { i8*, i64 }* %field.1569 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6965, i8* nonnull align 8 %cast.6966, i64 16, i1 false)
  %add.74 = add i64 %tmpv.1910.field.ld.0, 2, !dbg !2590
  %field.1556 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1910, i64 0, i32 2, !dbg !2590
  %tmpv.1910.field.ld.1 = load i64, i64* %field.1556, align 8, !dbg !2590
  %icmp.785 = icmp ugt i64 %add.74, %tmpv.1910.field.ld.1, !dbg !2590
  br i1 %icmp.785, label %then.655, label %else.655

then.655:                                         ; preds = %else.653
  %cast.6967 = bitcast %IPST.3* %tmpv.1910 to %IPST.4*, !dbg !2590
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.369, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.6967, i64 %add.74), !dbg !2590
  %tmpv.1920.sroa.0.0.cast.6972.sroa_idx = bitcast %IPST.4* %sret.actual.369 to { i8*, i64 }**
  %tmpv.1920.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1920.sroa.0.0.cast.6972.sroa_idx, align 8
  %21 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.369, i64 0, i32 1
  %tmpv.1920.sroa.3.0.copyload = load i64, i64* %21, align 8
  %22 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.369, i64 0, i32 2
  %tmpv.1920.sroa.4.0.copyload = load i64, i64* %22, align 8
  %.pre341 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1910, i64 0, i32 0, !dbg !2590
  br label %fallthrough.655

fallthrough.655:                                  ; preds = %else.656, %then.655
  %tmpv.1920.sroa.0.0.cast.6975.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1559, %else.656 ], [ %.pre341, %then.655 ], !dbg !2590
  %tmpv.1920.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1910.field.ld.3, %else.656 ], [ %tmpv.1920.sroa.0.0.copyload, %then.655 ]
  %tmpv.1920.sroa.3.0 = phi i64 [ %add.74, %else.656 ], [ %tmpv.1920.sroa.3.0.copyload, %then.655 ]
  %tmpv.1920.sroa.4.0 = phi i64 [ %tmpv.1910.field.ld.1, %else.656 ], [ %tmpv.1920.sroa.4.0.copyload, %then.655 ]
  store { i8*, i64 }* %tmpv.1920.sroa.0.0, { i8*, i64 }** %tmpv.1920.sroa.0.0.cast.6975.sroa_idx.pre-phi, align 8, !dbg !2590
  store i64 %tmpv.1920.sroa.3.0, i64* %field.1554, align 8, !dbg !2590
  store i64 %tmpv.1920.sroa.4.0, i64* %field.1556, align 8, !dbg !2590
  %icmp.792 = icmp sge i64 %tmpv.1910.field.ld.0, %tmpv.1920.sroa.3.0, !dbg !2590
  %23 = icmp slt i64 %tmpv.1910.field.ld.0, 0, !dbg !2590
  %ior.368 = or i1 %23, %icmp.792, !dbg !2590
  br i1 %ior.368, label %then.658, label %else.658

else.655:                                         ; preds = %else.653
  %icmp.787 = icmp sgt i64 %add.74, %tmpv.1910.field.ld.1, !dbg !2590
  %add.74.lobit323 = or i64 %tmpv.1910.field.ld.1, %add.74, !dbg !2590
  %24 = icmp slt i64 %add.74.lobit323, 0, !dbg !2590
  %25 = or i1 %icmp.787, %24, !dbg !2590
  br i1 %25, label %then.656, label %else.656

then.656:                                         ; preds = %else.655
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2590
  unreachable

else.656:                                         ; preds = %else.655
  %field.1559 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1910, i64 0, i32 0, !dbg !2590
  %tmpv.1910.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1559, align 8, !dbg !2590
  br label %fallthrough.655

then.658:                                         ; preds = %fallthrough.655
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2590
  unreachable

else.658:                                         ; preds = %fallthrough.655
  %ptroff.87 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1920.sroa.0.0, i64 %tmpv.1910.field.ld.0, !dbg !2590
  %runtime.writeBarrier.ld.63 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2590
  %icmp.795 = icmp eq i32 %runtime.writeBarrier.ld.63, 0, !dbg !2590
  br i1 %icmp.795, label %then.659, label %else.659

then.659:                                         ; preds = %else.658
  %icmp.794 = icmp eq { i8*, i64 }* %ptroff.87, null, !dbg !2590
  br i1 %icmp.794, label %then.660, label %else.660

fallthrough.659:                                  ; preds = %else.659, %else.660
  %add.76 = add i64 %tmpv.1910.field.ld.0, 1, !dbg !2590
  %tmpv.1910.field.ld.6 = load i64, i64* %field.1554, align 8, !dbg !2590
  %icmp.796 = icmp sge i64 %add.76, %tmpv.1910.field.ld.6, !dbg !2590
  %26 = icmp slt i64 %add.76, 0, !dbg !2590
  %ior.370 = or i1 %26, %icmp.796, !dbg !2590
  br i1 %ior.370, label %then.661, label %else.661

else.659:                                         ; preds = %else.658
  %cast.6980 = bitcast { i8*, i64 }* %ptroff.87 to i8*, !dbg !2590
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.6980, i8* nonnull %cast.6962), !dbg !2590
  br label %fallthrough.659

then.660:                                         ; preds = %then.659
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2590
  unreachable

else.660:                                         ; preds = %then.659
  %cast.6978 = bitcast { i8*, i64 }* %ptroff.87 to i8*, !dbg !2590
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.6978, i8* nonnull align 8 %cast.6962, i64 16, i1 false), !dbg !2590
  br label %fallthrough.659

then.661:                                         ; preds = %fallthrough.659
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2590
  unreachable

else.661:                                         ; preds = %fallthrough.659
  %tmpv.1910.field.ld.7 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1920.sroa.0.0.cast.6975.sroa_idx.pre-phi, align 8, !dbg !2590
  %ptroff.88 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1910.field.ld.7, i64 %add.76, !dbg !2590
  %runtime.writeBarrier.ld.64 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2590
  %icmp.799 = icmp eq i32 %runtime.writeBarrier.ld.64, 0, !dbg !2590
  br i1 %icmp.799, label %then.662, label %else.662

then.662:                                         ; preds = %else.661
  %icmp.798 = icmp eq { i8*, i64 }* %ptroff.88, null, !dbg !2590
  br i1 %icmp.798, label %then.663, label %else.663

fallthrough.662:                                  ; preds = %else.662, %else.663
  %cast.6987 = bitcast %IPST.3* %tmpv.1929 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6987, i8* nonnull align 8 %cast.6960, i64 24, i1 false)
  %runtime.writeBarrier.ld.65 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2591
  %icmp.801 = icmp eq i32 %runtime.writeBarrier.ld.65, 0, !dbg !2591
  br i1 %icmp.801, label %else.665, label %else.664

else.662:                                         ; preds = %else.661
  %cast.6985 = bitcast { i8*, i64 }* %ptroff.88 to i8*, !dbg !2590
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.6985, i8* nonnull %cast.6965), !dbg !2590
  br label %fallthrough.662

then.663:                                         ; preds = %then.662
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2590
  unreachable

else.663:                                         ; preds = %then.662
  %cast.6983 = bitcast { i8*, i64 }* %ptroff.88 to i8*, !dbg !2590
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.6983, i8* nonnull align 8 %cast.6965, i64 16, i1 false), !dbg !2590
  br label %fallthrough.662

else.664:                                         ; preds = %fallthrough.662
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.6961, i8* nonnull %cast.6987), !dbg !2591
  br label %else.666

else.665:                                         ; preds = %fallthrough.662
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6961, i8* nonnull align 8 %cast.6987, i64 24, i1 false), !dbg !2591
  br label %else.666

else.666:                                         ; preds = %else.664, %else.665, %else.650
  %field.1587 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 8, !dbg !2592
  %field0.349 = bitcast { i8*, i64 }* %field.1587 to i64*, !dbg !2593
  %ld.777 = load i64, i64* %field0.349, align 8, !dbg !2593
  %27 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 8, i32 1, !dbg !2593
  %ld.778 = load i64, i64* %27, align 8, !dbg !2593
  %call.444 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.777, i64 %ld.778, i64 0, i64 0), !dbg !2593
  %icmp.825 = icmp eq i8 %call.444, 1, !dbg !2593
  br i1 %icmp.825, label %else.682, label %then.667

then.667:                                         ; preds = %else.666
  %icmp.804 = icmp eq %Cmd.0* %call.441, null, !dbg !2594
  br i1 %icmp.804, label %then.668, label %else.669

then.668:                                         ; preds = %then.667
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2594
  unreachable

else.669:                                         ; preds = %then.667
  %field.1570 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 1, !dbg !2594
  %cast.7000 = bitcast %IPST.3* %tmpv.1934 to i8*
  %cast.7001 = bitcast %IPST.3* %field.1570 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7000, i8* nonnull align 8 %cast.7001, i64 24, i1 false)
  %field.1572 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1934, i64 0, i32 1, !dbg !2595
  %tmpv.1934.field.ld.0 = load i64, i64* %field.1572, align 8, !dbg !2595
  %cast.7002 = bitcast { i8*, i64 }* %tmpv.1937 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7002, i8* align 8 bitcast ({ i8*, i64 }* @const.595 to i8*), i64 16, i1 false)
  %cast.7005 = bitcast { i8*, i64 }* %tmpv.1938 to i8*
  %cast.7006 = bitcast { i8*, i64 }* %field.1587 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7005, i8* nonnull align 8 %cast.7006, i64 16, i1 false)
  %add.77 = add i64 %tmpv.1934.field.ld.0, 2, !dbg !2595
  %field.1574 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1934, i64 0, i32 2, !dbg !2595
  %tmpv.1934.field.ld.1 = load i64, i64* %field.1574, align 8, !dbg !2595
  %icmp.807 = icmp ugt i64 %add.77, %tmpv.1934.field.ld.1, !dbg !2595
  br i1 %icmp.807, label %then.671, label %else.671

then.671:                                         ; preds = %else.669
  %cast.7007 = bitcast %IPST.3* %tmpv.1934 to %IPST.4*, !dbg !2595
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.370, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7007, i64 %add.77), !dbg !2595
  %tmpv.1944.sroa.0.0.cast.7012.sroa_idx = bitcast %IPST.4* %sret.actual.370 to { i8*, i64 }**
  %tmpv.1944.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1944.sroa.0.0.cast.7012.sroa_idx, align 8
  %28 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.370, i64 0, i32 1
  %tmpv.1944.sroa.3.0.copyload = load i64, i64* %28, align 8
  %29 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.370, i64 0, i32 2
  %tmpv.1944.sroa.4.0.copyload = load i64, i64* %29, align 8
  %.pre340 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1934, i64 0, i32 0, !dbg !2595
  br label %fallthrough.671

fallthrough.671:                                  ; preds = %else.672, %then.671
  %tmpv.1944.sroa.0.0.cast.7015.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1577, %else.672 ], [ %.pre340, %then.671 ], !dbg !2595
  %tmpv.1944.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1934.field.ld.3, %else.672 ], [ %tmpv.1944.sroa.0.0.copyload, %then.671 ]
  %tmpv.1944.sroa.3.0 = phi i64 [ %add.77, %else.672 ], [ %tmpv.1944.sroa.3.0.copyload, %then.671 ]
  %tmpv.1944.sroa.4.0 = phi i64 [ %tmpv.1934.field.ld.1, %else.672 ], [ %tmpv.1944.sroa.4.0.copyload, %then.671 ]
  store { i8*, i64 }* %tmpv.1944.sroa.0.0, { i8*, i64 }** %tmpv.1944.sroa.0.0.cast.7015.sroa_idx.pre-phi, align 8, !dbg !2595
  store i64 %tmpv.1944.sroa.3.0, i64* %field.1572, align 8, !dbg !2595
  store i64 %tmpv.1944.sroa.4.0, i64* %field.1574, align 8, !dbg !2595
  %icmp.814 = icmp sge i64 %tmpv.1934.field.ld.0, %tmpv.1944.sroa.3.0, !dbg !2595
  %30 = icmp slt i64 %tmpv.1934.field.ld.0, 0, !dbg !2595
  %ior.378 = or i1 %30, %icmp.814, !dbg !2595
  br i1 %ior.378, label %then.674, label %else.674

else.671:                                         ; preds = %else.669
  %icmp.809 = icmp sgt i64 %add.77, %tmpv.1934.field.ld.1, !dbg !2595
  %add.77.lobit324 = or i64 %tmpv.1934.field.ld.1, %add.77, !dbg !2595
  %31 = icmp slt i64 %add.77.lobit324, 0, !dbg !2595
  %32 = or i1 %icmp.809, %31, !dbg !2595
  br i1 %32, label %then.672, label %else.672

then.672:                                         ; preds = %else.671
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2595
  unreachable

else.672:                                         ; preds = %else.671
  %field.1577 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1934, i64 0, i32 0, !dbg !2595
  %tmpv.1934.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1577, align 8, !dbg !2595
  br label %fallthrough.671

then.674:                                         ; preds = %fallthrough.671
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2595
  unreachable

else.674:                                         ; preds = %fallthrough.671
  %ptroff.90 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1944.sroa.0.0, i64 %tmpv.1934.field.ld.0, !dbg !2595
  %runtime.writeBarrier.ld.66 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2595
  %icmp.817 = icmp eq i32 %runtime.writeBarrier.ld.66, 0, !dbg !2595
  br i1 %icmp.817, label %then.675, label %else.675

then.675:                                         ; preds = %else.674
  %icmp.816 = icmp eq { i8*, i64 }* %ptroff.90, null, !dbg !2595
  br i1 %icmp.816, label %then.676, label %else.676

fallthrough.675:                                  ; preds = %else.675, %else.676
  %add.79 = add i64 %tmpv.1934.field.ld.0, 1, !dbg !2595
  %tmpv.1934.field.ld.6 = load i64, i64* %field.1572, align 8, !dbg !2595
  %icmp.818 = icmp sge i64 %add.79, %tmpv.1934.field.ld.6, !dbg !2595
  %33 = icmp slt i64 %add.79, 0, !dbg !2595
  %ior.380 = or i1 %33, %icmp.818, !dbg !2595
  br i1 %ior.380, label %then.677, label %else.677

else.675:                                         ; preds = %else.674
  %cast.7020 = bitcast { i8*, i64 }* %ptroff.90 to i8*, !dbg !2595
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7020, i8* nonnull %cast.7002), !dbg !2595
  br label %fallthrough.675

then.676:                                         ; preds = %then.675
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2595
  unreachable

else.676:                                         ; preds = %then.675
  %cast.7018 = bitcast { i8*, i64 }* %ptroff.90 to i8*, !dbg !2595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7018, i8* nonnull align 8 %cast.7002, i64 16, i1 false), !dbg !2595
  br label %fallthrough.675

then.677:                                         ; preds = %fallthrough.675
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2595
  unreachable

else.677:                                         ; preds = %fallthrough.675
  %tmpv.1934.field.ld.7 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1944.sroa.0.0.cast.7015.sroa_idx.pre-phi, align 8, !dbg !2595
  %ptroff.91 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1934.field.ld.7, i64 %add.79, !dbg !2595
  %runtime.writeBarrier.ld.67 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2595
  %icmp.821 = icmp eq i32 %runtime.writeBarrier.ld.67, 0, !dbg !2595
  br i1 %icmp.821, label %then.678, label %else.678

then.678:                                         ; preds = %else.677
  %icmp.820 = icmp eq { i8*, i64 }* %ptroff.91, null, !dbg !2595
  br i1 %icmp.820, label %then.679, label %else.679

fallthrough.678:                                  ; preds = %else.678, %else.679
  %cast.7027 = bitcast %IPST.3* %tmpv.1953 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7027, i8* nonnull align 8 %cast.7000, i64 24, i1 false)
  %runtime.writeBarrier.ld.68 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2596
  %icmp.823 = icmp eq i32 %runtime.writeBarrier.ld.68, 0, !dbg !2596
  br i1 %icmp.823, label %else.681, label %else.680

else.678:                                         ; preds = %else.677
  %cast.7025 = bitcast { i8*, i64 }* %ptroff.91 to i8*, !dbg !2595
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7025, i8* nonnull %cast.7005), !dbg !2595
  br label %fallthrough.678

then.679:                                         ; preds = %then.678
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2595
  unreachable

else.679:                                         ; preds = %then.678
  %cast.7023 = bitcast { i8*, i64 }* %ptroff.91 to i8*, !dbg !2595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7023, i8* nonnull align 8 %cast.7005, i64 16, i1 false), !dbg !2595
  br label %fallthrough.678

else.680:                                         ; preds = %fallthrough.678
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7001, i8* nonnull %cast.7027), !dbg !2596
  br label %else.682

else.681:                                         ; preds = %fallthrough.678
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7001, i8* nonnull align 8 %cast.7027, i64 24, i1 false), !dbg !2596
  br label %else.682

else.682:                                         ; preds = %else.680, %else.681, %else.666
  %field.1602 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 6, !dbg !2597
  %.field.ld.178 = load i8, i8* %field.1602, align 1, !dbg !2597
  %34 = and i8 %.field.ld.178, 1, !dbg !2598
  %trunc.693 = icmp eq i8 %34, 0, !dbg !2598
  %icmp.842 = icmp eq %Cmd.0* %call.441, null, !dbg !2599
  br i1 %trunc.693, label %fallthrough.683, label %then.683

then.683:                                         ; preds = %else.682
  br i1 %icmp.842, label %then.684, label %else.685

fallthrough.683:                                  ; preds = %else.682
  br i1 %icmp.842, label %then.694, label %fallthrough.683.else.695_crit_edge

fallthrough.683.else.695_crit_edge:               ; preds = %fallthrough.683
  %.pre344 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 1, !dbg !2600
  %.pre345 = bitcast %IPST.3* %.pre344 to i8*
  br label %else.695

then.684:                                         ; preds = %then.683
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2601
  unreachable

else.685:                                         ; preds = %then.683
  %field.1588 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 1, !dbg !2601
  %cast.7040 = bitcast %IPST.3* %tmpv.1958 to i8*
  %cast.7041 = bitcast %IPST.3* %field.1588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7040, i8* nonnull align 8 %cast.7041, i64 24, i1 false)
  %field.1590 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1958, i64 0, i32 1, !dbg !2602
  %tmpv.1958.field.ld.0 = load i64, i64* %field.1590, align 8, !dbg !2602
  %cast.7042 = bitcast { i8*, i64 }* %tmpv.1961 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7042, i8* align 8 bitcast ({ i8*, i64 }* @const.597 to i8*), i64 16, i1 false)
  %add.80 = add i64 %tmpv.1958.field.ld.0, 1, !dbg !2602
  %field.1591 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1958, i64 0, i32 2, !dbg !2602
  %tmpv.1958.field.ld.1 = load i64, i64* %field.1591, align 8, !dbg !2602
  %icmp.828 = icmp ugt i64 %add.80, %tmpv.1958.field.ld.1, !dbg !2602
  br i1 %icmp.828, label %then.686, label %else.686

then.686:                                         ; preds = %else.685
  %cast.7044 = bitcast %IPST.3* %tmpv.1958 to %IPST.4*, !dbg !2602
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.371, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7044, i64 %add.80), !dbg !2602
  %tmpv.1966.sroa.0.0.cast.7049.sroa_idx = bitcast %IPST.4* %sret.actual.371 to { i8*, i64 }**
  %tmpv.1966.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1966.sroa.0.0.cast.7049.sroa_idx, align 8
  %35 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.371, i64 0, i32 1
  %tmpv.1966.sroa.3.0.copyload = load i64, i64* %35, align 8
  %36 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.371, i64 0, i32 2
  %tmpv.1966.sroa.4.0.copyload = load i64, i64* %36, align 8
  %.pre339 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1958, i64 0, i32 0, !dbg !2602
  br label %fallthrough.686

fallthrough.686:                                  ; preds = %else.687, %then.686
  %tmpv.1966.sroa.0.0.cast.7052.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1594, %else.687 ], [ %.pre339, %then.686 ], !dbg !2602
  %tmpv.1966.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1958.field.ld.3, %else.687 ], [ %tmpv.1966.sroa.0.0.copyload, %then.686 ]
  %tmpv.1966.sroa.3.0 = phi i64 [ %add.80, %else.687 ], [ %tmpv.1966.sroa.3.0.copyload, %then.686 ]
  %tmpv.1966.sroa.4.0 = phi i64 [ %tmpv.1958.field.ld.1, %else.687 ], [ %tmpv.1966.sroa.4.0.copyload, %then.686 ]
  store { i8*, i64 }* %tmpv.1966.sroa.0.0, { i8*, i64 }** %tmpv.1966.sroa.0.0.cast.7052.sroa_idx.pre-phi, align 8, !dbg !2602
  store i64 %tmpv.1966.sroa.3.0, i64* %field.1590, align 8, !dbg !2602
  store i64 %tmpv.1966.sroa.4.0, i64* %field.1591, align 8, !dbg !2602
  %icmp.835 = icmp sge i64 %tmpv.1958.field.ld.0, %tmpv.1966.sroa.3.0, !dbg !2602
  %37 = icmp slt i64 %tmpv.1958.field.ld.0, 0, !dbg !2602
  %ior.388 = or i1 %37, %icmp.835, !dbg !2602
  br i1 %ior.388, label %then.689, label %else.689

else.686:                                         ; preds = %else.685
  %icmp.830 = icmp sgt i64 %add.80, %tmpv.1958.field.ld.1, !dbg !2602
  %add.80.lobit325 = or i64 %tmpv.1958.field.ld.1, %add.80, !dbg !2602
  %38 = icmp slt i64 %add.80.lobit325, 0, !dbg !2602
  %39 = or i1 %icmp.830, %38, !dbg !2602
  br i1 %39, label %then.687, label %else.687

then.687:                                         ; preds = %else.686
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2602
  unreachable

else.687:                                         ; preds = %else.686
  %field.1594 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1958, i64 0, i32 0, !dbg !2602
  %tmpv.1958.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1594, align 8, !dbg !2602
  br label %fallthrough.686

then.689:                                         ; preds = %fallthrough.686
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2602
  unreachable

else.689:                                         ; preds = %fallthrough.686
  %ptroff.93 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1966.sroa.0.0, i64 %tmpv.1958.field.ld.0, !dbg !2602
  %runtime.writeBarrier.ld.69 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2602
  %icmp.838 = icmp eq i32 %runtime.writeBarrier.ld.69, 0, !dbg !2602
  br i1 %icmp.838, label %then.690, label %else.690

then.690:                                         ; preds = %else.689
  %icmp.837 = icmp eq { i8*, i64 }* %ptroff.93, null, !dbg !2602
  br i1 %icmp.837, label %then.691, label %else.691

fallthrough.690:                                  ; preds = %else.690, %else.691
  %cast.7059 = bitcast %IPST.3* %tmpv.1971 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7059, i8* nonnull align 8 %cast.7040, i64 24, i1 false)
  %runtime.writeBarrier.ld.70 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2603
  %icmp.840 = icmp eq i32 %runtime.writeBarrier.ld.70, 0, !dbg !2603
  br i1 %icmp.840, label %else.693, label %else.692

else.690:                                         ; preds = %else.689
  %cast.7057 = bitcast { i8*, i64 }* %ptroff.93 to i8*, !dbg !2602
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7057, i8* nonnull %cast.7042), !dbg !2602
  br label %fallthrough.690

then.691:                                         ; preds = %then.690
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2602
  unreachable

else.691:                                         ; preds = %then.690
  %cast.7055 = bitcast { i8*, i64 }* %ptroff.93 to i8*, !dbg !2602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7055, i8* nonnull align 8 %cast.7042, i64 16, i1 false), !dbg !2602
  br label %fallthrough.690

else.692:                                         ; preds = %fallthrough.690
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7041, i8* nonnull %cast.7059), !dbg !2603
  br label %else.695

else.693:                                         ; preds = %fallthrough.690
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7041, i8* nonnull align 8 %cast.7059, i64 24, i1 false), !dbg !2603
  br label %else.695

then.694:                                         ; preds = %fallthrough.683
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2600
  unreachable

else.695:                                         ; preds = %fallthrough.683.else.695_crit_edge, %else.692, %else.693
  %cast.7071.pre-phi = phi i8* [ %.pre345, %fallthrough.683.else.695_crit_edge ], [ %cast.7041, %else.692 ], [ %cast.7041, %else.693 ]
  %cast.7070 = bitcast %IPST.3* %tmpv.1976 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7070, i8* nonnull align 8 %cast.7071.pre-phi, i64 24, i1 false)
  %field.1605 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1976, i64 0, i32 1, !dbg !2604
  %tmpv.1976.field.ld.0 = load i64, i64* %field.1605, align 8, !dbg !2604
  %cast.7072 = bitcast %IPST.3* %tmpv.1979 to i8*
  %cast.7073 = bitcast %IPST.3* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7072, i8* nonnull align 8 %cast.7073, i64 24, i1 false)
  %field.1606 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1979, i64 0, i32 1, !dbg !2604
  %tmpv.1979.field.ld.0 = load i64, i64* %field.1606, align 8, !dbg !2604
  %add.82 = add i64 %tmpv.1979.field.ld.0, %tmpv.1976.field.ld.0, !dbg !2604
  %field.1607 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1976, i64 0, i32 2, !dbg !2604
  %tmpv.1976.field.ld.1 = load i64, i64* %field.1607, align 8, !dbg !2604
  %icmp.844 = icmp ugt i64 %add.82, %tmpv.1976.field.ld.1, !dbg !2604
  br i1 %icmp.844, label %then.696, label %else.696

then.696:                                         ; preds = %else.695
  %cast.7074 = bitcast %IPST.3* %tmpv.1976 to %IPST.4*, !dbg !2604
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.372, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7074, i64 %add.82), !dbg !2604
  %tmpv.1985.sroa.0.0.cast.7079.sroa_idx = bitcast %IPST.4* %sret.actual.372 to { i8*, i64 }**
  %tmpv.1985.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1985.sroa.0.0.cast.7079.sroa_idx, align 8
  %40 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.372, i64 0, i32 1
  %tmpv.1985.sroa.3.0.copyload = load i64, i64* %40, align 8
  %41 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.372, i64 0, i32 2
  %tmpv.1985.sroa.4.0.copyload = load i64, i64* %41, align 8
  %.pre336 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1976, i64 0, i32 0, !dbg !2604
  br label %fallthrough.696

fallthrough.696:                                  ; preds = %else.697, %then.696
  %tmpv.1985.sroa.0.0.cast.7082.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1610, %else.697 ], [ %.pre336, %then.696 ], !dbg !2604
  %tmpv.1985.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1976.field.ld.3, %else.697 ], [ %tmpv.1985.sroa.0.0.copyload, %then.696 ]
  %tmpv.1985.sroa.3.0 = phi i64 [ %add.82, %else.697 ], [ %tmpv.1985.sroa.3.0.copyload, %then.696 ]
  %tmpv.1985.sroa.4.0 = phi i64 [ %tmpv.1976.field.ld.1, %else.697 ], [ %tmpv.1985.sroa.4.0.copyload, %then.696 ]
  store { i8*, i64 }* %tmpv.1985.sroa.0.0, { i8*, i64 }** %tmpv.1985.sroa.0.0.cast.7082.sroa_idx.pre-phi, align 8, !dbg !2604
  store i64 %tmpv.1985.sroa.3.0, i64* %field.1605, align 8, !dbg !2604
  store i64 %tmpv.1985.sroa.4.0, i64* %field.1607, align 8, !dbg !2604
  %icmp.851 = icmp slt i64 %tmpv.1985.sroa.4.0, %tmpv.1976.field.ld.0, !dbg !2604
  %42 = icmp slt i64 %tmpv.1976.field.ld.0, 0, !dbg !2604
  %ior.396 = or i1 %42, %icmp.851, !dbg !2604
  br i1 %ior.396, label %then.699, label %else.699

else.696:                                         ; preds = %else.695
  %icmp.846 = icmp sgt i64 %add.82, %tmpv.1976.field.ld.1, !dbg !2604
  %add.82.lobit326 = or i64 %add.82, %tmpv.1976.field.ld.1, !dbg !2604
  %43 = icmp slt i64 %add.82.lobit326, 0, !dbg !2604
  %44 = or i1 %icmp.846, %43, !dbg !2604
  br i1 %44, label %then.697, label %else.697

then.697:                                         ; preds = %else.696
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2604
  unreachable

else.697:                                         ; preds = %else.696
  %field.1610 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1976, i64 0, i32 0, !dbg !2604
  %tmpv.1976.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1610, align 8, !dbg !2604
  br label %fallthrough.696

then.699:                                         ; preds = %fallthrough.696
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2604
  unreachable

else.699:                                         ; preds = %fallthrough.696
  %icmp.853 = icmp eq i64 %tmpv.1985.sroa.4.0, %tmpv.1976.field.ld.0, !dbg !2604
  %.tmpv.1976.field.ld.0 = select i1 %icmp.853, i64 0, i64 %tmpv.1976.field.ld.0
  %ptroff.95 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1985.sroa.0.0, i64 %.tmpv.1976.field.ld.0, !dbg !2604
  %sub.101 = sub i64 %tmpv.1985.sroa.3.0, %tmpv.1976.field.ld.0, !dbg !2604
  %sub.102 = sub i64 %tmpv.1985.sroa.4.0, %tmpv.1976.field.ld.0, !dbg !2604
  %tmpv.1988.sroa.0.0.cast.7086.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1986, i64 0, i32 0
  store { i8*, i64 }* %ptroff.95, { i8*, i64 }** %tmpv.1988.sroa.0.0.cast.7086.sroa_idx, align 8
  %tmpv.1988.sroa.2.0.cast.7086.sroa_idx279 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1986, i64 0, i32 1
  store i64 %sub.101, i64* %tmpv.1988.sroa.2.0.cast.7086.sroa_idx279, align 8
  %tmpv.1988.sroa.3.0.cast.7086.sroa_idx280 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1986, i64 0, i32 2
  store i64 %sub.102, i64* %tmpv.1988.sroa.3.0.cast.7086.sroa_idx280, align 8
  %cast.7088 = bitcast %IPST.3* %tmpv.1986 to %IPST.4*, !dbg !2604
  %cast.7089 = bitcast %IPST.3* %tmpv.1979 to %IPST.4*, !dbg !2604
  %call.445 = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7088, %IPST.4* byval nonnull %cast.7089), !dbg !2604
  %cast.7090 = bitcast %IPST.3* %tmpv.1989 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7090, i8* nonnull align 8 %cast.7070, i64 24, i1 false)
  %runtime.writeBarrier.ld.71 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2605
  %icmp.855 = icmp eq i32 %runtime.writeBarrier.ld.71, 0, !dbg !2605
  br i1 %icmp.855, label %else.702, label %else.701

else.701:                                         ; preds = %else.699
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7071.pre-phi, i8* nonnull %cast.7090), !dbg !2605
  br label %else.704

else.702:                                         ; preds = %else.699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7071.pre-phi, i8* nonnull align 8 %cast.7090, i64 24, i1 false), !dbg !2605
  br label %else.704

else.704:                                         ; preds = %else.701, %else.702
  %cast.7100 = bitcast %IPST.3* %tmpv.1993 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7100, i8* nonnull align 8 %cast.7071.pre-phi, i64 24, i1 false)
  %field.1626 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1993, i64 0, i32 1, !dbg !2606
  %tmpv.1993.field.ld.0 = load i64, i64* %field.1626, align 8, !dbg !2606
  %cast.7102 = bitcast %IPST.3* %tmpv.1996 to i8*
  %cast.7103 = bitcast %IPST.3* %srcs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7102, i8* nonnull align 8 %cast.7103, i64 24, i1 false)
  %field.1627 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1996, i64 0, i32 1, !dbg !2606
  %tmpv.1996.field.ld.0 = load i64, i64* %field.1627, align 8, !dbg !2606
  %add.83 = add i64 %tmpv.1996.field.ld.0, %tmpv.1993.field.ld.0, !dbg !2606
  %field.1628 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1993, i64 0, i32 2, !dbg !2606
  %tmpv.1993.field.ld.1 = load i64, i64* %field.1628, align 8, !dbg !2606
  %icmp.858 = icmp ugt i64 %add.83, %tmpv.1993.field.ld.1, !dbg !2606
  br i1 %icmp.858, label %then.705, label %else.705

then.705:                                         ; preds = %else.704
  %cast.7104 = bitcast %IPST.3* %tmpv.1993 to %IPST.4*, !dbg !2606
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.373, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7104, i64 %add.83), !dbg !2606
  %tmpv.2002.sroa.0.0.cast.7109.sroa_idx = bitcast %IPST.4* %sret.actual.373 to { i8*, i64 }**
  %tmpv.2002.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2002.sroa.0.0.cast.7109.sroa_idx, align 8
  %45 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.373, i64 0, i32 1
  %tmpv.2002.sroa.3.0.copyload = load i64, i64* %45, align 8
  %46 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.373, i64 0, i32 2
  %tmpv.2002.sroa.4.0.copyload = load i64, i64* %46, align 8
  %.pre337 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1993, i64 0, i32 0, !dbg !2606
  br label %fallthrough.705

fallthrough.705:                                  ; preds = %else.706, %then.705
  %tmpv.2002.sroa.0.0.cast.7112.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1631, %else.706 ], [ %.pre337, %then.705 ], !dbg !2606
  %tmpv.2002.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1993.field.ld.3, %else.706 ], [ %tmpv.2002.sroa.0.0.copyload, %then.705 ]
  %tmpv.2002.sroa.3.0 = phi i64 [ %add.83, %else.706 ], [ %tmpv.2002.sroa.3.0.copyload, %then.705 ]
  %tmpv.2002.sroa.4.0 = phi i64 [ %tmpv.1993.field.ld.1, %else.706 ], [ %tmpv.2002.sroa.4.0.copyload, %then.705 ]
  store { i8*, i64 }* %tmpv.2002.sroa.0.0, { i8*, i64 }** %tmpv.2002.sroa.0.0.cast.7112.sroa_idx.pre-phi, align 8, !dbg !2606
  store i64 %tmpv.2002.sroa.3.0, i64* %field.1626, align 8, !dbg !2606
  store i64 %tmpv.2002.sroa.4.0, i64* %field.1628, align 8, !dbg !2606
  %icmp.865 = icmp slt i64 %tmpv.2002.sroa.4.0, %tmpv.1993.field.ld.0, !dbg !2606
  %47 = icmp slt i64 %tmpv.1993.field.ld.0, 0, !dbg !2606
  %ior.404 = or i1 %47, %icmp.865, !dbg !2606
  br i1 %ior.404, label %then.708, label %else.708

else.705:                                         ; preds = %else.704
  %icmp.860 = icmp sgt i64 %add.83, %tmpv.1993.field.ld.1, !dbg !2606
  %add.83.lobit327 = or i64 %add.83, %tmpv.1993.field.ld.1, !dbg !2606
  %48 = icmp slt i64 %add.83.lobit327, 0, !dbg !2606
  %49 = or i1 %icmp.860, %48, !dbg !2606
  br i1 %49, label %then.706, label %else.706

then.706:                                         ; preds = %else.705
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2606
  unreachable

else.706:                                         ; preds = %else.705
  %field.1631 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1993, i64 0, i32 0, !dbg !2606
  %tmpv.1993.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1631, align 8, !dbg !2606
  br label %fallthrough.705

then.708:                                         ; preds = %fallthrough.705
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2606
  unreachable

else.708:                                         ; preds = %fallthrough.705
  %icmp.867 = icmp eq i64 %tmpv.2002.sroa.4.0, %tmpv.1993.field.ld.0, !dbg !2606
  %.tmpv.1993.field.ld.0 = select i1 %icmp.867, i64 0, i64 %tmpv.1993.field.ld.0
  %ptroff.97 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2002.sroa.0.0, i64 %.tmpv.1993.field.ld.0, !dbg !2606
  %sub.107 = sub i64 %tmpv.2002.sroa.3.0, %tmpv.1993.field.ld.0, !dbg !2606
  %sub.108 = sub i64 %tmpv.2002.sroa.4.0, %tmpv.1993.field.ld.0, !dbg !2606
  %tmpv.2005.sroa.0.0.cast.7116.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2003, i64 0, i32 0
  store { i8*, i64 }* %ptroff.97, { i8*, i64 }** %tmpv.2005.sroa.0.0.cast.7116.sroa_idx, align 8
  %tmpv.2005.sroa.2.0.cast.7116.sroa_idx294 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2003, i64 0, i32 1
  store i64 %sub.107, i64* %tmpv.2005.sroa.2.0.cast.7116.sroa_idx294, align 8
  %tmpv.2005.sroa.3.0.cast.7116.sroa_idx295 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2003, i64 0, i32 2
  store i64 %sub.108, i64* %tmpv.2005.sroa.3.0.cast.7116.sroa_idx295, align 8
  %cast.7118 = bitcast %IPST.3* %tmpv.2003 to %IPST.4*, !dbg !2606
  %cast.7119 = bitcast %IPST.3* %tmpv.1996 to %IPST.4*, !dbg !2606
  %call.446 = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7118, %IPST.4* byval nonnull %cast.7119), !dbg !2606
  %cast.7120 = bitcast %IPST.3* %tmpv.2006 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7120, i8* nonnull align 8 %cast.7100, i64 24, i1 false)
  %runtime.writeBarrier.ld.72 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2607
  %icmp.869 = icmp eq i32 %runtime.writeBarrier.ld.72, 0, !dbg !2607
  br i1 %icmp.869, label %else.711, label %else.710

else.710:                                         ; preds = %else.708
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7071.pre-phi, i8* nonnull %cast.7120), !dbg !2607
  br label %else.712

else.711:                                         ; preds = %else.708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7071.pre-phi, i8* nonnull align 8 %cast.7120, i64 24, i1 false), !dbg !2607
  br label %else.712

else.712:                                         ; preds = %else.711, %else.710
  %field.1645 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.441, i64 0, i32 2, !dbg !2608
  %call.447 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7string, i64 0, i32 0)), !dbg !2609
  %50 = bitcast %IPST.3* %tmpv.2011 to i8**, !dbg !2609
  store i8* %call.447, i8** %50, align 8, !dbg !2609
  %field.1647 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2011, i64 0, i32 1, !dbg !2609
  %cast.7132 = bitcast %IPST.3* %tmpv.2013 to i8*
  %cast.7133 = bitcast %IPST.3* %env to i8*
  %51 = bitcast i64* %field.1647 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 16, i1 false), !dbg !2609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7132, i8* nonnull align 8 %cast.7133, i64 24, i1 false)
  %field.1650 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2013, i64 0, i32 1, !dbg !2610
  %tmpv.2013.field.ld.0 = load i64, i64* %field.1650, align 8, !dbg !2610
  %icmp.871 = icmp eq i64 %tmpv.2013.field.ld.0, 0, !dbg !2610
  br i1 %icmp.871, label %fallthrough.713.thread, label %fallthrough.713

fallthrough.713:                                  ; preds = %else.712
  %field.1648 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2011, i64 0, i32 2, !dbg !2609
  %cast.7134 = bitcast %IPST.3* %tmpv.2011 to %IPST.4*, !dbg !2610
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.374, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7134, i64 %tmpv.2013.field.ld.0), !dbg !2610
  %52 = bitcast %IPST.4* %sret.actual.374 to i64*
  %tmpv.2019.sroa.0.0.copyload333 = load i64, i64* %52, align 8
  %53 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.374, i64 0, i32 1
  %tmpv.2019.sroa.3.0.copyload = load i64, i64* %53, align 8
  %54 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.374, i64 0, i32 2
  %tmpv.2019.sroa.4.0.copyload = load i64, i64* %54, align 8
  %55 = bitcast %IPST.3* %tmpv.2011 to i64*, !dbg !2610
  store i64 %tmpv.2019.sroa.0.0.copyload333, i64* %55, align 8, !dbg !2610
  store i64 %tmpv.2019.sroa.3.0.copyload, i64* %field.1647, align 8, !dbg !2610
  store i64 %tmpv.2019.sroa.4.0.copyload, i64* %field.1648, align 8, !dbg !2610
  %trunc.717 = icmp sgt i64 %tmpv.2019.sroa.4.0.copyload, -1, !dbg !2610
  br i1 %trunc.717, label %else.716, label %then.716

fallthrough.713.thread:                           ; preds = %else.712
  %56 = ptrtoint i8* %call.447 to i64
  %57 = bitcast i64* %field.1647 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false), !dbg !2610
  br label %else.716

then.716:                                         ; preds = %fallthrough.713
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2610
  unreachable

else.716:                                         ; preds = %fallthrough.713.thread, %fallthrough.713
  %tmpv.2011.field.ld.5314 = phi i64 [ %56, %fallthrough.713.thread ], [ %tmpv.2019.sroa.0.0.copyload333, %fallthrough.713 ], !dbg !2610
  %tmpv.2019.sroa.4.0332 = phi i64 [ 0, %fallthrough.713.thread ], [ %tmpv.2019.sroa.4.0.copyload, %fallthrough.713 ]
  %tmpv.2019.sroa.3.0331 = phi i64 [ 0, %fallthrough.713.thread ], [ %tmpv.2019.sroa.3.0.copyload, %fallthrough.713 ]
  %58 = bitcast %IPST.3* %tmpv.2020 to i64*
  store i64 %tmpv.2011.field.ld.5314, i64* %58, align 8
  %tmpv.2022.sroa.2.0.cast.7146.sroa_idx309 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2020, i64 0, i32 1
  store i64 %tmpv.2019.sroa.3.0331, i64* %tmpv.2022.sroa.2.0.cast.7146.sroa_idx309, align 8
  %tmpv.2022.sroa.3.0.cast.7146.sroa_idx310 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2020, i64 0, i32 2
  store i64 %tmpv.2019.sroa.4.0332, i64* %tmpv.2022.sroa.3.0.cast.7146.sroa_idx310, align 8
  %cast.7148 = bitcast %IPST.3* %tmpv.2020 to %IPST.4*, !dbg !2610
  %cast.7149 = bitcast %IPST.3* %tmpv.2013 to %IPST.4*, !dbg !2610
  %call.448 = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7148, %IPST.4* byval nonnull %cast.7149), !dbg !2610
  %cast.7150 = bitcast %IPST.3* %tmpv.2023 to i8*
  %cast.7151 = bitcast %IPST.3* %tmpv.2011 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7150, i8* nonnull align 8 %cast.7151, i64 24, i1 false)
  %runtime.writeBarrier.ld.73 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2611
  %icmp.882 = icmp eq i32 %runtime.writeBarrier.ld.73, 0, !dbg !2611
  %cast.7153 = bitcast %IPST.3* %field.1645 to i8*, !dbg !2611
  br i1 %icmp.882, label %else.719, label %else.718

fallthrough.718:                                  ; preds = %else.718, %else.719
  %call.449 = call { i64, i64 } @command_line_arguments.RunCmd(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpdir.chunk0, i64 %tmpdir.chunk1, %Cmd.0* nonnull %call.441), !dbg !2612
  ret { i64, i64 } %call.449, !dbg !2613

else.718:                                         ; preds = %else.716
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7153, i8* nonnull %cast.7150), !dbg !2611
  br label %fallthrough.718

else.719:                                         ; preds = %else.716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7153, i8* nonnull align 8 %cast.7150, i64 24, i1 false), !dbg !2611
  br label %fallthrough.718
}

define { i64, i64 } @command_line_arguments.FindEnv(i8* nest nocapture readnone %nest.61, %IPST.3* byval nocapture readonly %env, i64 %key.chunk0, i64 %key.chunk1) #0 !dbg !2614 {
entry:
  %tmp.277 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %env, metadata !2617, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.value(metadata i64 %key.chunk0, metadata !2619, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2620
  call void @llvm.dbg.value(metadata i64 %key.chunk1, metadata !2619, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2620
  %key.addr.sroa.0.0.cast.6474.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.277 to i64*, !dbg !2621
  store i64 %key.chunk0, i64* %key.addr.sroa.0.0.cast.6474.sroa_cast, align 8, !dbg !2621
  %key.addr.sroa.2.0.cast.6474.sroa_idx37 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.277, i64 0, i64 0, i32 1, !dbg !2621
  store i64 %key.chunk1, i64* %key.addr.sroa.2.0.cast.6474.sroa_idx37, align 8, !dbg !2621
  %index.345 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.277, i64 0, i64 1, !dbg !2621
  %cast.6476 = bitcast { i8*, i64 }* %index.345 to i8*, !dbg !2621
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6476, i8* align 8 bitcast ({ i8*, i64 }* @const.456 to i8*), i64 16, i1 false), !dbg !2621
  %call.412 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.277), !dbg !2621
  %call.412.fca.0.extract = extractvalue { i64, i64 } %call.412, 0, !dbg !2621
  %call.412.fca.1.extract = extractvalue { i64, i64 } %call.412, 1, !dbg !2621
  call void @llvm.dbg.value(metadata i64 %call.412.fca.0.extract, metadata !2623, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2624
  call void @llvm.dbg.value(metadata i64 %call.412.fca.1.extract, metadata !2623, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2624
  %tmpv.1780.sroa.0.0.cast.6487.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %env, i64 0, i32 0
  %tmpv.1780.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1780.sroa.0.0.cast.6487.sroa_idx, align 8
  %tmpv.1780.sroa.2.0.cast.6487.sroa_idx5 = getelementptr inbounds %IPST.3, %IPST.3* %env, i64 0, i32 1
  %tmpv.1780.sroa.2.0.copyload = load i64, i64* %tmpv.1780.sroa.2.0.cast.6487.sroa_idx5, align 8
  %icmp.71438 = icmp sgt i64 %tmpv.1780.sroa.2.0.copyload, 0, !dbg !2625
  br i1 %icmp.71438, label %else.595, label %else.598

label.0:                                          ; preds = %else.595
  %icmp.714 = icmp slt i64 %add.65, %tmpv.1780.sroa.2.0.copyload, !dbg !2625
  br i1 %icmp.714, label %else.595, label %else.598

else.595:                                         ; preds = %entry, %label.0
  %tmpv.1778.039 = phi i64 [ %add.65, %label.0 ], [ 0, %entry ]
  %ptroff.76 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1780.sroa.0.0.copyload, i64 %tmpv.1778.039, !dbg !2625
  %tmpv.1779.sroa.0.0.cast.6489.sroa_cast = bitcast { i8*, i64 }* %ptroff.76 to i64*, !dbg !2625
  %tmpv.1779.sroa.0.0.copyload21 = load i64, i64* %tmpv.1779.sroa.0.0.cast.6489.sroa_cast, align 8, !dbg !2625
  %tmpv.1779.sroa.3.0.cast.6489.sroa_idx22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1780.sroa.0.0.copyload, i64 %tmpv.1778.039, i32 1, !dbg !2625
  %tmpv.1779.sroa.3.0.copyload23 = load i64, i64* %tmpv.1779.sroa.3.0.cast.6489.sroa_idx22, align 8, !dbg !2625
  call void @llvm.dbg.value(metadata i64 %tmpv.1779.sroa.0.0.copyload21, metadata !2627, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2628
  call void @llvm.dbg.value(metadata i64 %tmpv.1779.sroa.3.0.copyload23, metadata !2627, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2628
  %call.414 = call i8 @strings.HasPrefix(i8* nest undef, i64 %tmpv.1779.sroa.0.0.copyload21, i64 %tmpv.1779.sroa.3.0.copyload23, i64 %call.412.fca.0.extract, i64 %call.412.fca.1.extract), !dbg !2629
  %0 = and i8 %call.414, 1, !dbg !2630
  %trunc.597 = icmp eq i8 %0, 0, !dbg !2630
  %add.65 = add nuw nsw i64 %tmpv.1778.039, 1, !dbg !2625
  br i1 %trunc.597, label %label.0, label %then.596

then.596:                                         ; preds = %else.595
  %icmp.713 = icmp slt i64 %call.412.fca.1.extract, 0, !dbg !2631
  br i1 %icmp.713, label %then.597, label %else.597

then.597:                                         ; preds = %then.596
  call void @__go_runtime_error(i8* nest undef, i32 5), !dbg !2631
  unreachable

else.597:                                         ; preds = %then.596
  %call.413 = call { i64, i64 } @__go_string_slice(i8* nest undef, i64 %tmpv.1779.sroa.0.0.copyload21, i64 %tmpv.1779.sroa.3.0.copyload23, i64 %call.412.fca.1.extract, i64 -1), !dbg !2631
  ret { i64, i64 } %call.413, !dbg !2632

else.598:                                         ; preds = %label.0, %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !2633, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2634
  call void @llvm.dbg.value(metadata i64 0, metadata !2633, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2634
  ret { i64, i64 } zeroinitializer, !dbg !2635
}

declare void @runtime.chansend1(i8*, {}*, i8*) local_unnamed_addr #0

define void @command_line_arguments.OutputCmd({ { i8*, i64, i64 }, %error.0 }* nocapture sret %sret.formal.9, i8* nest nocapture readnone %nest.30, %Flags.0* %f, { i8*, i64, i64 }* byval nocapture readonly %fallback, i64 %tmpdir.chunk0, i64 %tmpdir.chunk1, %Cmd.0* %cmd) #0 !dbg !2636 {
entry:
  %tmp.170 = alloca %IPST.2, align 8
  %tmp.164 = alloca [2 x { i8*, i64 }], align 8
  %tmp.159 = alloca %IPST.2, align 8
  %tmp.157 = alloca [2 x { i8*, i64 }], align 8
  %tmp.156 = alloca [3 x { i8*, i64 }], align 8
  %tmp.155 = alloca [4 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata { i8*, i64, i64 }* %fallback, metadata !2639, metadata !DIExpression()), !dbg !2640
  %output = alloca { i8*, i64, i64 }, align 8
  %tmpv.1104 = alloca { i8*, i64 }, align 8
  %tmpv.1105 = alloca [1 x %IPST.16], align 8
  %tmpv.1109 = alloca %Writer.0, align 8
  %tmpv.1113 = alloca %Writer.0, align 8
  %tmpv.1156 = alloca %IPST.3, align 8
  %tmpv.1159 = alloca { i8*, i64 }, align 8
  %sret.actual.217 = alloca %IPST.4, align 8
  %tmpv.1169 = alloca %IPST.3, align 8
  %tmpv.1171 = alloca %IPST.3, align 8
  %sret.actual.218 = alloca %IPST.3, align 8
  %tmpv.1176 = alloca %IPST.3, align 8
  %tmpv.1182 = alloca { i8*, i64 }, align 8
  %tmpv.1183 = alloca [4 x %IPST.16], align 8
  %sret.actual.223 = alloca { i8*, i64, i64 }, align 8
  %sret.actual.224 = alloca { i64, %error.0 }, align 8
  %sret.actual.225 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2641, metadata !DIExpression()), !dbg !2642
  call void @llvm.dbg.value(metadata i64 %tmpdir.chunk0, metadata !2643, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2644
  call void @llvm.dbg.value(metadata i64 %tmpdir.chunk1, metadata !2643, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2644
  call void @llvm.dbg.value(metadata %Cmd.0* %cmd, metadata !2645, metadata !DIExpression()), !dbg !2646
  %output.0.sroa_cast = bitcast { i8*, i64, i64 }* %output to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %output.0.sroa_cast)
  %call.248 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !2647
  %0 = and i8 %call.248, 1, !dbg !2649
  %trunc.367 = icmp eq i8 %0, 0, !dbg !2649
  br i1 %trunc.367, label %fallthrough.359, label %then.359

then.359:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2652
  call void @llvm.dbg.value(metadata i64 0, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2652
  %icmp.472 = icmp eq %Cmd.0* %cmd, null, !dbg !2653
  br i1 %icmp.472, label %then.360, label %else.360

fallthrough.359:                                  ; preds = %entry, %else.367
  %call.249 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @bytes.Buffer..d, i64 0, i32 0)), !dbg !2654
  %cast.3926 = bitcast i8* %call.249 to %Buffer.0*, !dbg !2654
  call void @llvm.dbg.value(metadata %Buffer.0* %cast.3926, metadata !2655, metadata !DIExpression()), !dbg !2667
  %call.250 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @bytes.Buffer..d, i64 0, i32 0)), !dbg !2668
  call void @llvm.dbg.value(metadata i8* %call.250, metadata !2669, metadata !DIExpression()), !dbg !2670
  %icmp.479 = icmp eq %Cmd.0* %cmd, null, !dbg !2671
  br i1 %icmp.479, label %then.368, label %else.368

then.360:                                         ; preds = %then.359
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2653
  unreachable

else.360:                                         ; preds = %then.359
  %field.892 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 3, !dbg !2653
  %field0.175 = bitcast { i8*, i64 }* %field.892 to i64*, !dbg !2672
  %ld.407 = load i64, i64* %field0.175, align 8, !dbg !2672
  %1 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 3, i32 1, !dbg !2672
  %ld.408 = load i64, i64* %1, align 8, !dbg !2672
  %call.242 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.407, i64 %ld.408, i64 0, i64 0), !dbg !2672
  %icmp.473 = icmp eq i8 %call.242, 1, !dbg !2672
  br i1 %icmp.473, label %else.363, label %else.362

else.362:                                         ; preds = %else.360
  %cast.3866 = bitcast { i8*, i64 }* %field.892 to i8*
  %index.206 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.155, i64 0, i64 1, !dbg !2673
  %cast.3871 = bitcast { i8*, i64 }* %index.206 to i8*, !dbg !2673
  %2 = bitcast [4 x { i8*, i64 }]* %tmp.155 to i8*, !dbg !2673
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3871, i8* align 8 bitcast ({ i8*, i64 }* @const.438 to i8*), i64 16, i1 false), !dbg !2673
  %index.207 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.155, i64 0, i64 2, !dbg !2673
  %cast.3873 = bitcast { i8*, i64 }* %index.207 to i8*, !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3873, i8* nonnull align 8 %cast.3866, i64 16, i1 false), !dbg !2673
  %index.208 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmp.155, i64 0, i64 3, !dbg !2673
  %cast.3875 = bitcast { i8*, i64 }* %index.208 to i8*, !dbg !2673
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3875, i8* align 8 bitcast ({ i8*, i64 }* @const.440 to i8*), i64 16, i1 false), !dbg !2673
  %call.241 = call { i64, i64 } @runtime.concatstring4(i8* nest undef, i8* null, [4 x { i8*, i64 }]* byval nonnull %tmp.155), !dbg !2673
  %call.241.fca.0.extract = extractvalue { i64, i64 } %call.241, 0, !dbg !2673
  %call.241.fca.1.extract = extractvalue { i64, i64 } %call.241, 1, !dbg !2673
  call void @llvm.dbg.value(metadata i64 %call.241.fca.0.extract, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2652
  call void @llvm.dbg.value(metadata i64 %call.241.fca.1.extract, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2652
  br label %else.363

else.363:                                         ; preds = %else.362, %else.360
  %str.sroa.0.0 = phi i64 [ %call.241.fca.0.extract, %else.362 ], [ 0, %else.360 ]
  %str.sroa.10.0 = phi i64 [ %call.241.fca.1.extract, %else.362 ], [ 0, %else.360 ]
  call void @llvm.dbg.value(metadata i64 %str.sroa.10.0, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2652
  call void @llvm.dbg.value(metadata i64 %str.sroa.0.0, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2652
  %field.895 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 2, i32 1, !dbg !2674
  %.field.field.ld.0 = load i64, i64* %field.895, align 8, !dbg !2674
  %icmp.476 = icmp sgt i64 %.field.field.ld.0, 0, !dbg !2675
  br i1 %icmp.476, label %else.365, label %else.366

else.365:                                         ; preds = %else.363
  %field.894 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 2, !dbg !2674
  %call.243 = call { i64, i64 } @strings.Join(i8* nest undef, %IPST.3* byval nonnull %field.894, i64 ptrtoint ([2 x i8]* @const.439 to i64), i64 1), !dbg !2676
  %call.243.fca.0.extract = extractvalue { i64, i64 } %call.243, 0, !dbg !2676
  %call.243.fca.1.extract = extractvalue { i64, i64 } %call.243, 1, !dbg !2676
  %str.sroa.0.0.cast.3891.sroa_cast = bitcast [3 x { i8*, i64 }]* %tmp.156 to i64*, !dbg !2677
  store i64 %str.sroa.0.0, i64* %str.sroa.0.0.cast.3891.sroa_cast, align 8, !dbg !2677
  %str.sroa.10.0.cast.3891.sroa_idx78 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.156, i64 0, i64 0, i32 1, !dbg !2677
  store i64 %str.sroa.10.0, i64* %str.sroa.10.0.cast.3891.sroa_idx78, align 8, !dbg !2677
  %tmpv.1097.sroa.0.0.cast.3893.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.156, i64 0, i64 1, !dbg !2677
  %tmpv.1097.sroa.0.0.cast.3893.sroa_cast = bitcast { i8*, i64 }* %tmpv.1097.sroa.0.0.cast.3893.sroa_idx to i64*, !dbg !2677
  store i64 %call.243.fca.0.extract, i64* %tmpv.1097.sroa.0.0.cast.3893.sroa_cast, align 8, !dbg !2677
  %tmpv.1097.sroa.2.0.cast.3893.sroa_idx69 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.156, i64 0, i64 1, i32 1, !dbg !2677
  store i64 %call.243.fca.1.extract, i64* %tmpv.1097.sroa.2.0.cast.3893.sroa_idx69, align 8, !dbg !2677
  %index.211 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.156, i64 0, i64 2, !dbg !2677
  %cast.3895 = bitcast { i8*, i64 }* %index.211 to i8*, !dbg !2677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3895, i8* align 8 bitcast ({ i8*, i64 }* @const.440 to i8*), i64 16, i1 false), !dbg !2677
  %call.244 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.156), !dbg !2677
  %call.244.fca.0.extract = extractvalue { i64, i64 } %call.244, 0, !dbg !2677
  %call.244.fca.1.extract = extractvalue { i64, i64 } %call.244, 1, !dbg !2677
  call void @llvm.dbg.value(metadata i64 %call.244.fca.0.extract, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2652
  call void @llvm.dbg.value(metadata i64 %call.244.fca.1.extract, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2652
  br label %else.366

else.366:                                         ; preds = %else.365, %else.363
  %str.sroa.0.1 = phi i64 [ %call.244.fca.0.extract, %else.365 ], [ %str.sroa.0.0, %else.363 ], !dbg !2678
  %str.sroa.10.1 = phi i64 [ %call.244.fca.1.extract, %else.365 ], [ %str.sroa.10.0, %else.363 ], !dbg !2678
  call void @llvm.dbg.value(metadata i64 %str.sroa.10.1, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2652
  call void @llvm.dbg.value(metadata i64 %str.sroa.0.1, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2652
  %field.896 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 1, !dbg !2679
  %call.245 = call { i64, i64 } @strings.Join(i8* nest undef, %IPST.3* byval nonnull %field.896, i64 ptrtoint ([2 x i8]* @const.439 to i64), i64 1), !dbg !2680
  %call.245.fca.0.extract = extractvalue { i64, i64 } %call.245, 0, !dbg !2680
  %call.245.fca.1.extract = extractvalue { i64, i64 } %call.245, 1, !dbg !2680
  %str.sroa.0.0.cast.3907.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.157 to i64*, !dbg !2681
  store i64 %str.sroa.0.1, i64* %str.sroa.0.0.cast.3907.sroa_cast, align 8, !dbg !2681
  %str.sroa.10.0.cast.3907.sroa_idx80 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.157, i64 0, i64 0, i32 1, !dbg !2681
  store i64 %str.sroa.10.1, i64* %str.sroa.10.0.cast.3907.sroa_idx80, align 8, !dbg !2681
  %tmpv.1101.sroa.0.0.cast.3909.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.157, i64 0, i64 1, !dbg !2681
  %tmpv.1101.sroa.0.0.cast.3909.sroa_cast = bitcast { i8*, i64 }* %tmpv.1101.sroa.0.0.cast.3909.sroa_idx to i64*, !dbg !2681
  store i64 %call.245.fca.0.extract, i64* %tmpv.1101.sroa.0.0.cast.3909.sroa_cast, align 8, !dbg !2681
  %tmpv.1101.sroa.2.0.cast.3909.sroa_idx66 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.157, i64 0, i64 1, i32 1, !dbg !2681
  store i64 %call.245.fca.1.extract, i64* %tmpv.1101.sroa.2.0.cast.3909.sroa_idx66, align 8, !dbg !2681
  %call.246 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.157), !dbg !2681
  %call.246.fca.0.extract = extractvalue { i64, i64 } %call.246, 0, !dbg !2681
  %call.246.fca.1.extract = extractvalue { i64, i64 } %call.246, 1, !dbg !2681
  call void @llvm.dbg.value(metadata i64 %call.246.fca.0.extract, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2652
  call void @llvm.dbg.value(metadata i64 %call.246.fca.1.extract, metadata !2650, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2652
  %call.247 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2682
  %str.sroa.0.0.cast.3916.sroa_cast = bitcast { i8*, i64 }* %tmpv.1104 to i64*
  store i64 %call.246.fca.0.extract, i64* %str.sroa.0.0.cast.3916.sroa_cast, align 8
  %str.sroa.10.0.cast.3916.sroa_idx82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1104, i64 0, i32 1
  store i64 %call.246.fca.1.extract, i64* %str.sroa.10.0.cast.3916.sroa_idx82, align 8
  %cast.3919 = bitcast { i8*, i64 }* %tmpv.1104 to i8*, !dbg !2682
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.247, i8* nonnull %cast.3919), !dbg !2682
  %tmp.158.sroa.0.0.cast.3921.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1105, i64 0, i64 0, i32 0, !dbg !2682
  store %_type.0* @string..d, %_type.0** %tmp.158.sroa.0.0.cast.3921.sroa_idx, align 8, !dbg !2682
  %tmp.158.sroa.2.0.cast.3921.sroa_idx125 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1105, i64 0, i64 0, i32 1, !dbg !2682
  store i8* %call.247, i8** %tmp.158.sroa.2.0.cast.3921.sroa_idx125, align 8, !dbg !2682
  %icmp.478 = icmp eq %Flags.0* %f, null, !dbg !2683
  br i1 %icmp.478, label %then.367, label %else.367

then.367:                                         ; preds = %else.366
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2683
  unreachable

else.367:                                         ; preds = %else.366
  %field.899 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !2683
  %.field.ld.104 = load %Logger.0*, %Logger.0** %field.899, align 8, !dbg !2683
  %field.900 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.159, i64 0, i32 0, !dbg !2682
  %cast.3924 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1105, i64 0, i64 0, !dbg !2682
  store %IPST.16* %cast.3924, %IPST.16** %field.900, align 8, !dbg !2682
  %field.901 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.159, i64 0, i32 1, !dbg !2682
  store i64 1, i64* %field.901, align 8, !dbg !2682
  %field.902 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.159, i64 0, i32 2, !dbg !2682
  store i64 1, i64* %field.902, align 8, !dbg !2682
  call void @log.Logger.Println(i8* nest undef, %Logger.0* %.field.ld.104, %IPST.2* byval nonnull %tmp.159), !dbg !2682
  br label %fallthrough.359

then.368:                                         ; preds = %fallthrough.359
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2671
  unreachable

else.368:                                         ; preds = %fallthrough.359
  %field.903 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 5, !dbg !2671
  %field.904 = getelementptr inbounds %Writer.0, %Writer.0* %tmpv.1109, i64 0, i32 0, !dbg !2684
  store { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* bitcast ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer to { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*), { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.904, align 8, !dbg !2684
  %field.905 = getelementptr inbounds %Writer.0, %Writer.0* %tmpv.1109, i64 0, i32 1, !dbg !2684
  store i8* %call.249, i8** %field.905, align 8, !dbg !2684
  %runtime.writeBarrier.ld.40 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2684
  %icmp.481 = icmp eq i32 %runtime.writeBarrier.ld.40, 0, !dbg !2684
  %cast.3934 = bitcast %Writer.0* %field.903 to i8*, !dbg !2684
  %cast.3935 = bitcast %Writer.0* %tmpv.1109 to i8*, !dbg !2684
  br i1 %icmp.481, label %else.371.thread, label %else.371

else.371.thread:                                  ; preds = %else.368
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3934, i8* nonnull align 8 %cast.3935, i64 16, i1 false), !dbg !2684
  %field.906202 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 6, !dbg !2685
  %field.907203 = getelementptr inbounds %Writer.0, %Writer.0* %tmpv.1113, i64 0, i32 0, !dbg !2686
  store { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* bitcast ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer to { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*), { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.907203, align 8, !dbg !2686
  %field.908204 = getelementptr inbounds %Writer.0, %Writer.0* %tmpv.1113, i64 0, i32 1, !dbg !2686
  store i8* %call.250, i8** %field.908204, align 8, !dbg !2686
  %cast.3943206 = bitcast %Writer.0* %field.906202 to i8*, !dbg !2686
  %cast.3944207 = bitcast %Writer.0* %tmpv.1113 to i8*, !dbg !2686
  br label %else.373

else.371:                                         ; preds = %else.368
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), i8* nonnull %cast.3934, i8* nonnull %cast.3935), !dbg !2684
  %runtime.writeBarrier.ld.41.pre = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2686
  %field.906 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 6, !dbg !2685
  %field.907 = getelementptr inbounds %Writer.0, %Writer.0* %tmpv.1113, i64 0, i32 0, !dbg !2686
  store { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* bitcast ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer to { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*), { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.907, align 8, !dbg !2686
  %field.908 = getelementptr inbounds %Writer.0, %Writer.0* %tmpv.1113, i64 0, i32 1, !dbg !2686
  store i8* %call.250, i8** %field.908, align 8, !dbg !2686
  %icmp.484 = icmp eq i32 %runtime.writeBarrier.ld.41.pre, 0, !dbg !2686
  %cast.3943 = bitcast %Writer.0* %field.906 to i8*, !dbg !2686
  %cast.3944 = bitcast %Writer.0* %tmpv.1113 to i8*, !dbg !2686
  br i1 %icmp.484, label %else.373, label %else.372

fallthrough.372:                                  ; preds = %else.372, %else.373
  %icmp.485 = icmp eq %Flags.0* %f, null, !dbg !2687
  br i1 %icmp.485, label %then.374, label %else.374

else.372:                                         ; preds = %else.371
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), i8* nonnull %cast.3943, i8* nonnull %cast.3944), !dbg !2686
  br label %fallthrough.372

else.373:                                         ; preds = %else.371.thread, %else.371
  %cast.3944209 = phi i8* [ %cast.3944207, %else.371.thread ], [ %cast.3944, %else.371 ]
  %cast.3943208 = phi i8* [ %cast.3943206, %else.371.thread ], [ %cast.3943, %else.371 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3943208, i8* nonnull align 8 %cast.3944209, i64 16, i1 false), !dbg !2686
  br label %fallthrough.372

then.374:                                         ; preds = %fallthrough.372
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2687
  unreachable

else.374:                                         ; preds = %fallthrough.372
  %field.909 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 6, !dbg !2687
  %.field.ld.105 = load i8, i8* %field.909, align 1, !dbg !2687
  %3 = and i8 %.field.ld.105, 1, !dbg !2688
  %trunc.375 = icmp eq i8 %3, 0, !dbg !2688
  br i1 %trunc.375, label %command_line_arguments.Flags.ShouldRun.exit, label %fallthrough.375

fallthrough.375:                                  ; preds = %else.374
  %call.251 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpdir.chunk0, i64 %tmpdir.chunk1, i64 0, i64 0), !dbg !2689
  %icmp.486 = icmp eq i8 %call.251, 1, !dbg !2689
  br i1 %icmp.486, label %command_line_arguments.Flags.ShouldRun.exit, label %else.399

command_line_arguments.Flags.ShouldRun.exit:      ; preds = %else.374, %else.406, %else.407, %fallthrough.375
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %output.0.sroa_cast, i8 0, i64 24, i1 false)
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !587, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata i8 0, metadata !589, metadata !DIExpression()), !dbg !2692
  %field.1420.i = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 3, !dbg !2693
  %.field.ld.157.i = load i8, i8* %field.1420.i, align 1, !dbg !2693
  %icmp.705.i = icmp eq i8 %.field.ld.157.i, 0, !dbg !2694
  br i1 %icmp.705.i, label %then.408, label %else.408

else.399:                                         ; preds = %fallthrough.375
  %field.938 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 2, !dbg !2695
  %cast.4029 = bitcast %IPST.3* %tmpv.1156 to i8*
  %cast.4030 = bitcast %IPST.3* %field.938 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4029, i8* nonnull align 8 %cast.4030, i64 24, i1 false)
  %field.940 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1156, i64 0, i32 1, !dbg !2696
  %tmpv.1156.field.ld.0 = load i64, i64* %field.940, align 8, !dbg !2696
  %cast.4031 = bitcast [2 x { i8*, i64 }]* %tmp.164 to i8*, !dbg !2697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4031, i8* align 8 bitcast ({ i8*, i64 }* @const.446 to i8*), i64 16, i1 false), !dbg !2697
  %tmpdir.addr.sroa.0.0.cast.4033.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.164, i64 0, i64 1, !dbg !2697
  %tmpdir.addr.sroa.0.0.cast.4033.sroa_cast = bitcast { i8*, i64 }* %tmpdir.addr.sroa.0.0.cast.4033.sroa_idx to i64*, !dbg !2697
  store i64 %tmpdir.chunk0, i64* %tmpdir.addr.sroa.0.0.cast.4033.sroa_cast, align 8, !dbg !2697
  %tmpdir.addr.sroa.3.0.cast.4033.sroa_idx124 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.164, i64 0, i64 1, i32 1, !dbg !2697
  store i64 %tmpdir.chunk1, i64* %tmpdir.addr.sroa.3.0.cast.4033.sroa_idx124, align 8, !dbg !2697
  %call.254 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.164), !dbg !2697
  %call.254.fca.0.extract = extractvalue { i64, i64 } %call.254, 0, !dbg !2697
  %call.254.fca.1.extract = extractvalue { i64, i64 } %call.254, 1, !dbg !2697
  %sret.actual.216.sroa.0.0.cast.4037.sroa_cast = bitcast { i8*, i64 }* %tmpv.1159 to i64*
  store i64 %call.254.fca.0.extract, i64* %sret.actual.216.sroa.0.0.cast.4037.sroa_cast, align 8
  %sret.actual.216.sroa.2.0.cast.4037.sroa_idx61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1159, i64 0, i32 1
  store i64 %call.254.fca.1.extract, i64* %sret.actual.216.sroa.2.0.cast.4037.sroa_idx61, align 8
  %add.56 = add i64 %tmpv.1156.field.ld.0, 1, !dbg !2696
  %field.941 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1156, i64 0, i32 2, !dbg !2696
  %tmpv.1156.field.ld.1 = load i64, i64* %field.941, align 8, !dbg !2696
  %icmp.519 = icmp ugt i64 %add.56, %tmpv.1156.field.ld.1, !dbg !2696
  br i1 %icmp.519, label %then.400, label %else.400

then.400:                                         ; preds = %else.399
  %cast.4039 = bitcast %IPST.3* %tmpv.1156 to %IPST.4*, !dbg !2696
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.217, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.4039, i64 %add.56), !dbg !2696
  %tmpv.1164.sroa.0.0.cast.4044.sroa_idx = bitcast %IPST.4* %sret.actual.217 to { i8*, i64 }**
  %tmpv.1164.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1164.sroa.0.0.cast.4044.sroa_idx, align 8
  %4 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.217, i64 0, i32 1
  %tmpv.1164.sroa.3.0.copyload = load i64, i64* %4, align 8
  %5 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.217, i64 0, i32 2
  %tmpv.1164.sroa.4.0.copyload = load i64, i64* %5, align 8
  %.pre191 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1156, i64 0, i32 0, !dbg !2696
  br label %fallthrough.400

fallthrough.400:                                  ; preds = %else.401, %then.400
  %tmpv.1164.sroa.0.0.cast.4047.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.944, %else.401 ], [ %.pre191, %then.400 ], !dbg !2696
  %tmpv.1164.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1156.field.ld.3, %else.401 ], [ %tmpv.1164.sroa.0.0.copyload, %then.400 ]
  %tmpv.1164.sroa.3.0 = phi i64 [ %add.56, %else.401 ], [ %tmpv.1164.sroa.3.0.copyload, %then.400 ]
  %tmpv.1164.sroa.4.0 = phi i64 [ %tmpv.1156.field.ld.1, %else.401 ], [ %tmpv.1164.sroa.4.0.copyload, %then.400 ]
  store { i8*, i64 }* %tmpv.1164.sroa.0.0, { i8*, i64 }** %tmpv.1164.sroa.0.0.cast.4047.sroa_idx.pre-phi, align 8, !dbg !2696
  store i64 %tmpv.1164.sroa.3.0, i64* %field.940, align 8, !dbg !2696
  store i64 %tmpv.1164.sroa.4.0, i64* %field.941, align 8, !dbg !2696
  %icmp.526 = icmp sge i64 %tmpv.1156.field.ld.0, %tmpv.1164.sroa.3.0, !dbg !2696
  %6 = icmp slt i64 %tmpv.1156.field.ld.0, 0, !dbg !2696
  %ior.274 = or i1 %6, %icmp.526, !dbg !2696
  br i1 %ior.274, label %then.403, label %else.403

else.400:                                         ; preds = %else.399
  %icmp.521 = icmp sgt i64 %add.56, %tmpv.1156.field.ld.1, !dbg !2696
  %add.56.lobit179 = or i64 %tmpv.1156.field.ld.1, %add.56, !dbg !2696
  %7 = icmp slt i64 %add.56.lobit179, 0, !dbg !2696
  %8 = or i1 %icmp.521, %7, !dbg !2696
  br i1 %8, label %then.401, label %else.401

then.401:                                         ; preds = %else.400
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2696
  unreachable

else.401:                                         ; preds = %else.400
  %field.944 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1156, i64 0, i32 0, !dbg !2696
  %tmpv.1156.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.944, align 8, !dbg !2696
  br label %fallthrough.400

then.403:                                         ; preds = %fallthrough.400
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2696
  unreachable

else.403:                                         ; preds = %fallthrough.400
  %ptroff.59 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1164.sroa.0.0, i64 %tmpv.1156.field.ld.0, !dbg !2696
  %runtime.writeBarrier.ld.46 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2696
  %icmp.529 = icmp eq i32 %runtime.writeBarrier.ld.46, 0, !dbg !2696
  br i1 %icmp.529, label %then.404, label %else.404

then.404:                                         ; preds = %else.403
  %icmp.528 = icmp eq { i8*, i64 }* %ptroff.59, null, !dbg !2696
  br i1 %icmp.528, label %then.405, label %else.405

fallthrough.404:                                  ; preds = %else.404, %else.405
  %cast.4054 = bitcast %IPST.3* %tmpv.1169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4054, i8* nonnull align 8 %cast.4029, i64 24, i1 false)
  %runtime.writeBarrier.ld.47 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2698
  %icmp.531 = icmp eq i32 %runtime.writeBarrier.ld.47, 0, !dbg !2698
  br i1 %icmp.531, label %else.407, label %else.406

else.404:                                         ; preds = %else.403
  %cast.4052 = bitcast { i8*, i64 }* %ptroff.59 to i8*, !dbg !2696
  %cast.4053 = bitcast { i8*, i64 }* %tmpv.1159 to i8*, !dbg !2696
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.4052, i8* nonnull %cast.4053), !dbg !2696
  br label %fallthrough.404

then.405:                                         ; preds = %then.404
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2696
  unreachable

else.405:                                         ; preds = %then.404
  %cast.4050 = bitcast { i8*, i64 }* %ptroff.59 to i8*, !dbg !2696
  %cast.4051 = bitcast { i8*, i64 }* %tmpv.1159 to i8*, !dbg !2696
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.4050, i8* nonnull align 8 %cast.4051, i64 16, i1 false), !dbg !2696
  br label %fallthrough.404

else.406:                                         ; preds = %fallthrough.404
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.4030, i8* nonnull %cast.4054), !dbg !2698
  br label %command_line_arguments.Flags.ShouldRun.exit

else.407:                                         ; preds = %fallthrough.404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4030, i8* nonnull align 8 %cast.4054, i64 24, i1 false), !dbg !2698
  br label %command_line_arguments.Flags.ShouldRun.exit

then.408:                                         ; preds = %command_line_arguments.Flags.ShouldRun.exit
  call void @os.Environ(%IPST.3* nonnull sret %sret.actual.218, i8* nest undef), !dbg !2699
  %cast.4064 = bitcast %IPST.3* %tmpv.1171 to i8*
  %cast.4065 = bitcast %IPST.3* %sret.actual.218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4064, i8* nonnull align 8 %cast.4065, i64 24, i1 false)
  %field.952 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 2, !dbg !2700
  call void @command_line_arguments.MergeEnviron(%IPST.3* nonnull sret %tmpv.1176, i8* nest undef, %IPST.3* byval nonnull %field.952, %IPST.3* byval nonnull %tmpv.1171), !dbg !2701
  %cast.4070 = bitcast %IPST.3* %tmpv.1176 to i8*
  %runtime.writeBarrier.ld.48 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2702
  %icmp.535 = icmp eq i32 %runtime.writeBarrier.ld.48, 0, !dbg !2702
  %cast.4073 = bitcast %IPST.3* %field.952 to i8*, !dbg !2702
  br i1 %icmp.535, label %else.412, label %else.411

else.408:                                         ; preds = %command_line_arguments.Flags.ShouldRun.exit
  %cast.4131 = bitcast { i8*, i64, i64 }* %fallback to i8*, !dbg !2703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %output.0.sroa_cast, i8* nonnull align 8 %cast.4131, i64 24, i1 false), !dbg !2703
  br label %else.416

fallthrough.411:                                  ; preds = %else.411, %else.412
  %call.255 = call { i64, i64 } @os_exec.Cmd.Run(i8* nest undef, %Cmd.0* nonnull %cmd), !dbg !2704
  %call.255.fca.0.extract = extractvalue { i64, i64 } %call.255, 0, !dbg !2704
  call void @llvm.dbg.value(metadata i64 %call.255.fca.0.extract, metadata !2706, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2707
  %icmp.538 = icmp eq i64 %call.255.fca.0.extract, 0, !dbg !2708
  br i1 %icmp.538, label %else.413, label %else.414

else.411:                                         ; preds = %then.408
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.4073, i8* nonnull %cast.4070), !dbg !2702
  br label %fallthrough.411

else.412:                                         ; preds = %then.408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4073, i8* nonnull align 8 %cast.4070, i64 24, i1 false), !dbg !2702
  br label %fallthrough.411

else.413:                                         ; preds = %fallthrough.411
  call void @bytes.Buffer.Bytes({ i8*, i64, i64 }* nonnull sret %sret.actual.223, i8* nest undef, %Buffer.0* %cast.3926), !dbg !2709
  %cast.4127 = bitcast { i8*, i64, i64 }* %sret.actual.223 to i8*
  %output192 = bitcast { i8*, i64, i64 }* %output to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %output192, i8* nonnull align 8 %cast.4127, i64 24, i1 false)
  br label %else.416

else.414:                                         ; preds = %fallthrough.411
  %call.255.fca.1.extract = extractvalue { i64, i64 } %call.255, 1, !dbg !2704
  call void @llvm.dbg.value(metadata i64 %call.255.fca.1.extract, metadata !2706, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2707
  %field.954 = getelementptr inbounds %Cmd.0, %Cmd.0* %cmd, i64 0, i32 1, !dbg !2710
  %call.256 = call { i64, i64 } @strings.Join(i8* nest undef, %IPST.3* byval nonnull %field.954, i64 ptrtoint ([2 x i8]* @const.439 to i64), i64 1), !dbg !2711
  %call.256.fca.0.extract = extractvalue { i64, i64 } %call.256, 0, !dbg !2711
  %call.256.fca.1.extract = extractvalue { i64, i64 } %call.256, 1, !dbg !2711
  %call.257 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2712
  %tmpv.1179.sroa.0.0.cast.4089.sroa_cast = bitcast { i8*, i64 }* %tmpv.1182 to i64*
  store i64 %call.256.fca.0.extract, i64* %tmpv.1179.sroa.0.0.cast.4089.sroa_cast, align 8
  %tmpv.1179.sroa.2.0.cast.4089.sroa_idx42 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1182, i64 0, i32 1
  store i64 %call.256.fca.1.extract, i64* %tmpv.1179.sroa.2.0.cast.4089.sroa_idx42, align 8
  %cast.4092 = bitcast { i8*, i64 }* %tmpv.1182 to i8*, !dbg !2712
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.257, i8* nonnull %cast.4092), !dbg !2712
  %9 = inttoptr i64 %call.255.fca.0.extract to i64*, !dbg !2713
  %.field.ld.115177 = load i64, i64* %9, align 8, !dbg !2713
  %10 = inttoptr i64 %call.255.fca.1.extract to i8*, !dbg !2712
  %tmp.166.sroa.0.0.cast.4100.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 0, i32 0, !dbg !2712
  store %_type.0* @string..d, %_type.0** %tmp.166.sroa.0.0.cast.4100.sroa_idx, align 8, !dbg !2712
  %tmp.166.sroa.2.0.cast.4100.sroa_idx137 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 0, i32 1, !dbg !2712
  store i8* %call.257, i8** %tmp.166.sroa.2.0.cast.4100.sroa_idx137, align 8, !dbg !2712
  %tmp.167.sroa.0.0.cast.4102.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 1, i32 0, !dbg !2712
  %11 = bitcast %_type.0** %tmp.167.sroa.0.0.cast.4102.sroa_idx to i64*, !dbg !2712
  store i64 %.field.ld.115177, i64* %11, align 8, !dbg !2712
  %tmp.167.sroa.2.0.cast.4102.sroa_idx138 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 1, i32 1, !dbg !2712
  store i8* %10, i8** %tmp.167.sroa.2.0.cast.4102.sroa_idx138, align 8, !dbg !2712
  %tmp.168.sroa.0.0.cast.4104.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 2, i32 0, !dbg !2712
  store %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bytes.Buffer, i64 0, i32 0), %_type.0** %tmp.168.sroa.0.0.cast.4104.sroa_idx, align 8, !dbg !2712
  %tmp.168.sroa.2.0.cast.4104.sroa_idx139 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 2, i32 1, !dbg !2712
  store i8* %call.249, i8** %tmp.168.sroa.2.0.cast.4104.sroa_idx139, align 8, !dbg !2712
  %tmp.169.sroa.0.0.cast.4106.sroa_idx = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 3, i32 0, !dbg !2712
  store %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bytes.Buffer, i64 0, i32 0), %_type.0** %tmp.169.sroa.0.0.cast.4106.sroa_idx, align 8, !dbg !2712
  %tmp.169.sroa.2.0.cast.4106.sroa_idx140 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 3, i32 1, !dbg !2712
  store i8* %call.250, i8** %tmp.169.sroa.2.0.cast.4106.sroa_idx140, align 8, !dbg !2712
  %field.967 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.170, i64 0, i32 0, !dbg !2712
  %cast.4109 = getelementptr inbounds [4 x %IPST.16], [4 x %IPST.16]* %tmpv.1183, i64 0, i64 0, !dbg !2712
  store %IPST.16* %cast.4109, %IPST.16** %field.967, align 8, !dbg !2712
  %field.968 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.170, i64 0, i32 1, !dbg !2712
  store i64 4, i64* %field.968, align 8, !dbg !2712
  %field.969 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.170, i64 0, i32 2, !dbg !2712
  store i64 4, i64* %field.969, align 8, !dbg !2712
  %call.258 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([20 x i8]* @const.447 to i64), i64 19, %IPST.2* byval nonnull %tmp.170), !dbg !2712
  %call.258.fca.0.extract = extractvalue { i64, i64 } %call.258, 0, !dbg !2712
  %call.258.fca.1.extract = extractvalue { i64, i64 } %call.258, 1, !dbg !2712
  call void @llvm.dbg.value(metadata i64 %call.258.fca.0.extract, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2715
  call void @llvm.dbg.value(metadata i64 %call.258.fca.1.extract, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2715
  %sret.formal.9193194 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.formal.9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %sret.formal.9193194, i8 0, i64 24, i1 false), !dbg !2716
  %tmp.171.sroa.2.0.cast.4123.sroa_idx142 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.9, i64 0, i32 1, !dbg !2716
  %tmp.171.sroa.2.0.cast.4123.sroa_cast = bitcast %error.0* %tmp.171.sroa.2.0.cast.4123.sroa_idx142 to i64*, !dbg !2716
  store i64 %call.258.fca.0.extract, i64* %tmp.171.sroa.2.0.cast.4123.sroa_cast, align 8, !dbg !2716
  %tmp.171.sroa.3.0.cast.4123.sroa_idx143 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.9, i64 0, i32 1, i32 1, !dbg !2716
  %tmp.171.sroa.3.0.cast.4123.sroa_cast = bitcast i8** %tmp.171.sroa.3.0.cast.4123.sroa_idx143 to i64*, !dbg !2716
  store i64 %call.258.fca.1.extract, i64* %tmp.171.sroa.3.0.cast.4123.sroa_cast, align 8, !dbg !2716
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %output.0.sroa_cast), !dbg !2716
  ret void, !dbg !2716

else.416:                                         ; preds = %else.413, %else.408
  %field.987 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 5, !dbg !2717
  %.field.ld.116 = load i8, i8* %field.987, align 1, !dbg !2717
  %12 = and i8 %.field.ld.116, 1, !dbg !2718
  %trunc.419 = icmp eq i8 %12, 0, !dbg !2718
  br i1 %trunc.419, label %fallthrough.417, label %then.417

then.417:                                         ; preds = %else.416
  %os.Stderr.ld.0171172 = load i64, i64* bitcast (%File.1** @os.Stderr to i64*), align 8, !dbg !2719
  call void @bytes.Buffer.WriteTo({ i64, %error.0 }* nonnull sret %sret.actual.224, i8* nest undef, %Buffer.0* %cast.3926, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), i64 %os.Stderr.ld.0171172), !dbg !2721
  %tmpv.1188.sroa.3.sroa.0.0.tmpv.1188.sroa.3.0.cast.4138.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.224, i64 0, i32 1, i32 0, !dbg !2721
  %tmpv.1188.sroa.3.sroa.0.0.copyload33 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1188.sroa.3.sroa.0.0.tmpv.1188.sroa.3.0.cast.4138.sroa_cast.sroa_idx, align 8, !dbg !2721
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.224, metadata !2722, metadata !DIExpression(DW_OP_deref)), !dbg !2723
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1188.sroa.3.sroa.0.0.copyload33, metadata !2724, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2723
  %icmp.539 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1188.sroa.3.sroa.0.0.copyload33, null, !dbg !2725
  br i1 %icmp.539, label %else.418, label %then.418

fallthrough.417:                                  ; preds = %else.418, %else.416
  call void @llvm.dbg.value(metadata i64 0, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2715
  call void @llvm.dbg.value(metadata i64 0, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2715
  %sret.formal.9196197 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.formal.9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %sret.formal.9196197, i8* nonnull align 8 %output.0.sroa_cast, i64 24, i1 false), !dbg !2726
  %tmp.176.sroa.2.0.cast.4197.sroa_idx165 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.9, i64 0, i32 1, !dbg !2726
  %13 = bitcast %error.0* %tmp.176.sroa.2.0.cast.4197.sroa_idx165 to i8*, !dbg !2726
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false), !dbg !2726
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %output.0.sroa_cast), !dbg !2726
  ret void, !dbg !2726

then.418:                                         ; preds = %then.417
  %tmpv.1188.sroa.3.sroa.3.0.tmpv.1188.sroa.3.0.cast.4138.sroa_cast.sroa_idx34 = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.224, i64 0, i32 1, i32 1, !dbg !2721
  %14 = bitcast i8** %tmpv.1188.sroa.3.sroa.3.0.tmpv.1188.sroa.3.0.cast.4138.sroa_cast.sroa_idx34 to i64*, !dbg !2721
  %tmpv.1188.sroa.3.sroa.3.0.copyload35173 = load i64, i64* %14, align 8, !dbg !2721
  call void @llvm.dbg.value(metadata i8** %tmpv.1188.sroa.3.sroa.3.0.tmpv.1188.sroa.3.0.cast.4138.sroa_cast.sroa_idx34, metadata !2724, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2723
  %15 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1188.sroa.3.sroa.0.0.copyload33 to i64, !dbg !2727
  call void @llvm.dbg.value(metadata i64 %15, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2715
  call void @llvm.dbg.value(metadata i64 %tmpv.1188.sroa.3.sroa.3.0.copyload35173, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2715
  %sret.formal.9198199 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.formal.9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %sret.formal.9198199, i8 0, i64 24, i1 false), !dbg !2727
  %tmp.173.sroa.2.0.cast.4155.sroa_idx150 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.9, i64 0, i32 1, !dbg !2727
  %tmp.173.sroa.2.0.cast.4155.sroa_cast = bitcast %error.0* %tmp.173.sroa.2.0.cast.4155.sroa_idx150 to i64*, !dbg !2727
  store i64 %15, i64* %tmp.173.sroa.2.0.cast.4155.sroa_cast, align 8, !dbg !2727
  %tmp.173.sroa.3.0.cast.4155.sroa_idx151 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.9, i64 0, i32 1, i32 1, !dbg !2727
  %tmp.173.sroa.3.0.cast.4155.sroa_cast = bitcast i8** %tmp.173.sroa.3.0.cast.4155.sroa_idx151 to i64*, !dbg !2727
  store i64 %tmpv.1188.sroa.3.sroa.3.0.copyload35173, i64* %tmp.173.sroa.3.0.cast.4155.sroa_cast, align 8, !dbg !2727
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %output.0.sroa_cast), !dbg !2727
  ret void, !dbg !2727

else.418:                                         ; preds = %then.417
  %os.Stdout.ld.0174175 = load i64, i64* bitcast (%File.1** @os.Stdout to i64*), align 8, !dbg !2728
  call void @bytes.Buffer.WriteTo({ i64, %error.0 }* nonnull sret %sret.actual.225, i8* nest undef, %Buffer.0* %cast.3926, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %File.1*, { i8*, i64, i64 }*)* }* @pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File to i64), i64 %os.Stdout.ld.0174175), !dbg !2730
  %tmpv.1193.sroa.3.sroa.0.0.tmpv.1193.sroa.3.0.cast.4164.sroa_cast.sroa_idx = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.225, i64 0, i32 1, i32 0, !dbg !2730
  %tmpv.1193.sroa.3.sroa.0.0.copyload16 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1193.sroa.3.sroa.0.0.tmpv.1193.sroa.3.0.cast.4164.sroa_cast.sroa_idx, align 8, !dbg !2730
  call void @llvm.dbg.value(metadata { i64, %error.0 }* %sret.actual.225, metadata !2731, metadata !DIExpression(DW_OP_deref)), !dbg !2732
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1193.sroa.3.sroa.0.0.copyload16, metadata !2733, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2732
  %icmp.540 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1193.sroa.3.sroa.0.0.copyload16, null, !dbg !2734
  br i1 %icmp.540, label %fallthrough.417, label %then.419

then.419:                                         ; preds = %else.418
  %tmpv.1193.sroa.3.sroa.3.0.tmpv.1193.sroa.3.0.cast.4164.sroa_cast.sroa_idx17 = getelementptr inbounds { i64, %error.0 }, { i64, %error.0 }* %sret.actual.225, i64 0, i32 1, i32 1, !dbg !2730
  %16 = bitcast i8** %tmpv.1193.sroa.3.sroa.3.0.tmpv.1193.sroa.3.0.cast.4164.sroa_cast.sroa_idx17 to i64*, !dbg !2730
  %tmpv.1193.sroa.3.sroa.3.0.copyload18176 = load i64, i64* %16, align 8, !dbg !2730
  call void @llvm.dbg.value(metadata i8** %tmpv.1193.sroa.3.sroa.3.0.tmpv.1193.sroa.3.0.cast.4164.sroa_cast.sroa_idx17, metadata !2733, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2732
  %17 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1193.sroa.3.sroa.0.0.copyload16 to i64, !dbg !2735
  call void @llvm.dbg.value(metadata i64 %17, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2715
  call void @llvm.dbg.value(metadata i64 %tmpv.1193.sroa.3.sroa.3.0.copyload18176, metadata !2714, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2715
  %sret.formal.9200201 = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.formal.9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %sret.formal.9200201, i8 0, i64 24, i1 false), !dbg !2735
  %tmp.175.sroa.2.0.cast.4181.sroa_idx157 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.9, i64 0, i32 1, !dbg !2735
  %tmp.175.sroa.2.0.cast.4181.sroa_cast = bitcast %error.0* %tmp.175.sroa.2.0.cast.4181.sroa_idx157 to i64*, !dbg !2735
  store i64 %17, i64* %tmp.175.sroa.2.0.cast.4181.sroa_cast, align 8, !dbg !2735
  %tmp.175.sroa.3.0.cast.4181.sroa_idx158 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.formal.9, i64 0, i32 1, i32 1, !dbg !2735
  %tmp.175.sroa.3.0.cast.4181.sroa_cast = bitcast i8** %tmp.175.sroa.3.0.cast.4181.sroa_idx158 to i64*, !dbg !2735
  store i64 %tmpv.1193.sroa.3.sroa.3.0.copyload18176, i64* %tmp.175.sroa.3.0.cast.4181.sroa_cast, align 8, !dbg !2735
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %output.0.sroa_cast), !dbg !2735
  ret void, !dbg !2735
}

declare { i64, i64 } @strings.Join(i8*, %IPST.3*, i64, i64) local_unnamed_addr #0

declare void @log.Logger.Println(i8*, %Logger.0*, %IPST.2*) local_unnamed_addr #0

declare void @bytes.Buffer.Write({ i64, %error.0 }*, i8*, %Buffer.0*, { i8*, i64, i64 }*) #0

declare void @os.Environ(%IPST.3*, i8*) local_unnamed_addr #0

define void @command_line_arguments.MergeEnviron(%IPST.3* nocapture sret %sret.formal.10, i8* nest nocapture readnone %nest.31, %IPST.3* byval nocapture readonly %kv, %IPST.3* byval nocapture readonly %cur) #0 !dbg !2736 {
entry:
  %tmp.181 = alloca [3 x { i8*, i64 }], align 8
  %tmp.179 = alloca %IPST.2, align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %cur, metadata !2739, metadata !DIExpression()), !dbg !2740
  call void @llvm.dbg.declare(metadata %IPST.3* %kv, metadata !2741, metadata !DIExpression()), !dbg !2742
  %new = alloca %IPST.3, align 8
  %sret.actual.226 = alloca %IPST.4, align 8
  %ev = alloca { i8*, i64 }, align 8
  %sret.actual.227 = alloca %IPST.3, align 8
  %tmpv.1215 = alloca %IPST.3, align 8
  %sret.actual.228 = alloca %IPST.4, align 8
  %tmpv.1227 = alloca { i8*, i64 }, align 8
  %tmpv.1235 = alloca { i8*, i64 }, align 8
  %tmpv.1238 = alloca { i8*, i64 }, align 8
  %sret.actual.230 = alloca %IPST.3, align 8
  %tmpv.1253 = alloca { i8*, i64 }, align 8
  %tmpv.1254 = alloca [1 x %IPST.16], align 8
  %tmpv.1257 = alloca { i8*, i64 }, align 8
  %tmpv.1259 = alloca { i8*, i64 }, align 8
  %tmpv.1267 = alloca { i8*, i64 }, align 8
  %tmpv.1270 = alloca { i8*, i64 }, align 8
  %v = alloca { i8*, i64 }, align 8
  %tmpv.1275 = alloca { i8*, i64 }, align 8
  %tmpv.1277 = alloca %IPST.5, align 8
  %tmpv.1281 = alloca %IPST.3, align 8
  %tmpv.1283 = alloca { i8*, i64 }, align 8
  %sret.actual.234 = alloca %IPST.4, align 8
  %new.0.sroa_cast = bitcast %IPST.3* %new to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %new.0.sroa_cast)
  %field.990 = getelementptr inbounds %IPST.3, %IPST.3* %cur, i64 0, i32 1, !dbg !2743
  %cur.field.ld.0 = load i64, i64* %field.990, align 8, !dbg !2743
  %field.991 = getelementptr inbounds %IPST.3, %IPST.3* %kv, i64 0, i32 1, !dbg !2745
  %kv.field.ld.0 = load i64, i64* %field.991, align 8, !dbg !2745
  %add.58 = add i64 %kv.field.ld.0, %cur.field.ld.0, !dbg !2746
  call void @runtime.makeslice(%IPST.4* nonnull sret %sret.actual.226, i8* nest undef, %_type.0* nonnull @string..d, i64 0, i64 %add.58), !dbg !2747
  %cast.4205 = bitcast %IPST.4* %sret.actual.226 to i8*
  %new156157 = bitcast %IPST.3* %new to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %new156157, i8* nonnull align 8 %cast.4205, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 ptrtoint ([6 x i8]* @const.449 to i64), metadata !2748, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2749
  call void @llvm.dbg.value(metadata i64 5, metadata !2748, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2749
  %call.260 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), i64 %cur.field.ld.0, i8* null), !dbg !2750
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.260, metadata !2751, metadata !DIExpression()), !dbg !2752
  %0 = bitcast { i8*, i64 }* %ev to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 16, i1 false)
  %tmpv.1208.sroa.0.0.cast.4230.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %cur, i64 0, i32 0
  %tmpv.1208.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1208.sroa.0.0.cast.4230.sroa_idx, align 8
  %icmp.573149 = icmp sgt i64 %cur.field.ld.0, 0, !dbg !2753
  br i1 %icmp.573149, label %else.420.lr.ph, label %else.439

else.420.lr.ph:                                   ; preds = %entry
  %field0.186 = bitcast { i8*, i64 }* %ev to i64*
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ev, i64 0, i32 1
  %elem.sroa.0.0.cast.4240.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.227, i64 0, i32 0
  %elem.sroa.8.0.cast.4240.sroa_idx89 = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.227, i64 0, i32 1
  %cast.4243 = bitcast %IPST.3* %tmpv.1215 to i8*
  %field.999 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1215, i64 0, i32 1
  %field.1000 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1215, i64 0, i32 2
  %cast.4245 = bitcast %IPST.3* %tmpv.1215 to %IPST.4*
  %tmpv.1221.sroa.0.0.cast.4250.sroa_idx = bitcast %IPST.4* %sret.actual.228 to { i8*, i64 }**
  %2 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.228, i64 0, i32 1
  %3 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.228, i64 0, i32 2
  %tmpv.1221.sroa.0.0.cast.4253.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1215, i64 0, i32 0
  %sret.actual.229.sroa.0.0.cast.4264.sroa_cast = bitcast { i8*, i64 }* %tmpv.1227 to i64*
  %sret.actual.229.sroa.2.0.cast.4264.sroa_idx68 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1227, i64 0, i32 1
  %cast.4268 = bitcast { i8*, i64 }* %tmpv.1227 to i8*
  %cast.4275 = bitcast { i8*, i64 }* %tmpv.1235 to i8*
  %cast.4277 = bitcast { i8*, i64 }* %tmpv.1238 to i8*
  br label %else.420

else.420:                                         ; preds = %else.420.lr.ph, %label.2
  %tmpv.1206.0150 = phi i64 [ 0, %else.420.lr.ph ], [ %add.61, %label.2 ]
  %ptroff.60 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1208.sroa.0.0.copyload, i64 %tmpv.1206.0150, !dbg !2753
  %cast.4232 = bitcast { i8*, i64 }* %ptroff.60 to i8*, !dbg !2753
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* align 8 %cast.4232, i64 16, i1 false), !dbg !2753
  %ld.427 = load i64, i64* %field0.186, align 8, !dbg !2755
  %ld.428 = load i64, i64* %1, align 8, !dbg !2755
  call void @strings.SplitN(%IPST.3* nonnull sret %sret.actual.227, i8* nest undef, i64 %ld.427, i64 %ld.428, i64 ptrtoint ([2 x i8]* @const.455 to i64), i64 1, i64 2), !dbg !2755
  %elem.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %elem.sroa.0.0.cast.4240.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %elem.sroa.0.0.copyload, metadata !2757, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2758
  %elem.sroa.8.0.copyload = load i64, i64* %elem.sroa.8.0.cast.4240.sroa_idx89, align 8
  call void @llvm.dbg.value(metadata i64 %elem.sroa.8.0.copyload, metadata !2757, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2758
  call void @llvm.dbg.value(metadata %IPST.3* %sret.actual.227, metadata !2757, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2758
  %icmp.544 = icmp eq i64 %elem.sroa.8.0.copyload, 2, !dbg !2759
  br i1 %icmp.544, label %fallthrough.421, label %then.423

fallthrough.421:                                  ; preds = %else.420
  %field0.188 = bitcast { i8*, i64 }* %elem.sroa.0.0.copyload to i64*, !dbg !2760
  %ld.431 = load i64, i64* %field0.188, align 8, !dbg !2760
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %elem.sroa.0.0.copyload, i64 0, i32 1, !dbg !2760
  %ld.432 = load i64, i64* %4, align 8, !dbg !2760
  %call.261 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.431, i64 %ld.432, i64 0, i64 0), !dbg !2760
  %icmp.547 = icmp eq i8 %call.261, 1, !dbg !2760
  br i1 %icmp.547, label %then.423, label %else.423

then.423:                                         ; preds = %else.420, %fallthrough.421
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4243, i8* nonnull align 8 %new.0.sroa_cast, i64 24, i1 false)
  %tmpv.1215.field.ld.0 = load i64, i64* %field.999, align 8, !dbg !2761
  %add.59 = add i64 %tmpv.1215.field.ld.0, 1, !dbg !2761
  %tmpv.1215.field.ld.1 = load i64, i64* %field.1000, align 8, !dbg !2761
  %icmp.549 = icmp ugt i64 %add.59, %tmpv.1215.field.ld.1, !dbg !2761
  br i1 %icmp.549, label %then.424, label %else.424

else.423:                                         ; preds = %fallthrough.421
  %call.263 = call i8 @runtime.eqstring(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.449 to i64), i64 5, i64 ptrtoint ([8 x i8]* @const.172 to i64), i64 7), !dbg !2762
  %icmp.566 = icmp eq i8 %call.263, 1, !dbg !2762
  br i1 %icmp.566, label %else.431, label %else.423.else.436_crit_edge

else.423.else.436_crit_edge:                      ; preds = %else.423
  %.pre155 = bitcast { i8*, i64 }* %elem.sroa.0.0.copyload to i8*
  br label %else.436

then.424:                                         ; preds = %then.423
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.228, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.4245, i64 %add.59), !dbg !2761
  %tmpv.1221.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1221.sroa.0.0.cast.4250.sroa_idx, align 8
  %tmpv.1221.sroa.3.0.copyload = load i64, i64* %2, align 8
  %tmpv.1221.sroa.4.0.copyload = load i64, i64* %3, align 8
  br label %fallthrough.424

fallthrough.424:                                  ; preds = %else.425, %then.424
  %tmpv.1221.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1221.sroa.0.0.copyload, %then.424 ], [ %tmpv.1215.field.ld.3, %else.425 ]
  %tmpv.1221.sroa.3.0 = phi i64 [ %tmpv.1221.sroa.3.0.copyload, %then.424 ], [ %add.59, %else.425 ]
  %tmpv.1221.sroa.4.0 = phi i64 [ %tmpv.1221.sroa.4.0.copyload, %then.424 ], [ %tmpv.1215.field.ld.1, %else.425 ]
  store { i8*, i64 }* %tmpv.1221.sroa.0.0, { i8*, i64 }** %tmpv.1221.sroa.0.0.cast.4253.sroa_idx, align 8, !dbg !2761
  store i64 %tmpv.1221.sroa.3.0, i64* %field.999, align 8, !dbg !2761
  store i64 %tmpv.1221.sroa.4.0, i64* %field.1000, align 8, !dbg !2761
  %icmp.556 = icmp sge i64 %tmpv.1215.field.ld.0, %tmpv.1221.sroa.3.0, !dbg !2761
  %5 = icmp slt i64 %tmpv.1215.field.ld.0, 0, !dbg !2761
  %ior.299 = or i1 %5, %icmp.556, !dbg !2761
  br i1 %ior.299, label %then.427, label %else.427

else.424:                                         ; preds = %then.423
  %icmp.551 = icmp sgt i64 %add.59, %tmpv.1215.field.ld.1, !dbg !2761
  %add.59.lobit133 = or i64 %add.59, %tmpv.1215.field.ld.1, !dbg !2761
  %6 = icmp slt i64 %add.59.lobit133, 0, !dbg !2761
  %7 = or i1 %icmp.551, %6, !dbg !2761
  br i1 %7, label %then.425, label %else.425

then.425:                                         ; preds = %else.424
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2761
  unreachable

else.425:                                         ; preds = %else.424
  %tmpv.1215.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1221.sroa.0.0.cast.4253.sroa_idx, align 8, !dbg !2761
  br label %fallthrough.424

then.427:                                         ; preds = %fallthrough.424
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2761
  unreachable

else.427:                                         ; preds = %fallthrough.424
  %ptroff.63 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1221.sroa.0.0, i64 %tmpv.1215.field.ld.0, !dbg !2761
  %runtime.writeBarrier.ld.49 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2761
  %icmp.559 = icmp eq i32 %runtime.writeBarrier.ld.49, 0, !dbg !2761
  br i1 %icmp.559, label %then.428, label %else.428

then.428:                                         ; preds = %else.427
  %icmp.558 = icmp eq { i8*, i64 }* %ptroff.63, null, !dbg !2761
  br i1 %icmp.558, label %then.429, label %else.429

fallthrough.428:                                  ; preds = %else.428, %else.429
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %new.0.sroa_cast, i8* nonnull align 8 %cast.4243, i64 24, i1 false), !dbg !2763
  br label %label.2

else.428:                                         ; preds = %else.427
  %cast.4258 = bitcast { i8*, i64 }* %ptroff.63 to i8*, !dbg !2761
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.4258, i8* nonnull %0), !dbg !2761
  br label %fallthrough.428

then.429:                                         ; preds = %then.428
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2761
  unreachable

else.429:                                         ; preds = %then.428
  %cast.4256 = bitcast { i8*, i64 }* %ptroff.63 to i8*, !dbg !2761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.4256, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !2761
  br label %fallthrough.428

label.2:                                          ; preds = %else.438, %else.437, %fallthrough.428
  %add.61 = add nuw nsw i64 %tmpv.1206.0150, 1, !dbg !2753
  %icmp.573 = icmp slt i64 %add.61, %cur.field.ld.0, !dbg !2753
  br i1 %icmp.573, label %else.420, label %else.439

else.431:                                         ; preds = %else.423
  %ld.435 = load i64, i64* %field0.188, align 8, !dbg !2764
  %ld.436 = load i64, i64* %4, align 8, !dbg !2764
  %call.262 = call { i64, i64 } @strings.ToUpper(i8* nest undef, i64 %ld.435, i64 %ld.436), !dbg !2764
  %call.262.fca.0.extract = extractvalue { i64, i64 } %call.262, 0, !dbg !2764
  %call.262.fca.1.extract = extractvalue { i64, i64 } %call.262, 1, !dbg !2764
  store i64 %call.262.fca.0.extract, i64* %sret.actual.229.sroa.0.0.cast.4264.sroa_cast, align 8
  store i64 %call.262.fca.1.extract, i64* %sret.actual.229.sroa.2.0.cast.4264.sroa_idx68, align 8
  %runtime.writeBarrier.ld.50 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2765
  %icmp.565 = icmp eq i32 %runtime.writeBarrier.ld.50, 0, !dbg !2765
  %cast.4267 = bitcast { i8*, i64 }* %elem.sroa.0.0.copyload to i8*, !dbg !2765
  br i1 %icmp.565, label %else.434, label %else.433

else.433:                                         ; preds = %else.431
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.4267, i8* nonnull %cast.4268), !dbg !2765
  br label %else.436

else.434:                                         ; preds = %else.431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.4267, i8* nonnull align 8 %cast.4268, i64 16, i1 false), !dbg !2765
  br label %else.436

else.436:                                         ; preds = %else.423.else.436_crit_edge, %else.434, %else.433
  %cast.4276.pre-phi = phi i8* [ %.pre155, %else.423.else.436_crit_edge ], [ %cast.4267, %else.434 ], [ %cast.4267, %else.433 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4275, i8* align 8 %cast.4276.pre-phi, i64 16, i1 false)
  %ptroff.67 = getelementptr { i8*, i64 }, { i8*, i64 }* %elem.sroa.0.0.copyload, i64 1, !dbg !2766
  %cast.4278 = bitcast { i8*, i64 }* %ptroff.67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4277, i8* align 8 %cast.4278, i64 16, i1 false)
  %call.264 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.260, i8* nonnull %cast.4275), !dbg !2767
  %runtime.writeBarrier.ld.51 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2767
  %icmp.572 = icmp eq i32 %runtime.writeBarrier.ld.51, 0, !dbg !2767
  br i1 %icmp.572, label %then.437, label %else.437

then.437:                                         ; preds = %else.436
  %icmp.571 = icmp eq i8* %call.264, null, !dbg !2767
  br i1 %icmp.571, label %then.438, label %else.438

else.437:                                         ; preds = %else.436
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.264, i8* nonnull %cast.4277), !dbg !2767
  br label %label.2

then.438:                                         ; preds = %then.437
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2767
  unreachable

else.438:                                         ; preds = %then.437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.264, i8* nonnull align 8 %cast.4277, i64 16, i1 false), !dbg !2767
  br label %label.2

else.439:                                         ; preds = %label.2, %entry
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  %tmpv.1245.sroa.0.0.cast.4292.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %kv, i64 0, i32 0
  %tmpv.1245.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1245.sroa.0.0.cast.4292.sroa_idx, align 8
  %icmp.594147 = icmp sgt i64 %kv.field.ld.0, 0, !dbg !2768
  br i1 %icmp.594147, label %else.440.lr.ph, label %else.453

else.440.lr.ph:                                   ; preds = %else.439
  %elem2.sroa.0.0.cast.4302.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.230, i64 0, i32 0
  %elem2.sroa.8.0.cast.4302.sroa_idx37 = getelementptr inbounds %IPST.3, %IPST.3* %sret.actual.230, i64 0, i32 1
  %sret.actual.232.sroa.0.0.cast.4327.sroa_cast = bitcast { i8*, i64 }* %tmpv.1259 to i64*
  %sret.actual.232.sroa.2.0.cast.4327.sroa_idx28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1259, i64 0, i32 1
  %cast.4331 = bitcast { i8*, i64 }* %tmpv.1259 to i8*
  %cast.4338 = bitcast { i8*, i64 }* %tmpv.1267 to i8*
  %cast.4340 = bitcast { i8*, i64 }* %tmpv.1270 to i8*
  br label %else.440

else.440:                                         ; preds = %else.440.lr.ph, %fallthrough.451
  %tmpv.1243.0148 = phi i64 [ 0, %else.440.lr.ph ], [ %add.62, %fallthrough.451 ]
  %ptroff.68 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1245.sroa.0.0.copyload, i64 %tmpv.1243.0148, !dbg !2768
  %tmpv.1244.sroa.0.0.cast.4294.sroa_cast = bitcast { i8*, i64 }* %ptroff.68 to i64*, !dbg !2768
  %tmpv.1244.sroa.0.0.copyload57 = load i64, i64* %tmpv.1244.sroa.0.0.cast.4294.sroa_cast, align 8, !dbg !2768
  %tmpv.1244.sroa.3.0.cast.4294.sroa_idx58 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1245.sroa.0.0.copyload, i64 %tmpv.1243.0148, i32 1, !dbg !2768
  %tmpv.1244.sroa.3.0.copyload59 = load i64, i64* %tmpv.1244.sroa.3.0.cast.4294.sroa_idx58, align 8, !dbg !2768
  call void @llvm.dbg.value(metadata i64 %tmpv.1244.sroa.0.0.copyload57, metadata !2770, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2771
  call void @llvm.dbg.value(metadata i64 %tmpv.1244.sroa.3.0.copyload59, metadata !2770, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2771
  call void @strings.SplitN(%IPST.3* nonnull sret %sret.actual.230, i8* nest undef, i64 %tmpv.1244.sroa.0.0.copyload57, i64 %tmpv.1244.sroa.3.0.copyload59, i64 ptrtoint ([2 x i8]* @const.455 to i64), i64 1, i64 2), !dbg !2772
  %elem2.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %elem2.sroa.0.0.cast.4302.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %elem2.sroa.0.0.copyload, metadata !2774, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2775
  %elem2.sroa.8.0.copyload = load i64, i64* %elem2.sroa.8.0.cast.4302.sroa_idx37, align 8
  call void @llvm.dbg.value(metadata i64 %elem2.sroa.8.0.copyload, metadata !2774, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2775
  call void @llvm.dbg.value(metadata %IPST.3* %sret.actual.230, metadata !2774, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !2775
  %icmp.576 = icmp eq i64 %elem2.sroa.8.0.copyload, 2, !dbg !2776
  br i1 %icmp.576, label %fallthrough.441, label %then.443

fallthrough.441:                                  ; preds = %else.440
  %field0.195 = bitcast { i8*, i64 }* %elem2.sroa.0.0.copyload to i64*, !dbg !2777
  %ld.445 = load i64, i64* %field0.195, align 8, !dbg !2777
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %elem2.sroa.0.0.copyload, i64 0, i32 1, !dbg !2777
  %ld.446 = load i64, i64* %8, align 8, !dbg !2777
  %call.265 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.445, i64 %ld.446, i64 0, i64 0), !dbg !2777
  %icmp.579 = icmp eq i8 %call.265, 1, !dbg !2777
  br i1 %icmp.579, label %then.443, label %else.443

then.443:                                         ; preds = %else.440, %fallthrough.441
  %call.266 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2778
  %ev1.sroa.0.0.cast.4306.sroa_cast = bitcast { i8*, i64 }* %tmpv.1253 to i64*
  store i64 %tmpv.1244.sroa.0.0.copyload57, i64* %ev1.sroa.0.0.cast.4306.sroa_cast, align 8
  %ev1.sroa.6.0.cast.4306.sroa_idx53 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1253, i64 0, i32 1
  store i64 %tmpv.1244.sroa.3.0.copyload59, i64* %ev1.sroa.6.0.cast.4306.sroa_idx53, align 8
  %cast.4309 = bitcast { i8*, i64 }* %tmpv.1253 to i8*, !dbg !2778
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.266, i8* nonnull %cast.4309), !dbg !2778
  %tmp.178.sroa.0.0.cast.4311.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1254, i64 0, i64 0, i32 0, !dbg !2778
  store %_type.0* @string..d, %_type.0** %tmp.178.sroa.0.0.cast.4311.sroa_idx, align 8, !dbg !2778
  %tmp.178.sroa.2.0.cast.4311.sroa_idx117 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1254, i64 0, i64 0, i32 1, !dbg !2778
  store i8* %call.266, i8** %tmp.178.sroa.2.0.cast.4311.sroa_idx117, align 8, !dbg !2778
  %field.1027 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.179, i64 0, i32 0, !dbg !2778
  %cast.4314 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1254, i64 0, i64 0, !dbg !2778
  store %IPST.16* %cast.4314, %IPST.16** %field.1027, align 8, !dbg !2778
  %field.1028 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.179, i64 0, i32 1, !dbg !2778
  store i64 1, i64* %field.1028, align 8, !dbg !2778
  %field.1029 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.179, i64 0, i32 2, !dbg !2778
  store i64 1, i64* %field.1029, align 8, !dbg !2778
  %call.267 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([32 x i8]* @const.457 to i64), i64 31, %IPST.2* byval nonnull %tmp.179), !dbg !2778
  %call.267.fca.0.extract = extractvalue { i64, i64 } %call.267, 0, !dbg !2778
  %call.267.fca.1.extract = extractvalue { i64, i64 } %call.267, 1, !dbg !2778
  %call.268 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2779
  %tmpv.1255.sroa.0.0.cast.4319.sroa_cast = bitcast { i8*, i64 }* %tmpv.1257 to i64*
  store i64 %call.267.fca.0.extract, i64* %tmpv.1255.sroa.0.0.cast.4319.sroa_cast, align 8
  %tmpv.1255.sroa.2.0.cast.4319.sroa_idx32 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1257, i64 0, i32 1
  store i64 %call.267.fca.1.extract, i64* %tmpv.1255.sroa.2.0.cast.4319.sroa_idx32, align 8
  %cast.4322 = bitcast { i8*, i64 }* %tmpv.1257 to i8*, !dbg !2779
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.268, i8* nonnull %cast.4322), !dbg !2779
  %9 = ptrtoint i8* %call.268 to i64, !dbg !2779
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %9), !dbg !2779
  unreachable

else.443:                                         ; preds = %fallthrough.441
  %call.270 = call i8 @runtime.eqstring(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.449 to i64), i64 5, i64 ptrtoint ([8 x i8]* @const.172 to i64), i64 7), !dbg !2780
  %icmp.587 = icmp eq i8 %call.270, 1, !dbg !2780
  br i1 %icmp.587, label %else.445, label %else.443.else.450_crit_edge

else.443.else.450_crit_edge:                      ; preds = %else.443
  %.pre = bitcast { i8*, i64 }* %elem2.sroa.0.0.copyload to i8*
  br label %else.450

else.445:                                         ; preds = %else.443
  %ld.453 = load i64, i64* %field0.195, align 8, !dbg !2781
  %ld.454 = load i64, i64* %8, align 8, !dbg !2781
  %call.269 = call { i64, i64 } @strings.ToUpper(i8* nest undef, i64 %ld.453, i64 %ld.454), !dbg !2781
  %call.269.fca.0.extract = extractvalue { i64, i64 } %call.269, 0, !dbg !2781
  %call.269.fca.1.extract = extractvalue { i64, i64 } %call.269, 1, !dbg !2781
  store i64 %call.269.fca.0.extract, i64* %sret.actual.232.sroa.0.0.cast.4327.sroa_cast, align 8
  store i64 %call.269.fca.1.extract, i64* %sret.actual.232.sroa.2.0.cast.4327.sroa_idx28, align 8
  %runtime.writeBarrier.ld.52 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2782
  %icmp.586 = icmp eq i32 %runtime.writeBarrier.ld.52, 0, !dbg !2782
  %cast.4330 = bitcast { i8*, i64 }* %elem2.sroa.0.0.copyload to i8*, !dbg !2782
  br i1 %icmp.586, label %else.448, label %else.447

else.447:                                         ; preds = %else.445
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.4330, i8* nonnull %cast.4331), !dbg !2782
  br label %else.450

else.448:                                         ; preds = %else.445
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.4330, i8* nonnull align 8 %cast.4331, i64 16, i1 false), !dbg !2782
  br label %else.450

else.450:                                         ; preds = %else.443.else.450_crit_edge, %else.448, %else.447
  %cast.4339.pre-phi = phi i8* [ %.pre, %else.443.else.450_crit_edge ], [ %cast.4330, %else.448 ], [ %cast.4330, %else.447 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4338, i8* align 8 %cast.4339.pre-phi, i64 16, i1 false)
  %ptroff.73 = getelementptr { i8*, i64 }, { i8*, i64 }* %elem2.sroa.0.0.copyload, i64 1, !dbg !2783
  %cast.4341 = bitcast { i8*, i64 }* %ptroff.73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4340, i8* align 8 %cast.4341, i64 16, i1 false)
  %call.271 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.260, i8* nonnull %cast.4338), !dbg !2784
  %runtime.writeBarrier.ld.53 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2784
  %icmp.593 = icmp eq i32 %runtime.writeBarrier.ld.53, 0, !dbg !2784
  br i1 %icmp.593, label %then.451, label %else.451

then.451:                                         ; preds = %else.450
  %icmp.592 = icmp eq i8* %call.271, null, !dbg !2784
  br i1 %icmp.592, label %then.452, label %else.452

fallthrough.451:                                  ; preds = %else.451, %else.452
  %add.62 = add nuw nsw i64 %tmpv.1243.0148, 1, !dbg !2768
  %icmp.594 = icmp slt i64 %add.62, %kv.field.ld.0, !dbg !2768
  br i1 %icmp.594, label %else.440, label %else.453

else.451:                                         ; preds = %else.450
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.271, i8* nonnull %cast.4340), !dbg !2784
  br label %fallthrough.451

then.452:                                         ; preds = %then.451
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2784
  unreachable

else.452:                                         ; preds = %then.451
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.271, i8* nonnull align 8 %cast.4340, i64 16, i1 false), !dbg !2784
  br label %fallthrough.451

else.453:                                         ; preds = %fallthrough.451, %else.439
  %v.0.sroa_cast = bitcast { i8*, i64 }* %v to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %v.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %v.0.sroa_cast, i8 0, i64 16, i1 false)
  %cast.4354 = bitcast { i8*, i64 }* %tmpv.1275 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.4354, i8 0, i64 16, i1 false)
  %cast.4358 = bitcast %IPST.5* %tmpv.1277 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.4358, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.260, i8* nonnull %cast.4358), !dbg !2785
  %field.1054 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.1277, i64 0, i32 0, !dbg !2785
  %tmpv.1277.field.ld.2144 = load { i8*, i64 }*, { i8*, i64 }** %field.1054, align 8, !dbg !2785
  %icmp.606145 = icmp eq { i8*, i64 }* %tmpv.1277.field.ld.2144, null, !dbg !2785
  br i1 %icmp.606145, label %else.460, label %then.460.lr.ph

then.460.lr.ph:                                   ; preds = %else.453
  %field.1041 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.1277, i64 0, i32 1
  %10 = bitcast { i8*, i64 }** %field.1041 to i8**
  %cast.4376 = bitcast %IPST.3* %tmpv.1281 to i8*
  %field.1042 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1281, i64 0, i32 1
  %cast.4378 = bitcast [3 x { i8*, i64 }]* %tmp.181 to i8*
  %index.227 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.181, i64 0, i64 1
  %cast.4380 = bitcast { i8*, i64 }* %index.227 to i8*
  %index.228 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmp.181, i64 0, i64 2
  %cast.4382 = bitcast { i8*, i64 }* %index.228 to i8*
  %sret.actual.233.sroa.0.0.cast.4386.sroa_cast = bitcast { i8*, i64 }* %tmpv.1283 to i64*
  %sret.actual.233.sroa.2.0.cast.4386.sroa_idx16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1283, i64 0, i32 1
  %field.1043 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1281, i64 0, i32 2
  %cast.4388 = bitcast %IPST.3* %tmpv.1281 to %IPST.4*
  %tmpv.1288.sroa.0.0.cast.4393.sroa_idx = bitcast %IPST.4* %sret.actual.234 to { i8*, i64 }**
  %11 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.234, i64 0, i32 1
  %12 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.234, i64 0, i32 2
  %tmpv.1288.sroa.0.0.cast.4396.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.1281, i64 0, i32 0
  %cast.4402 = bitcast { i8*, i64 }* %tmpv.1283 to i8*
  %v159 = bitcast { i8*, i64 }* %v to i8*
  br label %then.460

then.454:                                         ; preds = %then.460
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.234, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.4388, i64 %add.63), !dbg !2787
  %tmpv.1288.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1288.sroa.0.0.cast.4393.sroa_idx, align 8
  %tmpv.1288.sroa.3.0.copyload = load i64, i64* %11, align 8
  %tmpv.1288.sroa.4.0.copyload = load i64, i64* %12, align 8
  br label %fallthrough.454

fallthrough.454:                                  ; preds = %else.455, %then.454
  %tmpv.1288.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.1288.sroa.0.0.copyload, %then.454 ], [ %tmpv.1281.field.ld.3, %else.455 ]
  %tmpv.1288.sroa.3.0 = phi i64 [ %tmpv.1288.sroa.3.0.copyload, %then.454 ], [ %add.63, %else.455 ]
  %tmpv.1288.sroa.4.0 = phi i64 [ %tmpv.1288.sroa.4.0.copyload, %then.454 ], [ %tmpv.1281.field.ld.1, %else.455 ]
  store { i8*, i64 }* %tmpv.1288.sroa.0.0, { i8*, i64 }** %tmpv.1288.sroa.0.0.cast.4396.sroa_idx, align 8, !dbg !2787
  store i64 %tmpv.1288.sroa.3.0, i64* %field.1042, align 8, !dbg !2787
  store i64 %tmpv.1288.sroa.4.0, i64* %field.1043, align 8, !dbg !2787
  %icmp.602 = icmp sge i64 %tmpv.1281.field.ld.0, %tmpv.1288.sroa.3.0, !dbg !2787
  %13 = icmp slt i64 %tmpv.1281.field.ld.0, 0, !dbg !2787
  %ior.327 = or i1 %13, %icmp.602, !dbg !2787
  br i1 %ior.327, label %then.457, label %else.457

else.454:                                         ; preds = %then.460
  %icmp.597 = icmp sgt i64 %add.63, %tmpv.1281.field.ld.1, !dbg !2787
  %add.63.lobit132 = or i64 %tmpv.1281.field.ld.1, %add.63, !dbg !2787
  %14 = icmp slt i64 %add.63.lobit132, 0, !dbg !2787
  %15 = or i1 %icmp.597, %14, !dbg !2787
  br i1 %15, label %then.455, label %else.455

then.455:                                         ; preds = %else.454
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !2787
  unreachable

else.455:                                         ; preds = %else.454
  %tmpv.1281.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.1288.sroa.0.0.cast.4396.sroa_idx, align 8, !dbg !2787
  br label %fallthrough.454

then.457:                                         ; preds = %fallthrough.454
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !2787
  unreachable

else.457:                                         ; preds = %fallthrough.454
  %ptroff.75 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.1288.sroa.0.0, i64 %tmpv.1281.field.ld.0, !dbg !2787
  %runtime.writeBarrier.ld.54 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2787
  %icmp.605 = icmp eq i32 %runtime.writeBarrier.ld.54, 0, !dbg !2787
  br i1 %icmp.605, label %then.458, label %else.458

then.458:                                         ; preds = %else.457
  %icmp.604 = icmp eq { i8*, i64 }* %ptroff.75, null, !dbg !2787
  br i1 %icmp.604, label %then.459, label %else.459

fallthrough.458:                                  ; preds = %else.458, %else.459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %new.0.sroa_cast, i8* nonnull align 8 %cast.4376, i64 24, i1 false), !dbg !2788
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.4358), !dbg !2785
  %tmpv.1277.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.1054, align 8, !dbg !2785
  %icmp.606 = icmp eq { i8*, i64 }* %tmpv.1277.field.ld.2, null, !dbg !2785
  br i1 %icmp.606, label %else.460, label %then.460

else.458:                                         ; preds = %else.457
  %cast.4401 = bitcast { i8*, i64 }* %ptroff.75 to i8*, !dbg !2787
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.4401, i8* nonnull %cast.4402), !dbg !2787
  br label %fallthrough.458

then.459:                                         ; preds = %then.458
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2787
  unreachable

else.459:                                         ; preds = %then.458
  %cast.4399 = bitcast { i8*, i64 }* %ptroff.75 to i8*, !dbg !2787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.4399, i8* nonnull align 8 %cast.4402, i64 16, i1 false), !dbg !2787
  br label %fallthrough.458

then.460:                                         ; preds = %then.460.lr.ph, %fallthrough.458
  %tmpv.1277.field.ld.2146 = phi { i8*, i64 }* [ %tmpv.1277.field.ld.2144, %then.460.lr.ph ], [ %tmpv.1277.field.ld.2, %fallthrough.458 ]
  %cast.4363 = bitcast { i8*, i64 }* %tmpv.1277.field.ld.2146 to i8*, !dbg !2785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4354, i8* align 8 %cast.4363, i64 16, i1 false), !dbg !2785
  %tmpv.1277.field.ld.1129 = load i8*, i8** %10, align 8, !dbg !2785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %v159, i8* align 8 %tmpv.1277.field.ld.1129, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4376, i8* nonnull align 8 %new.0.sroa_cast, i64 24, i1 false)
  %tmpv.1281.field.ld.0 = load i64, i64* %field.1042, align 8, !dbg !2787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4378, i8* nonnull align 8 %cast.4354, i64 16, i1 false), !dbg !2789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4380, i8* align 8 bitcast ({ i8*, i64 }* @const.456 to i8*), i64 16, i1 false), !dbg !2789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.4382, i8* nonnull align 8 %v.0.sroa_cast, i64 16, i1 false), !dbg !2789
  %call.272 = call { i64, i64 } @runtime.concatstring3(i8* nest undef, i8* null, [3 x { i8*, i64 }]* byval nonnull %tmp.181), !dbg !2789
  %call.272.fca.0.extract = extractvalue { i64, i64 } %call.272, 0, !dbg !2789
  %call.272.fca.1.extract = extractvalue { i64, i64 } %call.272, 1, !dbg !2789
  store i64 %call.272.fca.0.extract, i64* %sret.actual.233.sroa.0.0.cast.4386.sroa_cast, align 8
  store i64 %call.272.fca.1.extract, i64* %sret.actual.233.sroa.2.0.cast.4386.sroa_idx16, align 8
  %add.63 = add i64 %tmpv.1281.field.ld.0, 1, !dbg !2787
  %tmpv.1281.field.ld.1 = load i64, i64* %field.1043, align 8, !dbg !2787
  %icmp.595 = icmp ugt i64 %add.63, %tmpv.1281.field.ld.1, !dbg !2787
  br i1 %icmp.595, label %then.454, label %else.454

else.460:                                         ; preds = %fallthrough.458, %else.453
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %v.0.sroa_cast)
  %cast.4409 = bitcast %IPST.3* %sret.formal.10 to i8*, !dbg !2790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.4409, i8* nonnull align 8 %new.0.sroa_cast, i64 24, i1 false), !dbg !2790
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %new.0.sroa_cast), !dbg !2790
  ret void, !dbg !2790
}

declare { i64, i64 } @os_exec.Cmd.Run(i8*, %Cmd.0*) local_unnamed_addr #0

declare void @bytes.Buffer.Bytes({ i8*, i64, i64 }*, i8*, %Buffer.0*) local_unnamed_addr #0

declare void @bytes.Buffer.WriteTo({ i64, %error.0 }*, i8*, %Buffer.0*, i64, i64) local_unnamed_addr #0

declare void @runtime.makeslice(%IPST.4*, i8*, %_type.0*, i64, i64) local_unnamed_addr #0

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap(i8*, %_type.0*, i64, i8*) local_unnamed_addr #0

declare void @strings.SplitN(%IPST.3*, i8*, i64, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @strings.ToUpper(i8*, i64, i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @runtime.gopanic(i8*, i64, i64) local_unnamed_addr #3

declare void @runtime.mapiterinit(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.mapiternext(i8*, i8*) local_unnamed_addr #0

declare void @io_ioutil.TempDir({ { i8*, i64 }, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @go_build.Context.Import({ %Package.0*, %error.0 }*, i8*, %Context.1*, i64, i64, i64, i64, i64) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.RemoveAll(i8* nest nocapture readnone %nest.34, %Flags.0* %f, i64 %path.chunk0, i64 %path.chunk1) #0 !dbg !2791 {
entry:
  %tmp.196 = alloca %IPST.2, align 8
  %tmpv.1329 = alloca { i8*, i64 }, align 8
  %tmpv.1330 = alloca [1 x %IPST.16], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !2794, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2795
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !2794, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2795
  %call.284 = call i8 @command_line_arguments.Flags.ShouldPrint(i8* nest undef, %Flags.0* %f), !dbg !2796
  %0 = and i8 %call.284, 1, !dbg !2797
  %trunc.474 = icmp eq i8 %0, 0, !dbg !2797
  br i1 %trunc.474, label %fallthrough.473, label %then.473

then.473:                                         ; preds = %entry
  %call.283 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2798
  %path.addr.sroa.0.0.cast.4585.sroa_cast = bitcast { i8*, i64 }* %tmpv.1329 to i64*
  store i64 %path.chunk0, i64* %path.addr.sroa.0.0.cast.4585.sroa_cast, align 8
  %path.addr.sroa.3.0.cast.4585.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1329, i64 0, i32 1
  store i64 %path.chunk1, i64* %path.addr.sroa.3.0.cast.4585.sroa_idx11, align 8
  %cast.4588 = bitcast { i8*, i64 }* %tmpv.1329 to i8*, !dbg !2798
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.283, i8* nonnull %cast.4588), !dbg !2798
  %tmp.195.sroa.0.0.cast.4590.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1330, i64 0, i64 0, i32 0, !dbg !2798
  store %_type.0* @string..d, %_type.0** %tmp.195.sroa.0.0.cast.4590.sroa_idx, align 8, !dbg !2798
  %tmp.195.sroa.2.0.cast.4590.sroa_idx12 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1330, i64 0, i64 0, i32 1, !dbg !2798
  store i8* %call.283, i8** %tmp.195.sroa.2.0.cast.4590.sroa_idx12, align 8, !dbg !2798
  %icmp.615 = icmp eq %Flags.0* %f, null, !dbg !2799
  br i1 %icmp.615, label %then.474, label %else.474

fallthrough.473:                                  ; preds = %entry, %else.474
  %call.286 = call i8 @command_line_arguments.Flags.ShouldRun(i8* nest undef, %Flags.0* %f), !dbg !2800
  %1 = and i8 %call.286, 1, !dbg !2801
  %trunc.475 = icmp eq i8 %1, 0, !dbg !2801
  br i1 %trunc.475, label %else.475, label %then.475

then.474:                                         ; preds = %then.473
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2799
  unreachable

else.474:                                         ; preds = %then.473
  %field.1090 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !2799
  %.field.ld.126 = load %Logger.0*, %Logger.0** %field.1090, align 8, !dbg !2799
  %field.1091 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.196, i64 0, i32 0, !dbg !2798
  %cast.4594 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1330, i64 0, i64 0, !dbg !2798
  store %IPST.16* %cast.4594, %IPST.16** %field.1091, align 8, !dbg !2798
  %field.1092 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.196, i64 0, i32 1, !dbg !2798
  store i64 1, i64* %field.1092, align 8, !dbg !2798
  %field.1093 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.196, i64 0, i32 2, !dbg !2798
  store i64 1, i64* %field.1093, align 8, !dbg !2798
  call void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.126, i64 ptrtoint ([13 x i8]* @const.473 to i64), i64 12, %IPST.2* byval nonnull %tmp.196), !dbg !2798
  br label %fallthrough.473

then.475:                                         ; preds = %fallthrough.473
  %call.285 = call { i64, i64 } @os.RemoveAll(i8* nest undef, i64 %path.chunk0, i64 %path.chunk1), !dbg !2802
  ret { i64, i64 } %call.285, !dbg !2803

else.475:                                         ; preds = %fallthrough.473
  call void @llvm.dbg.value(metadata i64 0, metadata !2804, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2805
  call void @llvm.dbg.value(metadata i64 0, metadata !2804, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2805
  ret { i64, i64 } zeroinitializer, !dbg !2806
}

declare { i64, i64 } @os.RemoveAll(i8*, i64, i64) local_unnamed_addr #0

define internal void @command_line_arguments.WriteFile..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !2807 {
entry:
  %field.1119 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !2808
  %0 = bitcast i8* %field.1119 to %Flags.0***, !dbg !2808
  %.field.ld.129 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !2808
  %.ld.409 = load %Flags.0*, %Flags.0** %.field.ld.129, align 8, !dbg !2808
  %icmp.625 = icmp eq %Flags.0* %.ld.409, null, !dbg !2809
  br i1 %icmp.625, label %then.487, label %else.487

then.487:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2809
  unreachable

else.487:                                         ; preds = %entry
  %field.1121 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.409, i64 0, i32 2, !dbg !2809
  %field.1122 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !2810
  %1 = bitcast i8* %field.1122 to i8**, !dbg !2810
  %.field.ld.131 = load i8*, i8** %1, align 8, !dbg !2810
  %.ld.411 = load i8, i8* %.field.ld.131, align 1, !dbg !2810
  store i8 %.ld.411, i8* %field.1121, align 1, !dbg !2811
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk5(i8* nest nocapture readnone %nest.75, { %__go_descriptor.9* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2812 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.9* }* %__go_thunk_parameter, metadata !2813, metadata !DIExpression()), !dbg !2814
  %field.1845 = getelementptr inbounds { %__go_descriptor.9* }, { %__go_descriptor.9* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2814
  %.field.ld.233 = load %__go_descriptor.9*, %__go_descriptor.9** %field.1845, align 8, !dbg !2814
  %0 = getelementptr inbounds %__go_descriptor.9, %__go_descriptor.9* %.field.ld.233, i64 0, i32 0, !dbg !2814
  %deref.ld.221 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !2814
  %cast.7617 = bitcast %__go_descriptor.9* %.field.ld.233 to i8*, !dbg !2814
  call void %deref.ld.221(i8* nest %cast.7617), !dbg !2814
  ret void
}

define internal void @command_line_arguments.WriteFile..func2(i8* nest nocapture readonly %"$closure") #0 !dbg !2815 {
entry:
  %cerr = alloca %error.0, align 8
  %0 = bitcast %error.0* %cerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0)
  %field.1123 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !2816
  %1 = bitcast i8* %field.1123 to %File.1***, !dbg !2816
  %.field.ld.132 = load %File.1**, %File.1*** %1, align 8, !dbg !2816
  %.ld.412 = load %File.1*, %File.1** %.field.ld.132, align 8, !dbg !2816
  %call.292 = call { i64, i64 } @os.File.Close(i8* nest undef, %File.1* %.ld.412), !dbg !2818
  %call.292.fca.0.extract = extractvalue { i64, i64 } %call.292, 0, !dbg !2818
  %call.292.fca.1.extract = extractvalue { i64, i64 } %call.292, 1, !dbg !2818
  %sret.actual.245.sroa.0.0.cast.4690.sroa_cast = bitcast %error.0* %cerr to i64*
  store i64 %call.292.fca.0.extract, i64* %sret.actual.245.sroa.0.0.cast.4690.sroa_cast, align 8
  %sret.actual.245.sroa.2.0.cast.4690.sroa_idx1 = getelementptr inbounds %error.0, %error.0* %cerr, i64 0, i32 1
  %sret.actual.245.sroa.2.0.cast.4690.sroa_cast = bitcast i8** %sret.actual.245.sroa.2.0.cast.4690.sroa_idx1 to i64*
  store i64 %call.292.fca.1.extract, i64* %sret.actual.245.sroa.2.0.cast.4690.sroa_cast, align 8
  %field.1125 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !2819
  %2 = bitcast i8* %field.1125 to %error.0**, !dbg !2819
  %.field.ld.134 = load %error.0*, %error.0** %2, align 8, !dbg !2819
  %field.1126 = getelementptr inbounds %error.0, %error.0* %.field.ld.134, i64 0, i32 0, !dbg !2820
  %.field.ld.135 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %field.1126, align 8, !dbg !2820
  %icmp.628 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %.field.ld.135, null, !dbg !2820
  br i1 %icmp.628, label %then.488, label %fallthrough.488

then.488:                                         ; preds = %entry
  %runtime.writeBarrier.ld.55 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !2821
  %icmp.627 = icmp eq i32 %runtime.writeBarrier.ld.55, 0, !dbg !2821
  br i1 %icmp.627, label %then.489, label %else.489

fallthrough.488:                                  ; preds = %else.490, %else.489, %entry
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0)
  ret void

then.489:                                         ; preds = %then.488
  %icmp.626 = icmp eq %error.0* %.field.ld.134, null, !dbg !2821
  br i1 %icmp.626, label %then.490, label %else.490

else.489:                                         ; preds = %then.488
  %cast.4696 = bitcast %error.0* %.field.ld.134 to i8*, !dbg !2821
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i64 0, i32 0), i8* %cast.4696, i8* nonnull %0), !dbg !2821
  br label %fallthrough.488

then.490:                                         ; preds = %then.489
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2821
  unreachable

else.490:                                         ; preds = %then.489
  %cast.4693 = bitcast %error.0* %.field.ld.134 to i8*, !dbg !2821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.4693, i8* nonnull align 8 %0, i64 16, i1 false), !dbg !2821
  br label %fallthrough.488
}

define internal void @command_line_arguments.command_line_arguments..thunk6(i8* nest nocapture readnone %nest.76, { %__go_descriptor.9* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2822 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.9* }* %__go_thunk_parameter, metadata !2823, metadata !DIExpression()), !dbg !2824
  %field.1847 = getelementptr inbounds { %__go_descriptor.9* }, { %__go_descriptor.9* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2824
  %.field.ld.235 = load %__go_descriptor.9*, %__go_descriptor.9** %field.1847, align 8, !dbg !2824
  %0 = getelementptr inbounds %__go_descriptor.9, %__go_descriptor.9* %.field.ld.235, i64 0, i32 0, !dbg !2824
  %deref.ld.231 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !2824
  %cast.7620 = bitcast %__go_descriptor.9* %.field.ld.235 to i8*, !dbg !2824
  call void %deref.ld.231(i8* nest %cast.7620), !dbg !2824
  ret void
}

declare void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

define internal void @command_line_arguments.CopyFile..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !2825 {
entry:
  %field.1162 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !2826
  %0 = bitcast i8* %field.1162 to %Flags.0***, !dbg !2826
  %.field.ld.139 = load %Flags.0**, %Flags.0*** %0, align 8, !dbg !2826
  %.ld.418 = load %Flags.0*, %Flags.0** %.field.ld.139, align 8, !dbg !2826
  %icmp.636 = icmp eq %Flags.0* %.ld.418, null, !dbg !2827
  br i1 %icmp.636, label %then.501, label %else.501

then.501:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !2827
  unreachable

else.501:                                         ; preds = %entry
  %field.1164 = getelementptr inbounds %Flags.0, %Flags.0* %.ld.418, i64 0, i32 2, !dbg !2827
  %field.1165 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !2828
  %1 = bitcast i8* %field.1165 to i8**, !dbg !2828
  %.field.ld.141 = load i8*, i8** %1, align 8, !dbg !2828
  %.ld.420 = load i8, i8* %.field.ld.141, align 1, !dbg !2828
  store i8 %.ld.420, i8* %field.1164, align 1, !dbg !2829
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk7(i8* nest nocapture readnone %nest.77, { %__go_descriptor.9* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2830 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.9* }* %__go_thunk_parameter, metadata !2831, metadata !DIExpression()), !dbg !2832
  %field.1849 = getelementptr inbounds { %__go_descriptor.9* }, { %__go_descriptor.9* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2832
  %.field.ld.237 = load %__go_descriptor.9*, %__go_descriptor.9** %field.1849, align 8, !dbg !2832
  %0 = getelementptr inbounds %__go_descriptor.9, %__go_descriptor.9* %.field.ld.237, i64 0, i32 0, !dbg !2832
  %deref.ld.241 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !2832
  %cast.7623 = bitcast %__go_descriptor.9* %.field.ld.237 to i8*, !dbg !2832
  call void %deref.ld.241(i8* nest %cast.7623), !dbg !2832
  ret void
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk8(i8* nest nocapture readnone %nest.78, { %File.1* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2833 {
entry:
  call void @llvm.dbg.value(metadata { %File.1* }* %__go_thunk_parameter, metadata !2834, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.value(metadata i8 0, metadata !2836, metadata !DIExpression()), !dbg !2835
  %call.471 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk8, %label.0)), !dbg !2835
  %0 = and i8 %call.471, 1, !dbg !2835
  %trunc.816 = icmp eq i8 %0, 0, !dbg !2835
  br i1 %trunc.816, label %else.816, label %label.0

else.816:                                         ; preds = %entry
  %field.1851 = getelementptr inbounds { %File.1* }, { %File.1* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2835
  %.field.ld.239 = load %File.1*, %File.1** %field.1851, align 8, !dbg !2835
  %call.472 = call { i64, i64 } @os.File.Close(i8* nest undef, %File.1* %.field.ld.239), !dbg !2835
  br label %label.0

label.0:                                          ; preds = %entry, %else.816
  call void @llvm.dbg.value(metadata i8 0, metadata !2836, metadata !DIExpression()), !dbg !2835
  ret i8 0, !dbg !2835
}

declare { i64, i64 } @os.MkdirAll(i8*, i64, i64, i32) local_unnamed_addr #0

declare void @os_exec.LookPath({ { i8*, i64 }, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @os.Getenv(i8*, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk9(i8* nest nocapture readnone %nest.79, { %File.1* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2837 {
entry:
  call void @llvm.dbg.value(metadata { %File.1* }* %__go_thunk_parameter, metadata !2838, metadata !DIExpression()), !dbg !2839
  call void @llvm.dbg.value(metadata i8 0, metadata !2840, metadata !DIExpression()), !dbg !2839
  %call.473 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk9, %label.0)), !dbg !2839
  %0 = and i8 %call.473, 1, !dbg !2839
  %trunc.817 = icmp eq i8 %0, 0, !dbg !2839
  br i1 %trunc.817, label %else.817, label %label.0

else.817:                                         ; preds = %entry
  %field.1852 = getelementptr inbounds { %File.1* }, { %File.1* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2839
  %.field.ld.240 = load %File.1*, %File.1** %field.1852, align 8, !dbg !2839
  %call.474 = call { i64, i64 } @os.File.Close(i8* nest undef, %File.1* %.field.ld.240), !dbg !2839
  br label %label.0

label.0:                                          ; preds = %entry, %else.817
  call void @llvm.dbg.value(metadata i8 0, metadata !2840, metadata !DIExpression()), !dbg !2839
  ret i8 0, !dbg !2839
}

declare void @os.File.Readdirnames({ %IPST.3, %error.0 }*, i8*, %File.1*, i64) local_unnamed_addr #0

declare void @os.Stat({ %FileInfo.0, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare void @os.Getwd({ { i8*, i64 }, %error.0 }*, i8*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Init(i8* nest nocapture readnone %nest.48, %Flags.0* %f) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !2841 {
entry:
  %tmp.234 = alloca %IPST.2, align 8
  %tmp.231 = alloca %IPST.3, align 8
  %tmp.230 = alloca %IPST.3, align 8
  %tmp.229 = alloca %IPST.3, align 8
  %tmpv.1479 = alloca i8, align 1
  %start = alloca %Time.0, align 8
  %goversion = alloca { i8*, i64, i64 }, align 8
  %sret.actual.258 = alloca %Time.0, align 8
  %sret.actual.260 = alloca { { i8*, i64 }, %error.0 }, align 8
  %sret.actual.263 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.1487 = alloca { %Flags.0*, { i8*, i64 } }, align 8
  %tmpv.1489 = alloca { i8*, i64 }, align 8
  %env = alloca %IPST.3, align 8
  %tmpv.1495 = alloca { i8*, i64 }, align 8
  %sret.actual.267 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1507 = alloca { i8*, i64 }, align 8
  %sret.actual.270 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1519 = alloca { i8*, i64 }, align 8
  %sret.actual.273 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1530 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.1531 = alloca { i8*, i64 }, align 8
  %sret.actual.276 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1542 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.1543 = alloca { i8*, i64 }, align 8
  %tmpv.1549 = alloca { i8*, i64 }, align 8
  %env15 = alloca %IPST.3, align 8
  %sret.actual.281 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1559 = alloca { i8*, i64 }, align 8
  %env19 = alloca %IPST.3, align 8
  %sret.actual.284 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1569 = alloca { i8*, i64 }, align 8
  %env23 = alloca %IPST.3, align 8
  %sret.actual.287 = alloca { %IPST.3, %error.0 }, align 8
  %tmpv.1579 = alloca { i8*, i64 }, align 8
  %env27 = alloca %IPST.3, align 8
  %sret.actual.290 = alloca { %IPST.3, %error.0 }, align 8
  %sret.actual.292 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %tmpv.1593 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.1600 = alloca [1 x %IPST.16], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !2843, metadata !DIExpression()), !dbg !2844
  store i8 0, i8* %tmpv.1479, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 0, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  %0 = bitcast %Time.0* %start to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %1 = bitcast { i8*, i64, i64 }* %goversion to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1)
  invoke void @time.Now(%Time.0* nonnull sret %sret.actual.258, i8* nest undef)
          to label %cont.342 unwind label %pad.12, !dbg !2847

finally.6:                                        ; preds = %fallthrough.569, %cont.379, %cont.363, %cont.360, %cont.357, %cont.354, %then.528, %then.530, %then.531, %then.532, %then.533, %then.535, %then.538, %then.541, %then.544, %then.547, %then.549, %then.551, %then.552, %then.554, %then.555, %then.557, %then.558, %then.560, %then.561, %then.563, %pad.12, %catchpad.6
  %"$ret57.sroa.0.1" = phi i64 [ 0, %catchpad.6 ], [ %call.329.fca.0.extract, %then.528 ], [ %tmpv.1481.sroa.4.sroa.0.0.copyload249, %then.530 ], [ %call.331.fca.0.extract, %then.531 ], [ %call.332.fca.0.extract, %then.532 ], [ %tmpv.1484.sroa.4.sroa.0.0.copyload245, %then.533 ], [ %call.334.fca.0.extract, %then.535 ], [ %call.336.fca.0.extract, %then.538 ], [ %call.338.fca.0.extract, %then.541 ], [ %call.340.fca.0.extract, %then.544 ], [ %call.342.fca.0.extract, %then.547 ], [ %call.344.fca.0.extract, %then.549 ], [ %13, %then.551 ], [ %call.346.fca.0.extract, %then.552 ], [ %17, %then.554 ], [ %call.348.fca.0.extract, %then.555 ], [ %21, %then.557 ], [ %call.350.fca.0.extract, %then.558 ], [ %25, %then.560 ], [ %call.352.fca.0.extract, %then.561 ], [ %call.355.fca.0.extract, %then.563 ], [ 0, %pad.12 ], [ %tmpv.1501.sroa.3.0.copyload241, %cont.354 ], [ %tmpv.1513.sroa.3.0.copyload233, %cont.357 ], [ %tmpv.1525.sroa.3.0.copyload225, %cont.360 ], [ %tmpv.1537.sroa.3.0.copyload257, %cont.363 ], [ 0, %cont.379 ], [ 0, %fallthrough.569 ]
  %"$ret57.sroa.30.1" = phi i64 [ 0, %catchpad.6 ], [ %call.329.fca.1.extract, %then.528 ], [ %tmpv.1481.sroa.4.sroa.3.0.copyload251, %then.530 ], [ %call.331.fca.1.extract, %then.531 ], [ %call.332.fca.1.extract, %then.532 ], [ %tmpv.1484.sroa.4.sroa.3.0.copyload247, %then.533 ], [ %call.334.fca.1.extract, %then.535 ], [ %call.336.fca.1.extract, %then.538 ], [ %call.338.fca.1.extract, %then.541 ], [ %call.340.fca.1.extract, %then.544 ], [ %call.342.fca.1.extract, %then.547 ], [ %call.344.fca.1.extract, %then.549 ], [ %tmpv.1555.sroa.4.0.copyload105271, %then.551 ], [ %call.346.fca.1.extract, %then.552 ], [ %tmpv.1565.sroa.4.0.copyload88270, %then.554 ], [ %call.348.fca.1.extract, %then.555 ], [ %tmpv.1575.sroa.4.0.copyload71269, %then.557 ], [ %call.350.fca.1.extract, %then.558 ], [ %tmpv.1585.sroa.4.0.copyload54268, %then.560 ], [ %call.352.fca.1.extract, %then.561 ], [ %call.355.fca.1.extract, %then.563 ], [ 0, %pad.12 ], [ %tmpv.1501.sroa.4.0.copyload243, %cont.354 ], [ %tmpv.1513.sroa.4.0.copyload235, %cont.357 ], [ %tmpv.1525.sroa.4.0.copyload227, %cont.360 ], [ %tmpv.1537.sroa.4.0.copyload259, %cont.363 ], [ 0, %cont.379 ], [ 0, %fallthrough.569 ]
  %ehtmp.6.sroa.0.0 = phi i8* [ %ex2.6.fca.0.extract, %catchpad.6 ], [ undef, %then.528 ], [ undef, %then.530 ], [ undef, %then.531 ], [ undef, %then.532 ], [ undef, %then.533 ], [ undef, %then.535 ], [ undef, %then.538 ], [ undef, %then.541 ], [ undef, %then.544 ], [ undef, %then.547 ], [ undef, %then.549 ], [ undef, %then.551 ], [ undef, %then.552 ], [ undef, %then.554 ], [ undef, %then.555 ], [ undef, %then.557 ], [ undef, %then.558 ], [ undef, %then.560 ], [ undef, %then.561 ], [ undef, %then.563 ], [ undef, %pad.12 ], [ undef, %cont.354 ], [ undef, %cont.357 ], [ undef, %cont.360 ], [ undef, %cont.363 ], [ undef, %cont.379 ], [ undef, %fallthrough.569 ]
  %ehtmp.6.sroa.2.0 = phi i32 [ %ex2.6.fca.1.extract, %catchpad.6 ], [ undef, %then.528 ], [ undef, %then.530 ], [ undef, %then.531 ], [ undef, %then.532 ], [ undef, %then.533 ], [ undef, %then.535 ], [ undef, %then.538 ], [ undef, %then.541 ], [ undef, %then.544 ], [ undef, %then.547 ], [ undef, %then.549 ], [ undef, %then.551 ], [ undef, %then.552 ], [ undef, %then.554 ], [ undef, %then.555 ], [ undef, %then.557 ], [ undef, %then.558 ], [ undef, %then.560 ], [ undef, %then.561 ], [ undef, %then.563 ], [ undef, %pad.12 ], [ undef, %cont.354 ], [ undef, %cont.357 ], [ undef, %cont.360 ], [ undef, %cont.363 ], [ undef, %cont.379 ], [ undef, %fallthrough.569 ]
  %finvar.6.0 = phi i8 [ 0, %catchpad.6 ], [ 1, %then.528 ], [ 1, %then.530 ], [ 1, %then.531 ], [ 1, %then.532 ], [ 1, %then.533 ], [ 1, %then.535 ], [ 1, %then.538 ], [ 1, %then.541 ], [ 1, %then.544 ], [ 1, %then.547 ], [ 1, %then.549 ], [ 1, %then.551 ], [ 1, %then.552 ], [ 1, %then.554 ], [ 1, %then.555 ], [ 1, %then.557 ], [ 1, %then.558 ], [ 1, %then.560 ], [ 1, %then.561 ], [ 1, %then.563 ], [ 1, %pad.12 ], [ 1, %cont.354 ], [ 1, %cont.357 ], [ 1, %cont.360 ], [ 1, %cont.363 ], [ 1, %cont.379 ], [ 1, %fallthrough.569 ]
  call void @llvm.dbg.value(metadata i64 %"$ret57.sroa.30.1", metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %"$ret57.sroa.0.1", metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  br label %finish.6

pad.12:                                           ; preds = %then.534, %cont.342, %fallthrough.569, %fallthrough.568, %cont.384, %then.565, %cont.381, %cont.380, %else.562, %fallthrough.548, %else.560, %then.559, %fallthrough.556, %else.557, %then.556, %fallthrough.553, %else.554, %then.553, %fallthrough.550, %else.551, %then.550, %else.549, %then.548, %fallthrough.534, %else.546, %then.545, %fallthrough.542, %else.543, %then.542, %fallthrough.539, %else.540, %then.539, %fallthrough.536, %else.537, %then.536, %else.535, %cont.350, %else.533, %else.532, %else.531, %else.530, %cont.345, %fallthrough.529, %then.529, %entry
  %ex.12 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1479)
          to label %finally.6 unwind label %catchpad.6, !dbg !2849

cont.342:                                         ; preds = %entry
  %cast.5115 = bitcast %Time.0* %sret.actual.258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %cast.5115, i64 24, i1 false)
  %call.329 = invoke fastcc { i64, i64 } @command_line_arguments.validateGoInstall(%Flags.0* %f)
          to label %cont.343 unwind label %pad.12, !dbg !2850

cont.343:                                         ; preds = %cont.342
  %call.329.fca.0.extract = extractvalue { i64, i64 } %call.329, 0, !dbg !2850
  call void @llvm.dbg.value(metadata i64 %call.329.fca.0.extract, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  %icmp.651 = icmp eq i64 %call.329.fca.0.extract, 0, !dbg !2853
  br i1 %icmp.651, label %else.528, label %then.528

then.528:                                         ; preds = %cont.343
  %call.329.fca.1.extract = extractvalue { i64, i64 } %call.329, 1, !dbg !2850
  call void @llvm.dbg.value(metadata i64 %call.329.fca.1.extract, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %call.329.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.329.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.528:                                         ; preds = %cont.343
  %icmp.652 = icmp eq %Flags.0* %f, null, !dbg !2854
  br i1 %icmp.652, label %then.529, label %fallthrough.529

then.529:                                         ; preds = %else.528
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.529 unwind label %pad.12, !dbg !2854

fallthrough.529:                                  ; preds = %else.528, %then.529
  %field.1248 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 11, !dbg !2854
  %field0.250 = bitcast { i8*, i64 }* %field.1248 to i64*, !dbg !2855
  %ld.544 = load i64, i64* %field0.250, align 8, !dbg !2855
  %2 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 11, i32 1, !dbg !2855
  %ld.545 = load i64, i64* %2, align 8, !dbg !2855
  %call.330 = invoke { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.ParseTargets(i8* nest undef, i64 %ld.544, i64 %ld.545)
          to label %cont.345 unwind label %pad.12, !dbg !2855

cont.345:                                         ; preds = %fallthrough.529
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, metadata !2856, metadata !DIExpression()), !dbg !2857
  invoke void @command_line_arguments.MatchaPkgPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.260, i8* nest undef, %Flags.0* nonnull %f)
          to label %cont.346 unwind label %pad.12, !dbg !2858

cont.346:                                         ; preds = %cont.345
  %tmpv.1481.sroa.0.0.cast.5128.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.260 to i64*, !dbg !2858
  %tmpv.1481.sroa.0.0.copyload169 = load i64, i64* %tmpv.1481.sroa.0.0.cast.5128.sroa_cast, align 8, !dbg !2858
  %tmpv.1481.sroa.3.0.cast.5128.sroa_idx170 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.260, i64 0, i32 0, i32 1, !dbg !2858
  %tmpv.1481.sroa.3.0.copyload171 = load i64, i64* %tmpv.1481.sroa.3.0.cast.5128.sroa_idx170, align 8, !dbg !2858
  %tmpv.1481.sroa.4.sroa.0.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_idx = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.260, i64 0, i32 1, !dbg !2858
  %tmpv.1481.sroa.4.sroa.0.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.1481.sroa.4.sroa.0.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_idx to i64*, !dbg !2858
  %tmpv.1481.sroa.4.sroa.0.0.copyload249 = load i64, i64* %tmpv.1481.sroa.4.sroa.0.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_cast, align 8, !dbg !2858
  call void @llvm.dbg.value(metadata i64 %tmpv.1481.sroa.0.0.copyload169, metadata !2859, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2860
  call void @llvm.dbg.value(metadata i64 %tmpv.1481.sroa.3.0.copyload171, metadata !2859, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2860
  call void @llvm.dbg.value(metadata i64 %tmpv.1481.sroa.4.sroa.0.0.copyload249, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  %icmp.653 = icmp eq i64 %tmpv.1481.sroa.4.sroa.0.0.copyload249, 0, !dbg !2861
  br i1 %icmp.653, label %else.530, label %then.530

then.530:                                         ; preds = %cont.346
  %tmpv.1481.sroa.4.sroa.3.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_idx250 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.260, i64 0, i32 1, i32 1, !dbg !2858
  %tmpv.1481.sroa.4.sroa.3.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_cast = bitcast i8** %tmpv.1481.sroa.4.sroa.3.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_idx250 to i64*, !dbg !2858
  %tmpv.1481.sroa.4.sroa.3.0.copyload251 = load i64, i64* %tmpv.1481.sroa.4.sroa.3.0.tmpv.1481.sroa.4.0.cast.5128.sroa_cast.sroa_cast, align 8, !dbg !2858
  call void @llvm.dbg.value(metadata i64 %tmpv.1481.sroa.4.sroa.3.0.copyload251, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %tmpv.1481.sroa.4.sroa.0.0.copyload249, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %tmpv.1481.sroa.4.sroa.3.0.copyload251, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.530:                                         ; preds = %cont.346
  %call.331 = invoke { i64, i64 } @command_line_arguments.RemoveAll(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171)
          to label %cont.347 unwind label %pad.12, !dbg !2862

cont.347:                                         ; preds = %else.530
  %call.331.fca.0.extract = extractvalue { i64, i64 } %call.331, 0, !dbg !2862
  call void @llvm.dbg.value(metadata i64 %call.331.fca.0.extract, metadata !2864, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2865
  %icmp.654 = icmp eq i64 %call.331.fca.0.extract, 0, !dbg !2866
  br i1 %icmp.654, label %else.531, label %then.531

then.531:                                         ; preds = %cont.347
  %call.331.fca.1.extract = extractvalue { i64, i64 } %call.331, 1, !dbg !2862
  call void @llvm.dbg.value(metadata i64 %call.331.fca.1.extract, metadata !2864, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2865
  call void @llvm.dbg.value(metadata i64 %call.331.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.331.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.531:                                         ; preds = %cont.347
  %call.332 = invoke { i64, i64 } @command_line_arguments.Mkdir(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171)
          to label %cont.348 unwind label %pad.12, !dbg !2867

cont.348:                                         ; preds = %else.531
  %call.332.fca.0.extract = extractvalue { i64, i64 } %call.332, 0, !dbg !2867
  call void @llvm.dbg.value(metadata i64 %call.332.fca.0.extract, metadata !2869, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2870
  %icmp.655 = icmp eq i64 %call.332.fca.0.extract, 0, !dbg !2871
  br i1 %icmp.655, label %else.532, label %then.532

then.532:                                         ; preds = %cont.348
  %call.332.fca.1.extract = extractvalue { i64, i64 } %call.332, 1, !dbg !2867
  call void @llvm.dbg.value(metadata i64 %call.332.fca.1.extract, metadata !2869, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2870
  call void @llvm.dbg.value(metadata i64 %call.332.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.332.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.532:                                         ; preds = %cont.348
  invoke void @command_line_arguments.NewTmpDir({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.263, i8* nest undef, %Flags.0* nonnull %f, i64 0, i64 0)
          to label %cont.349 unwind label %pad.12, !dbg !2872

cont.349:                                         ; preds = %else.532
  %tmpv.1484.sroa.0.0.cast.5161.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.263 to i64*, !dbg !2872
  %tmpv.1484.sroa.0.0.copyload151 = load i64, i64* %tmpv.1484.sroa.0.0.cast.5161.sroa_cast, align 8, !dbg !2872
  %tmpv.1484.sroa.3.0.cast.5161.sroa_idx152 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.263, i64 0, i32 0, i32 1, !dbg !2872
  %tmpv.1484.sroa.3.0.copyload153 = load i64, i64* %tmpv.1484.sroa.3.0.cast.5161.sroa_idx152, align 8, !dbg !2872
  %tmpv.1484.sroa.4.sroa.0.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_idx = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.263, i64 0, i32 1, !dbg !2872
  %tmpv.1484.sroa.4.sroa.0.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.1484.sroa.4.sroa.0.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_idx to i64*, !dbg !2872
  %tmpv.1484.sroa.4.sroa.0.0.copyload245 = load i64, i64* %tmpv.1484.sroa.4.sroa.0.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_cast, align 8, !dbg !2872
  call void @llvm.dbg.value(metadata i64 %tmpv.1484.sroa.0.0.copyload151, metadata !2873, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2874
  call void @llvm.dbg.value(metadata i64 %tmpv.1484.sroa.3.0.copyload153, metadata !2873, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2874
  call void @llvm.dbg.value(metadata i64 %tmpv.1484.sroa.4.sroa.0.0.copyload245, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  %icmp.656 = icmp eq i64 %tmpv.1484.sroa.4.sroa.0.0.copyload245, 0, !dbg !2875
  br i1 %icmp.656, label %else.533, label %then.533

then.533:                                         ; preds = %cont.349
  %tmpv.1484.sroa.4.sroa.3.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_idx246 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.263, i64 0, i32 1, i32 1, !dbg !2872
  %tmpv.1484.sroa.4.sroa.3.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_cast = bitcast i8** %tmpv.1484.sroa.4.sroa.3.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_idx246 to i64*, !dbg !2872
  %tmpv.1484.sroa.4.sroa.3.0.copyload247 = load i64, i64* %tmpv.1484.sroa.4.sroa.3.0.tmpv.1484.sroa.4.0.cast.5161.sroa_cast.sroa_cast, align 8, !dbg !2872
  call void @llvm.dbg.value(metadata i64 %tmpv.1484.sroa.4.sroa.3.0.copyload247, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %tmpv.1484.sroa.4.sroa.0.0.copyload245, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %tmpv.1484.sroa.4.sroa.3.0.copyload247, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.533:                                         ; preds = %cont.349
  %cast.5174 = bitcast { %Flags.0*, { i8*, i64 } }* %tmpv.1487 to i8*
  %field.1257 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %tmpv.1487, i64 0, i32 0, !dbg !2876
  store %Flags.0* %f, %Flags.0** %field.1257, align 8, !dbg !2876
  %tmpdir.sroa.0.0.cast.5176.sroa_idx = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %tmpv.1487, i64 0, i32 1, !dbg !2876
  %tmpdir.sroa.0.0.cast.5176.sroa_cast = bitcast { i8*, i64 }* %tmpdir.sroa.0.0.cast.5176.sroa_idx to i64*, !dbg !2876
  store i64 %tmpv.1484.sroa.0.0.copyload151, i64* %tmpdir.sroa.0.0.cast.5176.sroa_cast, align 8, !dbg !2876
  %tmpdir.sroa.11.0.cast.5176.sroa_idx141 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %tmpv.1487, i64 0, i32 1, i32 1, !dbg !2876
  store i64 %tmpv.1484.sroa.3.0.copyload153, i64* %tmpdir.sroa.11.0.cast.5176.sroa_idx141, align 8, !dbg !2876
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.1479, %__go_descriptor.27* bitcast (void (i8*, { %Flags.0*, { i8*, i64 } }*)* @command_line_arguments.command_line_arguments..thunk10 to %__go_descriptor.27*), i8* nonnull %cast.5174)
          to label %cont.350 unwind label %pad.12, !dbg !2876

cont.350:                                         ; preds = %else.533
  call void @llvm.dbg.value(metadata i8 0, metadata !2877, metadata !DIExpression()), !dbg !2879
  %cast.5180 = bitcast { i8*, i64 }* %tmpv.1489 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5180, i8* align 8 bitcast ({ i8*, i64 }* @const.304 to i8*), i64 16, i1 false)
  %call.333 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5180)
          to label %cont.351 unwind label %pad.12, !dbg !2880

cont.351:                                         ; preds = %cont.350
  %call.333.fca.1.extract = extractvalue { i64, i8 } %call.333, 1, !dbg !2880
  call void @llvm.dbg.value(metadata i8 %call.333.fca.1.extract, metadata !2877, metadata !DIExpression()), !dbg !2879
  %3 = and i8 %call.333.fca.1.extract, 1, !dbg !2881
  %trunc.547 = icmp eq i8 %3, 0, !dbg !2881
  br i1 %trunc.547, label %fallthrough.534, label %then.534

then.534:                                         ; preds = %cont.351
  %4 = bitcast %IPST.3* %env to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4)
  %call.334 = invoke fastcc { i64, i64 } @command_line_arguments.validateXcodeInstall(%Flags.0* nonnull %f)
          to label %cont.352 unwind label %pad.12, !dbg !2882

fallthrough.534:                                  ; preds = %cont.351, %fallthrough.545
  call void @llvm.dbg.value(metadata i8 0, metadata !2885, metadata !DIExpression()), !dbg !2887
  %cast.5363 = bitcast { i8*, i64 }* %tmpv.1543 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5363, i8* align 8 bitcast ({ i8*, i64 }* @const.295 to i8*), i64 16, i1 false)
  %call.343 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5363)
          to label %cont.365 unwind label %pad.12, !dbg !2888

cont.352:                                         ; preds = %then.534
  %call.334.fca.0.extract = extractvalue { i64, i64 } %call.334, 0, !dbg !2882
  call void @llvm.dbg.value(metadata i64 %call.334.fca.0.extract, metadata !2889, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2890
  %icmp.657 = icmp eq i64 %call.334.fca.0.extract, 0, !dbg !2891
  br i1 %icmp.657, label %else.535, label %then.535

then.535:                                         ; preds = %cont.352
  %call.334.fca.1.extract = extractvalue { i64, i64 } %call.334, 1, !dbg !2882
  call void @llvm.dbg.value(metadata i64 %call.334.fca.1.extract, metadata !2889, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2890
  call void @llvm.dbg.value(metadata i64 %call.334.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.334.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.535:                                         ; preds = %cont.352
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !2892, metadata !DIExpression()), !dbg !2894
  %cast.5199 = bitcast { i8*, i64 }* %tmpv.1495 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5199, i8* align 8 bitcast ({ i8*, i64 }* @const.306 to i8*), i64 16, i1 false)
  %call.335 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5199)
          to label %cont.353 unwind label %pad.12, !dbg !2895

cont.353:                                         ; preds = %else.535
  %call.335.fca.1.extract = extractvalue { i64, i8 } %call.335, 1, !dbg !2895
  call void @llvm.dbg.value(metadata i8 %call.335.fca.1.extract, metadata !2892, metadata !DIExpression()), !dbg !2894
  %5 = and i8 %call.335.fca.1.extract, 1, !dbg !2896
  %trunc.537 = icmp eq i8 %5, 0, !dbg !2896
  br i1 %trunc.537, label %fallthrough.536, label %then.536

then.536:                                         ; preds = %cont.353
  invoke void @command_line_arguments.DarwinArmEnv({ %IPST.3, %error.0 }* nonnull sret %sret.actual.267, i8* nest undef, %Flags.0* nonnull %f)
          to label %cont.354 unwind label %pad.12, !dbg !2897

fallthrough.536:                                  ; preds = %cont.355, %cont.353
  call void @llvm.dbg.value(metadata i8 0, metadata !2898, metadata !DIExpression()), !dbg !2900
  %cast.5239 = bitcast { i8*, i64 }* %tmpv.1507 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5239, i8* align 8 bitcast ({ i8*, i64 }* @const.308 to i8*), i64 16, i1 false)
  %call.337 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5239)
          to label %cont.356 unwind label %pad.12, !dbg !2901

cont.354:                                         ; preds = %then.536
  %tmpv.1501.sroa.0.0.cast.5212.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.267 to i8*, !dbg !2897
  %tmpv.1501.sroa.3.0.cast.5212.sroa_idx240 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.267, i64 0, i32 1, !dbg !2897
  %tmpv.1501.sroa.3.0.cast.5212.sroa_cast = bitcast %error.0* %tmpv.1501.sroa.3.0.cast.5212.sroa_idx240 to i64*, !dbg !2897
  %tmpv.1501.sroa.3.0.copyload241 = load i64, i64* %tmpv.1501.sroa.3.0.cast.5212.sroa_cast, align 8, !dbg !2897
  %tmpv.1501.sroa.4.0.cast.5212.sroa_idx242 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.267, i64 0, i32 1, i32 1, !dbg !2897
  %tmpv.1501.sroa.4.0.cast.5212.sroa_cast = bitcast i8** %tmpv.1501.sroa.4.0.cast.5212.sroa_idx242 to i64*, !dbg !2897
  %tmpv.1501.sroa.4.0.copyload243 = load i64, i64* %tmpv.1501.sroa.4.0.cast.5212.sroa_cast, align 8, !dbg !2897
  %env273 = bitcast %IPST.3* %env to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env273, i8* nonnull align 8 %tmpv.1501.sroa.0.0.cast.5212.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.1501.sroa.3.0.copyload241, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %tmpv.1501.sroa.4.0.copyload243, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  %icmp.658 = icmp eq i64 %tmpv.1501.sroa.3.0.copyload241, 0, !dbg !2902
  br i1 %icmp.658, label %else.537, label %finally.6

else.537:                                         ; preds = %cont.354
  %call.336 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env, %IPST.3* byval nonnull @const.37)
          to label %cont.355 unwind label %pad.12, !dbg !2903

cont.355:                                         ; preds = %else.537
  %call.336.fca.0.extract = extractvalue { i64, i64 } %call.336, 0, !dbg !2903
  call void @llvm.dbg.value(metadata i64 %call.336.fca.0.extract, metadata !2905, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2906
  %icmp.659 = icmp eq i64 %call.336.fca.0.extract, 0, !dbg !2907
  br i1 %icmp.659, label %fallthrough.536, label %then.538

then.538:                                         ; preds = %cont.355
  %call.336.fca.1.extract = extractvalue { i64, i64 } %call.336, 1, !dbg !2903
  call void @llvm.dbg.value(metadata i64 %call.336.fca.1.extract, metadata !2905, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2906
  call void @llvm.dbg.value(metadata i64 %call.336.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.336.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

cont.356:                                         ; preds = %fallthrough.536
  %call.337.fca.1.extract = extractvalue { i64, i8 } %call.337, 1, !dbg !2901
  call void @llvm.dbg.value(metadata i8 %call.337.fca.1.extract, metadata !2898, metadata !DIExpression()), !dbg !2900
  %6 = and i8 %call.337.fca.1.extract, 1, !dbg !2908
  %trunc.540 = icmp eq i8 %6, 0, !dbg !2908
  br i1 %trunc.540, label %fallthrough.539, label %then.539

then.539:                                         ; preds = %cont.356
  invoke void @command_line_arguments.DarwinArm64Env({ %IPST.3, %error.0 }* nonnull sret %sret.actual.270, i8* nest undef, %Flags.0* nonnull %f)
          to label %cont.357 unwind label %pad.12, !dbg !2909

fallthrough.539:                                  ; preds = %cont.358, %cont.356
  call void @llvm.dbg.value(metadata i8 0, metadata !2910, metadata !DIExpression()), !dbg !2912
  %cast.5279 = bitcast { i8*, i64 }* %tmpv.1519 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5279, i8* align 8 bitcast ({ i8*, i64 }* @const.312 to i8*), i64 16, i1 false)
  %call.339 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5279)
          to label %cont.359 unwind label %pad.12, !dbg !2913

cont.357:                                         ; preds = %then.539
  %tmpv.1513.sroa.0.0.cast.5252.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.270 to i8*, !dbg !2909
  %tmpv.1513.sroa.3.0.cast.5252.sroa_idx232 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.270, i64 0, i32 1, !dbg !2909
  %tmpv.1513.sroa.3.0.cast.5252.sroa_cast = bitcast %error.0* %tmpv.1513.sroa.3.0.cast.5252.sroa_idx232 to i64*, !dbg !2909
  %tmpv.1513.sroa.3.0.copyload233 = load i64, i64* %tmpv.1513.sroa.3.0.cast.5252.sroa_cast, align 8, !dbg !2909
  %tmpv.1513.sroa.4.0.cast.5252.sroa_idx234 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.270, i64 0, i32 1, i32 1, !dbg !2909
  %tmpv.1513.sroa.4.0.cast.5252.sroa_cast = bitcast i8** %tmpv.1513.sroa.4.0.cast.5252.sroa_idx234 to i64*, !dbg !2909
  %tmpv.1513.sroa.4.0.copyload235 = load i64, i64* %tmpv.1513.sroa.4.0.cast.5252.sroa_cast, align 8, !dbg !2909
  %env275 = bitcast %IPST.3* %env to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env275, i8* nonnull align 8 %tmpv.1513.sroa.0.0.cast.5252.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.1513.sroa.3.0.copyload233, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %tmpv.1513.sroa.4.0.copyload235, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  %icmp.660 = icmp eq i64 %tmpv.1513.sroa.3.0.copyload233, 0, !dbg !2914
  br i1 %icmp.660, label %else.540, label %finally.6

else.540:                                         ; preds = %cont.357
  %call.338 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env, %IPST.3* byval nonnull @const.37)
          to label %cont.358 unwind label %pad.12, !dbg !2915

cont.358:                                         ; preds = %else.540
  %call.338.fca.0.extract = extractvalue { i64, i64 } %call.338, 0, !dbg !2915
  call void @llvm.dbg.value(metadata i64 %call.338.fca.0.extract, metadata !2917, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2918
  %icmp.661 = icmp eq i64 %call.338.fca.0.extract, 0, !dbg !2919
  br i1 %icmp.661, label %fallthrough.539, label %then.541

then.541:                                         ; preds = %cont.358
  %call.338.fca.1.extract = extractvalue { i64, i64 } %call.338, 1, !dbg !2915
  call void @llvm.dbg.value(metadata i64 %call.338.fca.1.extract, metadata !2917, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2918
  call void @llvm.dbg.value(metadata i64 %call.338.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.338.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

cont.359:                                         ; preds = %fallthrough.539
  %call.339.fca.1.extract = extractvalue { i64, i8 } %call.339, 1, !dbg !2913
  call void @llvm.dbg.value(metadata i8 %call.339.fca.1.extract, metadata !2910, metadata !DIExpression()), !dbg !2912
  %7 = and i8 %call.339.fca.1.extract, 1, !dbg !2920
  %trunc.543 = icmp eq i8 %7, 0, !dbg !2920
  br i1 %trunc.543, label %fallthrough.542, label %then.542

then.542:                                         ; preds = %cont.359
  invoke void @command_line_arguments.Darwin386Env({ %IPST.3, %error.0 }* nonnull sret %sret.actual.273, i8* nest undef, %Flags.0* nonnull %f)
          to label %cont.360 unwind label %pad.12, !dbg !2921

fallthrough.542:                                  ; preds = %cont.361, %cont.359
  call void @llvm.dbg.value(metadata i8 0, metadata !2922, metadata !DIExpression()), !dbg !2924
  %cast.5321 = bitcast { i8*, i64 }* %tmpv.1531 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5321, i8* align 8 bitcast ({ i8*, i64 }* @const.310 to i8*), i64 16, i1 false)
  %call.341 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5321)
          to label %cont.362 unwind label %pad.12, !dbg !2925

cont.360:                                         ; preds = %then.542
  %tmpv.1525.sroa.0.0.cast.5292.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.273 to i8*, !dbg !2921
  %tmpv.1525.sroa.3.0.cast.5292.sroa_idx224 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.273, i64 0, i32 1, !dbg !2921
  %tmpv.1525.sroa.3.0.cast.5292.sroa_cast = bitcast %error.0* %tmpv.1525.sroa.3.0.cast.5292.sroa_idx224 to i64*, !dbg !2921
  %tmpv.1525.sroa.3.0.copyload225 = load i64, i64* %tmpv.1525.sroa.3.0.cast.5292.sroa_cast, align 8, !dbg !2921
  %tmpv.1525.sroa.4.0.cast.5292.sroa_idx226 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.273, i64 0, i32 1, i32 1, !dbg !2921
  %tmpv.1525.sroa.4.0.cast.5292.sroa_cast = bitcast i8** %tmpv.1525.sroa.4.0.cast.5292.sroa_idx226 to i64*, !dbg !2921
  %tmpv.1525.sroa.4.0.copyload227 = load i64, i64* %tmpv.1525.sroa.4.0.cast.5292.sroa_cast, align 8, !dbg !2921
  %env277 = bitcast %IPST.3* %env to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env277, i8* nonnull align 8 %tmpv.1525.sroa.0.0.cast.5292.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.1525.sroa.3.0.copyload225, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %tmpv.1525.sroa.4.0.copyload227, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  %icmp.662 = icmp eq i64 %tmpv.1525.sroa.3.0.copyload225, 0, !dbg !2926
  br i1 %icmp.662, label %else.543, label %finally.6

else.543:                                         ; preds = %cont.360
  %cast.5309 = bitcast [1 x { i8*, i64 }]* %tmpv.1530 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5309, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.505 to i8*), i64 16, i1 false)
  %field.1279 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.229, i64 0, i32 0, !dbg !2927
  %cast.5313 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.1530, i64 0, i64 0, !dbg !2927
  store { i8*, i64 }* %cast.5313, { i8*, i64 }** %field.1279, align 8, !dbg !2927
  %field.1280 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.229, i64 0, i32 1, !dbg !2927
  store i64 1, i64* %field.1280, align 8, !dbg !2927
  %field.1281 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.229, i64 0, i32 2, !dbg !2927
  store i64 1, i64* %field.1281, align 8, !dbg !2927
  %call.340 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env, %IPST.3* byval nonnull %tmp.229)
          to label %cont.361 unwind label %pad.12, !dbg !2927

cont.361:                                         ; preds = %else.543
  %call.340.fca.0.extract = extractvalue { i64, i64 } %call.340, 0, !dbg !2927
  call void @llvm.dbg.value(metadata i64 %call.340.fca.0.extract, metadata !2929, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2930
  %icmp.663 = icmp eq i64 %call.340.fca.0.extract, 0, !dbg !2931
  br i1 %icmp.663, label %fallthrough.542, label %then.544

then.544:                                         ; preds = %cont.361
  %call.340.fca.1.extract = extractvalue { i64, i64 } %call.340, 1, !dbg !2927
  call void @llvm.dbg.value(metadata i64 %call.340.fca.1.extract, metadata !2929, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2930
  call void @llvm.dbg.value(metadata i64 %call.340.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.340.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

cont.362:                                         ; preds = %fallthrough.542
  %call.341.fca.1.extract = extractvalue { i64, i8 } %call.341, 1, !dbg !2925
  call void @llvm.dbg.value(metadata i8 %call.341.fca.1.extract, metadata !2922, metadata !DIExpression()), !dbg !2924
  %8 = and i8 %call.341.fca.1.extract, 1, !dbg !2932
  %trunc.546 = icmp eq i8 %8, 0, !dbg !2932
  br i1 %trunc.546, label %fallthrough.545, label %then.545

then.545:                                         ; preds = %cont.362
  invoke void @command_line_arguments.DarwinAmd64Env({ %IPST.3, %error.0 }* nonnull sret %sret.actual.276, i8* nest undef, %Flags.0* nonnull %f)
          to label %cont.363 unwind label %pad.12, !dbg !2933

fallthrough.545:                                  ; preds = %cont.364, %cont.362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4)
  br label %fallthrough.534

cont.363:                                         ; preds = %then.545
  %tmpv.1537.sroa.0.0.cast.5334.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.276 to i8*, !dbg !2933
  %tmpv.1537.sroa.3.0.cast.5334.sroa_idx256 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.276, i64 0, i32 1, !dbg !2933
  %tmpv.1537.sroa.3.0.cast.5334.sroa_cast = bitcast %error.0* %tmpv.1537.sroa.3.0.cast.5334.sroa_idx256 to i64*, !dbg !2933
  %tmpv.1537.sroa.3.0.copyload257 = load i64, i64* %tmpv.1537.sroa.3.0.cast.5334.sroa_cast, align 8, !dbg !2933
  %tmpv.1537.sroa.4.0.cast.5334.sroa_idx258 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.276, i64 0, i32 1, i32 1, !dbg !2933
  %tmpv.1537.sroa.4.0.cast.5334.sroa_cast = bitcast i8** %tmpv.1537.sroa.4.0.cast.5334.sroa_idx258 to i64*, !dbg !2933
  %tmpv.1537.sroa.4.0.copyload259 = load i64, i64* %tmpv.1537.sroa.4.0.cast.5334.sroa_cast, align 8, !dbg !2933
  %env279 = bitcast %IPST.3* %env to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env279, i8* nonnull align 8 %tmpv.1537.sroa.0.0.cast.5334.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.1537.sroa.3.0.copyload257, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata i64 %tmpv.1537.sroa.4.0.copyload259, metadata !2851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  %icmp.664 = icmp eq i64 %tmpv.1537.sroa.3.0.copyload257, 0, !dbg !2934
  br i1 %icmp.664, label %else.546, label %finally.6

else.546:                                         ; preds = %cont.363
  %cast.5351 = bitcast [1 x { i8*, i64 }]* %tmpv.1542 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5351, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.505 to i8*), i64 16, i1 false)
  %field.1288 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.230, i64 0, i32 0, !dbg !2935
  %cast.5355 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.1542, i64 0, i64 0, !dbg !2935
  store { i8*, i64 }* %cast.5355, { i8*, i64 }** %field.1288, align 8, !dbg !2935
  %field.1289 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.230, i64 0, i32 1, !dbg !2935
  store i64 1, i64* %field.1289, align 8, !dbg !2935
  %field.1290 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.230, i64 0, i32 2, !dbg !2935
  store i64 1, i64* %field.1290, align 8, !dbg !2935
  %call.342 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env, %IPST.3* byval nonnull %tmp.230)
          to label %cont.364 unwind label %pad.12, !dbg !2935

cont.364:                                         ; preds = %else.546
  %call.342.fca.0.extract = extractvalue { i64, i64 } %call.342, 0, !dbg !2935
  call void @llvm.dbg.value(metadata i64 %call.342.fca.0.extract, metadata !2937, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2938
  %icmp.665 = icmp eq i64 %call.342.fca.0.extract, 0, !dbg !2939
  br i1 %icmp.665, label %fallthrough.545, label %then.547

then.547:                                         ; preds = %cont.364
  %call.342.fca.1.extract = extractvalue { i64, i64 } %call.342, 1, !dbg !2935
  call void @llvm.dbg.value(metadata i64 %call.342.fca.1.extract, metadata !2937, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2938
  call void @llvm.dbg.value(metadata i64 %call.342.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.342.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

cont.365:                                         ; preds = %fallthrough.534
  %call.343.fca.1.extract = extractvalue { i64, i8 } %call.343, 1, !dbg !2888
  call void @llvm.dbg.value(metadata i8 %call.343.fca.1.extract, metadata !2885, metadata !DIExpression()), !dbg !2887
  %9 = and i8 %call.343.fca.1.extract, 1, !dbg !2940
  %trunc.561 = icmp eq i8 %9, 0, !dbg !2940
  br i1 %trunc.561, label %fallthrough.548, label %then.548

then.548:                                         ; preds = %cont.365
  %call.344 = invoke { i64, i64 } @command_line_arguments.ValidateAndroidInstall(i8* nest undef, %Flags.0* nonnull %f)
          to label %cont.366 unwind label %pad.12, !dbg !2941

fallthrough.548:                                  ; preds = %else.561, %cont.376, %cont.365
  invoke void @command_line_arguments.GoVersion({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.292, i8* nest undef, %Flags.0* nonnull %f)
          to label %cont.379 unwind label %pad.12, !dbg !2943

cont.366:                                         ; preds = %then.548
  %call.344.fca.0.extract = extractvalue { i64, i64 } %call.344, 0, !dbg !2941
  call void @llvm.dbg.value(metadata i64 %call.344.fca.0.extract, metadata !2944, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2945
  %icmp.666 = icmp eq i64 %call.344.fca.0.extract, 0, !dbg !2946
  br i1 %icmp.666, label %else.549, label %then.549

then.549:                                         ; preds = %cont.366
  %call.344.fca.1.extract = extractvalue { i64, i64 } %call.344, 1, !dbg !2941
  call void @llvm.dbg.value(metadata i64 %call.344.fca.1.extract, metadata !2944, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2945
  call void @llvm.dbg.value(metadata i64 %call.344.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.344.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.549:                                         ; preds = %cont.366
  call void @llvm.dbg.value(metadata i8 0, metadata !2947, metadata !DIExpression()), !dbg !2949
  %cast.5380 = bitcast { i8*, i64 }* %tmpv.1549 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5380, i8* align 8 bitcast ({ i8*, i64 }* @const.297 to i8*), i64 16, i1 false)
  %call.345 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5380)
          to label %cont.367 unwind label %pad.12, !dbg !2950

cont.367:                                         ; preds = %else.549
  %call.345.fca.1.extract = extractvalue { i64, i8 } %call.345, 1, !dbg !2950
  call void @llvm.dbg.value(metadata i8 %call.345.fca.1.extract, metadata !2947, metadata !DIExpression()), !dbg !2949
  %10 = and i8 %call.345.fca.1.extract, 1, !dbg !2951
  %trunc.551 = icmp eq i8 %10, 0, !dbg !2951
  br i1 %trunc.551, label %fallthrough.550, label %then.550

then.550:                                         ; preds = %cont.367
  %11 = bitcast %IPST.3* %env15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11)
  invoke void @command_line_arguments.AndroidEnv({ %IPST.3, %error.0 }* nonnull sret %sret.actual.281, i8* nest undef, %Flags.0* nonnull %f, i64 ptrtoint ([4 x i8]* @const.62 to i64), i64 3)
          to label %cont.368 unwind label %pad.12, !dbg !2952

fallthrough.550:                                  ; preds = %cont.367, %else.552
  call void @llvm.dbg.value(metadata i8 0, metadata !2954, metadata !DIExpression()), !dbg !2956
  %cast.5417 = bitcast { i8*, i64 }* %tmpv.1559 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5417, i8* align 8 bitcast ({ i8*, i64 }* @const.299 to i8*), i64 16, i1 false)
  %call.347 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5417)
          to label %cont.370 unwind label %pad.12, !dbg !2957

cont.368:                                         ; preds = %then.550
  %tmpv.1555.sroa.0.0.cast.5394.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.281 to i8*, !dbg !2952
  %tmpv.1555.sroa.3.0.cast.5394.sroa_idx102 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.281, i64 0, i32 1, i32 0, !dbg !2952
  %tmpv.1555.sroa.3.0.copyload103 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1555.sroa.3.0.cast.5394.sroa_idx102, align 8, !dbg !2952
  %tmpv.1555.sroa.4.0.cast.5394.sroa_idx104 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.281, i64 0, i32 1, i32 1, !dbg !2952
  %12 = bitcast i8** %tmpv.1555.sroa.4.0.cast.5394.sroa_idx104 to i64*, !dbg !2952
  %tmpv.1555.sroa.4.0.copyload105271 = load i64, i64* %12, align 8, !dbg !2952
  %env15280 = bitcast %IPST.3* %env15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env15280, i8* nonnull align 8 %tmpv.1555.sroa.0.0.cast.5394.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1555.sroa.3.0.copyload103, metadata !2958, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2959
  call void @llvm.dbg.value(metadata i8** %tmpv.1555.sroa.4.0.cast.5394.sroa_idx104, metadata !2958, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2959
  %icmp.667 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1555.sroa.3.0.copyload103, null, !dbg !2960
  br i1 %icmp.667, label %else.551, label %then.551

then.551:                                         ; preds = %cont.368
  %13 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1555.sroa.3.0.copyload103 to i64, !dbg !2961
  call void @llvm.dbg.value(metadata i64 %13, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %tmpv.1555.sroa.4.0.copyload105271, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.551:                                         ; preds = %cont.368
  %call.346 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env15, %IPST.3* byval nonnull @const.37)
          to label %cont.369 unwind label %pad.12, !dbg !2962

cont.369:                                         ; preds = %else.551
  %call.346.fca.0.extract = extractvalue { i64, i64 } %call.346, 0, !dbg !2962
  call void @llvm.dbg.value(metadata i64 %call.346.fca.0.extract, metadata !2964, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2965
  %icmp.668 = icmp eq i64 %call.346.fca.0.extract, 0, !dbg !2966
  br i1 %icmp.668, label %else.552, label %then.552

then.552:                                         ; preds = %cont.369
  %call.346.fca.1.extract = extractvalue { i64, i64 } %call.346, 1, !dbg !2962
  call void @llvm.dbg.value(metadata i64 %call.346.fca.1.extract, metadata !2964, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2965
  call void @llvm.dbg.value(metadata i64 %call.346.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.346.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.552:                                         ; preds = %cont.369
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11)
  br label %fallthrough.550

cont.370:                                         ; preds = %fallthrough.550
  %call.347.fca.1.extract = extractvalue { i64, i8 } %call.347, 1, !dbg !2957
  call void @llvm.dbg.value(metadata i8 %call.347.fca.1.extract, metadata !2954, metadata !DIExpression()), !dbg !2956
  %14 = and i8 %call.347.fca.1.extract, 1, !dbg !2967
  %trunc.554 = icmp eq i8 %14, 0, !dbg !2967
  br i1 %trunc.554, label %fallthrough.553, label %then.553

then.553:                                         ; preds = %cont.370
  %15 = bitcast %IPST.3* %env19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  invoke void @command_line_arguments.AndroidEnv({ %IPST.3, %error.0 }* nonnull sret %sret.actual.284, i8* nest undef, %Flags.0* nonnull %f, i64 ptrtoint ([6 x i8]* @const.91 to i64), i64 5)
          to label %cont.371 unwind label %pad.12, !dbg !2968

fallthrough.553:                                  ; preds = %cont.370, %else.555
  call void @llvm.dbg.value(metadata i8 0, metadata !2970, metadata !DIExpression()), !dbg !2972
  %cast.5454 = bitcast { i8*, i64 }* %tmpv.1569 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5454, i8* align 8 bitcast ({ i8*, i64 }* @const.301 to i8*), i64 16, i1 false)
  %call.349 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5454)
          to label %cont.373 unwind label %pad.12, !dbg !2973

cont.371:                                         ; preds = %then.553
  %tmpv.1565.sroa.0.0.cast.5431.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.284 to i8*, !dbg !2968
  %tmpv.1565.sroa.3.0.cast.5431.sroa_idx85 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.284, i64 0, i32 1, i32 0, !dbg !2968
  %tmpv.1565.sroa.3.0.copyload86 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1565.sroa.3.0.cast.5431.sroa_idx85, align 8, !dbg !2968
  %tmpv.1565.sroa.4.0.cast.5431.sroa_idx87 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.284, i64 0, i32 1, i32 1, !dbg !2968
  %16 = bitcast i8** %tmpv.1565.sroa.4.0.cast.5431.sroa_idx87 to i64*, !dbg !2968
  %tmpv.1565.sroa.4.0.copyload88270 = load i64, i64* %16, align 8, !dbg !2968
  %env19281 = bitcast %IPST.3* %env19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env19281, i8* nonnull align 8 %tmpv.1565.sroa.0.0.cast.5431.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1565.sroa.3.0.copyload86, metadata !2974, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2975
  call void @llvm.dbg.value(metadata i8** %tmpv.1565.sroa.4.0.cast.5431.sroa_idx87, metadata !2974, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2975
  %icmp.669 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1565.sroa.3.0.copyload86, null, !dbg !2976
  br i1 %icmp.669, label %else.554, label %then.554

then.554:                                         ; preds = %cont.371
  %17 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1565.sroa.3.0.copyload86 to i64, !dbg !2977
  call void @llvm.dbg.value(metadata i64 %17, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %tmpv.1565.sroa.4.0.copyload88270, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.554:                                         ; preds = %cont.371
  %call.348 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env19, %IPST.3* byval nonnull @const.37)
          to label %cont.372 unwind label %pad.12, !dbg !2978

cont.372:                                         ; preds = %else.554
  %call.348.fca.0.extract = extractvalue { i64, i64 } %call.348, 0, !dbg !2978
  call void @llvm.dbg.value(metadata i64 %call.348.fca.0.extract, metadata !2980, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2981
  %icmp.670 = icmp eq i64 %call.348.fca.0.extract, 0, !dbg !2982
  br i1 %icmp.670, label %else.555, label %then.555

then.555:                                         ; preds = %cont.372
  %call.348.fca.1.extract = extractvalue { i64, i64 } %call.348, 1, !dbg !2978
  call void @llvm.dbg.value(metadata i64 %call.348.fca.1.extract, metadata !2980, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2981
  call void @llvm.dbg.value(metadata i64 %call.348.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.348.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.555:                                         ; preds = %cont.372
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  br label %fallthrough.553

cont.373:                                         ; preds = %fallthrough.553
  %call.349.fca.1.extract = extractvalue { i64, i8 } %call.349, 1, !dbg !2973
  call void @llvm.dbg.value(metadata i8 %call.349.fca.1.extract, metadata !2970, metadata !DIExpression()), !dbg !2972
  %18 = and i8 %call.349.fca.1.extract, 1, !dbg !2983
  %trunc.557 = icmp eq i8 %18, 0, !dbg !2983
  br i1 %trunc.557, label %fallthrough.556, label %then.556

then.556:                                         ; preds = %cont.373
  %19 = bitcast %IPST.3* %env23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  invoke void @command_line_arguments.AndroidEnv({ %IPST.3, %error.0 }* nonnull sret %sret.actual.287, i8* nest undef, %Flags.0* nonnull %f, i64 ptrtoint ([4 x i8]* @const.97 to i64), i64 3)
          to label %cont.374 unwind label %pad.12, !dbg !2984

fallthrough.556:                                  ; preds = %cont.373, %else.558
  call void @llvm.dbg.value(metadata i8 0, metadata !2986, metadata !DIExpression()), !dbg !2988
  %cast.5491 = bitcast { i8*, i64 }* %tmpv.1579 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5491, i8* align 8 bitcast ({ i8*, i64 }* @const.303 to i8*), i64 16, i1 false)
  %call.351 = invoke { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7struct.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.330, i8* nonnull %cast.5491)
          to label %cont.376 unwind label %pad.12, !dbg !2989

cont.374:                                         ; preds = %then.556
  %tmpv.1575.sroa.0.0.cast.5468.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.287 to i8*, !dbg !2984
  %tmpv.1575.sroa.3.0.cast.5468.sroa_idx68 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.287, i64 0, i32 1, i32 0, !dbg !2984
  %tmpv.1575.sroa.3.0.copyload69 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1575.sroa.3.0.cast.5468.sroa_idx68, align 8, !dbg !2984
  %tmpv.1575.sroa.4.0.cast.5468.sroa_idx70 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.287, i64 0, i32 1, i32 1, !dbg !2984
  %20 = bitcast i8** %tmpv.1575.sroa.4.0.cast.5468.sroa_idx70 to i64*, !dbg !2984
  %tmpv.1575.sroa.4.0.copyload71269 = load i64, i64* %20, align 8, !dbg !2984
  %env23282 = bitcast %IPST.3* %env23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env23282, i8* nonnull align 8 %tmpv.1575.sroa.0.0.cast.5468.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1575.sroa.3.0.copyload69, metadata !2990, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2991
  call void @llvm.dbg.value(metadata i8** %tmpv.1575.sroa.4.0.cast.5468.sroa_idx70, metadata !2990, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !2991
  %icmp.671 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1575.sroa.3.0.copyload69, null, !dbg !2992
  br i1 %icmp.671, label %else.557, label %then.557

then.557:                                         ; preds = %cont.374
  %21 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1575.sroa.3.0.copyload69 to i64, !dbg !2993
  call void @llvm.dbg.value(metadata i64 %21, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %tmpv.1575.sroa.4.0.copyload71269, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.557:                                         ; preds = %cont.374
  %call.350 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env23, %IPST.3* byval nonnull @const.37)
          to label %cont.375 unwind label %pad.12, !dbg !2994

cont.375:                                         ; preds = %else.557
  %call.350.fca.0.extract = extractvalue { i64, i64 } %call.350, 0, !dbg !2994
  call void @llvm.dbg.value(metadata i64 %call.350.fca.0.extract, metadata !2996, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2997
  %icmp.672 = icmp eq i64 %call.350.fca.0.extract, 0, !dbg !2998
  br i1 %icmp.672, label %else.558, label %then.558

then.558:                                         ; preds = %cont.375
  %call.350.fca.1.extract = extractvalue { i64, i64 } %call.350, 1, !dbg !2994
  call void @llvm.dbg.value(metadata i64 %call.350.fca.1.extract, metadata !2996, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2997
  call void @llvm.dbg.value(metadata i64 %call.350.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.350.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.558:                                         ; preds = %cont.375
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  br label %fallthrough.556

cont.376:                                         ; preds = %fallthrough.556
  %call.351.fca.1.extract = extractvalue { i64, i8 } %call.351, 1, !dbg !2989
  call void @llvm.dbg.value(metadata i8 %call.351.fca.1.extract, metadata !2986, metadata !DIExpression()), !dbg !2988
  %22 = and i8 %call.351.fca.1.extract, 1, !dbg !2999
  %trunc.560 = icmp eq i8 %22, 0, !dbg !2999
  br i1 %trunc.560, label %fallthrough.548, label %then.559

then.559:                                         ; preds = %cont.376
  %23 = bitcast %IPST.3* %env27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23)
  invoke void @command_line_arguments.AndroidEnv({ %IPST.3, %error.0 }* nonnull sret %sret.actual.290, i8* nest undef, %Flags.0* nonnull %f, i64 ptrtoint ([6 x i8]* @const.103 to i64), i64 5)
          to label %cont.377 unwind label %pad.12, !dbg !3000

cont.377:                                         ; preds = %then.559
  %tmpv.1585.sroa.0.0.cast.5505.sroa_cast = bitcast { %IPST.3, %error.0 }* %sret.actual.290 to i8*, !dbg !3000
  %tmpv.1585.sroa.3.0.cast.5505.sroa_idx51 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.290, i64 0, i32 1, i32 0, !dbg !3000
  %tmpv.1585.sroa.3.0.copyload52 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1585.sroa.3.0.cast.5505.sroa_idx51, align 8, !dbg !3000
  %tmpv.1585.sroa.4.0.cast.5505.sroa_idx53 = getelementptr inbounds { %IPST.3, %error.0 }, { %IPST.3, %error.0 }* %sret.actual.290, i64 0, i32 1, i32 1, !dbg !3000
  %24 = bitcast i8** %tmpv.1585.sroa.4.0.cast.5505.sroa_idx53 to i64*, !dbg !3000
  %tmpv.1585.sroa.4.0.copyload54268 = load i64, i64* %24, align 8, !dbg !3000
  %env27283 = bitcast %IPST.3* %env27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %env27283, i8* nonnull align 8 %tmpv.1585.sroa.0.0.cast.5505.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1585.sroa.3.0.copyload52, metadata !3002, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3003
  call void @llvm.dbg.value(metadata i8** %tmpv.1585.sroa.4.0.cast.5505.sroa_idx53, metadata !3002, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !3003
  %icmp.673 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1585.sroa.3.0.copyload52, null, !dbg !3004
  br i1 %icmp.673, label %else.560, label %then.560

then.560:                                         ; preds = %cont.377
  %25 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1585.sroa.3.0.copyload52 to i64, !dbg !3005
  call void @llvm.dbg.value(metadata i64 %25, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %tmpv.1585.sroa.4.0.copyload54268, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.560:                                         ; preds = %cont.377
  %call.352 = invoke { i64, i64 } @command_line_arguments.InstallPkg(i8* nest undef, %Flags.0* nonnull %f, i64 %tmpv.1481.sroa.0.0.copyload169, i64 %tmpv.1481.sroa.3.0.copyload171, i64 %tmpv.1484.sroa.0.0.copyload151, i64 %tmpv.1484.sroa.3.0.copyload153, { i8*, i64 }* byval nonnull @const.503, %IPST.3* byval nonnull %env27, %IPST.3* byval nonnull @const.37)
          to label %cont.378 unwind label %pad.12, !dbg !3006

cont.378:                                         ; preds = %else.560
  %call.352.fca.0.extract = extractvalue { i64, i64 } %call.352, 0, !dbg !3006
  call void @llvm.dbg.value(metadata i64 %call.352.fca.0.extract, metadata !3008, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3009
  %icmp.674 = icmp eq i64 %call.352.fca.0.extract, 0, !dbg !3010
  br i1 %icmp.674, label %else.561, label %then.561

then.561:                                         ; preds = %cont.378
  %call.352.fca.1.extract = extractvalue { i64, i64 } %call.352, 1, !dbg !3006
  call void @llvm.dbg.value(metadata i64 %call.352.fca.1.extract, metadata !3008, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3009
  call void @llvm.dbg.value(metadata i64 %call.352.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.352.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

else.561:                                         ; preds = %cont.378
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23)
  br label %fallthrough.548

cont.379:                                         ; preds = %fallthrough.548
  %tmpv.1589.sroa.0.0.cast.5531.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.292 to i8*, !dbg !2943
  %26 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.292, i64 0, i32 1, i32 0, !dbg !2943
  %tmpv.1589.sroa.3.0.copyload217267 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %26, align 8, !dbg !2943
  %goversion284 = bitcast { i8*, i64, i64 }* %goversion to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %goversion284, i8* nonnull align 8 %tmpv.1589.sroa.0.0.cast.5531.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }** %26, metadata !2851, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !2852
  call void @llvm.dbg.value(metadata { { i8*, i64, i64 }, %error.0 }* %sret.actual.292, metadata !2851, metadata !DIExpression(DW_OP_plus_uconst, 32, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !2852
  %icmp.675 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1589.sroa.3.0.copyload217267, null, !dbg !3011
  br i1 %icmp.675, label %else.562, label %finally.6

else.562:                                         ; preds = %cont.379
  %matchaPkgPath.sroa.0.0.cast.5546.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.1593 to i64*, !dbg !3012
  store i64 %tmpv.1481.sroa.0.0.copyload169, i64* %matchaPkgPath.sroa.0.0.cast.5546.sroa_cast, align 8, !dbg !3012
  %matchaPkgPath.sroa.13.0.cast.5546.sroa_idx156 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1593, i64 0, i64 0, i32 1, !dbg !3012
  store i64 %tmpv.1481.sroa.3.0.copyload171, i64* %matchaPkgPath.sroa.13.0.cast.5546.sroa_idx156, align 8, !dbg !3012
  %index.251 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1593, i64 0, i64 1, !dbg !3012
  %cast.5548 = bitcast { i8*, i64 }* %index.251 to i8*, !dbg !3012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5548, i8* align 8 bitcast ({ i8*, i64 }* @const.318 to i8*), i64 16, i1 false), !dbg !3012
  %field.1322 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.231, i64 0, i32 0, !dbg !3012
  %cast.5550 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.1593, i64 0, i64 0, !dbg !3012
  store { i8*, i64 }* %cast.5550, { i8*, i64 }** %field.1322, align 8, !dbg !3012
  %field.1323 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.231, i64 0, i32 1, !dbg !3012
  store i64 2, i64* %field.1323, align 8, !dbg !3012
  %field.1324 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.231, i64 0, i32 2, !dbg !3012
  store i64 2, i64* %field.1324, align 8, !dbg !3012
  %call.353 = invoke { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.3* byval nonnull %tmp.231)
          to label %cont.380 unwind label %pad.12, !dbg !3012

cont.380:                                         ; preds = %else.562
  %call.354 = invoke %Reader.2* @bytes.NewReader(i8* nest undef, { i8*, i64, i64 }* byval nonnull %goversion)
          to label %cont.381 unwind label %pad.12, !dbg !3013

cont.381:                                         ; preds = %cont.380
  %call.353.fca.1.extract = extractvalue { i64, i64 } %call.353, 1, !dbg !3012
  call void @llvm.dbg.value(metadata i64 %call.353.fca.1.extract, metadata !3015, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3016
  %call.353.fca.0.extract = extractvalue { i64, i64 } %call.353, 0, !dbg !3012
  call void @llvm.dbg.value(metadata i64 %call.353.fca.0.extract, metadata !3015, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3016
  %27 = ptrtoint %Reader.2* %call.354 to i64, !dbg !3013
  %call.355 = invoke { i64, i64 } @command_line_arguments.WriteFile(i8* nest undef, %Flags.0* nonnull %f, i64 %call.353.fca.0.extract, i64 %call.353.fca.1.extract, i64 ptrtoint ({ %_type.0*, void ({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*)* }* @pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader to i64), i64 %27)
          to label %cont.382 unwind label %pad.12, !dbg !3017

cont.382:                                         ; preds = %cont.381
  %call.355.fca.0.extract = extractvalue { i64, i64 } %call.355, 0, !dbg !3017
  call void @llvm.dbg.value(metadata i64 %call.355.fca.0.extract, metadata !3018, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3019
  %icmp.676 = icmp eq i64 %call.355.fca.0.extract, 0, !dbg !3020
  br i1 %icmp.676, label %fallthrough.564, label %then.563

then.563:                                         ; preds = %cont.382
  %call.355.fca.1.extract = extractvalue { i64, i64 } %call.355, 1, !dbg !3017
  call void @llvm.dbg.value(metadata i64 %call.355.fca.1.extract, metadata !3018, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3019
  call void @llvm.dbg.value(metadata i64 %call.355.fca.0.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2846
  call void @llvm.dbg.value(metadata i64 %call.355.fca.1.extract, metadata !2845, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2846
  br label %finally.6

fallthrough.564:                                  ; preds = %cont.382
  %field.1334 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 5, !dbg !3021
  %.field.ld.152 = load i8, i8* %field.1334, align 1, !dbg !3021
  %28 = and i8 %.field.ld.152, 1, !dbg !3022
  %trunc.568 = icmp eq i8 %28, 0, !dbg !3022
  br i1 %trunc.568, label %fallthrough.564.fallthrough.569_crit_edge, label %then.565

fallthrough.564.fallthrough.569_crit_edge:        ; preds = %fallthrough.564
  %.pre = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !3023
  br label %fallthrough.569

then.565:                                         ; preds = %fallthrough.564
  %call.356 = invoke i64 @time.Since(i8* nest undef, %Time.0* byval nonnull %start)
          to label %cont.384 unwind label %pad.12, !dbg !3024

cont.384:                                         ; preds = %then.565
  %call.357 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @time.Duration..d)
          to label %fallthrough.568 unwind label %pad.12, !dbg !3026

fallthrough.568:                                  ; preds = %cont.384
  %29 = srem i64 %call.356, 1000000000, !dbg !3027
  %mul.0 = sub i64 %call.356, %29, !dbg !3027
  call void @llvm.dbg.value(metadata i64 %mul.0, metadata !3028, metadata !DIExpression()), !dbg !3030
  %cast.5568 = bitcast i8* %call.357 to i64*, !dbg !3026
  store i64 %mul.0, i64* %cast.5568, align 8, !dbg !3026
  %tmp.233.sroa.0.0.cast.5570.sroa_idx = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1600, i64 0, i64 0, i32 0, !dbg !3026
  store %_type.0* @time.Duration..d, %_type.0** %tmp.233.sroa.0.0.cast.5570.sroa_idx, align 8, !dbg !3026
  %tmp.233.sroa.2.0.cast.5570.sroa_idx266 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1600, i64 0, i64 0, i32 1, !dbg !3026
  store i8* %call.357, i8** %tmp.233.sroa.2.0.cast.5570.sroa_idx266, align 8, !dbg !3026
  %field.1330 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 0, !dbg !3031
  %.field.ld.151 = load %Logger.0*, %Logger.0** %field.1330, align 8, !dbg !3031
  %field.1331 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.234, i64 0, i32 0, !dbg !3026
  %cast.5574 = getelementptr inbounds [1 x %IPST.16], [1 x %IPST.16]* %tmpv.1600, i64 0, i64 0, !dbg !3026
  store %IPST.16* %cast.5574, %IPST.16** %field.1331, align 8, !dbg !3026
  %field.1332 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.234, i64 0, i32 1, !dbg !3026
  store i64 1, i64* %field.1332, align 8, !dbg !3026
  %field.1333 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.234, i64 0, i32 2, !dbg !3026
  store i64 1, i64* %field.1333, align 8, !dbg !3026
  invoke void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.151, i64 ptrtoint ([16 x i8]* @const.506 to i64), i64 15, %IPST.2* byval nonnull %tmp.234)
          to label %fallthrough.569 unwind label %pad.12, !dbg !3026

fallthrough.569:                                  ; preds = %fallthrough.564.fallthrough.569_crit_edge, %fallthrough.568
  %field.1335.pre-phi = phi %Logger.0** [ %.pre, %fallthrough.564.fallthrough.569_crit_edge ], [ %field.1330, %fallthrough.568 ], !dbg !3023
  %.field.ld.153 = load %Logger.0*, %Logger.0** %field.1335.pre-phi, align 8, !dbg !3023
  invoke void @log.Logger.Printf(i8* nest undef, %Logger.0* %.field.ld.153, i64 ptrtoint ([21 x i8]* @const.508 to i64), i64 20, %IPST.2* byval nonnull @const.11)
          to label %finally.6 unwind label %pad.12, !dbg !3032

catchpad.6:                                       ; preds = %pad.12
  %ex2.6 = landingpad { i8*, i32 }
          cleanup
  %ex2.6.fca.0.extract = extractvalue { i8*, i32 } %ex2.6, 0
  %ex2.6.fca.1.extract = extractvalue { i8*, i32 } %ex2.6, 1
  br label %finally.6

pad.13:                                           ; preds = %finish.6
  %ex.13 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.1479), !dbg !2849
  br label %finish.6

finish.6:                                         ; preds = %pad.13, %finally.6
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.1479)
          to label %cont.392 unwind label %pad.13, !dbg !2849

cont.392:                                         ; preds = %finish.6
  %icmp.682 = icmp eq i8 %finvar.6.0, 1
  br i1 %icmp.682, label %finret.6, label %finres.6

finres.6:                                         ; preds = %cont.392
  %excv.6.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.6.sroa.0.0, 0
  %excv.6.fca.1.insert = insertvalue { i8*, i32 } %excv.6.fca.0.insert, i32 %ehtmp.6.sroa.2.0, 1
  resume { i8*, i32 } %excv.6.fca.1.insert

finret.6:                                         ; preds = %cont.392
  %ld.543.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret57.sroa.0.1", 0, !dbg !3033
  %ld.543.fca.1.insert = insertvalue { i64, i64 } %ld.543.fca.0.insert, i64 %"$ret57.sroa.30.1", 1, !dbg !3033
  ret { i64, i64 } %ld.543.fca.1.insert, !dbg !3033
}

declare void @time.Now(%Time.0*, i8*) local_unnamed_addr #0

define internal void @command_line_arguments.command_line_arguments..thunk10(i8* nest nocapture readnone %nest.80, { %Flags.0*, { i8*, i64 } }* nocapture readonly %__go_thunk_parameter) #0 !dbg !3034 {
entry:
  call void @llvm.dbg.value(metadata { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, metadata !3035, metadata !DIExpression()), !dbg !3036
  %field.1853 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, i64 0, i32 0, !dbg !3036
  %.field.ld.241 = load %Flags.0*, %Flags.0** %field.1853, align 8, !dbg !3036
  %field.1854 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, i64 0, i32 1, !dbg !3036
  %field0.372 = bitcast { i8*, i64 }* %field.1854 to i64*, !dbg !3036
  %ld.817 = load i64, i64* %field0.372, align 8, !dbg !3036
  %0 = getelementptr inbounds { %Flags.0*, { i8*, i64 } }, { %Flags.0*, { i8*, i64 } }* %__go_thunk_parameter, i64 0, i32 1, i32 1, !dbg !3036
  %ld.818 = load i64, i64* %0, align 8, !dbg !3036
  %call.475 = call { i64, i64 } @command_line_arguments.RemoveAll(i8* nest undef, %Flags.0* %.field.ld.241, i64 %ld.817, i64 %ld.818), !dbg !3036
  ret void
}

define { i64, i64 } @command_line_arguments.InstallPkg(i8* nest nocapture readnone %nest.67, %Flags.0* %f, i64 %matchaPkgPath.chunk0, i64 %matchaPkgPath.chunk1, i64 %temp.chunk0, i64 %temp.chunk1, { i8*, i64 }* byval %pkg, %IPST.3* byval nocapture readonly %env, %IPST.3* byval nocapture %args) #0 !dbg !3037 {
entry:
  %tmp.313 = alloca %IPST.3, align 8
  %tmp.311 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %args, metadata !3040, metadata !DIExpression()), !dbg !3041
  call void @llvm.dbg.declare(metadata %IPST.3* %env, metadata !3042, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %pkg, metadata !3044, metadata !DIExpression()), !dbg !3045
  %pkgPath = alloca { i8*, i64 }, align 8
  %sret.actual.376 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.2030 = alloca %IPST.3, align 8
  %tmpv.2032 = alloca { i8*, i64 }, align 8
  %sret.actual.378 = alloca %IPST.4, align 8
  %tmpv.2042 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.2045 = alloca %IPST.3, align 8
  %tmpv.2048 = alloca %IPST.3, align 8
  %sret.actual.379 = alloca %IPST.4, align 8
  %tmpv.2055 = alloca %IPST.3, align 8
  %tmpv.2058 = alloca %IPST.3, align 8
  %tmpv.2062 = alloca %IPST.3, align 8
  %tmpv.2065 = alloca { i8*, i64 }, align 8
  %sret.actual.380 = alloca %IPST.4, align 8
  %tmpv.2075 = alloca %IPST.3, align 8
  %tmpv.2080 = alloca %IPST.3, align 8
  %tmpv.2083 = alloca { i8*, i64 }, align 8
  %sret.actual.381 = alloca %IPST.4, align 8
  %tmpv.2093 = alloca %IPST.3, align 8
  %tmpv.2098 = alloca %IPST.3, align 8
  %tmpv.2101 = alloca { i8*, i64 }, align 8
  %sret.actual.382 = alloca %IPST.4, align 8
  %tmpv.2111 = alloca %IPST.3, align 8
  %tmpv.2116 = alloca %IPST.3, align 8
  %sret.actual.383 = alloca %IPST.4, align 8
  %tmpv.2128 = alloca %IPST.3, align 8
  %tmpv.2133 = alloca %IPST.3, align 8
  %tmpv.2135 = alloca %IPST.3, align 8
  %sret.actual.384 = alloca %IPST.4, align 8
  %tmpv.2142 = alloca %IPST.3, align 8
  %tmpv.2145 = alloca %IPST.3, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !3046, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.value(metadata i64 %matchaPkgPath.chunk0, metadata !3048, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3049
  call void @llvm.dbg.value(metadata i64 %matchaPkgPath.chunk1, metadata !3048, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3049
  call void @llvm.dbg.value(metadata i64 %temp.chunk0, metadata !3050, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3051
  call void @llvm.dbg.value(metadata i64 %temp.chunk1, metadata !3050, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3051
  %pkgPath.0.sroa_cast = bitcast { i8*, i64 }* %pkgPath to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %pkgPath.0.sroa_cast)
  call void @command_line_arguments.PkgPath({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.376, i8* nest undef, %Flags.0* undef, i64 %matchaPkgPath.chunk0, i64 %matchaPkgPath.chunk1, %IPST.3* byval nonnull %env), !dbg !3052
  %tmpv.2026.sroa.0.0.cast.7173.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.376 to i8*, !dbg !3052
  %tmpv.2026.sroa.3.0.cast.7173.sroa_idx123 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.376, i64 0, i32 1, i32 0, !dbg !3052
  %tmpv.2026.sroa.3.0.copyload124 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.2026.sroa.3.0.cast.7173.sroa_idx123, align 8, !dbg !3052
  %tmpv.2026.sroa.4.0.cast.7173.sroa_idx125 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.376, i64 0, i32 1, i32 1, !dbg !3052
  %0 = bitcast i8** %tmpv.2026.sroa.4.0.cast.7173.sroa_idx125 to i64*, !dbg !3052
  %tmpv.2026.sroa.4.0.copyload126219 = load i64, i64* %0, align 8, !dbg !3052
  %pkgPath248 = bitcast { i8*, i64 }* %pkgPath to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %pkgPath248, i8* nonnull align 8 %tmpv.2026.sroa.0.0.cast.7173.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.2026.sroa.3.0.copyload124, metadata !3054, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3055
  call void @llvm.dbg.value(metadata i8** %tmpv.2026.sroa.4.0.cast.7173.sroa_idx125, metadata !3054, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !3055
  %icmp.883 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.2026.sroa.3.0.copyload124, null, !dbg !3056
  br i1 %icmp.883, label %else.720, label %then.720

then.720:                                         ; preds = %entry
  %1 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.2026.sroa.3.0.copyload124 to i64, !dbg !3057
  call void @llvm.dbg.value(metadata i64 %1, metadata !3058, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3059
  call void @llvm.dbg.value(metadata i64 %tmpv.2026.sroa.4.0.copyload126219, metadata !3058, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3059
  %ld.786.fca.0.insert = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !3057
  %ld.786.fca.1.insert = insertvalue { i64, i64 } %ld.786.fca.0.insert, i64 %tmpv.2026.sroa.4.0.copyload126219, 1, !dbg !3057
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %pkgPath.0.sroa_cast), !dbg !3057
  ret { i64, i64 } %ld.786.fca.1.insert, !dbg !3057

else.720:                                         ; preds = %entry
  %cast.7188 = bitcast %IPST.3* %tmpv.2030 to i8*
  %cast.7189 = bitcast %IPST.3* %args to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7188, i8* nonnull align 8 %cast.7189, i64 24, i1 false)
  %field.1671 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2030, i64 0, i32 1, !dbg !3060
  %tmpv.2030.field.ld.0 = load i64, i64* %field.1671, align 8, !dbg !3060
  %cast.7190 = bitcast [2 x { i8*, i64 }]* %tmp.311 to i8*, !dbg !3061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7190, i8* align 8 bitcast ({ i8*, i64 }* @const.583 to i8*), i64 16, i1 false), !dbg !3061
  %index.369 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.311, i64 0, i64 1, !dbg !3061
  %cast.7192 = bitcast { i8*, i64 }* %index.369 to i8*, !dbg !3061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7192, i8* nonnull align 8 %pkgPath.0.sroa_cast, i64 16, i1 false), !dbg !3061
  %call.450 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.311), !dbg !3061
  %call.450.fca.0.extract = extractvalue { i64, i64 } %call.450, 0, !dbg !3061
  %call.450.fca.1.extract = extractvalue { i64, i64 } %call.450, 1, !dbg !3061
  %sret.actual.377.sroa.0.0.cast.7196.sroa_cast = bitcast { i8*, i64 }* %tmpv.2032 to i64*
  store i64 %call.450.fca.0.extract, i64* %sret.actual.377.sroa.0.0.cast.7196.sroa_cast, align 8
  %sret.actual.377.sroa.2.0.cast.7196.sroa_idx108 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.2032, i64 0, i32 1
  store i64 %call.450.fca.1.extract, i64* %sret.actual.377.sroa.2.0.cast.7196.sroa_idx108, align 8
  %add.85 = add i64 %tmpv.2030.field.ld.0, 1, !dbg !3060
  %field.1672 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2030, i64 0, i32 2, !dbg !3060
  %tmpv.2030.field.ld.1 = load i64, i64* %field.1672, align 8, !dbg !3060
  %icmp.884 = icmp ugt i64 %add.85, %tmpv.2030.field.ld.1, !dbg !3060
  br i1 %icmp.884, label %then.721, label %else.721

then.721:                                         ; preds = %else.720
  %cast.7198 = bitcast %IPST.3* %tmpv.2030 to %IPST.4*, !dbg !3060
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.378, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7198, i64 %add.85), !dbg !3060
  %tmpv.2037.sroa.0.0.cast.7203.sroa_idx = bitcast %IPST.4* %sret.actual.378 to { i8*, i64 }**
  %tmpv.2037.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2037.sroa.0.0.cast.7203.sroa_idx, align 8
  %2 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.378, i64 0, i32 1
  %tmpv.2037.sroa.3.0.copyload = load i64, i64* %2, align 8
  %3 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.378, i64 0, i32 2
  %tmpv.2037.sroa.4.0.copyload = load i64, i64* %3, align 8
  %.pre = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2030, i64 0, i32 0, !dbg !3060
  br label %fallthrough.721

fallthrough.721:                                  ; preds = %else.722, %then.721
  %tmpv.2037.sroa.0.0.cast.7206.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1675, %else.722 ], [ %.pre, %then.721 ], !dbg !3060
  %tmpv.2037.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.2030.field.ld.3, %else.722 ], [ %tmpv.2037.sroa.0.0.copyload, %then.721 ]
  %tmpv.2037.sroa.3.0 = phi i64 [ %add.85, %else.722 ], [ %tmpv.2037.sroa.3.0.copyload, %then.721 ]
  %tmpv.2037.sroa.4.0 = phi i64 [ %tmpv.2030.field.ld.1, %else.722 ], [ %tmpv.2037.sroa.4.0.copyload, %then.721 ]
  store { i8*, i64 }* %tmpv.2037.sroa.0.0, { i8*, i64 }** %tmpv.2037.sroa.0.0.cast.7206.sroa_idx.pre-phi, align 8, !dbg !3060
  store i64 %tmpv.2037.sroa.3.0, i64* %field.1671, align 8, !dbg !3060
  store i64 %tmpv.2037.sroa.4.0, i64* %field.1672, align 8, !dbg !3060
  %icmp.891 = icmp sge i64 %tmpv.2030.field.ld.0, %tmpv.2037.sroa.3.0, !dbg !3060
  %4 = icmp slt i64 %tmpv.2030.field.ld.0, 0, !dbg !3060
  %ior.420 = or i1 %4, %icmp.891, !dbg !3060
  br i1 %ior.420, label %then.724, label %else.724

else.721:                                         ; preds = %else.720
  %icmp.886 = icmp sgt i64 %add.85, %tmpv.2030.field.ld.1, !dbg !3060
  %add.85.lobit227 = or i64 %tmpv.2030.field.ld.1, %add.85, !dbg !3060
  %5 = icmp slt i64 %add.85.lobit227, 0, !dbg !3060
  %6 = or i1 %icmp.886, %5, !dbg !3060
  br i1 %6, label %then.722, label %else.722

then.722:                                         ; preds = %else.721
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3060
  unreachable

else.722:                                         ; preds = %else.721
  %field.1675 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2030, i64 0, i32 0, !dbg !3060
  %tmpv.2030.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1675, align 8, !dbg !3060
  br label %fallthrough.721

then.724:                                         ; preds = %fallthrough.721
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !3060
  unreachable

else.724:                                         ; preds = %fallthrough.721
  %ptroff.101 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2037.sroa.0.0, i64 %tmpv.2030.field.ld.0, !dbg !3060
  %runtime.writeBarrier.ld.74 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3060
  %icmp.894 = icmp eq i32 %runtime.writeBarrier.ld.74, 0, !dbg !3060
  br i1 %icmp.894, label %then.725, label %else.725

then.725:                                         ; preds = %else.724
  %icmp.893 = icmp eq { i8*, i64 }* %ptroff.101, null, !dbg !3060
  br i1 %icmp.893, label %then.726, label %else.726

fallthrough.725:                                  ; preds = %else.725, %else.726
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7189, i8* nonnull align 8 %cast.7188, i64 24, i1 false), !dbg !3062
  %cast.7215 = bitcast [1 x { i8*, i64 }]* %tmpv.2042 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7215, i8* align 8 bitcast ([1 x { i8*, i64 }]* @const.599 to i8*), i64 16, i1 false)
  %field.1683 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.313, i64 0, i32 0, !dbg !3063
  %cast.7218 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.2042, i64 0, i64 0, !dbg !3063
  store { i8*, i64 }* %cast.7218, { i8*, i64 }** %field.1683, align 8, !dbg !3063
  %field.1684 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.313, i64 0, i32 1, !dbg !3063
  store i64 1, i64* %field.1684, align 8, !dbg !3063
  %field.1685 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.313, i64 0, i32 2, !dbg !3063
  store i64 1, i64* %field.1685, align 8, !dbg !3063
  %call.451 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([3 x i8]* @const.554 to i64), i64 2, %IPST.3* byval nonnull %tmp.313), !dbg !3063
  call void @llvm.dbg.value(metadata %Cmd.0* %call.451, metadata !3064, metadata !DIExpression()), !dbg !3065
  %icmp.895 = icmp eq %Cmd.0* %call.451, null, !dbg !3066
  br i1 %icmp.895, label %then.727, label %else.728

else.725:                                         ; preds = %else.724
  %cast.7211 = bitcast { i8*, i64 }* %ptroff.101 to i8*, !dbg !3060
  %cast.7212 = bitcast { i8*, i64 }* %tmpv.2032 to i8*, !dbg !3060
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7211, i8* nonnull %cast.7212), !dbg !3060
  br label %fallthrough.725

then.726:                                         ; preds = %then.725
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3060
  unreachable

else.726:                                         ; preds = %then.725
  %cast.7209 = bitcast { i8*, i64 }* %ptroff.101 to i8*, !dbg !3060
  %cast.7210 = bitcast { i8*, i64 }* %tmpv.2032 to i8*, !dbg !3060
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7209, i8* nonnull align 8 %cast.7210, i64 16, i1 false), !dbg !3060
  br label %fallthrough.725

then.727:                                         ; preds = %fallthrough.725
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3066
  unreachable

else.728:                                         ; preds = %fallthrough.725
  %field.1686 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.451, i64 0, i32 1, !dbg !3066
  %cast.7221 = bitcast %IPST.3* %tmpv.2045 to i8*
  %cast.7222 = bitcast %IPST.3* %field.1686 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7221, i8* nonnull align 8 %cast.7222, i64 24, i1 false)
  %field.1688 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2045, i64 0, i32 1, !dbg !3067
  %tmpv.2045.field.ld.0 = load i64, i64* %field.1688, align 8, !dbg !3067
  %cast.7223 = bitcast %IPST.3* %tmpv.2048 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7223, i8* nonnull align 8 %cast.7189, i64 24, i1 false)
  %field.1689 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2048, i64 0, i32 1, !dbg !3067
  %tmpv.2048.field.ld.0 = load i64, i64* %field.1689, align 8, !dbg !3067
  %add.87 = add i64 %tmpv.2048.field.ld.0, %tmpv.2045.field.ld.0, !dbg !3067
  %field.1690 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2045, i64 0, i32 2, !dbg !3067
  %tmpv.2045.field.ld.1 = load i64, i64* %field.1690, align 8, !dbg !3067
  %icmp.897 = icmp ugt i64 %add.87, %tmpv.2045.field.ld.1, !dbg !3067
  br i1 %icmp.897, label %then.729, label %else.729

then.729:                                         ; preds = %else.728
  %cast.7225 = bitcast %IPST.3* %tmpv.2045 to %IPST.4*, !dbg !3067
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.379, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7225, i64 %add.87), !dbg !3067
  %tmpv.2054.sroa.0.0.cast.7230.sroa_idx = bitcast %IPST.4* %sret.actual.379 to { i8*, i64 }**
  %tmpv.2054.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2054.sroa.0.0.cast.7230.sroa_idx, align 8
  %7 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.379, i64 0, i32 1
  %tmpv.2054.sroa.3.0.copyload = load i64, i64* %7, align 8
  %8 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.379, i64 0, i32 2
  %tmpv.2054.sroa.4.0.copyload = load i64, i64* %8, align 8
  %.pre242 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2045, i64 0, i32 0, !dbg !3067
  br label %fallthrough.729

fallthrough.729:                                  ; preds = %else.730, %then.729
  %tmpv.2054.sroa.0.0.cast.7233.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1693, %else.730 ], [ %.pre242, %then.729 ], !dbg !3067
  %tmpv.2054.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.2045.field.ld.3, %else.730 ], [ %tmpv.2054.sroa.0.0.copyload, %then.729 ]
  %tmpv.2054.sroa.3.0 = phi i64 [ %add.87, %else.730 ], [ %tmpv.2054.sroa.3.0.copyload, %then.729 ]
  %tmpv.2054.sroa.4.0 = phi i64 [ %tmpv.2045.field.ld.1, %else.730 ], [ %tmpv.2054.sroa.4.0.copyload, %then.729 ]
  store { i8*, i64 }* %tmpv.2054.sroa.0.0, { i8*, i64 }** %tmpv.2054.sroa.0.0.cast.7233.sroa_idx.pre-phi, align 8, !dbg !3067
  store i64 %tmpv.2054.sroa.3.0, i64* %field.1688, align 8, !dbg !3067
  store i64 %tmpv.2054.sroa.4.0, i64* %field.1690, align 8, !dbg !3067
  %icmp.904 = icmp slt i64 %tmpv.2054.sroa.4.0, %tmpv.2045.field.ld.0, !dbg !3067
  %9 = icmp slt i64 %tmpv.2045.field.ld.0, 0, !dbg !3067
  %ior.428 = or i1 %9, %icmp.904, !dbg !3067
  br i1 %ior.428, label %then.732, label %else.732

else.729:                                         ; preds = %else.728
  %icmp.899 = icmp sgt i64 %add.87, %tmpv.2045.field.ld.1, !dbg !3067
  %add.87.lobit228 = or i64 %add.87, %tmpv.2045.field.ld.1, !dbg !3067
  %10 = icmp slt i64 %add.87.lobit228, 0, !dbg !3067
  %11 = or i1 %icmp.899, %10, !dbg !3067
  br i1 %11, label %then.730, label %else.730

then.730:                                         ; preds = %else.729
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3067
  unreachable

else.730:                                         ; preds = %else.729
  %field.1693 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2045, i64 0, i32 0, !dbg !3067
  %tmpv.2045.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1693, align 8, !dbg !3067
  br label %fallthrough.729

then.732:                                         ; preds = %fallthrough.729
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3067
  unreachable

else.732:                                         ; preds = %fallthrough.729
  %icmp.906 = icmp eq i64 %tmpv.2054.sroa.4.0, %tmpv.2045.field.ld.0, !dbg !3067
  %.tmpv.2045.field.ld.0 = select i1 %icmp.906, i64 0, i64 %tmpv.2045.field.ld.0
  %ptroff.103 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2054.sroa.0.0, i64 %.tmpv.2045.field.ld.0, !dbg !3067
  %sub.122 = sub i64 %tmpv.2054.sroa.3.0, %tmpv.2045.field.ld.0, !dbg !3067
  %sub.123 = sub i64 %tmpv.2054.sroa.4.0, %tmpv.2045.field.ld.0, !dbg !3067
  %tmpv.2057.sroa.0.0.cast.7237.sroa_idx = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2055, i64 0, i32 0
  store { i8*, i64 }* %ptroff.103, { i8*, i64 }** %tmpv.2057.sroa.0.0.cast.7237.sroa_idx, align 8
  %tmpv.2057.sroa.2.0.cast.7237.sroa_idx158 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2055, i64 0, i32 1
  store i64 %sub.122, i64* %tmpv.2057.sroa.2.0.cast.7237.sroa_idx158, align 8
  %tmpv.2057.sroa.3.0.cast.7237.sroa_idx159 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2055, i64 0, i32 2
  store i64 %sub.123, i64* %tmpv.2057.sroa.3.0.cast.7237.sroa_idx159, align 8
  %cast.7239 = bitcast %IPST.3* %tmpv.2055 to %IPST.4*, !dbg !3067
  %cast.7240 = bitcast %IPST.3* %tmpv.2048 to %IPST.4*, !dbg !3067
  %call.452 = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7239, %IPST.4* byval nonnull %cast.7240), !dbg !3067
  %cast.7241 = bitcast %IPST.3* %tmpv.2058 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7241, i8* nonnull align 8 %cast.7221, i64 24, i1 false)
  %runtime.writeBarrier.ld.75 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3068
  %icmp.908 = icmp eq i32 %runtime.writeBarrier.ld.75, 0, !dbg !3068
  br i1 %icmp.908, label %else.735, label %else.734

fallthrough.734:                                  ; preds = %else.734, %else.735
  %icmp.924 = icmp eq %Flags.0* %f, null, !dbg !3069
  br i1 %icmp.924, label %then.736, label %else.736

else.734:                                         ; preds = %else.732
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7222, i8* nonnull %cast.7241), !dbg !3068
  br label %fallthrough.734

else.735:                                         ; preds = %else.732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7222, i8* nonnull align 8 %cast.7241, i64 24, i1 false), !dbg !3068
  br label %fallthrough.734

then.736:                                         ; preds = %fallthrough.734
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3069
  unreachable

else.736:                                         ; preds = %fallthrough.734
  %field.1721 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 5, !dbg !3069
  %.field.ld.205 = load i8, i8* %field.1721, align 1, !dbg !3069
  %12 = and i8 %.field.ld.205, 1, !dbg !3070
  %trunc.747 = icmp eq i8 %12, 0, !dbg !3070
  br i1 %trunc.747, label %else.748, label %else.739

else.739:                                         ; preds = %else.736
  %cast.7251 = bitcast %IPST.3* %tmpv.2062 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7251, i8* nonnull align 8 %cast.7222, i64 24, i1 false)
  %field.1709 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2062, i64 0, i32 1, !dbg !3071
  %tmpv.2062.field.ld.0 = load i64, i64* %field.1709, align 8, !dbg !3071
  %cast.7253 = bitcast { i8*, i64 }* %tmpv.2065 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7253, i8* align 8 bitcast ({ i8*, i64 }* @const.589 to i8*), i64 16, i1 false)
  %add.88 = add i64 %tmpv.2062.field.ld.0, 1, !dbg !3071
  %field.1710 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2062, i64 0, i32 2, !dbg !3071
  %tmpv.2062.field.ld.1 = load i64, i64* %field.1710, align 8, !dbg !3071
  %icmp.911 = icmp ugt i64 %add.88, %tmpv.2062.field.ld.1, !dbg !3071
  br i1 %icmp.911, label %then.740, label %else.740

then.740:                                         ; preds = %else.739
  %cast.7255 = bitcast %IPST.3* %tmpv.2062 to %IPST.4*, !dbg !3071
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.380, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7255, i64 %add.88), !dbg !3071
  %tmpv.2070.sroa.0.0.cast.7260.sroa_idx = bitcast %IPST.4* %sret.actual.380 to { i8*, i64 }**
  %tmpv.2070.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2070.sroa.0.0.cast.7260.sroa_idx, align 8
  %13 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.380, i64 0, i32 1
  %tmpv.2070.sroa.3.0.copyload = load i64, i64* %13, align 8
  %14 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.380, i64 0, i32 2
  %tmpv.2070.sroa.4.0.copyload = load i64, i64* %14, align 8
  %.pre247 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2062, i64 0, i32 0, !dbg !3071
  br label %fallthrough.740

fallthrough.740:                                  ; preds = %else.741, %then.740
  %tmpv.2070.sroa.0.0.cast.7263.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1713, %else.741 ], [ %.pre247, %then.740 ], !dbg !3071
  %tmpv.2070.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.2062.field.ld.3, %else.741 ], [ %tmpv.2070.sroa.0.0.copyload, %then.740 ]
  %tmpv.2070.sroa.3.0 = phi i64 [ %add.88, %else.741 ], [ %tmpv.2070.sroa.3.0.copyload, %then.740 ]
  %tmpv.2070.sroa.4.0 = phi i64 [ %tmpv.2062.field.ld.1, %else.741 ], [ %tmpv.2070.sroa.4.0.copyload, %then.740 ]
  store { i8*, i64 }* %tmpv.2070.sroa.0.0, { i8*, i64 }** %tmpv.2070.sroa.0.0.cast.7263.sroa_idx.pre-phi, align 8, !dbg !3071
  store i64 %tmpv.2070.sroa.3.0, i64* %field.1709, align 8, !dbg !3071
  store i64 %tmpv.2070.sroa.4.0, i64* %field.1710, align 8, !dbg !3071
  %icmp.918 = icmp sge i64 %tmpv.2062.field.ld.0, %tmpv.2070.sroa.3.0, !dbg !3071
  %15 = icmp slt i64 %tmpv.2062.field.ld.0, 0, !dbg !3071
  %ior.436 = or i1 %15, %icmp.918, !dbg !3071
  br i1 %ior.436, label %then.743, label %else.743

else.740:                                         ; preds = %else.739
  %icmp.913 = icmp sgt i64 %add.88, %tmpv.2062.field.ld.1, !dbg !3071
  %add.88.lobit229 = or i64 %tmpv.2062.field.ld.1, %add.88, !dbg !3071
  %16 = icmp slt i64 %add.88.lobit229, 0, !dbg !3071
  %17 = or i1 %icmp.913, %16, !dbg !3071
  br i1 %17, label %then.741, label %else.741

then.741:                                         ; preds = %else.740
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3071
  unreachable

else.741:                                         ; preds = %else.740
  %field.1713 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2062, i64 0, i32 0, !dbg !3071
  %tmpv.2062.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1713, align 8, !dbg !3071
  br label %fallthrough.740

then.743:                                         ; preds = %fallthrough.740
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !3071
  unreachable

else.743:                                         ; preds = %fallthrough.740
  %ptroff.105 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2070.sroa.0.0, i64 %tmpv.2062.field.ld.0, !dbg !3071
  %runtime.writeBarrier.ld.76 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3071
  %icmp.921 = icmp eq i32 %runtime.writeBarrier.ld.76, 0, !dbg !3071
  br i1 %icmp.921, label %then.744, label %else.744

then.744:                                         ; preds = %else.743
  %icmp.920 = icmp eq { i8*, i64 }* %ptroff.105, null, !dbg !3071
  br i1 %icmp.920, label %then.745, label %else.745

fallthrough.744:                                  ; preds = %else.744, %else.745
  %cast.7270 = bitcast %IPST.3* %tmpv.2075 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7270, i8* nonnull align 8 %cast.7251, i64 24, i1 false)
  %runtime.writeBarrier.ld.77 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3072
  %icmp.923 = icmp eq i32 %runtime.writeBarrier.ld.77, 0, !dbg !3072
  br i1 %icmp.923, label %else.747, label %else.746

else.744:                                         ; preds = %else.743
  %cast.7268 = bitcast { i8*, i64 }* %ptroff.105 to i8*, !dbg !3071
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7268, i8* nonnull %cast.7253), !dbg !3071
  br label %fallthrough.744

then.745:                                         ; preds = %then.744
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3071
  unreachable

else.745:                                         ; preds = %then.744
  %cast.7266 = bitcast { i8*, i64 }* %ptroff.105 to i8*, !dbg !3071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7266, i8* nonnull align 8 %cast.7253, i64 16, i1 false), !dbg !3071
  br label %fallthrough.744

else.746:                                         ; preds = %fallthrough.744
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7222, i8* nonnull %cast.7270), !dbg !3072
  br label %else.748

else.747:                                         ; preds = %fallthrough.744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7222, i8* nonnull align 8 %cast.7270, i64 24, i1 false), !dbg !3072
  br label %else.748

else.748:                                         ; preds = %else.746, %else.747, %else.736
  %field.1736 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 4, !dbg !3073
  %.field.ld.209 = load i8, i8* %field.1736, align 1, !dbg !3073
  %18 = and i8 %.field.ld.209, 1, !dbg !3074
  %trunc.759 = icmp eq i8 %18, 0, !dbg !3074
  br i1 %trunc.759, label %else.760, label %else.751

else.751:                                         ; preds = %else.748
  %cast.7281 = bitcast %IPST.3* %tmpv.2080 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7281, i8* nonnull align 8 %cast.7222, i64 24, i1 false)
  %field.1724 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2080, i64 0, i32 1, !dbg !3075
  %tmpv.2080.field.ld.0 = load i64, i64* %field.1724, align 8, !dbg !3075
  %cast.7283 = bitcast { i8*, i64 }* %tmpv.2083 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7283, i8* align 8 bitcast ({ i8*, i64 }* @const.591 to i8*), i64 16, i1 false)
  %add.90 = add i64 %tmpv.2080.field.ld.0, 1, !dbg !3075
  %field.1725 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2080, i64 0, i32 2, !dbg !3075
  %tmpv.2080.field.ld.1 = load i64, i64* %field.1725, align 8, !dbg !3075
  %icmp.927 = icmp ugt i64 %add.90, %tmpv.2080.field.ld.1, !dbg !3075
  br i1 %icmp.927, label %then.752, label %else.752

then.752:                                         ; preds = %else.751
  %cast.7285 = bitcast %IPST.3* %tmpv.2080 to %IPST.4*, !dbg !3075
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.381, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7285, i64 %add.90), !dbg !3075
  %tmpv.2088.sroa.0.0.cast.7290.sroa_idx = bitcast %IPST.4* %sret.actual.381 to { i8*, i64 }**
  %tmpv.2088.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2088.sroa.0.0.cast.7290.sroa_idx, align 8
  %19 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.381, i64 0, i32 1
  %tmpv.2088.sroa.3.0.copyload = load i64, i64* %19, align 8
  %20 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.381, i64 0, i32 2
  %tmpv.2088.sroa.4.0.copyload = load i64, i64* %20, align 8
  %.pre246 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2080, i64 0, i32 0, !dbg !3075
  br label %fallthrough.752

fallthrough.752:                                  ; preds = %else.753, %then.752
  %tmpv.2088.sroa.0.0.cast.7293.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1728, %else.753 ], [ %.pre246, %then.752 ], !dbg !3075
  %tmpv.2088.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.2080.field.ld.3, %else.753 ], [ %tmpv.2088.sroa.0.0.copyload, %then.752 ]
  %tmpv.2088.sroa.3.0 = phi i64 [ %add.90, %else.753 ], [ %tmpv.2088.sroa.3.0.copyload, %then.752 ]
  %tmpv.2088.sroa.4.0 = phi i64 [ %tmpv.2080.field.ld.1, %else.753 ], [ %tmpv.2088.sroa.4.0.copyload, %then.752 ]
  store { i8*, i64 }* %tmpv.2088.sroa.0.0, { i8*, i64 }** %tmpv.2088.sroa.0.0.cast.7293.sroa_idx.pre-phi, align 8, !dbg !3075
  store i64 %tmpv.2088.sroa.3.0, i64* %field.1724, align 8, !dbg !3075
  store i64 %tmpv.2088.sroa.4.0, i64* %field.1725, align 8, !dbg !3075
  %icmp.934 = icmp sge i64 %tmpv.2080.field.ld.0, %tmpv.2088.sroa.3.0, !dbg !3075
  %21 = icmp slt i64 %tmpv.2080.field.ld.0, 0, !dbg !3075
  %ior.444 = or i1 %21, %icmp.934, !dbg !3075
  br i1 %ior.444, label %then.755, label %else.755

else.752:                                         ; preds = %else.751
  %icmp.929 = icmp sgt i64 %add.90, %tmpv.2080.field.ld.1, !dbg !3075
  %add.90.lobit230 = or i64 %tmpv.2080.field.ld.1, %add.90, !dbg !3075
  %22 = icmp slt i64 %add.90.lobit230, 0, !dbg !3075
  %23 = or i1 %icmp.929, %22, !dbg !3075
  br i1 %23, label %then.753, label %else.753

then.753:                                         ; preds = %else.752
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3075
  unreachable

else.753:                                         ; preds = %else.752
  %field.1728 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2080, i64 0, i32 0, !dbg !3075
  %tmpv.2080.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1728, align 8, !dbg !3075
  br label %fallthrough.752

then.755:                                         ; preds = %fallthrough.752
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !3075
  unreachable

else.755:                                         ; preds = %fallthrough.752
  %ptroff.107 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2088.sroa.0.0, i64 %tmpv.2080.field.ld.0, !dbg !3075
  %runtime.writeBarrier.ld.78 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3075
  %icmp.937 = icmp eq i32 %runtime.writeBarrier.ld.78, 0, !dbg !3075
  br i1 %icmp.937, label %then.756, label %else.756

then.756:                                         ; preds = %else.755
  %icmp.936 = icmp eq { i8*, i64 }* %ptroff.107, null, !dbg !3075
  br i1 %icmp.936, label %then.757, label %else.757

fallthrough.756:                                  ; preds = %else.756, %else.757
  %cast.7300 = bitcast %IPST.3* %tmpv.2093 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7300, i8* nonnull align 8 %cast.7281, i64 24, i1 false)
  %runtime.writeBarrier.ld.79 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3076
  %icmp.939 = icmp eq i32 %runtime.writeBarrier.ld.79, 0, !dbg !3076
  br i1 %icmp.939, label %else.759, label %else.758

else.756:                                         ; preds = %else.755
  %cast.7298 = bitcast { i8*, i64 }* %ptroff.107 to i8*, !dbg !3075
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7298, i8* nonnull %cast.7283), !dbg !3075
  br label %fallthrough.756

then.757:                                         ; preds = %then.756
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3075
  unreachable

else.757:                                         ; preds = %then.756
  %cast.7296 = bitcast { i8*, i64 }* %ptroff.107 to i8*, !dbg !3075
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7296, i8* nonnull align 8 %cast.7283, i64 16, i1 false), !dbg !3075
  br label %fallthrough.756

else.758:                                         ; preds = %fallthrough.756
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7222, i8* nonnull %cast.7300), !dbg !3076
  br label %else.760

else.759:                                         ; preds = %fallthrough.756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7222, i8* nonnull align 8 %cast.7300, i64 24, i1 false), !dbg !3076
  br label %else.760

else.760:                                         ; preds = %else.758, %else.759, %else.748
  %field.1751 = getelementptr inbounds %Flags.0, %Flags.0* %f, i64 0, i32 6, !dbg !3077
  %.field.ld.213 = load i8, i8* %field.1751, align 1, !dbg !3077
  %24 = and i8 %.field.ld.213, 1, !dbg !3078
  %trunc.771 = icmp eq i8 %24, 0, !dbg !3078
  br i1 %trunc.771, label %else.773, label %else.763

else.763:                                         ; preds = %else.760
  %cast.7311 = bitcast %IPST.3* %tmpv.2098 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7311, i8* nonnull align 8 %cast.7222, i64 24, i1 false)
  %field.1739 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2098, i64 0, i32 1, !dbg !3079
  %tmpv.2098.field.ld.0 = load i64, i64* %field.1739, align 8, !dbg !3079
  %cast.7313 = bitcast { i8*, i64 }* %tmpv.2101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7313, i8* align 8 bitcast ({ i8*, i64 }* @const.597 to i8*), i64 16, i1 false)
  %add.92 = add i64 %tmpv.2098.field.ld.0, 1, !dbg !3079
  %field.1740 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2098, i64 0, i32 2, !dbg !3079
  %tmpv.2098.field.ld.1 = load i64, i64* %field.1740, align 8, !dbg !3079
  %icmp.943 = icmp ugt i64 %add.92, %tmpv.2098.field.ld.1, !dbg !3079
  br i1 %icmp.943, label %then.764, label %else.764

then.764:                                         ; preds = %else.763
  %cast.7315 = bitcast %IPST.3* %tmpv.2098 to %IPST.4*, !dbg !3079
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.382, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7315, i64 %add.92), !dbg !3079
  %tmpv.2106.sroa.0.0.cast.7320.sroa_idx = bitcast %IPST.4* %sret.actual.382 to { i8*, i64 }**
  %tmpv.2106.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2106.sroa.0.0.cast.7320.sroa_idx, align 8
  %25 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.382, i64 0, i32 1
  %tmpv.2106.sroa.3.0.copyload = load i64, i64* %25, align 8
  %26 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.382, i64 0, i32 2
  %tmpv.2106.sroa.4.0.copyload = load i64, i64* %26, align 8
  %.pre245 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2098, i64 0, i32 0, !dbg !3079
  br label %fallthrough.764

fallthrough.764:                                  ; preds = %else.765, %then.764
  %tmpv.2106.sroa.0.0.cast.7323.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1743, %else.765 ], [ %.pre245, %then.764 ], !dbg !3079
  %tmpv.2106.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.2098.field.ld.3, %else.765 ], [ %tmpv.2106.sroa.0.0.copyload, %then.764 ]
  %tmpv.2106.sroa.3.0 = phi i64 [ %add.92, %else.765 ], [ %tmpv.2106.sroa.3.0.copyload, %then.764 ]
  %tmpv.2106.sroa.4.0 = phi i64 [ %tmpv.2098.field.ld.1, %else.765 ], [ %tmpv.2106.sroa.4.0.copyload, %then.764 ]
  store { i8*, i64 }* %tmpv.2106.sroa.0.0, { i8*, i64 }** %tmpv.2106.sroa.0.0.cast.7323.sroa_idx.pre-phi, align 8, !dbg !3079
  store i64 %tmpv.2106.sroa.3.0, i64* %field.1739, align 8, !dbg !3079
  store i64 %tmpv.2106.sroa.4.0, i64* %field.1740, align 8, !dbg !3079
  %icmp.950 = icmp sge i64 %tmpv.2098.field.ld.0, %tmpv.2106.sroa.3.0, !dbg !3079
  %27 = icmp slt i64 %tmpv.2098.field.ld.0, 0, !dbg !3079
  %ior.452 = or i1 %27, %icmp.950, !dbg !3079
  br i1 %ior.452, label %then.767, label %else.767

else.764:                                         ; preds = %else.763
  %icmp.945 = icmp sgt i64 %add.92, %tmpv.2098.field.ld.1, !dbg !3079
  %add.92.lobit231 = or i64 %tmpv.2098.field.ld.1, %add.92, !dbg !3079
  %28 = icmp slt i64 %add.92.lobit231, 0, !dbg !3079
  %29 = or i1 %icmp.945, %28, !dbg !3079
  br i1 %29, label %then.765, label %else.765

then.765:                                         ; preds = %else.764
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3079
  unreachable

else.765:                                         ; preds = %else.764
  %field.1743 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2098, i64 0, i32 0, !dbg !3079
  %tmpv.2098.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1743, align 8, !dbg !3079
  br label %fallthrough.764

then.767:                                         ; preds = %fallthrough.764
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !3079
  unreachable

else.767:                                         ; preds = %fallthrough.764
  %ptroff.109 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2106.sroa.0.0, i64 %tmpv.2098.field.ld.0, !dbg !3079
  %runtime.writeBarrier.ld.80 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3079
  %icmp.953 = icmp eq i32 %runtime.writeBarrier.ld.80, 0, !dbg !3079
  br i1 %icmp.953, label %then.768, label %else.768

then.768:                                         ; preds = %else.767
  %icmp.952 = icmp eq { i8*, i64 }* %ptroff.109, null, !dbg !3079
  br i1 %icmp.952, label %then.769, label %else.769

fallthrough.768:                                  ; preds = %else.768, %else.769
  %cast.7330 = bitcast %IPST.3* %tmpv.2111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7330, i8* nonnull align 8 %cast.7311, i64 24, i1 false)
  %runtime.writeBarrier.ld.81 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3080
  %icmp.955 = icmp eq i32 %runtime.writeBarrier.ld.81, 0, !dbg !3080
  br i1 %icmp.955, label %else.771, label %else.770

else.768:                                         ; preds = %else.767
  %cast.7328 = bitcast { i8*, i64 }* %ptroff.109 to i8*, !dbg !3079
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7328, i8* nonnull %cast.7313), !dbg !3079
  br label %fallthrough.768

then.769:                                         ; preds = %then.768
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3079
  unreachable

else.769:                                         ; preds = %then.768
  %cast.7326 = bitcast { i8*, i64 }* %ptroff.109 to i8*, !dbg !3079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7326, i8* nonnull align 8 %cast.7313, i64 16, i1 false), !dbg !3079
  br label %fallthrough.768

else.770:                                         ; preds = %fallthrough.768
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7222, i8* nonnull %cast.7330), !dbg !3080
  br label %else.773

else.771:                                         ; preds = %fallthrough.768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7222, i8* nonnull align 8 %cast.7330, i64 24, i1 false), !dbg !3080
  br label %else.773

else.773:                                         ; preds = %else.760, %else.771, %else.770
  %cast.7341 = bitcast %IPST.3* %tmpv.2116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7341, i8* nonnull align 8 %cast.7222, i64 24, i1 false)
  %field.1754 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2116, i64 0, i32 1, !dbg !3081
  %tmpv.2116.field.ld.0 = load i64, i64* %field.1754, align 8, !dbg !3081
  %add.94 = add i64 %tmpv.2116.field.ld.0, 1, !dbg !3081
  %field.1755 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2116, i64 0, i32 2, !dbg !3081
  %tmpv.2116.field.ld.1 = load i64, i64* %field.1755, align 8, !dbg !3081
  %icmp.959 = icmp ugt i64 %add.94, %tmpv.2116.field.ld.1, !dbg !3081
  br i1 %icmp.959, label %then.774, label %else.774

then.774:                                         ; preds = %else.773
  %cast.7343 = bitcast %IPST.3* %tmpv.2116 to %IPST.4*, !dbg !3081
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.383, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7343, i64 %add.94), !dbg !3081
  %tmpv.2123.sroa.0.0.cast.7348.sroa_idx = bitcast %IPST.4* %sret.actual.383 to { i8*, i64 }**
  %tmpv.2123.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2123.sroa.0.0.cast.7348.sroa_idx, align 8
  %30 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.383, i64 0, i32 1
  %tmpv.2123.sroa.3.0.copyload = load i64, i64* %30, align 8
  %31 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.383, i64 0, i32 2
  %tmpv.2123.sroa.4.0.copyload = load i64, i64* %31, align 8
  %.pre243 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2116, i64 0, i32 0, !dbg !3081
  br label %fallthrough.774

fallthrough.774:                                  ; preds = %else.775, %then.774
  %tmpv.2123.sroa.0.0.cast.7351.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.1758, %else.775 ], [ %.pre243, %then.774 ], !dbg !3081
  %tmpv.2123.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.2116.field.ld.3, %else.775 ], [ %tmpv.2123.sroa.0.0.copyload, %then.774 ]
  %tmpv.2123.sroa.3.0 = phi i64 [ %add.94, %else.775 ], [ %tmpv.2123.sroa.3.0.copyload, %then.774 ]
  %tmpv.2123.sroa.4.0 = phi i64 [ %tmpv.2116.field.ld.1, %else.775 ], [ %tmpv.2123.sroa.4.0.copyload, %then.774 ]
  store { i8*, i64 }* %tmpv.2123.sroa.0.0, { i8*, i64 }** %tmpv.2123.sroa.0.0.cast.7351.sroa_idx.pre-phi, align 8, !dbg !3081
  store i64 %tmpv.2123.sroa.3.0, i64* %field.1754, align 8, !dbg !3081
  store i64 %tmpv.2123.sroa.4.0, i64* %field.1755, align 8, !dbg !3081
  %icmp.966 = icmp sge i64 %tmpv.2116.field.ld.0, %tmpv.2123.sroa.3.0, !dbg !3081
  %32 = icmp slt i64 %tmpv.2116.field.ld.0, 0, !dbg !3081
  %ior.460 = or i1 %32, %icmp.966, !dbg !3081
  br i1 %ior.460, label %then.777, label %else.777

else.774:                                         ; preds = %else.773
  %icmp.961 = icmp sgt i64 %add.94, %tmpv.2116.field.ld.1, !dbg !3081
  %add.94.lobit232 = or i64 %add.94, %tmpv.2116.field.ld.1, !dbg !3081
  %33 = icmp slt i64 %add.94.lobit232, 0, !dbg !3081
  %34 = or i1 %icmp.961, %33, !dbg !3081
  br i1 %34, label %then.775, label %else.775

then.775:                                         ; preds = %else.774
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3081
  unreachable

else.775:                                         ; preds = %else.774
  %field.1758 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2116, i64 0, i32 0, !dbg !3081
  %tmpv.2116.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.1758, align 8, !dbg !3081
  br label %fallthrough.774

then.777:                                         ; preds = %fallthrough.774
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !3081
  unreachable

else.777:                                         ; preds = %fallthrough.774
  %ptroff.111 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2123.sroa.0.0, i64 %tmpv.2116.field.ld.0, !dbg !3081
  %runtime.writeBarrier.ld.82 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3081
  %icmp.969 = icmp eq i32 %runtime.writeBarrier.ld.82, 0, !dbg !3081
  br i1 %icmp.969, label %then.778, label %else.778

then.778:                                         ; preds = %else.777
  %icmp.968 = icmp eq { i8*, i64 }* %ptroff.111, null, !dbg !3081
  br i1 %icmp.968, label %then.779, label %else.779

fallthrough.778:                                  ; preds = %else.778, %else.779
  %cast.7358 = bitcast %IPST.3* %tmpv.2128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7358, i8* nonnull align 8 %cast.7341, i64 24, i1 false)
  %runtime.writeBarrier.ld.83 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3082
  %icmp.971 = icmp eq i32 %runtime.writeBarrier.ld.83, 0, !dbg !3082
  br i1 %icmp.971, label %else.781, label %else.780

else.778:                                         ; preds = %else.777
  %cast.7356 = bitcast { i8*, i64 }* %ptroff.111 to i8*, !dbg !3081
  %cast.7357 = bitcast { i8*, i64 }* %pkg to i8*, !dbg !3081
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.7356, i8* nonnull %cast.7357), !dbg !3081
  br label %fallthrough.778

then.779:                                         ; preds = %then.778
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3081
  unreachable

else.779:                                         ; preds = %then.778
  %cast.7354 = bitcast { i8*, i64 }* %ptroff.111 to i8*, !dbg !3081
  %cast.7355 = bitcast { i8*, i64 }* %pkg to i8*, !dbg !3081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.7354, i8* nonnull align 8 %cast.7355, i64 16, i1 false), !dbg !3081
  br label %fallthrough.778

else.780:                                         ; preds = %fallthrough.778
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7222, i8* nonnull %cast.7358), !dbg !3082
  br label %else.782

else.781:                                         ; preds = %fallthrough.778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7222, i8* nonnull align 8 %cast.7358, i64 24, i1 false), !dbg !3082
  br label %else.782

else.782:                                         ; preds = %else.781, %else.780
  %field.1766 = getelementptr inbounds %Cmd.0, %Cmd.0* %call.451, i64 0, i32 2, !dbg !3083
  %call.453 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7string, i64 0, i32 0)), !dbg !3084
  %35 = bitcast %IPST.3* %tmpv.2133 to i8**, !dbg !3084
  store i8* %call.453, i8** %35, align 8, !dbg !3084
  %field.1768 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2133, i64 0, i32 1, !dbg !3084
  %cast.7370 = bitcast %IPST.3* %tmpv.2135 to i8*
  %cast.7371 = bitcast %IPST.3* %env to i8*
  %36 = bitcast i64* %field.1768 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false), !dbg !3084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7370, i8* nonnull align 8 %cast.7371, i64 24, i1 false)
  %field.1771 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2135, i64 0, i32 1, !dbg !3085
  %tmpv.2135.field.ld.0 = load i64, i64* %field.1771, align 8, !dbg !3085
  %icmp.973 = icmp eq i64 %tmpv.2135.field.ld.0, 0, !dbg !3085
  br i1 %icmp.973, label %fallthrough.783.thread, label %fallthrough.783

fallthrough.783:                                  ; preds = %else.782
  %field.1769 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2133, i64 0, i32 2, !dbg !3084
  %cast.7372 = bitcast %IPST.3* %tmpv.2133 to %IPST.4*, !dbg !3085
  call void @runtime.growslice(%IPST.4* nonnull sret %sret.actual.384, i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7372, i64 %tmpv.2135.field.ld.0), !dbg !3085
  %37 = bitcast %IPST.4* %sret.actual.384 to i64*
  %tmpv.2141.sroa.0.0.copyload239 = load i64, i64* %37, align 8
  %38 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.384, i64 0, i32 1
  %tmpv.2141.sroa.3.0.copyload = load i64, i64* %38, align 8
  %39 = getelementptr inbounds %IPST.4, %IPST.4* %sret.actual.384, i64 0, i32 2
  %tmpv.2141.sroa.4.0.copyload = load i64, i64* %39, align 8
  %40 = bitcast %IPST.3* %tmpv.2133 to i64*, !dbg !3085
  store i64 %tmpv.2141.sroa.0.0.copyload239, i64* %40, align 8, !dbg !3085
  store i64 %tmpv.2141.sroa.3.0.copyload, i64* %field.1768, align 8, !dbg !3085
  store i64 %tmpv.2141.sroa.4.0.copyload, i64* %field.1769, align 8, !dbg !3085
  %trunc.787 = icmp sgt i64 %tmpv.2141.sroa.4.0.copyload, -1, !dbg !3085
  br i1 %trunc.787, label %else.786, label %then.786

fallthrough.783.thread:                           ; preds = %else.782
  %41 = ptrtoint i8* %call.453 to i64
  %42 = bitcast i64* %field.1768 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 16, i1 false), !dbg !3085
  br label %else.786

then.786:                                         ; preds = %fallthrough.783
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !3085
  unreachable

else.786:                                         ; preds = %fallthrough.783.thread, %fallthrough.783
  %tmpv.2133.field.ld.5223 = phi i64 [ %41, %fallthrough.783.thread ], [ %tmpv.2141.sroa.0.0.copyload239, %fallthrough.783 ], !dbg !3085
  %tmpv.2141.sroa.4.0238 = phi i64 [ 0, %fallthrough.783.thread ], [ %tmpv.2141.sroa.4.0.copyload, %fallthrough.783 ]
  %tmpv.2141.sroa.3.0237 = phi i64 [ 0, %fallthrough.783.thread ], [ %tmpv.2141.sroa.3.0.copyload, %fallthrough.783 ]
  %43 = bitcast %IPST.3* %tmpv.2142 to i64*
  store i64 %tmpv.2133.field.ld.5223, i64* %43, align 8
  %tmpv.2144.sroa.2.0.cast.7384.sroa_idx217 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2142, i64 0, i32 1
  store i64 %tmpv.2141.sroa.3.0237, i64* %tmpv.2144.sroa.2.0.cast.7384.sroa_idx217, align 8
  %tmpv.2144.sroa.3.0.cast.7384.sroa_idx218 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.2142, i64 0, i32 2
  store i64 %tmpv.2141.sroa.4.0238, i64* %tmpv.2144.sroa.3.0.cast.7384.sroa_idx218, align 8
  %cast.7386 = bitcast %IPST.3* %tmpv.2142 to %IPST.4*, !dbg !3085
  %cast.7387 = bitcast %IPST.3* %tmpv.2135 to %IPST.4*, !dbg !3085
  %call.454 = call i64 @runtime.typedslicecopy(i8* nest undef, %_type.0* nonnull @string..d, %IPST.4* byval nonnull %cast.7386, %IPST.4* byval nonnull %cast.7387), !dbg !3085
  %cast.7388 = bitcast %IPST.3* %tmpv.2145 to i8*
  %cast.7389 = bitcast %IPST.3* %tmpv.2133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7388, i8* nonnull align 8 %cast.7389, i64 24, i1 false)
  %runtime.writeBarrier.ld.84 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3086
  %icmp.984 = icmp eq i32 %runtime.writeBarrier.ld.84, 0, !dbg !3086
  %cast.7391 = bitcast %IPST.3* %field.1766 to i8*, !dbg !3086
  br i1 %icmp.984, label %else.789, label %else.788

fallthrough.788:                                  ; preds = %else.788, %else.789
  %call.455 = call { i64, i64 } @command_line_arguments.RunCmd(i8* nest undef, %Flags.0* nonnull %f, i64 %temp.chunk0, i64 %temp.chunk1, %Cmd.0* nonnull %call.451), !dbg !3087
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %pkgPath.0.sroa_cast), !dbg !3088
  ret { i64, i64 } %call.455, !dbg !3088

else.788:                                         ; preds = %else.786
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.7391, i8* nonnull %cast.7388), !dbg !3086
  br label %fallthrough.788

else.789:                                         ; preds = %else.786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7391, i8* nonnull align 8 %cast.7388, i64 24, i1 false), !dbg !3086
  br label %fallthrough.788
}

declare %Reader.2* @bytes.NewReader(i8*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare void @bytes.Reader.Read({ i64, %error.0 }*, i8*, %Reader.2*, { i8*, i64, i64 }*) #0

declare i64 @time.Since(i8*, %Time.0*) local_unnamed_addr #0

define void @command_line_arguments.EnvClang({ { i8*, i64 }, { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.17, i8* nest nocapture readnone %nest.52, %Flags.0* %f, i64 %sdkName.chunk0, i64 %sdkName.chunk1) #0 !dbg !3089 {
entry:
  %tmp.246 = alloca [2 x { i8*, i64 }], align 8
  %tmp.244 = alloca [2 x { i8*, i64 }], align 8
  %tmp.243 = alloca %IPST.3, align 8
  %tmp.241 = alloca [2 x { i8*, i64 }], align 8
  %tmp.240 = alloca %IPST.3, align 8
  %out = alloca { i8*, i64, i64 }, align 8
  %tmpv.1623 = alloca [4 x { i8*, i64 }], align 8
  %sret.actual.301 = alloca %IPST.4, align 8
  %sret.actual.302 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %tmpv.1634 = alloca [3 x { i8*, i64 }], align 8
  %sret.actual.307 = alloca %IPST.4, align 8
  %sret.actual.308 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !3097, metadata !DIExpression()), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %sdkName.chunk0, metadata !3099, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3100
  call void @llvm.dbg.value(metadata i64 %sdkName.chunk1, metadata !3099, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3100
  %0 = bitcast { i8*, i64, i64 }* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %cast.5682 = bitcast [4 x { i8*, i64 }]* %tmpv.1623 to i8*, !dbg !3101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5682, i8* align 8 bitcast ({ i8*, i64 }* @const.519 to i8*), i64 16, i1 false), !dbg !3101
  %sdkName.addr.sroa.0.0.cast.5684.sroa_idx = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.1623, i64 0, i64 1, !dbg !3101
  %sdkName.addr.sroa.0.0.cast.5684.sroa_cast = bitcast { i8*, i64 }* %sdkName.addr.sroa.0.0.cast.5684.sroa_idx to i64*, !dbg !3101
  store i64 %sdkName.chunk0, i64* %sdkName.addr.sroa.0.0.cast.5684.sroa_cast, align 8, !dbg !3101
  %sdkName.addr.sroa.5.0.cast.5684.sroa_idx122 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.1623, i64 0, i64 1, i32 1, !dbg !3101
  store i64 %sdkName.chunk1, i64* %sdkName.addr.sroa.5.0.cast.5684.sroa_idx122, align 8, !dbg !3101
  %index.257 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.1623, i64 0, i64 2, !dbg !3101
  %cast.5686 = bitcast { i8*, i64 }* %index.257 to i8*, !dbg !3101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5686, i8* align 8 bitcast ({ i8*, i64 }* @const.521 to i8*), i64 16, i1 false), !dbg !3101
  %index.258 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.1623, i64 0, i64 3, !dbg !3101
  %cast.5688 = bitcast { i8*, i64 }* %index.258 to i8*, !dbg !3101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5688, i8* align 8 bitcast ({ i8*, i64 }* @const.155 to i8*), i64 16, i1 false), !dbg !3101
  %field.1352 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.240, i64 0, i32 0, !dbg !3101
  %cast.5691 = getelementptr inbounds [4 x { i8*, i64 }], [4 x { i8*, i64 }]* %tmpv.1623, i64 0, i64 0, !dbg !3101
  store { i8*, i64 }* %cast.5691, { i8*, i64 }** %field.1352, align 8, !dbg !3101
  %field.1353 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.240, i64 0, i32 1, !dbg !3101
  store i64 4, i64* %field.1353, align 8, !dbg !3101
  %field.1354 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.240, i64 0, i32 2, !dbg !3101
  store i64 4, i64* %field.1354, align 8, !dbg !3101
  %call.367 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.376 to i64), i64 5, %IPST.3* byval nonnull %tmp.240), !dbg !3101
  call void @llvm.dbg.value(metadata %Cmd.0* %call.367, metadata !3103, metadata !DIExpression()), !dbg !3104
  %call.368 = call { i64, i64 } @strings.ToUpper(i8* nest undef, i64 %sdkName.chunk0, i64 %sdkName.chunk1), !dbg !3105
  %call.368.fca.0.extract = extractvalue { i64, i64 } %call.368, 0, !dbg !3105
  %call.368.fca.1.extract = extractvalue { i64, i64 } %call.368, 1, !dbg !3105
  %cast.5700 = bitcast [2 x { i8*, i64 }]* %tmp.241 to i8*, !dbg !3106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5700, i8* align 8 bitcast ({ i8*, i64 }* @const.523 to i8*), i64 16, i1 false), !dbg !3106
  %tmpv.1625.sroa.0.0.cast.5702.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.241, i64 0, i64 1, !dbg !3106
  %tmpv.1625.sroa.0.0.cast.5702.sroa_cast = bitcast { i8*, i64 }* %tmpv.1625.sroa.0.0.cast.5702.sroa_idx to i64*, !dbg !3106
  store i64 %call.368.fca.0.extract, i64* %tmpv.1625.sroa.0.0.cast.5702.sroa_cast, align 8, !dbg !3106
  %tmpv.1625.sroa.2.0.cast.5702.sroa_idx9 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.241, i64 0, i64 1, i32 1, !dbg !3106
  store i64 %call.368.fca.1.extract, i64* %tmpv.1625.sroa.2.0.cast.5702.sroa_idx9, align 8, !dbg !3106
  %call.369 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.241), !dbg !3106
  %call.369.fca.0.extract = extractvalue { i64, i64 } %call.369, 0, !dbg !3106
  %call.369.fca.1.extract = extractvalue { i64, i64 } %call.369, 1, !dbg !3106
  call void @runtime.stringtoslicebyte(%IPST.4* nonnull sret %sret.actual.301, i8* nest undef, i8* null, i64 %call.369.fca.0.extract, i64 %call.369.fca.1.extract), !dbg !3107
  %cast.5708 = bitcast %IPST.4* %sret.actual.301 to { i8*, i64, i64 }*, !dbg !3107
  call void @command_line_arguments.OutputCmd({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.302, i8* nest undef, %Flags.0* %f, { i8*, i64, i64 }* byval nonnull %cast.5708, i64 0, i64 0, %Cmd.0* %call.367), !dbg !3108
  %tmpv.1624.sroa.0.0.cast.5711.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.302 to i8*, !dbg !3108
  %tmpv.1624.sroa.3.0.cast.5711.sroa_idx75 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.302, i64 0, i32 1, i32 0, !dbg !3108
  %tmpv.1624.sroa.3.0.copyload76 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1624.sroa.3.0.cast.5711.sroa_idx75, align 8, !dbg !3108
  %tmpv.1624.sroa.4.0.cast.5711.sroa_idx77 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.302, i64 0, i32 1, i32 1, !dbg !3108
  %1 = bitcast i8** %tmpv.1624.sroa.4.0.cast.5711.sroa_idx77 to i64*, !dbg !3108
  %tmpv.1624.sroa.4.0.copyload78141 = load i64, i64* %1, align 8, !dbg !3108
  %out143 = bitcast { i8*, i64, i64 }* %out to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %out143, i8* nonnull align 8 %tmpv.1624.sroa.0.0.cast.5711.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1624.sroa.3.0.copyload76, metadata !3109, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3110
  call void @llvm.dbg.value(metadata i8** %tmpv.1624.sroa.4.0.cast.5711.sroa_idx77, metadata !3109, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !3110
  %icmp.693 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1624.sroa.3.0.copyload76, null, !dbg !3111
  br i1 %icmp.693, label %else.576, label %then.576

then.576:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !3112, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3113
  call void @llvm.dbg.value(metadata i64 0, metadata !3112, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3113
  call void @llvm.dbg.value(metadata i64 0, metadata !3114, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3115
  call void @llvm.dbg.value(metadata i64 0, metadata !3114, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3115
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1624.sroa.3.0.copyload76, metadata !3109, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3110
  call void @llvm.dbg.value(metadata i8** %tmpv.1624.sroa.4.0.cast.5711.sroa_idx77, metadata !3109, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !3110
  %tmp.242.sroa.5.0.cast.5738.sroa_idx129 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 2, i32 0, !dbg !3116
  %2 = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17 to i8*, !dbg !3116
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false), !dbg !3116
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1624.sroa.3.0.copyload76, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.242.sroa.5.0.cast.5738.sroa_idx129, align 8, !dbg !3116
  %tmp.242.sroa.6.0.cast.5738.sroa_idx130 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 2, i32 1, !dbg !3116
  %3 = bitcast i8** %tmp.242.sroa.6.0.cast.5738.sroa_idx130 to i64*, !dbg !3116
  store i64 %tmpv.1624.sroa.4.0.copyload78141, i64* %3, align 8, !dbg !3116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !3116
  ret void, !dbg !3116

else.576:                                         ; preds = %entry
  %cast.5741 = bitcast { i8*, i64, i64 }* %out to %IPST.4*, !dbg !3117
  %call.370 = call { i64, i64 } @runtime.slicebytetostring(i8* nest undef, i8* null, %IPST.4* byval nonnull %cast.5741), !dbg !3117
  %call.370.fca.0.extract = extractvalue { i64, i64 } %call.370, 0, !dbg !3117
  %call.370.fca.1.extract = extractvalue { i64, i64 } %call.370, 1, !dbg !3117
  %call.371 = call { i64, i64 } @strings.TrimSpace(i8* nest undef, i64 %call.370.fca.0.extract, i64 %call.370.fca.1.extract), !dbg !3118
  %cast.5752 = bitcast [3 x { i8*, i64 }]* %tmpv.1634 to i8*, !dbg !3119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5752, i8* align 8 bitcast ({ i8*, i64 }* @const.519 to i8*), i64 16, i1 false), !dbg !3119
  %sdkName.addr.sroa.0.0.cast.5754.sroa_idx = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1634, i64 0, i64 1, !dbg !3119
  %sdkName.addr.sroa.0.0.cast.5754.sroa_cast = bitcast { i8*, i64 }* %sdkName.addr.sroa.0.0.cast.5754.sroa_idx to i64*, !dbg !3119
  store i64 %sdkName.chunk0, i64* %sdkName.addr.sroa.0.0.cast.5754.sroa_cast, align 8, !dbg !3119
  %sdkName.addr.sroa.5.0.cast.5754.sroa_idx123 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1634, i64 0, i64 1, i32 1, !dbg !3119
  store i64 %sdkName.chunk1, i64* %sdkName.addr.sroa.5.0.cast.5754.sroa_idx123, align 8, !dbg !3119
  %index.263 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1634, i64 0, i64 2, !dbg !3119
  %cast.5756 = bitcast { i8*, i64 }* %index.263 to i8*, !dbg !3119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5756, i8* align 8 bitcast ({ i8*, i64 }* @const.525 to i8*), i64 16, i1 false), !dbg !3119
  %field.1361 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.243, i64 0, i32 0, !dbg !3119
  %cast.5759 = getelementptr inbounds [3 x { i8*, i64 }], [3 x { i8*, i64 }]* %tmpv.1634, i64 0, i64 0, !dbg !3119
  store { i8*, i64 }* %cast.5759, { i8*, i64 }** %field.1361, align 8, !dbg !3119
  %field.1362 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.243, i64 0, i32 1, !dbg !3119
  store i64 3, i64* %field.1362, align 8, !dbg !3119
  %field.1363 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.243, i64 0, i32 2, !dbg !3119
  store i64 3, i64* %field.1363, align 8, !dbg !3119
  %call.372 = call %Cmd.0* @os_exec.Command(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.376 to i64), i64 5, %IPST.3* byval nonnull %tmp.243), !dbg !3119
  call void @llvm.dbg.value(metadata %Cmd.0* %call.372, metadata !3103, metadata !DIExpression()), !dbg !3104
  %call.373 = call { i64, i64 } @strings.ToUpper(i8* nest undef, i64 %sdkName.chunk0, i64 %sdkName.chunk1), !dbg !3120
  %call.373.fca.0.extract = extractvalue { i64, i64 } %call.373, 0, !dbg !3120
  %call.373.fca.1.extract = extractvalue { i64, i64 } %call.373, 1, !dbg !3120
  %cast.5768 = bitcast [2 x { i8*, i64 }]* %tmp.244 to i8*, !dbg !3121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5768, i8* align 8 bitcast ({ i8*, i64 }* @const.527 to i8*), i64 16, i1 false), !dbg !3121
  %tmpv.1637.sroa.0.0.cast.5770.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.244, i64 0, i64 1, !dbg !3121
  %tmpv.1637.sroa.0.0.cast.5770.sroa_cast = bitcast { i8*, i64 }* %tmpv.1637.sroa.0.0.cast.5770.sroa_idx to i64*, !dbg !3121
  store i64 %call.373.fca.0.extract, i64* %tmpv.1637.sroa.0.0.cast.5770.sroa_cast, align 8, !dbg !3121
  %tmpv.1637.sroa.2.0.cast.5770.sroa_idx6 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.244, i64 0, i64 1, i32 1, !dbg !3121
  store i64 %call.373.fca.1.extract, i64* %tmpv.1637.sroa.2.0.cast.5770.sroa_idx6, align 8, !dbg !3121
  %call.374 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.244), !dbg !3121
  %call.374.fca.0.extract = extractvalue { i64, i64 } %call.374, 0, !dbg !3121
  %call.374.fca.1.extract = extractvalue { i64, i64 } %call.374, 1, !dbg !3121
  call void @runtime.stringtoslicebyte(%IPST.4* nonnull sret %sret.actual.307, i8* nest undef, i8* null, i64 %call.374.fca.0.extract, i64 %call.374.fca.1.extract), !dbg !3122
  %cast.5776 = bitcast %IPST.4* %sret.actual.307 to { i8*, i64, i64 }*, !dbg !3122
  call void @command_line_arguments.OutputCmd({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.308, i8* nest undef, %Flags.0* %f, { i8*, i64, i64 }* byval nonnull %cast.5776, i64 0, i64 0, %Cmd.0* %call.372), !dbg !3123
  %tmpv.1636.sroa.0.0.cast.5779.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.308 to i8*, !dbg !3123
  %tmpv.1636.sroa.3.0.cast.5779.sroa_idx68 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.308, i64 0, i32 1, i32 0, !dbg !3123
  %tmpv.1636.sroa.3.0.copyload69 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.1636.sroa.3.0.cast.5779.sroa_idx68, align 8, !dbg !3123
  %tmpv.1636.sroa.4.0.cast.5779.sroa_idx70 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.308, i64 0, i32 1, i32 1, !dbg !3123
  %4 = bitcast i8** %tmpv.1636.sroa.4.0.cast.5779.sroa_idx70 to i64*, !dbg !3123
  %tmpv.1636.sroa.4.0.copyload71142 = load i64, i64* %4, align 8, !dbg !3123
  %out145 = bitcast { i8*, i64, i64 }* %out to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %out145, i8* nonnull align 8 %tmpv.1636.sroa.0.0.cast.5779.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1636.sroa.3.0.copyload69, metadata !3109, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3110
  call void @llvm.dbg.value(metadata i8** %tmpv.1636.sroa.4.0.cast.5779.sroa_idx70, metadata !3109, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !3110
  %icmp.694 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1636.sroa.3.0.copyload69, null, !dbg !3124
  br i1 %icmp.694, label %else.577, label %then.577

then.577:                                         ; preds = %else.576
  call void @llvm.dbg.value(metadata i64 0, metadata !3112, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3113
  call void @llvm.dbg.value(metadata i64 0, metadata !3112, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3113
  call void @llvm.dbg.value(metadata i64 0, metadata !3114, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3115
  call void @llvm.dbg.value(metadata i64 0, metadata !3114, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3115
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1636.sroa.3.0.copyload69, metadata !3109, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3110
  call void @llvm.dbg.value(metadata i8** %tmpv.1636.sroa.4.0.cast.5779.sroa_idx70, metadata !3109, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !3110
  %tmp.245.sroa.5.0.cast.5810.sroa_idx134 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 2, i32 0, !dbg !3125
  %5 = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17 to i8*, !dbg !3125
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false), !dbg !3125
  store { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.1636.sroa.3.0.copyload69, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.245.sroa.5.0.cast.5810.sroa_idx134, align 8, !dbg !3125
  %tmp.245.sroa.6.0.cast.5810.sroa_idx135 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 2, i32 1, !dbg !3125
  %6 = bitcast i8** %tmp.245.sroa.6.0.cast.5810.sroa_idx135 to i64*, !dbg !3125
  store i64 %tmpv.1636.sroa.4.0.copyload71142, i64* %6, align 8, !dbg !3125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !3125
  ret void, !dbg !3125

else.577:                                         ; preds = %else.576
  %call.371.fca.1.extract = extractvalue { i64, i64 } %call.371, 1, !dbg !3118
  call void @llvm.dbg.value(metadata i64 %call.371.fca.1.extract, metadata !3126, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3127
  %call.371.fca.0.extract = extractvalue { i64, i64 } %call.371, 0, !dbg !3118
  call void @llvm.dbg.value(metadata i64 %call.371.fca.0.extract, metadata !3126, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3127
  %call.375 = call { i64, i64 } @runtime.slicebytetostring(i8* nest undef, i8* null, %IPST.4* byval nonnull %cast.5741), !dbg !3128
  %call.375.fca.0.extract = extractvalue { i64, i64 } %call.375, 0, !dbg !3128
  %call.375.fca.1.extract = extractvalue { i64, i64 } %call.375, 1, !dbg !3128
  %call.376 = call { i64, i64 } @strings.TrimSpace(i8* nest undef, i64 %call.375.fca.0.extract, i64 %call.375.fca.1.extract), !dbg !3129
  %call.376.fca.0.extract = extractvalue { i64, i64 } %call.376, 0, !dbg !3129
  %call.376.fca.1.extract = extractvalue { i64, i64 } %call.376, 1, !dbg !3129
  call void @llvm.dbg.value(metadata i64 %call.376.fca.0.extract, metadata !3130, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3131
  call void @llvm.dbg.value(metadata i64 %call.376.fca.1.extract, metadata !3130, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3131
  %cast.5824 = bitcast [2 x { i8*, i64 }]* %tmp.246 to i8*, !dbg !3132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.5824, i8* align 8 bitcast ({ i8*, i64 }* @const.529 to i8*), i64 16, i1 false), !dbg !3132
  %sdk.sroa.0.0.cast.5826.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.246, i64 0, i64 1, !dbg !3132
  %sdk.sroa.0.0.cast.5826.sroa_cast = bitcast { i8*, i64 }* %sdk.sroa.0.0.cast.5826.sroa_idx to i64*, !dbg !3132
  store i64 %call.376.fca.0.extract, i64* %sdk.sroa.0.0.cast.5826.sroa_cast, align 8, !dbg !3132
  %sdk.sroa.6.0.cast.5826.sroa_idx13 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.246, i64 0, i64 1, i32 1, !dbg !3132
  store i64 %call.376.fca.1.extract, i64* %sdk.sroa.6.0.cast.5826.sroa_idx13, align 8, !dbg !3132
  %call.377 = call { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.246), !dbg !3132
  %call.377.fca.0.extract = extractvalue { i64, i64 } %call.377, 0, !dbg !3132
  %call.377.fca.1.extract = extractvalue { i64, i64 } %call.377, 1, !dbg !3132
  call void @llvm.dbg.value(metadata i64 %call.371.fca.0.extract, metadata !3112, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3113
  call void @llvm.dbg.value(metadata i64 %call.371.fca.1.extract, metadata !3112, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3113
  call void @llvm.dbg.value(metadata i64 %call.377.fca.0.extract, metadata !3114, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3115
  call void @llvm.dbg.value(metadata i64 %call.377.fca.1.extract, metadata !3114, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3115
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* null, metadata !3109, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3110
  call void @llvm.dbg.value(metadata i8* null, metadata !3109, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3110
  %tmp.247.sroa.0.0.cast.5846.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17 to i64*, !dbg !3133
  store i64 %call.371.fca.0.extract, i64* %tmp.247.sroa.0.0.cast.5846.sroa_cast, align 8, !dbg !3133
  %tmp.247.sroa.2.0.cast.5846.sroa_idx136 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 0, i32 1, !dbg !3133
  store i64 %call.371.fca.1.extract, i64* %tmp.247.sroa.2.0.cast.5846.sroa_idx136, align 8, !dbg !3133
  %tmp.247.sroa.3.0.cast.5846.sroa_idx137 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 1, !dbg !3133
  %tmp.247.sroa.3.0.cast.5846.sroa_cast = bitcast { i8*, i64 }* %tmp.247.sroa.3.0.cast.5846.sroa_idx137 to i64*, !dbg !3133
  store i64 %call.377.fca.0.extract, i64* %tmp.247.sroa.3.0.cast.5846.sroa_cast, align 8, !dbg !3133
  %tmp.247.sroa.4.0.cast.5846.sroa_idx138 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 1, i32 1, !dbg !3133
  store i64 %call.377.fca.1.extract, i64* %tmp.247.sroa.4.0.cast.5846.sroa_idx138, align 8, !dbg !3133
  %tmp.247.sroa.5.0.cast.5846.sroa_idx139 = getelementptr inbounds { { i8*, i64 }, { i8*, i64 }, %error.0 }, { { i8*, i64 }, { i8*, i64 }, %error.0 }* %sret.formal.17, i64 0, i32 2, i32 0, !dbg !3133
  %7 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmp.247.sroa.5.0.cast.5846.sroa_idx139 to i8*, !dbg !3133
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false), !dbg !3133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !3133
  ret void, !dbg !3133
}

declare void @runtime.stringtoslicebyte(%IPST.4*, i8*, i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @runtime.slicebytetostring(i8*, i8*, %IPST.4*) local_unnamed_addr #0

declare { i64, i64 } @strings.TrimSpace(i8*, i64, i64) local_unnamed_addr #0

declare i8 @bytes.HasPrefix(i8*, { i8*, i64, i64 }*, { i8*, i64, i64 }*) local_unnamed_addr #0

declare i8 @strings.HasPrefix(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @path_filepath.SplitList(%IPST.3*, i8*, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.PkgPath({ { i8*, i64 }, %error.0 }* nocapture sret %sret.formal.23, i8* nest nocapture readnone %nest.63, %Flags.0* nocapture readnone %f, i64 %matchaPkgPath.chunk0, i64 %matchaPkgPath.chunk1, %IPST.3* byval nocapture readonly %env) #0 !dbg !3134 {
entry:
  %tmp.287 = alloca [5 x { i8*, i64 }], align 8
  %tmp.285 = alloca %IPST.2, align 8
  call void @llvm.dbg.declare(metadata %IPST.3* %env, metadata !3137, metadata !DIExpression()), !dbg !3138
  %tmpv.1814 = alloca { i8*, i64 }, align 8
  %tmpv.1816 = alloca { i8*, i64 }, align 8
  %tmpv.1817 = alloca [2 x %IPST.16], align 8
  call void @llvm.dbg.value(metadata %Flags.0* %f, metadata !3139, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i64 %matchaPkgPath.chunk0, metadata !3141, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3142
  call void @llvm.dbg.value(metadata i64 %matchaPkgPath.chunk1, metadata !3141, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3142
  %call.421 = call { i64, i64 } @command_line_arguments.FindEnv(i8* nest undef, %IPST.3* byval nonnull %env, i64 ptrtoint ([5 x i8]* @const.567 to i64), i64 4), !dbg !3143
  %call.421.fca.0.extract = extractvalue { i64, i64 } %call.421, 0, !dbg !3143
  %call.421.fca.1.extract = extractvalue { i64, i64 } %call.421, 1, !dbg !3143
  call void @llvm.dbg.value(metadata i64 %call.421.fca.0.extract, metadata !3145, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3146
  call void @llvm.dbg.value(metadata i64 %call.421.fca.1.extract, metadata !3145, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3146
  %call.422 = call { i64, i64 } @command_line_arguments.FindEnv(i8* nest undef, %IPST.3* byval nonnull %env, i64 ptrtoint ([7 x i8]* @const.425 to i64), i64 6), !dbg !3147
  %call.422.fca.0.extract = extractvalue { i64, i64 } %call.422, 0, !dbg !3147
  %call.422.fca.1.extract = extractvalue { i64, i64 } %call.422, 1, !dbg !3147
  call void @llvm.dbg.value(metadata i64 %call.422.fca.0.extract, metadata !3148, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3146
  call void @llvm.dbg.value(metadata i64 %call.422.fca.1.extract, metadata !3148, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3146
  %call.423 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.421.fca.0.extract, i64 %call.421.fca.1.extract, i64 0, i64 0), !dbg !3149
  %icmp.722 = icmp eq i8 %call.423, 1, !dbg !3149
  br i1 %icmp.722, label %then.606, label %fallthrough.605

fallthrough.605:                                  ; preds = %entry
  %call.424 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.422.fca.0.extract, i64 %call.422.fca.1.extract, i64 0, i64 0), !dbg !3150
  %icmp.723 = icmp eq i8 %call.424, 1, !dbg !3150
  br i1 %icmp.723, label %then.606, label %else.606

then.606:                                         ; preds = %entry, %fallthrough.605
  %call.425 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !3151
  %tOS.sroa.0.0.cast.6629.sroa_cast = bitcast { i8*, i64 }* %tmpv.1814 to i64*
  store i64 %call.421.fca.0.extract, i64* %tOS.sroa.0.0.cast.6629.sroa_cast, align 8
  %tOS.sroa.7.0.cast.6629.sroa_idx20 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1814, i64 0, i32 1
  store i64 %call.421.fca.1.extract, i64* %tOS.sroa.7.0.cast.6629.sroa_idx20, align 8
  %cast.6632 = bitcast { i8*, i64 }* %tmpv.1814 to i8*, !dbg !3151
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.425, i8* nonnull %cast.6632), !dbg !3151
  %call.426 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !3151
  %tArch.sroa.0.0.cast.6634.sroa_cast = bitcast { i8*, i64 }* %tmpv.1816 to i64*
  store i64 %call.422.fca.0.extract, i64* %tArch.sroa.0.0.cast.6634.sroa_cast, align 8
  %tArch.sroa.7.0.cast.6634.sroa_idx12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.1816, i64 0, i32 1
  store i64 %call.422.fca.1.extract, i64* %tArch.sroa.7.0.cast.6634.sroa_idx12, align 8
  %cast.6637 = bitcast { i8*, i64 }* %tmpv.1816 to i8*, !dbg !3151
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.426, i8* nonnull %cast.6637), !dbg !3151
  %tmp.283.sroa.0.0.cast.6640.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1817, i64 0, i64 0, i32 0, !dbg !3151
  store %_type.0* @string..d, %_type.0** %tmp.283.sroa.0.0.cast.6640.sroa_idx, align 8, !dbg !3151
  %tmp.283.sroa.2.0.cast.6640.sroa_idx52 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1817, i64 0, i64 0, i32 1, !dbg !3151
  store i8* %call.425, i8** %tmp.283.sroa.2.0.cast.6640.sroa_idx52, align 8, !dbg !3151
  %tmp.284.sroa.0.0.cast.6642.sroa_idx = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1817, i64 0, i64 1, i32 0, !dbg !3151
  store %_type.0* @string..d, %_type.0** %tmp.284.sroa.0.0.cast.6642.sroa_idx, align 8, !dbg !3151
  %tmp.284.sroa.2.0.cast.6642.sroa_idx53 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1817, i64 0, i64 1, i32 1, !dbg !3151
  store i8* %call.426, i8** %tmp.284.sroa.2.0.cast.6642.sroa_idx53, align 8, !dbg !3151
  %field.1468 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.285, i64 0, i32 0, !dbg !3151
  %cast.6645 = getelementptr inbounds [2 x %IPST.16], [2 x %IPST.16]* %tmpv.1817, i64 0, i64 0, !dbg !3151
  store %IPST.16* %cast.6645, %IPST.16** %field.1468, align 8, !dbg !3151
  %field.1469 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.285, i64 0, i32 1, !dbg !3151
  store i64 2, i64* %field.1469, align 8, !dbg !3151
  %field.1470 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.285, i64 0, i32 2, !dbg !3151
  store i64 2, i64* %field.1470, align 8, !dbg !3151
  %call.427 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([34 x i8]* @const.569 to i64), i64 33, %IPST.2* byval nonnull %tmp.285), !dbg !3151
  %call.427.fca.0.extract = extractvalue { i64, i64 } %call.427, 0, !dbg !3151
  %call.427.fca.1.extract = extractvalue { i64, i64 } %call.427, 1, !dbg !3151
  call void @llvm.dbg.value(metadata i64 0, metadata !3152, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3153
  call void @llvm.dbg.value(metadata i64 0, metadata !3152, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3153
  call void @llvm.dbg.value(metadata i64 %call.427.fca.0.extract, metadata !3154, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3155
  call void @llvm.dbg.value(metadata i64 %call.427.fca.1.extract, metadata !3154, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3155
  %tmp.286.sroa.3.0.cast.6657.sroa_idx55 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.23, i64 0, i32 1, !dbg !3156
  %tmp.286.sroa.3.0.cast.6657.sroa_cast = bitcast %error.0* %tmp.286.sroa.3.0.cast.6657.sroa_idx55 to i64*, !dbg !3156
  %0 = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.23 to i8*, !dbg !3156
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !3156
  store i64 %call.427.fca.0.extract, i64* %tmp.286.sroa.3.0.cast.6657.sroa_cast, align 8, !dbg !3156
  %tmp.286.sroa.4.0.cast.6657.sroa_idx56 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.23, i64 0, i32 1, i32 1, !dbg !3156
  %tmp.286.sroa.4.0.cast.6657.sroa_cast = bitcast i8** %tmp.286.sroa.4.0.cast.6657.sroa_idx56 to i64*, !dbg !3156
  store i64 %call.427.fca.1.extract, i64* %tmp.286.sroa.4.0.cast.6657.sroa_cast, align 8, !dbg !3156
  ret void, !dbg !3156

else.606:                                         ; preds = %fallthrough.605
  %matchaPkgPath.addr.sroa.0.0.cast.6663.sroa_cast = bitcast [5 x { i8*, i64 }]* %tmp.287 to i64*, !dbg !3157
  store i64 %matchaPkgPath.chunk0, i64* %matchaPkgPath.addr.sroa.0.0.cast.6663.sroa_cast, align 8, !dbg !3157
  %matchaPkgPath.addr.sroa.2.0.cast.6663.sroa_idx51 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmp.287, i64 0, i64 0, i32 1, !dbg !3157
  store i64 %matchaPkgPath.chunk1, i64* %matchaPkgPath.addr.sroa.2.0.cast.6663.sroa_idx51, align 8, !dbg !3157
  %index.355 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmp.287, i64 0, i64 1, !dbg !3157
  %cast.6665 = bitcast { i8*, i64 }* %index.355 to i8*, !dbg !3157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6665, i8* align 8 bitcast ({ i8*, i64 }* @const.572 to i8*), i64 16, i1 false), !dbg !3157
  %tOS.sroa.0.0.cast.6667.sroa_idx = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmp.287, i64 0, i64 2, !dbg !3157
  %tOS.sroa.0.0.cast.6667.sroa_cast = bitcast { i8*, i64 }* %tOS.sroa.0.0.cast.6667.sroa_idx to i64*, !dbg !3157
  store i64 %call.421.fca.0.extract, i64* %tOS.sroa.0.0.cast.6667.sroa_cast, align 8, !dbg !3157
  %tOS.sroa.7.0.cast.6667.sroa_idx21 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmp.287, i64 0, i64 2, i32 1, !dbg !3157
  store i64 %call.421.fca.1.extract, i64* %tOS.sroa.7.0.cast.6667.sroa_idx21, align 8, !dbg !3157
  %index.357 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmp.287, i64 0, i64 3, !dbg !3157
  %cast.6669 = bitcast { i8*, i64 }* %index.357 to i8*, !dbg !3157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.6669, i8* align 8 bitcast ({ i8*, i64 }* @const.574 to i8*), i64 16, i1 false), !dbg !3157
  %tArch.sroa.0.0.cast.6671.sroa_idx = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmp.287, i64 0, i64 4, !dbg !3157
  %tArch.sroa.0.0.cast.6671.sroa_cast = bitcast { i8*, i64 }* %tArch.sroa.0.0.cast.6671.sroa_idx to i64*, !dbg !3157
  store i64 %call.422.fca.0.extract, i64* %tArch.sroa.0.0.cast.6671.sroa_cast, align 8, !dbg !3157
  %tArch.sroa.7.0.cast.6671.sroa_idx13 = getelementptr inbounds [5 x { i8*, i64 }], [5 x { i8*, i64 }]* %tmp.287, i64 0, i64 4, i32 1, !dbg !3157
  store i64 %call.422.fca.1.extract, i64* %tArch.sroa.7.0.cast.6671.sroa_idx13, align 8, !dbg !3157
  %call.428 = call { i64, i64 } @runtime.concatstring5(i8* nest undef, i8* null, [5 x { i8*, i64 }]* byval nonnull %tmp.287), !dbg !3157
  %call.428.fca.0.extract = extractvalue { i64, i64 } %call.428, 0, !dbg !3157
  %call.428.fca.1.extract = extractvalue { i64, i64 } %call.428, 1, !dbg !3157
  call void @llvm.dbg.value(metadata i64 %call.428.fca.0.extract, metadata !3152, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3153
  call void @llvm.dbg.value(metadata i64 %call.428.fca.1.extract, metadata !3152, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3153
  call void @llvm.dbg.value(metadata i64 0, metadata !3154, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3155
  call void @llvm.dbg.value(metadata i64 0, metadata !3154, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3155
  %tmp.288.sroa.0.0.cast.6687.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.formal.23 to i64*, !dbg !3158
  store i64 %call.428.fca.0.extract, i64* %tmp.288.sroa.0.0.cast.6687.sroa_cast, align 8, !dbg !3158
  %tmp.288.sroa.2.0.cast.6687.sroa_idx57 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.23, i64 0, i32 0, i32 1, !dbg !3158
  store i64 %call.428.fca.1.extract, i64* %tmp.288.sroa.2.0.cast.6687.sroa_idx57, align 8, !dbg !3158
  %tmp.288.sroa.3.0.cast.6687.sroa_idx58 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.formal.23, i64 0, i32 1, !dbg !3158
  %1 = bitcast %error.0* %tmp.288.sroa.3.0.cast.6687.sroa_idx58 to i8*, !dbg !3158
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 16, i1 false), !dbg !3158
  ret void, !dbg !3158
}

declare { i64, i64 } @runtime.concatstring5(i8*, i8*, [5 x { i8*, i64 }]*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Import(i8* nest nocapture readnone %nest.69, %Context.1* %ctx, i64 %path.chunk0, i64 %path.chunk1, i64 %srcDir.chunk0, i64 %srcDir.chunk1, i64 %mode, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %pkgs) #0 !dbg !3159 {
entry:
  %sret.actual.388 = alloca { %Package.0*, %error.0 }, align 8
  %tmpv.2183 = alloca { i8*, i64 }, align 8
  %tmpv.2191 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Context.1* %ctx, metadata !3162, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.value(metadata i64 %path.chunk0, metadata !3164, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3165
  call void @llvm.dbg.value(metadata i64 %path.chunk1, metadata !3164, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3165
  call void @llvm.dbg.value(metadata i64 %srcDir.chunk0, metadata !3166, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3167
  call void @llvm.dbg.value(metadata i64 %srcDir.chunk1, metadata !3166, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3167
  call void @llvm.dbg.value(metadata i64 %mode, metadata !3168, metadata !DIExpression()), !dbg !3169
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %pkgs, metadata !3170, metadata !DIExpression()), !dbg !3171
  %call.462 = call i8 @runtime.eqstring(i8* nest undef, i64 %path.chunk0, i64 %path.chunk1, i64 ptrtoint ([2 x i8]* @const.611 to i64), i64 1), !dbg !3172
  %icmp.1002 = icmp eq i8 %call.462, 1, !dbg !3172
  br i1 %icmp.1002, label %then.802, label %else.802

then.802:                                         ; preds = %else.811, %label.0, %else.809, %else.804, %entry
  %merge = phi { i64, i64 } [ zeroinitializer, %else.804 ], [ zeroinitializer, %entry ], [ zeroinitializer, %else.809 ], [ %call.465, %else.811 ], [ zeroinitializer, %label.0 ]
  call void @llvm.dbg.value(metadata i64 0, metadata !3174, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3175
  call void @llvm.dbg.value(metadata i64 0, metadata !3174, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3175
  ret { i64, i64 } %merge, !dbg !3176

else.802:                                         ; preds = %entry
  call void @go_build.Context.Import({ %Package.0*, %error.0 }* nonnull sret %sret.actual.388, i8* nest undef, %Context.1* %ctx, i64 %path.chunk0, i64 %path.chunk1, i64 %srcDir.chunk0, i64 %srcDir.chunk1, i64 %mode), !dbg !3177
  %tmpv.2180.sroa.0.0.cast.7541.sroa_idx = getelementptr inbounds { %Package.0*, %error.0 }, { %Package.0*, %error.0 }* %sret.actual.388, i64 0, i32 0, !dbg !3177
  %tmpv.2180.sroa.0.0.copyload30 = load %Package.0*, %Package.0** %tmpv.2180.sroa.0.0.cast.7541.sroa_idx, align 8, !dbg !3177
  %tmpv.2180.sroa.3.sroa.0.0.tmpv.2180.sroa.3.0.cast.7541.sroa_cast.sroa_idx = getelementptr inbounds { %Package.0*, %error.0 }, { %Package.0*, %error.0 }* %sret.actual.388, i64 0, i32 1, i32 0, !dbg !3177
  %tmpv.2180.sroa.3.sroa.0.0.copyload47 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.2180.sroa.3.sroa.0.0.tmpv.2180.sroa.3.0.cast.7541.sroa_cast.sroa_idx, align 8, !dbg !3177
  call void @llvm.dbg.value(metadata %Package.0* %tmpv.2180.sroa.0.0.copyload30, metadata !3178, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.2180.sroa.3.sroa.0.0.copyload47, metadata !3180, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3179
  %icmp.1003 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.2180.sroa.3.sroa.0.0.copyload47, null, !dbg !3181
  br i1 %icmp.1003, label %else.803, label %then.803

then.803:                                         ; preds = %else.802
  %tmpv.2180.sroa.3.sroa.3.0.tmpv.2180.sroa.3.0.cast.7541.sroa_cast.sroa_idx48 = getelementptr inbounds { %Package.0*, %error.0 }, { %Package.0*, %error.0 }* %sret.actual.388, i64 0, i32 1, i32 1, !dbg !3177
  %0 = bitcast i8** %tmpv.2180.sroa.3.sroa.3.0.tmpv.2180.sroa.3.0.cast.7541.sroa_cast.sroa_idx48 to i64*, !dbg !3177
  %tmpv.2180.sroa.3.sroa.3.0.copyload4978 = load i64, i64* %0, align 8, !dbg !3177
  call void @llvm.dbg.value(metadata i8** %tmpv.2180.sroa.3.sroa.3.0.tmpv.2180.sroa.3.0.cast.7541.sroa_cast.sroa_idx48, metadata !3180, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !3179
  %1 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.2180.sroa.3.sroa.0.0.copyload47 to i64, !dbg !3182
  call void @llvm.dbg.value(metadata i64 %1, metadata !3174, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3175
  call void @llvm.dbg.value(metadata i64 %tmpv.2180.sroa.3.sroa.3.0.copyload4978, metadata !3174, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3175
  %ld.807.fca.0.insert = insertvalue { i64, i64 } undef, i64 %1, 0, !dbg !3182
  %ld.807.fca.1.insert = insertvalue { i64, i64 } %ld.807.fca.0.insert, i64 %tmpv.2180.sroa.3.sroa.3.0.copyload4978, 1, !dbg !3182
  ret { i64, i64 } %ld.807.fca.1.insert, !dbg !3182

else.803:                                         ; preds = %else.802
  call void @llvm.dbg.value(metadata i8 0, metadata !3183, metadata !DIExpression()), !dbg !3185
  %icmp.1004 = icmp eq %Package.0* %tmpv.2180.sroa.0.0.copyload30, null, !dbg !3186
  br i1 %icmp.1004, label %then.804, label %else.804

then.804:                                         ; preds = %else.803
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3186
  unreachable

else.804:                                         ; preds = %else.803
  %cast.7551 = bitcast { i8*, i64 }* %tmpv.2183 to i8*
  %cast.7552 = bitcast %Package.0* %tmpv.2180.sroa.0.0.copyload30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7551, i8* align 8 %cast.7552, i64 16, i1 false)
  %call.463 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1go_build.Package, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %pkgs, i8* nonnull %cast.7551), !dbg !3187
  %call.463.fca.1.extract = extractvalue { i64, i8 } %call.463, 1, !dbg !3187
  call void @llvm.dbg.value(metadata i8 %call.463.fca.1.extract, metadata !3183, metadata !DIExpression()), !dbg !3185
  %2 = and i8 %call.463.fca.1.extract, 1, !dbg !3188
  %trunc.805 = icmp eq i8 %2, 0, !dbg !3188
  br i1 %trunc.805, label %else.806, label %then.802

else.806:                                         ; preds = %else.804
  %cast.7565 = bitcast { i8*, i64 }* %tmpv.2191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.7565, i8* align 8 %cast.7552, i64 16, i1 false)
  %call.464 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7.1go_build.Package, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %pkgs, i8* nonnull %cast.7565), !dbg !3189
  %cast.7569 = bitcast i8* %call.464 to %Package.0**, !dbg !3189
  %runtime.writeBarrier.ld.86 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !3189
  %icmp.1007 = icmp eq i32 %runtime.writeBarrier.ld.86, 0, !dbg !3189
  br i1 %icmp.1007, label %then.807, label %else.807

then.807:                                         ; preds = %else.806
  %icmp.1006 = icmp eq i8* %call.464, null, !dbg !3189
  br i1 %icmp.1006, label %then.808, label %else.808

else.807:                                         ; preds = %else.806
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.464, i8* nonnull %cast.7552), !dbg !3189
  br label %else.809

then.808:                                         ; preds = %then.807
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3189
  unreachable

else.808:                                         ; preds = %then.807
  store %Package.0* %tmpv.2180.sroa.0.0.copyload30, %Package.0** %cast.7569, align 8, !dbg !3189
  br label %else.809

else.809:                                         ; preds = %else.808, %else.807
  %tmpv.2197.sroa.0.0.cast.7577.sroa_idx = getelementptr inbounds %Package.0, %Package.0* %tmpv.2180.sroa.0.0.copyload30, i64 0, i32 34, i32 0
  %tmpv.2197.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.2197.sroa.0.0.cast.7577.sroa_idx, align 8
  %tmpv.2197.sroa.2.0.cast.7577.sroa_idx17 = getelementptr inbounds %Package.0, %Package.0* %tmpv.2180.sroa.0.0.copyload30, i64 0, i32 34, i32 1
  %tmpv.2197.sroa.2.0.copyload = load i64, i64* %tmpv.2197.sroa.2.0.cast.7577.sroa_idx17, align 8
  %icmp.101379 = icmp sgt i64 %tmpv.2197.sroa.2.0.copyload, 0, !dbg !3190
  br i1 %icmp.101379, label %else.811.lr.ph, label %then.802

else.811.lr.ph:                                   ; preds = %else.809
  %field0.368 = bitcast %Package.0* %tmpv.2180.sroa.0.0.copyload30 to i64*
  %3 = getelementptr inbounds %Package.0, %Package.0* %tmpv.2180.sroa.0.0.copyload30, i64 0, i32 0, i32 1
  br label %else.811

label.0:                                          ; preds = %else.811
  %icmp.1013 = icmp slt i64 %add.100, %tmpv.2197.sroa.2.0.copyload, !dbg !3190
  br i1 %icmp.1013, label %else.811, label %then.802

else.811:                                         ; preds = %else.811.lr.ph, %label.0
  %tmpv.2199.080 = phi i64 [ 0, %else.811.lr.ph ], [ %add.100, %label.0 ]
  %ptroff.117 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.2197.sroa.0.0.copyload, i64 %tmpv.2199.080, !dbg !3190
  %tmpv.2200.sroa.3.0.cast.7583.sroa_idx28 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.2197.sroa.0.0.copyload, i64 %tmpv.2199.080, i32 1, !dbg !3190
  %tmpv.2200.sroa.3.0.copyload29 = load i64, i64* %tmpv.2200.sroa.3.0.cast.7583.sroa_idx28, align 8, !dbg !3190
  call void @llvm.dbg.value(metadata i64 %tmpv.2200.sroa.3.0.copyload29, metadata !3192, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !3193
  %tmpv.2200.sroa.0.0.cast.7583.sroa_cast = bitcast { i8*, i64 }* %ptroff.117 to i64*, !dbg !3190
  %tmpv.2200.sroa.0.0.copyload27 = load i64, i64* %tmpv.2200.sroa.0.0.cast.7583.sroa_cast, align 8, !dbg !3190
  call void @llvm.dbg.value(metadata i64 %tmpv.2200.sroa.0.0.copyload27, metadata !3192, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3193
  %ld.811 = load i64, i64* %field0.368, align 8, !dbg !3194
  %ld.812 = load i64, i64* %3, align 8, !dbg !3194
  %call.465 = call { i64, i64 } @command_line_arguments.Import(i8* nest undef, %Context.1* %ctx, i64 %tmpv.2200.sroa.0.0.copyload27, i64 %tmpv.2200.sroa.3.0.copyload29, i64 %ld.811, i64 %ld.812, i64 %mode, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %pkgs), !dbg !3194
  %call.465.fca.0.extract = extractvalue { i64, i64 } %call.465, 0, !dbg !3194
  call void @llvm.dbg.value(metadata i64 %call.465.fca.0.extract, metadata !3196, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !3197
  %icmp.1012 = icmp eq i64 %call.465.fca.0.extract, 0, !dbg !3198
  %add.100 = add nuw nsw i64 %tmpv.2199.080, 1, !dbg !3190
  br i1 %icmp.1012, label %label.0, label %then.802
}

declare i8 @runtime.setdeferretaddr(i8*, i8*) local_unnamed_addr #0

declare i64 @runtime.memhash64(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.memhash8(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.strhash(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.interhash(i8*, i8*, i64) local_unnamed_addr #0

declare i8 @runtime.ifaceeq(i8*, i64, i64, i64, i64) local_unnamed_addr #0

define i64 @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash(i8* nest nocapture readnone %nest.103, i8* %key, i64 %seed) #0 !dbg !3199 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !3200, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.value(metadata i64 %seed, metadata !3202, metadata !DIExpression()), !dbg !3201
  call void @llvm.dbg.value(metadata i64 0, metadata !3203, metadata !DIExpression()), !dbg !3201
  %pticast.69 = ptrtoint i8* %key to i64, !dbg !3201
  %call.527 = call i64 @runtime.memhash32(i8* nest undef, i8* %key, i64 %seed), !dbg !3201
  %add.126 = add i64 %pticast.69, 8, !dbg !3201
  %itpcast.24 = inttoptr i64 %add.126 to i8*, !dbg !3201
  %call.528 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.24, i64 %call.527), !dbg !3201
  %add.127 = add i64 %pticast.69, 16, !dbg !3201
  %itpcast.25 = inttoptr i64 %add.127 to i8*, !dbg !3201
  %call.529 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.25, i64 %call.528), !dbg !3201
  call void @llvm.dbg.value(metadata i64 %call.529, metadata !3203, metadata !DIExpression()), !dbg !3201
  ret i64 %call.529, !dbg !3201
}

declare i64 @runtime.memhash32(i8*, i8*, i64) local_unnamed_addr #0

define i8 @command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq(i8* nest nocapture readnone %nest.104, i8* readonly %key1, i8* readonly %key2) #0 !dbg !3204 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !3205, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i8* %key2, metadata !3207, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.value(metadata i8 0, metadata !3208, metadata !DIExpression()), !dbg !3206
  %icmp.1092 = icmp eq i8* %key1, null, !dbg !3206
  br i1 %icmp.1092, label %then.891, label %else.891

then.891:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3206
  unreachable

else.891:                                         ; preds = %entry
  %icmp.1093 = icmp eq i8* %key2, null, !dbg !3206
  br i1 %icmp.1093, label %then.892, label %else.892

then.892:                                         ; preds = %else.891
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !3206
  unreachable

else.892:                                         ; preds = %else.891
  %field.1905 = bitcast i8* %key1 to i32*, !dbg !3206
  %.field.ld.258 = load i32, i32* %field.1905, align 4, !dbg !3206
  %field.1906 = bitcast i8* %key2 to i32*, !dbg !3206
  %.field.ld.259 = load i32, i32* %field.1906, align 4, !dbg !3206
  %icmp.1094 = icmp eq i32 %.field.ld.258, %.field.ld.259, !dbg !3206
  br i1 %icmp.1094, label %else.895, label %then.893

then.893:                                         ; preds = %else.895, %else.892
  call void @llvm.dbg.value(metadata i8 0, metadata !3208, metadata !DIExpression()), !dbg !3206
  ret i8 0, !dbg !3206

else.895:                                         ; preds = %else.892
  %field.1907 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !3206
  %0 = bitcast i8* %field.1907 to i64*, !dbg !3206
  %.field.ld.260 = load i64, i64* %0, align 8, !dbg !3206
  %field.1908 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !3206
  %1 = bitcast i8* %field.1908 to i64*, !dbg !3206
  %.field.ld.261 = load i64, i64* %1, align 8, !dbg !3206
  %icmp.1097 = icmp eq i64 %.field.ld.260, %.field.ld.261, !dbg !3206
  br i1 %icmp.1097, label %else.898, label %then.893

else.898:                                         ; preds = %else.895
  %field.1909 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !3206
  %2 = bitcast i8* %field.1909 to i64*, !dbg !3206
  %.field.ld.262 = load i64, i64* %2, align 8, !dbg !3206
  %field.1910 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !3206
  %3 = bitcast i8* %field.1910 to i64*, !dbg !3206
  %.field.ld.263 = load i64, i64* %3, align 8, !dbg !3206
  %icmp.1100 = icmp eq i64 %.field.ld.262, %.field.ld.263, !dbg !3206
  %spec.select = zext i1 %icmp.1100 to i8
  ret i8 %spec.select
}

declare void @runtime.registerGCRoots(i8*, i8*) local_unnamed_addr #0

define void @command_line_arguments..import(i8* nest nocapture readnone %nest.105) local_unnamed_addr #0 !dbg !3209 {
entry:
  call void @runtime.registerGCRoots(i8* nest undef, i8* bitcast ({ i8*, i64, [26 x { i8*, i64, i64, i8* }] }* @go..C0 to i8*)), !dbg !3210
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #1

attributes #0 = { "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { noreturn "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #4 = { noinline "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 7, !"PIC Level", i32 0}
!1 = distinct !DICompileUnit(language: DW_LANG_Go, file: !2, producer: "llvm-goc", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, globals: !4)
!2 = !DIFile(filename: "./android.go", directory: "/home/wangcong/go_path/src/gomatcha.io/matcha/cmd")
!3 = !{}
!4 = !{!5, !9, !102, !260, !263, !313}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "runtime.writeBarrier", linkageName: "runtime.writeBarrier", scope: !1, file: !7, line: 1, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "<built-in>", directory: "")
!8 = !DIBasicType(name: "uint32", size: 32, encoding: DW_ATE_unsigned)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(name: "io_ioutil.Discard", linkageName: "io_ioutil.Discard", scope: !1, file: !11, line: 12, type: !12, isLocal: false, isDefinition: true)
!11 = !DIFile(filename: "android.go", directory: ".")
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "Writer", file: !11, line: 8, size: 128, align: 8, elements: !13)
!13 = !{!14, !101}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 8, baseType: !15, size: 64, align: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!16 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !17, size: 128, align: 8, elements: !18)
!17 = !DIFile(filename: "", directory: "")
!18 = !{!19, !78}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !17, line: 8, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = !DICompositeType(tag: DW_TAG_structure_type, name: "_type", file: !7, line: 1, size: 576, align: 8, elements: !22)
!22 = !{!23, !25, !26, !27, !29, !30, !31, !41, !50, !52, !59, !77}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !7, line: 1, baseType: !24, size: 64, align: 64)
!24 = !DIBasicType(name: "uintptr", size: 64, encoding: DW_ATE_unsigned)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ptrdata", file: !7, line: 1, baseType: !24, size: 64, align: 64, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "hash", file: !7, line: 1, baseType: !8, size: 32, align: 32, offset: 128)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "kind", file: !7, line: 1, baseType: !28, size: 8, align: 8, offset: 160)
!28 = !DIBasicType(name: "uint8", size: 8, encoding: DW_ATE_unsigned)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "align", file: !7, line: 1, baseType: !28, size: 8, align: 8, offset: 168)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "fieldAlign", file: !7, line: 1, baseType: !28, size: 8, align: 8, offset: 176)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", file: !7, line: 1, baseType: !32, size: 64, align: 64, offset: 192)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!33 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 1, size: 64, align: 8, elements: !34)
!34 = !{!35}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 1, baseType: !36, size: 64, align: 64)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!37 = !DISubroutineType(types: !38)
!38 = !{!24, !39, !24}
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!40 = !DIBasicType(name: "void")
!41 = !DIDerivedType(tag: DW_TAG_member, name: "equalfn", file: !7, line: 1, baseType: !42, size: 64, align: 64, offset: 256)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 1, size: 64, align: 8, elements: !44)
!44 = !{!45}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 1, baseType: !46, size: 64, align: 64)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DISubroutineType(types: !48)
!48 = !{!49, !39, !39}
!49 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_unsigned)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "gcdata", file: !7, line: 1, baseType: !51, size: 64, align: 64, offset: 320)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "string", file: !7, line: 1, baseType: !53, size: 64, align: 64, offset: 384)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", file: !7, line: 1, size: 128, align: 8, elements: !55)
!55 = !{!56, !57}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !7, line: 1, baseType: !51, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !7, line: 1, baseType: !58, size: 64, align: 64, offset: 64)
!58 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "uncommonType", file: !7, line: 1, baseType: !60, size: 64, align: 64, offset: 448)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncommonType", file: !7, line: 1, size: 320, align: 8, elements: !62)
!62 = !{!63, !64, !65}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 1, baseType: !53, size: 64, align: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "pkgPath", file: !7, line: 1, baseType: !53, size: 64, align: 64, offset: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "methods", file: !7, line: 1, baseType: !66, size: 192, align: 64, offset: 128)
!66 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*method,int,int}", file: !17, size: 192, align: 8, elements: !67)
!67 = !{!68, !75, !76}
!68 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !69, size: 64, align: 64)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DICompositeType(tag: DW_TAG_structure_type, name: "method", file: !7, line: 1, size: 320, align: 8, elements: !71)
!71 = !{!63, !64, !72, !73, !74}
!72 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 128)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 192)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "tfn", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 256)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !17, line: 1, baseType: !58, size: 64, align: 64, offset: 64)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !17, line: 1, baseType: !58, size: 64, align: 64, offset: 128)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ptrToThis", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 512)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !17, line: 8, baseType: !79, size: 64, align: 64, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !39, !98}
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !17, size: 192, align: 8, elements: !83)
!83 = !{!84, !85}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !17, line: 8, baseType: !58, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !17, line: 8, baseType: !86, size: 128, align: 64, offset: 64)
!86 = !DICompositeType(tag: DW_TAG_structure_type, name: "error", file: !7, line: 1, size: 128, align: 8, elements: !87)
!87 = !{!88, !97}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 1, baseType: !89, size: 64, align: 64)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64)
!90 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string}", file: !17, size: 128, align: 8, elements: !91)
!91 = !{!92, !93}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !17, line: 1, baseType: !20, size: 64, align: 64)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "Error", file: !17, line: 1, baseType: !94, size: 64, align: 64, offset: 64)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64)
!95 = !DISubroutineType(types: !96)
!96 = !{!54, !39}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 64)
!98 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint8,int,int}", file: !17, size: 192, align: 8, elements: !99)
!99 = !{!100, !75, !76}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !51, size: 64, align: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !11, line: 1, baseType: !39, size: 64, align: 64, offset: 64)
!102 = !DIGlobalVariableExpression(var: !103, expr: !DIExpression())
!103 = distinct !DIGlobalVariable(name: "go_build.Default", linkageName: "go_build.Default", scope: !1, file: !11, line: 10, type: !104, isLocal: false, isDefinition: true)
!104 = !DICompositeType(tag: DW_TAG_structure_type, name: "Context", file: !11, line: 10, size: 1664, align: 8, elements: !105)
!105 = !{!106, !107, !108, !109, !110, !111, !112, !113, !117, !118, !119, !127, !135, !143, !144, !156, !237}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "GOARCH", file: !11, line: 10, baseType: !54, size: 128, align: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "GOOS", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "GOROOT", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 256)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "GOPATH", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 384)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "CgoEnabled", file: !11, line: 10, baseType: !49, size: 8, align: 8, offset: 512)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "UseAllFiles", file: !11, line: 10, baseType: !49, size: 8, align: 8, offset: 520)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "Compiler", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 576)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "BuildTags", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 704)
!114 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*string,int,int}", file: !17, size: 192, align: 8, elements: !115)
!115 = !{!116, !75, !76}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !53, size: 64, align: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "ReleaseTags", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 896)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "InstallSuffix", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 1088)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "JoinPath", file: !11, line: 10, baseType: !120, size: 64, align: 64, offset: 1216)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 10, size: 64, align: 8, elements: !122)
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 10, baseType: !124, size: 64, align: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{!54, !114}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "SplitPathList", file: !11, line: 10, baseType: !128, size: 64, align: 64, offset: 1280)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 10, size: 64, align: 8, elements: !130)
!130 = !{!131}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 10, baseType: !132, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = !DISubroutineType(types: !134)
!134 = !{!114, !54}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "IsAbsPath", file: !11, line: 10, baseType: !136, size: 64, align: 64, offset: 1344)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 10, size: 64, align: 8, elements: !138)
!138 = !{!139}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 10, baseType: !140, size: 64, align: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DISubroutineType(types: !142)
!142 = !{!49, !54}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "IsDir", file: !11, line: 10, baseType: !136, size: 64, align: 64, offset: 1408)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "HasSubdir", file: !11, line: 10, baseType: !145, size: 64, align: 64, offset: 1472)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 10, size: 64, align: 8, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 10, baseType: !149, size: 64, align: 64)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !54, !54}
!152 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{string,bool}", file: !17, size: 192, align: 8, elements: !153)
!153 = !{!154, !155}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "rel", file: !17, line: 10, baseType: !54, size: 128, align: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !17, line: 10, baseType: !49, size: 8, align: 8, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "ReadDir", file: !11, line: 10, baseType: !157, size: 64, align: 64, offset: 1536)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 10, size: 64, align: 8, elements: !159)
!159 = !{!160}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 10, baseType: !161, size: 64, align: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DISubroutineType(types: !163)
!163 = !{!164, !54}
!164 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{struct{*FileInfo,int,int},error}", file: !17, size: 320, align: 8, elements: !165)
!165 = !{!166, !236}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 10, baseType: !167, size: 192, align: 64)
!167 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*FileInfo,int,int}", file: !17, size: 192, align: 8, elements: !168)
!168 = !{!169, !75, !76}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !170, size: 64, align: 64)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileInfo", file: !11, line: 8, size: 128, align: 8, elements: !172)
!172 = !{!173, !101}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 8, baseType: !174, size: 64, align: 64)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)bool,*func(*void)Time,*func(*void)FileMode,*func(*void)string,*func(*void)int64,*func(*void)struct{*_type,*void}}", file: !17, size: 448, align: 8, elements: !176)
!176 = !{!19, !177, !181, !219, !224, !225, !229}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "IsDir", file: !17, line: 8, baseType: !178, size: 64, align: 64, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DISubroutineType(types: !180)
!180 = !{!49, !39}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ModTime", file: !17, line: 8, baseType: !182, size: 64, align: 64, offset: 128)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!185, !39}
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "Time", file: !11, line: 8, size: 192, align: 8, elements: !186)
!186 = !{!187, !189, !191}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "wall", file: !11, line: 8, baseType: !188, size: 64, align: 64)
!188 = !DIBasicType(name: "uint64", size: 64, encoding: DW_ATE_unsigned)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ext", file: !11, line: 8, baseType: !190, size: 64, align: 64, offset: 64)
!190 = !DIBasicType(name: "int64", size: 64, encoding: DW_ATE_signed)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "loc", file: !11, line: 8, baseType: !192, size: 64, align: 64, offset: 128)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", file: !11, line: 8, size: 704, align: 8, elements: !194)
!194 = !{!195, !196, !205, !216, !217, !218}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !11, line: 8, baseType: !54, size: 128, align: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "zone", file: !11, line: 8, baseType: !197, size: 192, align: 64, offset: 128)
!197 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zone,int,int}", file: !17, size: 192, align: 8, elements: !198)
!198 = !{!199, !75, !76}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !200, size: 64, align: 64)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zone", file: !11, line: 8, size: 256, align: 8, elements: !202)
!202 = !{!195, !203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !11, line: 8, baseType: !58, size: 64, align: 64, offset: 128)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "isDST", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 192)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "tx", file: !11, line: 8, baseType: !206, size: 192, align: 64, offset: 320)
!206 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zoneTrans,int,int}", file: !17, size: 192, align: 8, elements: !207)
!207 = !{!208, !75, !76}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !209, size: 64, align: 64)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zoneTrans", file: !11, line: 8, size: 128, align: 8, elements: !211)
!211 = !{!212, !213, !214, !215}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "when", file: !11, line: 8, baseType: !190, size: 64, align: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "index", file: !11, line: 8, baseType: !28, size: 8, align: 8, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "isstd", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 72)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "isutc", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 80)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "cacheStart", file: !11, line: 8, baseType: !190, size: 64, align: 64, offset: 512)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "cacheEnd", file: !11, line: 8, baseType: !190, size: 64, align: 64, offset: 576)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "cacheZone", file: !11, line: 8, baseType: !200, size: 64, align: 64, offset: 640)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", file: !17, line: 8, baseType: !220, size: 64, align: 64, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = !DISubroutineType(types: !222)
!222 = !{!223, !39}
!223 = !DIBasicType(name: "FileMode", size: 32, encoding: DW_ATE_unsigned)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !17, line: 8, baseType: !94, size: 64, align: 64, offset: 256)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "Size", file: !17, line: 8, baseType: !226, size: 64, align: 64, offset: 320)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = !DISubroutineType(types: !228)
!228 = !{!190, !39}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "Sys", file: !17, line: 8, baseType: !230, size: 64, align: 64, offset: 384)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = !DISubroutineType(types: !232)
!232 = !{!233, !39}
!233 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*void}", file: !17, size: 128, align: 8, elements: !234)
!234 = !{!92, !235}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !17, line: 1, baseType: !39, size: 64, align: 64, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 10, baseType: !86, size: 128, align: 64, offset: 192)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "OpenFile", file: !11, line: 10, baseType: !238, size: 64, align: 64, offset: 1600)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 10, size: 64, align: 8, elements: !240)
!240 = !{!241}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 10, baseType: !242, size: 64, align: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DISubroutineType(types: !244)
!244 = !{!245, !54}
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{ReadCloser,error}", file: !17, size: 256, align: 8, elements: !246)
!246 = !{!247, !259}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 10, baseType: !248, size: 128, align: 64)
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReadCloser", file: !11, line: 8, size: 128, align: 8, elements: !249)
!249 = !{!250, !101}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 8, baseType: !251, size: 64, align: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !17, size: 192, align: 8, elements: !253)
!253 = !{!19, !254, !258}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !17, line: 8, baseType: !255, size: 64, align: 64, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!86, !39}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !17, line: 8, baseType: !79, size: 64, align: 64, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 10, baseType: !86, size: 128, align: 64, offset: 128)
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "command_line_arguments.BindFile", linkageName: "command_line_arguments.BindFile", scope: !1, file: !262, line: 404, type: !54, isLocal: false, isDefinition: true)
!262 = !DIFile(filename: "bind.go", directory: ".")
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(name: "os.Stderr", linkageName: "os.Stderr", scope: !1, file: !11, line: 13, type: !265, isLocal: false, isDefinition: true)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", file: !11, line: 8, size: 64, align: 8, elements: !267)
!267 = !{!268}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "file", file: !11, line: 8, baseType: !269, size: 64, align: 64)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DICompositeType(tag: DW_TAG_structure_type, name: ".os.file", file: !11, line: 8, size: 640, align: 8, elements: !271)
!271 = !{!272, !302, !303, !311, !312}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "pfd", file: !11, line: 8, baseType: !273, size: 384, align: 64)
!273 = !DICompositeType(tag: DW_TAG_structure_type, name: "FD", file: !11, line: 8, size: 384, align: 8, elements: !274)
!274 = !{!275, !281, !282, !286, !297, !298, !299, !300, !301}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "fdmu", file: !11, line: 8, baseType: !276, size: 128, align: 64)
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: ".internal/poll.fdMutex", file: !11, line: 8, size: 128, align: 8, elements: !277)
!277 = !{!278, !279, !280}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !11, line: 8, baseType: !188, size: 64, align: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "rsema", file: !11, line: 8, baseType: !8, size: 32, align: 32, offset: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "wsema", file: !11, line: 8, baseType: !8, size: 32, align: 32, offset: 96)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "Sysfd", file: !11, line: 8, baseType: !58, size: 64, align: 64, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "pd", file: !11, line: 8, baseType: !283, size: 64, align: 64, offset: 192)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: ".internal/poll.pollDesc", file: !11, line: 8, size: 64, align: 8, elements: !284)
!284 = !{!285}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "runtimeCtx", file: !11, line: 8, baseType: !24, size: 64, align: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "iovecs", file: !11, line: 8, baseType: !287, size: 64, align: 64, offset: 256)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Iovec,int,int}", file: !17, size: 192, align: 8, elements: !289)
!289 = !{!290, !75, !76}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !291, size: 64, align: 64)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iovec", file: !11, line: 8, size: 128, align: 8, elements: !293)
!293 = !{!294, !295}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "Base", file: !11, line: 8, baseType: !51, size: 64, align: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "Len", file: !11, line: 8, baseType: !296, size: 64, align: 64, offset: 64)
!296 = !DIBasicType(name: "Iovec_len_t", size: 64, encoding: DW_ATE_unsigned)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "csema", file: !11, line: 8, baseType: !8, size: 32, align: 32, offset: 320)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "IsStream", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 352)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ZeroReadIsEOF", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 360)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "isFile", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 368)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "isBlocking", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 376)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !11, line: 8, baseType: !54, size: 128, align: 64, offset: 384)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "dirinfo", file: !11, line: 8, baseType: !304, size: 64, align: 64, offset: 512)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DICompositeType(tag: DW_TAG_structure_type, name: ".os.dirInfo", file: !11, line: 8, size: 256, align: 8, elements: !306)
!306 = !{!307, !308}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !11, line: 8, baseType: !98, size: 192, align: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "dir", file: !11, line: 8, baseType: !309, size: 64, align: 64, offset: 192)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DICompositeType(tag: DW_TAG_structure_type, name: "DIR", file: !11, line: 8, align: 8, elements: !3)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "nonblock", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 576)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "stdoutOrErr", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 584)
!313 = !DIGlobalVariableExpression(var: !314, expr: !DIExpression())
!314 = distinct !DIGlobalVariable(name: "os.Stdout", linkageName: "os.Stdout", scope: !1, file: !11, line: 13, type: !265, isLocal: false, isDefinition: true)
!315 = distinct !DISubprogram(name: "cmd.ValidateAndroidInstall", linkageName: "command_line_arguments.ValidateAndroidInstall", scope: null, file: !11, line: 45, type: !316, isLocal: false, isDefinition: true, scopeLine: 45, isOptimized: false, unit: !1, retainedNodes: !3)
!316 = !DISubroutineType(types: !317)
!317 = !{!86, !318}
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DICompositeType(tag: DW_TAG_structure_type, name: "Flags", file: !320, line: 23, size: 704, align: 8, elements: !321)
!320 = !DIFile(filename: "matcha.go", directory: ".")
!321 = !{!322, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "Logger", file: !320, line: 24, baseType: !323, size: 64, align: 64)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DICompositeType(tag: DW_TAG_structure_type, name: "Logger", file: !320, line: 12, size: 576, align: 8, elements: !325)
!325 = !{!326, !332, !333, !334, !335}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "mu", file: !320, line: 12, baseType: !327, size: 64, align: 32)
!327 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex", file: !11, line: 11, size: 64, align: 8, elements: !328)
!328 = !{!329, !331}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !11, line: 11, baseType: !330, size: 32, align: 32)
!330 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "sema", file: !11, line: 11, baseType: !8, size: 32, align: 32, offset: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", file: !320, line: 12, baseType: !54, size: 128, align: 64, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "flag", file: !320, line: 12, baseType: !58, size: 64, align: 64, offset: 192)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "out", file: !320, line: 12, baseType: !12, size: 128, align: 64, offset: 256)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !320, line: 12, baseType: !98, size: 192, align: 64, offset: 384)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "Threaded", file: !320, line: 25, baseType: !49, size: 8, align: 8, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "disablePrint", file: !320, line: 26, baseType: !49, size: 8, align: 8, offset: 72)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "BuildN", file: !320, line: 27, baseType: !49, size: 8, align: 8, offset: 80)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "BuildX", file: !320, line: 28, baseType: !49, size: 8, align: 8, offset: 88)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "BuildV", file: !320, line: 29, baseType: !49, size: 8, align: 8, offset: 96)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "BuildWork", file: !320, line: 30, baseType: !49, size: 8, align: 8, offset: 104)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "BuildGcflags", file: !320, line: 31, baseType: !54, size: 128, align: 64, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "BuildLdflags", file: !320, line: 32, baseType: !54, size: 128, align: 64, offset: 256)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "BuildO", file: !320, line: 33, baseType: !54, size: 128, align: 64, offset: 384)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "BuildBinary", file: !320, line: 34, baseType: !49, size: 8, align: 8, offset: 512)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "BuildTargets", file: !320, line: 35, baseType: !54, size: 128, align: 64, offset: 576)
!347 = !DILocalVariable(name: "f", arg: 1, scope: !315, file: !11, line: 45, type: !318)
!348 = !DILocation(line: 45, column: 29, scope: !315)
!349 = !DILocation(line: 55, column: 29, scope: !350, inlinedAt: !351)
!350 = distinct !DISubprogram(name: "cmd.validateAndroidInstall", scope: null, file: !11, line: 55, type: !316, isLocal: true, isDefinition: true, scopeLine: 55, isOptimized: false, unit: !1, retainedNodes: !3)
!351 = distinct !DILocation(line: 46, column: 9, scope: !352)
!352 = distinct !DILexicalBlock(scope: !315, file: !11, line: 45, column: 1)
!353 = !DILocalVariable(name: "f", arg: 1, scope: !350, file: !11, line: 55, type: !318)
!354 = !DILocation(line: 56, column: 15, scope: !355, inlinedAt: !351)
!355 = distinct !DILexicalBlock(scope: !350, file: !11, line: 56, column: 2)
!356 = !DILocalVariable(name: "err", scope: !355, file: !11, line: 56, type: !86)
!357 = !DILocation(line: 56, column: 5, scope: !350, inlinedAt: !351)
!358 = !DILocation(line: 56, column: 43, scope: !355, inlinedAt: !351)
!359 = !DILocation(line: 57, column: 3, scope: !355, inlinedAt: !351)
!360 = !DILocalVariable(name: "$ret1", scope: !350, file: !11, line: 55, type: !86)
!361 = !DILocation(line: 55, column: 39, scope: !350, inlinedAt: !351)
!362 = !DILocation(line: 59, column: 15, scope: !363, inlinedAt: !351)
!363 = distinct !DILexicalBlock(scope: !350, file: !11, line: 59, column: 2)
!364 = !DILocalVariable(name: "err", scope: !363, file: !11, line: 59, type: !86)
!365 = !DILocation(line: 59, column: 5, scope: !350, inlinedAt: !351)
!366 = !DILocation(line: 59, column: 31, scope: !363, inlinedAt: !351)
!367 = !DILocation(line: 60, column: 3, scope: !363, inlinedAt: !351)
!368 = !DILocation(line: 62, column: 15, scope: !369, inlinedAt: !351)
!369 = distinct !DILexicalBlock(scope: !350, file: !11, line: 62, column: 2)
!370 = !DILocalVariable(name: "err", scope: !369, file: !11, line: 62, type: !86)
!371 = !DILocation(line: 62, column: 5, scope: !350, inlinedAt: !351)
!372 = !DILocation(line: 62, column: 41, scope: !369, inlinedAt: !351)
!373 = !DILocation(line: 63, column: 21, scope: !369, inlinedAt: !351)
!374 = !DILocation(line: 63, column: 14, scope: !369, inlinedAt: !351)
!375 = !DILocation(line: 63, column: 3, scope: !369, inlinedAt: !351)
!376 = !DILocation(line: 65, column: 2, scope: !350, inlinedAt: !351)
!377 = !DILocation(line: 46, column: 9, scope: !352)
!378 = !DILocalVariable(name: "err", scope: !352, file: !11, line: 46, type: !86)
!379 = !DILocation(line: 46, column: 2, scope: !315)
!380 = !DILocation(line: 47, column: 9, scope: !352)
!381 = !DILocation(line: 48, column: 7, scope: !352)
!382 = !DILocalVariable(name: "$ret0", scope: !315, file: !11, line: 45, type: !86)
!383 = !DILocation(line: 45, column: 39, scope: !315)
!384 = !DILocation(line: 52, column: 2, scope: !352)
!385 = distinct !DISubprogram(name: "cmd.AndroidPlatformPath", linkageName: "command_line_arguments.AndroidPlatformPath", scope: null, file: !11, line: 83, type: !386, isLocal: false, isDefinition: true, scopeLine: 83, isOptimized: false, unit: !1, retainedNodes: !3)
!386 = !DISubroutineType(types: !387)
!387 = !{!388, !318}
!388 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{string,error}", file: !17, size: 256, align: 8, elements: !389)
!389 = !{!390, !391}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 83, baseType: !54, size: 128, align: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 83, baseType: !86, size: 128, align: 64, offset: 128)
!392 = !DILocalVariable(name: "f", arg: 1, scope: !385, file: !11, line: 83, type: !318)
!393 = !DILocation(line: 83, column: 26, scope: !385)
!394 = !DILocation(line: 84, column: 22, scope: !395)
!395 = distinct !DILexicalBlock(scope: !385, file: !11, line: 83, column: 1)
!396 = !DILocalVariable(name: "err", scope: !395, file: !11, line: 84, type: !86)
!397 = !DILocation(line: 84, column: 2, scope: !385)
!398 = !DILocation(line: 85, column: 9, scope: !395)
!399 = !DILocalVariable(name: "$ret4", scope: !385, file: !11, line: 83, type: !54)
!400 = !DILocation(line: 83, column: 37, scope: !385)
!401 = !DILocation(line: 86, column: 3, scope: !395)
!402 = !DILocalVariable(name: "$ret5", scope: !385, file: !11, line: 83, type: !86)
!403 = !DILocation(line: 83, column: 45, scope: !385)
!404 = !DILocation(line: 89, column: 27, scope: !395)
!405 = !DILocalVariable(name: "platformsDir", scope: !395, file: !11, line: 89, type: !54)
!406 = !DILocation(line: 89, column: 2, scope: !385)
!407 = !DILocation(line: 90, column: 6, scope: !395)
!408 = !DILocation(line: 90, column: 5, scope: !395)
!409 = !DILocation(line: 91, column: 25, scope: !395)
!410 = !DILocation(line: 91, column: 18, scope: !395)
!411 = !DILocation(line: 91, column: 3, scope: !395)
!412 = !DILocation(line: 94, column: 28, scope: !395)
!413 = !DILocalVariable(name: "platformsDirNames", scope: !395, file: !11, line: 94, type: !114)
!414 = !DILocation(line: 94, column: 2, scope: !385)
!415 = !DILocation(line: 95, column: 9, scope: !395)
!416 = !DILocation(line: 96, column: 3, scope: !395)
!417 = !DILocation(line: 98, column: 7, scope: !395)
!418 = !DILocation(line: 98, column: 5, scope: !395)
!419 = !DILocation(line: 99, column: 23, scope: !395)
!420 = !DILocalVariable(name: "apiPath", scope: !395, file: !11, line: 102, type: !54)
!421 = !DILocation(line: 102, column: 6, scope: !385)
!422 = !DILocalVariable(name: "apiVer", scope: !395, file: !11, line: 103, type: !58)
!423 = !DILocation(line: 103, column: 6, scope: !385)
!424 = !DILocation(line: 104, column: 2, scope: !425)
!425 = distinct !DILexicalBlock(scope: !395, file: !11, line: 104, column: 2)
!426 = !DILocalVariable(name: "i", scope: !425, file: !11, line: 104, type: !54)
!427 = !DILocation(line: 104, column: 6, scope: !395)
!428 = !DILocation(line: 105, column: 21, scope: !429)
!429 = distinct !DILexicalBlock(scope: !425, file: !11, line: 104, column: 38)
!430 = !DILocalVariable(name: "verStr", scope: !429, file: !11, line: 105, type: !54)
!431 = !DILocation(line: 105, column: 3, scope: !425)
!432 = !DILocation(line: 106, column: 8, scope: !429)
!433 = !DILocation(line: 110, column: 23, scope: !429)
!434 = !DILocalVariable(name: "ver", scope: !429, file: !11, line: 110, type: !58)
!435 = !DILocation(line: 110, column: 3, scope: !425)
!436 = !DILocalVariable(name: "err", scope: !429, file: !11, line: 110, type: !86)
!437 = !DILocation(line: 111, column: 10, scope: !429)
!438 = !DILocation(line: 111, column: 24, scope: !429)
!439 = !DILocation(line: 111, column: 47, scope: !429)
!440 = !DILocation(line: 115, column: 17, scope: !429)
!441 = !DILocalVariable(name: "p", scope: !429, file: !11, line: 115, type: !54)
!442 = !DILocation(line: 115, column: 3, scope: !425)
!443 = !DILocation(line: 116, column: 26, scope: !429)
!444 = !DILocation(line: 116, column: 7, scope: !429)
!445 = !DILocation(line: 116, column: 6, scope: !429)
!446 = !DILocation(line: 124, column: 12, scope: !395)
!447 = !DILocation(line: 125, column: 18, scope: !395)
!448 = !DILocation(line: 125, column: 3, scope: !395)
!449 = !DILocation(line: 127, column: 2, scope: !395)
!450 = distinct !DISubprogram(name: "cmd.NDKPath", linkageName: "command_line_arguments.NDKPath", scope: null, file: !11, line: 130, type: !386, isLocal: false, isDefinition: true, scopeLine: 130, isOptimized: false, unit: !1, retainedNodes: !3)
!451 = !DILocalVariable(name: "f", arg: 1, scope: !450, file: !11, line: 130, type: !318)
!452 = !DILocation(line: 130, column: 14, scope: !450)
!453 = !DILocation(line: 131, column: 15, scope: !454)
!454 = distinct !DILexicalBlock(scope: !450, file: !11, line: 130, column: 1)
!455 = !DILocalVariable(name: "err", scope: !454, file: !11, line: 131, type: !86)
!456 = !DILocation(line: 131, column: 2, scope: !450)
!457 = !DILocation(line: 132, column: 9, scope: !454)
!458 = !DILocalVariable(name: "$ret6", scope: !450, file: !11, line: 130, type: !54)
!459 = !DILocation(line: 130, column: 25, scope: !450)
!460 = !DILocation(line: 133, column: 3, scope: !454)
!461 = !DILocalVariable(name: "$ret7", scope: !450, file: !11, line: 130, type: !86)
!462 = !DILocation(line: 130, column: 33, scope: !450)
!463 = !DILocalVariable(name: "path", scope: !454, file: !11, line: 131, type: !54)
!464 = !DILocation(line: 136, column: 18, scope: !454)
!465 = !DILocation(line: 137, column: 6, scope: !454)
!466 = !DILocation(line: 137, column: 5, scope: !454)
!467 = !DILocation(line: 138, column: 18, scope: !454)
!468 = !DILocation(line: 138, column: 3, scope: !454)
!469 = !DILocation(line: 140, column: 2, scope: !454)
!470 = distinct !DISubprogram(name: "cmd.LookPath", linkageName: "command_line_arguments.LookPath", scope: null, file: !471, line: 245, type: !472, isLocal: false, isDefinition: true, scopeLine: 245, isOptimized: false, unit: !1, retainedNodes: !3)
!471 = !DIFile(filename: "commands.go", directory: ".")
!472 = !DISubroutineType(types: !473)
!473 = !{!388, !318, !54}
!474 = !DILocalVariable(name: "f", arg: 1, scope: !470, file: !471, line: 245, type: !318)
!475 = !DILocation(line: 245, column: 15, scope: !470)
!476 = !DILocalVariable(name: "file", arg: 2, scope: !470, file: !471, line: 245, type: !54)
!477 = !DILocation(line: 245, column: 25, scope: !470)
!478 = !DILocation(line: 246, column: 6, scope: !470)
!479 = !DILocation(line: 246, column: 2, scope: !470)
!480 = !DILocation(line: 247, column: 11, scope: !470)
!481 = !DILocation(line: 247, column: 4, scope: !470)
!482 = !DILocation(line: 249, column: 6, scope: !470)
!483 = !DILocation(line: 249, column: 2, scope: !470)
!484 = !DILocation(line: 250, column: 15, scope: !470)
!485 = !DILocalVariable(name: "$ret48", scope: !470, file: !471, line: 245, type: !54)
!486 = !DILocation(line: 245, column: 39, scope: !470)
!487 = !DILocation(line: 250, column: 3, scope: !470)
!488 = !DILocation(line: 252, column: 2, scope: !470)
!489 = distinct !DISubprogram(name: "cmd.AndroidSDKPath", linkageName: "command_line_arguments.AndroidSDKPath", scope: null, file: !11, line: 68, type: !386, isLocal: false, isDefinition: true, scopeLine: 68, isOptimized: false, unit: !1, retainedNodes: !3)
!490 = !DILocalVariable(name: "f", arg: 1, scope: !489, file: !11, line: 68, type: !318)
!491 = !DILocation(line: 68, column: 21, scope: !489)
!492 = !DILocation(line: 69, column: 10, scope: !493)
!493 = distinct !DILexicalBlock(scope: !489, file: !11, line: 68, column: 1)
!494 = !DILocalVariable(name: "path", scope: !493, file: !11, line: 69, type: !54)
!495 = !DILocation(line: 69, column: 2, scope: !489)
!496 = !DILocation(line: 70, column: 10, scope: !493)
!497 = !DILocation(line: 71, column: 25, scope: !493)
!498 = !DILocation(line: 71, column: 18, scope: !493)
!499 = !DILocalVariable(name: "$ret2", scope: !489, file: !11, line: 68, type: !54)
!500 = !DILocation(line: 68, column: 32, scope: !489)
!501 = !DILocalVariable(name: "$ret3", scope: !489, file: !11, line: 68, type: !86)
!502 = !DILocation(line: 68, column: 40, scope: !489)
!503 = !DILocation(line: 71, column: 3, scope: !493)
!504 = !DILocation(line: 74, column: 6, scope: !493)
!505 = !DILocation(line: 74, column: 5, scope: !493)
!506 = !DILocation(line: 75, column: 25, scope: !493)
!507 = !DILocation(line: 75, column: 18, scope: !493)
!508 = !DILocation(line: 75, column: 3, scope: !493)
!509 = !DILocation(line: 77, column: 2, scope: !493)
!510 = distinct !DISubprogram(name: "cmd.GetEnv", linkageName: "command_line_arguments.GetEnv", scope: null, file: !471, line: 255, type: !511, isLocal: false, isDefinition: true, scopeLine: 255, isOptimized: false, unit: !1, retainedNodes: !3)
!511 = !DISubroutineType(types: !512)
!512 = !{!54, !318, !54}
!513 = !DILocalVariable(name: "f", arg: 1, scope: !510, file: !471, line: 255, type: !318)
!514 = !DILocation(line: 255, column: 13, scope: !510)
!515 = !DILocalVariable(name: "key", arg: 2, scope: !510, file: !471, line: 255, type: !54)
!516 = !DILocation(line: 255, column: 23, scope: !510)
!517 = !DILocation(line: 256, column: 6, scope: !510)
!518 = !DILocation(line: 256, column: 2, scope: !510)
!519 = !DILocation(line: 257, column: 11, scope: !510)
!520 = !DILocation(line: 257, column: 4, scope: !510)
!521 = !DILocation(line: 259, column: 6, scope: !510)
!522 = !DILocation(line: 259, column: 2, scope: !510)
!523 = !DILocation(line: 260, column: 13, scope: !510)
!524 = !DILocation(line: 260, column: 3, scope: !510)
!525 = !DILocation(line: 262, column: 10, scope: !510)
!526 = !DILocation(line: 262, column: 2, scope: !510)
!527 = distinct !DISubprogram(name: "cmd.IsDir", linkageName: "command_line_arguments.IsDir", scope: null, file: !471, line: 293, type: !528, isLocal: false, isDefinition: true, scopeLine: 293, isOptimized: false, unit: !1, retainedNodes: !3)
!528 = !DISubroutineType(types: !529)
!529 = !{!49, !318, !54}
!530 = !DILocalVariable(name: "f", arg: 1, scope: !527, file: !471, line: 293, type: !318)
!531 = !DILocation(line: 293, column: 12, scope: !527)
!532 = !DILocalVariable(name: "path", arg: 2, scope: !527, file: !471, line: 293, type: !54)
!533 = !DILocation(line: 293, column: 22, scope: !527)
!534 = !DILocalVariable(name: "$ret54", scope: !527, file: !471, line: 293, type: !49)
!535 = !DILocation(line: 293, column: 35, scope: !527)
!536 = !DILocation(line: 294, column: 6, scope: !527)
!537 = !DILocation(line: 294, column: 2, scope: !527)
!538 = !DILocation(line: 295, column: 11, scope: !527)
!539 = !DILocation(line: 295, column: 4, scope: !527)
!540 = !DILocation(line: 297, column: 6, scope: !527)
!541 = !DILocation(line: 297, column: 2, scope: !527)
!542 = !DILocation(line: 298, column: 20, scope: !543)
!543 = distinct !DILexicalBlock(scope: !527, file: !471, line: 298, column: 3)
!544 = !DILocalVariable(name: "err", scope: !543, file: !471, line: 298, type: !86)
!545 = !DILocation(line: 298, column: 6, scope: !527)
!546 = !DILocation(line: 298, column: 36, scope: !543)
!547 = !DILocation(line: 302, column: 2, scope: !527)
!548 = !DILocalVariable(name: "st", scope: !543, file: !471, line: 298, type: !171)
!549 = !DILocation(line: 298, column: 49, scope: !543)
!550 = !DILocation(line: 298, column: 46, scope: !543)
!551 = distinct !DISubprogram(name: "cmd.ReadDirNames", linkageName: "command_line_arguments.ReadDirNames", scope: null, file: !471, line: 265, type: !552, isLocal: false, isDefinition: true, scopeLine: 265, isOptimized: false, unit: !1, retainedNodes: !3)
!552 = !DISubroutineType(types: !553)
!553 = !{!554, !318, !54}
!554 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{struct{*string,int,int},error}", file: !17, size: 320, align: 8, elements: !555)
!555 = !{!556, !557}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 265, baseType: !114, size: 192, align: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 265, baseType: !86, size: 128, align: 64, offset: 192)
!558 = !DILocalVariable(name: "f", arg: 1, scope: !551, file: !471, line: 265, type: !318)
!559 = !DILocation(line: 265, column: 19, scope: !551)
!560 = !DILocalVariable(name: "path", arg: 2, scope: !551, file: !471, line: 265, type: !54)
!561 = !DILocation(line: 265, column: 29, scope: !551)
!562 = !DILocalVariable(name: "$ret51", scope: !551, file: !471, line: 265, type: !114)
!563 = !DILocation(line: 265, column: 43, scope: !551)
!564 = !DILocalVariable(name: "$ret52", scope: !551, file: !471, line: 265, type: !86)
!565 = !DILocation(line: 265, column: 53, scope: !551)
!566 = !DILocation(line: 266, column: 6, scope: !551)
!567 = !DILocation(line: 279, column: 1, scope: !551)
!568 = !DILocation(line: 266, column: 2, scope: !551)
!569 = !DILocation(line: 267, column: 11, scope: !551)
!570 = !DILocation(line: 269, column: 6, scope: !551)
!571 = !DILocation(line: 267, column: 4, scope: !551)
!572 = !DILocation(line: 269, column: 2, scope: !551)
!573 = !DILocation(line: 270, column: 19, scope: !574)
!574 = distinct !DILexicalBlock(scope: !551, file: !471, line: 269, column: 19)
!575 = !DILocation(line: 278, column: 9, scope: !551)
!576 = !DILocalVariable(name: "file", scope: !574, file: !471, line: 270, type: !265)
!577 = !DILocation(line: 270, column: 3, scope: !551)
!578 = !DILocalVariable(name: "err", scope: !574, file: !471, line: 270, type: !86)
!579 = !DILocation(line: 271, column: 10, scope: !574)
!580 = !DILocation(line: 272, column: 11, scope: !574)
!581 = !DILocation(line: 274, column: 3, scope: !574)
!582 = !DILocation(line: 276, column: 14, scope: !574)
!583 = !DILocation(line: 272, column: 4, scope: !551)
!584 = distinct !DISubprogram(name: "cmd.ShouldRun..1command_line_arguments.Flags", linkageName: "command_line_arguments.Flags.ShouldRun", scope: null, file: !320, line: 42, type: !585, isLocal: false, isDefinition: true, scopeLine: 42, isOptimized: false, unit: !1, retainedNodes: !3)
!585 = !DISubroutineType(types: !586)
!586 = !{!49, !318, !318}
!587 = !DILocalVariable(name: "f", arg: 1, scope: !584, file: !320, line: 42, type: !318)
!588 = !DILocation(line: 42, column: 1, scope: !584)
!589 = !DILocalVariable(name: "$ret70", scope: !584, file: !320, line: 42, type: !49)
!590 = !DILocation(line: 42, column: 29, scope: !584)
!591 = !DILocation(line: 43, column: 11, scope: !584)
!592 = !DILocation(line: 43, column: 9, scope: !584)
!593 = !DILocation(line: 43, column: 2, scope: !584)
!594 = distinct !DISubprogram(name: "cmd.IsFile", linkageName: "command_line_arguments.IsFile", scope: null, file: !471, line: 281, type: !528, isLocal: false, isDefinition: true, scopeLine: 281, isOptimized: false, unit: !1, retainedNodes: !3)
!595 = !DILocalVariable(name: "f", arg: 1, scope: !594, file: !471, line: 281, type: !318)
!596 = !DILocation(line: 281, column: 13, scope: !594)
!597 = !DILocalVariable(name: "path", arg: 2, scope: !594, file: !471, line: 281, type: !54)
!598 = !DILocation(line: 281, column: 23, scope: !594)
!599 = !DILocalVariable(name: "$ret53", scope: !594, file: !471, line: 281, type: !49)
!600 = !DILocation(line: 281, column: 36, scope: !594)
!601 = !DILocation(line: 282, column: 6, scope: !594)
!602 = !DILocation(line: 282, column: 2, scope: !594)
!603 = !DILocation(line: 283, column: 11, scope: !594)
!604 = !DILocation(line: 283, column: 4, scope: !594)
!605 = !DILocation(line: 285, column: 6, scope: !594)
!606 = !DILocation(line: 285, column: 2, scope: !594)
!607 = !DILocation(line: 286, column: 20, scope: !608)
!608 = distinct !DILexicalBlock(scope: !594, file: !471, line: 286, column: 3)
!609 = !DILocalVariable(name: "err", scope: !608, file: !471, line: 286, type: !86)
!610 = !DILocation(line: 286, column: 6, scope: !594)
!611 = !DILocation(line: 286, column: 36, scope: !608)
!612 = !DILocation(line: 290, column: 2, scope: !594)
!613 = !DILocalVariable(name: "st", scope: !608, file: !471, line: 286, type: !171)
!614 = !DILocation(line: 286, column: 48, scope: !608)
!615 = distinct !DISubprogram(name: "cmd.AndroidEnv", linkageName: "command_line_arguments.AndroidEnv", scope: null, file: !11, line: 143, type: !552, isLocal: false, isDefinition: true, scopeLine: 143, isOptimized: false, unit: !1, retainedNodes: !3)
!616 = !DILocalVariable(name: "f", arg: 1, scope: !615, file: !11, line: 143, type: !318)
!617 = !DILocation(line: 143, column: 17, scope: !615)
!618 = !DILocalVariable(name: "goarch", arg: 2, scope: !615, file: !11, line: 143, type: !54)
!619 = !DILocation(line: 143, column: 27, scope: !615)
!620 = !DILocation(line: 183, column: 23, scope: !621, inlinedAt: !638)
!621 = distinct !DISubprogram(name: "cmd.toolchainForArch", scope: null, file: !11, line: 183, type: !622, isLocal: true, isDefinition: true, scopeLine: 183, isOptimized: false, unit: !1, retainedNodes: !3)
!622 = !DISubroutineType(types: !623)
!623 = !{!624, !318, !54}
!624 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.command-line-arguments.ndkToolchain,error}", file: !17, size: 192, align: 8, elements: !625)
!625 = !{!626, !637}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 183, baseType: !627, size: 64, align: 64)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.ndkToolchain", file: !11, line: 172, size: 896, align: 8, elements: !629)
!629 = !{!630, !631, !632, !633, !634, !635, !636}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "arch", file: !11, line: 173, baseType: !54, size: 128, align: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "api", file: !11, line: 174, baseType: !54, size: 128, align: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "gcc", file: !11, line: 175, baseType: !54, size: 128, align: 64, offset: 256)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "triple", file: !11, line: 176, baseType: !54, size: 128, align: 64, offset: 384)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "clangTriple", file: !11, line: 177, baseType: !54, size: 128, align: 64, offset: 512)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "ndkRoot", file: !11, line: 179, baseType: !54, size: 128, align: 64, offset: 640)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "hostTag", file: !11, line: 180, baseType: !54, size: 128, align: 64, offset: 768)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 183, baseType: !86, size: 128, align: 64, offset: 64)
!638 = distinct !DILocation(line: 144, column: 13, scope: !639)
!639 = distinct !DILexicalBlock(scope: !615, file: !11, line: 143, column: 1)
!640 = !DILocalVariable(name: "f", arg: 1, scope: !621, file: !11, line: 183, type: !318)
!641 = !DILocalVariable(name: "goarch", arg: 2, scope: !621, file: !11, line: 183, type: !54)
!642 = !DILocation(line: 183, column: 33, scope: !621, inlinedAt: !638)
!643 = !DILocalVariable(name: "$ret10", scope: !621, file: !11, line: 183, type: !627)
!644 = !DILocation(line: 183, column: 49, scope: !621, inlinedAt: !638)
!645 = !DILocation(line: 185, column: 10, scope: !646, inlinedAt: !638)
!646 = distinct !DILexicalBlock(scope: !621, file: !11, line: 183, column: 1)
!647 = !DILocation(line: 192, column: 12, scope: !646, inlinedAt: !638)
!648 = !DILocation(line: 199, column: 10, scope: !646, inlinedAt: !638)
!649 = !DILocation(line: 206, column: 12, scope: !646, inlinedAt: !638)
!650 = !DILocation(line: 184, column: 7, scope: !646, inlinedAt: !638)
!651 = !DILocalVariable(name: "m", scope: !646, file: !11, line: 184, type: !652)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DICompositeType(tag: DW_TAG_structure_type, name: "runtime.hmap", file: !7, line: 1, size: 384, align: 8, elements: !654)
!654 = !{!655, !656, !657, !658, !660, !661, !662, !663, !664}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "count", file: !7, line: 1, baseType: !58, size: 64, align: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "flags", file: !7, line: 1, baseType: !28, size: 8, align: 8, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "B", file: !7, line: 1, baseType: !28, size: 8, align: 8, offset: 72)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "noverflow", file: !7, line: 1, baseType: !659, size: 16, align: 16, offset: 80)
!659 = !DIBasicType(name: "uint16", size: 16, encoding: DW_ATE_unsigned)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "hash0", file: !7, line: 1, baseType: !8, size: 32, align: 32, offset: 96)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 128)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "oldbuckets", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "nevacuate", file: !7, line: 1, baseType: !24, size: 64, align: 64, offset: 256)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "extra", file: !7, line: 1, baseType: !39, size: 64, align: 64, offset: 320)
!665 = !DILocation(line: 184, column: 2, scope: !621, inlinedAt: !638)
!666 = !DILocalVariable(name: "toolchain", scope: !646, file: !11, line: 214, type: !627)
!667 = !DILocation(line: 214, column: 2, scope: !621, inlinedAt: !638)
!668 = !DILocalVariable(name: "ok", scope: !646, file: !11, line: 214, type: !49)
!669 = !DILocation(line: 214, column: 2, scope: !646, inlinedAt: !638)
!670 = !DILocation(line: 215, column: 5, scope: !646, inlinedAt: !638)
!671 = !DILocation(line: 216, column: 19, scope: !646, inlinedAt: !638)
!672 = !DILocalVariable(name: "$ret11", scope: !621, file: !11, line: 183, type: !86)
!673 = !DILocation(line: 183, column: 64, scope: !621, inlinedAt: !638)
!674 = !DILocation(line: 216, column: 3, scope: !646, inlinedAt: !638)
!675 = !DILocation(line: 219, column: 18, scope: !646, inlinedAt: !638)
!676 = !DILocalVariable(name: "err", scope: !646, file: !11, line: 219, type: !86)
!677 = !DILocation(line: 219, column: 2, scope: !621, inlinedAt: !638)
!678 = !DILocation(line: 220, column: 9, scope: !646, inlinedAt: !638)
!679 = !DILocation(line: 221, column: 3, scope: !646, inlinedAt: !638)
!680 = !DILocation(line: 223, column: 11, scope: !646, inlinedAt: !638)
!681 = !DILocation(line: 223, column: 20, scope: !646, inlinedAt: !638)
!682 = !DILocation(line: 277, column: 3, scope: !683, inlinedAt: !687)
!683 = distinct !DILexicalBlock(scope: !684, file: !11, line: 274, column: 4)
!684 = distinct !DISubprogram(name: "cmd.ndkHostTag", scope: null, file: !11, line: 271, type: !685, isLocal: true, isDefinition: true, scopeLine: 271, isOptimized: false, unit: !1, retainedNodes: !3)
!685 = !DISubroutineType(types: !686)
!686 = !{!388}
!687 = distinct !DILocation(line: 225, column: 18, scope: !646, inlinedAt: !638)
!688 = !DILocation(line: 278, column: 9, scope: !683, inlinedAt: !687)
!689 = !DILocation(line: 279, column: 3, scope: !683, inlinedAt: !687)
!690 = !DILocation(line: 284, column: 23, scope: !683, inlinedAt: !687)
!691 = !DILocalVariable(name: "$ret19", scope: !684, file: !11, line: 271, type: !54)
!692 = !DILocation(line: 271, column: 20, scope: !684, inlinedAt: !687)
!693 = !DILocalVariable(name: "$ret20", scope: !684, file: !11, line: 271, type: !86)
!694 = !DILocation(line: 271, column: 28, scope: !684, inlinedAt: !687)
!695 = !DILocation(line: 284, column: 3, scope: !683, inlinedAt: !687)
!696 = !DILocation(line: 280, column: 9, scope: !683, inlinedAt: !687)
!697 = !DILocation(line: 282, column: 19, scope: !683, inlinedAt: !687)
!698 = !DILocation(line: 282, column: 4, scope: !683, inlinedAt: !687)
!699 = !DILocation(line: 226, column: 9, scope: !646, inlinedAt: !638)
!700 = !DILocation(line: 227, column: 3, scope: !646, inlinedAt: !638)
!701 = !DILocalVariable(name: "tc", scope: !639, file: !11, line: 144, type: !627)
!702 = !DILocation(line: 144, column: 2, scope: !615)
!703 = !DILocation(line: 229, column: 11, scope: !646, inlinedAt: !638)
!704 = !DILocation(line: 229, column: 20, scope: !646, inlinedAt: !638)
!705 = !DILocation(line: 0, scope: !639)
!706 = !DILocation(line: 145, column: 9, scope: !639)
!707 = !DILocation(line: 144, column: 13, scope: !639)
!708 = !DILocalVariable(name: "err", scope: !639, file: !11, line: 144, type: !86)
!709 = !DILocalVariable(name: "$ret8", scope: !615, file: !11, line: 143, type: !114)
!710 = !DILocation(line: 143, column: 43, scope: !615)
!711 = !DILocalVariable(name: "$ret9", scope: !615, file: !11, line: 143, type: !86)
!712 = !DILocation(line: 143, column: 53, scope: !615)
!713 = !DILocation(line: 146, column: 3, scope: !639)
!714 = !DILocation(line: 148, column: 73, scope: !639)
!715 = !DILocation(line: 148, column: 57, scope: !639)
!716 = !DILocation(line: 230, column: 2, scope: !646, inlinedAt: !638)
!717 = !DILocation(line: 148, column: 15, scope: !639)
!718 = !DILocalVariable(name: "flags", scope: !639, file: !11, line: 148, type: !54)
!719 = !DILocation(line: 148, column: 2, scope: !615)
!720 = !DILocation(line: 149, column: 85, scope: !639)
!721 = !DILocation(line: 149, column: 100, scope: !639)
!722 = !DILocation(line: 149, column: 114, scope: !639)
!723 = !DILocation(line: 149, column: 16, scope: !639)
!724 = !DILocalVariable(name: "cflags", scope: !639, file: !11, line: 149, type: !54)
!725 = !DILocation(line: 149, column: 2, scope: !615)
!726 = !DILocation(line: 150, column: 53, scope: !639)
!727 = !DILocation(line: 150, column: 17, scope: !639)
!728 = !DILocalVariable(name: "ldflags", scope: !639, file: !11, line: 150, type: !54)
!729 = !DILocation(line: 150, column: 2, scope: !615)
!730 = !DILocation(line: 154, column: 13, scope: !639)
!731 = !DILocation(line: 155, column: 14, scope: !639)
!732 = !DILocation(line: 153, column: 10, scope: !639)
!733 = !DILocation(line: 154, column: 6, scope: !639)
!734 = !DILocation(line: 155, column: 7, scope: !639)
!735 = !DILocation(line: 156, column: 14, scope: !639)
!736 = !DILocation(line: 157, column: 16, scope: !639)
!737 = !DILocation(line: 158, column: 15, scope: !639)
!738 = !DILocation(line: 151, column: 9, scope: !639)
!739 = !DILocalVariable(name: "env", scope: !639, file: !11, line: 151, type: !114)
!740 = !DILocation(line: 151, column: 2, scope: !615)
!741 = !DILocation(line: 161, column: 12, scope: !639)
!742 = !DILocation(line: 162, column: 9, scope: !639)
!743 = !DILocation(line: 164, column: 2, scope: !639)
!744 = !DILocation(line: 162, column: 7, scope: !639)
!745 = distinct !DISubprogram(name: "cmd.gccToolchain..1command_line_arguments.ndkToolchain", linkageName: "command_line_arguments.ndkToolchain.gccToolchain", scope: null, file: !11, line: 233, type: !746, isLocal: false, isDefinition: true, scopeLine: 233, isOptimized: false, unit: !1, retainedNodes: !3)
!746 = !DISubroutineType(types: !747)
!747 = !{!54, !627, !627}
!748 = !DILocalVariable(name: "tc", arg: 1, scope: !745, file: !11, line: 233, type: !627)
!749 = !DILocation(line: 233, column: 1, scope: !745)
!750 = !DILocation(line: 234, column: 25, scope: !745)
!751 = !DILocation(line: 234, column: 51, scope: !745)
!752 = !DILocation(line: 234, column: 71, scope: !745)
!753 = !DILocation(line: 234, column: 18, scope: !745)
!754 = !DILocation(line: 234, column: 2, scope: !745)
!755 = distinct !DISubprogram(name: "cmd.csysroot..1command_line_arguments.ndkToolchain", linkageName: "command_line_arguments.ndkToolchain.csysroot", scope: null, file: !11, line: 249, type: !746, isLocal: false, isDefinition: true, scopeLine: 249, isOptimized: false, unit: !1, retainedNodes: !3)
!756 = !DILocalVariable(name: "tc", arg: 1, scope: !755, file: !11, line: 249, type: !627)
!757 = !DILocation(line: 249, column: 1, scope: !755)
!758 = !DILocation(line: 250, column: 25, scope: !755)
!759 = !DILocation(line: 250, column: 18, scope: !755)
!760 = !DILocation(line: 250, column: 2, scope: !755)
!761 = distinct !DISubprogram(name: "cmd.isystem..1command_line_arguments.ndkToolchain", linkageName: "command_line_arguments.ndkToolchain.isystem", scope: null, file: !11, line: 245, type: !746, isLocal: false, isDefinition: true, scopeLine: 245, isOptimized: false, unit: !1, retainedNodes: !3)
!762 = !DILocalVariable(name: "tc", arg: 1, scope: !761, file: !11, line: 245, type: !627)
!763 = !DILocation(line: 245, column: 1, scope: !761)
!764 = !DILocation(line: 246, column: 25, scope: !761)
!765 = !DILocation(line: 246, column: 66, scope: !761)
!766 = !DILocation(line: 246, column: 18, scope: !761)
!767 = !DILocation(line: 246, column: 2, scope: !761)
!768 = distinct !DISubprogram(name: "cmd.ldsysroot..1command_line_arguments.ndkToolchain", linkageName: "command_line_arguments.ndkToolchain.ldsysroot", scope: null, file: !11, line: 253, type: !746, isLocal: false, isDefinition: true, scopeLine: 253, isOptimized: false, unit: !1, retainedNodes: !3)
!769 = !DILocalVariable(name: "tc", arg: 1, scope: !768, file: !11, line: 253, type: !627)
!770 = !DILocation(line: 253, column: 1, scope: !768)
!771 = !DILocation(line: 254, column: 61, scope: !768)
!772 = !DILocation(line: 254, column: 25, scope: !768)
!773 = !DILocation(line: 254, column: 56, scope: !768)
!774 = !DILocation(line: 254, column: 72, scope: !768)
!775 = !DILocation(line: 254, column: 18, scope: !768)
!776 = !DILocation(line: 254, column: 2, scope: !768)
!777 = distinct !DISubprogram(name: "cmd.clangPath..1command_line_arguments.ndkToolchain", linkageName: "command_line_arguments.ndkToolchain.clangPath", scope: null, file: !11, line: 237, type: !746, isLocal: false, isDefinition: true, scopeLine: 237, isOptimized: false, unit: !1, retainedNodes: !3)
!778 = !DILocalVariable(name: "tc", arg: 1, scope: !777, file: !11, line: 237, type: !627)
!779 = !DILocation(line: 237, column: 1, scope: !777)
!780 = !DILocation(line: 238, column: 25, scope: !777)
!781 = !DILocation(line: 238, column: 71, scope: !777)
!782 = !DILocation(line: 238, column: 18, scope: !777)
!783 = !DILocation(line: 238, column: 2, scope: !777)
!784 = distinct !DISubprogram(name: "cmd.clangppPath..1command_line_arguments.ndkToolchain", linkageName: "command_line_arguments.ndkToolchain.clangppPath", scope: null, file: !11, line: 241, type: !746, isLocal: false, isDefinition: true, scopeLine: 241, isOptimized: false, unit: !1, retainedNodes: !3)
!785 = !DILocalVariable(name: "tc", arg: 1, scope: !784, file: !11, line: 241, type: !627)
!786 = !DILocation(line: 241, column: 1, scope: !784)
!787 = !DILocation(line: 242, column: 25, scope: !784)
!788 = !DILocation(line: 242, column: 71, scope: !784)
!789 = !DILocation(line: 242, column: 18, scope: !784)
!790 = !DILocation(line: 242, column: 2, scope: !784)
!791 = distinct !DISubprogram(name: "cmd.command_line_arguments.ndkToolchain..hash", linkageName: "command_line_arguments.command_line_arguments.ndkToolchain..hash", scope: null, file: !7, line: 1, type: !37, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!792 = !DILocalVariable(name: "key", arg: 1, scope: !791, file: !7, line: 1, type: !39)
!793 = !DILocation(line: 1, column: 1, scope: !791)
!794 = !DILocalVariable(name: "seed", arg: 2, scope: !791, file: !7, line: 1, type: !24)
!795 = !DILocalVariable(name: "$ret92", scope: !791, file: !7, line: 1, type: !24)
!796 = distinct !DISubprogram(name: "cmd.command_line_arguments.ndkToolchain..eq", linkageName: "command_line_arguments.command_line_arguments.ndkToolchain..eq", scope: null, file: !7, line: 1, type: !47, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!797 = !DILocalVariable(name: "key1", arg: 1, scope: !796, file: !7, line: 1, type: !39)
!798 = !DILocation(line: 1, column: 1, scope: !796)
!799 = !DILocalVariable(name: "key2", arg: 2, scope: !796, file: !7, line: 1, type: !39)
!800 = !DILocalVariable(name: "$ret93", scope: !796, file: !7, line: 1, type: !49)
!801 = distinct !DISubprogram(name: "cmd.GetAndroidABI", linkageName: "command_line_arguments.GetAndroidABI", scope: null, file: !11, line: 257, type: !802, isLocal: false, isDefinition: true, scopeLine: 257, isOptimized: false, unit: !1, retainedNodes: !3)
!802 = !DISubroutineType(types: !803)
!803 = !{!54, !54}
!804 = !DILocalVariable(name: "arch", arg: 1, scope: !801, file: !11, line: 257, type: !54)
!805 = !DILocation(line: 257, column: 20, scope: !801)
!806 = !DILocation(line: 259, column: 2, scope: !801)
!807 = !DILocalVariable(name: "$ret18", scope: !801, file: !11, line: 257, type: !54)
!808 = !DILocation(line: 257, column: 33, scope: !801)
!809 = !DILocation(line: 260, column: 3, scope: !801)
!810 = !DILocation(line: 261, column: 2, scope: !801)
!811 = !DILocation(line: 263, column: 2, scope: !801)
!812 = !DILocation(line: 265, column: 2, scope: !801)
!813 = distinct !DISubprogram(name: "cmd.BuildAAR", linkageName: "command_line_arguments.BuildAAR", scope: null, file: !11, line: 324, type: !814, isLocal: false, isDefinition: true, scopeLine: 324, isOptimized: false, unit: !1, retainedNodes: !3)
!814 = !DISubroutineType(types: !815)
!815 = !{!86, !318, !54, !816, !114, !54, !54}
!816 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**Package,int,int}", file: !17, size: 192, align: 8, elements: !817)
!817 = !{!818, !75, !76}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !819, size: 64, align: 64)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DICompositeType(tag: DW_TAG_structure_type, name: "Package", file: !11, line: 10, size: 6656, align: 8, elements: !822)
!822 = !{!823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "Dir", file: !11, line: 10, baseType: !54, size: 128, align: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "ImportComment", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 256)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "Doc", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 384)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "ImportPath", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 512)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "Root", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 640)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "SrcRoot", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 768)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "PkgRoot", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 896)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "PkgTargetRoot", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 1024)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "BinDir", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 1152)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "Goroot", file: !11, line: 10, baseType: !49, size: 8, align: 8, offset: 1280)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "PkgObj", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 1344)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AllTags", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 1472)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "ConflictDir", file: !11, line: 10, baseType: !54, size: 128, align: 64, offset: 1664)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "BinaryOnly", file: !11, line: 10, baseType: !49, size: 8, align: 8, offset: 1792)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "GoFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 1856)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "CgoFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 2048)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "IgnoredGoFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 2240)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "InvalidGoFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 2432)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "CFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 2624)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "CXXFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 2816)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "MFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 3008)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "HFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 3200)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "FFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 3392)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "SFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 3584)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "SwigFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 3776)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "SwigCXXFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 3968)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "SysoFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 4160)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "CgoCFLAGS", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 4352)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "CgoCPPFLAGS", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 4544)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "CgoCXXFLAGS", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 4736)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "CgoFFLAGS", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 4928)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "CgoLDFLAGS", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 5120)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "CgoPkgConfig", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 5312)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "Imports", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 5504)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ImportPos", file: !11, line: 10, baseType: !652, size: 64, align: 64, offset: 5696)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "TestGoFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 5760)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "TestImports", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 5952)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "TestImportPos", file: !11, line: 10, baseType: !652, size: 64, align: 64, offset: 6144)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "XTestGoFiles", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 6208)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "XTestImports", file: !11, line: 10, baseType: !114, size: 192, align: 64, offset: 6400)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "XTestImportPos", file: !11, line: 10, baseType: !652, size: 64, align: 64, offset: 6592)
!865 = !DILocalVariable(name: "aarPath", arg: 6, scope: !813, file: !11, line: 324, type: !54)
!866 = !DILocation(line: 324, column: 105, scope: !813)
!867 = !DILocalVariable(name: "androidArchs", arg: 4, scope: !813, file: !11, line: 324, type: !114)
!868 = !DILocation(line: 324, column: 67, scope: !813)
!869 = !DILocalVariable(name: "pkgs", arg: 3, scope: !813, file: !11, line: 324, type: !816)
!870 = !DILocation(line: 324, column: 44, scope: !813)
!871 = !DILocalVariable(name: "f", arg: 1, scope: !813, file: !11, line: 324, type: !318)
!872 = !DILocation(line: 324, column: 15, scope: !813)
!873 = !DILocalVariable(name: "androidDir", arg: 2, scope: !813, file: !11, line: 324, type: !54)
!874 = !DILocation(line: 324, column: 25, scope: !813)
!875 = !DILocalVariable(name: "aarw", scope: !876, file: !11, line: 343, type: !877)
!876 = distinct !DILexicalBlock(scope: !813, file: !11, line: 324, column: 1)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DICompositeType(tag: DW_TAG_structure_type, name: "Writer", file: !11, line: 8, size: 640, align: 8, elements: !879)
!879 = !{!880, !886, !916, !958, !959, !960, !961}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "cw", file: !11, line: 8, baseType: !881, size: 64, align: 64)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: ".archive/zip.countWriter", file: !11, line: 8, size: 192, align: 8, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !11, line: 8, baseType: !12, size: 128, align: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "count", file: !11, line: 8, baseType: !190, size: 64, align: 64, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "dir", file: !11, line: 8, baseType: !887, size: 192, align: 64, offset: 64)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**.archive/zip.header,int,int}", file: !17, size: 192, align: 8, elements: !888)
!888 = !{!889, !75, !76}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !890, size: 64, align: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DICompositeType(tag: DW_TAG_structure_type, name: ".archive/zip.header", file: !11, line: 8, size: 128, align: 8, elements: !893)
!893 = !{!894, !915}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "FileHeader", file: !11, line: 8, baseType: !895, size: 64, align: 64)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileHeader", file: !11, line: 8, size: 1088, align: 8, elements: !897)
!897 = !{!898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !11, line: 8, baseType: !54, size: 128, align: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "Comment", file: !11, line: 8, baseType: !54, size: 128, align: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "NonUTF8", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "CreatorVersion", file: !11, line: 8, baseType: !659, size: 16, align: 16, offset: 272)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "ReaderVersion", file: !11, line: 8, baseType: !659, size: 16, align: 16, offset: 288)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", file: !11, line: 8, baseType: !659, size: 16, align: 16, offset: 304)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "Method", file: !11, line: 8, baseType: !659, size: 16, align: 16, offset: 320)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "Modified", file: !11, line: 8, baseType: !185, size: 192, align: 64, offset: 384)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ModifiedTime", file: !11, line: 8, baseType: !659, size: 16, align: 16, offset: 576)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ModifiedDate", file: !11, line: 8, baseType: !659, size: 16, align: 16, offset: 592)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "CRC32", file: !11, line: 8, baseType: !8, size: 32, align: 32, offset: 608)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "CompressedSize", file: !11, line: 8, baseType: !8, size: 32, align: 32, offset: 640)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "UncompressedSize", file: !11, line: 8, baseType: !8, size: 32, align: 32, offset: 672)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "CompressedSize64", file: !11, line: 8, baseType: !188, size: 64, align: 64, offset: 704)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "UncompressedSize64", file: !11, line: 8, baseType: !188, size: 64, align: 64, offset: 768)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "Extra", file: !11, line: 8, baseType: !98, size: 192, align: 64, offset: 832)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ExternalAttrs", file: !11, line: 8, baseType: !8, size: 32, align: 32, offset: 1024)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !11, line: 8, baseType: !188, size: 64, align: 64, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "last", file: !11, line: 8, baseType: !917, size: 64, align: 64, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DICompositeType(tag: DW_TAG_structure_type, name: ".archive/zip.fileWriter", file: !11, line: 8, size: 640, align: 8, elements: !919)
!919 = !{!920, !921, !922, !923, !931, !932, !957}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "header", file: !11, line: 8, baseType: !891, size: 64, align: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "zipw", file: !11, line: 8, baseType: !12, size: 128, align: 64, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rawCount", file: !11, line: 8, baseType: !881, size: 64, align: 64, offset: 192)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "comp", file: !11, line: 8, baseType: !924, size: 128, align: 64, offset: 256)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "WriteCloser", file: !11, line: 8, size: 128, align: 8, elements: !925)
!925 = !{!926, !101}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 8, baseType: !927, size: 64, align: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !17, size: 192, align: 8, elements: !929)
!929 = !{!19, !254, !930}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !17, line: 8, baseType: !79, size: 64, align: 64, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "compCount", file: !11, line: 8, baseType: !881, size: 64, align: 64, offset: 384)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "crc32", file: !11, line: 8, baseType: !933, size: 128, align: 64, offset: 448)
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "Hash32", file: !11, line: 8, size: 128, align: 8, elements: !934)
!934 = !{!935, !101}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 8, baseType: !936, size: 64, align: 64)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)int,*func(*void)void,*func(*void)int,*func(*void,struct{*uint8,int,int})struct{*uint8,int,int},*func(*void)uint32,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !17, size: 448, align: 8, elements: !938)
!938 = !{!19, !939, !943, !947, !948, !952, !956}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", file: !17, line: 8, baseType: !940, size: 64, align: 64, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!58, !39}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "Reset", file: !17, line: 8, baseType: !944, size: 64, align: 64, offset: 128)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DISubroutineType(types: !946)
!946 = !{!40, !39}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "Size", file: !17, line: 8, baseType: !940, size: 64, align: 64, offset: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "Sum", file: !17, line: 8, baseType: !949, size: 64, align: 64, offset: 256)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!98, !39, !98}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "Sum32", file: !17, line: 8, baseType: !953, size: 64, align: 64, offset: 320)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!8, !39}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !17, line: 8, baseType: !79, size: 64, align: 64, offset: 384)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "closed", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 576)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "closed", file: !11, line: 8, baseType: !49, size: 8, align: 8, offset: 320)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "compressors", file: !11, line: 8, baseType: !652, size: 64, align: 64, offset: 384)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "comment", file: !11, line: 8, baseType: !54, size: 128, align: 64, offset: 448)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "testHookCloseSizeOffset", file: !11, line: 8, baseType: !962, size: 64, align: 64, offset: 576)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 8, size: 64, align: 8, elements: !964)
!964 = !{!965}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 8, baseType: !966, size: 64, align: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!40, !188, !188}
!969 = !DILocation(line: 343, column: 2, scope: !813)
!970 = !DILocalVariable(name: "err", scope: !813, file: !11, line: 324, type: !86)
!971 = !DILocation(line: 324, column: 122, scope: !813)
!972 = !DILocalVariable(name: "f", scope: !973, file: !11, line: 331, type: !265)
!973 = distinct !DILexicalBlock(scope: !876, file: !11, line: 330, column: 15)
!974 = !DILocation(line: 331, column: 3, scope: !876)
!975 = !DILocation(line: 325, column: 7, scope: !876)
!976 = !DILocation(line: 0, scope: !977)
!977 = distinct !DILexicalBlock(scope: !978, file: !11, line: 417, column: 36)
!978 = distinct !DILexicalBlock(scope: !876, file: !11, line: 417, column: 2)
!979 = !DILocation(line: 447, column: 1, scope: !813)
!980 = !DILocation(line: 325, column: 5, scope: !876)
!981 = !DILocalVariable(name: "out", scope: !876, file: !11, line: 329, type: !12)
!982 = !DILocation(line: 329, column: 6, scope: !813)
!983 = !DILocation(line: 330, column: 7, scope: !876)
!984 = !DILocation(line: 330, column: 5, scope: !876)
!985 = !DILocation(line: 331, column: 16, scope: !973)
!986 = !DILocation(line: 343, column: 14, scope: !876)
!987 = !DILocation(line: 332, column: 10, scope: !973)
!988 = !DILocation(line: 333, column: 4, scope: !973)
!989 = !DILocation(line: 335, column: 9, scope: !973)
!990 = !DILocation(line: 335, column: 3, scope: !973)
!991 = !DILocation(line: 340, column: 9, scope: !973)
!992 = !DILocation(line: 344, column: 16, scope: !876)
!993 = !DILocalVariable(name: "aarwcreate", scope: !876, file: !11, line: 344, type: !994)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 344, size: 64, align: 8, elements: !996)
!996 = !{!997}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 344, baseType: !998, size: 64, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!1001, !54}
!1001 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Writer,error}", file: !17, size: 256, align: 8, elements: !1002)
!1002 = !{!1003, !1004}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 344, baseType: !12, size: 128, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 344, baseType: !86, size: 128, align: 64, offset: 128)
!1005 = !DILocation(line: 344, column: 2, scope: !813)
!1006 = !DILocation(line: 350, column: 12, scope: !876)
!1007 = !DILocalVariable(name: "w", scope: !876, file: !11, line: 350, type: !12)
!1008 = !DILocation(line: 350, column: 2, scope: !813)
!1009 = !DILocation(line: 351, column: 9, scope: !876)
!1010 = !DILocation(line: 356, column: 36, scope: !876)
!1011 = !DILocation(line: 356, column: 40, scope: !876)
!1012 = !DILocation(line: 356, column: 43, scope: !876)
!1013 = !DILocation(line: 356, column: 33, scope: !876)
!1014 = !DILocation(line: 356, column: 6, scope: !876)
!1015 = !DILocation(line: 358, column: 11, scope: !876)
!1016 = !DILocation(line: 359, column: 9, scope: !876)
!1017 = !DILocation(line: 362, column: 6, scope: !876)
!1018 = !DILocation(line: 364, column: 11, scope: !876)
!1019 = !DILocation(line: 365, column: 9, scope: !876)
!1020 = !DILocation(line: 368, column: 18, scope: !876)
!1021 = !DILocalVariable(name: "src", scope: !876, file: !11, line: 368, type: !54)
!1022 = !DILocation(line: 368, column: 2, scope: !813)
!1023 = !DILocation(line: 369, column: 21, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !876, file: !11, line: 369, column: 2)
!1025 = !DILocation(line: 369, column: 12, scope: !1024)
!1026 = !DILocalVariable(name: "err", scope: !1024, file: !11, line: 369, type: !86)
!1027 = !DILocation(line: 369, column: 5, scope: !876)
!1028 = !DILocation(line: 369, column: 45, scope: !1024)
!1029 = !DILocation(line: 417, column: 2, scope: !978)
!1030 = !DILocalVariable(name: "arch", scope: !978, file: !11, line: 417, type: !54)
!1031 = !DILocation(line: 417, column: 6, scope: !876)
!1032 = !DILocation(line: 418, column: 10, scope: !977)
!1033 = !DILocalVariable(name: "lib", scope: !977, file: !11, line: 418, type: !54)
!1034 = !DILocation(line: 418, column: 3, scope: !978)
!1035 = !DILocation(line: 419, column: 12, scope: !977)
!1036 = !DILocation(line: 419, column: 27, scope: !977)
!1037 = !DILocation(line: 420, column: 10, scope: !977)
!1038 = !DILocation(line: 423, column: 7, scope: !977)
!1039 = !DILocation(line: 423, column: 8, scope: !977)
!1040 = !DILocation(line: 423, column: 6, scope: !977)
!1041 = !DILocation(line: 424, column: 65, scope: !1042)
!1042 = distinct !DILexicalBlock(scope: !977, file: !11, line: 423, column: 16)
!1043 = !DILocation(line: 424, column: 31, scope: !1042)
!1044 = !DILocation(line: 424, column: 17, scope: !1042)
!1045 = !DILocalVariable(name: "r", scope: !1042, file: !11, line: 424, type: !265)
!1046 = !DILocation(line: 424, column: 4, scope: !977)
!1047 = !DILocalVariable(name: "err", scope: !1042, file: !11, line: 424, type: !86)
!1048 = !DILocation(line: 425, column: 11, scope: !1042)
!1049 = !DILocation(line: 426, column: 5, scope: !1042)
!1050 = !DILocation(line: 428, column: 4, scope: !1042)
!1051 = !DILocation(line: 429, column: 28, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1042, file: !11, line: 429, column: 4)
!1053 = !DILocation(line: 429, column: 20, scope: !1052)
!1054 = !DILocalVariable(name: "sink$3", scope: !1052, file: !11, line: 429, type: !190)
!1055 = !DILocation(line: 429, column: 7, scope: !1042)
!1056 = !DILocalVariable(name: "err", scope: !1052, file: !11, line: 429, type: !86)
!1057 = !DILocation(line: 429, column: 36, scope: !1052)
!1058 = !DILocation(line: 430, column: 5, scope: !1052)
!1059 = !DILocation(line: 436, column: 11, scope: !876)
!1060 = !DILocation(line: 437, column: 9, scope: !876)
!1061 = !DILocation(line: 441, column: 11, scope: !876)
!1062 = !DILocation(line: 442, column: 9, scope: !876)
!1063 = !DILocation(line: 446, column: 9, scope: !876)
!1064 = !DILocation(line: 446, column: 13, scope: !876)
!1065 = !DILocation(line: 326, column: 3, scope: !813)
!1066 = distinct !DISubprogram(name: "cmd.BuildAAR..func1", scope: null, file: !11, line: 335, type: !1067, isLocal: true, isDefinition: true, scopeLine: 335, isOptimized: false, unit: !1, retainedNodes: !3)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!40}
!1069 = !DILocation(line: 336, column: 15, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1066, file: !11, line: 336, column: 4)
!1071 = !DILocation(line: 336, column: 16, scope: !1070)
!1072 = !DILocation(line: 336, column: 26, scope: !1070)
!1073 = !DILocation(line: 336, column: 30, scope: !1070)
!1074 = !DILocation(line: 337, column: 9, scope: !1070)
!1075 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk0", scope: null, file: !11, line: 335, type: !1076, isLocal: true, isDefinition: true, scopeLine: 335, isOptimized: false, unit: !1, retainedNodes: !3)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!40, !1078}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*__go_descriptor}", file: !17, size: 64, align: 8, elements: !1080)
!1080 = !{!1081}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "fn", file: !17, line: 335, baseType: !1082, size: 64, align: 64)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 8, size: 64, align: 8, elements: !1084)
!1084 = !{!1085}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 8, baseType: !1086, size: 64, align: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1087 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1075, file: !11, line: 335, type: !1078)
!1088 = !DILocation(line: 335, column: 3, scope: !1075)
!1089 = distinct !DISubprogram(name: "cmd.BuildAAR..func2", scope: null, file: !11, line: 344, type: !999, isLocal: true, isDefinition: true, scopeLine: 344, isOptimized: false, unit: !1, retainedNodes: !3)
!1090 = !DILocalVariable(name: "name", arg: 1, scope: !1089, file: !11, line: 344, type: !54)
!1091 = !DILocation(line: 344, column: 21, scope: !1089)
!1092 = !DILocation(line: 345, column: 6, scope: !1089)
!1093 = !DILocation(line: 345, column: 7, scope: !1089)
!1094 = !DILocation(line: 345, column: 3, scope: !1089)
!1095 = !DILocation(line: 346, column: 12, scope: !1089)
!1096 = !DILocation(line: 346, column: 4, scope: !1089)
!1097 = !DILocation(line: 346, column: 5, scope: !1089)
!1098 = !DILocation(line: 348, column: 10, scope: !1089)
!1099 = !DILocation(line: 348, column: 14, scope: !1089)
!1100 = !DILocation(line: 348, column: 3, scope: !1089)
!1101 = distinct !DISubprogram(name: "cmd.BuildJar", linkageName: "command_line_arguments.BuildJar", scope: null, file: !11, line: 449, type: !1102, isLocal: false, isDefinition: true, scopeLine: 449, isOptimized: false, unit: !1, retainedNodes: !3)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!86, !318, !12, !54, !54}
!1104 = !DILocalVariable(name: "tmpdir", arg: 4, scope: !1101, file: !11, line: 449, type: !54)
!1105 = !DILocation(line: 449, column: 53, scope: !1101)
!1106 = !DILocalVariable(name: "param", arg: 1, scope: !1101, file: !11, line: 449, type: !318)
!1107 = !DILocation(line: 449, column: 15, scope: !1101)
!1108 = !DILocalVariable(name: "w", arg: 2, scope: !1101, file: !11, line: 449, type: !12)
!1109 = !DILocation(line: 449, column: 25, scope: !1101)
!1110 = !DILocalVariable(name: "f", scope: !1101, file: !11, line: 449, type: !1111)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!1112 = !DILocation(line: 451, column: 6, scope: !1113)
!1113 = distinct !DILexicalBlock(scope: !1101, file: !11, line: 449, column: 1)
!1114 = !DILocation(line: 451, column: 7, scope: !1113)
!1115 = !DILocation(line: 451, column: 5, scope: !1113)
!1116 = !DILocation(line: 452, column: 14, scope: !1113)
!1117 = !DILocation(line: 468, column: 18, scope: !1113)
!1118 = !DILocation(line: 469, column: 18, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !1113, file: !11, line: 469, column: 2)
!1120 = !DILocation(line: 469, column: 12, scope: !1119)
!1121 = !DILocalVariable(name: "err", scope: !1119, file: !11, line: 469, type: !86)
!1122 = !DILocation(line: 469, column: 5, scope: !1113)
!1123 = !DILocation(line: 469, column: 31, scope: !1119)
!1124 = !DILocation(line: 454, column: 32, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1113, file: !11, line: 453, column: 4)
!1126 = !DILocation(line: 454, column: 19, scope: !1125)
!1127 = !DILocalVariable(name: "err", scope: !1125, file: !11, line: 454, type: !86)
!1128 = !DILocation(line: 454, column: 3, scope: !1113)
!1129 = !DILocation(line: 463, column: 10, scope: !1125)
!1130 = !DILocalVariable(name: "$ret25", scope: !1101, file: !11, line: 449, type: !86)
!1131 = !DILocation(line: 449, column: 68, scope: !1101)
!1132 = !DILocation(line: 464, column: 4, scope: !1125)
!1133 = !DILocation(line: 470, column: 3, scope: !1119)
!1134 = !DILocation(line: 473, column: 33, scope: !1113)
!1135 = !DILocation(line: 538, column: 20, scope: !1136, inlinedAt: !1137)
!1136 = distinct !DISubprogram(name: "cmd.bootClasspath", scope: null, file: !11, line: 538, type: !386, isLocal: true, isDefinition: true, scopeLine: 538, isOptimized: false, unit: !1, retainedNodes: !3)
!1137 = distinct !DILocation(line: 473, column: 19, scope: !1113)
!1138 = !DILocalVariable(name: "f", arg: 1, scope: !1136, file: !11, line: 538, type: !318)
!1139 = !DILocation(line: 543, column: 18, scope: !1140, inlinedAt: !1137)
!1140 = distinct !DILexicalBlock(scope: !1136, file: !11, line: 538, column: 1)
!1141 = !DILocalVariable(name: "err", scope: !1140, file: !11, line: 543, type: !86)
!1142 = !DILocation(line: 543, column: 2, scope: !1136, inlinedAt: !1137)
!1143 = !DILocation(line: 544, column: 9, scope: !1140, inlinedAt: !1137)
!1144 = !DILocation(line: 547, column: 18, scope: !1140, inlinedAt: !1137)
!1145 = !DILocalVariable(name: "$ret30", scope: !1136, file: !11, line: 538, type: !54)
!1146 = !DILocation(line: 538, column: 31, scope: !1136, inlinedAt: !1137)
!1147 = !DILocalVariable(name: "$ret31", scope: !1136, file: !11, line: 538, type: !86)
!1148 = !DILocation(line: 538, column: 39, scope: !1136, inlinedAt: !1137)
!1149 = !DILocation(line: 547, column: 2, scope: !1140, inlinedAt: !1137)
!1150 = !DILocalVariable(name: "err", scope: !1113, file: !11, line: 473, type: !86)
!1151 = !DILocation(line: 473, column: 2, scope: !1101)
!1152 = !DILocation(line: 478, column: 10, scope: !1113)
!1153 = !DILocation(line: 485, column: 9, scope: !1113)
!1154 = !DILocation(line: 545, column: 3, scope: !1140, inlinedAt: !1137)
!1155 = !DILocation(line: 475, column: 3, scope: !1113)
!1156 = !DILocation(line: 485, column: 7, scope: !1113)
!1157 = !DILocalVariable(name: "args", scope: !1113, file: !11, line: 478, type: !114)
!1158 = !DILocation(line: 478, column: 2, scope: !1101)
!1159 = !DILocation(line: 487, column: 16, scope: !1113)
!1160 = !DILocalVariable(name: "javac", scope: !1113, file: !11, line: 487, type: !1161)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cmd", file: !11, line: 14, size: 2624, align: 8, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1168, !1176, !1177, !1178, !1183, !1229, !1244, !1277, !1304, !1305, !1306, !1307, !1318, !1319, !1331, !1332}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "Path", file: !11, line: 14, baseType: !54, size: 128, align: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "Args", file: !11, line: 14, baseType: !114, size: 192, align: 64, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "Env", file: !11, line: 14, baseType: !114, size: 192, align: 64, offset: 320)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "Dir", file: !11, line: 14, baseType: !54, size: 128, align: 64, offset: 512)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "Stdin", file: !11, line: 14, baseType: !1169, size: 128, align: 64, offset: 640)
!1169 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !11, line: 8, size: 128, align: 8, elements: !1170)
!1170 = !{!1171, !101}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 8, baseType: !1172, size: 64, align: 64)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !17, size: 128, align: 8, elements: !1174)
!1174 = !{!19, !1175}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !17, line: 8, baseType: !79, size: 64, align: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "Stdout", file: !11, line: 14, baseType: !12, size: 128, align: 64, offset: 768)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "Stderr", file: !11, line: 14, baseType: !12, size: 128, align: 64, offset: 896)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "ExtraFiles", file: !11, line: 14, baseType: !1179, size: 192, align: 64, offset: 1024)
!1179 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**File,int,int}", file: !17, size: 192, align: 8, elements: !1180)
!1180 = !{!1181, !75, !76}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1182, size: 64, align: 64)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "SysProcAttr", file: !11, line: 14, baseType: !1184, size: 64, align: 64, offset: 1216)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DICompositeType(tag: DW_TAG_structure_type, name: "SysProcAttr", file: !11, line: 13, size: 1280, align: 8, elements: !1186)
!1186 = !{!1187, !1188, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1210, !1211, !1212, !1222, !1223, !1224}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "Chroot", file: !11, line: 13, baseType: !54, size: 128, align: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "Credential", file: !11, line: 13, baseType: !1189, size: 64, align: 64, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "Credential", file: !11, line: 13, size: 320, align: 8, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1199}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "Uid", file: !11, line: 13, baseType: !8, size: 32, align: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "Gid", file: !11, line: 13, baseType: !8, size: 32, align: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "Groups", file: !11, line: 13, baseType: !1195, size: 192, align: 64, offset: 64)
!1195 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint32,int,int}", file: !17, size: 192, align: 8, elements: !1196)
!1196 = !{!1197, !75, !76}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1198, size: 64, align: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "NoSetGroups", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "Ptrace", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 192)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "Setsid", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 200)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "Setpgid", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 208)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "Setctty", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 216)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "Noctty", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 224)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "Ctty", file: !11, line: 13, baseType: !58, size: 64, align: 64, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "Foreground", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "Pgid", file: !11, line: 13, baseType: !58, size: 64, align: 64, offset: 384)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "Pdeathsig", file: !11, line: 13, baseType: !1209, size: 64, align: 64, offset: 448)
!1209 = !DIBasicType(name: "Signal", size: 64, encoding: DW_ATE_signed)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "Cloneflags", file: !11, line: 13, baseType: !24, size: 64, align: 64, offset: 512)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "Unshareflags", file: !11, line: 13, baseType: !24, size: 64, align: 64, offset: 576)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "UidMappings", file: !11, line: 13, baseType: !1213, size: 192, align: 64, offset: 640)
!1213 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*SysProcIDMap,int,int}", file: !17, size: 192, align: 8, elements: !1214)
!1214 = !{!1215, !75, !76}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1216, size: 64, align: 64)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "SysProcIDMap", file: !11, line: 13, size: 192, align: 8, elements: !1218)
!1218 = !{!1219, !1220, !1221}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", file: !11, line: 13, baseType: !58, size: 64, align: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "HostID", file: !11, line: 13, baseType: !58, size: 64, align: 64, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "Size", file: !11, line: 13, baseType: !58, size: 64, align: 64, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "GidMappings", file: !11, line: 13, baseType: !1213, size: 192, align: 64, offset: 832)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "GidMappingsEnableSetgroups", file: !11, line: 13, baseType: !49, size: 8, align: 8, offset: 1024)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "AmbientCaps", file: !11, line: 13, baseType: !1225, size: 192, align: 64, offset: 1088)
!1225 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uintptr,int,int}", file: !17, size: 192, align: 8, elements: !1226)
!1226 = !{!1227, !75, !76}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1228, size: 64, align: 64)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "Process", file: !11, line: 14, baseType: !1230, size: 64, align: 64, offset: 1280)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DICompositeType(tag: DW_TAG_structure_type, name: "Process", file: !11, line: 13, size: 384, align: 8, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1236}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "Pid", file: !11, line: 13, baseType: !58, size: 64, align: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "handle", file: !11, line: 13, baseType: !24, size: 64, align: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "isdone", file: !11, line: 13, baseType: !8, size: 32, align: 32, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sigMu", file: !11, line: 13, baseType: !1237, size: 192, align: 32, offset: 160)
!1237 = !DICompositeType(tag: DW_TAG_structure_type, name: "RWMutex", file: !11, line: 13, size: 192, align: 8, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1243}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !11, line: 13, baseType: !327, size: 64, align: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "writerSem", file: !11, line: 13, baseType: !8, size: 32, align: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "readerSem", file: !11, line: 13, baseType: !8, size: 32, align: 32, offset: 96)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "readerCount", file: !11, line: 13, baseType: !330, size: 32, align: 32, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "readerWait", file: !11, line: 13, baseType: !330, size: 32, align: 32, offset: 160)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ProcessState", file: !11, line: 14, baseType: !1245, size: 64, align: 64, offset: 1344)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "ProcessState", file: !11, line: 13, size: 192, align: 8, elements: !1247)
!1247 = !{!1248, !1249, !1251}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "pid", file: !11, line: 13, baseType: !58, size: 64, align: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "status", file: !11, line: 13, baseType: !1250, size: 32, align: 32, offset: 64)
!1250 = !DIBasicType(name: "WaitStatus", size: 32, encoding: DW_ATE_unsigned)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "rusage", file: !11, line: 13, baseType: !1252, size: 64, align: 64, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DICompositeType(tag: DW_TAG_structure_type, name: "Rusage", file: !11, line: 13, size: 1152, align: 8, elements: !1254)
!1254 = !{!1255, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "Utime", file: !11, line: 13, baseType: !1256, size: 128, align: 64)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "Timeval", file: !11, line: 13, size: 128, align: 8, elements: !1257)
!1257 = !{!1258, !1260}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "Sec", file: !11, line: 13, baseType: !1259, size: 64, align: 64)
!1259 = !DIBasicType(name: "Timeval_sec_t", size: 64, encoding: DW_ATE_signed)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "Usec", file: !11, line: 13, baseType: !1261, size: 64, align: 64, offset: 64)
!1261 = !DIBasicType(name: "Timeval_usec_t", size: 64, encoding: DW_ATE_signed)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "Stime", file: !11, line: 13, baseType: !1256, size: 128, align: 64, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "Maxrss", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 256)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "Ixrss", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "Idrss", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 384)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "Isrss", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 448)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "Minflt", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 512)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "Majflt", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "Nswap", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "Inblock", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 704)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "Oublock", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 768)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "Msgsnd", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 832)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "Msgrcv", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 896)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "Nsignals", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 960)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "Nvcsw", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 1024)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "Nivcsw", file: !11, line: 13, baseType: !190, size: 64, align: 64, offset: 1088)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", file: !11, line: 14, baseType: !1278, size: 128, align: 64, offset: 1408)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "Context", file: !11, line: 14, size: 128, align: 8, elements: !1279)
!1279 = !{!1280, !101}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 14, baseType: !1281, size: 64, align: 64)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,struct{*_type,*void})struct{*_type,*void}}", file: !17, size: 320, align: 8, elements: !1283)
!1283 = !{!1284, !1285, !1293, !1299, !1300}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !17, line: 14, baseType: !20, size: 64, align: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "Deadline", file: !17, line: 14, baseType: !1286, size: 64, align: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!1289, !39}
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Time,bool}", file: !17, size: 256, align: 8, elements: !1290)
!1290 = !{!1291, !1292}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", file: !17, line: 14, baseType: !185, size: 192, align: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !17, line: 14, baseType: !49, size: 8, align: 8, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "Done", file: !17, line: 14, baseType: !1294, size: 64, align: 64, offset: 128)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{!1297, !39}
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_channel", file: !7, line: 1, align: 8, elements: !3)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "Err", file: !17, line: 14, baseType: !255, size: 64, align: 64, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !17, line: 14, baseType: !1301, size: 64, align: 64, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!233, !39, !233}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "lookPathErr", file: !11, line: 14, baseType: !86, size: 128, align: 64, offset: 1536)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "finished", file: !11, line: 14, baseType: !49, size: 8, align: 8, offset: 1664)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "childFiles", file: !11, line: 14, baseType: !1179, size: 192, align: 64, offset: 1728)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "closeAfterStart", file: !11, line: 14, baseType: !1308, size: 192, align: 64, offset: 1920)
!1308 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Closer,int,int}", file: !17, size: 192, align: 8, elements: !1309)
!1309 = !{!1310, !75, !76}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1311, size: 64, align: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = !DICompositeType(tag: DW_TAG_structure_type, name: "Closer", file: !11, line: 8, size: 128, align: 8, elements: !1313)
!1313 = !{!1314, !101}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !11, line: 8, baseType: !1315, size: 64, align: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error}", file: !17, size: 128, align: 8, elements: !1317)
!1317 = !{!19, !254}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "closeAfterWait", file: !11, line: 14, baseType: !1308, size: 192, align: 64, offset: 2112)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "goroutine", file: !11, line: 14, baseType: !1320, size: 192, align: 64, offset: 2304)
!1320 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**__go_descriptor,int,int}", file: !17, size: 192, align: 8, elements: !1321)
!1321 = !{!1322, !75, !76}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1323, size: 64, align: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !11, line: 8, size: 64, align: 8, elements: !1326)
!1326 = !{!1327}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !11, line: 8, baseType: !1328, size: 64, align: 64)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!86}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "errch", file: !11, line: 14, baseType: !1297, size: 64, align: 64, offset: 2496)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "waitDone", file: !11, line: 14, baseType: !1297, size: 64, align: 64, offset: 2560)
!1333 = !DILocation(line: 487, column: 2, scope: !1101)
!1334 = !DILocation(line: 488, column: 7, scope: !1113)
!1335 = !DILocation(line: 488, column: 12, scope: !1113)
!1336 = !DILocation(line: 489, column: 19, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !1113, file: !11, line: 489, column: 2)
!1338 = !DILocation(line: 489, column: 12, scope: !1337)
!1339 = !DILocalVariable(name: "err", scope: !1337, file: !11, line: 489, type: !86)
!1340 = !DILocation(line: 489, column: 5, scope: !1113)
!1341 = !DILocation(line: 489, column: 42, scope: !1337)
!1342 = !DILocation(line: 490, column: 3, scope: !1337)
!1343 = !DILocation(line: 497, column: 6, scope: !1113)
!1344 = !DILocation(line: 497, column: 7, scope: !1113)
!1345 = !DILocation(line: 497, column: 5, scope: !1113)
!1346 = !DILocation(line: 498, column: 3, scope: !1113)
!1347 = !DILocation(line: 500, column: 2, scope: !1113)
!1348 = !DILocalVariable(name: "jarw", scope: !1113, file: !11, line: 500, type: !1349)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!1350 = !DILocation(line: 500, column: 2, scope: !1101)
!1351 = !DILocation(line: 500, column: 14, scope: !1113)
!1352 = !DILocation(line: 501, column: 16, scope: !1113)
!1353 = !DILocalVariable(name: "jarwcreate", scope: !1113, file: !11, line: 501, type: !994)
!1354 = !DILocation(line: 501, column: 2, scope: !1101)
!1355 = !DILocation(line: 507, column: 23, scope: !1113)
!1356 = !DILocation(line: 508, column: 9, scope: !1113)
!1357 = !DILocation(line: 509, column: 3, scope: !1113)
!1358 = !DILocalVariable(name: "manifestFile", scope: !1113, file: !11, line: 507, type: !12)
!1359 = !DILocation(line: 507, column: 2, scope: !1101)
!1360 = !DILocation(line: 511, column: 6, scope: !1113)
!1361 = !DILocation(line: 513, column: 27, scope: !1113)
!1362 = !DILocation(line: 513, column: 17, scope: !1113)
!1363 = !DILocation(line: 532, column: 9, scope: !1113)
!1364 = !DILocation(line: 533, column: 3, scope: !1113)
!1365 = !DILocation(line: 535, column: 9, scope: !1113)
!1366 = !DILocation(line: 535, column: 13, scope: !1113)
!1367 = !DILocation(line: 535, column: 2, scope: !1113)
!1368 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk1", scope: null, file: !11, line: 428, type: !1369, isLocal: true, isDefinition: true, scopeLine: 428, isOptimized: false, unit: !1, retainedNodes: !3)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!49, !1371}
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*File}", file: !17, size: 64, align: 8, elements: !1373)
!1373 = !{!1374}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !17, line: 428, baseType: !265, size: 64, align: 64)
!1375 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1368, file: !11, line: 428, type: !1371)
!1376 = !DILocation(line: 428, column: 4, scope: !1368)
!1377 = !DILocalVariable(name: "$ret86", scope: !1368, file: !11, line: 428, type: !49)
!1378 = distinct !DISubprogram(name: "cmd.ShouldPrint..1command_line_arguments.Flags", linkageName: "command_line_arguments.Flags.ShouldPrint", scope: null, file: !320, line: 38, type: !585, isLocal: false, isDefinition: true, scopeLine: 38, isOptimized: false, unit: !1, retainedNodes: !3)
!1379 = !DILocalVariable(name: "f", arg: 1, scope: !1378, file: !320, line: 38, type: !318)
!1380 = !DILocation(line: 38, column: 1, scope: !1378)
!1381 = !DILocalVariable(name: "$ret69", scope: !1378, file: !320, line: 38, type: !49)
!1382 = !DILocation(line: 38, column: 31, scope: !1378)
!1383 = !DILocation(line: 39, column: 11, scope: !1378)
!1384 = !DILocation(line: 39, column: 19, scope: !1378)
!1385 = !DILocation(line: 39, column: 32, scope: !1378)
!1386 = !DILocation(line: 39, column: 23, scope: !1378)
!1387 = !DILocation(line: 39, column: 2, scope: !1378)
!1388 = !DILocation(line: 39, column: 37, scope: !1378)
!1389 = !DILocation(line: 39, column: 35, scope: !1378)
!1390 = distinct !DISubprogram(name: "cmd.command_line_arguments.Flags..hash", linkageName: "command_line_arguments.command_line_arguments.Flags..hash", scope: null, file: !7, line: 1, type: !37, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1391 = !DILocalVariable(name: "key", arg: 1, scope: !1390, file: !7, line: 1, type: !39)
!1392 = !DILocation(line: 1, column: 1, scope: !1390)
!1393 = !DILocalVariable(name: "seed", arg: 2, scope: !1390, file: !7, line: 1, type: !24)
!1394 = !DILocalVariable(name: "$ret90", scope: !1390, file: !7, line: 1, type: !24)
!1395 = distinct !DISubprogram(name: "cmd.command_line_arguments.Flags..eq", linkageName: "command_line_arguments.command_line_arguments.Flags..eq", scope: null, file: !7, line: 1, type: !47, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1396 = !DILocalVariable(name: "key1", arg: 1, scope: !1395, file: !7, line: 1, type: !39)
!1397 = !DILocation(line: 1, column: 1, scope: !1395)
!1398 = !DILocalVariable(name: "key2", arg: 2, scope: !1395, file: !7, line: 1, type: !39)
!1399 = !DILocalVariable(name: "$ret91", scope: !1395, file: !7, line: 1, type: !49)
!1400 = distinct !DISubprogram(name: "cmd.BuildJar..func1", scope: null, file: !11, line: 454, type: !1401, isLocal: true, isDefinition: true, scopeLine: 454, isOptimized: false, unit: !1, retainedNodes: !3)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!86, !54, !171, !86}
!1403 = !DILocalVariable(name: "path", arg: 1, scope: !1400, file: !11, line: 454, type: !54)
!1404 = !DILocation(line: 454, column: 37, scope: !1400)
!1405 = !DILocalVariable(name: "info", arg: 2, scope: !1400, file: !11, line: 454, type: !171)
!1406 = !DILocation(line: 454, column: 50, scope: !1400)
!1407 = !DILocalVariable(name: "err", arg: 3, scope: !1400, file: !11, line: 454, type: !86)
!1408 = !DILocation(line: 454, column: 68, scope: !1400)
!1409 = !DILocation(line: 455, column: 11, scope: !1400)
!1410 = !DILocalVariable(name: "$ret26", scope: !1400, file: !11, line: 454, type: !86)
!1411 = !DILocation(line: 454, column: 79, scope: !1400)
!1412 = !DILocation(line: 456, column: 5, scope: !1400)
!1413 = !DILocation(line: 458, column: 16, scope: !1400)
!1414 = !DILocation(line: 458, column: 26, scope: !1400)
!1415 = !DILocation(line: 459, column: 61, scope: !1400)
!1416 = !DILocation(line: 459, column: 57, scope: !1400)
!1417 = !DILocation(line: 459, column: 56, scope: !1400)
!1418 = !DILocation(line: 461, column: 4, scope: !1400)
!1419 = !DILocation(line: 459, column: 42, scope: !1400)
!1420 = !DILocation(line: 459, column: 5, scope: !1400)
!1421 = !DILocation(line: 459, column: 16, scope: !1400)
!1422 = !DILocation(line: 459, column: 14, scope: !1400)
!1423 = distinct !DISubprogram(name: "cmd.Mkdir", linkageName: "command_line_arguments.Mkdir", scope: null, file: !471, line: 235, type: !1424, isLocal: false, isDefinition: true, scopeLine: 235, isOptimized: false, unit: !1, retainedNodes: !3)
!1424 = !DISubroutineType(types: !1425)
!1425 = !{!86, !318, !54}
!1426 = !DILocalVariable(name: "f", arg: 1, scope: !1423, file: !471, line: 235, type: !318)
!1427 = !DILocation(line: 235, column: 12, scope: !1423)
!1428 = !DILocalVariable(name: "dir", arg: 2, scope: !1423, file: !471, line: 235, type: !54)
!1429 = !DILocation(line: 235, column: 22, scope: !1423)
!1430 = !DILocation(line: 236, column: 6, scope: !1423)
!1431 = !DILocation(line: 236, column: 2, scope: !1423)
!1432 = !DILocation(line: 237, column: 11, scope: !1423)
!1433 = !DILocation(line: 237, column: 4, scope: !1423)
!1434 = !DILocation(line: 239, column: 6, scope: !1423)
!1435 = !DILocation(line: 239, column: 2, scope: !1423)
!1436 = !DILocation(line: 240, column: 13, scope: !1423)
!1437 = !DILocation(line: 240, column: 3, scope: !1423)
!1438 = !DILocalVariable(name: "$ret47", scope: !1423, file: !471, line: 235, type: !86)
!1439 = !DILocation(line: 235, column: 34, scope: !1423)
!1440 = !DILocation(line: 242, column: 2, scope: !1423)
!1441 = distinct !DISubprogram(name: "cmd.RunCmd", linkageName: "command_line_arguments.RunCmd", scope: null, file: !471, line: 20, type: !1442, isLocal: false, isDefinition: true, scopeLine: 20, isOptimized: false, unit: !1, retainedNodes: !3)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!86, !318, !54, !1161}
!1444 = !DILocalVariable(name: "f", arg: 1, scope: !1441, file: !471, line: 20, type: !318)
!1445 = !DILocation(line: 20, column: 13, scope: !1441)
!1446 = !DILocalVariable(name: "tmpdir", arg: 2, scope: !1441, file: !471, line: 20, type: !54)
!1447 = !DILocation(line: 20, column: 23, scope: !1441)
!1448 = !DILocalVariable(name: "cmd", arg: 3, scope: !1441, file: !471, line: 20, type: !1161)
!1449 = !DILocation(line: 20, column: 38, scope: !1441)
!1450 = !DILocation(line: 21, column: 12, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1441, file: !471, line: 20, column: 1)
!1452 = !DILocalVariable(name: "err", scope: !1451, file: !471, line: 21, type: !86)
!1453 = !DILocation(line: 21, column: 2, scope: !1441)
!1454 = !DILocalVariable(name: "$ret35", scope: !1441, file: !471, line: 20, type: !86)
!1455 = !DILocation(line: 20, column: 53, scope: !1441)
!1456 = !DILocation(line: 22, column: 2, scope: !1451)
!1457 = distinct !DISubprogram(name: "cmd.BuildJar..func2", scope: null, file: !11, line: 501, type: !999, isLocal: true, isDefinition: true, scopeLine: 501, isOptimized: false, unit: !1, retainedNodes: !3)
!1458 = !DILocalVariable(name: "name", arg: 1, scope: !1457, file: !11, line: 501, type: !54)
!1459 = !DILocation(line: 501, column: 21, scope: !1457)
!1460 = !DILocation(line: 502, column: 6, scope: !1457)
!1461 = !DILocation(line: 502, column: 7, scope: !1457)
!1462 = !DILocation(line: 502, column: 3, scope: !1457)
!1463 = !DILocation(line: 503, column: 12, scope: !1457)
!1464 = !DILocation(line: 503, column: 4, scope: !1457)
!1465 = !DILocation(line: 503, column: 5, scope: !1457)
!1466 = !DILocation(line: 505, column: 10, scope: !1457)
!1467 = !DILocation(line: 505, column: 14, scope: !1457)
!1468 = !DILocation(line: 505, column: 3, scope: !1457)
!1469 = distinct !DISubprogram(name: "cmd.BuildJar..func3", scope: null, file: !11, line: 513, type: !1401, isLocal: true, isDefinition: true, scopeLine: 513, isOptimized: false, unit: !1, retainedNodes: !3)
!1470 = !DILocalVariable(name: "path", arg: 1, scope: !1469, file: !11, line: 513, type: !54)
!1471 = !DILocation(line: 513, column: 32, scope: !1469)
!1472 = !DILocalVariable(name: "info", arg: 2, scope: !1469, file: !11, line: 513, type: !171)
!1473 = !DILocation(line: 513, column: 45, scope: !1469)
!1474 = !DILocalVariable(name: "err", arg: 3, scope: !1469, file: !11, line: 513, type: !86)
!1475 = !DILocation(line: 513, column: 63, scope: !1469)
!1476 = !DILocalVariable(name: "$ret29", scope: !1469, file: !11, line: 513, type: !86)
!1477 = !DILocation(line: 513, column: 74, scope: !1469)
!1478 = !DILocation(line: 514, column: 10, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1469, file: !11, line: 513, column: 27)
!1480 = !DILocation(line: 531, column: 2, scope: !1469)
!1481 = !DILocation(line: 517, column: 10, scope: !1479)
!1482 = !DILocation(line: 517, column: 3, scope: !1479)
!1483 = !DILocation(line: 520, column: 52, scope: !1479)
!1484 = !DILocation(line: 520, column: 48, scope: !1479)
!1485 = !DILocation(line: 520, column: 56, scope: !1479)
!1486 = !DILocation(line: 520, column: 47, scope: !1479)
!1487 = !DILocation(line: 520, column: 35, scope: !1479)
!1488 = !DILocation(line: 520, column: 15, scope: !1479)
!1489 = !DILocalVariable(name: "out", scope: !1479, file: !11, line: 520, type: !12)
!1490 = !DILocation(line: 520, column: 3, scope: !1469)
!1491 = !DILocation(line: 521, column: 10, scope: !1479)
!1492 = !DILocation(line: 524, column: 17, scope: !1479)
!1493 = !DILocalVariable(name: "in", scope: !1479, file: !11, line: 524, type: !265)
!1494 = !DILocation(line: 524, column: 3, scope: !1469)
!1495 = !DILocation(line: 525, column: 10, scope: !1479)
!1496 = !DILocation(line: 528, column: 3, scope: !1479)
!1497 = !DILocation(line: 529, column: 25, scope: !1479)
!1498 = !DILocation(line: 529, column: 15, scope: !1479)
!1499 = !DILocation(line: 515, column: 4, scope: !1469)
!1500 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk2", scope: null, file: !11, line: 528, type: !1369, isLocal: true, isDefinition: true, scopeLine: 528, isOptimized: false, unit: !1, retainedNodes: !3)
!1501 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1500, file: !11, line: 528, type: !1371)
!1502 = !DILocation(line: 528, column: 3, scope: !1500)
!1503 = !DILocalVariable(name: "$ret87", scope: !1500, file: !11, line: 528, type: !49)
!1504 = distinct !DISubprogram(name: "cmd.ParseTargets", linkageName: "command_line_arguments.ParseTargets", scope: null, file: !262, line: 19, type: !1505, isLocal: false, isDefinition: true, scopeLine: 19, isOptimized: false, unit: !1, retainedNodes: !3)
!1505 = !DISubroutineType(types: !1506)
!1506 = !{!652, !54}
!1507 = !DILocalVariable(name: "a", arg: 1, scope: !1504, file: !262, line: 19, type: !54)
!1508 = !DILocation(line: 19, column: 19, scope: !1504)
!1509 = !DILocalVariable(name: "$ret32", scope: !1504, file: !262, line: 19, type: !652)
!1510 = !DILocation(line: 19, column: 29, scope: !1504)
!1511 = !DILocation(line: 20, column: 26, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1504, file: !262, line: 19, column: 1)
!1513 = !DILocalVariable(name: "targetsSlice", scope: !1512, file: !262, line: 20, type: !114)
!1514 = !DILocation(line: 20, column: 2, scope: !1504)
!1515 = !DILocation(line: 21, column: 23, scope: !1512)
!1516 = !DILocation(line: 28, column: 13, scope: !1512)
!1517 = !DILocalVariable(name: "targets", scope: !1512, file: !262, line: 28, type: !652)
!1518 = !DILocation(line: 28, column: 2, scope: !1504)
!1519 = !DILocation(line: 29, column: 2, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1512, file: !262, line: 29, column: 2)
!1521 = !DILocation(line: 25, column: 19, scope: !1512)
!1522 = !DILocalVariable(name: "i", scope: !1520, file: !262, line: 29, type: !54)
!1523 = !DILocation(line: 29, column: 6, scope: !1512)
!1524 = !DILocation(line: 31, column: 3, scope: !1520)
!1525 = !DILocation(line: 32, column: 23, scope: !1520)
!1526 = !DILocation(line: 33, column: 27, scope: !1520)
!1527 = !DILocation(line: 34, column: 29, scope: !1520)
!1528 = !DILocation(line: 35, column: 27, scope: !1520)
!1529 = !DILocation(line: 36, column: 29, scope: !1520)
!1530 = !DILocation(line: 37, column: 3, scope: !1520)
!1531 = !DILocation(line: 38, column: 23, scope: !1520)
!1532 = !DILocation(line: 39, column: 15, scope: !1520)
!1533 = !DILocation(line: 40, column: 3, scope: !1520)
!1534 = !DILocation(line: 41, column: 19, scope: !1520)
!1535 = !DILocation(line: 42, column: 23, scope: !1520)
!1536 = !DILocation(line: 43, column: 25, scope: !1520)
!1537 = !DILocation(line: 45, column: 25, scope: !1520)
!1538 = !DILocation(line: 46, column: 3, scope: !1520)
!1539 = !DILocation(line: 47, column: 19, scope: !1520)
!1540 = !DILocation(line: 48, column: 15, scope: !1520)
!1541 = !DILocation(line: 51, column: 2, scope: !1512)
!1542 = distinct !DISubprogram(name: "cmd.Build", linkageName: "command_line_arguments.Build", scope: null, file: !262, line: 54, type: !1543, isLocal: false, isDefinition: true, scopeLine: 54, isOptimized: false, unit: !1, retainedNodes: !3)
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!86, !318, !114}
!1545 = !DILocalVariable(name: "args", arg: 2, scope: !1542, file: !262, line: 54, type: !114)
!1546 = !DILocation(line: 54, column: 26, scope: !1542)
!1547 = !DILocalVariable(name: "flags", arg: 1, scope: !1542, file: !262, line: 54, type: !318)
!1548 = !DILocation(line: 54, column: 12, scope: !1542)
!1549 = !DILocation(line: 55, column: 17, scope: !1550)
!1550 = distinct !DILexicalBlock(scope: !1542, file: !262, line: 54, column: 1)
!1551 = !DILocalVariable(name: "err", scope: !1550, file: !262, line: 55, type: !86)
!1552 = !DILocation(line: 55, column: 2, scope: !1542)
!1553 = !DILocation(line: 56, column: 9, scope: !1550)
!1554 = !DILocation(line: 57, column: 3, scope: !1550)
!1555 = !DILocalVariable(name: "$ret33", scope: !1542, file: !262, line: 54, type: !86)
!1556 = !DILocation(line: 54, column: 41, scope: !1542)
!1557 = !DILocation(line: 60, column: 7, scope: !1550)
!1558 = !DILocation(line: 60, column: 15, scope: !1550)
!1559 = !DILocation(line: 61, column: 9, scope: !1550)
!1560 = !DILocation(line: 61, column: 2, scope: !1550)
!1561 = distinct !DISubprogram(name: "cmd.PackageDir", linkageName: "command_line_arguments.PackageDir", scope: null, file: !471, line: 136, type: !472, isLocal: false, isDefinition: true, scopeLine: 136, isOptimized: false, unit: !1, retainedNodes: !3)
!1562 = !DILocalVariable(name: "f", arg: 1, scope: !1561, file: !471, line: 136, type: !318)
!1563 = !DILocation(line: 136, column: 17, scope: !1561)
!1564 = !DILocalVariable(name: "pkgpath", arg: 2, scope: !1561, file: !471, line: 136, type: !54)
!1565 = !DILocation(line: 136, column: 27, scope: !1561)
!1566 = !DILocation(line: 137, column: 6, scope: !1561)
!1567 = !DILocation(line: 137, column: 2, scope: !1561)
!1568 = !DILocation(line: 138, column: 11, scope: !1561)
!1569 = !DILocation(line: 138, column: 4, scope: !1561)
!1570 = !DILocation(line: 140, column: 6, scope: !1561)
!1571 = !DILocation(line: 140, column: 2, scope: !1561)
!1572 = !DILocation(line: 141, column: 28, scope: !1573)
!1573 = distinct !DILexicalBlock(scope: !1561, file: !471, line: 140, column: 19)
!1574 = !DILocalVariable(name: "pkg", scope: !1573, file: !471, line: 141, type: !820)
!1575 = !DILocation(line: 141, column: 3, scope: !1561)
!1576 = !DILocalVariable(name: "err", scope: !1573, file: !471, line: 141, type: !86)
!1577 = !DILocation(line: 142, column: 10, scope: !1573)
!1578 = !DILocation(line: 147, column: 21, scope: !1561)
!1579 = !DILocalVariable(name: "$ret41", scope: !1561, file: !471, line: 136, type: !54)
!1580 = !DILocation(line: 136, column: 44, scope: !1561)
!1581 = !DILocalVariable(name: "$ret42", scope: !1561, file: !471, line: 136, type: !86)
!1582 = !DILocation(line: 136, column: 52, scope: !1561)
!1583 = !DILocation(line: 147, column: 2, scope: !1561)
!1584 = !DILocation(line: 143, column: 4, scope: !1573)
!1585 = !DILocation(line: 145, column: 13, scope: !1573)
!1586 = !DILocation(line: 145, column: 3, scope: !1573)
!1587 = distinct !DISubprogram(name: "cmd.Bind", linkageName: "command_line_arguments.Bind", scope: null, file: !262, line: 64, type: !1543, isLocal: false, isDefinition: true, scopeLine: 64, isOptimized: false, unit: !1, retainedNodes: !3)
!1588 = !DILocalVariable(name: "args", arg: 2, scope: !1587, file: !262, line: 64, type: !114)
!1589 = !DILocation(line: 64, column: 25, scope: !1587)
!1590 = !DILocalVariable(name: "param", arg: 1, scope: !1587, file: !262, line: 64, type: !318)
!1591 = !DILocation(line: 64, column: 11, scope: !1587)
!1592 = !DILocalVariable(name: "$ret34", scope: !1587, file: !262, line: 64, type: !86)
!1593 = !DILocation(line: 64, column: 40, scope: !1587)
!1594 = !DILocation(line: 402, column: 1, scope: !1587)
!1595 = !DILocalVariable(name: "flags", scope: !1587, file: !262, line: 64, type: !1111)
!1596 = !DILocation(line: 65, column: 26, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1587, file: !262, line: 64, column: 1)
!1598 = !DILocation(line: 65, column: 31, scope: !1597)
!1599 = !DILocation(line: 65, column: 13, scope: !1597)
!1600 = !DILocalVariable(name: "targets", scope: !1597, file: !262, line: 65, type: !652)
!1601 = !DILocation(line: 65, column: 2, scope: !1587)
!1602 = !DILocation(line: 68, column: 27, scope: !1597)
!1603 = !DILocation(line: 68, column: 9, scope: !1597)
!1604 = !DILocalVariable(name: "err", scope: !1597, file: !262, line: 68, type: !86)
!1605 = !DILocation(line: 68, column: 2, scope: !1587)
!1606 = !DILocation(line: 69, column: 9, scope: !1597)
!1607 = !DILocation(line: 74, column: 28, scope: !1597)
!1608 = !DILocation(line: 74, column: 18, scope: !1597)
!1609 = !DILocation(line: 74, column: 2, scope: !1597)
!1610 = !DILocalVariable(name: "tempdir", scope: !1597, file: !262, line: 74, type: !53)
!1611 = !DILocation(line: 74, column: 2, scope: !1587)
!1612 = !DILocation(line: 75, column: 9, scope: !1597)
!1613 = !DILocation(line: 78, column: 6, scope: !1597)
!1614 = !DILocation(line: 78, column: 11, scope: !1597)
!1615 = !DILocation(line: 78, column: 5, scope: !1597)
!1616 = !DILocation(line: 79, column: 19, scope: !1597)
!1617 = !DILocation(line: 79, column: 3, scope: !1597)
!1618 = !DILocation(line: 83, column: 38, scope: !1597)
!1619 = !DILocation(line: 83, column: 24, scope: !1597)
!1620 = !DILocation(line: 83, column: 2, scope: !1597)
!1621 = !DILocalVariable(name: "matchaPkgPath", scope: !1597, file: !262, line: 83, type: !53)
!1622 = !DILocation(line: 83, column: 2, scope: !1587)
!1623 = !DILocation(line: 84, column: 9, scope: !1597)
!1624 = !DILocation(line: 89, column: 52, scope: !1597)
!1625 = !DILocation(line: 89, column: 36, scope: !1597)
!1626 = !DILocation(line: 89, column: 27, scope: !1597)
!1627 = !DILocation(line: 90, column: 9, scope: !1597)
!1628 = !DILocation(line: 91, column: 17, scope: !1597)
!1629 = !DILocation(line: 95, column: 30, scope: !1597)
!1630 = !DILocation(line: 95, column: 20, scope: !1597)
!1631 = !DILocation(line: 96, column: 9, scope: !1597)
!1632 = !DILocation(line: 101, column: 12, scope: !1597)
!1633 = !DILocation(line: 101, column: 5, scope: !1597)
!1634 = !DILocation(line: 101, column: 50, scope: !1597)
!1635 = !DILocation(line: 101, column: 55, scope: !1597)
!1636 = !DILocation(line: 101, column: 2, scope: !1597)
!1637 = !DILocation(line: 102, column: 17, scope: !1597)
!1638 = !DILocation(line: 106, column: 20, scope: !1597)
!1639 = !DILocation(line: 106, column: 14, scope: !1597)
!1640 = !DILocalVariable(name: "cwd", scope: !1597, file: !262, line: 106, type: !54)
!1641 = !DILocation(line: 106, column: 2, scope: !1587)
!1642 = !DILocation(line: 107, column: 9, scope: !1597)
!1643 = !DILocation(line: 112, column: 2, scope: !1597)
!1644 = !DILocalVariable(name: "ctx", scope: !1597, file: !262, line: 112, type: !1645)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!1646 = !DILocation(line: 112, column: 2, scope: !1587)
!1647 = !DILocation(line: 112, column: 15, scope: !1597)
!1648 = !DILocation(line: 113, column: 13, scope: !1597)
!1649 = !DILocation(line: 114, column: 5, scope: !1597)
!1650 = !DILocation(line: 114, column: 11, scope: !1597)
!1651 = !DILocation(line: 115, column: 5, scope: !1597)
!1652 = !DILocation(line: 115, column: 18, scope: !1597)
!1653 = !DILocation(line: 115, column: 16, scope: !1597)
!1654 = !DILocation(line: 118, column: 17, scope: !1597)
!1655 = !DILocation(line: 119, column: 9, scope: !1597)
!1656 = !DILocation(line: 119, column: 15, scope: !1597)
!1657 = !DILocation(line: 120, column: 17, scope: !1597)
!1658 = !DILocation(line: 129, column: 25, scope: !1597)
!1659 = !DILocation(line: 129, column: 15, scope: !1597)
!1660 = !DILocation(line: 122, column: 3, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1597, file: !262, line: 122, column: 3)
!1662 = !DILocation(line: 120, column: 15, scope: !1597)
!1663 = !DILocation(line: 123, column: 13, scope: !1661)
!1664 = !DILocation(line: 123, column: 6, scope: !1661)
!1665 = !DILocation(line: 124, column: 18, scope: !1661)
!1666 = !DILocation(line: 124, column: 16, scope: !1661)
!1667 = !DILocation(line: 130, column: 9, scope: !1597)
!1668 = !DILocalVariable(name: "pkg", scope: !1669, file: !262, line: 135, type: !820)
!1669 = distinct !DILexicalBlock(scope: !1597, file: !262, line: 135, column: 2)
!1670 = !DILocation(line: 135, column: 6, scope: !1597)
!1671 = !DILocation(line: 135, column: 2, scope: !1669)
!1672 = !DILocation(line: 136, column: 9, scope: !1669)
!1673 = !DILocation(line: 136, column: 15, scope: !1669)
!1674 = !DILocation(line: 137, column: 73, scope: !1669)
!1675 = !DILocation(line: 137, column: 15, scope: !1669)
!1676 = !DILocation(line: 142, column: 32, scope: !1597)
!1677 = !DILocation(line: 142, column: 21, scope: !1597)
!1678 = !DILocation(line: 143, column: 9, scope: !1597)
!1679 = !DILocalVariable(name: "ok", scope: !1680, file: !262, line: 148, type: !49)
!1680 = distinct !DILexicalBlock(scope: !1597, file: !262, line: 148, column: 2)
!1681 = !DILocation(line: 148, column: 5, scope: !1597)
!1682 = !DILocation(line: 148, column: 5, scope: !1680)
!1683 = !DILocation(line: 148, column: 2, scope: !1680)
!1684 = !DILocation(line: 150, column: 34, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 150, column: 3)
!1686 = distinct !DILexicalBlock(scope: !1680, file: !262, line: 148, column: 33)
!1687 = !DILocation(line: 150, column: 13, scope: !1685)
!1688 = !DILocalVariable(name: "ok", scope: !1689, file: !262, line: 306, type: !49)
!1689 = distinct !DILexicalBlock(scope: !1597, file: !262, line: 306, column: 2)
!1690 = !DILocation(line: 306, column: 5, scope: !1597)
!1691 = !DILocation(line: 306, column: 5, scope: !1689)
!1692 = !DILocalVariable(name: "err", scope: !1685, file: !262, line: 150, type: !86)
!1693 = !DILocation(line: 150, column: 6, scope: !1686)
!1694 = !DILocation(line: 150, column: 46, scope: !1685)
!1695 = !DILocation(line: 155, column: 3, scope: !1686)
!1696 = !DILocalVariable(name: "gopathDir", scope: !1686, file: !262, line: 155, type: !53)
!1697 = !DILocation(line: 155, column: 3, scope: !1680)
!1698 = !DILocation(line: 155, column: 25, scope: !1686)
!1699 = !DILocation(line: 158, column: 29, scope: !1686)
!1700 = !DILocalVariable(name: "workOutputDir", scope: !1686, file: !262, line: 158, type: !54)
!1701 = !DILocation(line: 158, column: 3, scope: !1680)
!1702 = !DILocation(line: 159, column: 19, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 159, column: 3)
!1704 = !DILocation(line: 159, column: 13, scope: !1703)
!1705 = !DILocalVariable(name: "err", scope: !1703, file: !262, line: 159, type: !86)
!1706 = !DILocation(line: 159, column: 6, scope: !1686)
!1707 = !DILocation(line: 159, column: 46, scope: !1703)
!1708 = !DILocation(line: 164, column: 26, scope: !1686)
!1709 = !DILocation(line: 165, column: 35, scope: !1710)
!1710 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 165, column: 3)
!1711 = !DILocation(line: 165, column: 19, scope: !1710)
!1712 = !DILocation(line: 165, column: 13, scope: !1710)
!1713 = !DILocalVariable(name: "err", scope: !1710, file: !262, line: 165, type: !86)
!1714 = !DILocation(line: 165, column: 6, scope: !1686)
!1715 = !DILocation(line: 165, column: 57, scope: !1710)
!1716 = !DILocation(line: 170, column: 3, scope: !1686)
!1717 = !DILocalVariable(name: "mainPath", scope: !1686, file: !262, line: 170, type: !53)
!1718 = !DILocation(line: 170, column: 3, scope: !1680)
!1719 = !DILocation(line: 170, column: 24, scope: !1686)
!1720 = !DILocation(line: 171, column: 76, scope: !1686)
!1721 = !DILocation(line: 171, column: 80, scope: !1686)
!1722 = !DILocation(line: 171, column: 58, scope: !1686)
!1723 = !DILocation(line: 171, column: 44, scope: !1686)
!1724 = !DILocation(line: 171, column: 19, scope: !1686)
!1725 = !DILocation(line: 171, column: 9, scope: !1686)
!1726 = !DILocation(line: 172, column: 10, scope: !1686)
!1727 = !DILocation(line: 206, column: 11, scope: !1686)
!1728 = !DILocation(line: 173, column: 74, scope: !1686)
!1729 = !DILocation(line: 173, column: 15, scope: !1686)
!1730 = !DILocalVariable(name: "envs", scope: !1686, file: !262, line: 206, type: !1731)
!1731 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*struct{*string,int,int},int,int}", file: !17, size: 192, align: 8, elements: !1732)
!1732 = !{!1733, !75, !76}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1734, size: 64, align: 64)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!1735 = !DILocation(line: 206, column: 3, scope: !1680)
!1736 = !DILocalVariable(name: "ok", scope: !1737, file: !262, line: 207, type: !49)
!1737 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 207, column: 3)
!1738 = !DILocation(line: 207, column: 6, scope: !1686)
!1739 = !DILocation(line: 207, column: 6, scope: !1737)
!1740 = !DILocation(line: 207, column: 3, scope: !1737)
!1741 = !DILocation(line: 208, column: 29, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !1737, file: !262, line: 207, column: 38)
!1743 = !DILocation(line: 208, column: 16, scope: !1742)
!1744 = !DILocation(line: 0, scope: !1686)
!1745 = !DILocalVariable(name: "ok", scope: !1746, file: !262, line: 214, type: !49)
!1746 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 214, column: 3)
!1747 = !DILocation(line: 214, column: 6, scope: !1686)
!1748 = !DILocation(line: 214, column: 6, scope: !1746)
!1749 = !DILocalVariable(name: "err", scope: !1742, file: !262, line: 208, type: !86)
!1750 = !DILocation(line: 208, column: 4, scope: !1737)
!1751 = !DILocation(line: 209, column: 11, scope: !1742)
!1752 = !DILocation(line: 210, column: 5, scope: !1742)
!1753 = !DILocation(line: 212, column: 11, scope: !1742)
!1754 = !DILocation(line: 212, column: 9, scope: !1742)
!1755 = !DILocation(line: 214, column: 3, scope: !1746)
!1756 = !DILocation(line: 215, column: 31, scope: !1757)
!1757 = distinct !DILexicalBlock(scope: !1746, file: !262, line: 214, column: 40)
!1758 = !DILocation(line: 215, column: 16, scope: !1757)
!1759 = !DILocation(line: 0, scope: !1742)
!1760 = !DILocalVariable(name: "ok", scope: !1761, file: !262, line: 221, type: !49)
!1761 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 221, column: 3)
!1762 = !DILocation(line: 221, column: 6, scope: !1686)
!1763 = !DILocation(line: 221, column: 6, scope: !1761)
!1764 = !DILocalVariable(name: "err", scope: !1757, file: !262, line: 215, type: !86)
!1765 = !DILocation(line: 215, column: 4, scope: !1746)
!1766 = !DILocation(line: 216, column: 11, scope: !1757)
!1767 = !DILocation(line: 217, column: 5, scope: !1757)
!1768 = !DILocation(line: 219, column: 11, scope: !1757)
!1769 = !DILocation(line: 219, column: 9, scope: !1757)
!1770 = !DILocation(line: 221, column: 3, scope: !1761)
!1771 = !DILocation(line: 222, column: 29, scope: !1772)
!1772 = distinct !DILexicalBlock(scope: !1761, file: !262, line: 221, column: 38)
!1773 = !DILocation(line: 222, column: 16, scope: !1772)
!1774 = !DILocation(line: 0, scope: !1757)
!1775 = !DILocalVariable(name: "ok", scope: !1776, file: !262, line: 228, type: !49)
!1776 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 228, column: 3)
!1777 = !DILocation(line: 228, column: 6, scope: !1686)
!1778 = !DILocation(line: 228, column: 6, scope: !1776)
!1779 = !DILocalVariable(name: "err", scope: !1772, file: !262, line: 222, type: !86)
!1780 = !DILocation(line: 222, column: 4, scope: !1761)
!1781 = !DILocation(line: 223, column: 11, scope: !1772)
!1782 = !DILocation(line: 224, column: 5, scope: !1772)
!1783 = !DILocation(line: 226, column: 11, scope: !1772)
!1784 = !DILocation(line: 226, column: 9, scope: !1772)
!1785 = !DILocation(line: 228, column: 3, scope: !1776)
!1786 = !DILocation(line: 229, column: 31, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1776, file: !262, line: 228, column: 40)
!1788 = !DILocation(line: 229, column: 16, scope: !1787)
!1789 = !DILocation(line: 0, scope: !1772)
!1790 = !DILocation(line: 241, column: 12, scope: !1686)
!1791 = !DILocalVariable(name: "err", scope: !1787, file: !262, line: 229, type: !86)
!1792 = !DILocation(line: 229, column: 4, scope: !1776)
!1793 = !DILocation(line: 230, column: 11, scope: !1787)
!1794 = !DILocation(line: 231, column: 5, scope: !1787)
!1795 = !DILocation(line: 233, column: 11, scope: !1787)
!1796 = !DILocation(line: 233, column: 9, scope: !1787)
!1797 = !DILocalVariable(name: "archs", scope: !1686, file: !262, line: 241, type: !1798)
!1798 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.command-line-arguments.archPath,int,int}", file: !17, size: 192, align: 8, elements: !1799)
!1799 = !{!1800, !75, !76}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !17, line: 1, baseType: !1801, size: 64, align: 64)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.archPath", file: !262, line: 236, size: 384, align: 8, elements: !1803)
!1803 = !{!1804, !1805, !1806}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "arch", file: !262, line: 237, baseType: !54, size: 128, align: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "path", file: !262, line: 238, baseType: !54, size: 128, align: 64, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !262, line: 239, baseType: !86, size: 128, align: 64, offset: 256)
!1807 = !DILocation(line: 241, column: 3, scope: !1680)
!1808 = !DILocation(line: 242, column: 3, scope: !1686)
!1809 = !DILocalVariable(name: "archChan", scope: !1686, file: !262, line: 242, type: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1811 = !DILocation(line: 242, column: 3, scope: !1680)
!1812 = !DILocation(line: 242, column: 15, scope: !1686)
!1813 = !DILocation(line: 243, column: 3, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 243, column: 3)
!1815 = !DILocation(line: 244, column: 7, scope: !1814)
!1816 = !DILocation(line: 244, column: 4, scope: !1814)
!1817 = !DILocation(line: 254, column: 8, scope: !1814)
!1818 = !DILocation(line: 254, column: 13, scope: !1814)
!1819 = !DILocation(line: 254, column: 7, scope: !1814)
!1820 = !DILocation(line: 255, column: 15, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1814, file: !262, line: 254, column: 23)
!1822 = !DILocation(line: 255, column: 13, scope: !1821)
!1823 = !DILocation(line: 256, column: 17, scope: !1821)
!1824 = !DILocation(line: 257, column: 6, scope: !1821)
!1825 = !DILocation(line: 259, column: 13, scope: !1821)
!1826 = !DILocation(line: 259, column: 11, scope: !1821)
!1827 = !DILocation(line: 0, scope: !1821)
!1828 = !DILocation(line: 262, column: 6, scope: !1686)
!1829 = !DILocation(line: 262, column: 11, scope: !1686)
!1830 = !DILocation(line: 262, column: 3, scope: !1686)
!1831 = !DILocalVariable(name: "i", scope: !1832, file: !262, line: 263, type: !58)
!1832 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 263, column: 4)
!1833 = !DILocation(line: 263, column: 8, scope: !1686)
!1834 = !DILocation(line: 273, column: 15, scope: !1686)
!1835 = !DILocation(line: 265, column: 17, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1832, file: !262, line: 263, column: 35)
!1837 = !DILocation(line: 266, column: 6, scope: !1836)
!1838 = !DILocation(line: 268, column: 13, scope: !1836)
!1839 = !DILocation(line: 268, column: 11, scope: !1836)
!1840 = !DILocation(line: 263, column: 31, scope: !1832)
!1841 = !DILocation(line: 263, column: 18, scope: !1832)
!1842 = !DILocation(line: 264, column: 15, scope: !1836)
!1843 = !DILocation(line: 264, column: 13, scope: !1836)
!1844 = !DILocalVariable(name: "cmd", scope: !1686, file: !262, line: 273, type: !1161)
!1845 = !DILocation(line: 273, column: 3, scope: !1680)
!1846 = !DILocation(line: 274, column: 3, scope: !1847)
!1847 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 274, column: 3)
!1848 = !DILocalVariable(name: "i", scope: !1847, file: !262, line: 274, type: !1802)
!1849 = !DILocation(line: 274, column: 7, scope: !1686)
!1850 = !DILocation(line: 275, column: 41, scope: !1847)
!1851 = !DILocation(line: 275, column: 7, scope: !1847)
!1852 = !DILocation(line: 275, column: 25, scope: !1847)
!1853 = !DILocation(line: 275, column: 15, scope: !1847)
!1854 = !DILocation(line: 275, column: 13, scope: !1847)
!1855 = !DILocation(line: 277, column: 6, scope: !1686)
!1856 = !DILocation(line: 277, column: 24, scope: !1686)
!1857 = !DILocation(line: 277, column: 14, scope: !1686)
!1858 = !DILocation(line: 277, column: 12, scope: !1686)
!1859 = !DILocation(line: 278, column: 20, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 278, column: 3)
!1861 = !DILocation(line: 278, column: 13, scope: !1860)
!1862 = !DILocalVariable(name: "err", scope: !1860, file: !262, line: 278, type: !86)
!1863 = !DILocation(line: 278, column: 6, scope: !1686)
!1864 = !DILocation(line: 278, column: 46, scope: !1860)
!1865 = !DILocation(line: 283, column: 16, scope: !1686)
!1866 = !DILocation(line: 283, column: 21, scope: !1686)
!1867 = !DILocalVariable(name: "outputDir", scope: !1686, file: !262, line: 283, type: !54)
!1868 = !DILocation(line: 283, column: 3, scope: !1680)
!1869 = !DILocation(line: 284, column: 16, scope: !1686)
!1870 = !DILocation(line: 300, column: 38, scope: !1871)
!1871 = distinct !DILexicalBlock(scope: !1686, file: !262, line: 300, column: 3)
!1872 = !DILocation(line: 300, column: 22, scope: !1871)
!1873 = !DILocation(line: 300, column: 13, scope: !1871)
!1874 = !DILocalVariable(name: "err", scope: !1871, file: !262, line: 300, type: !86)
!1875 = !DILocation(line: 300, column: 6, scope: !1686)
!1876 = !DILocation(line: 300, column: 129, scope: !1871)
!1877 = !DILocation(line: 306, column: 2, scope: !1689)
!1878 = !DILocation(line: 308, column: 36, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 308, column: 3)
!1880 = distinct !DILexicalBlock(scope: !1689, file: !262, line: 306, column: 37)
!1881 = !DILocation(line: 308, column: 13, scope: !1879)
!1882 = !DILocalVariable(name: "err", scope: !1879, file: !262, line: 308, type: !86)
!1883 = !DILocation(line: 308, column: 6, scope: !1880)
!1884 = !DILocation(line: 308, column: 48, scope: !1879)
!1885 = !DILocation(line: 313, column: 25, scope: !1880)
!1886 = !DILocalVariable(name: "gopathDir", scope: !1880, file: !262, line: 313, type: !54)
!1887 = !DILocation(line: 313, column: 3, scope: !1689)
!1888 = !DILocation(line: 315, column: 19, scope: !1880)
!1889 = !DILocalVariable(name: "ok", scope: !1890, file: !262, line: 316, type: !49)
!1890 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 316, column: 3)
!1891 = !DILocation(line: 316, column: 6, scope: !1880)
!1892 = !DILocation(line: 316, column: 6, scope: !1890)
!1893 = !DILocation(line: 316, column: 3, scope: !1890)
!1894 = !DILocation(line: 317, column: 19, scope: !1890)
!1895 = !DILocalVariable(name: "ok", scope: !1896, file: !262, line: 319, type: !49)
!1896 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 319, column: 3)
!1897 = !DILocation(line: 319, column: 6, scope: !1880)
!1898 = !DILocation(line: 319, column: 6, scope: !1896)
!1899 = !DILocation(line: 317, column: 17, scope: !1890)
!1900 = !DILocation(line: 319, column: 3, scope: !1896)
!1901 = !DILocation(line: 320, column: 19, scope: !1896)
!1902 = !DILocalVariable(name: "ok", scope: !1903, file: !262, line: 322, type: !49)
!1903 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 322, column: 3)
!1904 = !DILocation(line: 322, column: 6, scope: !1880)
!1905 = !DILocation(line: 322, column: 6, scope: !1903)
!1906 = !DILocation(line: 320, column: 17, scope: !1896)
!1907 = !DILocation(line: 322, column: 3, scope: !1903)
!1908 = !DILocation(line: 323, column: 19, scope: !1903)
!1909 = !DILocalVariable(name: "ok", scope: !1910, file: !262, line: 325, type: !49)
!1910 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 325, column: 3)
!1911 = !DILocation(line: 325, column: 6, scope: !1880)
!1912 = !DILocation(line: 325, column: 6, scope: !1910)
!1913 = !DILocation(line: 323, column: 17, scope: !1903)
!1914 = !DILocation(line: 325, column: 3, scope: !1910)
!1915 = !DILocation(line: 326, column: 19, scope: !1910)
!1916 = !DILocation(line: 329, column: 26, scope: !1880)
!1917 = !DILocation(line: 326, column: 17, scope: !1910)
!1918 = !DILocalVariable(name: "androidDir", scope: !1880, file: !262, line: 329, type: !54)
!1919 = !DILocation(line: 329, column: 3, scope: !1689)
!1920 = !DILocation(line: 330, column: 24, scope: !1880)
!1921 = !DILocalVariable(name: "mainPath", scope: !1880, file: !262, line: 330, type: !54)
!1922 = !DILocation(line: 330, column: 3, scope: !1689)
!1923 = !DILocation(line: 332, column: 76, scope: !1880)
!1924 = !DILocation(line: 332, column: 80, scope: !1880)
!1925 = !DILocation(line: 332, column: 58, scope: !1880)
!1926 = !DILocation(line: 332, column: 44, scope: !1880)
!1927 = !DILocation(line: 332, column: 19, scope: !1880)
!1928 = !DILocation(line: 332, column: 9, scope: !1880)
!1929 = !DILocation(line: 333, column: 10, scope: !1880)
!1930 = !DILocation(line: 337, column: 24, scope: !1880)
!1931 = !DILocation(line: 334, column: 75, scope: !1880)
!1932 = !DILocation(line: 334, column: 15, scope: !1880)
!1933 = !DILocalVariable(name: "javaDir2", scope: !1880, file: !262, line: 337, type: !54)
!1934 = !DILocation(line: 337, column: 3, scope: !1689)
!1935 = !DILocation(line: 338, column: 19, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 338, column: 3)
!1937 = !DILocation(line: 338, column: 13, scope: !1936)
!1938 = !DILocalVariable(name: "err", scope: !1936, file: !262, line: 338, type: !86)
!1939 = !DILocation(line: 338, column: 6, scope: !1880)
!1940 = !DILocation(line: 338, column: 41, scope: !1936)
!1941 = !DILocation(line: 341, column: 38, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 341, column: 3)
!1943 = !DILocation(line: 341, column: 79, scope: !1942)
!1944 = !DILocation(line: 341, column: 22, scope: !1942)
!1945 = !DILocation(line: 341, column: 13, scope: !1942)
!1946 = !DILocalVariable(name: "err", scope: !1942, file: !262, line: 341, type: !86)
!1947 = !DILocation(line: 341, column: 6, scope: !1880)
!1948 = !DILocation(line: 341, column: 123, scope: !1942)
!1949 = !DILocation(line: 344, column: 38, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 344, column: 3)
!1951 = !DILocation(line: 344, column: 78, scope: !1950)
!1952 = !DILocation(line: 344, column: 22, scope: !1950)
!1953 = !DILocation(line: 344, column: 13, scope: !1950)
!1954 = !DILocalVariable(name: "err", scope: !1950, file: !262, line: 344, type: !86)
!1955 = !DILocation(line: 344, column: 6, scope: !1880)
!1956 = !DILocation(line: 344, column: 121, scope: !1950)
!1957 = !DILocation(line: 347, column: 38, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 347, column: 3)
!1959 = !DILocation(line: 347, column: 79, scope: !1958)
!1960 = !DILocation(line: 347, column: 22, scope: !1958)
!1961 = !DILocation(line: 347, column: 13, scope: !1958)
!1962 = !DILocalVariable(name: "err", scope: !1958, file: !262, line: 347, type: !86)
!1963 = !DILocation(line: 347, column: 6, scope: !1880)
!1964 = !DILocation(line: 347, column: 123, scope: !1958)
!1965 = !DILocation(line: 352, column: 29, scope: !1880)
!1966 = !DILocalVariable(name: "workOutputDir", scope: !1880, file: !262, line: 352, type: !54)
!1967 = !DILocation(line: 352, column: 3, scope: !1689)
!1968 = !DILocation(line: 353, column: 19, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 353, column: 3)
!1970 = !DILocation(line: 353, column: 13, scope: !1969)
!1971 = !DILocalVariable(name: "err", scope: !1969, file: !262, line: 353, type: !86)
!1972 = !DILocation(line: 353, column: 6, scope: !1880)
!1973 = !DILocation(line: 353, column: 46, scope: !1969)
!1974 = !DILocation(line: 358, column: 26, scope: !1880)
!1975 = !DILocation(line: 359, column: 23, scope: !1880)
!1976 = !DILocalVariable(name: "aarDirPath", scope: !1880, file: !262, line: 358, type: !54)
!1977 = !DILocation(line: 358, column: 3, scope: !1689)
!1978 = !DILocation(line: 360, column: 19, scope: !1979)
!1979 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 360, column: 3)
!1980 = !DILocation(line: 360, column: 13, scope: !1979)
!1981 = !DILocalVariable(name: "err", scope: !1979, file: !262, line: 360, type: !86)
!1982 = !DILocation(line: 360, column: 6, scope: !1880)
!1983 = !DILocation(line: 360, column: 43, scope: !1979)
!1984 = !DILocation(line: 365, column: 3, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 365, column: 3)
!1986 = !DILocation(line: 386, column: 13, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 386, column: 3)
!1988 = !DILocation(line: 366, column: 27, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1985, file: !262, line: 365, column: 37)
!1990 = !DILocalVariable(name: "arch", scope: !1985, file: !262, line: 365, type: !54)
!1991 = !DILocation(line: 365, column: 7, scope: !1880)
!1992 = !DILocation(line: 366, column: 16, scope: !1989)
!1993 = !DILocalVariable(name: "err", scope: !1989, file: !262, line: 366, type: !86)
!1994 = !DILocation(line: 366, column: 4, scope: !1985)
!1995 = !DILocation(line: 367, column: 11, scope: !1989)
!1996 = !DILocation(line: 370, column: 79, scope: !1989)
!1997 = !DILocation(line: 370, column: 73, scope: !1989)
!1998 = !DILocation(line: 370, column: 10, scope: !1989)
!1999 = !DILocation(line: 370, column: 29, scope: !1989)
!2000 = !DILocation(line: 370, column: 8, scope: !1989)
!2001 = !DILocation(line: 379, column: 57, scope: !1989)
!2002 = !DILocation(line: 379, column: 54, scope: !1989)
!2003 = !DILocation(line: 379, column: 20, scope: !1989)
!2004 = !DILocation(line: 373, column: 5, scope: !1989)
!2005 = !DILocation(line: 379, column: 8, scope: !1989)
!2006 = !DILocation(line: 372, column: 10, scope: !1989)
!2007 = !DILocation(line: 372, column: 18, scope: !1989)
!2008 = !DILocation(line: 375, column: 5, scope: !1989)
!2009 = !DILocation(line: 381, column: 11, scope: !1989)
!2010 = !DILocation(line: 386, column: 22, scope: !1987)
!2011 = !DILocalVariable(name: "err", scope: !1987, file: !262, line: 386, type: !86)
!2012 = !DILocation(line: 386, column: 6, scope: !1880)
!2013 = !DILocation(line: 386, column: 84, scope: !1987)
!2014 = !DILocation(line: 391, column: 16, scope: !1880)
!2015 = !DILocation(line: 391, column: 21, scope: !1880)
!2016 = !DILocalVariable(name: "outputDir", scope: !1880, file: !262, line: 391, type: !54)
!2017 = !DILocation(line: 391, column: 3, scope: !1689)
!2018 = !DILocation(line: 392, column: 16, scope: !1880)
!2019 = !DILocation(line: 397, column: 38, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !1880, file: !262, line: 397, column: 3)
!2021 = !DILocation(line: 397, column: 22, scope: !2020)
!2022 = !DILocation(line: 397, column: 13, scope: !2020)
!2023 = !DILocalVariable(name: "err", scope: !2020, file: !262, line: 397, type: !86)
!2024 = !DILocation(line: 397, column: 6, scope: !1880)
!2025 = !DILocation(line: 397, column: 100, scope: !2020)
!2026 = !DILocation(line: 70, column: 3, scope: !1587)
!2027 = distinct !DISubprogram(name: "cmd.validateGoInstall", scope: null, file: !320, line: 46, type: !316, isLocal: true, isDefinition: true, scopeLine: 46, isOptimized: false, unit: !1, retainedNodes: !3)
!2028 = !DILocalVariable(name: "f", arg: 1, scope: !2027, file: !320, line: 46, type: !318)
!2029 = !DILocation(line: 46, column: 24, scope: !2027)
!2030 = !DILocation(line: 55, column: 25, scope: !2031, inlinedAt: !2032)
!2031 = distinct !DISubprogram(name: "cmd._validateGoInstall", scope: null, file: !320, line: 55, type: !316, isLocal: true, isDefinition: true, scopeLine: 55, isOptimized: false, unit: !1, retainedNodes: !3)
!2032 = distinct !DILocation(line: 47, column: 9, scope: !2033)
!2033 = distinct !DILexicalBlock(scope: !2027, file: !320, line: 46, column: 1)
!2034 = !DILocalVariable(name: "f", arg: 1, scope: !2031, file: !320, line: 55, type: !318)
!2035 = !DILocation(line: 56, column: 15, scope: !2036, inlinedAt: !2032)
!2036 = distinct !DILexicalBlock(scope: !2037, file: !320, line: 56, column: 2)
!2037 = distinct !DILexicalBlock(scope: !2031, file: !320, line: 55, column: 1)
!2038 = !DILocalVariable(name: "err", scope: !2036, file: !320, line: 56, type: !86)
!2039 = !DILocation(line: 56, column: 5, scope: !2037, inlinedAt: !2032)
!2040 = !DILocation(line: 56, column: 38, scope: !2036, inlinedAt: !2032)
!2041 = !DILocation(line: 57, column: 14, scope: !2036, inlinedAt: !2032)
!2042 = !DILocation(line: 57, column: 3, scope: !2036, inlinedAt: !2032)
!2043 = !DILocation(line: 60, column: 14, scope: !2037, inlinedAt: !2032)
!2044 = !DILocalVariable(name: "err", scope: !2037, file: !320, line: 60, type: !86)
!2045 = !DILocation(line: 60, column: 2, scope: !2031, inlinedAt: !2032)
!2046 = !DILocation(line: 61, column: 9, scope: !2037, inlinedAt: !2032)
!2047 = !DILocation(line: 62, column: 3, scope: !2037, inlinedAt: !2032)
!2048 = !DILocalVariable(name: "$ret72", scope: !2031, file: !320, line: 55, type: !86)
!2049 = !DILocation(line: 55, column: 35, scope: !2031, inlinedAt: !2032)
!2050 = !DILocation(line: 64, column: 6, scope: !2037, inlinedAt: !2032)
!2051 = !DILocation(line: 64, column: 2, scope: !2037, inlinedAt: !2032)
!2052 = !DILocation(line: 65, column: 33, scope: !2037, inlinedAt: !2032)
!2053 = !DILocalVariable(name: "ver", scope: !2037, file: !320, line: 60, type: !98)
!2054 = !DILocation(line: 65, column: 12, scope: !2037, inlinedAt: !2032)
!2055 = !DILocation(line: 65, column: 55, scope: !2037, inlinedAt: !2032)
!2056 = !DILocation(line: 69, column: 2, scope: !2037, inlinedAt: !2032)
!2057 = !DILocation(line: 65, column: 85, scope: !2037, inlinedAt: !2032)
!2058 = !DILocation(line: 65, column: 64, scope: !2037, inlinedAt: !2032)
!2059 = !DILocation(line: 65, column: 107, scope: !2037, inlinedAt: !2032)
!2060 = !DILocation(line: 65, column: 137, scope: !2037, inlinedAt: !2032)
!2061 = !DILocation(line: 65, column: 116, scope: !2037, inlinedAt: !2032)
!2062 = !DILocation(line: 65, column: 3, scope: !2037, inlinedAt: !2032)
!2063 = !DILocation(line: 66, column: 18, scope: !2037, inlinedAt: !2032)
!2064 = !DILocation(line: 66, column: 4, scope: !2037, inlinedAt: !2032)
!2065 = !DILocation(line: 47, column: 9, scope: !2033)
!2066 = !DILocalVariable(name: "err", scope: !2033, file: !320, line: 47, type: !86)
!2067 = !DILocation(line: 47, column: 2, scope: !2027)
!2068 = !DILocation(line: 48, column: 9, scope: !2033)
!2069 = !DILocation(line: 49, column: 7, scope: !2033)
!2070 = !DILocalVariable(name: "$ret71", scope: !2027, file: !320, line: 46, type: !86)
!2071 = !DILocation(line: 46, column: 34, scope: !2027)
!2072 = !DILocation(line: 52, column: 2, scope: !2033)
!2073 = distinct !DISubprogram(name: "cmd.NewTmpDir", linkageName: "command_line_arguments.NewTmpDir", scope: null, file: !471, line: 113, type: !472, isLocal: false, isDefinition: true, scopeLine: 113, isOptimized: false, unit: !1, retainedNodes: !3)
!2074 = !DILocalVariable(name: "f", arg: 1, scope: !2073, file: !471, line: 113, type: !318)
!2075 = !DILocation(line: 113, column: 16, scope: !2073)
!2076 = !DILocalVariable(name: "path", arg: 2, scope: !2073, file: !471, line: 113, type: !54)
!2077 = !DILocation(line: 113, column: 26, scope: !2073)
!2078 = !DILocation(line: 116, column: 6, scope: !2079)
!2079 = distinct !DILexicalBlock(scope: !2073, file: !471, line: 113, column: 1)
!2080 = !DILocation(line: 116, column: 2, scope: !2079)
!2081 = !DILocation(line: 118, column: 24, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2079, file: !471, line: 116, column: 19)
!2083 = !DILocalVariable(name: "err", scope: !2082, file: !471, line: 117, type: !86)
!2084 = !DILocation(line: 117, column: 7, scope: !2079)
!2085 = !DILocation(line: 119, column: 10, scope: !2082)
!2086 = !DILocation(line: 0, scope: !2079)
!2087 = !DILocalVariable(name: "tmpdir", scope: !2079, file: !471, line: 115, type: !54)
!2088 = !DILocation(line: 115, column: 2, scope: !2073)
!2089 = !DILocation(line: 129, column: 6, scope: !2079)
!2090 = !DILocation(line: 129, column: 21, scope: !2079)
!2091 = !DILocation(line: 123, column: 11, scope: !2079)
!2092 = !DILocalVariable(name: "$ret39", scope: !2073, file: !471, line: 113, type: !54)
!2093 = !DILocation(line: 113, column: 40, scope: !2073)
!2094 = !DILocalVariable(name: "$ret40", scope: !2073, file: !471, line: 113, type: !86)
!2095 = !DILocation(line: 113, column: 48, scope: !2073)
!2096 = !DILocation(line: 120, column: 4, scope: !2082)
!2097 = !DILocation(line: 126, column: 22, scope: !2079)
!2098 = !DILocation(line: 129, column: 25, scope: !2079)
!2099 = !DILocation(line: 129, column: 2, scope: !2079)
!2100 = !DILocation(line: 130, column: 25, scope: !2079)
!2101 = !DILocation(line: 130, column: 11, scope: !2079)
!2102 = !DILocation(line: 130, column: 4, scope: !2079)
!2103 = !DILocation(line: 132, column: 2, scope: !2079)
!2104 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk3", scope: null, file: !262, line: 79, type: !2105, isLocal: true, isDefinition: true, scopeLine: 79, isOptimized: false, unit: !1, retainedNodes: !3)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{!40, !2107}
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Flags,string}", file: !17, size: 192, align: 8, elements: !2109)
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !17, line: 79, baseType: !318, size: 64, align: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "a1", file: !17, line: 79, baseType: !54, size: 128, align: 64, offset: 64)
!2112 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2104, file: !262, line: 79, type: !2107)
!2113 = !DILocation(line: 79, column: 3, scope: !2104)
!2114 = distinct !DISubprogram(name: "cmd.MatchaPkgPath", linkageName: "command_line_arguments.MatchaPkgPath", scope: null, file: !320, line: 83, type: !386, isLocal: false, isDefinition: true, scopeLine: 83, isOptimized: false, unit: !1, retainedNodes: !3)
!2115 = !DILocalVariable(name: "f", arg: 1, scope: !2114, file: !320, line: 83, type: !318)
!2116 = !DILocation(line: 83, column: 20, scope: !2114)
!2117 = !DILocation(line: 84, column: 32, scope: !2118)
!2118 = distinct !DILexicalBlock(scope: !2114, file: !320, line: 83, column: 1)
!2119 = !DILocation(line: 84, column: 22, scope: !2118)
!2120 = !DILocalVariable(name: "gopaths", scope: !2118, file: !320, line: 84, type: !114)
!2121 = !DILocation(line: 84, column: 2, scope: !2114)
!2122 = !DILocalVariable(name: "p", scope: !2118, file: !320, line: 85, type: !54)
!2123 = !DILocation(line: 85, column: 2, scope: !2114)
!2124 = !DILocation(line: 86, column: 2, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2118, file: !320, line: 86, column: 2)
!2126 = !DILocation(line: 87, column: 16, scope: !2125)
!2127 = !DILocation(line: 88, column: 6, scope: !2125)
!2128 = !DILocation(line: 88, column: 3, scope: !2125)
!2129 = !DILocation(line: 92, column: 7, scope: !2118)
!2130 = !DILocation(line: 93, column: 19, scope: !2118)
!2131 = !DILocalVariable(name: "$ret74", scope: !2114, file: !320, line: 83, type: !54)
!2132 = !DILocation(line: 83, column: 31, scope: !2114)
!2133 = !DILocalVariable(name: "$ret75", scope: !2114, file: !320, line: 83, type: !86)
!2134 = !DILocation(line: 83, column: 39, scope: !2114)
!2135 = !DILocation(line: 99, column: 2, scope: !2118)
!2136 = !DILocation(line: 94, column: 19, scope: !2118)
!2137 = !DILocation(line: 94, column: 4, scope: !2118)
!2138 = !DILocation(line: 96, column: 32, scope: !2118)
!2139 = !DILocation(line: 96, column: 20, scope: !2118)
!2140 = !DILocation(line: 96, column: 4, scope: !2118)
!2141 = distinct !DISubprogram(name: "cmd.ReadFile", linkageName: "command_line_arguments.ReadFile", scope: null, file: !471, line: 193, type: !2142, isLocal: false, isDefinition: true, scopeLine: 193, isOptimized: false, unit: !1, retainedNodes: !3)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!2144, !318, !54}
!2144 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{struct{*uint8,int,int},error}", file: !17, size: 320, align: 8, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 193, baseType: !98, size: 192, align: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 193, baseType: !86, size: 128, align: 64, offset: 192)
!2148 = !DILocalVariable(name: "f", arg: 1, scope: !2141, file: !471, line: 193, type: !318)
!2149 = !DILocation(line: 193, column: 15, scope: !2141)
!2150 = !DILocalVariable(name: "filename", arg: 2, scope: !2141, file: !471, line: 193, type: !54)
!2151 = !DILocation(line: 193, column: 25, scope: !2141)
!2152 = !DILocation(line: 194, column: 6, scope: !2141)
!2153 = !DILocation(line: 194, column: 2, scope: !2141)
!2154 = !DILocation(line: 195, column: 11, scope: !2141)
!2155 = !DILocation(line: 195, column: 4, scope: !2141)
!2156 = !DILocation(line: 197, column: 6, scope: !2141)
!2157 = !DILocation(line: 197, column: 2, scope: !2141)
!2158 = !DILocation(line: 198, column: 17, scope: !2141)
!2159 = !DILocalVariable(name: "$ret44", scope: !2141, file: !471, line: 193, type: !98)
!2160 = !DILocation(line: 193, column: 43, scope: !2141)
!2161 = !DILocation(line: 198, column: 3, scope: !2141)
!2162 = !DILocation(line: 200, column: 9, scope: !2141)
!2163 = !DILocation(line: 200, column: 2, scope: !2141)
!2164 = distinct !DISubprogram(name: "cmd.GoVersion", linkageName: "command_line_arguments.GoVersion", scope: null, file: !320, line: 126, type: !2165, isLocal: false, isDefinition: true, scopeLine: 126, isOptimized: false, unit: !1, retainedNodes: !3)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!2144, !318}
!2167 = !DILocalVariable(name: "f", arg: 1, scope: !2164, file: !320, line: 126, type: !318)
!2168 = !DILocation(line: 126, column: 16, scope: !2164)
!2169 = !DILocation(line: 127, column: 14, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2164, file: !320, line: 126, column: 1)
!2171 = !DILocalVariable(name: "cmd", scope: !2170, file: !320, line: 127, type: !1161)
!2172 = !DILocation(line: 127, column: 2, scope: !2164)
!2173 = !DILocation(line: 128, column: 33, scope: !2170)
!2174 = !DILocation(line: 128, column: 14, scope: !2170)
!2175 = !DILocalVariable(name: "err", scope: !2170, file: !320, line: 128, type: !86)
!2176 = !DILocation(line: 128, column: 2, scope: !2164)
!2177 = !DILocation(line: 129, column: 9, scope: !2170)
!2178 = !DILocalVariable(name: "$ret80", scope: !2164, file: !320, line: 126, type: !86)
!2179 = !DILocation(line: 126, column: 35, scope: !2164)
!2180 = !DILocation(line: 130, column: 3, scope: !2170)
!2181 = !DILocation(line: 132, column: 2, scope: !2170)
!2182 = distinct !DISubprogram(name: "cmd.Getwd", linkageName: "command_line_arguments.Getwd", scope: null, file: !471, line: 305, type: !386, isLocal: false, isDefinition: true, scopeLine: 305, isOptimized: false, unit: !1, retainedNodes: !3)
!2183 = !DILocalVariable(name: "f", arg: 1, scope: !2182, file: !471, line: 305, type: !318)
!2184 = !DILocation(line: 305, column: 12, scope: !2182)
!2185 = !DILocation(line: 306, column: 6, scope: !2182)
!2186 = !DILocation(line: 306, column: 2, scope: !2182)
!2187 = !DILocation(line: 307, column: 4, scope: !2182)
!2188 = !DILocation(line: 309, column: 6, scope: !2182)
!2189 = !DILocation(line: 309, column: 2, scope: !2182)
!2190 = !DILocation(line: 307, column: 11, scope: !2182)
!2191 = !DILocation(line: 310, column: 13, scope: !2182)
!2192 = !DILocation(line: 310, column: 3, scope: !2182)
!2193 = !DILocation(line: 312, column: 2, scope: !2182)
!2194 = distinct !DISubprogram(name: "cmd.ImportAll", linkageName: "command_line_arguments.ImportAll", scope: null, file: !320, line: 197, type: !2195, isLocal: false, isDefinition: true, scopeLine: 197, isOptimized: false, unit: !1, retainedNodes: !3)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!2197, !318, !1645, !114, !54, !2201}
!2197 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{struct{**Package,int,int},error}", file: !17, size: 320, align: 8, elements: !2198)
!2198 = !{!2199, !2200}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 197, baseType: !816, size: 192, align: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !17, line: 197, baseType: !86, size: 128, align: 64, offset: 192)
!2201 = !DIBasicType(name: "ImportMode", size: 64, encoding: DW_ATE_unsigned)
!2202 = !DILocalVariable(name: "paths", arg: 3, scope: !2194, file: !320, line: 197, type: !114)
!2203 = !DILocation(line: 197, column: 46, scope: !2194)
!2204 = !DILocalVariable(name: "f", arg: 1, scope: !2194, file: !320, line: 197, type: !318)
!2205 = !DILocation(line: 197, column: 16, scope: !2194)
!2206 = !DILocalVariable(name: "ctx", arg: 2, scope: !2194, file: !320, line: 197, type: !1645)
!2207 = !DILocation(line: 197, column: 26, scope: !2194)
!2208 = !DILocalVariable(name: "srcDir", arg: 4, scope: !2194, file: !320, line: 197, type: !54)
!2209 = !DILocation(line: 197, column: 62, scope: !2194)
!2210 = !DILocalVariable(name: "mode", arg: 5, scope: !2194, file: !320, line: 197, type: !2201)
!2211 = !DILocation(line: 197, column: 77, scope: !2194)
!2212 = !DILocation(line: 198, column: 10, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2194, file: !320, line: 197, column: 1)
!2214 = !DILocalVariable(name: "pkgs", scope: !2213, file: !320, line: 198, type: !652)
!2215 = !DILocation(line: 198, column: 2, scope: !2194)
!2216 = !DILocation(line: 199, column: 2, scope: !2217)
!2217 = distinct !DILexicalBlock(scope: !2213, file: !320, line: 199, column: 2)
!2218 = !DILocalVariable(name: "i", scope: !2217, file: !320, line: 199, type: !54)
!2219 = !DILocation(line: 199, column: 6, scope: !2213)
!2220 = !DILocation(line: 200, column: 7, scope: !2217)
!2221 = !DILocation(line: 200, column: 3, scope: !2217)
!2222 = !DILocation(line: 201, column: 12, scope: !2217)
!2223 = !DILocation(line: 204, column: 13, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2217, file: !320, line: 204, column: 3)
!2225 = !DILocalVariable(name: "err", scope: !2224, file: !320, line: 204, type: !86)
!2226 = !DILocation(line: 204, column: 6, scope: !2217)
!2227 = !DILocation(line: 204, column: 53, scope: !2224)
!2228 = !DILocation(line: 201, column: 5, scope: !2217)
!2229 = !DILocalVariable(name: "$ret83", scope: !2194, file: !320, line: 197, type: !816)
!2230 = !DILocation(line: 197, column: 101, scope: !2194)
!2231 = !DILocalVariable(name: "$ret84", scope: !2194, file: !320, line: 197, type: !86)
!2232 = !DILocation(line: 197, column: 119, scope: !2194)
!2233 = !DILocation(line: 205, column: 4, scope: !2224)
!2234 = !DILocation(line: 209, column: 14, scope: !2213)
!2235 = !DILocalVariable(name: "pkgSlice", scope: !2213, file: !320, line: 209, type: !816)
!2236 = !DILocation(line: 209, column: 2, scope: !2194)
!2237 = !DILocalVariable(name: "i", scope: !2238, file: !320, line: 210, type: !820)
!2238 = distinct !DILexicalBlock(scope: !2213, file: !320, line: 210, column: 2)
!2239 = !DILocation(line: 210, column: 6, scope: !2213)
!2240 = !DILocation(line: 210, column: 2, scope: !2238)
!2241 = !DILocation(line: 211, column: 14, scope: !2238)
!2242 = !DILocation(line: 211, column: 12, scope: !2238)
!2243 = !DILocation(line: 0, scope: !2238)
!2244 = !DILocation(line: 214, column: 2, scope: !2213)
!2245 = distinct !DISubprogram(name: "cmd.validateXcodeInstall", scope: null, file: !2246, line: 13, type: !316, isLocal: true, isDefinition: true, scopeLine: 13, isOptimized: false, unit: !1, retainedNodes: !3)
!2246 = !DIFile(filename: "ios.go", directory: ".")
!2247 = !DILocalVariable(name: "f", arg: 1, scope: !2245, file: !2246, line: 13, type: !318)
!2248 = !DILocation(line: 13, column: 27, scope: !2245)
!2249 = !DILocation(line: 23, column: 28, scope: !2250, inlinedAt: !2251)
!2250 = distinct !DISubprogram(name: "cmd._validateXcodeInstall", scope: null, file: !2246, line: 23, type: !316, isLocal: true, isDefinition: true, scopeLine: 23, isOptimized: false, unit: !1, retainedNodes: !3)
!2251 = distinct !DILocation(line: 14, column: 9, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2245, file: !2246, line: 13, column: 1)
!2253 = !DILocalVariable(name: "f", arg: 1, scope: !2250, file: !2246, line: 23, type: !318)
!2254 = !DILocation(line: 24, column: 15, scope: !2255, inlinedAt: !2251)
!2255 = distinct !DILexicalBlock(scope: !2250, file: !2246, line: 24, column: 2)
!2256 = !DILocalVariable(name: "err", scope: !2255, file: !2246, line: 24, type: !86)
!2257 = !DILocation(line: 24, column: 5, scope: !2250, inlinedAt: !2251)
!2258 = !DILocation(line: 24, column: 41, scope: !2255, inlinedAt: !2251)
!2259 = !DILocation(line: 25, column: 3, scope: !2255, inlinedAt: !2251)
!2260 = !DILocalVariable(name: "$ret59", scope: !2250, file: !2246, line: 23, type: !86)
!2261 = !DILocation(line: 23, column: 38, scope: !2250, inlinedAt: !2251)
!2262 = !DILocation(line: 27, column: 2, scope: !2250, inlinedAt: !2251)
!2263 = !DILocation(line: 14, column: 9, scope: !2252)
!2264 = !DILocalVariable(name: "err", scope: !2252, file: !2246, line: 14, type: !86)
!2265 = !DILocation(line: 14, column: 2, scope: !2245)
!2266 = !DILocation(line: 15, column: 9, scope: !2252)
!2267 = !DILocation(line: 16, column: 7, scope: !2252)
!2268 = !DILocalVariable(name: "$ret58", scope: !2245, file: !2246, line: 13, type: !86)
!2269 = !DILocation(line: 13, column: 37, scope: !2245)
!2270 = !DILocation(line: 20, column: 2, scope: !2252)
!2271 = distinct !DISubprogram(name: "cmd.WriteFile", linkageName: "command_line_arguments.WriteFile", scope: null, file: !471, line: 160, type: !2272, isLocal: false, isDefinition: true, scopeLine: 160, isOptimized: false, unit: !1, retainedNodes: !3)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!86, !318, !54, !1169}
!2274 = !DILocalVariable(name: "f", arg: 1, scope: !2271, file: !471, line: 160, type: !318)
!2275 = !DILocation(line: 160, column: 16, scope: !2271)
!2276 = !DILocalVariable(name: "filename", arg: 2, scope: !2271, file: !471, line: 160, type: !54)
!2277 = !DILocation(line: 160, column: 26, scope: !2271)
!2278 = !DILocalVariable(name: "r", arg: 3, scope: !2271, file: !471, line: 160, type: !1169)
!2279 = !DILocation(line: 160, column: 43, scope: !2271)
!2280 = !DILocalVariable(name: "disablePrint", scope: !2281, file: !471, line: 165, type: !49)
!2281 = distinct !DILexicalBlock(scope: !2271, file: !471, line: 160, column: 1)
!2282 = !DILocation(line: 165, column: 2, scope: !2271)
!2283 = !DILocalVariable(name: "file", scope: !2284, file: !471, line: 175, type: !265)
!2284 = distinct !DILexicalBlock(scope: !2281, file: !471, line: 174, column: 19)
!2285 = !DILocation(line: 175, column: 7, scope: !2281)
!2286 = !DILocation(line: 161, column: 6, scope: !2281)
!2287 = !DILocation(line: 191, column: 1, scope: !2271)
!2288 = !DILocation(line: 161, column: 2, scope: !2281)
!2289 = !DILocation(line: 162, column: 11, scope: !2281)
!2290 = !DILocation(line: 165, column: 18, scope: !2281)
!2291 = !DILocation(line: 165, column: 19, scope: !2281)
!2292 = !DILocation(line: 162, column: 3, scope: !2281)
!2293 = !DILocation(line: 162, column: 4, scope: !2281)
!2294 = !DILocation(line: 166, column: 2, scope: !2281)
!2295 = !DILocation(line: 166, column: 3, scope: !2281)
!2296 = !DILocation(line: 166, column: 17, scope: !2281)
!2297 = !DILocation(line: 167, column: 8, scope: !2281)
!2298 = !DILocation(line: 167, column: 2, scope: !2281)
!2299 = !DILocation(line: 171, column: 29, scope: !2281)
!2300 = !DILocation(line: 171, column: 17, scope: !2281)
!2301 = !DILocation(line: 171, column: 11, scope: !2281)
!2302 = !DILocation(line: 171, column: 9, scope: !2281)
!2303 = !DILocation(line: 171, column: 49, scope: !2281)
!2304 = !DILocation(line: 174, column: 5, scope: !2281)
!2305 = !DILocation(line: 174, column: 6, scope: !2281)
!2306 = !DILocation(line: 174, column: 2, scope: !2281)
!2307 = !DILocation(line: 176, column: 18, scope: !2284)
!2308 = !DILocation(line: 176, column: 13, scope: !2284)
!2309 = !DILocation(line: 177, column: 10, scope: !2284)
!2310 = !DILocation(line: 180, column: 9, scope: !2284)
!2311 = !DILocation(line: 180, column: 3, scope: !2284)
!2312 = !DILocation(line: 186, column: 23, scope: !2284)
!2313 = !DILocation(line: 186, column: 18, scope: !2284)
!2314 = !DILocation(line: 172, column: 3, scope: !2271)
!2315 = distinct !DISubprogram(name: "cmd.DarwinArmEnv", linkageName: "command_line_arguments.DarwinArmEnv", scope: null, file: !2246, line: 65, type: !2316, isLocal: false, isDefinition: true, scopeLine: 65, isOptimized: false, unit: !1, retainedNodes: !3)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{!554, !318}
!2318 = !DILocalVariable(name: "f", arg: 1, scope: !2315, file: !2246, line: 65, type: !318)
!2319 = !DILocation(line: 65, column: 19, scope: !2315)
!2320 = !DILocation(line: 66, column: 24, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2315, file: !2246, line: 65, column: 1)
!2322 = !DILocalVariable(name: "err", scope: !2321, file: !2246, line: 66, type: !86)
!2323 = !DILocation(line: 66, column: 2, scope: !2315)
!2324 = !DILocation(line: 67, column: 9, scope: !2321)
!2325 = !DILocalVariable(name: "$ret61", scope: !2315, file: !2246, line: 65, type: !114)
!2326 = !DILocation(line: 65, column: 30, scope: !2315)
!2327 = !DILocalVariable(name: "$ret62", scope: !2315, file: !2246, line: 65, type: !86)
!2328 = !DILocation(line: 65, column: 40, scope: !2315)
!2329 = !DILocation(line: 68, column: 3, scope: !2321)
!2330 = !DILocation(line: 76, column: 67, scope: !2321)
!2331 = !DILocation(line: 77, column: 68, scope: !2321)
!2332 = !DILocation(line: 74, column: 6, scope: !2321)
!2333 = !DILocation(line: 75, column: 7, scope: !2321)
!2334 = !DILocation(line: 76, column: 14, scope: !2321)
!2335 = !DILocation(line: 77, column: 15, scope: !2321)
!2336 = !DILocation(line: 70, column: 9, scope: !2321)
!2337 = !DILocation(line: 70, column: 2, scope: !2321)
!2338 = distinct !DISubprogram(name: "cmd.DarwinArm64Env", linkageName: "command_line_arguments.DarwinArm64Env", scope: null, file: !2246, line: 82, type: !2316, isLocal: false, isDefinition: true, scopeLine: 82, isOptimized: false, unit: !1, retainedNodes: !3)
!2339 = !DILocalVariable(name: "f", arg: 1, scope: !2338, file: !2246, line: 82, type: !318)
!2340 = !DILocation(line: 82, column: 21, scope: !2338)
!2341 = !DILocation(line: 83, column: 24, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2338, file: !2246, line: 82, column: 1)
!2343 = !DILocalVariable(name: "err", scope: !2342, file: !2246, line: 83, type: !86)
!2344 = !DILocation(line: 83, column: 2, scope: !2338)
!2345 = !DILocation(line: 84, column: 9, scope: !2342)
!2346 = !DILocalVariable(name: "$ret63", scope: !2338, file: !2246, line: 82, type: !114)
!2347 = !DILocation(line: 82, column: 32, scope: !2338)
!2348 = !DILocalVariable(name: "$ret64", scope: !2338, file: !2246, line: 82, type: !86)
!2349 = !DILocation(line: 82, column: 42, scope: !2338)
!2350 = !DILocation(line: 85, column: 3, scope: !2342)
!2351 = !DILocation(line: 92, column: 67, scope: !2342)
!2352 = !DILocation(line: 93, column: 68, scope: !2342)
!2353 = !DILocation(line: 90, column: 6, scope: !2342)
!2354 = !DILocation(line: 91, column: 7, scope: !2342)
!2355 = !DILocation(line: 92, column: 14, scope: !2342)
!2356 = !DILocation(line: 93, column: 15, scope: !2342)
!2357 = !DILocation(line: 87, column: 9, scope: !2342)
!2358 = !DILocation(line: 87, column: 2, scope: !2342)
!2359 = distinct !DISubprogram(name: "cmd.Darwin386Env", linkageName: "command_line_arguments.Darwin386Env", scope: null, file: !2246, line: 98, type: !2316, isLocal: false, isDefinition: true, scopeLine: 98, isOptimized: false, unit: !1, retainedNodes: !3)
!2360 = !DILocalVariable(name: "f", arg: 1, scope: !2359, file: !2246, line: 98, type: !318)
!2361 = !DILocation(line: 98, column: 19, scope: !2359)
!2362 = !DILocation(line: 99, column: 24, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2359, file: !2246, line: 98, column: 1)
!2364 = !DILocalVariable(name: "err", scope: !2363, file: !2246, line: 99, type: !86)
!2365 = !DILocation(line: 99, column: 2, scope: !2359)
!2366 = !DILocation(line: 100, column: 9, scope: !2363)
!2367 = !DILocalVariable(name: "$ret65", scope: !2359, file: !2246, line: 98, type: !114)
!2368 = !DILocation(line: 98, column: 30, scope: !2359)
!2369 = !DILocalVariable(name: "$ret66", scope: !2359, file: !2246, line: 98, type: !86)
!2370 = !DILocation(line: 98, column: 40, scope: !2359)
!2371 = !DILocation(line: 101, column: 3, scope: !2363)
!2372 = !DILocation(line: 108, column: 72, scope: !2363)
!2373 = !DILocation(line: 109, column: 73, scope: !2363)
!2374 = !DILocation(line: 106, column: 6, scope: !2363)
!2375 = !DILocation(line: 107, column: 7, scope: !2363)
!2376 = !DILocation(line: 108, column: 14, scope: !2363)
!2377 = !DILocation(line: 109, column: 15, scope: !2363)
!2378 = !DILocation(line: 103, column: 9, scope: !2363)
!2379 = !DILocation(line: 103, column: 2, scope: !2363)
!2380 = distinct !DISubprogram(name: "cmd.DarwinAmd64Env", linkageName: "command_line_arguments.DarwinAmd64Env", scope: null, file: !2246, line: 114, type: !2316, isLocal: false, isDefinition: true, scopeLine: 114, isOptimized: false, unit: !1, retainedNodes: !3)
!2381 = !DILocalVariable(name: "f", arg: 1, scope: !2380, file: !2246, line: 114, type: !318)
!2382 = !DILocation(line: 114, column: 21, scope: !2380)
!2383 = !DILocation(line: 115, column: 24, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2380, file: !2246, line: 114, column: 1)
!2385 = !DILocalVariable(name: "err", scope: !2384, file: !2246, line: 115, type: !86)
!2386 = !DILocation(line: 115, column: 2, scope: !2380)
!2387 = !DILocation(line: 116, column: 9, scope: !2384)
!2388 = !DILocalVariable(name: "$ret67", scope: !2380, file: !2246, line: 114, type: !114)
!2389 = !DILocation(line: 114, column: 32, scope: !2380)
!2390 = !DILocalVariable(name: "$ret68", scope: !2380, file: !2246, line: 114, type: !86)
!2391 = !DILocation(line: 114, column: 42, scope: !2380)
!2392 = !DILocation(line: 117, column: 3, scope: !2384)
!2393 = !DILocation(line: 122, column: 6, scope: !2384)
!2394 = !DILocation(line: 123, column: 7, scope: !2384)
!2395 = !DILocation(line: 124, column: 14, scope: !2384)
!2396 = !DILocation(line: 125, column: 15, scope: !2384)
!2397 = !DILocation(line: 119, column: 9, scope: !2384)
!2398 = !DILocation(line: 119, column: 2, scope: !2384)
!2399 = distinct !DISubprogram(name: "cmd.command_line_arguments.Bind.archPath..hash", linkageName: "command_line_arguments.command_line_arguments.Bind.archPath..hash", scope: null, file: !7, line: 1, type: !37, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!2400 = !DILocalVariable(name: "key", arg: 1, scope: !2399, file: !7, line: 1, type: !39)
!2401 = !DILocation(line: 1, column: 1, scope: !2399)
!2402 = !DILocalVariable(name: "seed", arg: 2, scope: !2399, file: !7, line: 1, type: !24)
!2403 = !DILocalVariable(name: "$ret94", scope: !2399, file: !7, line: 1, type: !24)
!2404 = distinct !DISubprogram(name: "cmd.command_line_arguments.Bind.archPath..eq", linkageName: "command_line_arguments.command_line_arguments.Bind.archPath..eq", scope: null, file: !7, line: 1, type: !47, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!2405 = !DILocalVariable(name: "key1", arg: 1, scope: !2404, file: !7, line: 1, type: !39)
!2406 = !DILocation(line: 1, column: 1, scope: !2404)
!2407 = !DILocalVariable(name: "key2", arg: 2, scope: !2404, file: !7, line: 1, type: !39)
!2408 = !DILocalVariable(name: "$ret95", scope: !2404, file: !7, line: 1, type: !49)
!2409 = distinct !DISubprogram(name: "cmd.Bind..func1", scope: null, file: !262, line: 244, type: !2410, isLocal: true, isDefinition: true, scopeLine: 244, isOptimized: false, unit: !1, retainedNodes: !3)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!40, !114}
!2412 = !DILocalVariable(name: "env", arg: 1, scope: !2409, file: !262, line: 244, type: !114)
!2413 = !DILocation(line: 244, column: 12, scope: !2409)
!2414 = !DILocation(line: 245, column: 13, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2409, file: !262, line: 244, column: 7)
!2416 = !DILocalVariable(name: "arch", scope: !2415, file: !262, line: 245, type: !54)
!2417 = !DILocation(line: 245, column: 5, scope: !2409)
!2418 = !DILocation(line: 246, column: 80, scope: !2415)
!2419 = !DILocation(line: 246, column: 74, scope: !2415)
!2420 = !DILocation(line: 246, column: 11, scope: !2415)
!2421 = !DILocation(line: 246, column: 33, scope: !2415)
!2422 = !DILocation(line: 246, column: 30, scope: !2415)
!2423 = !DILocation(line: 246, column: 9, scope: !2415)
!2424 = !DILocation(line: 247, column: 43, scope: !2415)
!2425 = !DILocation(line: 247, column: 27, scope: !2415)
!2426 = !DILocation(line: 247, column: 22, scope: !2415)
!2427 = !DILocalVariable(name: "path", scope: !2415, file: !262, line: 247, type: !54)
!2428 = !DILocation(line: 247, column: 5, scope: !2409)
!2429 = !DILocation(line: 250, column: 36, scope: !2415)
!2430 = !DILocation(line: 250, column: 27, scope: !2415)
!2431 = !DILocation(line: 250, column: 12, scope: !2415)
!2432 = !DILocation(line: 250, column: 20, scope: !2415)
!2433 = !DILocation(line: 250, column: 52, scope: !2415)
!2434 = !DILocation(line: 250, column: 79, scope: !2415)
!2435 = !DILocation(line: 250, column: 94, scope: !2415)
!2436 = !DILocalVariable(name: "err", scope: !2415, file: !262, line: 250, type: !86)
!2437 = !DILocation(line: 250, column: 5, scope: !2409)
!2438 = !DILocation(line: 251, column: 17, scope: !2415)
!2439 = !DILocation(line: 251, column: 5, scope: !2415)
!2440 = !DILocation(line: 251, column: 14, scope: !2415)
!2441 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk4", scope: null, file: !262, line: 244, type: !2442, isLocal: true, isDefinition: true, scopeLine: 244, isOptimized: false, unit: !1, retainedNodes: !3)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{!40, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*__go_descriptor,struct{*string,int,int}}", file: !17, size: 256, align: 8, elements: !2446)
!2446 = !{!2447, !2453}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "fn", file: !17, line: 244, baseType: !2448, size: 64, align: 64)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !262, line: 244, size: 64, align: 8, elements: !2450)
!2450 = !{!2451}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !262, line: 244, baseType: !2452, size: 64, align: 64)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !17, line: 244, baseType: !114, size: 192, align: 64, offset: 64)
!2454 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2441, file: !262, line: 244, type: !2444)
!2455 = !DILocation(line: 244, column: 4, scope: !2441)
!2456 = distinct !DISubprogram(name: "cmd.ArchClang", linkageName: "command_line_arguments.ArchClang", scope: null, file: !2246, line: 30, type: !802, isLocal: false, isDefinition: true, scopeLine: 30, isOptimized: false, unit: !1, retainedNodes: !3)
!2457 = !DILocalVariable(name: "goarch", arg: 1, scope: !2456, file: !2246, line: 30, type: !54)
!2458 = !DILocation(line: 30, column: 16, scope: !2456)
!2459 = !DILocation(line: 32, column: 2, scope: !2456)
!2460 = !DILocalVariable(name: "$ret60", scope: !2456, file: !2246, line: 30, type: !54)
!2461 = !DILocation(line: 30, column: 31, scope: !2456)
!2462 = !DILocation(line: 33, column: 3, scope: !2456)
!2463 = !DILocation(line: 34, column: 2, scope: !2456)
!2464 = !DILocation(line: 36, column: 2, scope: !2456)
!2465 = !DILocation(line: 38, column: 2, scope: !2456)
!2466 = !DILocation(line: 41, column: 13, scope: !2456)
!2467 = !DILocation(line: 41, column: 3, scope: !2456)
!2468 = distinct !DISubprogram(name: "cmd.CopyFile", linkageName: "command_line_arguments.CopyFile", scope: null, file: !471, line: 203, type: !2469, isLocal: false, isDefinition: true, scopeLine: 203, isOptimized: false, unit: !1, retainedNodes: !3)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!86, !318, !54, !54}
!2471 = !DILocalVariable(name: "f", arg: 1, scope: !2468, file: !471, line: 203, type: !318)
!2472 = !DILocation(line: 203, column: 15, scope: !2468)
!2473 = !DILocalVariable(name: "dst", arg: 2, scope: !2468, file: !471, line: 203, type: !54)
!2474 = !DILocation(line: 203, column: 25, scope: !2468)
!2475 = !DILocalVariable(name: "src", arg: 3, scope: !2468, file: !471, line: 203, type: !54)
!2476 = !DILocation(line: 203, column: 30, scope: !2468)
!2477 = !DILocalVariable(name: "disablePrint", scope: !2478, file: !471, line: 208, type: !49)
!2478 = distinct !DILexicalBlock(scope: !2468, file: !471, line: 203, column: 1)
!2479 = !DILocation(line: 208, column: 2, scope: !2468)
!2480 = !DILocalVariable(name: "$ret46", scope: !2468, file: !471, line: 203, type: !86)
!2481 = !DILocation(line: 203, column: 42, scope: !2468)
!2482 = !DILocation(line: 204, column: 6, scope: !2478)
!2483 = !DILocation(line: 223, column: 1, scope: !2468)
!2484 = !DILocation(line: 204, column: 2, scope: !2478)
!2485 = !DILocation(line: 205, column: 11, scope: !2478)
!2486 = !DILocation(line: 208, column: 18, scope: !2478)
!2487 = !DILocation(line: 208, column: 19, scope: !2478)
!2488 = !DILocation(line: 205, column: 3, scope: !2478)
!2489 = !DILocation(line: 205, column: 4, scope: !2478)
!2490 = !DILocation(line: 209, column: 2, scope: !2478)
!2491 = !DILocation(line: 209, column: 3, scope: !2478)
!2492 = !DILocation(line: 209, column: 17, scope: !2478)
!2493 = !DILocation(line: 210, column: 8, scope: !2478)
!2494 = !DILocation(line: 210, column: 2, scope: !2478)
!2495 = !DILocation(line: 214, column: 5, scope: !2478)
!2496 = !DILocation(line: 214, column: 6, scope: !2478)
!2497 = !DILocation(line: 214, column: 2, scope: !2478)
!2498 = !DILocation(line: 215, column: 19, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2478, file: !471, line: 214, column: 19)
!2500 = !DILocalVariable(name: "file", scope: !2499, file: !471, line: 215, type: !265)
!2501 = !DILocation(line: 215, column: 3, scope: !2478)
!2502 = !DILocalVariable(name: "err", scope: !2499, file: !471, line: 215, type: !86)
!2503 = !DILocation(line: 216, column: 10, scope: !2499)
!2504 = !DILocation(line: 217, column: 4, scope: !2499)
!2505 = !DILocation(line: 219, column: 3, scope: !2499)
!2506 = !DILocation(line: 220, column: 20, scope: !2499)
!2507 = !DILocation(line: 220, column: 28, scope: !2499)
!2508 = !DILocation(line: 220, column: 10, scope: !2499)
!2509 = !DILocation(line: 217, column: 4, scope: !2468)
!2510 = distinct !DISubprogram(name: "cmd.GoEnv", linkageName: "command_line_arguments.GoEnv", scope: null, file: !320, line: 113, type: !511, isLocal: false, isDefinition: true, scopeLine: 113, isOptimized: false, unit: !1, retainedNodes: !3)
!2511 = !DILocalVariable(name: "f", arg: 1, scope: !2510, file: !320, line: 113, type: !318)
!2512 = !DILocation(line: 113, column: 12, scope: !2510)
!2513 = !DILocalVariable(name: "name", arg: 2, scope: !2510, file: !320, line: 113, type: !54)
!2514 = !DILocation(line: 113, column: 22, scope: !2510)
!2515 = !DILocation(line: 114, column: 12, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2517, file: !320, line: 114, column: 2)
!2517 = distinct !DILexicalBlock(scope: !2510, file: !320, line: 113, column: 1)
!2518 = !DILocalVariable(name: "val", scope: !2516, file: !320, line: 114, type: !54)
!2519 = !DILocation(line: 114, column: 5, scope: !2517)
!2520 = !DILocation(line: 114, column: 33, scope: !2516)
!2521 = !DILocalVariable(name: "$ret78", scope: !2510, file: !320, line: 113, type: !54)
!2522 = !DILocation(line: 113, column: 35, scope: !2510)
!2523 = !DILocation(line: 115, column: 3, scope: !2516)
!2524 = !DILocation(line: 118, column: 14, scope: !2517)
!2525 = !DILocalVariable(name: "cmd", scope: !2517, file: !320, line: 118, type: !1161)
!2526 = !DILocation(line: 118, column: 2, scope: !2510)
!2527 = !DILocation(line: 119, column: 35, scope: !2517)
!2528 = !DILocation(line: 119, column: 33, scope: !2517)
!2529 = !DILocation(line: 119, column: 14, scope: !2517)
!2530 = !DILocalVariable(name: "err", scope: !2517, file: !320, line: 119, type: !86)
!2531 = !DILocation(line: 119, column: 2, scope: !2510)
!2532 = !DILocation(line: 120, column: 9, scope: !2517)
!2533 = !DILocation(line: 121, column: 3, scope: !2517)
!2534 = !DILocation(line: 123, column: 27, scope: !2517)
!2535 = !DILocation(line: 123, column: 17, scope: !2517)
!2536 = !DILocation(line: 123, column: 2, scope: !2517)
!2537 = distinct !DISubprogram(name: "cmd.GoBuild", linkageName: "command_line_arguments.GoBuild", scope: null, file: !320, line: 135, type: !2538, isLocal: false, isDefinition: true, scopeLine: 135, isOptimized: false, unit: !1, retainedNodes: !3)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{!86, !318, !114, !114, !114, !54, !54, !114}
!2540 = !DILocalVariable(name: "args", arg: 7, scope: !2537, file: !320, line: 135, type: !114)
!2541 = !DILocation(line: 135, column: 103, scope: !2537)
!2542 = !DILocalVariable(name: "buildTags", arg: 4, scope: !2537, file: !320, line: 135, type: !114)
!2543 = !DILocation(line: 135, column: 53, scope: !2537)
!2544 = !DILocalVariable(name: "env", arg: 3, scope: !2537, file: !320, line: 135, type: !114)
!2545 = !DILocation(line: 135, column: 39, scope: !2537)
!2546 = !DILocalVariable(name: "srcs", arg: 2, scope: !2537, file: !320, line: 135, type: !114)
!2547 = !DILocation(line: 135, column: 24, scope: !2537)
!2548 = !DILocalVariable(name: "f", arg: 1, scope: !2537, file: !320, line: 135, type: !318)
!2549 = !DILocation(line: 135, column: 14, scope: !2537)
!2550 = !DILocalVariable(name: "matchaPkgPath", arg: 5, scope: !2537, file: !320, line: 135, type: !54)
!2551 = !DILocation(line: 135, column: 73, scope: !2537)
!2552 = !DILocalVariable(name: "tmpdir", arg: 6, scope: !2537, file: !320, line: 135, type: !54)
!2553 = !DILocation(line: 135, column: 88, scope: !2537)
!2554 = !DILocation(line: 136, column: 18, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2537, file: !320, line: 135, column: 1)
!2556 = !DILocalVariable(name: "pkgPath", scope: !2555, file: !320, line: 136, type: !54)
!2557 = !DILocation(line: 136, column: 2, scope: !2537)
!2558 = !DILocalVariable(name: "err", scope: !2555, file: !320, line: 136, type: !86)
!2559 = !DILocation(line: 137, column: 9, scope: !2555)
!2560 = !DILocation(line: 138, column: 3, scope: !2555)
!2561 = !DILocalVariable(name: "$ret81", scope: !2537, file: !320, line: 135, type: !86)
!2562 = !DILocation(line: 135, column: 119, scope: !2537)
!2563 = !DILocation(line: 141, column: 6, scope: !2555)
!2564 = !DILocation(line: 141, column: 5, scope: !2555)
!2565 = !DILocation(line: 142, column: 14, scope: !2555)
!2566 = !DILocation(line: 142, column: 3, scope: !2555)
!2567 = !DILocation(line: 145, column: 45, scope: !2555)
!2568 = !DILocation(line: 145, column: 14, scope: !2555)
!2569 = !DILocalVariable(name: "cmd", scope: !2555, file: !320, line: 145, type: !1161)
!2570 = !DILocation(line: 145, column: 2, scope: !2537)
!2571 = !DILocation(line: 146, column: 9, scope: !2555)
!2572 = !DILocation(line: 146, column: 20, scope: !2555)
!2573 = !DILocation(line: 147, column: 48, scope: !2555)
!2574 = !DILocation(line: 147, column: 6, scope: !2555)
!2575 = !DILocation(line: 149, column: 6, scope: !2555)
!2576 = !DILocation(line: 147, column: 14, scope: !2555)
!2577 = !DILocation(line: 147, column: 12, scope: !2555)
!2578 = !DILocation(line: 149, column: 2, scope: !2555)
!2579 = !DILocation(line: 150, column: 6, scope: !2555)
!2580 = !DILocation(line: 150, column: 14, scope: !2555)
!2581 = !DILocation(line: 150, column: 12, scope: !2555)
!2582 = !DILocation(line: 155, column: 6, scope: !2555)
!2583 = !DILocation(line: 155, column: 2, scope: !2555)
!2584 = !DILocation(line: 156, column: 6, scope: !2555)
!2585 = !DILocation(line: 156, column: 14, scope: !2555)
!2586 = !DILocation(line: 156, column: 12, scope: !2555)
!2587 = !DILocation(line: 158, column: 6, scope: !2555)
!2588 = !DILocation(line: 158, column: 20, scope: !2555)
!2589 = !DILocation(line: 159, column: 6, scope: !2555)
!2590 = !DILocation(line: 159, column: 14, scope: !2555)
!2591 = !DILocation(line: 159, column: 12, scope: !2555)
!2592 = !DILocation(line: 161, column: 6, scope: !2555)
!2593 = !DILocation(line: 161, column: 20, scope: !2555)
!2594 = !DILocation(line: 162, column: 6, scope: !2555)
!2595 = !DILocation(line: 162, column: 14, scope: !2555)
!2596 = !DILocation(line: 162, column: 12, scope: !2555)
!2597 = !DILocation(line: 164, column: 6, scope: !2555)
!2598 = !DILocation(line: 164, column: 2, scope: !2555)
!2599 = !DILocation(line: 0, scope: !2555)
!2600 = !DILocation(line: 167, column: 5, scope: !2555)
!2601 = !DILocation(line: 165, column: 6, scope: !2555)
!2602 = !DILocation(line: 165, column: 14, scope: !2555)
!2603 = !DILocation(line: 165, column: 12, scope: !2555)
!2604 = !DILocation(line: 167, column: 13, scope: !2555)
!2605 = !DILocation(line: 167, column: 11, scope: !2555)
!2606 = !DILocation(line: 168, column: 13, scope: !2555)
!2607 = !DILocation(line: 168, column: 11, scope: !2555)
!2608 = !DILocation(line: 169, column: 5, scope: !2555)
!2609 = !DILocation(line: 169, column: 19, scope: !2555)
!2610 = !DILocation(line: 169, column: 12, scope: !2555)
!2611 = !DILocation(line: 169, column: 10, scope: !2555)
!2612 = !DILocation(line: 170, column: 9, scope: !2555)
!2613 = !DILocation(line: 170, column: 2, scope: !2555)
!2614 = distinct !DISubprogram(name: "cmd.FindEnv", linkageName: "command_line_arguments.FindEnv", scope: null, file: !320, line: 72, type: !2615, isLocal: false, isDefinition: true, scopeLine: 72, isOptimized: false, unit: !1, retainedNodes: !3)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!54, !114, !54}
!2617 = !DILocalVariable(name: "env", arg: 1, scope: !2614, file: !320, line: 72, type: !114)
!2618 = !DILocation(line: 72, column: 14, scope: !2614)
!2619 = !DILocalVariable(name: "key", arg: 2, scope: !2614, file: !320, line: 72, type: !54)
!2620 = !DILocation(line: 72, column: 28, scope: !2614)
!2621 = !DILocation(line: 73, column: 12, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2614, file: !320, line: 72, column: 1)
!2623 = !DILocalVariable(name: "prefix", scope: !2622, file: !320, line: 73, type: !54)
!2624 = !DILocation(line: 73, column: 2, scope: !2614)
!2625 = !DILocation(line: 74, column: 2, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2622, file: !320, line: 74, column: 2)
!2627 = !DILocalVariable(name: "kv", scope: !2626, file: !320, line: 74, type: !54)
!2628 = !DILocation(line: 74, column: 6, scope: !2622)
!2629 = !DILocation(line: 75, column: 14, scope: !2626)
!2630 = !DILocation(line: 75, column: 3, scope: !2626)
!2631 = !DILocation(line: 76, column: 13, scope: !2626)
!2632 = !DILocation(line: 76, column: 4, scope: !2626)
!2633 = !DILocalVariable(name: "$ret73", scope: !2614, file: !320, line: 72, type: !54)
!2634 = !DILocation(line: 72, column: 40, scope: !2614)
!2635 = !DILocation(line: 79, column: 2, scope: !2622)
!2636 = distinct !DISubprogram(name: "cmd.OutputCmd", linkageName: "command_line_arguments.OutputCmd", scope: null, file: !471, line: 25, type: !2637, isLocal: false, isDefinition: true, scopeLine: 25, isOptimized: false, unit: !1, retainedNodes: !3)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!2144, !318, !98, !54, !1161}
!2639 = !DILocalVariable(name: "fallback", arg: 2, scope: !2636, file: !471, line: 25, type: !98)
!2640 = !DILocation(line: 25, column: 26, scope: !2636)
!2641 = !DILocalVariable(name: "f", arg: 1, scope: !2636, file: !471, line: 25, type: !318)
!2642 = !DILocation(line: 25, column: 16, scope: !2636)
!2643 = !DILocalVariable(name: "tmpdir", arg: 3, scope: !2636, file: !471, line: 25, type: !54)
!2644 = !DILocation(line: 25, column: 43, scope: !2636)
!2645 = !DILocalVariable(name: "cmd", arg: 4, scope: !2636, file: !471, line: 25, type: !1161)
!2646 = !DILocation(line: 25, column: 58, scope: !2636)
!2647 = !DILocation(line: 26, column: 6, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2636, file: !471, line: 25, column: 1)
!2649 = !DILocation(line: 26, column: 2, scope: !2648)
!2650 = !DILocalVariable(name: "str", scope: !2651, file: !471, line: 27, type: !54)
!2651 = distinct !DILexicalBlock(scope: !2648, file: !471, line: 26, column: 21)
!2652 = !DILocation(line: 27, column: 3, scope: !2648)
!2653 = !DILocation(line: 28, column: 9, scope: !2651)
!2654 = !DILocation(line: 38, column: 12, scope: !2648)
!2655 = !DILocalVariable(name: "outbuf", scope: !2648, file: !471, line: 38, type: !2656)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DICompositeType(tag: DW_TAG_structure_type, name: "Buffer", file: !262, line: 8, size: 832, align: 8, elements: !2658)
!2658 = !{!2659, !2660, !2661, !2665}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !262, line: 8, baseType: !98, size: 192, align: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "off", file: !262, line: 8, baseType: !58, size: 64, align: 64, offset: 192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "bootstrap", file: !262, line: 8, baseType: !2662, size: 512, align: 8, offset: 256)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, align: 1, elements: !2663)
!2663 = !{!2664}
!2664 = !DISubrange(count: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "lastRead", file: !262, line: 8, baseType: !2666, size: 8, align: 8, offset: 768)
!2666 = !DIBasicType(name: ".bytes.readOp", size: 8, encoding: DW_ATE_signed)
!2667 = !DILocation(line: 38, column: 2, scope: !2636)
!2668 = !DILocation(line: 39, column: 12, scope: !2648)
!2669 = !DILocalVariable(name: "errbuf", scope: !2648, file: !471, line: 39, type: !2656)
!2670 = !DILocation(line: 39, column: 2, scope: !2636)
!2671 = !DILocation(line: 40, column: 5, scope: !2648)
!2672 = !DILocation(line: 28, column: 14, scope: !2651)
!2673 = !DILocation(line: 29, column: 4, scope: !2651)
!2674 = !DILocation(line: 31, column: 13, scope: !2651)
!2675 = !DILocation(line: 31, column: 19, scope: !2651)
!2676 = !DILocation(line: 32, column: 19, scope: !2651)
!2677 = !DILocation(line: 32, column: 4, scope: !2651)
!2678 = !DILocation(line: 0, scope: !2651)
!2679 = !DILocation(line: 34, column: 26, scope: !2651)
!2680 = !DILocation(line: 34, column: 18, scope: !2651)
!2681 = !DILocation(line: 34, column: 3, scope: !2651)
!2682 = !DILocation(line: 35, column: 11, scope: !2651)
!2683 = !DILocation(line: 35, column: 4, scope: !2651)
!2684 = !DILocation(line: 40, column: 13, scope: !2648)
!2685 = !DILocation(line: 41, column: 5, scope: !2648)
!2686 = !DILocation(line: 41, column: 13, scope: !2648)
!2687 = !DILocation(line: 43, column: 6, scope: !2648)
!2688 = !DILocation(line: 43, column: 17, scope: !2648)
!2689 = !DILocation(line: 43, column: 27, scope: !2648)
!2690 = !DILocation(line: 42, column: 1, scope: !584, inlinedAt: !2691)
!2691 = distinct !DILocation(line: 53, column: 6, scope: !2648)
!2692 = !DILocation(line: 42, column: 29, scope: !584, inlinedAt: !2691)
!2693 = !DILocation(line: 43, column: 11, scope: !584, inlinedAt: !2691)
!2694 = !DILocation(line: 43, column: 9, scope: !584, inlinedAt: !2691)
!2695 = !DILocation(line: 48, column: 7, scope: !2648)
!2696 = !DILocation(line: 48, column: 14, scope: !2648)
!2697 = !DILocation(line: 48, column: 30, scope: !2648)
!2698 = !DILocation(line: 48, column: 12, scope: !2648)
!2699 = !DILocation(line: 54, column: 38, scope: !2648)
!2700 = !DILocation(line: 54, column: 29, scope: !2648)
!2701 = !DILocation(line: 54, column: 13, scope: !2648)
!2702 = !DILocation(line: 54, column: 11, scope: !2648)
!2703 = !DILocation(line: 60, column: 10, scope: !2648)
!2704 = !DILocation(line: 55, column: 16, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2648, file: !471, line: 55, column: 3)
!2706 = !DILocalVariable(name: "err", scope: !2705, file: !471, line: 55, type: !86)
!2707 = !DILocation(line: 55, column: 6, scope: !2648)
!2708 = !DILocation(line: 55, column: 28, scope: !2705)
!2709 = !DILocation(line: 58, column: 18, scope: !2648)
!2710 = !DILocation(line: 56, column: 68, scope: !2705)
!2711 = !DILocation(line: 56, column: 60, scope: !2705)
!2712 = !DILocation(line: 56, column: 20, scope: !2705)
!2713 = !DILocation(line: 56, column: 81, scope: !2705)
!2714 = !DILocalVariable(name: "$ret37", scope: !2636, file: !471, line: 25, type: !86)
!2715 = !DILocation(line: 25, column: 82, scope: !2636)
!2716 = !DILocation(line: 56, column: 4, scope: !2705)
!2717 = !DILocation(line: 63, column: 6, scope: !2648)
!2718 = !DILocation(line: 63, column: 2, scope: !2648)
!2719 = !DILocation(line: 66, column: 34, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2648, file: !471, line: 66, column: 3)
!2721 = !DILocation(line: 66, column: 22, scope: !2720)
!2722 = !DILocalVariable(name: "sink$5", scope: !2720, file: !471, line: 66, type: !190)
!2723 = !DILocation(line: 66, column: 6, scope: !2648)
!2724 = !DILocalVariable(name: "err", scope: !2720, file: !471, line: 66, type: !86)
!2725 = !DILocation(line: 66, column: 47, scope: !2720)
!2726 = !DILocation(line: 73, column: 2, scope: !2648)
!2727 = !DILocation(line: 67, column: 4, scope: !2720)
!2728 = !DILocation(line: 69, column: 34, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2648, file: !471, line: 69, column: 3)
!2730 = !DILocation(line: 69, column: 22, scope: !2729)
!2731 = !DILocalVariable(name: "sink$6", scope: !2729, file: !471, line: 69, type: !190)
!2732 = !DILocation(line: 69, column: 6, scope: !2648)
!2733 = !DILocalVariable(name: "err", scope: !2729, file: !471, line: 69, type: !86)
!2734 = !DILocation(line: 69, column: 47, scope: !2729)
!2735 = !DILocation(line: 70, column: 4, scope: !2729)
!2736 = distinct !DISubprogram(name: "cmd.MergeEnviron", linkageName: "command_line_arguments.MergeEnviron", scope: null, file: !471, line: 78, type: !2737, isLocal: false, isDefinition: true, scopeLine: 78, isOptimized: false, unit: !1, retainedNodes: !3)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!114, !114, !114}
!2739 = !DILocalVariable(name: "cur", arg: 2, scope: !2736, file: !471, line: 78, type: !114)
!2740 = !DILocation(line: 78, column: 23, scope: !2736)
!2741 = !DILocalVariable(name: "kv", arg: 1, scope: !2736, file: !471, line: 78, type: !114)
!2742 = !DILocation(line: 78, column: 19, scope: !2736)
!2743 = !DILocation(line: 79, column: 31, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2736, file: !471, line: 78, column: 1)
!2745 = !DILocation(line: 79, column: 40, scope: !2744)
!2746 = !DILocation(line: 79, column: 35, scope: !2744)
!2747 = !DILocation(line: 79, column: 9, scope: !2744)
!2748 = !DILocalVariable(name: "goos", scope: !2744, file: !471, line: 80, type: !54)
!2749 = !DILocation(line: 80, column: 2, scope: !2736)
!2750 = !DILocation(line: 82, column: 10, scope: !2744)
!2751 = !DILocalVariable(name: "envs", scope: !2744, file: !471, line: 82, type: !652)
!2752 = !DILocation(line: 82, column: 2, scope: !2736)
!2753 = !DILocation(line: 83, column: 2, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2744, file: !471, line: 83, column: 2)
!2755 = !DILocation(line: 84, column: 19, scope: !2756)
!2756 = distinct !DILexicalBlock(scope: !2754, file: !471, line: 83, column: 25)
!2757 = !DILocalVariable(name: "elem", scope: !2756, file: !471, line: 84, type: !114)
!2758 = !DILocation(line: 84, column: 3, scope: !2754)
!2759 = !DILocation(line: 85, column: 16, scope: !2756)
!2760 = !DILocation(line: 85, column: 32, scope: !2756)
!2761 = !DILocation(line: 88, column: 10, scope: !2756)
!2762 = !DILocation(line: 91, column: 11, scope: !2756)
!2763 = !DILocation(line: 88, column: 8, scope: !2756)
!2764 = !DILocation(line: 92, column: 22, scope: !2756)
!2765 = !DILocation(line: 92, column: 12, scope: !2756)
!2766 = !DILocation(line: 94, column: 23, scope: !2756)
!2767 = !DILocation(line: 94, column: 17, scope: !2756)
!2768 = !DILocation(line: 96, column: 2, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2744, file: !471, line: 96, column: 2)
!2770 = !DILocalVariable(name: "ev", scope: !2769, file: !471, line: 96, type: !54)
!2771 = !DILocation(line: 96, column: 6, scope: !2744)
!2772 = !DILocation(line: 97, column: 19, scope: !2773)
!2773 = distinct !DILexicalBlock(scope: !2769, file: !471, line: 96, column: 24)
!2774 = !DILocalVariable(name: "elem", scope: !2773, file: !471, line: 97, type: !114)
!2775 = !DILocation(line: 97, column: 3, scope: !2769)
!2776 = !DILocation(line: 98, column: 16, scope: !2773)
!2777 = !DILocation(line: 98, column: 32, scope: !2773)
!2778 = !DILocation(line: 99, column: 14, scope: !2773)
!2779 = !DILocation(line: 99, column: 4, scope: !2773)
!2780 = !DILocation(line: 101, column: 11, scope: !2773)
!2781 = !DILocation(line: 102, column: 22, scope: !2773)
!2782 = !DILocation(line: 102, column: 12, scope: !2773)
!2783 = !DILocation(line: 104, column: 23, scope: !2773)
!2784 = !DILocation(line: 104, column: 17, scope: !2773)
!2785 = !DILocation(line: 106, column: 2, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2744, file: !471, line: 106, column: 2)
!2787 = !DILocation(line: 107, column: 9, scope: !2786)
!2788 = !DILocation(line: 107, column: 7, scope: !2786)
!2789 = !DILocation(line: 107, column: 21, scope: !2786)
!2790 = !DILocation(line: 109, column: 2, scope: !2744)
!2791 = distinct !DISubprogram(name: "cmd.RemoveAll", linkageName: "command_line_arguments.RemoveAll", scope: null, file: !471, line: 150, type: !1424, isLocal: false, isDefinition: true, scopeLine: 150, isOptimized: false, unit: !1, retainedNodes: !3)
!2792 = !DILocalVariable(name: "f", arg: 1, scope: !2791, file: !471, line: 150, type: !318)
!2793 = !DILocation(line: 150, column: 16, scope: !2791)
!2794 = !DILocalVariable(name: "path", arg: 2, scope: !2791, file: !471, line: 150, type: !54)
!2795 = !DILocation(line: 150, column: 26, scope: !2791)
!2796 = !DILocation(line: 151, column: 6, scope: !2791)
!2797 = !DILocation(line: 151, column: 2, scope: !2791)
!2798 = !DILocation(line: 152, column: 11, scope: !2791)
!2799 = !DILocation(line: 152, column: 4, scope: !2791)
!2800 = !DILocation(line: 154, column: 6, scope: !2791)
!2801 = !DILocation(line: 154, column: 2, scope: !2791)
!2802 = !DILocation(line: 155, column: 13, scope: !2791)
!2803 = !DILocation(line: 155, column: 3, scope: !2791)
!2804 = !DILocalVariable(name: "$ret43", scope: !2791, file: !471, line: 150, type: !86)
!2805 = !DILocation(line: 150, column: 39, scope: !2791)
!2806 = !DILocation(line: 157, column: 2, scope: !2791)
!2807 = distinct !DISubprogram(name: "cmd.WriteFile..func1", scope: null, file: !471, line: 167, type: !1067, isLocal: true, isDefinition: true, scopeLine: 167, isOptimized: false, unit: !1, retainedNodes: !3)
!2808 = !DILocation(line: 168, column: 3, scope: !2807)
!2809 = !DILocation(line: 168, column: 4, scope: !2807)
!2810 = !DILocation(line: 168, column: 20, scope: !2807)
!2811 = !DILocation(line: 168, column: 18, scope: !2807)
!2812 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk5", scope: null, file: !471, line: 167, type: !1076, isLocal: true, isDefinition: true, scopeLine: 167, isOptimized: false, unit: !1, retainedNodes: !3)
!2813 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2812, file: !471, line: 167, type: !1078)
!2814 = !DILocation(line: 167, column: 2, scope: !2812)
!2815 = distinct !DISubprogram(name: "cmd.WriteFile..func2", scope: null, file: !471, line: 180, type: !1067, isLocal: true, isDefinition: true, scopeLine: 180, isOptimized: false, unit: !1, retainedNodes: !3)
!2816 = !DILocation(line: 181, column: 15, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2815, file: !471, line: 181, column: 4)
!2818 = !DILocation(line: 181, column: 19, scope: !2817)
!2819 = !DILocation(line: 181, column: 29, scope: !2817)
!2820 = !DILocation(line: 181, column: 33, scope: !2817)
!2821 = !DILocation(line: 182, column: 9, scope: !2817)
!2822 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk6", scope: null, file: !471, line: 180, type: !1076, isLocal: true, isDefinition: true, scopeLine: 180, isOptimized: false, unit: !1, retainedNodes: !3)
!2823 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2822, file: !471, line: 180, type: !1078)
!2824 = !DILocation(line: 180, column: 3, scope: !2822)
!2825 = distinct !DISubprogram(name: "cmd.CopyFile..func1", scope: null, file: !471, line: 210, type: !1067, isLocal: true, isDefinition: true, scopeLine: 210, isOptimized: false, unit: !1, retainedNodes: !3)
!2826 = !DILocation(line: 211, column: 3, scope: !2825)
!2827 = !DILocation(line: 211, column: 4, scope: !2825)
!2828 = !DILocation(line: 211, column: 20, scope: !2825)
!2829 = !DILocation(line: 211, column: 18, scope: !2825)
!2830 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk7", scope: null, file: !471, line: 210, type: !1076, isLocal: true, isDefinition: true, scopeLine: 210, isOptimized: false, unit: !1, retainedNodes: !3)
!2831 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2830, file: !471, line: 210, type: !1078)
!2832 = !DILocation(line: 210, column: 2, scope: !2830)
!2833 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk8", scope: null, file: !471, line: 219, type: !1369, isLocal: true, isDefinition: true, scopeLine: 219, isOptimized: false, unit: !1, retainedNodes: !3)
!2834 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2833, file: !471, line: 219, type: !1371)
!2835 = !DILocation(line: 219, column: 3, scope: !2833)
!2836 = !DILocalVariable(name: "$ret88", scope: !2833, file: !471, line: 219, type: !49)
!2837 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk9", scope: null, file: !471, line: 274, type: !1369, isLocal: true, isDefinition: true, scopeLine: 274, isOptimized: false, unit: !1, retainedNodes: !3)
!2838 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2837, file: !471, line: 274, type: !1371)
!2839 = !DILocation(line: 274, column: 3, scope: !2837)
!2840 = !DILocalVariable(name: "$ret89", scope: !2837, file: !471, line: 274, type: !49)
!2841 = distinct !DISubprogram(name: "cmd.Init", linkageName: "command_line_arguments.Init", scope: null, file: !2842, line: 14, type: !316, isLocal: false, isDefinition: true, scopeLine: 14, isOptimized: false, unit: !1, retainedNodes: !3)
!2842 = !DIFile(filename: "init.go", directory: ".")
!2843 = !DILocalVariable(name: "f", arg: 1, scope: !2841, file: !2842, line: 14, type: !318)
!2844 = !DILocation(line: 14, column: 11, scope: !2841)
!2845 = !DILocalVariable(name: "$ret57", scope: !2841, file: !2842, line: 14, type: !86)
!2846 = !DILocation(line: 14, column: 21, scope: !2841)
!2847 = !DILocation(line: 15, column: 16, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2841, file: !2842, line: 14, column: 1)
!2849 = !DILocation(line: 162, column: 1, scope: !2841)
!2850 = !DILocation(line: 18, column: 9, scope: !2848)
!2851 = !DILocalVariable(name: "err", scope: !2848, file: !2842, line: 18, type: !86)
!2852 = !DILocation(line: 18, column: 2, scope: !2841)
!2853 = !DILocation(line: 19, column: 9, scope: !2848)
!2854 = !DILocation(line: 24, column: 27, scope: !2848)
!2855 = !DILocation(line: 24, column: 13, scope: !2848)
!2856 = !DILocalVariable(name: "targets", scope: !2848, file: !2842, line: 24, type: !652)
!2857 = !DILocation(line: 24, column: 2, scope: !2841)
!2858 = !DILocation(line: 27, column: 24, scope: !2848)
!2859 = !DILocalVariable(name: "matchaPkgPath", scope: !2848, file: !2842, line: 27, type: !54)
!2860 = !DILocation(line: 27, column: 2, scope: !2841)
!2861 = !DILocation(line: 28, column: 9, scope: !2848)
!2862 = !DILocation(line: 33, column: 12, scope: !2863)
!2863 = distinct !DILexicalBlock(scope: !2848, file: !2842, line: 33, column: 2)
!2864 = !DILocalVariable(name: "err", scope: !2863, file: !2842, line: 33, type: !86)
!2865 = !DILocation(line: 33, column: 5, scope: !2848)
!2866 = !DILocation(line: 33, column: 45, scope: !2863)
!2867 = !DILocation(line: 38, column: 12, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2848, file: !2842, line: 38, column: 2)
!2869 = !DILocalVariable(name: "err", scope: !2868, file: !2842, line: 38, type: !86)
!2870 = !DILocation(line: 38, column: 5, scope: !2848)
!2871 = !DILocation(line: 38, column: 41, scope: !2868)
!2872 = !DILocation(line: 43, column: 17, scope: !2848)
!2873 = !DILocalVariable(name: "tmpdir", scope: !2848, file: !2842, line: 43, type: !54)
!2874 = !DILocation(line: 43, column: 2, scope: !2841)
!2875 = !DILocation(line: 44, column: 9, scope: !2848)
!2876 = !DILocation(line: 47, column: 2, scope: !2848)
!2877 = !DILocalVariable(name: "ok", scope: !2878, file: !2842, line: 50, type: !49)
!2878 = distinct !DILexicalBlock(scope: !2848, file: !2842, line: 50, column: 2)
!2879 = !DILocation(line: 50, column: 5, scope: !2848)
!2880 = !DILocation(line: 50, column: 5, scope: !2878)
!2881 = !DILocation(line: 50, column: 2, scope: !2878)
!2882 = !DILocation(line: 52, column: 13, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2884, file: !2842, line: 52, column: 3)
!2884 = distinct !DILexicalBlock(scope: !2878, file: !2842, line: 50, column: 33)
!2885 = !DILocalVariable(name: "ok", scope: !2886, file: !2842, line: 97, type: !49)
!2886 = distinct !DILexicalBlock(scope: !2848, file: !2842, line: 97, column: 2)
!2887 = !DILocation(line: 97, column: 5, scope: !2848)
!2888 = !DILocation(line: 97, column: 5, scope: !2886)
!2889 = !DILocalVariable(name: "err", scope: !2883, file: !2842, line: 52, type: !86)
!2890 = !DILocation(line: 52, column: 6, scope: !2884)
!2891 = !DILocation(line: 52, column: 42, scope: !2883)
!2892 = !DILocalVariable(name: "ok", scope: !2893, file: !2842, line: 59, type: !49)
!2893 = distinct !DILexicalBlock(scope: !2884, file: !2842, line: 59, column: 3)
!2894 = !DILocation(line: 59, column: 6, scope: !2884)
!2895 = !DILocation(line: 59, column: 6, scope: !2893)
!2896 = !DILocation(line: 59, column: 3, scope: !2893)
!2897 = !DILocation(line: 60, column: 18, scope: !2893)
!2898 = !DILocalVariable(name: "ok", scope: !2899, file: !2842, line: 68, type: !49)
!2899 = distinct !DILexicalBlock(scope: !2884, file: !2842, line: 68, column: 3)
!2900 = !DILocation(line: 68, column: 6, scope: !2884)
!2901 = !DILocation(line: 68, column: 6, scope: !2899)
!2902 = !DILocation(line: 60, column: 39, scope: !2893)
!2903 = !DILocation(line: 63, column: 14, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2893, file: !2842, line: 63, column: 4)
!2905 = !DILocalVariable(name: "err", scope: !2904, file: !2842, line: 63, type: !86)
!2906 = !DILocation(line: 63, column: 7, scope: !2893)
!2907 = !DILocation(line: 63, column: 68, scope: !2904)
!2908 = !DILocation(line: 68, column: 3, scope: !2899)
!2909 = !DILocation(line: 69, column: 18, scope: !2899)
!2910 = !DILocalVariable(name: "ok", scope: !2911, file: !2842, line: 77, type: !49)
!2911 = distinct !DILexicalBlock(scope: !2884, file: !2842, line: 77, column: 3)
!2912 = !DILocation(line: 77, column: 6, scope: !2884)
!2913 = !DILocation(line: 77, column: 6, scope: !2911)
!2914 = !DILocation(line: 69, column: 41, scope: !2899)
!2915 = !DILocation(line: 72, column: 14, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2899, file: !2842, line: 72, column: 4)
!2917 = !DILocalVariable(name: "err", scope: !2916, file: !2842, line: 72, type: !86)
!2918 = !DILocation(line: 72, column: 7, scope: !2899)
!2919 = !DILocation(line: 72, column: 68, scope: !2916)
!2920 = !DILocation(line: 77, column: 3, scope: !2911)
!2921 = !DILocation(line: 78, column: 18, scope: !2911)
!2922 = !DILocalVariable(name: "ok", scope: !2923, file: !2842, line: 86, type: !49)
!2923 = distinct !DILexicalBlock(scope: !2884, file: !2842, line: 86, column: 3)
!2924 = !DILocation(line: 86, column: 6, scope: !2884)
!2925 = !DILocation(line: 86, column: 6, scope: !2923)
!2926 = !DILocation(line: 78, column: 39, scope: !2911)
!2927 = !DILocation(line: 81, column: 14, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2911, file: !2842, line: 81, column: 4)
!2929 = !DILocalVariable(name: "err", scope: !2928, file: !2842, line: 81, type: !86)
!2930 = !DILocation(line: 81, column: 7, scope: !2911)
!2931 = !DILocation(line: 81, column: 81, scope: !2928)
!2932 = !DILocation(line: 86, column: 3, scope: !2923)
!2933 = !DILocation(line: 87, column: 18, scope: !2923)
!2934 = !DILocation(line: 87, column: 41, scope: !2923)
!2935 = !DILocation(line: 90, column: 14, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2923, file: !2842, line: 90, column: 4)
!2937 = !DILocalVariable(name: "err", scope: !2936, file: !2842, line: 90, type: !86)
!2938 = !DILocation(line: 90, column: 7, scope: !2923)
!2939 = !DILocation(line: 90, column: 81, scope: !2936)
!2940 = !DILocation(line: 97, column: 2, scope: !2886)
!2941 = !DILocation(line: 99, column: 13, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2886, file: !2842, line: 99, column: 3)
!2943 = !DILocation(line: 146, column: 20, scope: !2848)
!2944 = !DILocalVariable(name: "err", scope: !2942, file: !2842, line: 99, type: !86)
!2945 = !DILocation(line: 99, column: 6, scope: !2886)
!2946 = !DILocation(line: 99, column: 44, scope: !2942)
!2947 = !DILocalVariable(name: "ok", scope: !2948, file: !2842, line: 104, type: !49)
!2948 = distinct !DILexicalBlock(scope: !2886, file: !2842, line: 104, column: 3)
!2949 = !DILocation(line: 104, column: 6, scope: !2886)
!2950 = !DILocation(line: 104, column: 6, scope: !2948)
!2951 = !DILocation(line: 104, column: 3, scope: !2948)
!2952 = !DILocation(line: 105, column: 16, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2948, file: !2842, line: 104, column: 42)
!2954 = !DILocalVariable(name: "ok", scope: !2955, file: !2842, line: 114, type: !49)
!2955 = distinct !DILexicalBlock(scope: !2886, file: !2842, line: 114, column: 3)
!2956 = !DILocation(line: 114, column: 6, scope: !2886)
!2957 = !DILocation(line: 114, column: 6, scope: !2955)
!2958 = !DILocalVariable(name: "err", scope: !2953, file: !2842, line: 105, type: !86)
!2959 = !DILocation(line: 105, column: 4, scope: !2948)
!2960 = !DILocation(line: 106, column: 11, scope: !2953)
!2961 = !DILocation(line: 107, column: 5, scope: !2953)
!2962 = !DILocation(line: 109, column: 14, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2953, file: !2842, line: 109, column: 4)
!2964 = !DILocalVariable(name: "err", scope: !2963, file: !2842, line: 109, type: !86)
!2965 = !DILocation(line: 109, column: 7, scope: !2953)
!2966 = !DILocation(line: 109, column: 68, scope: !2963)
!2967 = !DILocation(line: 114, column: 3, scope: !2955)
!2968 = !DILocation(line: 115, column: 16, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2955, file: !2842, line: 114, column: 44)
!2970 = !DILocalVariable(name: "ok", scope: !2971, file: !2842, line: 124, type: !49)
!2971 = distinct !DILexicalBlock(scope: !2886, file: !2842, line: 124, column: 3)
!2972 = !DILocation(line: 124, column: 6, scope: !2886)
!2973 = !DILocation(line: 124, column: 6, scope: !2971)
!2974 = !DILocalVariable(name: "err", scope: !2969, file: !2842, line: 115, type: !86)
!2975 = !DILocation(line: 115, column: 4, scope: !2955)
!2976 = !DILocation(line: 116, column: 11, scope: !2969)
!2977 = !DILocation(line: 117, column: 5, scope: !2969)
!2978 = !DILocation(line: 119, column: 14, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2969, file: !2842, line: 119, column: 4)
!2980 = !DILocalVariable(name: "err", scope: !2979, file: !2842, line: 119, type: !86)
!2981 = !DILocation(line: 119, column: 7, scope: !2969)
!2982 = !DILocation(line: 119, column: 68, scope: !2979)
!2983 = !DILocation(line: 124, column: 3, scope: !2971)
!2984 = !DILocation(line: 125, column: 16, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2971, file: !2842, line: 124, column: 42)
!2986 = !DILocalVariable(name: "ok", scope: !2987, file: !2842, line: 134, type: !49)
!2987 = distinct !DILexicalBlock(scope: !2886, file: !2842, line: 134, column: 3)
!2988 = !DILocation(line: 134, column: 6, scope: !2886)
!2989 = !DILocation(line: 134, column: 6, scope: !2987)
!2990 = !DILocalVariable(name: "err", scope: !2985, file: !2842, line: 125, type: !86)
!2991 = !DILocation(line: 125, column: 4, scope: !2971)
!2992 = !DILocation(line: 126, column: 11, scope: !2985)
!2993 = !DILocation(line: 127, column: 5, scope: !2985)
!2994 = !DILocation(line: 129, column: 14, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2985, file: !2842, line: 129, column: 4)
!2996 = !DILocalVariable(name: "err", scope: !2995, file: !2842, line: 129, type: !86)
!2997 = !DILocation(line: 129, column: 7, scope: !2985)
!2998 = !DILocation(line: 129, column: 68, scope: !2995)
!2999 = !DILocation(line: 134, column: 3, scope: !2987)
!3000 = !DILocation(line: 135, column: 16, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2987, file: !2842, line: 134, column: 44)
!3002 = !DILocalVariable(name: "err", scope: !3001, file: !2842, line: 135, type: !86)
!3003 = !DILocation(line: 135, column: 4, scope: !2987)
!3004 = !DILocation(line: 136, column: 11, scope: !3001)
!3005 = !DILocation(line: 137, column: 5, scope: !3001)
!3006 = !DILocation(line: 139, column: 14, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3001, file: !2842, line: 139, column: 4)
!3008 = !DILocalVariable(name: "err", scope: !3007, file: !2842, line: 139, type: !86)
!3009 = !DILocation(line: 139, column: 7, scope: !3001)
!3010 = !DILocation(line: 139, column: 68, scope: !3007)
!3011 = !DILocation(line: 147, column: 9, scope: !2848)
!3012 = !DILocation(line: 150, column: 22, scope: !2848)
!3013 = !DILocation(line: 151, column: 40, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2848, file: !2842, line: 151, column: 2)
!3015 = !DILocalVariable(name: "verpath", scope: !2848, file: !2842, line: 150, type: !54)
!3016 = !DILocation(line: 150, column: 2, scope: !2841)
!3017 = !DILocation(line: 151, column: 12, scope: !3014)
!3018 = !DILocalVariable(name: "err", scope: !3014, file: !2842, line: 151, type: !86)
!3019 = !DILocation(line: 151, column: 5, scope: !2848)
!3020 = !DILocation(line: 151, column: 67, scope: !3014)
!3021 = !DILocation(line: 156, column: 6, scope: !2848)
!3022 = !DILocation(line: 156, column: 2, scope: !2848)
!3023 = !DILocation(line: 160, column: 3, scope: !2848)
!3024 = !DILocation(line: 157, column: 16, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !2848, file: !2842, line: 156, column: 14)
!3026 = !DILocation(line: 158, column: 11, scope: !3025)
!3027 = !DILocation(line: 157, column: 43, scope: !3025)
!3028 = !DILocalVariable(name: "took", scope: !3025, file: !2842, line: 157, type: !3029)
!3029 = !DIBasicType(name: "Duration", size: 64, encoding: DW_ATE_signed)
!3030 = !DILocation(line: 157, column: 3, scope: !2848)
!3031 = !DILocation(line: 158, column: 4, scope: !3025)
!3032 = !DILocation(line: 160, column: 10, scope: !2848)
!3033 = !DILocation(line: 20, column: 3, scope: !2841)
!3034 = distinct !DISubprogram(name: "cmd.command_line_arguments..thunk10", scope: null, file: !2842, line: 47, type: !2105, isLocal: true, isDefinition: true, scopeLine: 47, isOptimized: false, unit: !1, retainedNodes: !3)
!3035 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !3034, file: !2842, line: 47, type: !2107)
!3036 = !DILocation(line: 47, column: 2, scope: !3034)
!3037 = distinct !DISubprogram(name: "cmd.InstallPkg", linkageName: "command_line_arguments.InstallPkg", scope: null, file: !320, line: 174, type: !3038, isLocal: false, isDefinition: true, scopeLine: 174, isOptimized: false, unit: !1, retainedNodes: !3)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!86, !318, !54, !54, !54, !114, !114}
!3040 = !DILocalVariable(name: "args", arg: 6, scope: !3037, file: !320, line: 174, type: !114)
!3041 = !DILocation(line: 174, column: 81, scope: !3037)
!3042 = !DILocalVariable(name: "env", arg: 5, scope: !3037, file: !320, line: 174, type: !114)
!3043 = !DILocation(line: 174, column: 67, scope: !3037)
!3044 = !DILocalVariable(name: "pkg", arg: 4, scope: !3037, file: !320, line: 174, type: !54)
!3045 = !DILocation(line: 174, column: 55, scope: !3037)
!3046 = !DILocalVariable(name: "f", arg: 1, scope: !3037, file: !320, line: 174, type: !318)
!3047 = !DILocation(line: 174, column: 17, scope: !3037)
!3048 = !DILocalVariable(name: "matchaPkgPath", arg: 2, scope: !3037, file: !320, line: 174, type: !54)
!3049 = !DILocation(line: 174, column: 27, scope: !3037)
!3050 = !DILocalVariable(name: "temp", arg: 3, scope: !3037, file: !320, line: 174, type: !54)
!3051 = !DILocation(line: 174, column: 42, scope: !3037)
!3052 = !DILocation(line: 175, column: 18, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3037, file: !320, line: 174, column: 1)
!3054 = !DILocalVariable(name: "err", scope: !3053, file: !320, line: 175, type: !86)
!3055 = !DILocation(line: 175, column: 2, scope: !3037)
!3056 = !DILocation(line: 176, column: 9, scope: !3053)
!3057 = !DILocation(line: 177, column: 3, scope: !3053)
!3058 = !DILocalVariable(name: "$ret82", scope: !3037, file: !320, line: 174, type: !86)
!3059 = !DILocation(line: 174, column: 97, scope: !3037)
!3060 = !DILocation(line: 179, column: 9, scope: !3053)
!3061 = !DILocation(line: 179, column: 30, scope: !3053)
!3062 = !DILocation(line: 179, column: 7, scope: !3053)
!3063 = !DILocation(line: 181, column: 14, scope: !3053)
!3064 = !DILocalVariable(name: "cmd", scope: !3053, file: !320, line: 181, type: !1161)
!3065 = !DILocation(line: 181, column: 2, scope: !3037)
!3066 = !DILocation(line: 182, column: 5, scope: !3053)
!3067 = !DILocation(line: 182, column: 13, scope: !3053)
!3068 = !DILocation(line: 182, column: 11, scope: !3053)
!3069 = !DILocation(line: 183, column: 6, scope: !3053)
!3070 = !DILocation(line: 183, column: 2, scope: !3053)
!3071 = !DILocation(line: 184, column: 14, scope: !3053)
!3072 = !DILocation(line: 184, column: 12, scope: !3053)
!3073 = !DILocation(line: 186, column: 6, scope: !3053)
!3074 = !DILocation(line: 186, column: 2, scope: !3053)
!3075 = !DILocation(line: 187, column: 14, scope: !3053)
!3076 = !DILocation(line: 187, column: 12, scope: !3053)
!3077 = !DILocation(line: 189, column: 6, scope: !3053)
!3078 = !DILocation(line: 189, column: 2, scope: !3053)
!3079 = !DILocation(line: 190, column: 14, scope: !3053)
!3080 = !DILocation(line: 190, column: 12, scope: !3053)
!3081 = !DILocation(line: 192, column: 13, scope: !3053)
!3082 = !DILocation(line: 192, column: 11, scope: !3053)
!3083 = !DILocation(line: 193, column: 5, scope: !3053)
!3084 = !DILocation(line: 193, column: 19, scope: !3053)
!3085 = !DILocation(line: 193, column: 12, scope: !3053)
!3086 = !DILocation(line: 193, column: 10, scope: !3053)
!3087 = !DILocation(line: 194, column: 9, scope: !3053)
!3088 = !DILocation(line: 194, column: 2, scope: !3053)
!3089 = distinct !DISubprogram(name: "cmd.EnvClang", linkageName: "command_line_arguments.EnvClang", scope: null, file: !2246, line: 46, type: !3090, isLocal: false, isDefinition: true, scopeLine: 46, isOptimized: false, unit: !1, retainedNodes: !3)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!3092, !318, !54}
!3092 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{string,string,error}", file: !17, size: 384, align: 8, elements: !3093)
!3093 = !{!3094, !3095, !3096}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "_clang", file: !17, line: 46, baseType: !54, size: 128, align: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "cflags", file: !17, line: 46, baseType: !54, size: 128, align: 64, offset: 128)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !17, line: 46, baseType: !86, size: 128, align: 64, offset: 256)
!3097 = !DILocalVariable(name: "f", arg: 1, scope: !3089, file: !2246, line: 46, type: !318)
!3098 = !DILocation(line: 46, column: 15, scope: !3089)
!3099 = !DILocalVariable(name: "sdkName", arg: 2, scope: !3089, file: !2246, line: 46, type: !54)
!3100 = !DILocation(line: 46, column: 25, scope: !3089)
!3101 = !DILocation(line: 48, column: 14, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3089, file: !2246, line: 46, column: 1)
!3103 = !DILocalVariable(name: "cmd", scope: !3102, file: !2246, line: 48, type: !1161)
!3104 = !DILocation(line: 48, column: 2, scope: !3089)
!3105 = !DILocation(line: 49, column: 52, scope: !3102)
!3106 = !DILocation(line: 49, column: 41, scope: !3102)
!3107 = !DILocation(line: 49, column: 33, scope: !3102)
!3108 = !DILocation(line: 49, column: 14, scope: !3102)
!3109 = !DILocalVariable(name: "err", scope: !3089, file: !2246, line: 46, type: !86)
!3110 = !DILocation(line: 46, column: 65, scope: !3089)
!3111 = !DILocation(line: 50, column: 9, scope: !3102)
!3112 = !DILocalVariable(name: "_clang", scope: !3089, file: !2246, line: 46, type: !54)
!3113 = !DILocation(line: 46, column: 42, scope: !3089)
!3114 = !DILocalVariable(name: "cflags", scope: !3089, file: !2246, line: 46, type: !54)
!3115 = !DILocation(line: 46, column: 50, scope: !3089)
!3116 = !DILocation(line: 51, column: 3, scope: !3102)
!3117 = !DILocation(line: 53, column: 29, scope: !3102)
!3118 = !DILocation(line: 53, column: 19, scope: !3102)
!3119 = !DILocation(line: 56, column: 13, scope: !3102)
!3120 = !DILocation(line: 57, column: 49, scope: !3102)
!3121 = !DILocation(line: 57, column: 38, scope: !3102)
!3122 = !DILocation(line: 57, column: 32, scope: !3102)
!3123 = !DILocation(line: 57, column: 13, scope: !3102)
!3124 = !DILocation(line: 58, column: 9, scope: !3102)
!3125 = !DILocation(line: 59, column: 3, scope: !3102)
!3126 = !DILocalVariable(name: "clang", scope: !3102, file: !2246, line: 53, type: !54)
!3127 = !DILocation(line: 53, column: 2, scope: !3089)
!3128 = !DILocation(line: 61, column: 27, scope: !3102)
!3129 = !DILocation(line: 61, column: 17, scope: !3102)
!3130 = !DILocalVariable(name: "sdk", scope: !3102, file: !2246, line: 61, type: !54)
!3131 = !DILocation(line: 61, column: 2, scope: !3089)
!3132 = !DILocation(line: 62, column: 26, scope: !3102)
!3133 = !DILocation(line: 62, column: 2, scope: !3102)
!3134 = distinct !DISubprogram(name: "cmd.PkgPath", linkageName: "command_line_arguments.PkgPath", scope: null, file: !320, line: 103, type: !3135, isLocal: false, isDefinition: true, scopeLine: 103, isOptimized: false, unit: !1, retainedNodes: !3)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{!388, !318, !54, !114}
!3137 = !DILocalVariable(name: "env", arg: 3, scope: !3134, file: !320, line: 103, type: !114)
!3138 = !DILocation(line: 103, column: 46, scope: !3134)
!3139 = !DILocalVariable(name: "f", arg: 1, scope: !3134, file: !320, line: 103, type: !318)
!3140 = !DILocation(line: 103, column: 14, scope: !3134)
!3141 = !DILocalVariable(name: "matchaPkgPath", arg: 2, scope: !3134, file: !320, line: 103, type: !54)
!3142 = !DILocation(line: 103, column: 24, scope: !3134)
!3143 = !DILocation(line: 104, column: 16, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3134, file: !320, line: 103, column: 1)
!3145 = !DILocalVariable(name: "tOS", scope: !3144, file: !320, line: 104, type: !54)
!3146 = !DILocation(line: 104, column: 2, scope: !3134)
!3147 = !DILocation(line: 104, column: 38, scope: !3144)
!3148 = !DILocalVariable(name: "tArch", scope: !3144, file: !320, line: 104, type: !54)
!3149 = !DILocation(line: 105, column: 9, scope: !3144)
!3150 = !DILocation(line: 105, column: 24, scope: !3144)
!3151 = !DILocation(line: 106, column: 18, scope: !3144)
!3152 = !DILocalVariable(name: "$ret76", scope: !3134, file: !320, line: 103, type: !54)
!3153 = !DILocation(line: 103, column: 61, scope: !3134)
!3154 = !DILocalVariable(name: "$ret77", scope: !3134, file: !320, line: 103, type: !86)
!3155 = !DILocation(line: 103, column: 69, scope: !3134)
!3156 = !DILocation(line: 106, column: 3, scope: !3144)
!3157 = !DILocation(line: 109, column: 9, scope: !3144)
!3158 = !DILocation(line: 109, column: 2, scope: !3144)
!3159 = distinct !DISubprogram(name: "cmd.Import", linkageName: "command_line_arguments.Import", scope: null, file: !320, line: 217, type: !3160, isLocal: false, isDefinition: true, scopeLine: 217, isOptimized: false, unit: !1, retainedNodes: !3)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{!86, !1645, !54, !54, !2201, !652}
!3162 = !DILocalVariable(name: "ctx", arg: 1, scope: !3159, file: !320, line: 217, type: !1645)
!3163 = !DILocation(line: 217, column: 13, scope: !3159)
!3164 = !DILocalVariable(name: "path", arg: 2, scope: !3159, file: !320, line: 217, type: !54)
!3165 = !DILocation(line: 217, column: 33, scope: !3159)
!3166 = !DILocalVariable(name: "srcDir", arg: 3, scope: !3159, file: !320, line: 217, type: !54)
!3167 = !DILocation(line: 217, column: 39, scope: !3159)
!3168 = !DILocalVariable(name: "mode", arg: 4, scope: !3159, file: !320, line: 217, type: !2201)
!3169 = !DILocation(line: 217, column: 54, scope: !3159)
!3170 = !DILocalVariable(name: "pkgs", arg: 5, scope: !3159, file: !320, line: 217, type: !652)
!3171 = !DILocation(line: 217, column: 77, scope: !3159)
!3172 = !DILocation(line: 219, column: 10, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3159, file: !320, line: 217, column: 1)
!3174 = !DILocalVariable(name: "$ret85", scope: !3159, file: !320, line: 217, type: !86)
!3175 = !DILocation(line: 217, column: 109, scope: !3159)
!3176 = !DILocation(line: 220, column: 3, scope: !3173)
!3177 = !DILocation(line: 223, column: 17, scope: !3173)
!3178 = !DILocalVariable(name: "pkg", scope: !3173, file: !320, line: 223, type: !820)
!3179 = !DILocation(line: 223, column: 2, scope: !3159)
!3180 = !DILocalVariable(name: "err", scope: !3173, file: !320, line: 223, type: !86)
!3181 = !DILocation(line: 224, column: 9, scope: !3173)
!3182 = !DILocation(line: 225, column: 3, scope: !3173)
!3183 = !DILocalVariable(name: "ok", scope: !3184, file: !320, line: 229, type: !49)
!3184 = distinct !DILexicalBlock(scope: !3173, file: !320, line: 229, column: 2)
!3185 = !DILocation(line: 229, column: 5, scope: !3173)
!3186 = !DILocation(line: 229, column: 22, scope: !3184)
!3187 = !DILocation(line: 229, column: 5, scope: !3184)
!3188 = !DILocation(line: 229, column: 2, scope: !3184)
!3189 = !DILocation(line: 232, column: 16, scope: !3173)
!3190 = !DILocation(line: 235, column: 2, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3173, file: !320, line: 235, column: 2)
!3192 = !DILocalVariable(name: "i", scope: !3191, file: !320, line: 235, type: !54)
!3193 = !DILocation(line: 235, column: 6, scope: !3173)
!3194 = !DILocation(line: 236, column: 13, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3191, file: !320, line: 236, column: 3)
!3196 = !DILocalVariable(name: "err", scope: !3195, file: !320, line: 236, type: !86)
!3197 = !DILocation(line: 236, column: 6, scope: !3191)
!3198 = !DILocation(line: 236, column: 54, scope: !3195)
!3199 = distinct !DISubprogram(name: "cmd.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash", linkageName: "command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash", scope: null, file: !7, line: 1, type: !37, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!3200 = !DILocalVariable(name: "key", arg: 1, scope: !3199, file: !7, line: 1, type: !39)
!3201 = !DILocation(line: 1, column: 1, scope: !3199)
!3202 = !DILocalVariable(name: "seed", arg: 2, scope: !3199, file: !7, line: 1, type: !24)
!3203 = !DILocalVariable(name: "$ret112", scope: !3199, file: !7, line: 1, type: !24)
!3204 = distinct !DISubprogram(name: "cmd.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq", linkageName: "command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq", scope: null, file: !7, line: 1, type: !47, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!3205 = !DILocalVariable(name: "key1", arg: 1, scope: !3204, file: !7, line: 1, type: !39)
!3206 = !DILocation(line: 1, column: 1, scope: !3204)
!3207 = !DILocalVariable(name: "key2", arg: 2, scope: !3204, file: !7, line: 1, type: !39)
!3208 = !DILocalVariable(name: "$ret113", scope: !3204, file: !7, line: 1, type: !49)
!3209 = distinct !DISubprogram(name: "cmd.command_line_arguments..import", linkageName: "command_line_arguments..import", scope: null, file: !11, line: 5, type: !1067, isLocal: false, isDefinition: true, scopeLine: 5, isOptimized: false, unit: !1, retainedNodes: !3)
!3210 = !DILocation(line: 1, column: 1, scope: !3211)
!3211 = !DILexicalBlockFile(scope: !3209, file: !7, discriminator: 0)
	.text
	.file	"gomodule"

	.section ".go_export","e",@progbits
	.ascii "v2;\n"
	.ascii "package "
	.ascii "cmd"
	.ascii ";\n"
	.ascii "pkgpath "
	.ascii "command-line-arguments"
	.ascii ";\n"
	.ascii "import "
	.ascii "zip"
	.ascii " "
	.ascii "archive/zip"
	.ascii " \""
	.ascii "archive/zip"
	.ascii "\";\n"
	.ascii "import "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes"
	.ascii " \""
	.ascii "bytes"
	.ascii "\";\n"
	.ascii "import "
	.ascii "errors"
	.ascii " "
	.ascii "errors"
	.ascii " \""
	.ascii "errors"
	.ascii "\";\n"
	.ascii "import "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt"
	.ascii " \""
	.ascii "fmt"
	.ascii "\";\n"
	.ascii "import "
	.ascii "build"
	.ascii " "
	.ascii "go/build"
	.ascii " \""
	.ascii "go/build"
	.ascii "\";\n"
	.ascii "import "
	.ascii "io"
	.ascii " "
	.ascii "io"
	.ascii " \""
	.ascii "io"
	.ascii "\";\n"
	.ascii "import "
	.ascii "ioutil"
	.ascii " "
	.ascii "io/ioutil"
	.ascii " \""
	.ascii "io/ioutil"
	.ascii "\";\n"
	.ascii "import "
	.ascii "log"
	.ascii " "
	.ascii "log"
	.ascii " \""
	.ascii "log"
	.ascii "\";\n"
	.ascii "import "
	.ascii "os"
	.ascii " "
	.ascii "os"
	.ascii " \""
	.ascii "os"
	.ascii "\";\n"
	.ascii "import "
	.ascii "exec"
	.ascii " "
	.ascii "os/exec"
	.ascii " \""
	.ascii "os/exec"
	.ascii "\";\n"
	.ascii "import "
	.ascii "path"
	.ascii " "
	.ascii "path"
	.ascii " \""
	.ascii "path"
	.ascii "\";\n"
	.ascii "import "
	.ascii "filepath"
	.ascii " "
	.ascii "path/filepath"
	.ascii " \""
	.ascii "path/filepath"
	.ascii "\";\n"
	.ascii "import "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime"
	.ascii " \""
	.ascii "runtime"
	.ascii "\";\n"
	.ascii "import "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv"
	.ascii " \""
	.ascii "strconv"
	.ascii "\";\n"
	.ascii "import "
	.ascii "strings"
	.ascii " "
	.ascii "strings"
	.ascii " \""
	.ascii "strings"
	.ascii "\";\n"
	.ascii "import "
	.ascii "time"
	.ascii " "
	.ascii "time"
	.ascii " \""
	.ascii "time"
	.ascii "\";\n"
	.ascii "init"
	.ascii " "
	.ascii "cmd"
	.ascii " "
	.ascii "command_line_arguments..import"
	.ascii " "
	.ascii "zip"
	.ascii " "
	.ascii "archive_zip..import"
	.ascii " "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio..import"
	.ascii " "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes..import"
	.ascii " "
	.ascii "flate"
	.ascii " "
	.ascii "compress_flate..import"
	.ascii " "
	.ascii "context"
	.ascii " "
	.ascii "context..import"
	.ascii " "
	.ascii "binary"
	.ascii " "
	.ascii "encoding_binary..import"
	.ascii " "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt..import"
	.ascii " "
	.ascii "ast"
	.ascii " "
	.ascii "go_ast..import"
	.ascii " "
	.ascii "build"
	.ascii " "
	.ascii "go_build..import"
	.ascii " "
	.ascii "doc"
	.ascii " "
	.ascii "go_doc..import"
	.ascii " "
	.ascii "parser"
	.ascii " "
	.ascii "go_parser..import"
	.ascii " "
	.ascii "scanner"
	.ascii " "
	.ascii "go_scanner..import"
	.ascii " "
	.ascii "token"
	.ascii " "
	.ascii "go_token..import"
	.ascii " "
	.ascii "crc32"
	.ascii " "
	.ascii "hash_crc32..import"
	.ascii " "
	.ascii "poll"
	.ascii " "
	.ascii "internal_poll..import"
	.ascii " "
	.ascii "testlog"
	.ascii " "
	.ascii "internal_testlog..import"
	.ascii " "
	.ascii "io"
	.ascii " "
	.ascii "io..import"
	.ascii " "
	.ascii "ioutil"
	.ascii " "
	.ascii "io_ioutil..import"
	.ascii " "
	.ascii "log"
	.ascii " "
	.ascii "log..import"
	.ascii " "
	.ascii "os"
	.ascii " "
	.ascii "os..import"
	.ascii " "
	.ascii "exec"
	.ascii " "
	.ascii "os_exec..import"
	.ascii " "
	.ascii "path"
	.ascii " "
	.ascii "path..import"
	.ascii " "
	.ascii "filepath"
	.ascii " "
	.ascii "path_filepath..import"
	.ascii " "
	.ascii "reflect"
	.ascii " "
	.ascii "reflect..import"
	.ascii " "
	.ascii "regexp"
	.ascii " "
	.ascii "regexp..import"
	.ascii " "
	.ascii "syntax"
	.ascii " "
	.ascii "regexp_syntax..import"
	.ascii " "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime..import"
	.ascii " "
	.ascii "sys"
	.ascii " "
	.ascii "runtime_internal_sys..import"
	.ascii " "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv..import"
	.ascii " "
	.ascii "sync"
	.ascii " "
	.ascii "sync..import"
	.ascii " "
	.ascii "syscall"
	.ascii " "
	.ascii "syscall..import"
	.ascii " "
	.ascii "template"
	.ascii " "
	.ascii "text_template..import"
	.ascii " "
	.ascii "parse"
	.ascii " "
	.ascii "text_template_parse..import"
	.ascii " "
	.ascii "time"
	.ascii " "
	.ascii "time..import"
	.ascii " "
	.ascii "unicode"
	.ascii " "
	.ascii "unicode..import"
	.ascii ";\n"
	.ascii "init_graph"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "31"
	.ascii ";\n"
	.ascii "func "
	.ascii "AndroidEnv"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 1 "
	.ascii "*"
	.ascii "<type 2 "
	.ascii "\"Flags\" "
	.ascii "<type 3 "
	.ascii "struct { "
	.ascii "Logger"
	.ascii " "
	.ascii "<type 4 "
	.ascii "*"
	.ascii "<type 5 "
	.ascii "\"log.Logger\" "
	.ascii "<type 6 "
	.ascii "struct { "
	.ascii ".log.mu"
	.ascii " "
	.ascii "<type 7 "
	.ascii "\"sync.Mutex\" "
	.ascii "\""
	.ascii "sync"
	.ascii "\" "
	.ascii "<type 8 "
	.ascii "struct { "
	.ascii ".sync.state"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.sema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 9 "
	.ascii "*"
	.ascii "<type 7>"
	.ascii ">"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 9>"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".log.prefix"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".log.flag"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".log.out"
	.ascii " "
	.ascii "<type 10 "
	.ascii "\"io.Writer\" "
	.ascii "<type 11 "
	.ascii "interface { "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 12 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".log.buf"
	.ascii " "
	.ascii "<type 13 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14 "
	.ascii "*"
	.ascii "<type 5>"
	.ascii ">"
	.ascii ") "
	.ascii "SetPrefix"
	.ascii " ("
	.ascii "prefix"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "SetFlags"
	.ascii " ("
	.ascii "flag"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Panicf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 15 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Flags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Printf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 16 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Prefix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii ".log.formatHeader"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 17 "
	.ascii "*"
	.ascii "<type 18 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19 "
	.ascii "\"time.Time\" "
	.ascii "<type 20 "
	.ascii "struct { "
	.ascii ".time.wall"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".time.ext"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.loc"
	.ascii " "
	.ascii "<type 21 "
	.ascii "*"
	.ascii "<type 22 "
	.ascii "\"time.Location\" "
	.ascii "<type 23 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.zone"
	.ascii " "
	.ascii "<type 24 "
	.ascii "["
	.ascii "] "
	.ascii "<type 25 "
	.ascii "\".time.zone\" "
	.ascii "<type 26 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".time.isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.tx"
	.ascii " "
	.ascii "<type 27 "
	.ascii "["
	.ascii "] "
	.ascii "<type 28 "
	.ascii "\".time.zoneTrans\" "
	.ascii "<type 29 "
	.ascii "struct { "
	.ascii ".time.when"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.index"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".time.isstd"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".time.isutc"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.cacheStart"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheEnd"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheZone"
	.ascii " "
	.ascii "<type 30 "
	.ascii "*"
	.ascii "<type 25>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 31 "
	.ascii "*"
	.ascii "<type 22>"
	.ascii ">"
	.ascii ") "
	.ascii ".time.firstZoneUsed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.lookupName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "unix"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.lookup"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "start"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "end"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.get"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 31>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii ".time.lookupFirstZone"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 31>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "YearDay"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "UnixNano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "MarshalBinary"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 32 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Nanosecond"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Minute"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33 "
	.ascii "*"
	.ascii "<type 19>"
	.ascii ">"
	.ascii ") "
	.ascii "GobDecode"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 34 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii ".time.locabs"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "abs"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.stripMono"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii ".time.abs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Zone"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.setMono"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Weekday"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 36 "
	.ascii "\"time.Weekday\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 36>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Location"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii "UnmarshalJSON"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 37 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.sec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Sub"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type 38 "
	.ascii "\"time.Duration\" "
	.ascii "<type -4>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Nanoseconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Minutes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Seconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Hours"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Day"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii "UnmarshalBinary"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 39 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Local"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "After"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.addSec"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.setLoc"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "GobEncode"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 40 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Before"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.unixSec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Date"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 41 "
	.ascii "\"time.Month\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 41>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 42 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 43 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "IsZero"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Format"
	.ascii " ("
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Year"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "UTC"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii ".time.date"
	.ascii " ("
	.ascii "full"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 41>"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "yday"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "ISOWeek"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "week"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "AppendFormat"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 44 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 45 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.nsec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "AddDate"
	.ascii " ("
	.ascii "years"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "months"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "days"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Month"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 41>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Second"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.mono"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Clock"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "hour"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "min"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "sec"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ") "
	.ascii "Hour"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "file"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "line"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "SetOutput"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 10>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Panic"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 46 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Output"
	.ascii " ("
	.ascii "calldepth"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Print"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 47 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Fatalln"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 48 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Println"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 49 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Panicln"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 50 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Fatal"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 51 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 14>"
	.ascii ") "
	.ascii "Fatalf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 52 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Threaded"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.disablePrint"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "BuildN"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "BuildX"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "BuildV"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "BuildWork"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "BuildGcflags"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "BuildLdflags"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "BuildO"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "BuildBinary"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "BuildTargets"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 53 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ") "
	.ascii "ShouldPrint"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ") "
	.ascii "ShouldRun"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "goarch"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 54 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "AndroidPlatformPath"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 55 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "AndroidSDKPath"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 56 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "ArchClang"
	.ascii " ("
	.ascii "goarch"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii "func "
	.ascii "Bind"
	.ascii " ("
	.ascii "flags"
	.ascii " "
	.ascii "<type 57 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "args"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 58 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "var "
	.ascii "BindFile"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii "func "
	.ascii "Build"
	.ascii " ("
	.ascii "flags"
	.ascii " "
	.ascii "<type 59 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "args"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 60 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "BuildAAR"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type 61 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "androidDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "pkgs"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 62 "
	.ascii "["
	.ascii "] "
	.ascii "<type 63 "
	.ascii "*"
	.ascii "<type 64 "
	.ascii "\"go/build.Package\" "
	.ascii "<type 65 "
	.ascii "struct { "
	.ascii "Dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "ImportComment"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Doc"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "ImportPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Root"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "SrcRoot"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgRoot"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgTargetRoot"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "BinDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Goroot"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "PkgObj"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "AllTags"
	.ascii " "
	.ascii "<type 66 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "ConflictDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "BinaryOnly"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "GoFiles"
	.ascii " "
	.ascii "<type 67 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CgoFiles"
	.ascii " "
	.ascii "<type 68 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "IgnoredGoFiles"
	.ascii " "
	.ascii "<type 69 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "InvalidGoFiles"
	.ascii " "
	.ascii "<type 70 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CFiles"
	.ascii " "
	.ascii "<type 71 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CXXFiles"
	.ascii " "
	.ascii "<type 72 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "MFiles"
	.ascii " "
	.ascii "<type 73 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "HFiles"
	.ascii " "
	.ascii "<type 74 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "FFiles"
	.ascii " "
	.ascii "<type 75 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "SFiles"
	.ascii " "
	.ascii "<type 76 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "SwigFiles"
	.ascii " "
	.ascii "<type 77 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "SwigCXXFiles"
	.ascii " "
	.ascii "<type 78 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "SysoFiles"
	.ascii " "
	.ascii "<type 79 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CgoCFLAGS"
	.ascii " "
	.ascii "<type 80 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CgoCPPFLAGS"
	.ascii " "
	.ascii "<type 81 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CgoCXXFLAGS"
	.ascii " "
	.ascii "<type 82 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CgoFFLAGS"
	.ascii " "
	.ascii "<type 83 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CgoLDFLAGS"
	.ascii " "
	.ascii "<type 84 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "CgoPkgConfig"
	.ascii " "
	.ascii "<type 85 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "Imports"
	.ascii " "
	.ascii "<type 86 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "ImportPos"
	.ascii " "
	.ascii "<type 87 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 88 "
	.ascii "["
	.ascii "] "
	.ascii "<type 89 "
	.ascii "\"go/token.Position\" "
	.ascii "\""
	.ascii "token"
	.ascii "\" "
	.ascii "<type 90 "
	.ascii "struct { "
	.ascii "Filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Line"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Column"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pos"
	.ascii " "
	.ascii "<type 89>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pos"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 91 "
	.ascii "*"
	.ascii "<type 89>"
	.ascii ">"
	.ascii ") "
	.ascii "IsValid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "TestGoFiles"
	.ascii " "
	.ascii "<type 92 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "TestImports"
	.ascii " "
	.ascii "<type 93 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "TestImportPos"
	.ascii " "
	.ascii "<type 94 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 95 "
	.ascii "["
	.ascii "] "
	.ascii "<type 89>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "XTestGoFiles"
	.ascii " "
	.ascii "<type 96 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "XTestImports"
	.ascii " "
	.ascii "<type 97 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "XTestImportPos"
	.ascii " "
	.ascii "<type 98 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 99 "
	.ascii "["
	.ascii "] "
	.ascii "<type 89>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 100 "
	.ascii "*"
	.ascii "<type 64>"
	.ascii ">"
	.ascii ") "
	.ascii "IsCommand"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "androidArchs"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 101 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "tmpdir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "aarPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "BuildJar"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type 102 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "w"
	.ascii " "
	.ascii "<type 10>"
	.ascii ", "
	.ascii "srcDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "tmpdir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "CopyFile"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 103 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "dst"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "src"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "Darwin386Env"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 104 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 105 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "DarwinAmd64Env"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 106 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 107 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "DarwinArm64Env"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 108 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 109 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "DarwinArmEnv"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 110 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 111 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "EnvClang"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 112 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "sdkName"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "_clang"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "cflags"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "FindEnv"
	.ascii " ("
	.ascii "env"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 113 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 2>"
	.ascii ";\n"
	.ascii "func "
	.ascii "GetAndroidABI"
	.ascii " ("
	.ascii "arch"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii "func "
	.ascii "GetEnv"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 114 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "key"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii "func "
	.ascii "Getwd"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 115 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "GoBuild"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ", "
	.ascii "srcs"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 116 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "env"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 117 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "buildTags"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 118 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "matchaPkgPath"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "tmpdir"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "args"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "GoEnv"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii "func "
	.ascii "GoVersion"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 119 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "Import"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 120 "
	.ascii "*"
	.ascii "<type 121 "
	.ascii "\"go/build.Context\" "
	.ascii "<type 122 "
	.ascii "struct { "
	.ascii "GOARCH"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "GOOS"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "GOROOT"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "GOPATH"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "CgoEnabled"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "UseAllFiles"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Compiler"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "BuildTags"
	.ascii " "
	.ascii "<type 123 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "ReleaseTags"
	.ascii " "
	.ascii "<type 124 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "InstallSuffix"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "JoinPath"
	.ascii " "
	.ascii "<type 125 "
	.ascii "("
	.ascii "elem"
	.ascii " "
	.ascii "..."
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "SplitPathList"
	.ascii " "
	.ascii "<type 126 "
	.ascii "("
	.ascii "list"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 127 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "IsAbsPath"
	.ascii " "
	.ascii "<type 128 "
	.ascii "("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii "; "
	.ascii "IsDir"
	.ascii " "
	.ascii "<type 129 "
	.ascii "("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii "; "
	.ascii "HasSubdir"
	.ascii " "
	.ascii "<type 130 "
	.ascii "("
	.ascii "root"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "rel"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii "ReadDir"
	.ascii " "
	.ascii "<type 131 "
	.ascii "("
	.ascii "dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 132 "
	.ascii "["
	.ascii "] "
	.ascii "<type 133 "
	.ascii "\"os.FileInfo\" "
	.ascii "<type 134 "
	.ascii "interface { "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Mode"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 135 "
	.ascii "\"os.FileMode\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "IsRegular"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "Perm"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 135>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "ModTime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 19>"
	.ascii "; "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Sys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 136 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii "OpenFile"
	.ascii " "
	.ascii "<type 137 "
	.ascii "("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 138 "
	.ascii "\"io.ReadCloser\" "
	.ascii "<type 139 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 140 "
	.ascii "\"io.Reader\" "
	.ascii "<type 141 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 142 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 143 "
	.ascii "\"io.Closer\" "
	.ascii "<type 144 "
	.ascii "interface { "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145 "
	.ascii "*"
	.ascii "<type 121>"
	.ascii ">"
	.ascii ") "
	.ascii ".go/build.match"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "allTags"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 146 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.saveCgo"
	.ascii " ("
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "di"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 63>"
	.ascii ", "
	.ascii "cg"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 147 "
	.ascii "*"
	.ascii "<type 148 "
	.ascii "\"go/ast.CommentGroup\" "
	.ascii "\""
	.ascii "ast"
	.ascii "\" "
	.ascii "<type 149 "
	.ascii "struct { "
	.ascii "List"
	.ascii " "
	.ascii "<type 150 "
	.ascii "["
	.ascii "] "
	.ascii "<type 151 "
	.ascii "*"
	.ascii "<type 152 "
	.ascii "\"go/ast.Comment\" "
	.ascii "<type 153 "
	.ascii "struct { "
	.ascii "Slash"
	.ascii " "
	.ascii "<type 154 "
	.ascii "\"go/token.Pos\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 154>"
	.ascii ") "
	.ascii "IsValid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Text"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 155 "
	.ascii "*"
	.ascii "<type 152>"
	.ascii ">"
	.ascii ") "
	.ascii "Pos"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 154>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 155>"
	.ascii ") "
	.ascii "End"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 154>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 156 "
	.ascii "*"
	.ascii "<type 148>"
	.ascii ">"
	.ascii ") "
	.ascii "Pos"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 154>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 156>"
	.ascii ") "
	.ascii "Text"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 156>"
	.ascii ") "
	.ascii "End"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 154>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.shouldBuild"
	.ascii " ("
	.ascii "content"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 157 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "allTags"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 158 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ", "
	.ascii "binaryOnly"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 159 "
	.ascii "*"
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x6c0a>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.matchFile"
	.ascii " ("
	.ascii "dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "allTags"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 160 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ", "
	.ascii "binaryOnly"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 159>"
	.ascii ")"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "data"
	.ascii " "
	.ascii "<type 161 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x18a>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "MatchFile"
	.ascii " ("
	.ascii "dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "ImportDir"
	.ascii " ("
	.ascii "dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "mode"
	.ascii " "
	.ascii "<type 162 "
	.ascii "\"go/build.ImportMode\" "
	.ascii "<type -12>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 63>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.isDir"
	.ascii " ("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "Import"
	.ascii " ("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "srcDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "mode"
	.ascii " "
	.ascii "<type 162>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 63>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.splitPathList"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 163 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.isAbsPath"
	.ascii " ("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.hasSubdir"
	.ascii " ("
	.ascii "root"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "rel"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1b2>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.readDir"
	.ascii " ("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 164 "
	.ascii "["
	.ascii "] "
	.ascii "<type 133>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.joinPath"
	.ascii " ("
	.ascii "elem"
	.ascii " "
	.ascii "..."
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1b2>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.openFile"
	.ascii " ("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 138>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.makePathsAbsolute"
	.ascii " ("
	.ascii "args"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "srcDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.isFile"
	.ascii " ("
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.goodOSArchFile"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "allTags"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 166 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "SrcDirs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 167 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ctxt"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii ".go/build.gopath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 168 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "srcDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "mode"
	.ascii " "
	.ascii "<type 162>"
	.ascii ", "
	.ascii "pkgs"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 169 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 63>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "ImportAll"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ", "
	.ascii "ctx"
	.ascii " "
	.ascii "<type 120>"
	.ascii ", "
	.ascii "paths"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 170 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "srcDir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "mode"
	.ascii " "
	.ascii "<type 162>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 171 "
	.ascii "["
	.ascii "] "
	.ascii "<type 63>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "Init"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 172 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "InstallPkg"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ", "
	.ascii "matchaPkgPath"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "temp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "pkg"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "env"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 173 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "args"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "IsDir"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 174 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii "func "
	.ascii "IsFile"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 175 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii "func "
	.ascii "LookPath"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 176 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "file"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "MatchaPkgPath"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "MergeEnviron"
	.ascii " ("
	.ascii "kv"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 177 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "cur"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 177>"
	.ascii ")"
	.ascii " "
	.ascii "<type 178 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "Mkdir"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 179 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "NDKPath"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 180 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewTmpDir"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 181 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "OutputCmd"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 182 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "fallback"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 183 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "tmpdir"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "cmd"
	.ascii " "
	.ascii "<type 184 "
	.ascii "*"
	.ascii "<type 185 "
	.ascii "\"os/exec.Cmd\" "
	.ascii "<type 186 "
	.ascii "struct { "
	.ascii "Path"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Args"
	.ascii " "
	.ascii "<type 187 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "Env"
	.ascii " "
	.ascii "<type 188 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "Dir"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Stdin"
	.ascii " "
	.ascii "<type 140>"
	.ascii "; "
	.ascii "Stdout"
	.ascii " "
	.ascii "<type 10>"
	.ascii "; "
	.ascii "Stderr"
	.ascii " "
	.ascii "<type 10>"
	.ascii "; "
	.ascii "ExtraFiles"
	.ascii " "
	.ascii "<type 189 "
	.ascii "["
	.ascii "] "
	.ascii "<type 190 "
	.ascii "*"
	.ascii "<type 191 "
	.ascii "\"os.File\" "
	.ascii "<type 192 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 193 "
	.ascii "*"
	.ascii "<type 194 "
	.ascii "\".os.file\" "
	.ascii "<type 195 "
	.ascii "struct { "
	.ascii ".os.pfd"
	.ascii " "
	.ascii "<type 196 "
	.ascii "\"internal/poll.FD\" "
	.ascii "\""
	.ascii "poll"
	.ascii "\" "
	.ascii "<type 197 "
	.ascii "struct { "
	.ascii ".internal/poll.fdmu"
	.ascii " "
	.ascii "<type 198 "
	.ascii "\".internal/poll.fdMutex\" "
	.ascii "<type 199 "
	.ascii "struct { "
	.ascii ".internal/poll.state"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".internal/poll.rsema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".internal/poll.wsema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 200 "
	.ascii "*"
	.ascii "<type 198>"
	.ascii ">"
	.ascii ") "
	.ascii ".internal/poll.rwunlock"
	.ascii " ("
	.ascii "read"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 200>"
	.ascii ") "
	.ascii ".internal/poll.increfAndClose"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 200>"
	.ascii ") "
	.ascii ".internal/poll.rwlock"
	.ascii " ("
	.ascii "read"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 200>"
	.ascii ") "
	.ascii ".internal/poll.decref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 200>"
	.ascii ") "
	.ascii ".internal/poll.incref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Sysfd"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".internal/poll.pd"
	.ascii " "
	.ascii "<type 201 "
	.ascii "\".internal/poll.pollDesc\" "
	.ascii "<type 202 "
	.ascii "struct { "
	.ascii ".internal/poll.runtimeCtx"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203 "
	.ascii "*"
	.ascii "<type 201>"
	.ascii ">"
	.ascii ") "
	.ascii ".internal/poll.prepareWrite"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.evict"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.wait"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.init"
	.ascii " ("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 204 "
	.ascii "*"
	.ascii "<type 196>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.pollable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.prepare"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.waitRead"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.close"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.prepareRead"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.waitWrite"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 203>"
	.ascii ") "
	.ascii ".internal/poll.waitCanceled"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".internal/poll.iovecs"
	.ascii " "
	.ascii "<type 205 "
	.ascii "*"
	.ascii "<type 206 "
	.ascii "["
	.ascii "] "
	.ascii "<type 207 "
	.ascii "\"syscall.Iovec\" "
	.ascii "\""
	.ascii "syscall"
	.ascii "\" "
	.ascii "<type 208 "
	.ascii "struct { "
	.ascii "Base"
	.ascii " "
	.ascii "<type 209 "
	.ascii "*"
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Len"
	.ascii " "
	.ascii "<type 210 "
	.ascii "\"syscall.Iovec_len_t\" "
	.ascii "<type -8>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "iov"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 211 "
	.ascii "*"
	.ascii "<type 207>"
	.ascii ">"
	.ascii ") "
	.ascii "SetLen"
	.ascii " ("
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".internal/poll.csema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "IsStream"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "ZeroReadIsEOF"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".internal/poll.isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".internal/poll.isBlocking"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212 "
	.ascii "*"
	.ascii "<type 196>"
	.ascii ">"
	.ascii ") "
	.ascii "Fchmod"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.readLock"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.eofError"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetsockoptInt"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "arg"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "RawWrite"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 213 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Pwrite"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 214 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 215 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 216 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "sa"
	.ascii " "
	.ascii "<type 217 "
	.ascii "\"syscall.Sockaddr\" "
	.ascii "<type 218 "
	.ascii "interface { "
	.ascii ".syscall.sockaddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "ptr"
	.ascii " "
	.ascii "<type 219 "
	.ascii "*"
	.ascii "<type 220 "
	.ascii "\"syscall.RawSockaddrAny\" "
	.ascii "<type 221 "
	.ascii "struct { "
	.ascii "Addr"
	.ascii " "
	.ascii "<type 222 "
	.ascii "\"syscall.RawSockaddr\" "
	.ascii "<type 223 "
	.ascii "struct { "
	.ascii "Family"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii "Data"
	.ascii " "
	.ascii "<type 224 "
	.ascii "["
	.ascii "14"
	.ascii " "
	.ascii "] "
	.ascii "<type -1>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Pad"
	.ascii " "
	.ascii "<type 225 "
	.ascii "["
	.ascii "96"
	.ascii " "
	.ascii "] "
	.ascii "<type -1>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "len"
	.ascii " "
	.ascii "<type 226 "
	.ascii "\"syscall.Socklen_t\" "
	.ascii "<type 227 "
	.ascii "\".syscall._socklen_t\" "
	.ascii "<type -7>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Seek"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "whence"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "WriteMsg"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 228 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "oob"
	.ascii " "
	.ascii "<type 229 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "sa"
	.ascii " "
	.ascii "<type 217>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetsockoptByte"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "arg"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetsockoptIPMreq"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "mreq"
	.ascii " "
	.ascii "<type 230 "
	.ascii "*"
	.ascii "<type 231 "
	.ascii "\"syscall.IPMreq\" "
	.ascii "<type 232 "
	.ascii "struct { "
	.ascii "Multiaddr"
	.ascii " "
	.ascii "<type 233 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Interface"
	.ascii " "
	.ascii "<type 234 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetsockoptIPMreqn"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "mreq"
	.ascii " "
	.ascii "<type 235 "
	.ascii "*"
	.ascii "<type 236 "
	.ascii "\"syscall.IPMreqn\" "
	.ascii "<type 237 "
	.ascii "struct { "
	.ascii "Multiaddr"
	.ascii " "
	.ascii "<type 238 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Address"
	.ascii " "
	.ascii "<type 239 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Ifindex"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "RawControl"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 240 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetsockoptInet4Addr"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "arg"
	.ascii " "
	.ascii "<type 241 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetsockoptIPv6Mreq"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "mreq"
	.ascii " "
	.ascii "<type 242 "
	.ascii "*"
	.ascii "<type 243 "
	.ascii "\"syscall.IPv6Mreq\" "
	.ascii "<type 244 "
	.ascii "struct { "
	.ascii "Multiaddr"
	.ascii " "
	.ascii "<type 245 "
	.ascii "["
	.ascii "16"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Interface"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "ReadMsg"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 246 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "oob"
	.ascii " "
	.ascii "<type 247 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 217>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Writev"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 248 "
	.ascii "*"
	.ascii "<type 249 "
	.ascii "["
	.ascii "] "
	.ascii "<type 250 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "RawRead"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 251 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "WriteOnce"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 252 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Fstat"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type 253 "
	.ascii "*"
	.ascii "<type 254 "
	.ascii "\"syscall.Stat_t\" "
	.ascii "<type 255 "
	.ascii "struct { "
	.ascii "Dev"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Ino"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Nlink"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".syscall.__pad0"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "Rdev"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Blksize"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Blocks"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Atim"
	.ascii " "
	.ascii "<type 256 "
	.ascii "\"syscall.Timespec\" "
	.ascii "<type 257 "
	.ascii "struct { "
	.ascii "Sec"
	.ascii " "
	.ascii "<type 258 "
	.ascii "\"syscall.Timespec_sec_t\" "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "Nsec"
	.ascii " "
	.ascii "<type 259 "
	.ascii "\"syscall.Timespec_nsec_t\" "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ts"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 260 "
	.ascii "*"
	.ascii "<type 256>"
	.ascii ">"
	.ascii ") "
	.ascii "Nano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ts"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 260>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "nsec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Mtim"
	.ascii " "
	.ascii "<type 256>"
	.ascii "; "
	.ascii "Ctim"
	.ascii " "
	.ascii "<type 256>"
	.ascii "; "
	.ascii ".syscall.__glibc_reserved"
	.ascii " "
	.ascii "<type 261 "
	.ascii "["
	.ascii "3"
	.ascii " "
	.ascii "] "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Accept"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 217>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Fsync"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Pread"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 262 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Init"
	.ascii " ("
	.ascii "net"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "pollable"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "ReadDirent"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 263 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetBlocking"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Shutdown"
	.ascii " ("
	.ascii "how"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "WaitWrite"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "ReadFrom"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 264 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 217>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.writeUnlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 265 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Fchown"
	.ascii " ("
	.ascii "uid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "gid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.destroy"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Ftruncate"
	.ascii " ("
	.ascii "size"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.incref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.writeLock"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.decref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii ".internal/poll.readUnlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "Fchdir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 212>"
	.ascii ") "
	.ascii "SetsockoptLinger"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "l"
	.ascii " "
	.ascii "<type 266 "
	.ascii "*"
	.ascii "<type 267 "
	.ascii "\"syscall.Linger\" "
	.ascii "<type 268 "
	.ascii "struct { "
	.ascii "Onoff"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "Linger"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".os.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".os.dirinfo"
	.ascii " "
	.ascii "<type 269 "
	.ascii "*"
	.ascii "<type 270 "
	.ascii "\".os.dirInfo\" "
	.ascii "<type 271 "
	.ascii "struct { "
	.ascii ".os.buf"
	.ascii " "
	.ascii "<type 272 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".os.dir"
	.ascii " "
	.ascii "<type 273 "
	.ascii "*"
	.ascii "<type 274 "
	.ascii "\"syscall.DIR\" "
	.ascii "<type 275 "
	.ascii "\".syscall._DIR\" "
	.ascii "<type 276 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".os.nonblock"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".os.stdoutOrErr"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "file"
	.ascii " "
	.ascii "<type 277 "
	.ascii "*"
	.ascii "<type 194>"
	.ascii ">"
	.ascii ") "
	.ascii ".os.close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 278 "
	.ascii "*"
	.ascii "<type 191>"
	.ascii ">"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "size"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.wrapErr"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.checkValid"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.chmod"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type 135>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "file"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.readdirnames"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "names"
	.ascii " "
	.ascii "<type 279 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.setDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 280 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Chmod"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type 135>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Chdir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.setReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Seek"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "whence"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "ret"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "WriteAt"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 281 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.setWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.seek"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "whence"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "ret"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Stat"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 133>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 282 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 283 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Readdirnames"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "names"
	.ascii " "
	.ascii "<type 284 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.readdir"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "fi"
	.ascii " "
	.ascii "<type 285 "
	.ascii "["
	.ascii "] "
	.ascii "<type 133>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Chown"
	.ascii " ("
	.ascii "uid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "gid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Fd"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.pread"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 286 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "ReadAt"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 287 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Readdir"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 288 "
	.ascii "["
	.ascii "] "
	.ascii "<type 133>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii ".os.pwrite"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 289 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 290 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 278>"
	.ascii ") "
	.ascii "Sync"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SysProcAttr"
	.ascii " "
	.ascii "<type 291 "
	.ascii "*"
	.ascii "<type 292 "
	.ascii "\"syscall.SysProcAttr\" "
	.ascii "<type 293 "
	.ascii "struct { "
	.ascii "Chroot"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Credential"
	.ascii " "
	.ascii "<type 294 "
	.ascii "*"
	.ascii "<type 295 "
	.ascii "\"syscall.Credential\" "
	.ascii "<type 296 "
	.ascii "struct { "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Groups"
	.ascii " "
	.ascii "<type 297 "
	.ascii "["
	.ascii "] "
	.ascii "<type -7>"
	.ascii ">"
	.ascii "; "
	.ascii "NoSetGroups"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Ptrace"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Setsid"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Setpgid"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Setctty"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Noctty"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Ctty"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Foreground"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Pgid"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Pdeathsig"
	.ascii " "
	.ascii "<type 298 "
	.ascii "\"syscall.Signal\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 298>"
	.ascii ") "
	.ascii "Signal"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 298>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Cloneflags"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "Unshareflags"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "UidMappings"
	.ascii " "
	.ascii "<type 299 "
	.ascii "["
	.ascii "] "
	.ascii "<type 300 "
	.ascii "\"syscall.SysProcIDMap\" "
	.ascii "<type 301 "
	.ascii "struct { "
	.ascii "ContainerID"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "HostID"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "GidMappings"
	.ascii " "
	.ascii "<type 302 "
	.ascii "["
	.ascii "] "
	.ascii "<type 300>"
	.ascii ">"
	.ascii "; "
	.ascii "GidMappingsEnableSetgroups"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "AmbientCaps"
	.ascii " "
	.ascii "<type 303 "
	.ascii "["
	.ascii "] "
	.ascii "<type -13>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Process"
	.ascii " "
	.ascii "<type 304 "
	.ascii "*"
	.ascii "<type 305 "
	.ascii "\"os.Process\" "
	.ascii "<type 306 "
	.ascii "struct { "
	.ascii "Pid"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".os.handle"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".os.isdone"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".os.sigMu"
	.ascii " "
	.ascii "<type 307 "
	.ascii "\"sync.RWMutex\" "
	.ascii "<type 308 "
	.ascii "struct { "
	.ascii ".sync.w"
	.ascii " "
	.ascii "<type 7>"
	.ascii "; "
	.ascii ".sync.writerSem"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.readerSem"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.readerCount"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.readerWait"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 309 "
	.ascii "*"
	.ascii "<type 307>"
	.ascii ">"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 309>"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 309>"
	.ascii ") "
	.ascii "RLocker"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 310 "
	.ascii "\"sync.Locker\" "
	.ascii "<type 311 "
	.ascii "interface { "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 309>"
	.ascii ") "
	.ascii "RLock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 309>"
	.ascii ") "
	.ascii "RUnlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 312 "
	.ascii "*"
	.ascii "<type 305>"
	.ascii ">"
	.ascii ") "
	.ascii ".os.blockUntilWaitable"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii "Release"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii ".os.done"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii ".os.setDone"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii "Kill"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii ".os.kill"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii "Wait"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 313 "
	.ascii "*"
	.ascii "<type 314 "
	.ascii "\"os.ProcessState\" "
	.ascii "<type 315 "
	.ascii "struct { "
	.ascii ".os.pid"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".os.status"
	.ascii " "
	.ascii "<type 316 "
	.ascii "\"syscall.WaitStatus\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "StopSignal"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 298>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "Exited"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "CoreDump"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "ExitStatus"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "Signal"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 298>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "Continued"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "Stopped"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "TrapCause"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<type 316>"
	.ascii ") "
	.ascii "Signaled"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".os.rusage"
	.ascii " "
	.ascii "<type 317 "
	.ascii "*"
	.ascii "<type 318 "
	.ascii "\"syscall.Rusage\" "
	.ascii "<type 319 "
	.ascii "struct { "
	.ascii "Utime"
	.ascii " "
	.ascii "<type 320 "
	.ascii "\"syscall.Timeval\" "
	.ascii "<type 321 "
	.ascii "struct { "
	.ascii "Sec"
	.ascii " "
	.ascii "<type 322 "
	.ascii "\"syscall.Timeval_sec_t\" "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "Usec"
	.ascii " "
	.ascii "<type 323 "
	.ascii "\"syscall.Timeval_usec_t\" "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tv"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 324 "
	.ascii "*"
	.ascii "<type 320>"
	.ascii ">"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "nsec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tv"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 324>"
	.ascii ") "
	.ascii "Nano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Stime"
	.ascii " "
	.ascii "<type 320>"
	.ascii "; "
	.ascii "Maxrss"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Ixrss"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Idrss"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Isrss"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Minflt"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Majflt"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Nswap"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Inblock"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Oublock"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Msgsnd"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Msgrcv"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Nsignals"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Nvcsw"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Nivcsw"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325 "
	.ascii "*"
	.ascii "<type 314>"
	.ascii ">"
	.ascii ") "
	.ascii ".os.userTime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii ".os.sysUsage"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 326 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii ".os.systemTime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "Sys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 327 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "Exited"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "SystemTime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "Success"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii ".os.success"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "UserTime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 38>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "SysUsage"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 328 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii ".os.exited"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii "Pid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ") "
	.ascii ".os.sys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 329 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii "Signal"
	.ascii " ("
	.ascii "sig"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 330 "
	.ascii "\"os.Signal\" "
	.ascii "<type 331 "
	.ascii "interface { "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Signal"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii ".os.wait"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "ps"
	.ascii " "
	.ascii "<type 313>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii ".os.signal"
	.ascii " ("
	.ascii "sig"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 330>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 312>"
	.ascii ") "
	.ascii ".os.release"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "ProcessState"
	.ascii " "
	.ascii "<type 313>"
	.ascii "; "
	.ascii ".os/exec.ctx"
	.ascii " "
	.ascii "<type 332 "
	.ascii "\"context.Context\" "
	.ascii "\""
	.ascii "context"
	.ascii "\" "
	.ascii "<type 333 "
	.ascii "interface { "
	.ascii "Deadline"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "deadline"
	.ascii " "
	.ascii "<type 19>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Done"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 334 "
	.ascii "chan "
	.ascii "<- "
	.ascii "<type 335 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Err"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "Value"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 336 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 337 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".os/exec.lookPathErr"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".os/exec.finished"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".os/exec.childFiles"
	.ascii " "
	.ascii "<type 338 "
	.ascii "["
	.ascii "] "
	.ascii "<type 190>"
	.ascii ">"
	.ascii "; "
	.ascii ".os/exec.closeAfterStart"
	.ascii " "
	.ascii "<type 339 "
	.ascii "["
	.ascii "] "
	.ascii "<type 143>"
	.ascii ">"
	.ascii "; "
	.ascii ".os/exec.closeAfterWait"
	.ascii " "
	.ascii "<type 340 "
	.ascii "["
	.ascii "] "
	.ascii "<type 143>"
	.ascii ">"
	.ascii "; "
	.ascii ".os/exec.goroutine"
	.ascii " "
	.ascii "<type 341 "
	.ascii "["
	.ascii "] "
	.ascii "<type 342 "
	.ascii "("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".os/exec.errch"
	.ascii " "
	.ascii "<type 343 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii ".os/exec.waitDone"
	.ascii " "
	.ascii "<type 344 "
	.ascii "chan "
	.ascii "<type 345 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 346 "
	.ascii "*"
	.ascii "<type 185>"
	.ascii ">"
	.ascii ") "
	.ascii "StderrPipe"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 138>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii "StdoutPipe"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 138>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii "StdinPipe"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 347 "
	.ascii "\"io.WriteCloser\" "
	.ascii "<type 348 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 10>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 143>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii "Output"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 349 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii ".os/exec.stdout"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type 190>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii "CombinedOutput"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 350 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii ".os/exec.stdin"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type 190>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii "Start"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii ".os/exec.envv"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 351 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x3a>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii ".os/exec.stderr"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type 190>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii ".os/exec.writerDescriptor"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 10>"
	.ascii ")"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type 190>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii "Wait"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii ".os/exec.argv"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 352 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii ".os/exec.closeDescriptors"
	.ascii " ("
	.ascii "closers"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 353 "
	.ascii "["
	.ascii "] "
	.ascii "<type 143>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 346>"
	.ascii ") "
	.ascii "Run"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 354 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "PackageDir"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 355 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "pkgpath"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "ParseTargets"
	.ascii " ("
	.ascii "a"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 356 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 357 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "PkgPath"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 53>"
	.ascii ", "
	.ascii "matchaPkgPath"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "env"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 358 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "ReadDirNames"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 359 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 360 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "ReadFile"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 361 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 362 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "RemoveAll"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 363 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "path"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "RunCmd"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 364 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "tmpdir"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "cmd"
	.ascii " "
	.ascii "<type 184>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "ValidateAndroidInstall"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 365 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "func "
	.ascii "WriteFile"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 366 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ", "
	.ascii "filename"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 140>"
	.ascii ")"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "checksum 5A01FF843040A0865955A7C292E5F9EC22D129DE;\n"
	.text


	.file	1 "<built-in>"
	.file	2 "<stdin>"
	.file	3 "./android.go"
	.file	4 "./bind.go"
	.section	.text.command_line_arguments.ValidateAndroidInstall,"ax",@progbits
	.globl	command_line_arguments.ValidateAndroidInstall
	.p2align	4, 0x90
	.type	command_line_arguments.ValidateAndroidInstall,@function
command_line_arguments.ValidateAndroidInstall:
.Lfunc_begin0:
	.loc	3 45 0
	.cfi_startproc
	leaq	-280(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB0_2
	movq	%r10, %rax
	movabsq	$280, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB0_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$256, %rsp
	.cfi_def_cfa_offset 288
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp0:
	movq	%rdi, %r14
.Ltmp1:
	leaq	168(%rsp), %rdi
.Ltmp2:
	.loc	3 56 15 prologue_end
	movq	%r14, %rsi
	callq	command_line_arguments.AndroidPlatformPath
	movq	184(%rsp), %r15
.Ltmp3:
	.loc	3 56 43 is_stmt 0
	testq	%r15, %r15
	je	.LBB0_4
.Ltmp4:
	.loc	3 56 15
	movq	192(%rsp), %r14
.Ltmp5:
	.loc	3 47 9 is_stmt 1
	testq	%r15, %r15
	je	.LBB0_11
.Ltmp6:
.LBB0_10:
	.loc	3 48 7
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	.Lconst.2(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	leaq	112(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 64(%rsp)
	movq	%rbx, 72(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	232(%rsp), %rdi
	callq	fmt.Println
.Ltmp7:
.LBB0_11:
	.loc	3 52 2
	movq	%r15, %rax
	movq	%r14, %rdx
	addq	$256, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp8:
	.cfi_def_cfa_offset 8
	retq
.LBB0_4:
	.cfi_def_cfa_offset 288
.Ltmp9:
	.loc	3 0 2 is_stmt 0
	leaq	136(%rsp), %rdi
.Ltmp10:
	.loc	3 59 15 is_stmt 1
	movq	%r14, %rsi
	callq	command_line_arguments.NDKPath
	movq	152(%rsp), %r15
.Ltmp11:
	.loc	3 59 31 is_stmt 0
	testq	%r15, %r15
	je	.LBB0_6
.Ltmp12:
	.loc	3 59 15
	movq	160(%rsp), %r14
.Ltmp13:
	.loc	3 47 9 is_stmt 1
	testq	%r15, %r15
	jne	.LBB0_10
	jmp	.LBB0_11
.Ltmp14:
.LBB0_6:
	.loc	3 0 9 is_stmt 0
	leaq	200(%rsp), %rdi
.Ltmp15:
	.loc	3 62 15 is_stmt 1
	movl	$.Lconst.7, %edx
	movl	$5, %ecx
	movq	%r14, %rsi
	callq	command_line_arguments.LookPath
	.loc	3 62 41 is_stmt 0
	cmpq	$0, 216(%rsp)
	je	.LBB0_8
.Ltmp16:
	.loc	3 63 21 is_stmt 1
	movups	.Lconst.10(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	$.Lconst.188, 96(%rsp)
	movq	$81, 104(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	96(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	.loc	3 63 14 is_stmt 0
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	fmt.Errorf
	movq	%rax, %r15
.Ltmp17:
	movq	%rdx, %r14
.Ltmp18:
	.loc	3 47 9 is_stmt 1
	testq	%r15, %r15
	jne	.LBB0_10
	jmp	.LBB0_11
.Ltmp19:
.LBB0_8:
	.loc	3 0 9 is_stmt 0
	xorl	%r15d, %r15d
.Ltmp20:
	xorl	%r14d, %r14d
.Ltmp21:
	.loc	3 47 9
	testq	%r15, %r15
	jne	.LBB0_10
	jmp	.LBB0_11
.Ltmp22:
.Lfunc_end0:
	.size	command_line_arguments.ValidateAndroidInstall, .Lfunc_end0-command_line_arguments.ValidateAndroidInstall
	.cfi_endproc
	.file	5 "./matcha.go"

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI1_0:
	.zero	16
	.section	.text.command_line_arguments.AndroidPlatformPath,"ax",@progbits
	.globl	command_line_arguments.AndroidPlatformPath
	.p2align	4, 0x90
	.type	command_line_arguments.AndroidPlatformPath,@function
command_line_arguments.AndroidPlatformPath:
.Lfunc_begin1:
	.loc	3 83 0 is_stmt 1
	.cfi_startproc
	leaq	-472(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB1_2
	movq	%r10, %rax
	movabsq	$472, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB1_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$424, %rsp
	.cfi_def_cfa_offset 480
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, %rbx
.Ltmp23:
	leaq	352(%rsp), %rdi
.Ltmp24:
	.loc	3 84 22 prologue_end
	callq	command_line_arguments.AndroidSDKPath
.Ltmp25:
	movq	368(%rsp), %rax
.Ltmp26:
	movq	376(%rsp), %rcx
.Ltmp27:
	.loc	3 0 22 is_stmt 0
	movups	352(%rsp), %xmm0
	movaps	%xmm0, 240(%rsp)
	.loc	3 85 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB1_6
.Ltmp28:
.LBB1_3:
	.loc	3 0 9 is_stmt 0
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rcx, 24(%rbx)
.Ltmp29:
.LBB1_4:
	movq	%rbx, %rax
.Ltmp30:
.LBB1_5:
	addq	$424, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB1_6:
	.cfi_def_cfa_offset 480
.Ltmp31:
	.loc	3 89 27 is_stmt 1
	movaps	240(%rsp), %xmm0
	movaps	%xmm0, 384(%rsp)
	movups	.Lconst.20(%rip), %xmm0
	movaps	%xmm0, 400(%rsp)
	leaq	384(%rsp), %rax
.Ltmp32:
	movq	%rax, 88(%rsp)
	movq	$2, 96(%rsp)
	movq	$2, 104(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp33:
	movq	%rax, %r14
.Ltmp34:
	movq	%rdx, %r15
.Ltmp35:
	.loc	3 90 6
	movq	%rbp, %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.IsDir
	.loc	3 90 5 is_stmt 0
	testb	%al, %al
	je	.LBB1_7
.Ltmp36:
	.loc	3 0 5
	leaq	312(%rsp), %rdi
.Ltmp37:
	.loc	3 94 28 is_stmt 1
	movq	%rbp, %rsi
	movq	%r14, %rdx
	movq	%r15, %rcx
	callq	command_line_arguments.ReadDirNames
	movq	336(%rsp), %rax
.Ltmp38:
	.loc	3 95 9
	testq	%rax, %rax
	je	.LBB1_10
.Ltmp39:
	.loc	3 94 28
	movq	344(%rsp), %rcx
	jmp	.LBB1_3
.Ltmp40:
.LBB1_7:
	.loc	3 91 25
	movups	.Lconst.22(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movq	$.Lconst.182, 176(%rsp)
	movq	$51, 184(%rsp)
	movaps	160(%rsp), %xmm0
	movaps	176(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	.loc	3 91 18 is_stmt 0
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	fmt.Errorf
.Ltmp41:
	.loc	3 91 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rdx, 24(%rbx)
	jmp	.LBB1_4
.Ltmp42:
.LBB1_10:
	.loc	3 0 3
	movq	%r15, 64(%rsp)
.Ltmp43:
	movq	%r14, 72(%rsp)
	movq	%rbx, 40(%rsp)
	.loc	3 94 28 is_stmt 1
	movq	312(%rsp), %r14
.Ltmp44:
	movq	320(%rsp), %r15
.Ltmp45:
	.loc	3 0 28 is_stmt 0
	movq	%rbp, 80(%rsp)
.Ltmp46:
	.loc	3 98 7 is_stmt 1
	movq	%rbp, %rdi
	callq	command_line_arguments.Flags.ShouldRun
.Ltmp47:
	.loc	3 98 5 is_stmt 0
	testb	%al, %al
	je	.LBB1_11
.Ltmp48:
	.loc	3 104 2 is_stmt 1
	testq	%r15, %r15
	jg	.LBB1_13
	jmp	.LBB1_20
.Ltmp49:
.LBB1_11:
	.loc	3 0 2 is_stmt 0
	movups	.Lconst.25(%rip), %xmm0
	movaps	%xmm0, 224(%rsp)
	leaq	224(%rsp), %r14
.Ltmp50:
	movl	$1, %r15d
.Ltmp51:
.LBB1_13:
	addq	$8, %r14
	xorl	%eax, %eax
	movq	%rax, 56(%rsp)
	xorl	%eax, %eax
	movq	%rax, 48(%rsp)
	xorl	%eax, %eax
	movq	%rax, 32(%rsp)
	jmp	.LBB1_14
.Ltmp52:
	.p2align	4, 0x90
.LBB1_15:
	.loc	3 110 23 is_stmt 1
	leaq	288(%rsp), %rdi
	movq	%rbx, %rsi
	movq	%r12, %rdx
	callq	strconv.Atoi
	movq	288(%rsp), %rbx
.Ltmp53:
	.loc	3 111 47
	cmpq	32(%rsp), %rbx
	jl	.LBB1_18
.Ltmp54:
	.loc	3 0 47 is_stmt 0
	cmpq	$15, %rbx
	jl	.LBB1_18
.Ltmp55:
	movq	296(%rsp), %rax
.Ltmp56:
	testq	%rax, %rax
	jne	.LBB1_18
.Ltmp57:
	.loc	3 115 17 is_stmt 1
	movq	72(%rsp), %rax
.Ltmp58:
	movq	%rax, 192(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 200(%rsp)
	movq	%rbp, 208(%rsp)
	movq	%r13, 216(%rsp)
	leaq	192(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$2, 120(%rsp)
	movq	$2, 128(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, %rbp
.Ltmp59:
	movq	%rdx, %r12
.Ltmp60:
	.loc	3 116 26
	movq	%rax, 256(%rsp)
	movq	%rdx, 264(%rsp)
	movups	.Lconst.29(%rip), %xmm0
	leaq	272(%rsp), %rax
	movups	%xmm0, (%rax)
	leaq	256(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$2, 144(%rsp)
	movq	$2, 152(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	.loc	3 116 7 is_stmt 0
	movq	80(%rsp), %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.IsFile
	.loc	3 116 6
	testb	%al, %al
	je	.LBB1_18
.Ltmp61:
	.loc	3 0 6
	movq	%rbx, 32(%rsp)
	movq	%rbp, 48(%rsp)
	movq	%r12, 56(%rsp)
	jmp	.LBB1_18
.Ltmp62:
	.p2align	4, 0x90
.LBB1_14:
	.loc	3 104 2 is_stmt 1
	movq	-8(%r14), %rbp
.Ltmp63:
	movq	(%r14), %r13
.Ltmp64:
	.loc	3 105 21
	movl	$.Lconst.26, %edx
	movl	$8, %ecx
	movq	%rbp, %rdi
	movq	%r13, %rsi
	callq	strings.TrimPrefix
	movq	%rax, %rbx
.Ltmp65:
	movq	%rdx, %r12
.Ltmp66:
	.loc	3 106 8
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	%rax, %rdx
	movq	%r12, %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB1_15
.Ltmp67:
.LBB1_18:
	.loc	3 104 2
	addq	$16, %r14
	addq	$-1, %r15
	jne	.LBB1_14
.Ltmp68:
	.loc	3 124 12
	cmpq	$0, 32(%rsp)
	je	.LBB1_20
.Ltmp69:
	.loc	3 0 12 is_stmt 0
	movq	40(%rsp), %rax
	.loc	3 127 2 is_stmt 1
	movq	48(%rsp), %rcx
	movq	%rcx, (%rax)
	movq	56(%rsp), %rcx
	movq	%rcx, 8(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rax)
	jmp	.LBB1_5
.Ltmp70:
.LBB1_20:
	.loc	3 125 18
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.30, %edi
	movl	$155, %esi
	callq	fmt.Errorf
.Ltmp71:
	.loc	3 0 18 is_stmt 0
	movq	40(%rsp), %rcx
	.loc	3 125 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rcx)
	movq	%rax, 16(%rcx)
	movq	%rdx, 24(%rcx)
	movq	%rcx, %rax
	jmp	.LBB1_5
.Ltmp72:
.Lfunc_end1:
	.size	command_line_arguments.AndroidPlatformPath, .Lfunc_end1-command_line_arguments.AndroidPlatformPath
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI2_0:
	.zero	16
	.section	.text.command_line_arguments.NDKPath,"ax",@progbits
	.globl	command_line_arguments.NDKPath
	.p2align	4, 0x90
	.type	command_line_arguments.NDKPath,@function
command_line_arguments.NDKPath:
.Lfunc_begin2:
	.loc	3 130 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB2_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB2_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$120, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
.Ltmp73:
	leaq	56(%rsp), %rdi
.Ltmp74:
	.loc	3 131 15 prologue_end
	callq	command_line_arguments.AndroidSDKPath
	movq	72(%rsp), %rax
.Ltmp75:
	.loc	3 132 9
	testq	%rax, %rax
	je	.LBB2_4
.Ltmp76:
	.loc	3 131 15
	movq	80(%rsp), %rcx
.Ltmp77:
	.loc	3 133 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rcx, 24(%rbx)
	jmp	.LBB2_7
.Ltmp78:
.LBB2_4:
	.loc	3 131 15
	movups	56(%rsp), %xmm0
	.loc	3 136 18
	movups	%xmm0, 88(%rsp)
	movups	.Lconst.33(%rip), %xmm0
	movups	%xmm0, 104(%rsp)
	leaq	88(%rsp), %rax
.Ltmp79:
	movq	%rax, 32(%rsp)
	movq	$2, 40(%rsp)
	movq	$2, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, %r15
.Ltmp80:
	movq	%rdx, %r12
.Ltmp81:
	.loc	3 137 6
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.IsDir
	.loc	3 137 5 is_stmt 0
	testb	%al, %al
	je	.LBB2_5
.Ltmp82:
	.loc	3 140 2 is_stmt 1
	movq	%r15, (%rbx)
	movq	%r12, 8(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rbx)
	jmp	.LBB2_7
.Ltmp83:
.LBB2_5:
	.loc	3 138 18
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.34, %edi
	movl	$100, %esi
	callq	fmt.Errorf
.Ltmp84:
	.loc	3 138 3 is_stmt 0
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	%rax, 16(%rbx)
	movq	%rdx, 24(%rbx)
.Ltmp85:
.LBB2_7:
	.loc	3 0 3
	movq	%rbx, %rax
	addq	$120, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp86:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end2:
	.size	command_line_arguments.NDKPath, .Lfunc_end2-command_line_arguments.NDKPath
	.cfi_endproc

	.section	.text.command_line_arguments.LookPath,"ax",@progbits
	.globl	command_line_arguments.LookPath
	.p2align	4, 0x90
	.type	command_line_arguments.LookPath,@function
command_line_arguments.LookPath:
.Lfunc_begin3:
	.file	6 "./commands.go"
	.loc	6 245 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB3_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB3_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$112, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp87:
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r12
.Ltmp88:
	.loc	6 246 6 prologue_end
	movq	%rsi, %rdi
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 246 2 is_stmt 0
	testb	$1, %al
	je	.LBB3_5
.Ltmp89:
	.loc	6 247 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%r15, 64(%rsp)
	movq	%r14, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 48(%rsp)
	movq	%r13, 56(%rsp)
	.loc	6 247 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB3_9
.Ltmp90:
	movq	(%rbx), %rdi
	leaq	48(%rsp), %rax
	.loc	6 247 11
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.485, %esi
	movl	$9, %edx
	callq	log.Logger.Printf
.Ltmp91:
.LBB3_5:
	.loc	6 249 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 249 2 is_stmt 0
	testb	$1, %al
	jne	.LBB3_6
.Ltmp92:
	.loc	6 252 2 is_stmt 1
	movq	%r15, (%r12)
	movq	%r14, 8(%r12)
	xorps	%xmm0, %xmm0
	jmp	.LBB3_8
.Ltmp93:
.LBB3_6:
	.loc	6 0 2 is_stmt 0
	leaq	80(%rsp), %rdi
	.loc	6 250 15 is_stmt 1
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	os_exec.LookPath
	movups	80(%rsp), %xmm0
	.loc	6 250 3 is_stmt 0
	movups	%xmm0, (%r12)
	movups	96(%rsp), %xmm0
.Ltmp94:
.LBB3_8:
	.loc	6 0 3
	movups	%xmm0, 16(%r12)
	movq	%r12, %rax
	addq	$112, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp95:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp96:
	.cfi_def_cfa_offset 8
	retq
.LBB3_9:
	.cfi_def_cfa_offset 160
.Ltmp97:
	.loc	6 247 4 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp98:
.Lfunc_end3:
	.size	command_line_arguments.LookPath, .Lfunc_end3-command_line_arguments.LookPath
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI4_0:
	.zero	16
	.section	.text.command_line_arguments.AndroidSDKPath,"ax",@progbits
	.globl	command_line_arguments.AndroidSDKPath
	.p2align	4, 0x90
	.type	command_line_arguments.AndroidSDKPath,@function
command_line_arguments.AndroidSDKPath:
.Lfunc_begin4:
	.loc	3 68 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB4_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB4_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$104, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %r14
.Ltmp99:
	.loc	3 69 10 prologue_end
	movl	$.Lconst.12, %esi
	movl	$12, %edx
	movq	%r15, %rdi
	callq	command_line_arguments.GetEnv
	movq	%rax, %rbx
.Ltmp100:
	movq	%rdx, %r12
.Ltmp101:
	.loc	3 70 10
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	movq	%r12, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB4_5
.Ltmp102:
	.loc	3 71 25
	movups	.Lconst.16(%rip), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$.Lconst.182, 48(%rsp)
	movq	$51, 56(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	48(%rsp), %xmm1
	jmp	.LBB4_4
.Ltmp103:
.LBB4_5:
	.loc	3 74 6
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rdx
	callq	command_line_arguments.IsDir
	.loc	3 74 5 is_stmt 0
	testb	%al, %al
	je	.LBB4_6
.Ltmp104:
	.loc	3 77 2 is_stmt 1
	movq	%rbx, (%r14)
	movq	%r12, 8(%r14)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r14)
	jmp	.LBB4_8
.Ltmp105:
.LBB4_6:
	.loc	3 75 25
	movups	.Lconst.18(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	$.Lconst.182, 80(%rsp)
	movq	$51, 88(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	80(%rsp), %xmm1
.Ltmp106:
.LBB4_4:
	.loc	3 0 25 is_stmt 0
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	fmt.Errorf
.Ltmp107:
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	%rax, 16(%r14)
	movq	%rdx, 24(%r14)
.Ltmp108:
.LBB4_8:
	movq	%r14, %rax
	addq	$104, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp109:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp110:
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end4:
	.size	command_line_arguments.AndroidSDKPath, .Lfunc_end4-command_line_arguments.AndroidSDKPath
	.cfi_endproc

	.section	.text.command_line_arguments.GetEnv,"ax",@progbits
	.globl	command_line_arguments.GetEnv
	.p2align	4, 0x90
	.type	command_line_arguments.GetEnv,@function
command_line_arguments.GetEnv:
.Lfunc_begin5:
	.loc	6 255 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB5_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB5_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$136, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp111:
	.loc	6 256 6 prologue_end
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 256 2 is_stmt 0
	testb	$1, %al
	je	.LBB5_5
.Ltmp112:
	.loc	6 257 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 80(%rsp)
	movq	%r14, 88(%rsp)
	leaq	80(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 64(%rsp)
	movq	%r12, 72(%rsp)
	.loc	6 257 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB5_9
.Ltmp113:
	movq	(%rbx), %rdi
	leaq	64(%rsp), %rax
	.loc	6 257 11
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.487, %esi
	movl	$12, %edx
	callq	log.Logger.Printf
.Ltmp114:
.LBB5_5:
	.loc	6 259 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 259 2 is_stmt 0
	testb	$1, %al
	jne	.LBB5_6
.Ltmp115:
	.loc	6 262 10 is_stmt 1
	movups	.Lconst.490(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	%r15, 112(%rsp)
	movq	%r14, 120(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	112(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	jmp	.LBB5_7
.Ltmp116:
.LBB5_6:
	.loc	6 260 13
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	os.Getenv
.Ltmp117:
.LBB5_7:
	.loc	6 0 13 is_stmt 0
	addq	$136, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp118:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp119:
	.cfi_def_cfa_offset 8
	retq
.LBB5_9:
	.cfi_def_cfa_offset 176
.Ltmp120:
	.loc	6 257 4 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp121:
.Lfunc_end5:
	.size	command_line_arguments.GetEnv, .Lfunc_end5-command_line_arguments.GetEnv
	.cfi_endproc

	.section	.text.command_line_arguments.IsDir,"ax",@progbits
	.globl	command_line_arguments.IsDir
	.p2align	4, 0x90
	.type	command_line_arguments.IsDir,@function
command_line_arguments.IsDir:
.Lfunc_begin6:
	.loc	6 293 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB6_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB6_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$120, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp122:
	.loc	6 294 6 prologue_end
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 294 2 is_stmt 0
	testb	$1, %al
	je	.LBB6_5
.Ltmp123:
	.loc	6 295 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 72(%rsp)
	movq	%r14, 80(%rsp)
	leaq	72(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 56(%rsp)
	movq	%r12, 64(%rsp)
	.loc	6 295 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB6_10
.Ltmp124:
	movq	(%rbx), %rdi
	leaq	56(%rsp), %rax
	.loc	6 295 11
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.496, %esi
	movl	$11, %edx
	callq	log.Logger.Printf
.Ltmp125:
.LBB6_5:
	.loc	6 297 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	movl	%eax, %ecx
	movb	$1, %al
	.loc	6 297 2 is_stmt 0
	testb	$1, %cl
	je	.LBB6_8
.Ltmp126:
	.loc	6 0 2
	leaq	88(%rsp), %rdi
.Ltmp127:
	.loc	6 298 20 is_stmt 1
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	os.Stat
	.loc	6 298 36 is_stmt 0
	cmpq	$0, 104(%rsp)
	je	.LBB6_9
.Ltmp128:
	.loc	6 0 36
	xorl	%eax, %eax
	jmp	.LBB6_8
.Ltmp129:
.LBB6_9:
	.loc	6 298 20
	movq	88(%rsp), %rax
.Ltmp130:
	movq	96(%rsp), %rdi
.Ltmp131:
	.loc	6 298 49
	callq	*8(%rax)
.Ltmp132:
	.loc	6 298 46
	testb	%al, %al
	setne	%al
.Ltmp133:
.LBB6_8:
	.loc	6 302 2 is_stmt 1
	addq	$120, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp134:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp135:
	.cfi_def_cfa_offset 8
	retq
.LBB6_10:
	.cfi_def_cfa_offset 160
.Ltmp136:
	.loc	6 295 4
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp137:
.Lfunc_end6:
	.size	command_line_arguments.IsDir, .Lfunc_end6-command_line_arguments.IsDir
	.cfi_endproc

	.section	.text.command_line_arguments.ReadDirNames,"ax",@progbits
	.globl	command_line_arguments.ReadDirNames
	.p2align	4, 0x90
	.type	command_line_arguments.ReadDirNames,@function
command_line_arguments.ReadDirNames:
.Lfunc_begin7:
	.loc	6 265 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception0
	cmpq	%fs:112, %rsp
	ja	.LBB7_2
	movq	%r10, %rax
	movabsq	$232, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB7_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$184, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r12
	movb	$0, 31(%rsp)
.Ltmp138:
.Ltmp167:
	.loc	6 266 6 prologue_end
	movq	%rsi, %rdi
	callq	command_line_arguments.Flags.ShouldPrint
.Ltmp139:
.Ltmp168:
	.loc	6 266 2 is_stmt 0
	testb	$1, %al
	je	.LBB7_9
.Ltmp169:
.Ltmp140:
	.loc	6 267 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp141:
.Ltmp170:
	.loc	6 0 11 is_stmt 0
	movq	%rax, %r13
	movq	%r15, 104(%rsp)
	movq	%r14, 112(%rsp)
.Ltmp142:
	leaq	104(%rsp), %rdx
	.loc	6 267 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp143:
.Ltmp171:
	movq	$string..d, 88(%rsp)
	movq	%r13, 96(%rsp)
	.loc	6 267 4
	testq	%rbx, %rbx
	jne	.LBB7_8
.Ltmp172:
.Ltmp144:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp145:
.Ltmp173:
.LBB7_8:
	movq	(%rbx), %rdi
	leaq	88(%rsp), %rax
	.loc	6 267 11
	movq	%rax, 64(%rsp)
	movq	$1, 72(%rsp)
	movq	$1, 80(%rsp)
.Ltmp146:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.491, %esi
	movl	$6, %edx
	callq	log.Logger.Printf
.Ltmp147:
.Ltmp174:
.LBB7_9:
.Ltmp148:
	.loc	6 269 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
.Ltmp149:
.Ltmp175:
	.loc	6 269 2 is_stmt 0
	testb	$1, %al
	jne	.LBB7_11
.Ltmp176:
.Ltmp158:
	.loc	6 278 9 is_stmt 1
	movl	$type...60x.7string, %edi
	callq	runtime.newobject
.Ltmp159:
.Ltmp177:
	.loc	6 0 9 is_stmt 0
	movq	%rax, 40(%rsp)
	movb	$1, %r15b
.Ltmp178:
	xorl	%r13d, %r13d
.Ltmp179:
	xorl	%eax, %eax
	movq	%rax, 32(%rsp)
	jmp	.LBB7_17
.Ltmp180:
.LBB7_11:
.Ltmp150:
	leaq	120(%rsp), %rdi
.Ltmp181:
	.loc	6 270 19 is_stmt 1
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	os.Open
.Ltmp151:
.Ltmp182:
	movq	128(%rsp), %r13
.Ltmp183:
	.loc	6 271 10
	testq	%r13, %r13
	je	.LBB7_19
.Ltmp184:
	.loc	6 0 10 is_stmt 0
	movq	136(%rsp), %rbx
.Ltmp185:
.Ltmp152:
	.loc	6 272 11 is_stmt 1
	movl	$type...60x.7string, %edi
	callq	runtime.newobject
.Ltmp153:
.Ltmp186:
	.loc	6 0 11 is_stmt 0
	movq	%rbx, 32(%rsp)
.Ltmp187:
	movq	%rax, 40(%rsp)
	movb	$1, %r15b
.Ltmp188:
.LBB7_17:
	xorl	%r14d, %r14d
.Ltmp189:
	xorl	%ebp, %ebp
.Ltmp190:
	leaq	31(%rsp), %rbx
	jmp	.LBB7_27
.Ltmp191:
.LBB7_19:
	movq	120(%rsp), %rbx
.Ltmp192:
	.loc	6 274 3 is_stmt 1
	movq	%rbx, 56(%rsp)
.Ltmp154:
	leaq	31(%rsp), %rdi
	leaq	56(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk9, %esi
	callq	runtime.deferproc
.Ltmp155:
.Ltmp193:
.Ltmp156:
	.loc	6 0 3 is_stmt 0
	leaq	144(%rsp), %rdi
	.loc	6 276 14 is_stmt 1
	movq	$-1, %rdx
	movq	%rbx, %rsi
	callq	os.File.Readdirnames
.Ltmp157:
.Ltmp194:
	movq	144(%rsp), %rax
.Ltmp195:
	movq	%rax, 40(%rsp)
	movq	152(%rsp), %r14
.Ltmp196:
	movq	160(%rsp), %rbp
.Ltmp197:
	movq	168(%rsp), %r13
.Ltmp198:
	.loc	6 0 14 is_stmt 0
	movb	$1, %r15b
.Ltmp199:
	.loc	6 276 14
	movq	176(%rsp), %rax
.Ltmp200:
	.loc	6 0 14
	movq	%rax, 32(%rsp)
.Ltmp201:
	leaq	31(%rsp), %rbx
.Ltmp202:
	jmp	.LBB7_27
.Ltmp203:
.LBB7_15:
.Ltmp160:
.Ltmp161:
	leaq	31(%rsp), %rdi
	.loc	6 279 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp162:
.Ltmp204:
	.loc	6 0 1 is_stmt 0
	movb	$1, %r15b
.Ltmp205:
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	movq	%rax, 32(%rsp)
	xorl	%eax, %eax
	movq	%rax, 40(%rsp)
	jmp	.LBB7_17
.LBB7_24:
.Ltmp206:
.Ltmp163:
	movq	%rax, 48(%rsp)
	xorl	%r13d, %r13d
	xorl	%eax, %eax
	movq	%rax, 32(%rsp)
	xorl	%eax, %eax
	movq	%rax, 40(%rsp)
	xorl	%r14d, %r14d
	xorl	%ebp, %ebp
	xorl	%r15d, %r15d
.Ltmp207:
	leaq	31(%rsp), %rbx
	jmp	.LBB7_27
.Ltmp208:
.LBB7_26:
.Ltmp166:
	.loc	6 279 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp209:
	.p2align	4, 0x90
.LBB7_27:
.Ltmp164:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp165:
.Ltmp210:
	.loc	6 0 1
	testb	%r15b, %r15b
	je	.LBB7_30
.Ltmp211:
	.loc	6 272 4 is_stmt 1
	movq	40(%rsp), %rax
	movq	%rax, (%r12)
	movq	%r14, 8(%r12)
	movq	%rbp, 16(%r12)
	movq	%r13, 24(%r12)
	movq	32(%rsp), %rax
	movq	%rax, 32(%r12)
	movq	%r12, %rax
	addq	$184, %rsp
.Ltmp212:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp213:
.LBB7_30:
	.cfi_def_cfa_offset 240
	.loc	6 0 4 is_stmt 0
	movq	48(%rsp), %rdi
	callq	_Unwind_Resume
.Lfunc_end7:
	.size	command_line_arguments.ReadDirNames, .Lfunc_end7-command_line_arguments.ReadDirNames
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table7:
.Lexception0:
	.byte	255
	.byte	3
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7
	.uleb128 .Ltmp138-.Lfunc_begin7
	.byte	0
	.byte	0
	.uleb128 .Ltmp138-.Lfunc_begin7
	.uleb128 .Ltmp157-.Ltmp138
	.uleb128 .Ltmp160-.Lfunc_begin7
	.byte	1
	.uleb128 .Ltmp161-.Lfunc_begin7
	.uleb128 .Ltmp162-.Ltmp161
	.uleb128 .Ltmp163-.Lfunc_begin7
	.byte	0
	.uleb128 .Ltmp162-.Lfunc_begin7
	.uleb128 .Ltmp164-.Ltmp162
	.byte	0
	.byte	0
	.uleb128 .Ltmp164-.Lfunc_begin7
	.uleb128 .Ltmp165-.Ltmp164
	.uleb128 .Ltmp166-.Lfunc_begin7
	.byte	1
	.uleb128 .Ltmp165-.Lfunc_begin7
	.uleb128 .Lfunc_end7-.Ltmp165
	.byte	0
	.byte	0
.Lcst_end0:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase0:
	.p2align	2

	.section	.text.command_line_arguments.Flags.ShouldRun,"ax",@progbits
	.globl	command_line_arguments.Flags.ShouldRun
	.p2align	4, 0x90
	.type	command_line_arguments.Flags.ShouldRun,@function
command_line_arguments.Flags.ShouldRun:
.Lfunc_begin8:
	.loc	5 42 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB8_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB8_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp214:
	.loc	5 43 11 prologue_end
	testq	%rdi, %rdi
	je	.LBB8_4
.Ltmp215:
	.loc	5 43 9 is_stmt 0
	cmpb	$0, 10(%rdi)
	sete	%al
.Ltmp216:
	.loc	5 43 2
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp217:
.LBB8_4:
	.cfi_def_cfa_offset 16
	.loc	5 43 11
	movl	$6, %edi
.Ltmp218:
	callq	__go_runtime_error
.Ltmp219:
.Lfunc_end8:
	.size	command_line_arguments.Flags.ShouldRun, .Lfunc_end8-command_line_arguments.Flags.ShouldRun
	.cfi_endproc

	.section	.text.command_line_arguments.IsFile,"ax",@progbits
	.globl	command_line_arguments.IsFile
	.p2align	4, 0x90
	.type	command_line_arguments.IsFile,@function
command_line_arguments.IsFile:
.Lfunc_begin9:
	.loc	6 281 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB9_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB9_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$120, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp220:
	.loc	6 282 6 prologue_end
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 282 2 is_stmt 0
	testb	$1, %al
	je	.LBB9_5
.Ltmp221:
	.loc	6 283 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 72(%rsp)
	movq	%r14, 80(%rsp)
	leaq	72(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 56(%rsp)
	movq	%r12, 64(%rsp)
	.loc	6 283 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB9_10
.Ltmp222:
	movq	(%rbx), %rdi
	leaq	56(%rsp), %rax
	.loc	6 283 11
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.493, %esi
	movl	$11, %edx
	callq	log.Logger.Printf
.Ltmp223:
.LBB9_5:
	.loc	6 285 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	movl	%eax, %ecx
	movb	$1, %al
	.loc	6 285 2 is_stmt 0
	testb	$1, %cl
	je	.LBB9_8
.Ltmp224:
	.loc	6 0 2
	leaq	88(%rsp), %rdi
.Ltmp225:
	.loc	6 286 20 is_stmt 1
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	os.Stat
	.loc	6 286 36 is_stmt 0
	cmpq	$0, 104(%rsp)
	je	.LBB9_9
.Ltmp226:
	.loc	6 0 36
	xorl	%eax, %eax
	jmp	.LBB9_8
.Ltmp227:
.LBB9_9:
	.loc	6 286 20
	movq	88(%rsp), %rax
.Ltmp228:
	movq	96(%rsp), %rdi
.Ltmp229:
	.loc	6 286 48
	callq	*8(%rax)
.Ltmp230:
	notb	%al
	andb	$1, %al
.Ltmp231:
.LBB9_8:
	.loc	6 290 2 is_stmt 1
	addq	$120, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp232:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp233:
	.cfi_def_cfa_offset 8
	retq
.LBB9_10:
	.cfi_def_cfa_offset 160
.Ltmp234:
	.loc	6 283 4
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp235:
.Lfunc_end9:
	.size	command_line_arguments.IsFile, .Lfunc_end9-command_line_arguments.IsFile
	.cfi_endproc

	.section	.text.command_line_arguments.AndroidEnv,"ax",@progbits
	.globl	command_line_arguments.AndroidEnv
	.p2align	4, 0x90
	.type	command_line_arguments.AndroidEnv,@function
command_line_arguments.AndroidEnv:
.Lfunc_begin10:
	.loc	3 143 0
	.cfi_startproc
	leaq	-1736(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB10_2
	movq	%r10, %rax
	movabsq	$1736, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB10_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1688, %rsp
	.cfi_def_cfa_offset 1744
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp236:
	movq	%rcx, %r14
	movq	%rdx, %r13
	movq	%rsi, 40(%rsp)
	movq	%rdi, 80(%rsp)
.Ltmp237:
	.loc	3 185 10 prologue_end
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movaps	.Lconst.90(%rip), %xmm0
	movaps	%xmm0, 1568(%rsp)
	movaps	.Lconst.90+16(%rip), %xmm0
	movaps	%xmm0, 1584(%rsp)
	movaps	.Lconst.90+32(%rip), %xmm0
	movaps	%xmm0, 1600(%rsp)
	movaps	.Lconst.90+48(%rip), %xmm0
	movaps	%xmm0, 1616(%rsp)
	movaps	.Lconst.90+64(%rip), %xmm0
	movaps	%xmm0, 1632(%rsp)
	movaps	.Lconst.90+80(%rip), %xmm0
	movaps	%xmm0, 1648(%rsp)
	movaps	.Lconst.90+96(%rip), %xmm0
	movaps	%xmm0, 1664(%rsp)
	leaq	1568(%rsp), %rdx
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	3 192 12
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movaps	.Lconst.96(%rip), %xmm0
	movaps	%xmm0, 1456(%rsp)
	movaps	.Lconst.96+16(%rip), %xmm0
	movaps	%xmm0, 1472(%rsp)
	movaps	.Lconst.96+32(%rip), %xmm0
	movaps	%xmm0, 1488(%rsp)
	movaps	.Lconst.96+48(%rip), %xmm0
	movaps	%xmm0, 1504(%rsp)
	movaps	.Lconst.96+64(%rip), %xmm0
	movaps	%xmm0, 1520(%rsp)
	movaps	.Lconst.96+80(%rip), %xmm0
	movaps	%xmm0, 1536(%rsp)
	movaps	.Lconst.96+96(%rip), %xmm0
	movaps	%xmm0, 1552(%rsp)
	leaq	1456(%rsp), %rdx
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	3 199 10
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movaps	.Lconst.102(%rip), %xmm0
	movaps	%xmm0, 1344(%rsp)
	movaps	.Lconst.102+16(%rip), %xmm0
	movaps	%xmm0, 1360(%rsp)
	movaps	.Lconst.102+32(%rip), %xmm0
	movaps	%xmm0, 1376(%rsp)
	movaps	.Lconst.102+48(%rip), %xmm0
	movaps	%xmm0, 1392(%rsp)
	movaps	.Lconst.102+64(%rip), %xmm0
	movaps	%xmm0, 1408(%rsp)
	movaps	.Lconst.102+80(%rip), %xmm0
	movaps	%xmm0, 1424(%rsp)
	movaps	.Lconst.102+96(%rip), %xmm0
	movaps	%xmm0, 1440(%rsp)
	leaq	1344(%rsp), %rdx
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	3 206 12
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	.Lconst.108(%rip), %xmm0
	movaps	%xmm0, 1232(%rsp)
	movaps	.Lconst.108+16(%rip), %xmm0
	movaps	%xmm0, 1248(%rsp)
	movaps	.Lconst.108+32(%rip), %xmm0
	movaps	%xmm0, 1264(%rsp)
	movaps	.Lconst.108+48(%rip), %xmm0
	movaps	%xmm0, 1280(%rsp)
	movaps	.Lconst.108+64(%rip), %xmm0
	movaps	%xmm0, 1296(%rsp)
	movaps	.Lconst.108+80(%rip), %xmm0
	movaps	%xmm0, 1312(%rsp)
	movaps	.Lconst.108+96(%rip), %xmm0
	movaps	%xmm0, 1328(%rsp)
	leaq	1232(%rsp), %rdx
	movl	$command_line_arguments..command_line_arguments.ndkToolchain..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	3 184 7
	movups	.Lconst.65(%rip), %xmm0
	movaps	%xmm0, 1136(%rsp)
	movq	%r15, 1152(%rsp)
.Ltmp238:
	movups	.Lconst.109(%rip), %xmm0
	movups	%xmm0, 1160(%rsp)
	movq	%r12, 1176(%rsp)
	movups	.Lconst.110(%rip), %xmm0
	movaps	%xmm0, 1184(%rsp)
	movq	%rbp, 1200(%rsp)
	movups	.Lconst.111(%rip), %xmm0
	movups	%xmm0, 1208(%rsp)
	movq	%rbx, 1224(%rsp)
	leaq	1136(%rsp), %r8
	movl	$type..map.6string.7.1command_line_arguments.ndkToolchain, %edi
	movl	$4, %esi
	movl	$24, %edx
	movl	$16, %ecx
	callq	__go_construct_map
.Ltmp239:
	.loc	3 0 7 is_stmt 0
	movq	%r13, 488(%rsp)
	movq	%r14, 496(%rsp)
	leaq	488(%rsp), %rdx
	.loc	3 214 2 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.ndkToolchain, %edi
	movq	%rax, %rsi
	callq	runtime.mapaccess2
.Ltmp240:
	.loc	3 215 5
	testb	%dl, %dl
	je	.LBB10_3
.Ltmp241:
	.loc	3 0 5 is_stmt 0
	movq	(%rax), %rbp
.Ltmp242:
	leaq	976(%rsp), %rdi
.Ltmp243:
	.loc	3 219 18 is_stmt 1
	movq	40(%rsp), %rsi
	callq	command_line_arguments.NDKPath
.Ltmp244:
	movq	992(%rsp), %rax
.Ltmp245:
	movq	1000(%rsp), %rdx
.Ltmp246:
	.loc	3 0 18 is_stmt 0
	movups	976(%rsp), %xmm0
	movaps	%xmm0, 336(%rsp)
	.loc	3 220 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB10_4
.Ltmp247:
	.loc	3 223 11
	testq	%rbp, %rbp
	je	.LBB10_31
.Ltmp248:
	leaq	80(%rbp), %rsi
	.loc	3 223 20 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB10_15
.Ltmp249:
	.loc	3 0 20
	leaq	336(%rsp), %rdx
.Ltmp250:
	.loc	3 223 20
	movl	$string..d, %edi
	callq	runtime.typedmemmove
.Ltmp251:
	.loc	3 0 20
	jmp	.LBB10_10
.Ltmp252:
.LBB10_3:
	.loc	3 216 19 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp253:
	movq	%rax, %rbx
	movq	%r13, 472(%rsp)
	movq	%r14, 480(%rsp)
	leaq	472(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 456(%rsp)
	movq	%rbx, 464(%rsp)
	leaq	456(%rsp), %rax
	movq	%rax, 272(%rsp)
	movq	$1, 280(%rsp)
	movq	$1, 288(%rsp)
	movq	288(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	272(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.144, %edi
	movl	$35, %esi
	callq	fmt.Errorf
.Ltmp254:
.LBB10_4:
	.loc	3 145 9
	testq	%rax, %rax
	je	.LBB10_19
.Ltmp255:
.LBB10_5:
	.loc	3 146 3
	xorps	%xmm0, %xmm0
	movq	80(%rsp), %rcx
	movups	%xmm0, (%rcx)
	movq	$0, 16(%rcx)
	movq	%rax, 24(%rcx)
	movq	%rdx, 32(%rcx)
	movq	%rcx, %rax
.Ltmp256:
.LBB10_24:
	.loc	3 0 3 is_stmt 0
	addq	$1688, %rsp
.Ltmp257:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB10_15:
	.cfi_def_cfa_offset 1744
.Ltmp258:
	.loc	3 223 20 is_stmt 1
	movaps	336(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp259:
.LBB10_10:
	.loc	3 0 20 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 144(%rsp)
.Ltmp260:
	.loc	3 277 3 is_stmt 1
	movl	$.Lconst.103, %edi
	movl	$5, %esi
	movl	$.Lconst.97, %edx
	movl	$3, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB10_13
.Ltmp261:
	.loc	3 278 9
	movups	.Lconst.170(%rip), %xmm0
	jmp	.LBB10_12
.Ltmp262:
.LBB10_13:
	.loc	3 279 3
	movl	$.Lconst.103, %edi
	movl	$5, %esi
	movl	$.Lconst.103, %edx
	movl	$5, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB10_16
.Ltmp263:
	.loc	3 280 9
	movups	.Lconst.171(%rip), %xmm0
.Ltmp264:
.LBB10_12:
	.loc	3 0 9 is_stmt 0
	movaps	%xmm0, 144(%rsp)
	.loc	3 284 23 is_stmt 1
	movups	.Lconst.177(%rip), %xmm0
	movaps	%xmm0, 944(%rsp)
	movaps	144(%rsp), %xmm0
	movaps	%xmm0, 960(%rsp)
	movaps	944(%rsp), %xmm0
	movaps	960(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp265:
	.loc	3 0 23 is_stmt 0
	movq	%rax, 128(%rsp)
	movq	%rdx, 136(%rsp)
.Ltmp266:
.LBB10_17:
	.loc	3 229 11 is_stmt 1
	leaq	96(%rbp), %rsi
	.loc	3 229 20 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	movq	%r14, 120(%rsp)
	movq	%r13, 112(%rsp)
.Ltmp267:
	.loc	3 0 20
	je	.LBB10_20
.Ltmp268:
	leaq	128(%rsp), %rdx
	.loc	3 229 20
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB10_21
.Ltmp269:
.LBB10_20:
	movaps	128(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp270:
.LBB10_21:
	.loc	3 148 73 is_stmt 1
	movq	%rbp, %rdi
	callq	command_line_arguments.ndkToolchain.gccToolchain
	movq	%rax, %r14
	movq	%rbp, %r12
	movq	%rdx, %r15
	movups	64(%rbp), %xmm0
	movaps	%xmm0, 912(%rsp)
	.loc	3 148 15 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	912(%rsp), %xmm0
	movaps	%xmm0, 896(%rsp)
	leaq	896(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp271:
	.loc	3 0 15
	movq	%r14, 440(%rsp)
	movq	%r15, 448(%rsp)
	leaq	440(%rsp), %rdx
	.loc	3 148 15
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 768(%rsp)
	movq	%rbx, 776(%rsp)
	movq	$string..d, 784(%rsp)
	movq	%rbp, 792(%rsp)
	leaq	768(%rsp), %rax
	movq	%rax, 200(%rsp)
	movq	$2, 208(%rsp)
	movq	$2, 216(%rsp)
	movq	216(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	200(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.38, %edi
	movl	$28, %esi
	callq	fmt.Sprintf
	movq	%rax, %rbp
.Ltmp272:
	movq	%rax, 72(%rsp)
	movq	%rdx, %r13
.Ltmp273:
	.loc	3 149 85 is_stmt 1
	movq	%rdx, 64(%rsp)
	movq	%r12, %rbx
	movq	%r12, 56(%rsp)
	movq	%r12, %rdi
	callq	command_line_arguments.ndkToolchain.csysroot
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	3 149 100 is_stmt 0
	movq	%r12, %rdi
	callq	command_line_arguments.ndkToolchain.isystem
	movq	%rax, 40(%rsp)
	movq	%rdx, 48(%rsp)
	movups	16(%r12), %xmm0
	movaps	%xmm0, 880(%rsp)
	.loc	3 149 16
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%rbp, 424(%rsp)
.Ltmp274:
	.loc	3 0 16
	movq	%r13, 432(%rsp)
.Ltmp275:
	leaq	424(%rsp), %rdx
	.loc	3 149 16
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%r14, 408(%rsp)
	movq	%r15, 416(%rsp)
	leaq	408(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	40(%rsp), %rax
	movq	%rax, 392(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 400(%rsp)
	leaq	392(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movaps	880(%rsp), %xmm0
	movaps	%xmm0, 864(%rsp)
	leaq	864(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 800(%rsp)
	movq	%r12, 808(%rsp)
	movq	$string..d, 816(%rsp)
	movq	%r13, 824(%rsp)
	movq	$string..d, 832(%rsp)
	movq	%rbx, 840(%rsp)
	movq	$string..d, 848(%rsp)
	movq	%rbp, 856(%rsp)
	leaq	800(%rsp), %rax
	movq	%rax, 224(%rsp)
	movq	$4, 232(%rsp)
	movq	$4, 240(%rsp)
	movq	240(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	224(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.40, %edi
	movl	$48, %esi
	callq	fmt.Sprintf
	movq	%rax, %r13
.Ltmp276:
	movq	%rdx, 40(%rsp)
.Ltmp277:
	.loc	3 0 16
	movq	56(%rsp), %r12
	.loc	3 150 53 is_stmt 1
	movq	%r12, %rdi
	callq	command_line_arguments.ndkToolchain.ldsysroot
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	3 150 17 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	72(%rsp), %rax
	movq	%rax, 376(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 384(%rsp)
	leaq	376(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r14, 360(%rsp)
	movq	%r15, 368(%rsp)
	leaq	360(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 736(%rsp)
	movq	%rbx, 744(%rsp)
	movq	$string..d, 752(%rsp)
	movq	%rbp, 760(%rsp)
	leaq	736(%rsp), %rax
	movq	%rax, 248(%rsp)
	movq	$2, 256(%rsp)
	movq	$2, 264(%rsp)
	movq	264(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	248(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.42, %edi
	movl	$15, %esi
	callq	fmt.Sprintf
	movq	%rax, 72(%rsp)
.Ltmp278:
	movq	%rdx, 64(%rsp)
.Ltmp279:
	.loc	3 0 17
	movq	%r12, %rbx
	.loc	3 154 13 is_stmt 1
	movq	%r12, %rdi
	callq	command_line_arguments.ndkToolchain.clangPath
	movq	%rax, %r12
	movq	%rdx, %rbp
	.loc	3 155 14
	movq	%rbx, %rdi
	callq	command_line_arguments.ndkToolchain.clangppPath
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	3 153 10
	movups	.Lconst.45(%rip), %xmm0
	movaps	%xmm0, 544(%rsp)
	movq	112(%rsp), %rax
	movq	%rax, 560(%rsp)
	movq	120(%rsp), %rax
	movq	%rax, 568(%rsp)
	movaps	544(%rsp), %xmm0
	movaps	560(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 56(%rsp)
	movq	%rdx, 48(%rsp)
	.loc	3 154 6
	movups	.Lconst.47(%rip), %xmm0
	movaps	%xmm0, 576(%rsp)
	movq	%r12, 592(%rsp)
	movq	%rbp, 600(%rsp)
	movaps	576(%rsp), %xmm0
	movaps	592(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 192(%rsp)
	movq	%rdx, 184(%rsp)
	.loc	3 155 7
	movups	.Lconst.49(%rip), %xmm0
	movaps	%xmm0, 608(%rsp)
	movq	%r14, 624(%rsp)
	movq	%r15, 632(%rsp)
	movaps	608(%rsp), %xmm0
	movaps	624(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 176(%rsp)
	movq	%rdx, 168(%rsp)
	.loc	3 156 14
	movups	.Lconst.51(%rip), %xmm0
	movaps	%xmm0, 640(%rsp)
	movq	%r13, 656(%rsp)
	movq	40(%rsp), %rbx
.Ltmp280:
	movq	%rbx, 664(%rsp)
	movaps	640(%rsp), %xmm0
	movaps	656(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 160(%rsp)
	movq	%rdx, %rbp
	.loc	3 157 16
	movups	.Lconst.53(%rip), %xmm0
	movaps	%xmm0, 672(%rsp)
	movq	%r13, 688(%rsp)
	movq	%rbx, 696(%rsp)
	movaps	672(%rsp), %xmm0
	movaps	688(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %rbx
.Ltmp281:
	movq	%rdx, %r14
	.loc	3 158 15
	movups	.Lconst.55(%rip), %xmm0
	movaps	%xmm0, 704(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 720(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 728(%rsp)
	movaps	704(%rsp), %xmm0
	movaps	720(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %r12
	movq	%rdx, %r13
	.loc	3 151 9
	movl	$type...68x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %r15
.Ltmp282:
	movups	.Lconst.57(%rip), %xmm0
	movaps	%xmm0, 1008(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 1024(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 1032(%rsp)
	movq	192(%rsp), %rax
	movq	%rax, 1040(%rsp)
	movq	184(%rsp), %rax
	movq	%rax, 1048(%rsp)
	movq	176(%rsp), %rax
	movq	%rax, 1056(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 1064(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 1072(%rsp)
	movq	%rbp, 1080(%rsp)
	movq	%rbx, 1088(%rsp)
	movq	%r14, 1096(%rsp)
	movq	%r12, 1104(%rsp)
	movq	%r13, 1112(%rsp)
	movups	.Lconst.59(%rip), %xmm0
	movaps	%xmm0, 1120(%rsp)
	leaq	1008(%rsp), %rdx
	movl	$type...68x.7string, %edi
	movq	%r15, %rsi
	callq	runtime.typedmemmove
.Ltmp283:
	.loc	3 161 12
	movl	$.Lconst.62, %edx
	movl	$3, %ecx
	movq	112(%rsp), %rdi
	movq	120(%rsp), %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB10_22
.Ltmp284:
	.loc	3 0 12 is_stmt 0
	movq	%r15, 88(%rsp)
	movq	$8, 96(%rsp)
	movq	$8, 104(%rsp)
	movups	.Lconst.64(%rip), %xmm0
	movaps	%xmm0, 320(%rsp)
	.loc	3 162 9 is_stmt 1
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	520(%rsp), %rdi
	movl	$string..d, %esi
	movl	$9, %edx
	callq	runtime.growslice
	movq	520(%rsp), %rsi
	movq	528(%rsp), %rax
	movq	536(%rsp), %rcx
	movq	%rsi, 88(%rsp)
	movq	%rax, 96(%rsp)
	movq	%rcx, 104(%rsp)
	cmpq	$9, %rax
	movq	80(%rsp), %rbx
	jl	.LBB10_32
.Ltmp285:
	subq	$-128, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB10_27
.Ltmp286:
	.loc	3 0 9 is_stmt 0
	leaq	320(%rsp), %rdx
	.loc	3 162 9
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB10_30
.Ltmp287:
.LBB10_22:
	.loc	3 0 9
	movl	$8, %eax
	movl	$8, %ecx
	movq	80(%rsp), %rbx
	jmp	.LBB10_23
.Ltmp288:
.LBB10_16:
	.loc	3 282 19 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	.Lconst.111(%rip), %xmm0
	movaps	%xmm0, 928(%rsp)
	leaq	928(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 504(%rsp)
	movq	%rbx, 512(%rsp)
	leaq	504(%rsp), %rax
	movq	%rax, 296(%rsp)
	movq	$1, 304(%rsp)
	movq	$1, 312(%rsp)
	movq	312(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	296(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.174, %edi
	movl	$35, %esi
	callq	fmt.Errorf
.Ltmp289:
	.loc	3 0 19 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
.Ltmp290:
	.loc	3 226 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB10_5
	jmp	.LBB10_17
.Ltmp291:
.LBB10_27:
	.loc	3 162 9
	testq	%rsi, %rsi
	je	.LBB10_31
.Ltmp292:
	movaps	320(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp293:
.LBB10_30:
	.loc	3 162 7 is_stmt 0
	movq	88(%rsp), %r15
.Ltmp294:
	movq	96(%rsp), %rax
.Ltmp295:
	movq	104(%rsp), %rcx
.Ltmp296:
.LBB10_23:
	.loc	3 164 2 is_stmt 1
	movq	%r15, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rcx, 16(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rbx)
	movq	%rbx, %rax
	jmp	.LBB10_24
.Ltmp297:
.LBB10_19:
	.loc	3 148 73
	xorl	%edi, %edi
.Ltmp298:
	callq	command_line_arguments.ndkToolchain.gccToolchain
.Ltmp299:
	.loc	3 148 57 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp300:
.LBB10_31:
	.loc	3 0 57
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp301:
.LBB10_32:
	.loc	3 162 9 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp302:
.Lfunc_end10:
	.size	command_line_arguments.AndroidEnv, .Lfunc_end10-command_line_arguments.AndroidEnv
	.cfi_endproc

	.section	.text.command_line_arguments.ndkToolchain.gccToolchain,"ax",@progbits
	.globl	command_line_arguments.ndkToolchain.gccToolchain
	.p2align	4, 0x90
	.type	command_line_arguments.ndkToolchain.gccToolchain,@function
command_line_arguments.ndkToolchain.gccToolchain:
.Lfunc_begin11:
	.loc	3 233 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB11_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB11_2:
	subq	$136, %rsp
	.cfi_def_cfa_offset 144
.Ltmp303:
	.loc	3 234 25 prologue_end
	testq	%rdi, %rdi
	je	.LBB11_4
.Ltmp304:
	.loc	3 0 25 is_stmt 0
	movups	80(%rdi), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	3 234 18
	movups	.Lconst.147(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	32(%rdi), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	.Lconst.149(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	96(%rdi), %xmm0
	movaps	%xmm0, 112(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$5, 32(%rsp)
	movq	$5, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp305:
	.loc	3 234 2
	addq	$136, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB11_4:
	.cfi_def_cfa_offset 144
.Ltmp306:
	.loc	3 234 25
	movl	$6, %edi
.Ltmp307:
	callq	__go_runtime_error
.Ltmp308:
.Lfunc_end11:
	.size	command_line_arguments.ndkToolchain.gccToolchain, .Lfunc_end11-command_line_arguments.ndkToolchain.gccToolchain
	.cfi_endproc

	.section	.text.command_line_arguments.ndkToolchain.csysroot,"ax",@progbits
	.globl	command_line_arguments.ndkToolchain.csysroot
	.p2align	4, 0x90
	.type	command_line_arguments.ndkToolchain.csysroot,@function
command_line_arguments.ndkToolchain.csysroot:
.Lfunc_begin12:
	.loc	3 249 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB12_2
	movq	%r10, %rax
	movabsq	$88, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB12_2:
	subq	$88, %rsp
	.cfi_def_cfa_offset 96
.Ltmp309:
	.loc	3 250 25 prologue_end
	testq	%rdi, %rdi
	je	.LBB12_4
.Ltmp310:
	.loc	3 0 25 is_stmt 0
	movups	80(%rdi), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	3 250 18
	movups	.Lconst.159(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$2, 32(%rsp)
	movq	$2, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp311:
	.loc	3 250 2
	addq	$88, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB12_4:
	.cfi_def_cfa_offset 96
.Ltmp312:
	.loc	3 250 25
	movl	$6, %edi
.Ltmp313:
	callq	__go_runtime_error
.Ltmp314:
.Lfunc_end12:
	.size	command_line_arguments.ndkToolchain.csysroot, .Lfunc_end12-command_line_arguments.ndkToolchain.csysroot
	.cfi_endproc

	.section	.text.command_line_arguments.ndkToolchain.isystem,"ax",@progbits
	.globl	command_line_arguments.ndkToolchain.isystem
	.p2align	4, 0x90
	.type	command_line_arguments.ndkToolchain.isystem,@function
command_line_arguments.ndkToolchain.isystem:
.Lfunc_begin13:
	.loc	3 245 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB13_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB13_2:
	subq	$136, %rsp
	.cfi_def_cfa_offset 144
.Ltmp315:
	.loc	3 246 25 prologue_end
	testq	%rdi, %rdi
	je	.LBB13_4
.Ltmp316:
	.loc	3 0 25 is_stmt 0
	movups	80(%rdi), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	3 246 18
	movups	.Lconst.159(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	.Lconst.161(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	.Lconst.163(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	48(%rdi), %xmm0
	movaps	%xmm0, 112(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$5, 32(%rsp)
	movq	$5, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp317:
	.loc	3 246 2
	addq	$136, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB13_4:
	.cfi_def_cfa_offset 144
.Ltmp318:
	.loc	3 246 25
	movl	$6, %edi
.Ltmp319:
	callq	__go_runtime_error
.Ltmp320:
.Lfunc_end13:
	.size	command_line_arguments.ndkToolchain.isystem, .Lfunc_end13-command_line_arguments.ndkToolchain.isystem
	.cfi_endproc

	.section	.text.command_line_arguments.ndkToolchain.ldsysroot,"ax",@progbits
	.globl	command_line_arguments.ndkToolchain.ldsysroot
	.p2align	4, 0x90
	.type	command_line_arguments.ndkToolchain.ldsysroot,@function
command_line_arguments.ndkToolchain.ldsysroot:
.Lfunc_begin14:
	.loc	3 253 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB14_2
	movq	%r10, %rax
	movabsq	$248, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB14_2:
.Ltmp321:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$232, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	.loc	3 254 61 prologue_end
	testq	%rdi, %rdi
	je	.LBB14_4
.Ltmp322:
	.loc	3 0 61 is_stmt 0
	movups	(%rdi), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	80(%rdi), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	3 254 56
	movups	.Lconst.27(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	16(%rdi), %xmm0
	movaps	%xmm0, 112(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	112(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp323:
	callq	runtime.concatstring2
	movq	%rax, %rbx
	movq	%rdx, %r14
	.loc	3 254 72
	movups	.Lconst.165(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	.loc	3 254 18
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
	movups	.Lconst.20(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	%rbx, 192(%rsp)
	movq	%r14, 200(%rsp)
	movq	%rax, 208(%rsp)
	movq	%rdx, 216(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$4, 48(%rsp)
	movq	$4, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	.loc	3 254 2
	addq	$232, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB14_4:
	.cfi_def_cfa_offset 256
.Ltmp324:
	.loc	3 254 61
	movl	$6, %edi
.Ltmp325:
	callq	__go_runtime_error
.Ltmp326:
.Lfunc_end14:
	.size	command_line_arguments.ndkToolchain.ldsysroot, .Lfunc_end14-command_line_arguments.ndkToolchain.ldsysroot
	.cfi_endproc

	.section	.text.command_line_arguments.ndkToolchain.clangPath,"ax",@progbits
	.globl	command_line_arguments.ndkToolchain.clangPath
	.p2align	4, 0x90
	.type	command_line_arguments.ndkToolchain.clangPath,@function
command_line_arguments.ndkToolchain.clangPath:
.Lfunc_begin15:
	.loc	3 237 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB15_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB15_2:
	subq	$168, %rsp
	.cfi_def_cfa_offset 176
.Ltmp327:
	.loc	3 238 25 prologue_end
	testq	%rdi, %rdi
	je	.LBB15_4
.Ltmp328:
	.loc	3 0 25 is_stmt 0
	movups	80(%rdi), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	3 238 18
	movups	.Lconst.147(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	.Lconst.151(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	.Lconst.149(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	96(%rdi), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.153(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movups	.Lconst.155(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$7, 32(%rsp)
	movq	$7, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp329:
	.loc	3 238 2
	addq	$168, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB15_4:
	.cfi_def_cfa_offset 176
.Ltmp330:
	.loc	3 238 25
	movl	$6, %edi
.Ltmp331:
	callq	__go_runtime_error
.Ltmp332:
.Lfunc_end15:
	.size	command_line_arguments.ndkToolchain.clangPath, .Lfunc_end15-command_line_arguments.ndkToolchain.clangPath
	.cfi_endproc

	.section	.text.command_line_arguments.ndkToolchain.clangppPath,"ax",@progbits
	.globl	command_line_arguments.ndkToolchain.clangppPath
	.p2align	4, 0x90
	.type	command_line_arguments.ndkToolchain.clangppPath,@function
command_line_arguments.ndkToolchain.clangppPath:
.Lfunc_begin16:
	.loc	3 241 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB16_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB16_2:
	subq	$168, %rsp
	.cfi_def_cfa_offset 176
.Ltmp333:
	.loc	3 242 25 prologue_end
	testq	%rdi, %rdi
	je	.LBB16_4
.Ltmp334:
	.loc	3 0 25 is_stmt 0
	movups	80(%rdi), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	3 242 18
	movups	.Lconst.147(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	.Lconst.151(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	.Lconst.149(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	96(%rdi), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.153(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movups	.Lconst.157(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$7, 32(%rsp)
	movq	$7, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp335:
	.loc	3 242 2
	addq	$168, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB16_4:
	.cfi_def_cfa_offset 176
.Ltmp336:
	.loc	3 242 25
	movl	$6, %edi
.Ltmp337:
	callq	__go_runtime_error
.Ltmp338:
.Lfunc_end16:
	.size	command_line_arguments.ndkToolchain.clangppPath, .Lfunc_end16-command_line_arguments.ndkToolchain.clangppPath
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.ndkToolchain..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.ndkToolchain..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.ndkToolchain..hash,@function
command_line_arguments.command_line_arguments.ndkToolchain..hash:
.Lfunc_begin17:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB17_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB17_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp339:
	.loc	1 1 1 prologue_end
	callq	runtime.strhash
	leaq	16(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	32(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	48(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	64(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	80(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	addq	$96, %rbx
.Ltmp340:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp341:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp342:
.Lfunc_end17:
	.size	command_line_arguments.command_line_arguments.ndkToolchain..hash, .Lfunc_end17-command_line_arguments.command_line_arguments.ndkToolchain..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.ndkToolchain..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.ndkToolchain..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.ndkToolchain..eq,@function
command_line_arguments.command_line_arguments.ndkToolchain..eq:
.Lfunc_begin18:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB18_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB18_2:
.Ltmp343:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp344:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB18_13
.Ltmp345:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp346:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB18_13
.Ltmp347:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp348:
	.loc	1 1 1
	movq	(%rdi), %rdi
	movq	8(%rbx), %rsi
	movq	(%r14), %rdx
	movq	8(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB18_5
.Ltmp349:
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
	movq	16(%r14), %rdx
	movq	24(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB18_5
.Ltmp350:
	movq	32(%rbx), %rdi
	movq	40(%rbx), %rsi
	movq	32(%r14), %rdx
	movq	40(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB18_5
.Ltmp351:
	movq	48(%rbx), %rdi
	movq	56(%rbx), %rsi
	movq	48(%r14), %rdx
	movq	56(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB18_5
.Ltmp352:
	movq	64(%rbx), %rdi
	movq	72(%rbx), %rsi
	movq	64(%r14), %rdx
	movq	72(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB18_5
.Ltmp353:
	movq	80(%rbx), %rdi
	movq	88(%rbx), %rsi
	movq	80(%r14), %rdx
	movq	88(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB18_5
.Ltmp354:
	movq	96(%rbx), %rdi
	movq	104(%rbx), %rsi
	movq	96(%r14), %rdx
	movq	104(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	jmp	.LBB18_6
.Ltmp355:
.LBB18_5:
	xorl	%eax, %eax
.Ltmp356:
.LBB18_6:
	.loc	1 0 1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp357:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp358:
	.cfi_def_cfa_offset 8
	retq
.LBB18_13:
	.cfi_def_cfa_offset 32
.Ltmp359:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp360:
	callq	__go_runtime_error
.Ltmp361:
.Lfunc_end18:
	.size	command_line_arguments.command_line_arguments.ndkToolchain..eq, .Lfunc_end18-command_line_arguments.command_line_arguments.ndkToolchain..eq
	.cfi_endproc

	.section	.text.command_line_arguments.GetAndroidABI,"ax",@progbits
	.globl	command_line_arguments.GetAndroidABI
	.p2align	4, 0x90
	.type	command_line_arguments.GetAndroidABI,@function
command_line_arguments.GetAndroidABI:
.Lfunc_begin19:
	.loc	3 257 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB19_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB19_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
.Ltmp362:
	.loc	3 259 2 prologue_end
	movl	$.Lconst.62, %edx
	movl	$3, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB19_5
.Ltmp363:
	.loc	3 0 2 is_stmt 0
	movl	$.Lconst.166, %eax
	movl	$11, %r15d
	jmp	.LBB19_4
.Ltmp364:
.LBB19_5:
	.loc	3 261 2 is_stmt 1
	movl	$.Lconst.91, %edx
	movl	$5, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB19_7
.Ltmp365:
	.loc	3 0 2 is_stmt 0
	movl	$.Lconst.168, %eax
	movl	$9, %r15d
	jmp	.LBB19_4
.Ltmp366:
.LBB19_7:
	movl	$3, %r15d
	.loc	3 263 2 is_stmt 1
	movl	$.Lconst.97, %edx
	movl	$3, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB19_9
.Ltmp367:
	.loc	3 0 2 is_stmt 0
	movl	$.Lconst.98, %eax
	jmp	.LBB19_4
.Ltmp368:
.LBB19_9:
	.loc	3 265 2 is_stmt 1
	movl	$.Lconst.103, %edx
	movl	$5, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	xorl	%ecx, %ecx
	cmpb	$1, %al
	movl	$6, %r15d
	cmovneq	%rcx, %r15
	movl	$.Lconst.104, %eax
	cmovneq	%rcx, %rax
.Ltmp369:
.LBB19_4:
	.loc	3 260 3
	movq	%r15, %rdx
.Ltmp370:
	popq	%rbx
.Ltmp371:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp372:
.Lfunc_end19:
	.size	command_line_arguments.GetAndroidABI, .Lfunc_end19-command_line_arguments.GetAndroidABI
	.cfi_endproc

	.section	.text.command_line_arguments.BuildAAR,"ax",@progbits
	.globl	command_line_arguments.BuildAAR
	.p2align	4, 0x90
	.type	command_line_arguments.BuildAAR,@function
command_line_arguments.BuildAAR:
.Lfunc_begin20:
	.loc	3 324 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception1
	leaq	-1000(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB20_2
	movq	%r10, %rax
	movabsq	$1000, %r10
	movabsq	$64, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB20_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$952, %rsp
	.cfi_def_cfa_offset 1008
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, 120(%rsp)
	movq	%rsi, 112(%rsp)
	movq	%rdi, %rbp
	movq	%rdi, 104(%rsp)
	movq	%rcx, 336(%rsp)
	movq	%r8, 344(%rsp)
	movb	$0, 63(%rsp)
	movq	$0, 96(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	$0, 88(%rsp)
	xorl	%r14d, %r14d
.Ltmp373:
.Ltmp451:
	.loc	3 325 7 prologue_end
	callq	command_line_arguments.Flags.ShouldRun
.Ltmp374:
.Ltmp452:
	.loc	3 0 7 is_stmt 0
	movb	$1, %r12b
	.loc	3 325 5
	testb	%al, %al
	je	.LBB20_4
.Ltmp453:
	.loc	3 0 5
	movq	io_ioutil.Discard(%rip), %r12
.Ltmp454:
	movq	io_ioutil.Discard+8(%rip), %rbx
.Ltmp455:
	.loc	3 330 7 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB20_11
.Ltmp456:
	.loc	3 0 7 is_stmt 0
	xorl	%r14d, %r14d
.Ltmp457:
.Ltmp375:
	.loc	3 330 7
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp376:
.Ltmp458:
.LBB20_11:
	.loc	3 330 5
	cmpb	$0, 10(%rbp)
	je	.LBB20_12
.Ltmp459:
.LBB20_17:
	.loc	3 0 5
	xorl	%r14d, %r14d
.Ltmp460:
.Ltmp381:
	.loc	3 343 14 is_stmt 1
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	archive_zip.NewWriter
.Ltmp382:
.Ltmp461:
	.loc	3 0 14 is_stmt 0
	movq	%rax, 96(%rsp)
	.loc	3 344 16 is_stmt 1
	movq	$command_line_arguments.BuildAAR..func2, 64(%rsp)
	leaq	104(%rsp), %rax
.Ltmp462:
	movq	%rax, 72(%rsp)
	leaq	96(%rsp), %rax
	movq	%rax, 80(%rsp)
	xorl	%r14d, %r14d
.Ltmp383:
	leaq	624(%rsp), %rdi
	leaq	64(%rsp), %r10
.Ltmp463:
	.loc	3 350 12
	movl	$.Lconst.195, %esi
	movl	$19, %edx
	callq	command_line_arguments.BuildAAR..func2
.Ltmp384:
.Ltmp464:
	movq	640(%rsp), %rbp
.Ltmp465:
	movq	648(%rsp), %r14
.Ltmp466:
	.loc	3 351 9
	testq	%rbp, %rbp
	jne	.LBB20_20
.Ltmp467:
	.loc	3 0 9 is_stmt 0
	leaq	1008(%rsp), %rax
	movq	624(%rsp), %r12
.Ltmp468:
	movq	632(%rsp), %r13
.Ltmp469:
	.loc	3 356 36 is_stmt 1
	movq	(%rax), %rbx
	.loc	3 356 40 is_stmt 0
	cmpq	$0, 8(%rax)
	jg	.LBB20_23
.Ltmp470:
.Ltmp385:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp386:
.Ltmp471:
.LBB20_23:
	movq	(%rbx), %rbx
	.loc	3 356 43
	testq	%rbx, %rbx
	jne	.LBB20_25
.Ltmp472:
.Ltmp387:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp388:
.Ltmp473:
.LBB20_25:
	.loc	3 356 33
	movups	.Lconst.198(%rip), %xmm0
	movaps	%xmm0, 704(%rsp)
	movups	16(%rbx), %xmm0
	movaps	%xmm0, 720(%rsp)
	movups	.Lconst.200(%rip), %xmm0
	movaps	%xmm0, 736(%rsp)
.Ltmp389:
	movaps	704(%rsp), %xmm0
	movaps	720(%rsp), %xmm1
	movaps	736(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
.Ltmp390:
.Ltmp474:
	.loc	3 0 33
	movq	%rax, %rbx
	movq	%rdx, %r15
.Ltmp391:
	.loc	3 356 6
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp392:
.Ltmp475:
	.loc	3 0 6
	movq	%rax, %rbp
	movq	%rbx, 320(%rsp)
	movq	%r15, 328(%rsp)
.Ltmp393:
	leaq	320(%rsp), %rdx
	.loc	3 356 6
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp394:
.Ltmp476:
.Ltmp395:
	movl	$int..d, %edi
	callq	runtime.newobject
.Ltmp396:
.Ltmp477:
	movq	$15, (%rax)
	movq	$string..d, 592(%rsp)
	movq	%rbp, 600(%rsp)
	movq	$int..d, 608(%rsp)
	movq	%rax, 616(%rsp)
	leaq	592(%rsp), %rax
	movq	%rax, 208(%rsp)
	movq	$2, 216(%rsp)
	movq	$2, 224(%rsp)
.Ltmp397:
	movq	224(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	208(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	928(%rsp), %rdi
	movl	$.Lconst.201, %ecx
	movl	$130, %r8d
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	fmt.Fprintf
.Ltmp398:
.Ltmp478:
.Ltmp399:
	.loc	3 0 6
	leaq	560(%rsp), %rdi
	leaq	64(%rsp), %r10
	.loc	3 358 11 is_stmt 1
	movl	$.Lconst.203, %esi
	movl	$12, %edx
	callq	*64(%rsp)
.Ltmp400:
.Ltmp479:
	movq	576(%rsp), %rbp
.Ltmp480:
	movq	584(%rsp), %r14
.Ltmp481:
	.loc	3 359 9
	testq	%rbp, %rbp
	jne	.LBB20_20
.Ltmp482:
	.loc	3 0 9 is_stmt 0
	movq	560(%rsp), %rbp
.Ltmp483:
	movq	568(%rsp), %r12
.Ltmp484:
.Ltmp401:
	.loc	3 362 6 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp402:
.Ltmp485:
	.loc	3 0 6 is_stmt 0
	movq	%rax, %rbx
	movups	.Lconst.206(%rip), %xmm0
	movaps	%xmm0, 688(%rsp)
.Ltmp403:
	leaq	688(%rsp), %rdx
	.loc	3 362 6
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp404:
.Ltmp486:
	movq	$string..d, 304(%rsp)
	movq	%rbx, 312(%rsp)
	leaq	304(%rsp), %rax
	movq	%rax, 232(%rsp)
	movq	$1, 240(%rsp)
	movq	$1, 248(%rsp)
.Ltmp405:
	movq	248(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	232(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	904(%rsp), %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	callq	fmt.Fprintln
.Ltmp406:
.Ltmp487:
.Ltmp407:
	.loc	3 0 6
	leaq	528(%rsp), %rdi
	leaq	64(%rsp), %r10
	.loc	3 364 11 is_stmt 1
	movl	$.Lconst.207, %esi
	movl	$11, %edx
	callq	*64(%rsp)
.Ltmp408:
.Ltmp488:
	movq	544(%rsp), %rbp
.Ltmp489:
	movq	552(%rsp), %r14
.Ltmp490:
	.loc	3 365 9
	testq	%rbp, %rbp
	je	.LBB20_37
.Ltmp491:
.LBB20_20:
	.loc	3 0 9 is_stmt 0
	movb	$1, %r12b
.Ltmp492:
	leaq	63(%rsp), %rbx
	jmp	.LBB20_73
.Ltmp493:
.LBB20_4:
	xorl	%ebp, %ebp
.Ltmp494:
	xorl	%r14d, %r14d
.Ltmp495:
	leaq	63(%rsp), %rbx
	jmp	.LBB20_73
.Ltmp496:
.LBB20_12:
	leaq	1056(%rsp), %rax
.Ltmp497:
	.loc	3 331 16 is_stmt 1
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	xorl	%r14d, %r14d
.Ltmp377:
	leaq	816(%rsp), %rdi
	callq	os.Create
.Ltmp378:
.Ltmp498:
	movq	816(%rsp), %rax
	movq	%rax, 88(%rsp)
	movups	824(%rsp), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	3 332 10
	movq	128(%rsp), %rbp
.Ltmp499:
	testq	%rbp, %rbp
	je	.LBB20_15
.Ltmp500:
	.loc	3 333 4
	movq	136(%rsp), %r14
	movb	$1, %r12b
.Ltmp501:
	.loc	3 0 4 is_stmt 0
	leaq	63(%rsp), %rbx
.Ltmp502:
	jmp	.LBB20_73
.Ltmp503:
.LBB20_15:
	.loc	3 335 9 is_stmt 1
	movq	$command_line_arguments.BuildAAR..func1, 376(%rsp)
	leaq	88(%rsp), %rax
	movq	%rax, 384(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 392(%rsp)
	leaq	376(%rsp), %rax
	.loc	3 335 3 is_stmt 0
	movq	%rax, 200(%rsp)
	xorl	%r14d, %r14d
.Ltmp379:
	leaq	63(%rsp), %rdi
	leaq	200(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk0, %esi
	callq	runtime.deferproc
.Ltmp380:
.Ltmp504:
	.loc	3 0 3
	movl	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %r12d
.Ltmp505:
	.loc	3 340 9 is_stmt 1
	movq	88(%rsp), %rbx
.Ltmp506:
	.loc	3 0 9 is_stmt 0
	jmp	.LBB20_17
.Ltmp507:
.LBB20_37:
	movq	528(%rsp), %r15
.Ltmp508:
	movq	536(%rsp), %rbp
.Ltmp509:
	.loc	3 368 18 is_stmt 1
	movq	112(%rsp), %rax
	movq	%rax, 784(%rsp)
	movq	120(%rsp), %rax
	movq	%rax, 792(%rsp)
	movups	.Lconst.210(%rip), %xmm0
	movups	%xmm0, 800(%rsp)
	leaq	784(%rsp), %rax
	movq	%rax, 256(%rsp)
	movq	$2, 264(%rsp)
	movq	$2, 272(%rsp)
.Ltmp409:
	movq	272(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	256(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp410:
.Ltmp510:
	.loc	3 0 18 is_stmt 0
	movq	%rdx, %rbx
.Ltmp511:
	.loc	3 369 21 is_stmt 1
	movq	104(%rsp), %rdi
.Ltmp512:
.Ltmp411:
	.loc	3 369 12 is_stmt 0
	movups	336(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movq	%r15, %rsi
	movq	%rbp, %rdx
	movq	%rax, %rcx
	movq	%rbx, %r8
	callq	command_line_arguments.BuildJar
.Ltmp513:
.Ltmp412:
	.loc	3 0 12
	movq	%rax, %rbp
.Ltmp514:
	.loc	3 369 45
	testq	%rax, %rax
	je	.LBB20_41
.Ltmp515:
.LBB20_40:
	.loc	3 0 0
	movq	%rdx, %r14
.Ltmp516:
	movb	$1, %r12b
.Ltmp517:
	leaq	63(%rsp), %rbx
	jmp	.LBB20_73
.Ltmp518:
.LBB20_41:
	leaq	1032(%rsp), %rax
	movq	8(%rax), %rcx
.Ltmp519:
	movq	%rcx, 152(%rsp)
	.loc	3 417 2 is_stmt 1
	testq	%rcx, %rcx
	jle	.LBB20_65
.Ltmp520:
	.loc	3 0 2 is_stmt 0
	movq	(%rax), %rax
	addq	$8, %rax
	xorl	%ecx, %ecx
.Ltmp521:
.LBB20_43:
	movq	%rcx, 176(%rsp)
	.loc	3 417 2
	movq	-8(%rax), %rdi
.Ltmp522:
	.loc	3 0 2
	movq	%rax, 184(%rsp)
	.loc	3 417 2
	movq	(%rax), %rsi
.Ltmp523:
.Ltmp413:
	.loc	3 418 10 is_stmt 1
	callq	command_line_arguments.GetAndroidABI
.Ltmp524:
.Ltmp414:
	movq	%rax, 656(%rsp)
	movq	%rdx, 664(%rsp)
	movups	.Lconst.212(%rip), %xmm0
	leaq	672(%rsp), %rax
	movups	%xmm0, (%rax)
.Ltmp415:
	movups	656(%rsp), %xmm0
	movups	672(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp416:
.Ltmp525:
	.loc	3 0 10 is_stmt 0
	movq	%rax, %r12
	movq	%rdx, %r13
.Ltmp526:
	.loc	3 419 12 is_stmt 1
	movq	64(%rsp), %rbp
	.loc	3 419 27 is_stmt 0
	movups	.Lconst.214(%rip), %xmm0
	movaps	%xmm0, 400(%rsp)
	movq	%rax, 416(%rsp)
	movq	%rdx, 424(%rsp)
.Ltmp417:
	movaps	400(%rsp), %xmm0
	movaps	416(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp418:
.Ltmp527:
.Ltmp419:
	.loc	3 419 12
	leaq	496(%rsp), %rdi
	leaq	64(%rsp), %r10
	movq	%rax, %rsi
	callq	*%rbp
.Ltmp420:
.Ltmp528:
	movq	512(%rsp), %rbp
.Ltmp529:
	movq	520(%rsp), %r14
.Ltmp530:
	.loc	3 420 10 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB20_20
.Ltmp531:
	.loc	3 0 10 is_stmt 0
	movq	496(%rsp), %rax
.Ltmp532:
	movq	%rax, 168(%rsp)
	movq	504(%rsp), %rax
.Ltmp533:
	.loc	3 423 7 is_stmt 1
	movq	%rax, 160(%rsp)
	movq	104(%rsp), %r15
.Ltmp534:
	.loc	3 423 8 is_stmt 0
	testq	%r15, %r15
	jne	.LBB20_50
.Ltmp535:
.Ltmp421:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp422:
	movq	%rbx, %r15
.Ltmp536:
.LBB20_50:
	.loc	3 423 6
	cmpb	$0, 10(%r15)
	jne	.LBB20_64
.Ltmp537:
	.loc	3 424 65 is_stmt 1
	movups	.Lconst.216(%rip), %xmm0
	movaps	%xmm0, 432(%rsp)
	movq	%r12, 448(%rsp)
	movq	%r13, 456(%rsp)
.Ltmp423:
	movaps	432(%rsp), %xmm0
	movaps	448(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp424:
.Ltmp538:
	.loc	3 424 31 is_stmt 0
	movq	112(%rsp), %rcx
	movq	%rcx, 464(%rsp)
	movq	120(%rsp), %rcx
	movq	%rcx, 472(%rsp)
	movq	%rax, 480(%rsp)
	movq	%rdx, 488(%rsp)
	leaq	464(%rsp), %rax
	movq	%rax, 280(%rsp)
	movq	$2, 288(%rsp)
	movq	$2, 296(%rsp)
.Ltmp425:
	movq	296(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	280(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp426:
.Ltmp539:
.Ltmp427:
	.loc	3 424 17
	leaq	352(%rsp), %rdi
	movq	%rax, %rsi
	callq	os.Open
.Ltmp428:
.Ltmp540:
	movq	360(%rsp), %rbp
.Ltmp541:
	.loc	3 425 11 is_stmt 1
	testq	%rbp, %rbp
	movb	$1, %r12b
	jne	.LBB20_55
.Ltmp542:
	.loc	3 0 11 is_stmt 0
	movq	352(%rsp), %rbp
.Ltmp543:
.Ltmp429:
	.loc	3 428 4 is_stmt 1
	movl	$type..struct.4.4x.5a0.0.1os.File.5, %edi
	callq	runtime.newobject
.Ltmp430:
.Ltmp544:
	movq	%rax, %rbx
	movq	%rbp, 192(%rsp)
.Ltmp431:
	movl	$type..struct.4.4x.5a0.0.1os.File.5, %edi
	movq	%rax, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp432:
.Ltmp545:
.Ltmp433:
	movl	$command_line_arguments.command_line_arguments..thunk1, %esi
	leaq	63(%rsp), %rdi
	movq	%rbx, %rdx
	callq	runtime.deferproc
.Ltmp434:
.Ltmp546:
.Ltmp435:
	.loc	3 429 20
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %ecx
	leaq	760(%rsp), %rdi
	movq	168(%rsp), %rsi
	movq	160(%rsp), %rdx
	movq	%rbp, %r8
	callq	io.Copy
.Ltmp436:
.Ltmp547:
	movq	768(%rsp), %rbp
.Ltmp548:
	.loc	3 429 36 is_stmt 0
	testq	%rbp, %rbp
	jne	.LBB20_63
.Ltmp549:
.LBB20_64:
	.loc	3 0 36
	movq	176(%rsp), %rcx
	.loc	3 417 2 is_stmt 1
	addq	$1, %rcx
	movq	184(%rsp), %rax
	addq	$16, %rax
	movq	%r15, %rbx
	cmpq	152(%rsp), %rcx
	jl	.LBB20_43
.Ltmp550:
.LBB20_65:
.Ltmp438:
	.loc	3 0 2 is_stmt 0
	leaq	872(%rsp), %rdi
	leaq	64(%rsp), %r10
	.loc	3 436 11 is_stmt 1
	movl	$.Lconst.219, %esi
	movl	$5, %edx
	callq	*64(%rsp)
.Ltmp439:
.Ltmp551:
	movq	888(%rsp), %rbp
.Ltmp552:
	movq	896(%rsp), %r14
.Ltmp553:
	.loc	3 437 9
	testq	%rbp, %rbp
	jne	.LBB20_20
.Ltmp554:
.Ltmp440:
	.loc	3 0 9 is_stmt 0
	leaq	840(%rsp), %rdi
	leaq	64(%rsp), %r10
	.loc	3 441 11 is_stmt 1
	movl	$.Lconst.221, %esi
	movl	$4, %edx
	callq	*64(%rsp)
.Ltmp441:
.Ltmp555:
	movq	856(%rsp), %rbp
.Ltmp556:
	movq	864(%rsp), %r14
.Ltmp557:
	.loc	3 442 9
	testq	%rbp, %rbp
	jne	.LBB20_20
.Ltmp558:
	.loc	3 446 9
	movq	96(%rsp), %rdi
.Ltmp559:
.Ltmp442:
	.loc	3 446 13 is_stmt 0
	callq	archive_zip.Writer.Close
.Ltmp560:
.Ltmp443:
	.loc	3 0 13
	movq	%rax, %rbp
	jmp	.LBB20_40
.Ltmp561:
.LBB20_55:
	.loc	3 424 17 is_stmt 1
	movq	368(%rsp), %r14
.Ltmp562:
	.loc	3 0 17 is_stmt 0
	leaq	63(%rsp), %rbx
	jmp	.LBB20_73
.Ltmp563:
.LBB20_63:
	.loc	3 429 20 is_stmt 1
	movq	776(%rsp), %r14
.Ltmp564:
	.loc	3 0 20 is_stmt 0
	movb	$1, %r12b
.Ltmp565:
	leaq	63(%rsp), %rbx
	jmp	.LBB20_73
.Ltmp566:
.LBB20_5:
.Ltmp437:
	jmp	.LBB20_7
.Ltmp567:
.LBB20_6:
.Ltmp444:
.LBB20_7:
.Ltmp445:
	leaq	63(%rsp), %rdi
	.loc	3 447 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp446:
.Ltmp568:
	.loc	3 0 1 is_stmt 0
	movb	$1, %r12b
	xorl	%ebp, %ebp
.Ltmp569:
	leaq	63(%rsp), %rbx
	jmp	.LBB20_73
.Ltmp570:
.LBB20_71:
.Ltmp447:
	movq	%rax, %r15
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
.Ltmp571:
	leaq	63(%rsp), %rbx
	jmp	.LBB20_73
.Ltmp572:
.LBB20_72:
.Ltmp450:
	.loc	3 447 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp573:
	.p2align	4, 0x90
.LBB20_73:
.Ltmp448:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp449:
.Ltmp574:
	testb	$1, 63(%rsp)
	jne	.LBB20_76
.Ltmp575:
	.loc	3 0 1
	testb	%r12b, %r12b
	je	.LBB20_77
.Ltmp576:
.LBB20_76:
	movq	%rbp, %rax
	movq	%r14, %rdx
	addq	$952, %rsp
.Ltmp577:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp578:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB20_77:
	.cfi_def_cfa_offset 1008
.Ltmp579:
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end20:
	.size	command_line_arguments.BuildAAR, .Lfunc_end20-command_line_arguments.BuildAAR
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table20:
.Lexception1:
	.byte	255
	.byte	3
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin20-.Lfunc_begin20
	.uleb128 .Ltmp373-.Lfunc_begin20
	.byte	0
	.byte	0
	.uleb128 .Ltmp373-.Lfunc_begin20
	.uleb128 .Ltmp412-.Ltmp373
	.uleb128 .Ltmp444-.Lfunc_begin20
	.byte	1
	.uleb128 .Ltmp413-.Lfunc_begin20
	.uleb128 .Ltmp436-.Ltmp413
	.uleb128 .Ltmp437-.Lfunc_begin20
	.byte	1
	.uleb128 .Ltmp438-.Lfunc_begin20
	.uleb128 .Ltmp443-.Ltmp438
	.uleb128 .Ltmp444-.Lfunc_begin20
	.byte	1
	.uleb128 .Ltmp445-.Lfunc_begin20
	.uleb128 .Ltmp446-.Ltmp445
	.uleb128 .Ltmp447-.Lfunc_begin20
	.byte	0
	.uleb128 .Ltmp446-.Lfunc_begin20
	.uleb128 .Ltmp448-.Ltmp446
	.byte	0
	.byte	0
	.uleb128 .Ltmp448-.Lfunc_begin20
	.uleb128 .Ltmp449-.Ltmp448
	.uleb128 .Ltmp450-.Lfunc_begin20
	.byte	1
	.uleb128 .Ltmp449-.Lfunc_begin20
	.uleb128 .Lfunc_end20-.Ltmp449
	.byte	0
	.byte	0
.Lcst_end1:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase1:
	.p2align	2

	.section	.text.command_line_arguments.BuildAAR..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.BuildAAR..func1,@function
command_line_arguments.BuildAAR..func1:
.Lfunc_begin21:
	.loc	3 335 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB21_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB21_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%r10, %rbx
.Ltmp580:
	.loc	3 336 15 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rdi
	.loc	3 336 16 is_stmt 0
	callq	os.File.Close
	movq	%rax, (%rsp)
	movq	%rdx, 8(%rsp)
	.loc	3 336 26
	movq	16(%rbx), %rsi
	.loc	3 336 30
	cmpq	$0, (%rsi)
	jne	.LBB21_7
	.loc	3 337 9 is_stmt 1
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB21_4
	.loc	3 0 9 is_stmt 0
	movq	%rsp, %rdx
	.loc	3 337 9
	movl	$error..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB21_7
.LBB21_4:
	testq	%rsi, %rsi
	je	.LBB21_5
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.LBB21_7:
	.loc	3 0 9
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB21_5:
	.cfi_def_cfa_offset 32
	.loc	3 337 9
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp581:
.Lfunc_end21:
	.size	command_line_arguments.BuildAAR..func1, .Lfunc_end21-command_line_arguments.BuildAAR..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk0,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk0,@function
command_line_arguments.command_line_arguments..thunk0:
.Lfunc_begin22:
	.loc	3 335 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB22_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB22_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp582:
	.loc	3 335 3 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp583:
	.loc	3 0 3 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp584:
.Lfunc_end22:
	.size	command_line_arguments.command_line_arguments..thunk0, .Lfunc_end22-command_line_arguments.command_line_arguments..thunk0
	.cfi_endproc

	.section	.text.command_line_arguments.BuildAAR..func2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.BuildAAR..func2,@function
command_line_arguments.BuildAAR..func2:
.Lfunc_begin23:
	.loc	3 344 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB23_2
	movq	%r10, %rax
	movabsq	$216, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB23_2:
.Ltmp585:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$176, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	3 345 6 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rax
	.loc	3 345 7 is_stmt 0
	testq	%rax, %rax
	je	.LBB23_7
.Ltmp586:
	.loc	3 0 7
	movq	%rdx, %r14
.Ltmp587:
	movq	%rsi, %r15
.Ltmp588:
	movq	%r10, %r13
	movq	%rdi, %r12
	.loc	3 345 3
	testb	$1, 12(%rax)
	je	.LBB23_6
.Ltmp589:
	.loc	3 346 12 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 64(%rsp)
	movq	%r14, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 48(%rsp)
	movq	%rbx, 56(%rsp)
	.loc	3 346 4 is_stmt 0
	movq	8(%r13), %rax
	movq	(%rax), %rax
	.loc	3 346 5
	testq	%rax, %rax
	je	.LBB23_7
.Ltmp590:
	movq	(%rax), %rdi
	leaq	48(%rsp), %rax
	.loc	3 346 12
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.226, %esi
	movl	$8, %edx
	callq	log.Logger.Printf
.Ltmp591:
.LBB23_6:
	.loc	3 0 12
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	.loc	3 348 10 is_stmt 1
	movq	16(%r13), %rax
	movq	(%rax), %rsi
	leaq	112(%rsp), %rdi
	.loc	3 348 14 is_stmt 0
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	archive_zip.Writer.Create
	movups	112(%rsp), %xmm0
	movups	128(%rsp), %xmm1
	movaps	%xmm1, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	.loc	3 348 3
	movaps	%xmm0, 144(%rsp)
	movaps	%xmm1, 160(%rsp)
	movups	%xmm0, (%r12)
	movups	%xmm1, 16(%r12)
	movq	%r12, %rax
	addq	$176, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp592:
	.cfi_def_cfa_offset 8
	retq
.Ltmp593:
.LBB23_7:
	.cfi_def_cfa_offset 224
	.loc	3 0 3
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end23:
	.size	command_line_arguments.BuildAAR..func2, .Lfunc_end23-command_line_arguments.BuildAAR..func2
	.cfi_endproc

	.section	.text.command_line_arguments.BuildJar,"ax",@progbits
	.globl	command_line_arguments.BuildJar
	.p2align	4, 0x90
	.type	command_line_arguments.BuildJar,@function
command_line_arguments.BuildJar:
.Lfunc_begin24:
	.loc	3 449 0 is_stmt 1
	.cfi_startproc
	leaq	-744(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB24_2
	movq	%r10, %rax
	movabsq	$744, %r10
	movabsq	$16, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB24_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$696, %rsp
	.cfi_def_cfa_offset 752
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r12
	movq	%rcx, %rbx
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbp
	movq	%rcx, 160(%rsp)
	movq	%r8, 168(%rsp)
.Ltmp594:
	.loc	3 449 15 prologue_end
	movl	$type...1command_line_arguments.Flags, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp595:
	.loc	3 0 15 is_stmt 0
	movq	%rbp, 184(%rsp)
	leaq	184(%rsp), %rdx
	.loc	3 449 15
	movl	$type...1command_line_arguments.Flags, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	$0, 144(%rsp)
.Ltmp596:
	.loc	3 451 6 is_stmt 1
	movq	(%r13), %rdi
	.loc	3 451 7 is_stmt 0
	callq	command_line_arguments.Flags.ShouldRun
	.loc	3 451 5
	testb	%al, %al
	je	.LBB24_3
.Ltmp597:
	.loc	3 454 32 is_stmt 1
	movq	$command_line_arguments.BuildJar..func1, 360(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 368(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 376(%rsp)
	leaq	360(%rsp), %rdx
	.loc	3 454 19 is_stmt 0
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	path_filepath.Walk
.Ltmp598:
	.loc	3 463 10 is_stmt 1
	testq	%rax, %rax
	jne	.LBB24_13
	jmp	.LBB24_4
.Ltmp599:
.LBB24_3:
	.loc	3 452 14
	movl	$type...61x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	.Lconst.253(%rip), %xmm0
	movaps	%xmm0, 416(%rsp)
	leaq	416(%rsp), %rdx
	movl	$type...61x.7string, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, 128(%rsp)
	movq	$1, 136(%rsp)
	movq	$1, 144(%rsp)
.Ltmp600:
.LBB24_4:
	.loc	3 0 14 is_stmt 0
	leaq	752(%rsp), %rbp
.Ltmp601:
	.loc	3 468 18 is_stmt 1
	movups	(%rbp), %xmm0
	movaps	%xmm0, 480(%rsp)
	movups	.Lconst.256(%rip), %xmm0
	movaps	%xmm0, 496(%rsp)
	leaq	480(%rsp), %rax
	movq	%rax, 240(%rsp)
	movq	$2, 248(%rsp)
	movq	$2, 256(%rsp)
	movq	256(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	240(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, 112(%rsp)
	movq	%rdx, 120(%rsp)
.Ltmp602:
	.loc	3 469 18
	movq	(%r13), %rdi
	.loc	3 469 12 is_stmt 0
	movq	%rax, %rsi
	callq	command_line_arguments.Mkdir
.Ltmp603:
	.loc	3 469 31
	testq	%rax, %rax
	jne	.LBB24_13
.Ltmp604:
	.loc	3 473 33 is_stmt 1
	movq	(%r13), %rsi
.Ltmp605:
	.loc	3 0 33 is_stmt 0
	leaq	448(%rsp), %rdi
.Ltmp606:
	.loc	3 543 18 is_stmt 1
	callq	command_line_arguments.AndroidPlatformPath
.Ltmp607:
	movq	464(%rsp), %rax
.Ltmp608:
	movq	472(%rsp), %rdx
.Ltmp609:
	.loc	3 0 18 is_stmt 0
	movups	448(%rsp), %xmm0
	movaps	%xmm0, 432(%rsp)
	.loc	3 544 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB24_13
.Ltmp610:
	.loc	3 547 18
	movaps	432(%rsp), %xmm0
	movaps	%xmm0, 512(%rsp)
	movups	.Lconst.29(%rip), %xmm0
	movaps	%xmm0, 528(%rsp)
	leaq	512(%rsp), %rax
.Ltmp611:
	movq	%rax, 264(%rsp)
	movq	$2, 272(%rsp)
	movq	$2, 280(%rsp)
	movq	280(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	264(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp612:
	.loc	3 478 10
	movups	.Lconst.258(%rip), %xmm0
	movaps	%xmm0, 544(%rsp)
	movups	112(%rsp), %xmm0
	movaps	%xmm0, 560(%rsp)
	movups	.Lconst.260(%rip), %xmm0
	movaps	%xmm0, 576(%rsp)
	movups	.Lconst.262(%rip), %xmm0
	movaps	%xmm0, 592(%rsp)
	movups	.Lconst.264(%rip), %xmm1
	movaps	%xmm1, 608(%rsp)
	movaps	%xmm0, 624(%rsp)
	movups	.Lconst.266(%rip), %xmm0
	movaps	%xmm0, 640(%rsp)
	movq	%rax, 656(%rsp)
	movq	%rdx, 664(%rsp)
	leaq	544(%rsp), %rax
.Ltmp613:
	movq	%rax, 80(%rsp)
	movq	$8, 88(%rsp)
	movq	$8, 96(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	$8, 64(%rsp)
	.loc	3 485 9
	movq	56(%rsp), %rbx
	movaps	128(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 208(%rsp)
	movq	200(%rsp), %rdx
	addq	%rbx, %rdx
	cmpq	$8, %rdx
	jbe	.LBB24_14
.Ltmp614:
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	336(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	336(%rsp), %rcx
	movq	344(%rsp), %rdx
	movq	352(%rsp), %rax
	jmp	.LBB24_8
.Ltmp615:
.LBB24_14:
	.loc	3 0 9 is_stmt 0
	movl	$8, %eax
	.loc	3 485 9
	cmpq	%rax, %rdx
	jg	.LBB24_31
.Ltmp616:
	.loc	3 0 9
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB24_31
.Ltmp617:
	.loc	3 485 9
	movq	48(%rsp), %rcx
.Ltmp618:
.LBB24_8:
	movq	%rcx, 48(%rsp)
	movq	%rdx, 56(%rsp)
	movq	%rax, 64(%rsp)
	testq	%rbx, %rbx
	js	.LBB24_31
.Ltmp619:
	.loc	3 0 9
	cmpq	%rbx, %rax
	jl	.LBB24_31
.Ltmp620:
	xorl	%esi, %esi
	.loc	3 485 9
	subq	%rbx, %rax
	cmovneq	%rbx, %rsi
	shlq	$4, %rsi
	addq	%rsi, %rcx
	subq	%rbx, %rdx
	movq	%rcx, 216(%rsp)
	movq	%rdx, 224(%rsp)
	movq	%rax, 232(%rsp)
	movq	208(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	192(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	232(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	216(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %edi
	callq	runtime.typedslicecopy
	.loc	3 485 7
	movaps	48(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 96(%rsp)
	.loc	3 487 16 is_stmt 1
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.7, %edi
	movl	$5, %esi
	callq	os_exec.Command
	.loc	3 488 7
	testq	%rax, %rax
	je	.LBB24_11
.Ltmp621:
	.loc	3 0 7 is_stmt 0
	movq	%rax, %rbx
.Ltmp622:
	.loc	3 488 7
	movq	%rax, %rsi
	addq	$64, %rsi
	.loc	3 488 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB24_22
.Ltmp623:
	.loc	3 0 12
	leaq	160(%rsp), %rdx
	.loc	3 488 12
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB24_18
.Ltmp624:
.LBB24_22:
	movups	160(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp625:
.LBB24_18:
	.loc	3 489 19 is_stmt 1
	movq	(%r13), %rdi
	.loc	3 489 12 is_stmt 0
	movq	(%rbp), %rsi
	movq	8(%rbp), %rdx
	movq	%rbx, %rcx
	callq	command_line_arguments.RunCmd
.Ltmp626:
	.loc	3 489 42
	testq	%rax, %rax
	je	.LBB24_19
.Ltmp627:
.LBB24_13:
	.loc	3 0 42
	addq	$696, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp628:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp629:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB24_19:
	.cfi_def_cfa_offset 752
.Ltmp630:
	.loc	3 497 6 is_stmt 1
	movq	(%r13), %rdi
	.loc	3 497 7 is_stmt 0
	callq	command_line_arguments.Flags.ShouldRun
.Ltmp631:
	.loc	3 497 5
	testb	%al, %al
	je	.LBB24_20
.Ltmp632:
	.loc	3 500 2 is_stmt 1
	movl	$type...1archive_zip.Writer, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp633:
	.loc	3 500 14 is_stmt 0
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	archive_zip.NewWriter
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB24_24
.Ltmp634:
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB24_27
.Ltmp635:
.LBB24_20:
	.loc	3 498 3 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB24_13
.Ltmp636:
.LBB24_24:
	.loc	3 500 14
	testq	%r12, %r12
	je	.LBB24_11
.Ltmp637:
	movq	%rax, (%r12)
.Ltmp638:
.LBB24_27:
	.loc	3 501 16
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp639:
	movq	$command_line_arguments.BuildJar..func2, 312(%rsp)
	movq	%r13, 320(%rsp)
	movq	%r12, 328(%rsp)
	leaq	312(%rsp), %rdx
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, 176(%rsp)
	leaq	384(%rsp), %rdi
	.loc	3 507 23
	movl	$.Lconst.272, %esi
	movl	$20, %edx
	movq	%rbx, %r10
	callq	*(%rbx)
	movq	400(%rsp), %rax
.Ltmp640:
	.loc	3 508 9
	testq	%rax, %rax
	je	.LBB24_29
.Ltmp641:
	.loc	3 507 23
	movq	408(%rsp), %rdx
	jmp	.LBB24_13
.Ltmp642:
.LBB24_29:
	movq	384(%rsp), %rsi
.Ltmp643:
	movq	392(%rsp), %rdx
.Ltmp644:
	.loc	3 511 6
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	leaq	672(%rsp), %rdi
	movl	$.Lconst.274, %ecx
	movl	$44, %r8d
	callq	fmt.Fprintf
.Ltmp645:
	.loc	3 513 27
	movq	$command_line_arguments.BuildJar..func3, 288(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 296(%rsp)
	leaq	112(%rsp), %rax
	movq	%rax, 304(%rsp)
	.loc	3 513 17 is_stmt 0
	movq	112(%rsp), %rdi
	movq	120(%rsp), %rsi
	leaq	288(%rsp), %rdx
	callq	path_filepath.Walk
.Ltmp646:
	.loc	3 532 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB24_13
.Ltmp647:
	.loc	3 535 9
	movq	(%r12), %rdi
	.loc	3 535 13 is_stmt 0
	callq	archive_zip.Writer.Close
.Ltmp648:
	.loc	3 0 13
	jmp	.LBB24_13
.Ltmp649:
.LBB24_31:
	.loc	3 485 9 is_stmt 1
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp650:
.LBB24_11:
	.loc	3 0 9 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end24:
	.size	command_line_arguments.BuildJar, .Lfunc_end24-command_line_arguments.BuildJar
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk1,@function
command_line_arguments.command_line_arguments..thunk1:
.Lfunc_begin25:
	.loc	3 428 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB25_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB25_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp651:
	.loc	3 428 4 prologue_end
	movl	$.Ltmp652, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB25_4
.Ltmp653:
	movq	(%rbx), %rdi
	callq	os.File.Close
.Ltmp654:
.Ltmp652:
.LBB25_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp655:
	.cfi_def_cfa_offset 8
	retq
.Ltmp656:
.Lfunc_end25:
	.size	command_line_arguments.command_line_arguments..thunk1, .Lfunc_end25-command_line_arguments.command_line_arguments..thunk1
	.cfi_endproc

	.section	.text.command_line_arguments.Flags.ShouldPrint,"ax",@progbits
	.globl	command_line_arguments.Flags.ShouldPrint
	.p2align	4, 0x90
	.type	command_line_arguments.Flags.ShouldPrint,@function
command_line_arguments.Flags.ShouldPrint:
.Lfunc_begin26:
	.loc	5 38 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB26_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB26_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp657:
	.loc	5 39 11 prologue_end
	testq	%rdi, %rdi
	je	.LBB26_7
.Ltmp658:
	movb	10(%rdi), %al
	.loc	5 39 19 is_stmt 0
	testb	%al, %al
	je	.LBB26_8
.Ltmp659:
	.loc	5 39 32
	testb	$1, %al
	jne	.LBB26_5
.Ltmp660:
.LBB26_6:
	.loc	5 39 2
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp661:
.LBB26_8:
	.cfi_def_cfa_offset 16
	.loc	5 39 23
	movb	11(%rdi), %al
	.loc	5 39 32
	testb	$1, %al
	je	.LBB26_6
.Ltmp662:
.LBB26_5:
	.loc	5 39 35
	cmpb	$0, 9(%rdi)
	sete	%al
	.loc	5 39 2
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp663:
.LBB26_7:
	.cfi_def_cfa_offset 16
	.loc	5 39 11
	movl	$6, %edi
.Ltmp664:
	callq	__go_runtime_error
.Ltmp665:
.Lfunc_end26:
	.size	command_line_arguments.Flags.ShouldPrint, .Lfunc_end26-command_line_arguments.Flags.ShouldPrint
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Flags..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Flags..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Flags..hash,@function
command_line_arguments.command_line_arguments.Flags..hash:
.Lfunc_begin27:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB27_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB27_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp666:
	.loc	1 1 1 prologue_end
	callq	runtime.memhash64
	leaq	8(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	leaq	9(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	leaq	10(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	leaq	11(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	leaq	12(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	leaq	13(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	leaq	16(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	32(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	48(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	64(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
	addq	$72, %rbx
.Ltmp667:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp668:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp669:
.Lfunc_end27:
	.size	command_line_arguments.command_line_arguments.Flags..hash, .Lfunc_end27-command_line_arguments.command_line_arguments.Flags..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Flags..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Flags..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Flags..eq,@function
command_line_arguments.command_line_arguments.Flags..eq:
.Lfunc_begin28:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB28_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB28_2:
.Ltmp670:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp671:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB28_18
.Ltmp672:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp673:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB28_18
.Ltmp674:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp675:
	.loc	1 1 1
	movq	(%rdi), %rax
	cmpq	(%r14), %rax
	jne	.LBB28_5
.Ltmp676:
	movb	8(%rbx), %al
	cmpb	8(%r14), %al
	jne	.LBB28_5
.Ltmp677:
	movb	9(%rbx), %al
	cmpb	9(%r14), %al
	jne	.LBB28_5
.Ltmp678:
	movb	10(%rbx), %al
	cmpb	10(%r14), %al
	jne	.LBB28_5
.Ltmp679:
	movb	11(%rbx), %al
	cmpb	11(%r14), %al
	jne	.LBB28_5
.Ltmp680:
	movb	12(%rbx), %al
	cmpb	12(%r14), %al
	jne	.LBB28_5
.Ltmp681:
	movb	13(%rbx), %al
	cmpb	13(%r14), %al
	jne	.LBB28_5
.Ltmp682:
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
	movq	16(%r14), %rdx
	movq	24(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB28_5
.Ltmp683:
	movq	32(%rbx), %rdi
	movq	40(%rbx), %rsi
	movq	32(%r14), %rdx
	movq	40(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB28_5
.Ltmp684:
	movq	48(%rbx), %rdi
	movq	56(%rbx), %rsi
	movq	48(%r14), %rdx
	movq	56(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB28_5
.Ltmp685:
	movb	64(%rbx), %al
	cmpb	64(%r14), %al
	jne	.LBB28_5
.Ltmp686:
	movq	72(%rbx), %rdi
	movq	80(%rbx), %rsi
	movq	72(%r14), %rdx
	movq	80(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	jmp	.LBB28_6
.Ltmp687:
.LBB28_5:
	xorl	%eax, %eax
.Ltmp688:
.LBB28_6:
	.loc	1 0 1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp689:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp690:
	.cfi_def_cfa_offset 8
	retq
.LBB28_18:
	.cfi_def_cfa_offset 32
.Ltmp691:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp692:
	callq	__go_runtime_error
.Ltmp693:
.Lfunc_end28:
	.size	command_line_arguments.command_line_arguments.Flags..eq, .Lfunc_end28-command_line_arguments.command_line_arguments.Flags..eq
	.cfi_endproc

	.section	.text.command_line_arguments.BuildJar..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.BuildJar..func1,@function
command_line_arguments.BuildJar..func1:
.Lfunc_begin29:
	.loc	3 454 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB29_2
	movq	%r10, %rax
	movabsq	$216, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB29_2:
.Ltmp694:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$192, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp695:
	.loc	3 455 11 prologue_end
	testq	%r8, %r8
	je	.LBB29_5
.Ltmp696:
	.loc	3 456 5
	movq	%r8, %rax
	movq	%r9, %rdx
	jmp	.LBB29_4
.Ltmp697:
.LBB29_5:
	.loc	3 0 5 is_stmt 0
	movq	%rsi, %r15
.Ltmp698:
	movq	%rdi, %rbx
.Ltmp699:
	movq	%r10, %r14
	.loc	3 458 16 is_stmt 1
	callq	path_filepath.Ext
.Ltmp700:
	movq	%rdx, %rsi
	.loc	3 458 26 is_stmt 0
	movl	$.Lconst.277, %edx
	movl	$5, %ecx
	movq	%rax, %rdi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB29_23
.Ltmp701:
	.loc	3 459 61 is_stmt 1
	movq	16(%r14), %rax
	.loc	3 459 57 is_stmt 0
	movq	8(%rax), %rdx
	.loc	3 459 56
	testq	%rdx, %rdx
	js	.LBB29_24
.Ltmp702:
	movq	$-1, %rcx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	__go_string_slice
	.loc	3 459 42
	movups	.Lconst.279(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movq	%rax, 176(%rsp)
	movq	%rdx, 184(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$2, 120(%rsp)
	movq	$2, 128(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, 64(%rsp)
	movq	%rdx, 72(%rsp)
	.loc	3 459 5
	movq	8(%r14), %r14
	movups	(%r14), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	16(%r14), %rax
	movq	%rax, 48(%rsp)
	.loc	3 459 16
	movq	40(%rsp), %rbx
.Ltmp703:
	leaq	1(%rbx), %rdx
	movq	48(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB29_12
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	136(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	136(%rsp), %rsi
	movq	144(%rsp), %rdx
	movq	152(%rsp), %rax
	jmp	.LBB29_9
.LBB29_12:
	cmpq	%rax, %rdx
	jg	.LBB29_25
	.loc	3 0 16
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB29_25
	.loc	3 459 16
	movq	32(%rsp), %rsi
.LBB29_9:
	movq	%rsi, 32(%rsp)
	movq	%rdx, 40(%rsp)
	movq	%rax, 48(%rsp)
	testq	%rbx, %rbx
	js	.LBB29_11
	.loc	3 0 16
	cmpq	%rdx, %rbx
	jge	.LBB29_11
	.loc	3 459 16
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB29_16
	.loc	3 0 16
	leaq	64(%rsp), %rdx
	.loc	3 459 16
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB29_19
.LBB29_16:
	testq	%rsi, %rsi
	je	.LBB29_17
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.LBB29_19:
	.loc	3 0 16
	movq	48(%rsp), %rax
	movq	%rax, 96(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	3 459 14
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB29_20
	.loc	3 0 14
	leaq	80(%rsp), %rdx
	.loc	3 459 14
	movl	$type...6.7string, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB29_23
.LBB29_20:
	testq	%r14, %r14
	je	.LBB29_17
	movq	96(%rsp), %rax
	movq	%rax, 16(%r14)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%r14)
.LBB29_23:
.Ltmp704:
	.loc	3 461 4 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
.LBB29_4:
	.loc	3 0 4 is_stmt 0
	addq	$192, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB29_11:
	.cfi_def_cfa_offset 224
	.loc	3 459 16 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.LBB29_24:
.Ltmp705:
	.loc	3 459 56 is_stmt 0
	movl	$5, %edi
	callq	__go_runtime_error
.Ltmp706:
.LBB29_25:
	.loc	3 459 16
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp707:
.LBB29_17:
	.loc	3 0 16
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end29:
	.size	command_line_arguments.BuildJar..func1, .Lfunc_end29-command_line_arguments.BuildJar..func1
	.cfi_endproc

	.section	.text.command_line_arguments.Mkdir,"ax",@progbits
	.globl	command_line_arguments.Mkdir
	.p2align	4, 0x90
	.type	command_line_arguments.Mkdir,@function
command_line_arguments.Mkdir:
.Lfunc_begin30:
	.loc	6 235 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB30_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB30_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$88, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp708:
	.loc	6 236 6 prologue_end
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 236 2 is_stmt 0
	testb	$1, %al
	je	.LBB30_5
.Ltmp709:
	.loc	6 237 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 72(%rsp)
	movq	%r14, 80(%rsp)
	leaq	72(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 56(%rsp)
	movq	%r12, 64(%rsp)
	.loc	6 237 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB30_9
.Ltmp710:
	movq	(%rbx), %rdi
	leaq	56(%rsp), %rax
	.loc	6 237 11
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.483, %esi
	movl	$12, %edx
	callq	log.Logger.Printf
.Ltmp711:
.LBB30_5:
	.loc	6 239 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 239 2 is_stmt 0
	testb	$1, %al
	jne	.LBB30_6
.Ltmp712:
	.loc	6 242 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB30_8
.Ltmp713:
.LBB30_6:
	.loc	6 240 13
	movl	$493, %edx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	os.MkdirAll
.Ltmp714:
.LBB30_8:
	.loc	6 0 13 is_stmt 0
	addq	$88, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp715:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp716:
	.cfi_def_cfa_offset 8
	retq
.LBB30_9:
	.cfi_def_cfa_offset 128
.Ltmp717:
	.loc	6 237 4 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp718:
.Lfunc_end30:
	.size	command_line_arguments.Mkdir, .Lfunc_end30-command_line_arguments.Mkdir
	.cfi_endproc

	.section	.text.command_line_arguments.RunCmd,"ax",@progbits
	.globl	command_line_arguments.RunCmd
	.p2align	4, 0x90
	.type	command_line_arguments.RunCmd,@function
command_line_arguments.RunCmd:
.Lfunc_begin31:
	.loc	6 20 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB31_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB31_2:
	subq	$72, %rsp
	.cfi_def_cfa_offset 80
	movq	%rcx, %rax
	movq	%rdx, %rcx
.Ltmp719:
	movq	%rsi, %rdx
.Ltmp720:
	movq	%rdi, %rsi
.Ltmp721:
	.loc	6 21 12 prologue_end
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	leaq	32(%rsp), %rdi
.Ltmp722:
	movq	%rax, %r8
.Ltmp723:
	callq	command_line_arguments.OutputCmd
.Ltmp724:
	movq	56(%rsp), %rax
.Ltmp725:
	movq	64(%rsp), %rdx
.Ltmp726:
	.loc	6 22 2
	addq	$72, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp727:
.Lfunc_end31:
	.size	command_line_arguments.RunCmd, .Lfunc_end31-command_line_arguments.RunCmd
	.cfi_endproc

	.section	.text.command_line_arguments.BuildJar..func2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.BuildJar..func2,@function
command_line_arguments.BuildJar..func2:
.Lfunc_begin32:
	.loc	3 501 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB32_2
	movq	%r10, %rax
	movabsq	$216, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB32_2:
.Ltmp728:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$176, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	3 502 6 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rax
	.loc	3 502 7 is_stmt 0
	testq	%rax, %rax
	je	.LBB32_7
.Ltmp729:
	.loc	3 0 7
	movq	%rdx, %r14
.Ltmp730:
	movq	%rsi, %r15
.Ltmp731:
	movq	%r10, %r13
	movq	%rdi, %r12
	.loc	3 502 3
	testb	$1, 12(%rax)
	je	.LBB32_6
.Ltmp732:
	.loc	3 503 12 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 64(%rsp)
	movq	%r14, 72(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 48(%rsp)
	movq	%rbx, 56(%rsp)
	.loc	3 503 4 is_stmt 0
	movq	8(%r13), %rax
	movq	(%rax), %rax
	.loc	3 503 5
	testq	%rax, %rax
	je	.LBB32_7
.Ltmp733:
	movq	(%rax), %rdi
	leaq	48(%rsp), %rax
	.loc	3 503 12
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.281, %esi
	movl	$8, %edx
	callq	log.Logger.Printf
.Ltmp734:
.LBB32_6:
	.loc	3 0 12
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	.loc	3 505 10 is_stmt 1
	movq	16(%r13), %rax
	movq	(%rax), %rsi
	leaq	112(%rsp), %rdi
	.loc	3 505 14 is_stmt 0
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	archive_zip.Writer.Create
	movups	112(%rsp), %xmm0
	movups	128(%rsp), %xmm1
	movaps	%xmm1, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	.loc	3 505 3
	movaps	%xmm0, 144(%rsp)
	movaps	%xmm1, 160(%rsp)
	movups	%xmm0, (%r12)
	movups	%xmm1, 16(%r12)
	movq	%r12, %rax
	addq	$176, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp735:
	.cfi_def_cfa_offset 8
	retq
.Ltmp736:
.LBB32_7:
	.cfi_def_cfa_offset 224
	.loc	3 0 3
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end32:
	.size	command_line_arguments.BuildJar..func2, .Lfunc_end32-command_line_arguments.BuildJar..func2
	.cfi_endproc

	.section	.text.command_line_arguments.BuildJar..func3,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.BuildJar..func3,@function
command_line_arguments.BuildJar..func3:
.Lfunc_begin33:
	.loc	3 513 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception2
	cmpq	%fs:112, %rsp
	ja	.LBB33_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB33_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$104, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movb	$0, 15(%rsp)
	movb	$1, %bpl
.Ltmp760:
	.loc	3 514 10 prologue_end
	testq	%r8, %r8
	je	.LBB33_8
.Ltmp761:
	.loc	3 0 10 is_stmt 0
	movq	%r9, %r13
	movq	%r8, %rbx
.Ltmp762:
	leaq	15(%rsp), %r15
.Ltmp763:
	jmp	.LBB33_26
.Ltmp764:
.LBB33_8:
	movq	%rsi, %r14
	movq	%rdi, %r15
.Ltmp765:
	movq	%r10, %r12
.Ltmp737:
	.loc	3 517 10 is_stmt 1
	movq	%rcx, %rdi
	callq	*8(%rdx)
.Ltmp766:
.Ltmp738:
	.loc	3 0 10 is_stmt 0
	testb	$1, %al
	jne	.LBB33_7
.Ltmp767:
	.loc	3 520 52 is_stmt 1
	movq	16(%r12), %rax
	.loc	3 520 48 is_stmt 0
	movq	8(%rax), %rdx
	.loc	3 520 47
	addq	$1, %rdx
	js	.LBB33_11
.Ltmp768:
.Ltmp739:
	movq	$-1, %rcx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	__go_string_slice
.Ltmp740:
.Ltmp769:
	.loc	3 0 47
	movq	%rax, %rdi
	movq	%rdx, %rsi
	jmp	.LBB33_12
.Ltmp770:
.LBB33_11:
.Ltmp741:
	.loc	3 520 47
	movl	$5, %edi
	callq	__go_runtime_error
.Ltmp742:
.Ltmp771:
.LBB33_12:
.Ltmp743:
	.loc	3 520 35
	callq	path_filepath.ToSlash
.Ltmp744:
.Ltmp772:
	.loc	3 520 15
	movq	8(%r12), %rcx
	movq	(%rcx), %r10
.Ltmp745:
	leaq	48(%rsp), %rdi
	movq	%rax, %rsi
	callq	*(%r10)
.Ltmp746:
.Ltmp773:
	movq	64(%rsp), %rbx
.Ltmp774:
	.loc	3 521 10 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB33_18
.Ltmp775:
	.loc	3 520 15
	movq	72(%rsp), %r13
.Ltmp776:
	.loc	3 0 15 is_stmt 0
	leaq	15(%rsp), %r15
	jmp	.LBB33_26
.Ltmp777:
.LBB33_18:
	movq	48(%rsp), %r12
.Ltmp778:
	movq	56(%rsp), %r13
.Ltmp779:
.Ltmp747:
	leaq	24(%rsp), %rdi
	.loc	3 524 17 is_stmt 1
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	os.Open
.Ltmp748:
.Ltmp780:
	movq	32(%rsp), %rbx
.Ltmp781:
	.loc	3 525 10
	testq	%rbx, %rbx
	je	.LBB33_21
.Ltmp782:
	.loc	3 524 17
	movq	40(%rsp), %r13
.Ltmp783:
	.loc	3 0 17 is_stmt 0
	leaq	15(%rsp), %r15
	jmp	.LBB33_26
.Ltmp784:
.LBB33_21:
	movq	24(%rsp), %rbx
.Ltmp785:
	.loc	3 528 3 is_stmt 1
	movq	%rbx, 16(%rsp)
.Ltmp749:
	leaq	15(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk2, %esi
	callq	runtime.deferproc
.Ltmp750:
.Ltmp786:
.Ltmp751:
	.loc	3 0 3 is_stmt 0
	leaq	80(%rsp), %rdi
	.loc	3 529 15 is_stmt 1
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %ecx
	movq	%r12, %rsi
	movq	%r13, %rdx
	movq	%rbx, %r8
	callq	io.Copy
.Ltmp752:
.Ltmp787:
	movq	88(%rsp), %rbx
.Ltmp788:
	movq	96(%rsp), %r13
.Ltmp789:
	.loc	3 0 15 is_stmt 0
	leaq	15(%rsp), %r15
	jmp	.LBB33_26
.Ltmp790:
.LBB33_6:
.Ltmp753:
.Ltmp754:
	leaq	15(%rsp), %rdi
	.loc	3 531 2 is_stmt 1
	callq	runtime.checkdefer
.Ltmp755:
.LBB33_7:
	.loc	3 0 2 is_stmt 0
	xorl	%ebx, %ebx
	xorl	%r13d, %r13d
.Ltmp791:
	leaq	15(%rsp), %r15
	jmp	.LBB33_26
.Ltmp792:
.LBB33_24:
.Ltmp756:
	movq	%rax, %r14
	xorl	%ebx, %ebx
	xorl	%r13d, %r13d
	xorl	%ebp, %ebp
.Ltmp793:
	leaq	15(%rsp), %r15
	jmp	.LBB33_26
.Ltmp794:
.LBB33_25:
.Ltmp759:
	.loc	3 531 2
	movq	%r15, %rdi
	callq	runtime.checkdefer
.Ltmp795:
	.p2align	4, 0x90
.LBB33_26:
.Ltmp757:
	movq	%r15, %rdi
	callq	runtime.deferreturn
.Ltmp758:
.Ltmp796:
	.loc	3 0 2
	testb	%bpl, %bpl
	je	.LBB33_29
.Ltmp797:
	.loc	3 515 4 is_stmt 1
	movq	%rbx, %rax
	movq	%r13, %rdx
	addq	$104, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp798:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp799:
.LBB33_29:
	.cfi_def_cfa_offset 160
	.loc	3 0 4 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end33:
	.size	command_line_arguments.BuildJar..func3, .Lfunc_end33-command_line_arguments.BuildJar..func3
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table33:
.Lexception2:
	.byte	255
	.byte	3
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin33-.Lfunc_begin33
	.uleb128 .Ltmp737-.Lfunc_begin33
	.byte	0
	.byte	0
	.uleb128 .Ltmp737-.Lfunc_begin33
	.uleb128 .Ltmp752-.Ltmp737
	.uleb128 .Ltmp753-.Lfunc_begin33
	.byte	1
	.uleb128 .Ltmp754-.Lfunc_begin33
	.uleb128 .Ltmp755-.Ltmp754
	.uleb128 .Ltmp756-.Lfunc_begin33
	.byte	0
	.uleb128 .Ltmp755-.Lfunc_begin33
	.uleb128 .Ltmp757-.Ltmp755
	.byte	0
	.byte	0
	.uleb128 .Ltmp757-.Lfunc_begin33
	.uleb128 .Ltmp758-.Ltmp757
	.uleb128 .Ltmp759-.Lfunc_begin33
	.byte	1
	.uleb128 .Ltmp758-.Lfunc_begin33
	.uleb128 .Lfunc_end33-.Ltmp758
	.byte	0
	.byte	0
.Lcst_end2:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase2:
	.p2align	2

	.section	.text.command_line_arguments.command_line_arguments..thunk2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk2,@function
command_line_arguments.command_line_arguments..thunk2:
.Lfunc_begin34:
	.loc	3 528 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB34_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB34_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp800:
	.loc	3 528 3 prologue_end
	movl	$.Ltmp801, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB34_4
.Ltmp802:
	movq	(%rbx), %rdi
	callq	os.File.Close
.Ltmp803:
.Ltmp801:
.LBB34_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp804:
	.cfi_def_cfa_offset 8
	retq
.Ltmp805:
.Lfunc_end34:
	.size	command_line_arguments.command_line_arguments..thunk2, .Lfunc_end34-command_line_arguments.command_line_arguments..thunk2
	.cfi_endproc

	.section	.text.command_line_arguments.ParseTargets,"ax",@progbits
	.globl	command_line_arguments.ParseTargets
	.p2align	4, 0x90
	.type	command_line_arguments.ParseTargets,@function
command_line_arguments.ParseTargets:
.Lfunc_begin35:
	.loc	4 19 0
	.cfi_startproc
	leaq	-296(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB35_2
	movq	%r10, %rax
	movabsq	$296, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB35_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$248, %rsp
	.cfi_def_cfa_offset 304
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rax
	movq	%rdi, %rcx
.Ltmp806:
	leaq	224(%rsp), %rdi
.Ltmp807:
	.loc	4 20 26 prologue_end
	movq	%rcx, %rsi
.Ltmp808:
	movq	%rax, %rdx
.Ltmp809:
	callq	strings.Fields
.Ltmp810:
	.loc	4 0 26 is_stmt 0
	movq	232(%rsp), %r13
.Ltmp811:
	.loc	4 21 23 is_stmt 1
	testq	%r13, %r13
	je	.LBB35_22
.Ltmp812:
	.loc	4 0 23 is_stmt 0
	movq	224(%rsp), %r12
.Ltmp813:
	.loc	4 28 13 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	xorl	%esi, %esi
	movl	$16, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %rbx
.Ltmp814:
	.loc	4 29 2
	testq	%r13, %r13
	jg	.LBB35_4
	jmp	.LBB35_9
.Ltmp815:
.LBB35_22:
	.loc	4 0 2 is_stmt 0
	movups	.Lconst.287(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
	leaq	208(%rsp), %r12
.Ltmp816:
	.loc	4 28 13 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	xorl	%esi, %esi
	movl	$16, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %rbx
	movl	$1, %r13d
.LBB35_4:
	.loc	4 0 13 is_stmt 0
	addq	$8, %r12
	xorl	%ebp, %ebp
	jmp	.LBB35_5
.LBB35_15:
.Ltmp817:
	.loc	4 40 3 is_stmt 1
	movl	$.Lconst.285, %edx
	movl	$3, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB35_17
.Ltmp818:
	.loc	4 0 3 is_stmt 0
	movups	.Lconst.304(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	.loc	4 41 19 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	96(%rsp), %rdx
	callq	runtime.mapassign
	movups	.Lconst.306(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	.loc	4 42 23
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	80(%rsp), %rdx
	callq	runtime.mapassign
	movups	.Lconst.308(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	4 43 25
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	64(%rsp), %rdx
	callq	runtime.mapassign
	movups	.Lconst.310(%rip), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	4 45 25
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	48(%rsp), %rdx
	jmp	.LBB35_7
.Ltmp819:
.LBB35_17:
	.loc	4 46 3
	movl	$.Lconst.305, %edx
	movl	$7, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB35_21
.Ltmp820:
	movl	$.Lconst.307, %edx
	movl	$9, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB35_21
.Ltmp821:
	movl	$.Lconst.311, %edx
	movl	$7, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB35_21
.Ltmp822:
	movl	$.Lconst.309, %edx
	movl	$9, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB35_8
.Ltmp823:
.LBB35_21:
	.loc	4 0 3 is_stmt 0
	movups	.Lconst.304(%rip), %xmm0
	movaps	%xmm0, 32(%rsp)
	.loc	4 47 19 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	32(%rsp), %rdx
	callq	runtime.mapassign
	movq	%r15, (%rsp)
	movq	%r14, 8(%rsp)
	.loc	4 48 15
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	movq	%rsp, %rdx
	jmp	.LBB35_7
.Ltmp824:
	.p2align	4, 0x90
.LBB35_5:
	.loc	4 29 2
	movq	-8(%r12), %r15
.Ltmp825:
	movq	(%r12), %r14
.Ltmp826:
	.loc	4 31 3
	movl	$.Lconst.284, %edx
	movl	$7, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB35_10
.Ltmp827:
	.loc	4 0 3 is_stmt 0
	movups	.Lconst.295(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	.loc	4 32 23 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.mapassign
	movups	.Lconst.297(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	.loc	4 33 27
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	176(%rsp), %rdx
	callq	runtime.mapassign
	movups	.Lconst.299(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	.loc	4 34 29
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	160(%rsp), %rdx
	callq	runtime.mapassign
	movups	.Lconst.301(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	.loc	4 35 27
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	144(%rsp), %rdx
	callq	runtime.mapassign
	movups	.Lconst.303(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	4 36 29
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	128(%rsp), %rdx
	jmp	.LBB35_7
.Ltmp828:
	.p2align	4, 0x90
.LBB35_10:
	.loc	4 37 3
	movl	$.Lconst.296, %edx
	movl	$11, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB35_14
.Ltmp829:
	movl	$.Lconst.298, %edx
	movl	$13, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB35_14
.Ltmp830:
	movl	$.Lconst.300, %edx
	movl	$11, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB35_14
.Ltmp831:
	movl	$.Lconst.302, %edx
	movl	$13, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB35_15
.Ltmp832:
	.p2align	4, 0x90
.LBB35_14:
	.loc	4 0 3 is_stmt 0
	movups	.Lconst.295(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	.loc	4 38 23 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	112(%rsp), %rdx
	callq	runtime.mapassign
	movq	%r15, 16(%rsp)
	movq	%r14, 24(%rsp)
	.loc	4 39 15
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	leaq	16(%rsp), %rdx
.Ltmp833:
.LBB35_7:
	.loc	4 0 15 is_stmt 0
	callq	runtime.mapassign
.LBB35_8:
	.loc	4 29 2 is_stmt 1
	addq	$1, %rbp
	addq	$16, %r12
	cmpq	%r13, %rbp
	jl	.LBB35_5
.Ltmp834:
.LBB35_9:
	.loc	4 51 2
	movq	%rbx, %rax
	addq	$248, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp835:
.Lfunc_end35:
	.size	command_line_arguments.ParseTargets, .Lfunc_end35-command_line_arguments.ParseTargets
	.cfi_endproc

	.section	.text.command_line_arguments.Build,"ax",@progbits
	.globl	command_line_arguments.Build
	.p2align	4, 0x90
	.type	command_line_arguments.Build,@function
command_line_arguments.Build:
.Lfunc_begin36:
	.loc	4 54 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB36_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB36_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$88, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
.Ltmp836:
	leaq	56(%rsp), %rdi
.Ltmp837:
	.loc	4 55 17 prologue_end
	movl	$.Lconst.313, %edx
	movl	$18, %ecx
	movq	%rbx, %rsi
	callq	command_line_arguments.PackageDir
.Ltmp838:
	movq	72(%rsp), %rax
.Ltmp839:
	movq	80(%rsp), %rdx
.Ltmp840:
	.loc	4 0 17 is_stmt 0
	movups	56(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	.loc	4 56 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB36_7
.Ltmp841:
	.loc	4 60 7
	testq	%rbx, %rbx
	je	.LBB36_8
.Ltmp842:
	.loc	4 0 7 is_stmt 0
	leaq	112(%rsp), %r14
	.loc	4 60 7
	leaq	48(%rbx), %rsi
	.loc	4 60 15
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB36_9
.Ltmp843:
	.loc	4 0 15
	leaq	32(%rsp), %rdx
.Ltmp844:
	.loc	4 60 15
	movl	$string..d, %edi
	callq	runtime.typedmemmove
.Ltmp845:
	.loc	4 0 15
	jmp	.LBB36_6
.Ltmp846:
.LBB36_9:
	.loc	4 60 15
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp847:
.LBB36_6:
	.loc	4 61 9 is_stmt 1
	movq	16(%r14), %rax
	movq	%rax, 16(%rsp)
	movups	(%r14), %xmm0
	movups	%xmm0, (%rsp)
	movq	%rbx, %rdi
	callq	command_line_arguments.Bind
.Ltmp848:
.LBB36_7:
	.loc	4 0 9 is_stmt 0
	addq	$88, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp849:
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Ltmp850:
.LBB36_8:
	.cfi_def_cfa_offset 112
	.loc	4 60 7 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp851:
.Lfunc_end36:
	.size	command_line_arguments.Build, .Lfunc_end36-command_line_arguments.Build
	.cfi_endproc

	.section	.text.command_line_arguments.PackageDir,"ax",@progbits
	.globl	command_line_arguments.PackageDir
	.p2align	4, 0x90
	.type	command_line_arguments.PackageDir,@function
command_line_arguments.PackageDir:
.Lfunc_begin37:
	.loc	6 136 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB37_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB37_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$144, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r12
.Ltmp852:
	.loc	6 137 6 prologue_end
	movq	%rsi, %rdi
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 137 2 is_stmt 0
	testb	$1, %al
	je	.LBB37_5
.Ltmp853:
	.loc	6 138 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%r15, 72(%rsp)
	movq	%r14, 80(%rsp)
	leaq	72(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 56(%rsp)
	movq	%r13, 64(%rsp)
	.loc	6 138 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB37_12
.Ltmp854:
	movq	(%rbx), %rdi
	leaq	56(%rsp), %rax
	.loc	6 138 11
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.468, %esi
	movl	$18, %edx
	callq	log.Logger.Printf
.Ltmp855:
.LBB37_5:
	.loc	6 140 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 140 2 is_stmt 0
	testb	$1, %al
	jne	.LBB37_6
.Ltmp856:
	.loc	6 147 21 is_stmt 1
	movups	.Lconst.472(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movq	%r15, 128(%rsp)
	movq	%r14, 136(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
.Ltmp857:
	xorl	%edi, %edi
.Ltmp858:
	callq	runtime.concatstring2
.Ltmp859:
	.loc	6 147 2 is_stmt 0
	movq	%rax, (%r12)
	movq	%rdx, 8(%r12)
	jmp	.LBB37_10
.Ltmp860:
.LBB37_6:
	.loc	6 141 28 is_stmt 1
	movq	$1, (%rsp)
	leaq	88(%rsp), %rdi
	movl	$go_build.Default, %esi
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	go_build.Context.Import
	movq	96(%rsp), %rax
.Ltmp861:
	.loc	6 142 10
	testq	%rax, %rax
	je	.LBB37_8
.Ltmp862:
	.loc	6 141 28
	movq	104(%rsp), %rcx
	.loc	6 143 4
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r12)
	movq	%rax, 16(%r12)
	movq	%rcx, 24(%r12)
	jmp	.LBB37_11
.Ltmp863:
.LBB37_8:
	.loc	6 0 4 is_stmt 0
	movq	88(%rsp), %rax
.Ltmp864:
	.loc	6 145 13 is_stmt 1
	testq	%rax, %rax
	je	.LBB37_12
.Ltmp865:
	.loc	6 0 13 is_stmt 0
	movups	(%rax), %xmm0
	.loc	6 145 3
	movups	%xmm0, (%r12)
.Ltmp866:
.LBB37_10:
	.loc	6 0 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r12)
.Ltmp867:
.LBB37_11:
	movq	%r12, %rax
	addq	$144, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp868:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp869:
	.cfi_def_cfa_offset 8
	retq
.LBB37_12:
	.cfi_def_cfa_offset 192
.Ltmp870:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end37:
	.size	command_line_arguments.PackageDir, .Lfunc_end37-command_line_arguments.PackageDir
	.cfi_endproc

	.section	.text.command_line_arguments.Bind,"ax",@progbits
	.globl	command_line_arguments.Bind
	.p2align	4, 0x90
	.type	command_line_arguments.Bind,@function
command_line_arguments.Bind:
.Lfunc_begin38:
	.loc	4 64 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception3
	leaq	-4760(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB38_2
	movq	%r10, %rax
	movabsq	$4760, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB38_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$4712, %rsp
	.cfi_def_cfa_offset 4768
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbp
	movb	$0, 127(%rsp)
.Ltmp871:
.Ltmp1350:
	.loc	4 64 11 prologue_end
	movl	$type...1command_line_arguments.Flags, %edi
	callq	runtime.newobject
	movq	%rax, 104(%rsp)
.Ltmp872:
.Ltmp1351:
	.loc	4 0 11 is_stmt 0
	movq	%rbp, 984(%rsp)
.Ltmp873:
.Ltmp1352:
	leaq	984(%rsp), %rdx
	.loc	4 64 11
	movl	$type...1command_line_arguments.Flags, %edi
	movq	104(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp874:
.Ltmp1353:
	.loc	4 65 26 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp1354:
	.loc	4 65 31 is_stmt 0
	testq	%rbp, %rbp
	jne	.LBB38_6
.Ltmp1355:
.Ltmp875:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp876:
.Ltmp1356:
.LBB38_6:
	.loc	4 65 13
	movq	72(%rbp), %rdi
	movq	80(%rbp), %rsi
.Ltmp877:
	callq	command_line_arguments.ParseTargets
.Ltmp878:
.Ltmp1357:
	.loc	4 0 13
	movq	%rax, %rbx
	.loc	4 68 27 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp879:
	.loc	4 68 9 is_stmt 0
	callq	command_line_arguments.validateGoInstall
.Ltmp880:
.Ltmp1358:
	.loc	4 0 9
	movq	%rax, %r13
	.loc	4 69 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB38_21
.Ltmp1359:
	.loc	4 0 9 is_stmt 0
	movq	%rdx, %rbp
.Ltmp1360:
	movb	$1, %r15b
	jmp	.LBB38_10
.Ltmp1361:
.LBB38_21:
	.loc	4 74 28 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp881:
	leaq	3832(%rsp), %rdi
	.loc	4 74 18 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	command_line_arguments.NewTmpDir
.Ltmp882:
.Ltmp1362:
	movq	3848(%rsp), %r13
.Ltmp1363:
	movq	3856(%rsp), %rbp
.Ltmp1364:
	.loc	4 0 18
	movups	3832(%rsp), %xmm0
	movaps	%xmm0, 2128(%rsp)
.Ltmp883:
	.loc	4 74 2
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, 176(%rsp)
.Ltmp884:
.Ltmp1365:
	.loc	4 74 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_24
.Ltmp1366:
.Ltmp885:
	.loc	4 0 18
	leaq	2128(%rsp), %rdx
	.loc	4 74 18
	movl	$string..d, %edi
	movq	176(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp886:
	jmp	.LBB38_28
.Ltmp1367:
.LBB38_24:
	cmpq	$0, 176(%rsp)
	jne	.LBB38_26
.Ltmp1368:
.Ltmp887:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp888:
.Ltmp1369:
.LBB38_26:
	movaps	2128(%rsp), %xmm0
	movq	176(%rsp), %rax
	movups	%xmm0, (%rax)
.Ltmp1370:
.LBB38_28:
	.loc	4 0 18
	movb	$1, %r15b
	.loc	4 75 9 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_10
.Ltmp1371:
	.loc	4 78 6
	movq	104(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp1372:
	.loc	4 78 11 is_stmt 0
	testq	%rbp, %rbp
	jne	.LBB38_31
.Ltmp1373:
.Ltmp889:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp890:
.Ltmp1374:
.LBB38_31:
	.loc	4 78 5
	cmpb	$0, 13(%rbp)
	jne	.LBB38_33
.Ltmp1375:
	.loc	4 0 5
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 1216(%rsp)
	movq	$0, 1232(%rsp)
	.loc	4 79 19 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rax
	.loc	4 79 3 is_stmt 0
	movq	%rax, 1216(%rsp)
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movups	%xmm0, 1224(%rsp)
.Ltmp891:
	leaq	127(%rsp), %rdi
	leaq	1216(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk3, %esi
	callq	runtime.deferproc
.Ltmp892:
.Ltmp1376:
.LBB38_33:
	.loc	4 83 38 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp893:
	leaq	3800(%rsp), %rdi
	.loc	4 83 24 is_stmt 0
	callq	command_line_arguments.MatchaPkgPath
.Ltmp894:
.Ltmp1377:
	movq	3816(%rsp), %r13
.Ltmp1378:
	movq	3824(%rsp), %rbp
.Ltmp1379:
	.loc	4 0 24
	movups	3800(%rsp), %xmm0
	movaps	%xmm0, 2112(%rsp)
.Ltmp895:
	.loc	4 83 2
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, 296(%rsp)
.Ltmp896:
.Ltmp1380:
	.loc	4 83 24
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_36
.Ltmp1381:
.Ltmp897:
	.loc	4 0 24
	leaq	2112(%rsp), %rdx
	.loc	4 83 24
	movl	$string..d, %edi
	movq	296(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp898:
.Ltmp1382:
	.loc	4 84 9 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_10
	jmp	.LBB38_41
.Ltmp1383:
.LBB38_36:
	.loc	4 83 24
	cmpq	$0, 296(%rsp)
	jne	.LBB38_38
.Ltmp1384:
.Ltmp899:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp900:
.Ltmp1385:
.LBB38_38:
	movaps	2112(%rsp), %xmm0
	movq	296(%rsp), %rax
	movups	%xmm0, (%rax)
	.loc	4 84 9
	testq	%r13, %r13
	jne	.LBB38_10
.Ltmp1386:
.LBB38_41:
	.loc	4 89 52
	movq	296(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4320(%rsp)
	movups	.Lconst.318(%rip), %xmm0
	movaps	%xmm0, 4336(%rsp)
	leaq	4320(%rsp), %rax
	movq	%rax, 1248(%rsp)
	movq	$2, 1256(%rsp)
	movq	$2, 1264(%rsp)
.Ltmp901:
	movq	1264(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1248(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp902:
.Ltmp1387:
	.loc	4 0 52 is_stmt 0
	movq	%rdx, %rcx
	.loc	4 89 36
	movq	104(%rsp), %rdx
	movq	(%rdx), %rsi
.Ltmp903:
	leaq	3960(%rsp), %rdi
	.loc	4 89 27
	movq	%rax, %rdx
	callq	command_line_arguments.ReadFile
.Ltmp904:
.Ltmp1388:
	.loc	4 0 27
	movups	3960(%rsp), %xmm0
	movaps	%xmm0, 2272(%rsp)
	movq	3976(%rsp), %rax
	movq	%rax, 2288(%rsp)
	.loc	4 90 9 is_stmt 1
	cmpq	$0, 3984(%rsp)
	je	.LBB38_46
.Ltmp1389:
.Ltmp905:
	.loc	4 91 17
	movl	$.Lconst.319, %edi
	movl	$48, %esi
	callq	errors.New
.Ltmp906:
.Ltmp1390:
.LBB38_45:
	.loc	4 0 17 is_stmt 0
	movq	%rax, %r13
	movq	%rdx, %rbp
.Ltmp1391:
	leaq	127(%rsp), %rbx
	jmp	.LBB38_553
.Ltmp1392:
.LBB38_46:
	.loc	4 95 30 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp907:
	leaq	3760(%rsp), %rdi
	.loc	4 95 20 is_stmt 0
	callq	command_line_arguments.GoVersion
.Ltmp908:
.Ltmp1393:
	movq	3784(%rsp), %r13
.Ltmp1394:
	movq	3792(%rsp), %rbp
.Ltmp1395:
	.loc	4 0 20
	movups	3760(%rsp), %xmm0
	movaps	%xmm0, 2240(%rsp)
	movq	3776(%rsp), %rax
	movq	%rax, 2256(%rsp)
	.loc	4 96 9 is_stmt 1
	testq	%r13, %r13
	je	.LBB38_48
.Ltmp1396:
.LBB38_10:
	.loc	4 0 9 is_stmt 0
	leaq	127(%rsp), %rbx
	jmp	.LBB38_553
.Ltmp1397:
.LBB38_48:
.Ltmp909:
	.loc	4 101 12 is_stmt 1
	movq	2256(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	2240(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	2288(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	2272(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.Equal
.Ltmp910:
.Ltmp1398:
	.loc	4 101 5 is_stmt 0
	testb	%al, %al
	jne	.LBB38_53
.Ltmp1399:
	.loc	4 101 50
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp911:
	.loc	4 101 55
	callq	command_line_arguments.Flags.ShouldRun
.Ltmp912:
.Ltmp1400:
	.loc	4 101 2
	testb	$1, %al
	jne	.LBB38_52
.Ltmp1401:
.LBB38_53:
	.loc	4 106 20 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp915:
	leaq	2816(%rsp), %rdi
	.loc	4 106 14 is_stmt 0
	callq	command_line_arguments.Getwd
.Ltmp916:
.Ltmp1402:
	movq	2832(%rsp), %r13
.Ltmp1403:
	.loc	4 107 9 is_stmt 1
	testq	%r13, %r13
	je	.LBB38_56
.Ltmp1404:
	.loc	4 106 14
	movq	2840(%rsp), %rbp
.Ltmp1405:
	.loc	4 0 14 is_stmt 0
	leaq	127(%rsp), %rbx
	jmp	.LBB38_553
.Ltmp1406:
.LBB38_56:
	movq	2816(%rsp), %rax
.Ltmp1407:
	movq	%rax, 160(%rsp)
	movq	2824(%rsp), %rax
.Ltmp1408:
	.loc	4 112 2 is_stmt 1
	movq	%rax, 192(%rsp)
.Ltmp917:
	movl	$go_build.Context..d, %edi
	callq	runtime.newobject
.Ltmp918:
.Ltmp1409:
	.loc	4 0 2 is_stmt 0
	movq	%rax, %r12
	.loc	4 112 15
	cmpl	$0, runtime.writeBarrier(%rip)
	movq	%r12, 112(%rsp)
	je	.LBB38_58
.Ltmp1410:
.Ltmp919:
	movl	$go_build.Context..d, %edi
	movl	$go_build.Default, %edx
	movq	%r12, %rsi
	callq	runtime.typedmemmove
.Ltmp920:
	jmp	.LBB38_62
.Ltmp1411:
.LBB38_52:
.Ltmp913:
	.loc	4 102 17 is_stmt 1
	movl	$.Lconst.321, %edi
	movl	$40, %esi
	callq	errors.New
.Ltmp914:
	jmp	.LBB38_45
.Ltmp1412:
.LBB38_58:
	.loc	4 112 15
	testq	%r12, %r12
	jne	.LBB38_60
.Ltmp1413:
.Ltmp921:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp922:
.Ltmp1414:
.LBB38_60:
	movl	$go_build.Default, %esi
	movl	$208, %edx
	movq	112(%rsp), %rdi
	callq	memcpy
.Ltmp1415:
.LBB38_62:
	.loc	4 113 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_63
.Ltmp1416:
.Ltmp923:
	movl	$string..d, %edi
	movl	$.Lconst.65, %edx
	movq	112(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp924:
	jmp	.LBB38_67
.Ltmp1417:
.LBB38_63:
	testq	%r12, %r12
	jne	.LBB38_65
.Ltmp1418:
.Ltmp925:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp926:
.Ltmp1419:
.LBB38_65:
	movups	.Lconst.65(%rip), %xmm0
	movq	112(%rsp), %rax
	movups	%xmm0, (%rax)
.Ltmp1420:
.LBB38_67:
	.loc	4 114 5
	leaq	16(%r12), %rsi
	.loc	4 114 11 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_556
.Ltmp1421:
.Ltmp927:
	movl	$string..d, %edi
	movl	$.Lconst.324, %edx
	callq	runtime.typedmemmove
.Ltmp928:
	jmp	.LBB38_69
.Ltmp1422:
.LBB38_556:
	movups	.Lconst.324(%rip), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1423:
.LBB38_69:
	.loc	4 0 11
	movq	112(%rsp), %rax
	movups	88(%rax), %xmm0
	movaps	%xmm0, 688(%rsp)
	movq	104(%rax), %rax
	movq	%rax, 704(%rsp)
	.loc	4 115 18 is_stmt 1
	movq	696(%rsp), %rbp
	movups	.Lconst.326(%rip), %xmm0
	movaps	%xmm0, 2096(%rsp)
	leaq	1(%rbp), %r13
.Ltmp1424:
	cmpq	%rax, %r13
	jbe	.LBB38_79
.Ltmp1425:
.Ltmp931:
	movq	704(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	688(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2664(%rsp), %rdi
	movl	$string..d, %esi
	movq	%r13, %rdx
	callq	runtime.growslice
.Ltmp932:
.Ltmp1426:
	.loc	4 0 18 is_stmt 0
	movq	2664(%rsp), %r14
	movq	2672(%rsp), %r13
	movq	2680(%rsp), %rax
	jmp	.LBB38_72
.Ltmp1427:
.LBB38_79:
	.loc	4 115 18
	cmpq	%rax, %r13
	jg	.LBB38_81
.Ltmp1428:
	.loc	4 0 18
	movq	%rax, %rcx
	orq	%r13, %rcx
	js	.LBB38_81
.Ltmp1429:
	.loc	4 115 18
	movq	688(%rsp), %r14
	jmp	.LBB38_72
.Ltmp1430:
.LBB38_81:
.Ltmp929:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp930:
.Ltmp1431:
.LBB38_72:
	movq	%r14, 688(%rsp)
	movq	%r13, 696(%rsp)
	movq	%rax, 704(%rsp)
	testq	%rbp, %rbp
	js	.LBB38_74
.Ltmp1432:
	.loc	4 0 18
	cmpq	%r13, %rbp
	jl	.LBB38_75
.Ltmp1433:
.LBB38_74:
.Ltmp933:
	.loc	4 115 18
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp934:
.Ltmp1434:
.LBB38_75:
	shlq	$4, %rbp
	addq	%rbp, %r14
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_76
.Ltmp1435:
.Ltmp935:
	.loc	4 0 18
	leaq	2096(%rsp), %rdx
	.loc	4 115 18
	movl	$string..d, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
.Ltmp936:
	jmp	.LBB38_85
.Ltmp1436:
.LBB38_76:
	testq	%r14, %r14
	jne	.LBB38_78
.Ltmp1437:
.Ltmp937:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp938:
.Ltmp1438:
.LBB38_78:
	movaps	2096(%rsp), %xmm0
	movups	%xmm0, (%r14)
.Ltmp1439:
.LBB38_85:
	.loc	4 0 18
	addq	$88, %r12
	movq	704(%rsp), %rax
	movq	%rax, 1200(%rsp)
	movaps	688(%rsp), %xmm0
	movaps	%xmm0, 1184(%rsp)
	.loc	4 115 16
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_557
.Ltmp1440:
.Ltmp939:
	.loc	4 0 16
	leaq	1184(%rsp), %rdx
	.loc	4 115 16
	movl	$type...6.7string, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
.Ltmp940:
	jmp	.LBB38_87
.Ltmp1441:
.LBB38_557:
	movq	1200(%rsp), %rax
	movq	%rax, 16(%r12)
	movaps	1184(%rsp), %xmm0
	movups	%xmm0, (%r12)
.Ltmp1442:
.LBB38_87:
.Ltmp941:
	.loc	4 118 17 is_stmt 1
	movl	$type...60x.7string, %edi
	callq	runtime.newobject
.Ltmp942:
.Ltmp1443:
	.loc	4 0 17 is_stmt 0
	leaq	4768(%rsp), %rcx
	.loc	4 118 17
	movq	%rax, 432(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 440(%rsp)
	.loc	4 119 9 is_stmt 1
	movq	8(%rcx), %rax
	movq	%rax, 288(%rsp)
	.loc	4 119 15 is_stmt 0
	testq	%rax, %rax
	movq	%rbx, 200(%rsp)
	je	.LBB38_89
.Ltmp1444:
	.loc	4 0 15
	movaps	%xmm0, 208(%rsp)
	movq	288(%rsp), %rbx
	jle	.LBB38_125
.Ltmp1445:
	leaq	4768(%rsp), %rax
	movq	(%rax), %r13
	xorl	%r14d, %r14d
.Ltmp1446:
.LBB38_94:
	.loc	4 122 3 is_stmt 1
	movups	(%r13), %xmm0
	movaps	%xmm0, 208(%rsp)
	.loc	4 123 13
	movq	208(%rsp), %rdi
	movq	216(%rsp), %rsi
.Ltmp943:
	callq	path.Clean
.Ltmp944:
.Ltmp1447:
	.loc	4 123 6 is_stmt 0
	movq	%rax, 208(%rsp)
	movq	%rdx, 216(%rsp)
	movups	432(%rsp), %xmm0
	movaps	%xmm0, 656(%rsp)
	movq	448(%rsp), %rax
	movq	%rax, 672(%rsp)
	.loc	4 124 18 is_stmt 1
	movq	664(%rsp), %r12
	leaq	1(%r12), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB38_120
.Ltmp1448:
.Ltmp947:
	movq	672(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	656(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	2616(%rsp), %rdi
	callq	runtime.growslice
.Ltmp948:
.Ltmp1449:
	.loc	4 0 18 is_stmt 0
	movq	2616(%rsp), %rbp
	movq	2624(%rsp), %rdx
	movq	2632(%rsp), %rax
	jmp	.LBB38_113
.Ltmp1450:
.LBB38_120:
	.loc	4 124 18
	cmpq	%rax, %rdx
	jg	.LBB38_122
.Ltmp1451:
	.loc	4 0 18
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB38_122
.Ltmp1452:
	.loc	4 124 18
	movq	656(%rsp), %rbp
	movq	%rdx, 144(%rsp)
	movq	%rax, 152(%rsp)
	movq	%rbp, 136(%rsp)
	jmp	.LBB38_113
.Ltmp1453:
.LBB38_122:
.Ltmp945:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp946:
	movq	136(%rsp), %rbp
	movq	144(%rsp), %rdx
	movq	152(%rsp), %rax
.Ltmp1454:
.LBB38_113:
	movq	%rbp, 656(%rsp)
	movq	%rdx, 664(%rsp)
	movq	%rax, 672(%rsp)
	testq	%r12, %r12
	js	.LBB38_115
.Ltmp1455:
	.loc	4 0 18
	cmpq	%rdx, %r12
	jl	.LBB38_116
.Ltmp1456:
.LBB38_115:
.Ltmp949:
	.loc	4 124 18
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp950:
	movq	%r15, %r12
.Ltmp1457:
.LBB38_116:
	movq	%r12, %rax
	shlq	$4, %rax
	addq	%rax, %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_117
.Ltmp1458:
.Ltmp951:
	movl	$string..d, %edi
	movq	%rbp, %rsi
	leaq	208(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp952:
	jmp	.LBB38_124
.Ltmp1459:
.LBB38_117:
	testq	%rbp, %rbp
	jne	.LBB38_119
.Ltmp1460:
.Ltmp953:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp954:
	movq	168(%rsp), %rbp
.Ltmp1461:
.LBB38_119:
	movaps	208(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	movq	%rbp, 168(%rsp)
.Ltmp1462:
.LBB38_124:
	.loc	4 124 16
	movq	672(%rsp), %rax
	movq	%rax, 448(%rsp)
	movaps	656(%rsp), %xmm0
	movaps	%xmm0, 432(%rsp)
	.loc	4 122 3 is_stmt 1
	addq	$1, %r14
	addq	$16, %r13
	movq	%r12, %r15
	cmpq	%rbx, %r14
	jl	.LBB38_94
.Ltmp1463:
.LBB38_125:
	.loc	4 0 3 is_stmt 0
	movb	$1, %r15b
	jmp	.LBB38_126
.Ltmp1464:
.LBB38_89:
	movq	432(%rsp), %rax
	movq	%rax, 496(%rsp)
	movq	440(%rsp), %rax
	movq	%rax, 504(%rsp)
	movq	448(%rsp), %rax
	movq	%rax, 512(%rsp)
	.loc	4 120 17 is_stmt 1
	movq	504(%rsp), %r14
	movups	.Lconst.279(%rip), %xmm0
	movaps	%xmm0, 2080(%rsp)
	leaq	1(%r14), %rbp
	cmpq	%rax, %rbp
	jbe	.LBB38_106
.Ltmp1465:
.Ltmp958:
	movq	512(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	496(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2640(%rsp), %rdi
	movl	$string..d, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp959:
.Ltmp1466:
	.loc	4 0 17 is_stmt 0
	movq	2640(%rsp), %r13
	movq	2648(%rsp), %rbp
	movq	2656(%rsp), %rax
	jmp	.LBB38_99
.Ltmp1467:
.LBB38_106:
	.loc	4 120 17
	cmpq	%rax, %rbp
	jg	.LBB38_108
.Ltmp1468:
	.loc	4 0 17
	movq	%rax, %rcx
	orq	%rbp, %rcx
	js	.LBB38_108
.Ltmp1469:
	.loc	4 120 17
	movq	496(%rsp), %r13
	jmp	.LBB38_99
.Ltmp1470:
.LBB38_108:
.Ltmp956:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp957:
.Ltmp1471:
.LBB38_99:
	movq	%r13, 496(%rsp)
	movq	%rbp, 504(%rsp)
	movq	%rax, 512(%rsp)
	testq	%r14, %r14
	js	.LBB38_101
.Ltmp1472:
	.loc	4 0 17
	cmpq	%rbp, %r14
	jl	.LBB38_102
.Ltmp1473:
.LBB38_101:
.Ltmp960:
	.loc	4 120 17
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp961:
.Ltmp1474:
.LBB38_102:
	shlq	$4, %r14
	addq	%r14, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_103
.Ltmp1475:
.Ltmp962:
	.loc	4 0 17
	leaq	2080(%rsp), %rdx
	.loc	4 120 17
	movl	$string..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp963:
	jmp	.LBB38_111
.Ltmp1476:
.LBB38_103:
	testq	%r13, %r13
	jne	.LBB38_105
.Ltmp1477:
.Ltmp964:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp965:
.Ltmp1478:
.LBB38_105:
	movaps	2080(%rsp), %xmm0
	movups	%xmm0, (%r13)
.Ltmp1479:
.LBB38_111:
	.loc	4 120 15
	movq	512(%rsp), %rax
	movq	%rax, 448(%rsp)
	movaps	496(%rsp), %xmm0
	movaps	%xmm0, 432(%rsp)
.Ltmp1480:
.LBB38_126:
	.loc	4 129 25 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp966:
	.loc	4 129 15 is_stmt 0
	movq	448(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	432(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	3720(%rsp), %rdi
	movl	$4, %r9d
	movq	112(%rsp), %rdx
	movq	160(%rsp), %rcx
	movq	192(%rsp), %r8
	callq	command_line_arguments.ImportAll
.Ltmp967:
.Ltmp1481:
	movq	3744(%rsp), %r13
.Ltmp1482:
	movq	3752(%rsp), %rbp
.Ltmp1483:
	.loc	4 0 15
	movups	3720(%rsp), %xmm0
	movaps	%xmm0, 880(%rsp)
	movq	3736(%rsp), %rax
	movq	%rax, 896(%rsp)
	.loc	4 130 9 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_10
.Ltmp1484:
	.loc	4 0 9 is_stmt 0
	movq	888(%rsp), %r15
.Ltmp1485:
	.loc	4 135 2 is_stmt 1
	testq	%r15, %r15
	jle	.LBB38_142
.Ltmp1486:
	.loc	4 0 2 is_stmt 0
	movq	880(%rsp), %rbx
	xorl	%ebp, %ebp
.Ltmp1487:
.LBB38_131:
	.loc	4 135 2
	movq	(%rbx,%rbp,8), %r13
.Ltmp1488:
	.loc	4 136 9 is_stmt 1
	testq	%r13, %r13
	je	.LBB38_133
.Ltmp1489:
	.loc	4 0 9 is_stmt 0
	xorl	%r14d, %r14d
	movq	%r13, %r12
	jmp	.LBB38_135
.Ltmp1490:
.LBB38_133:
.Ltmp968:
	.loc	4 136 9
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp969:
.Ltmp1491:
	.loc	4 0 9
	movb	$1, %r14b
	xorl	%r13d, %r13d
.Ltmp1492:
.LBB38_135:
	.loc	4 136 15
	movq	16(%r12), %rdi
	movq	24(%r12), %rsi
.Ltmp970:
	movl	$.Lconst.329, %edx
	movl	$4, %ecx
	callq	runtime.eqstring
.Ltmp971:
.Ltmp1493:
	cmpb	$1, %al
	je	.LBB38_137
.Ltmp1494:
	.loc	4 135 2 is_stmt 1
	addq	$1, %rbp
	cmpq	%r15, %rbp
	jl	.LBB38_131
.Ltmp1495:
.LBB38_142:
	.loc	4 142 32
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp973:
	leaq	3688(%rsp), %rdi
	.loc	4 142 21 is_stmt 0
	movl	$.Lconst.333, %edx
	movl	$25, %ecx
	callq	command_line_arguments.PackageDir
.Ltmp974:
	movb	$1, %r15b
	movq	200(%rsp), %rbx
.Ltmp1496:
	movq	3704(%rsp), %r13
.Ltmp1497:
	movq	3712(%rsp), %rbp
.Ltmp1498:
	.loc	4 0 21
	movups	3688(%rsp), %xmm0
	movaps	%xmm0, 864(%rsp)
	.loc	4 143 9 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_10
.Ltmp1499:
	.loc	4 0 9 is_stmt 0
	movups	.Lconst.304(%rip), %xmm0
	movaps	%xmm0, 3312(%rsp)
.Ltmp975:
.Ltmp1500:
	leaq	3312(%rsp), %rdx
.Ltmp1501:
	.loc	4 148 5 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	callq	runtime.mapaccess2
.Ltmp976:
.Ltmp1502:
	.loc	4 148 2 is_stmt 0
	testb	$1, %dl
	jne	.LBB38_146
.Ltmp1503:
.LBB38_398:
	.loc	4 0 2
	movups	.Lconst.295(%rip), %xmm0
	movaps	%xmm0, 3200(%rsp)
.Ltmp1192:
	leaq	3200(%rsp), %rdx
.Ltmp1504:
	.loc	4 306 5 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	callq	runtime.mapaccess2
.Ltmp1193:
.Ltmp1505:
	.loc	4 306 2 is_stmt 0
	testb	$1, %dl
	jne	.LBB38_401
.Ltmp1506:
.LBB38_400:
	.loc	4 0 2
	xorl	%r13d, %r13d
	xorl	%ebp, %ebp
.Ltmp1507:
	leaq	127(%rsp), %rbx
	jmp	.LBB38_553
.Ltmp1508:
.LBB38_137:
	testb	%r14b, %r14b
	movb	$1, %r15b
	je	.LBB38_139
.Ltmp1509:
.Ltmp1335:
	.loc	4 137 73 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1336:
.Ltmp1510:
.LBB38_139:
	.loc	4 0 73 is_stmt 0
	movups	32(%r13), %xmm0
	movaps	%xmm0, 3344(%rsp)
.Ltmp1337:
	.loc	4 137 15
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp1338:
.Ltmp1511:
	.loc	4 0 15
	movq	%rax, %rbx
	movaps	3344(%rsp), %xmm0
	movaps	%xmm0, 3328(%rsp)
.Ltmp1339:
	leaq	3328(%rsp), %rdx
	.loc	4 137 15
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1340:
.Ltmp1512:
	movq	$string..d, 2224(%rsp)
	movq	%rbx, 2232(%rsp)
	leaq	2224(%rsp), %rax
	movq	%rax, 1272(%rsp)
	movq	$1, 1280(%rsp)
	movq	$1, 1288(%rsp)
.Ltmp1341:
	movq	1288(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1272(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.330, %edi
	movl	$44, %esi
	callq	fmt.Errorf
.Ltmp1342:
	jmp	.LBB38_45
.Ltmp1513:
.LBB38_146:
	.loc	4 150 34 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp977:
	.loc	4 150 13 is_stmt 0
	callq	command_line_arguments.validateXcodeInstall
.Ltmp978:
.Ltmp1514:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 150 46
	testq	%rax, %rax
	je	.LBB38_149
.Ltmp1515:
	.loc	4 0 46
	movq	%rdx, %rbp
.Ltmp1516:
	leaq	127(%rsp), %rbx
	jmp	.LBB38_553
.Ltmp1517:
.LBB38_401:
	.loc	4 308 36 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp1194:
	.loc	4 308 13 is_stmt 0
	callq	command_line_arguments.ValidateAndroidInstall
.Ltmp1195:
.Ltmp1518:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 308 48
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1519:
	.loc	4 313 25 is_stmt 1
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4192(%rsp)
	movups	.Lconst.385(%rip), %xmm0
	movaps	%xmm0, 4208(%rsp)
	leaq	4192(%rsp), %rax
	movq	%rax, 1488(%rsp)
	movq	$2, 1496(%rsp)
	movq	$2, 1504(%rsp)
.Ltmp1196:
	movq	1504(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1488(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rdx, 112(%rsp)
.Ltmp1197:
	movq	200(%rsp), %rbx
.Ltmp1520:
	.loc	4 0 25 is_stmt 0
	movq	%rax, %r15
.Ltmp1198:
	.loc	4 315 19 is_stmt 1
	movl	$type...60x.7string, %edi
	callq	runtime.newobject
.Ltmp1199:
.Ltmp1521:
	movq	%rax, 208(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 216(%rsp)
	movups	.Lconst.297(%rip), %xmm0
	movaps	%xmm0, 3184(%rsp)
.Ltmp1200:
	leaq	3184(%rsp), %rdx
.Ltmp1522:
	.loc	4 316 6
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%rbx, %rsi
	callq	runtime.mapaccess2
.Ltmp1201:
.Ltmp1523:
	.loc	4 316 3 is_stmt 0
	testb	$1, %dl
	je	.LBB38_424
.Ltmp1524:
	.loc	4 0 3
	movups	208(%rsp), %xmm0
	movaps	%xmm0, 624(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 640(%rsp)
	.loc	4 317 19 is_stmt 1
	movq	632(%rsp), %r14
	movups	.Lconst.65(%rip), %xmm0
	movaps	%xmm0, 2016(%rsp)
	leaq	1(%r14), %rbp
	cmpq	%rax, %rbp
	jbe	.LBB38_417
.Ltmp1525:
.Ltmp1204:
	movq	640(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	624(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2400(%rsp), %rdi
	movl	$string..d, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1205:
.Ltmp1526:
	.loc	4 0 19 is_stmt 0
	movq	2400(%rsp), %r13
	movq	2408(%rsp), %rbp
	movq	2416(%rsp), %rax
	jmp	.LBB38_410
.Ltmp1527:
.LBB38_149:
.Ltmp979:
	.loc	4 155 3 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, 168(%rsp)
.Ltmp980:
.Ltmp1528:
	.loc	4 155 25 is_stmt 0
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4288(%rsp)
	movups	.Lconst.336(%rip), %xmm0
	movaps	%xmm0, 4304(%rsp)
	leaq	4288(%rsp), %rax
	movq	%rax, 1296(%rsp)
	movq	$2, 1304(%rsp)
	movq	$2, 1312(%rsp)
.Ltmp981:
	movq	1312(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1296(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp982:
.Ltmp1529:
	.loc	4 0 25
	movq	%rax, 968(%rsp)
	movq	%rdx, 976(%rsp)
	.loc	4 155 25
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_152
.Ltmp1530:
.Ltmp983:
	.loc	4 0 25
	leaq	968(%rsp), %rdx
	.loc	4 155 25
	movl	$string..d, %edi
	movq	168(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp984:
	jmp	.LBB38_156
.Ltmp1531:
.LBB38_152:
	cmpq	$0, 168(%rsp)
	jne	.LBB38_154
.Ltmp1532:
.Ltmp985:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp986:
.Ltmp1533:
.LBB38_154:
	movups	968(%rsp), %xmm0
	movq	168(%rsp), %rax
	movups	%xmm0, (%rax)
.Ltmp1534:
.LBB38_156:
	.loc	4 158 29 is_stmt 1
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4256(%rsp)
	movups	.Lconst.338(%rip), %xmm0
	movaps	%xmm0, 4272(%rsp)
	leaq	4256(%rsp), %rax
	movq	%rax, 1320(%rsp)
	movq	$2, 1328(%rsp)
	movq	$2, 1336(%rsp)
.Ltmp987:
	movq	1336(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1320(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp988:
.Ltmp1535:
	.loc	4 0 29 is_stmt 0
	movq	%rax, %rbx
	movq	%rdx, %r14
.Ltmp1536:
	.loc	4 159 19 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp989:
	.loc	4 159 13 is_stmt 0
	movq	%rbx, %rsi
	callq	command_line_arguments.Mkdir
.Ltmp990:
.Ltmp1537:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 159 46
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1538:
	.loc	4 164 26 is_stmt 1
	movq	%rbx, 4384(%rsp)
	movq	%r14, 4392(%rsp)
	movups	.Lconst.340(%rip), %xmm0
	movups	%xmm0, 4400(%rsp)
	movups	%xmm0, 4416(%rsp)
	movups	.Lconst.342(%rip), %xmm0
	movups	%xmm0, 4432(%rsp)
	leaq	4384(%rsp), %rax
	movq	%rax, 1344(%rsp)
	movq	$4, 1352(%rsp)
	movq	$4, 1360(%rsp)
.Ltmp991:
	movq	1360(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1344(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp992:
.Ltmp1539:
	.loc	4 0 26 is_stmt 0
	movq	%rax, 384(%rsp)
	movq	%rdx, 392(%rsp)
.Ltmp993:
.Ltmp1540:
	.loc	4 165 35 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	path_filepath.Dir
.Ltmp994:
.Ltmp1541:
	.loc	4 165 19 is_stmt 0
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
.Ltmp995:
	.loc	4 165 13
	movq	%rax, %rsi
	callq	command_line_arguments.Mkdir
.Ltmp996:
.Ltmp1542:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 165 57
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1543:
.Ltmp997:
	.loc	4 170 3 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, 152(%rsp)
.Ltmp998:
.Ltmp1544:
	.loc	4 170 24 is_stmt 0
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4640(%rsp)
	movups	.Lconst.344(%rip), %xmm0
	movaps	%xmm0, 4656(%rsp)
	movups	.Lconst.346(%rip), %xmm0
	movaps	%xmm0, 4672(%rsp)
	movups	.Lconst.348(%rip), %xmm0
	movaps	%xmm0, 4688(%rsp)
	leaq	4640(%rsp), %rax
	movq	%rax, 1368(%rsp)
	movq	$4, 1376(%rsp)
	movq	$4, 1384(%rsp)
.Ltmp999:
	movq	1384(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1368(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1000:
.Ltmp1545:
	.loc	4 0 24
	movq	%rax, 952(%rsp)
	movq	%rdx, 960(%rsp)
	.loc	4 170 24
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_167
.Ltmp1546:
.Ltmp1001:
	.loc	4 0 24
	leaq	952(%rsp), %rdx
	.loc	4 170 24
	movl	$string..d, %edi
	movq	152(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp1002:
	jmp	.LBB38_171
.Ltmp1547:
.LBB38_417:
	.loc	4 317 19 is_stmt 1
	cmpq	%rax, %rbp
	jg	.LBB38_419
.Ltmp1548:
	.loc	4 0 19 is_stmt 0
	movq	%rax, %rcx
	orq	%rbp, %rcx
	js	.LBB38_419
.Ltmp1549:
	.loc	4 317 19
	movq	624(%rsp), %r13
	jmp	.LBB38_410
.Ltmp1550:
.LBB38_419:
.Ltmp1202:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1203:
.Ltmp1551:
.LBB38_410:
	movq	%r13, 624(%rsp)
	movq	%rbp, 632(%rsp)
	movq	%rax, 640(%rsp)
	testq	%r14, %r14
	js	.LBB38_412
.Ltmp1552:
	.loc	4 0 19
	cmpq	%rbp, %r14
	jl	.LBB38_413
.Ltmp1553:
.LBB38_412:
.Ltmp1206:
	.loc	4 317 19
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1207:
.Ltmp1554:
.LBB38_413:
	shlq	$4, %r14
	addq	%r14, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_414
.Ltmp1555:
.Ltmp1208:
	.loc	4 0 19
	leaq	2016(%rsp), %rdx
	.loc	4 317 19
	movl	$string..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp1209:
	jmp	.LBB38_423
.Ltmp1556:
.LBB38_414:
	testq	%r13, %r13
	jne	.LBB38_416
.Ltmp1557:
.Ltmp1210:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1211:
.Ltmp1558:
.LBB38_416:
	movaps	2016(%rsp), %xmm0
	movups	%xmm0, (%r13)
.Ltmp1559:
.LBB38_423:
	.loc	4 317 17
	movq	640(%rsp), %rax
	movq	%rax, 224(%rsp)
	movaps	624(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp1560:
.LBB38_424:
	.loc	4 0 17
	movups	.Lconst.299(%rip), %xmm0
	movaps	%xmm0, 3168(%rsp)
.Ltmp1212:
	leaq	3168(%rsp), %rdx
.Ltmp1561:
	.loc	4 319 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	200(%rsp), %rsi
	callq	runtime.mapaccess2
.Ltmp1213:
.Ltmp1562:
	.loc	4 319 3 is_stmt 0
	testb	$1, %dl
	je	.LBB38_443
.Ltmp1563:
	.loc	4 0 3
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 592(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 608(%rsp)
	.loc	4 320 19 is_stmt 1
	movq	600(%rsp), %r14
	movups	.Lconst.109(%rip), %xmm0
	movaps	%xmm0, 2000(%rsp)
	leaq	1(%r14), %rbp
	cmpq	%rax, %rbp
	jbe	.LBB38_436
.Ltmp1564:
.Ltmp1216:
	movq	608(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	592(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2376(%rsp), %rdi
	movl	$string..d, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1217:
.Ltmp1565:
	.loc	4 0 19 is_stmt 0
	movq	2376(%rsp), %r13
	movq	2384(%rsp), %rbp
	movq	2392(%rsp), %rax
	jmp	.LBB38_429
.Ltmp1566:
.LBB38_436:
	.loc	4 320 19
	cmpq	%rax, %rbp
	jg	.LBB38_438
.Ltmp1567:
	.loc	4 0 19
	movq	%rax, %rcx
	orq	%rbp, %rcx
	js	.LBB38_438
.Ltmp1568:
	.loc	4 320 19
	movq	592(%rsp), %r13
	jmp	.LBB38_429
.Ltmp1569:
.LBB38_438:
.Ltmp1214:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1215:
.Ltmp1570:
.LBB38_429:
	movq	%r13, 592(%rsp)
	movq	%rbp, 600(%rsp)
	movq	%rax, 608(%rsp)
	testq	%r14, %r14
	js	.LBB38_431
.Ltmp1571:
	.loc	4 0 19
	cmpq	%rbp, %r14
	jl	.LBB38_432
.Ltmp1572:
.LBB38_431:
.Ltmp1218:
	.loc	4 320 19
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1219:
.Ltmp1573:
.LBB38_432:
	shlq	$4, %r14
	addq	%r14, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_433
.Ltmp1574:
.Ltmp1220:
	.loc	4 0 19
	leaq	2000(%rsp), %rdx
	.loc	4 320 19
	movl	$string..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp1221:
	jmp	.LBB38_442
.Ltmp1575:
.LBB38_433:
	testq	%r13, %r13
	jne	.LBB38_435
.Ltmp1576:
.Ltmp1222:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1223:
.Ltmp1577:
.LBB38_435:
	movaps	2000(%rsp), %xmm0
	movups	%xmm0, (%r13)
.Ltmp1578:
.LBB38_442:
	.loc	4 320 17
	movq	608(%rsp), %rax
	movq	%rax, 224(%rsp)
	movaps	592(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp1579:
.LBB38_443:
	.loc	4 0 17
	movups	.Lconst.301(%rip), %xmm0
	movaps	%xmm0, 3152(%rsp)
.Ltmp1224:
	leaq	3152(%rsp), %rdx
.Ltmp1580:
	.loc	4 322 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	200(%rsp), %rsi
	callq	runtime.mapaccess2
.Ltmp1225:
.Ltmp1581:
	.loc	4 322 3 is_stmt 0
	testb	$1, %dl
	je	.LBB38_462
.Ltmp1582:
	.loc	4 0 3
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 560(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 576(%rsp)
	.loc	4 323 19 is_stmt 1
	movq	568(%rsp), %r14
	movups	.Lconst.110(%rip), %xmm0
	movaps	%xmm0, 1984(%rsp)
	leaq	1(%r14), %rbp
	cmpq	%rax, %rbp
	jbe	.LBB38_455
.Ltmp1583:
.Ltmp1228:
	movq	576(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	560(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2352(%rsp), %rdi
	movl	$string..d, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1229:
.Ltmp1584:
	.loc	4 0 19 is_stmt 0
	movq	2352(%rsp), %r13
	movq	2360(%rsp), %rbp
	movq	2368(%rsp), %rax
	jmp	.LBB38_448
.Ltmp1585:
.LBB38_455:
	.loc	4 323 19
	cmpq	%rax, %rbp
	jg	.LBB38_457
.Ltmp1586:
	.loc	4 0 19
	movq	%rax, %rcx
	orq	%rbp, %rcx
	js	.LBB38_457
.Ltmp1587:
	.loc	4 323 19
	movq	560(%rsp), %r13
	jmp	.LBB38_448
.Ltmp1588:
.LBB38_457:
.Ltmp1226:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1227:
.Ltmp1589:
.LBB38_448:
	movq	%r13, 560(%rsp)
	movq	%rbp, 568(%rsp)
	movq	%rax, 576(%rsp)
	testq	%r14, %r14
	js	.LBB38_450
.Ltmp1590:
	.loc	4 0 19
	cmpq	%rbp, %r14
	jl	.LBB38_451
.Ltmp1591:
.LBB38_450:
.Ltmp1230:
	.loc	4 323 19
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1231:
.Ltmp1592:
.LBB38_451:
	shlq	$4, %r14
	addq	%r14, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_452
.Ltmp1593:
.Ltmp1232:
	.loc	4 0 19
	leaq	1984(%rsp), %rdx
	.loc	4 323 19
	movl	$string..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp1233:
	jmp	.LBB38_461
.Ltmp1594:
.LBB38_452:
	testq	%r13, %r13
	jne	.LBB38_454
.Ltmp1595:
.Ltmp1234:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1235:
.Ltmp1596:
.LBB38_454:
	movaps	1984(%rsp), %xmm0
	movups	%xmm0, (%r13)
.Ltmp1597:
.LBB38_461:
	.loc	4 323 17
	movq	576(%rsp), %rax
	movq	%rax, 224(%rsp)
	movaps	560(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp1598:
.LBB38_462:
	.loc	4 0 17
	movups	.Lconst.303(%rip), %xmm0
	movaps	%xmm0, 3136(%rsp)
.Ltmp1236:
	leaq	3136(%rsp), %rdx
.Ltmp1599:
	.loc	4 325 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	200(%rsp), %rsi
	callq	runtime.mapaccess2
.Ltmp1237:
.Ltmp1600:
	.loc	4 325 3 is_stmt 0
	testb	$1, %dl
	je	.LBB38_481
.Ltmp1601:
	.loc	4 0 3
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 528(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 544(%rsp)
	.loc	4 326 19 is_stmt 1
	movq	536(%rsp), %r14
	movups	.Lconst.111(%rip), %xmm0
	movaps	%xmm0, 1968(%rsp)
	leaq	1(%r14), %rbp
	cmpq	%rax, %rbp
	jbe	.LBB38_474
.Ltmp1602:
.Ltmp1240:
	movq	544(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	528(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2328(%rsp), %rdi
	movl	$string..d, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1241:
.Ltmp1603:
	.loc	4 0 19 is_stmt 0
	movq	2328(%rsp), %r12
	movq	2336(%rsp), %rbp
	movq	2344(%rsp), %rax
	jmp	.LBB38_467
.Ltmp1604:
.LBB38_474:
	.loc	4 326 19
	cmpq	%rax, %rbp
	jg	.LBB38_476
.Ltmp1605:
	.loc	4 0 19
	movq	%rax, %rcx
	orq	%rbp, %rcx
	js	.LBB38_476
.Ltmp1606:
	.loc	4 326 19
	movq	528(%rsp), %r12
	jmp	.LBB38_467
.Ltmp1607:
.LBB38_476:
.Ltmp1238:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1239:
.Ltmp1608:
.LBB38_467:
	movq	%r12, 528(%rsp)
	movq	%rbp, 536(%rsp)
	movq	%rax, 544(%rsp)
	testq	%r14, %r14
	js	.LBB38_469
.Ltmp1609:
	.loc	4 0 19
	cmpq	%rbp, %r14
	jl	.LBB38_470
.Ltmp1610:
.LBB38_469:
.Ltmp1242:
	.loc	4 326 19
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1243:
.Ltmp1611:
.LBB38_470:
	shlq	$4, %r14
	addq	%r14, %r12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_471
.Ltmp1612:
.Ltmp1244:
	.loc	4 0 19
	leaq	1968(%rsp), %rdx
	.loc	4 326 19
	movl	$string..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
.Ltmp1245:
	jmp	.LBB38_480
.Ltmp1613:
.LBB38_471:
	testq	%r12, %r12
	jne	.LBB38_473
.Ltmp1614:
.Ltmp1246:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1247:
.Ltmp1615:
.LBB38_473:
	movaps	1968(%rsp), %xmm0
	movups	%xmm0, (%r12)
.Ltmp1616:
.LBB38_480:
	.loc	4 326 17
	movq	544(%rsp), %rax
	movq	%rax, 224(%rsp)
	movaps	528(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp1617:
.LBB38_481:
	.loc	4 329 26 is_stmt 1
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4160(%rsp)
	movups	.Lconst.295(%rip), %xmm0
	movaps	%xmm0, 4176(%rsp)
	leaq	4160(%rsp), %rax
	movq	%rax, 1512(%rsp)
	movq	$2, 1520(%rsp)
	movq	$2, 1528(%rsp)
.Ltmp1248:
	movq	1528(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1512(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, 152(%rsp)
	movq	%rdx, 144(%rsp)
.Ltmp1249:
.Ltmp1618:
	.loc	4 330 24
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4128(%rsp)
	movups	.Lconst.387(%rip), %xmm0
	movaps	%xmm0, 4144(%rsp)
	leaq	4128(%rsp), %rax
	movq	%rax, 1536(%rsp)
	movq	$2, 1544(%rsp)
	movq	$2, 1552(%rsp)
.Ltmp1250:
	movq	1552(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1536(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, 168(%rsp)
	movq	%rdx, 136(%rsp)
.Ltmp1251:
.Ltmp1619:
	.loc	4 332 76
	leaq	4768(%rsp), %rax
	movq	(%rax), %rbp
	.loc	4 332 80 is_stmt 0
	cmpq	$0, 288(%rsp)
	jg	.LBB38_485
.Ltmp1620:
.Ltmp1252:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1253:
.Ltmp1621:
.LBB38_485:
	.loc	4 0 80
	movups	(%rbp), %xmm0
	movaps	%xmm0, 3120(%rsp)
.Ltmp1254:
	.loc	4 332 58
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp1255:
.Ltmp1622:
	.loc	4 0 58
	movq	%rax, %rbp
	movaps	3120(%rsp), %xmm0
	movaps	%xmm0, 3104(%rsp)
.Ltmp1256:
	leaq	3104(%rsp), %rdx
	.loc	4 332 58
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1257:
.Ltmp1623:
	movq	$string..d, 2176(%rsp)
	movq	%rbp, 2184(%rsp)
	leaq	2176(%rsp), %rax
	movq	%rax, 1560(%rsp)
	movq	$1, 1568(%rsp)
	movq	$1, 1576(%rsp)
	movq	command_line_arguments.BindFile(%rip), %rdi
	movq	command_line_arguments.BindFile+8(%rip), %rsi
.Ltmp1258:
	movq	1576(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1560(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	fmt.Sprintf
.Ltmp1259:
.Ltmp1624:
.Ltmp1260:
	.loc	4 332 44
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	strings.NewReader
.Ltmp1261:
.Ltmp1625:
	.loc	4 332 19
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
.Ltmp1262:
	.loc	4 332 9
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader, %ecx
	movq	168(%rsp), %rsi
	movq	136(%rsp), %rdx
	movq	%rax, %r8
	callq	command_line_arguments.WriteFile
.Ltmp1263:
.Ltmp1626:
	.loc	4 333 10 is_stmt 1
	testq	%rax, %rax
	je	.LBB38_491
.Ltmp1627:
	.loc	4 334 75
	movq	(%rax), %rax
	.loc	4 334 15 is_stmt 0
	movq	%rax, 2160(%rsp)
	movq	%rdx, 2168(%rsp)
	leaq	2160(%rsp), %rax
	movq	%rax, 1584(%rsp)
	movq	$1, 1592(%rsp)
	movq	$1, 1600(%rsp)
.Ltmp1264:
	movq	1600(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1584(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.388, %edi
	movl	$49, %esi
	callq	fmt.Errorf
.Ltmp1628:
.Ltmp1265:
	.loc	4 0 15
	movb	$1, %r15b
	jmp	.LBB38_45
.Ltmp1629:
.LBB38_491:
	.loc	4 337 24 is_stmt 1
	movq	152(%rsp), %rax
	movq	%rax, 4528(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 4536(%rsp)
	movups	.Lconst.344(%rip), %xmm0
	movups	%xmm0, 4544(%rsp)
	movups	.Lconst.332(%rip), %xmm0
	movups	%xmm0, 4560(%rsp)
	movups	.Lconst.391(%rip), %xmm0
	movups	%xmm0, 4576(%rsp)
	movups	.Lconst.393(%rip), %xmm0
	movups	%xmm0, 4592(%rsp)
	movups	.Lconst.395(%rip), %xmm0
	movups	%xmm0, 4608(%rsp)
	movups	.Lconst.397(%rip), %xmm0
	movups	%xmm0, 4624(%rsp)
	leaq	4528(%rsp), %rax
	movq	%rax, 1608(%rsp)
	movq	$7, 1616(%rsp)
	movq	$7, 1624(%rsp)
.Ltmp1266:
	movq	1624(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1608(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1267:
.Ltmp1630:
	.loc	4 0 24 is_stmt 0
	movq	%rax, %r12
	movq	%rdx, %rbx
.Ltmp1631:
	.loc	4 338 19 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp1268:
	.loc	4 338 13 is_stmt 0
	movq	%r12, %rsi
	callq	command_line_arguments.Mkdir
.Ltmp1269:
.Ltmp1632:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 338 41
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1633:
	.loc	4 341 38 is_stmt 1
	movq	%r12, 3496(%rsp)
	movq	%rbx, 3504(%rsp)
	movups	.Lconst.399(%rip), %xmm0
	movups	%xmm0, 3512(%rsp)
	leaq	3496(%rsp), %rax
	movq	%rax, 1632(%rsp)
	movq	$2, 1640(%rsp)
	movq	$2, 1648(%rsp)
.Ltmp1270:
	movq	1648(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1632(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1271:
.Ltmp1634:
	.loc	4 0 38 is_stmt 0
	movq	%rax, %r14
	movq	%rdx, %r13
	.loc	4 341 79
	movaps	864(%rsp), %xmm0
	movaps	%xmm0, 4096(%rsp)
	movups	.Lconst.401(%rip), %xmm0
	movaps	%xmm0, 4112(%rsp)
	leaq	4096(%rsp), %rax
	movq	%rax, 1656(%rsp)
	movq	$2, 1664(%rsp)
	movq	$2, 1672(%rsp)
.Ltmp1272:
	movq	1672(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1656(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1273:
.Ltmp1635:
	.loc	4 0 79
	movq	%rdx, %rbp
	.loc	4 341 22
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
.Ltmp1274:
	.loc	4 341 13
	movq	%r14, %rsi
	movq	%r13, %rdx
	movq	%rax, %rcx
	movq	%rbp, %r8
	callq	command_line_arguments.CopyFile
.Ltmp1275:
.Ltmp1636:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 341 123
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1637:
	.loc	4 344 38 is_stmt 1
	movq	%r12, 3464(%rsp)
	movq	%rbx, 3472(%rsp)
	movups	.Lconst.403(%rip), %xmm0
	movups	%xmm0, 3480(%rsp)
	leaq	3464(%rsp), %rax
	movq	%rax, 1680(%rsp)
	movq	$2, 1688(%rsp)
	movq	$2, 1696(%rsp)
.Ltmp1276:
	movq	1696(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1680(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1277:
.Ltmp1638:
	.loc	4 0 38 is_stmt 0
	movq	%rax, %r14
	movq	%rdx, %r13
	.loc	4 344 78
	movaps	864(%rsp), %xmm0
	movaps	%xmm0, 4064(%rsp)
	movups	.Lconst.405(%rip), %xmm0
	movaps	%xmm0, 4080(%rsp)
	leaq	4064(%rsp), %rax
	movq	%rax, 1704(%rsp)
	movq	$2, 1712(%rsp)
	movq	$2, 1720(%rsp)
.Ltmp1278:
	movq	1720(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1704(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1279:
.Ltmp1639:
	.loc	4 0 78
	movq	%rdx, %rbp
	.loc	4 344 22
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
.Ltmp1280:
	.loc	4 344 13
	movq	%r14, %rsi
	movq	%r13, %rdx
	movq	%rax, %rcx
	movq	%rbp, %r8
	callq	command_line_arguments.CopyFile
.Ltmp1281:
.Ltmp1640:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 344 121
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1641:
	.loc	4 347 38 is_stmt 1
	movq	%r12, 3432(%rsp)
	movq	%rbx, 3440(%rsp)
	movups	.Lconst.407(%rip), %xmm0
	movups	%xmm0, 3448(%rsp)
	leaq	3432(%rsp), %rax
	movq	%rax, 1728(%rsp)
	movq	$2, 1736(%rsp)
	movq	$2, 1744(%rsp)
.Ltmp1282:
	movq	1744(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1728(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1283:
.Ltmp1642:
	.loc	4 0 38 is_stmt 0
	movq	%rax, %r13
	movq	%rdx, %r12
	.loc	4 347 79
	movaps	864(%rsp), %xmm0
	movaps	%xmm0, 4032(%rsp)
	movups	.Lconst.409(%rip), %xmm0
	movaps	%xmm0, 4048(%rsp)
	leaq	4032(%rsp), %rax
	movq	%rax, 1752(%rsp)
	movq	$2, 1760(%rsp)
	movq	$2, 1768(%rsp)
.Ltmp1284:
	movq	1768(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1752(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1285:
.Ltmp1643:
	.loc	4 0 79
	movq	%rdx, %rbp
	.loc	4 347 22
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
.Ltmp1286:
	.loc	4 347 13
	movq	%r13, %rsi
	movq	%r12, %rdx
	movq	%rax, %rcx
	movq	%rbp, %r8
	callq	command_line_arguments.CopyFile
.Ltmp1287:
.Ltmp1644:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 347 123
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1645:
	.loc	4 352 29 is_stmt 1
	movq	176(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 4000(%rsp)
	movups	.Lconst.411(%rip), %xmm0
	movaps	%xmm0, 4016(%rsp)
	leaq	4000(%rsp), %rax
	movq	%rax, 1776(%rsp)
	movq	$2, 1784(%rsp)
	movq	$2, 1792(%rsp)
.Ltmp1288:
	movq	1792(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1776(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1289:
.Ltmp1646:
	.loc	4 0 29 is_stmt 0
	movq	%rax, %r12
	movq	%rdx, %rbx
.Ltmp1647:
	.loc	4 353 19 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp1290:
	.loc	4 353 13 is_stmt 0
	movq	%r12, %rsi
	callq	command_line_arguments.Mkdir
.Ltmp1291:
.Ltmp1648:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 353 46
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1649:
	.loc	4 358 26 is_stmt 1
	movq	%r12, 3400(%rsp)
	movq	%rbx, 3408(%rsp)
	movups	.Lconst.340(%rip), %xmm0
	movups	%xmm0, 3416(%rsp)
	leaq	3400(%rsp), %rax
	movq	%rax, 1800(%rsp)
	movq	$2, 1808(%rsp)
	movq	$2, 1816(%rsp)
.Ltmp1292:
	movq	1816(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1800(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1293:
.Ltmp1650:
	.loc	4 0 26 is_stmt 0
	movq	%rax, %rbp
	movq	%rdx, %r13
	.loc	4 359 23 is_stmt 1
	movq	%r12, 3912(%rsp)
	movq	%rbx, 3920(%rsp)
	movups	.Lconst.340(%rip), %xmm0
	movups	%xmm0, 3928(%rsp)
	movups	.Lconst.413(%rip), %xmm0
	movups	%xmm0, 3944(%rsp)
	leaq	3912(%rsp), %rax
	movq	%rax, 1824(%rsp)
	movq	$3, 1832(%rsp)
	movq	$3, 1840(%rsp)
.Ltmp1294:
	movq	1840(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1824(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, 184(%rsp)
	movq	%rdx, 264(%rsp)
.Ltmp1295:
.Ltmp1651:
	.loc	4 0 23 is_stmt 0
	movq	184(%rsp), %rax
	movq	%rax, 384(%rsp)
	movq	264(%rsp), %rax
	movq	%rax, 392(%rsp)
.Ltmp1652:
	.loc	4 360 19 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp1296:
	.loc	4 360 13 is_stmt 0
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	command_line_arguments.Mkdir
.Ltmp1297:
.Ltmp1653:
	.loc	4 0 13
	movq	%rax, %r13
.Ltmp1654:
	.loc	4 360 43
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1655:
	.loc	4 0 43
	movq	216(%rsp), %rax
	movq	%rax, 128(%rsp)
.Ltmp1656:
	.loc	4 365 3 is_stmt 1
	testq	%rax, %rax
	jle	.LBB38_542
.Ltmp1657:
	.loc	4 0 3 is_stmt 0
	movq	208(%rsp), %rax
	addq	$8, %rax
	movq	%rax, 160(%rsp)
	xorl	%eax, %eax
	movq	%rax, 288(%rsp)
.Ltmp1658:
.LBB38_515:
	movq	160(%rsp), %rax
	.loc	4 365 3
	movq	-8(%rax), %rdx
.Ltmp1659:
	movq	(%rax), %rcx
.Ltmp1660:
	.loc	4 366 27 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp1298:
	.loc	4 366 16 is_stmt 0
	leaq	3360(%rsp), %rdi
	movq	%rdx, %r14
.Ltmp1661:
	.loc	4 0 16
	movq	%rcx, 192(%rsp)
.Ltmp1662:
	.loc	4 366 16
	callq	command_line_arguments.AndroidEnv
.Ltmp1299:
.Ltmp1663:
	movq	3384(%rsp), %r13
.Ltmp1664:
	movq	3392(%rsp), %rbp
.Ltmp1665:
	.loc	4 0 16
	movups	3360(%rsp), %xmm0
	movaps	%xmm0, 352(%rsp)
	movq	3376(%rsp), %rax
	movq	%rax, 368(%rsp)
	.loc	4 367 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_186
.Ltmp1666:
	.loc	4 370 79
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp1300:
	.loc	4 370 73 is_stmt 0
	movl	$.Lconst.414, %esi
	movl	$6, %edx
	callq	command_line_arguments.GoEnv
.Ltmp1301:
.Ltmp1667:
	.loc	4 0 73
	movaps	352(%rsp), %xmm0
	movaps	%xmm0, 464(%rsp)
	movq	368(%rsp), %rcx
	movq	%rcx, 480(%rsp)
	.loc	4 370 10
	movq	472(%rsp), %r12
	.loc	4 370 29
	movups	.Lconst.417(%rip), %xmm0
	movaps	%xmm0, 2688(%rsp)
	movq	%r15, 2704(%rsp)
	movq	112(%rsp), %rcx
	movq	%rcx, 2712(%rsp)
	movups	.Lconst.419(%rip), %xmm0
	leaq	2720(%rsp), %rcx
	movups	%xmm0, (%rcx)
	movq	%rax, 2736(%rsp)
	movq	%rdx, 2744(%rsp)
.Ltmp1302:
	movaps	2688(%rsp), %xmm0
	movaps	2704(%rsp), %xmm1
	movaps	2720(%rsp), %xmm2
	movaps	2736(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring4
.Ltmp1303:
.Ltmp1668:
	.loc	4 0 29
	movq	%rax, 920(%rsp)
	movq	%rdx, 928(%rsp)
	.loc	4 370 10
	leaq	1(%r12), %rdx
	movq	480(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB38_531
.Ltmp1669:
.Ltmp1306:
	movq	480(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	464(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	2304(%rsp), %rdi
	callq	runtime.growslice
.Ltmp1307:
.Ltmp1670:
	.loc	4 0 10
	movq	2304(%rsp), %rbp
	movq	2312(%rsp), %rdx
	movq	2320(%rsp), %rax
	jmp	.LBB38_524
.Ltmp1671:
.LBB38_531:
	.loc	4 370 10
	cmpq	%rax, %rdx
	jg	.LBB38_533
.Ltmp1672:
	.loc	4 0 10
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB38_533
.Ltmp1673:
	.loc	4 370 10
	movq	464(%rsp), %rbp
	movq	%rdx, 312(%rsp)
	movq	%rax, 304(%rsp)
	movq	%rbp, 272(%rsp)
	jmp	.LBB38_524
.Ltmp1674:
.LBB38_533:
.Ltmp1304:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1305:
	movq	272(%rsp), %rbp
	movq	312(%rsp), %rdx
	movq	304(%rsp), %rax
.Ltmp1675:
.LBB38_524:
	movq	%rbp, 464(%rsp)
	movq	%rdx, 472(%rsp)
	movq	%rax, 480(%rsp)
	testq	%r12, %r12
	js	.LBB38_526
.Ltmp1676:
	.loc	4 0 10
	cmpq	%rdx, %r12
	jl	.LBB38_527
.Ltmp1677:
.LBB38_526:
.Ltmp1308:
	.loc	4 370 10
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1309:
	movq	200(%rsp), %r12
.Ltmp1678:
.LBB38_527:
	movq	%r12, %rax
	shlq	$4, %rax
	addq	%rax, %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_528
.Ltmp1679:
.Ltmp1310:
	movl	$string..d, %edi
	movq	%rbp, %rsi
	leaq	920(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1311:
	jmp	.LBB38_535
.Ltmp1680:
.LBB38_528:
	testq	%rbp, %rbp
	jne	.LBB38_530
.Ltmp1681:
.Ltmp1312:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1313:
	movq	280(%rsp), %rbp
.Ltmp1682:
.LBB38_530:
	movups	920(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	movq	%rbp, 280(%rsp)
.Ltmp1683:
.LBB38_535:
	.loc	4 370 8
	movq	480(%rsp), %rax
	movq	%rax, 368(%rsp)
	movaps	464(%rsp), %xmm0
	movaps	%xmm0, 352(%rsp)
.Ltmp1314:
	.loc	4 379 57 is_stmt 1
	movq	%r14, %rdi
	movq	192(%rsp), %rsi
	callq	command_line_arguments.GetAndroidABI
.Ltmp1315:
.Ltmp1684:
	.loc	4 379 54 is_stmt 0
	movups	.Lconst.216(%rip), %xmm0
	movaps	%xmm0, 2944(%rsp)
	movq	%rax, 2960(%rsp)
	movq	%rdx, 2968(%rsp)
	movups	.Lconst.212(%rip), %xmm0
	leaq	2976(%rsp), %rax
	movups	%xmm0, (%rax)
.Ltmp1316:
	movaps	2944(%rsp), %xmm0
	movaps	2960(%rsp), %xmm1
	movaps	2976(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
.Ltmp1317:
.Ltmp1685:
	.loc	4 379 20
	movq	152(%rsp), %rcx
	movq	%rcx, 2784(%rsp)
	movq	144(%rsp), %rcx
	movq	%rcx, 2792(%rsp)
	movq	%rax, 2800(%rsp)
	movq	%rdx, 2808(%rsp)
	leaq	2784(%rsp), %rax
	movq	%rax, 1848(%rsp)
	movq	$2, 1856(%rsp)
	movq	$2, 1864(%rsp)
.Ltmp1318:
	movq	1864(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1848(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1319:
.Ltmp1686:
	.loc	4 373 5 is_stmt 1
	movq	168(%rsp), %rcx
	movq	%rcx, 2144(%rsp)
	movq	136(%rsp), %rcx
	movq	%rcx, 2152(%rsp)
	movups	.Lconst.420(%rip), %xmm0
	movaps	%xmm0, 3088(%rsp)
	.loc	4 379 8
	movups	.Lconst.422(%rip), %xmm0
	movaps	%xmm0, 2752(%rsp)
	movq	%rax, 2768(%rsp)
	movq	%rdx, 2776(%rsp)
.Ltmp1320:
	movaps	2752(%rsp), %xmm0
	movaps	2768(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp1321:
.Ltmp1687:
	.loc	4 372 10
	movups	.Lconst.424(%rip), %xmm0
	movaps	%xmm0, 3056(%rsp)
	movq	%rax, 3072(%rsp)
	movq	%rdx, 3080(%rsp)
	.loc	4 372 18 is_stmt 0
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
	.loc	4 373 5 is_stmt 1
	leaq	2144(%rsp), %rax
	movq	%rax, 1872(%rsp)
	movq	$1, 1880(%rsp)
	movq	$1, 1888(%rsp)
	.loc	4 375 5
	leaq	3088(%rsp), %rax
	movq	%rax, 1896(%rsp)
	movq	$1, 1904(%rsp)
	movq	$1, 1912(%rsp)
	.loc	4 372 10
	leaq	3056(%rsp), %rax
	movq	%rax, 1920(%rsp)
	movq	$2, 1928(%rsp)
	movq	$2, 1936(%rsp)
	movq	296(%rsp), %rax
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
	movq	176(%rsp), %rax
	movq	(%rax), %rcx
	movq	8(%rax), %r8
.Ltmp1322:
	movq	1936(%rsp), %rax
	movq	%rax, 88(%rsp)
	movups	1920(%rsp), %xmm0
	movups	%xmm0, 72(%rsp)
	movq	1912(%rsp), %rax
	movq	%rax, 64(%rsp)
	movups	1896(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
	movq	368(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	352(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	1888(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1872(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.GoBuild
.Ltmp1323:
.Ltmp1688:
	.loc	4 0 10 is_stmt 0
	movq	%rax, %r13
	.loc	4 381 11 is_stmt 1
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1689:
	.loc	4 0 11 is_stmt 0
	movq	288(%rsp), %rax
	movq	%rax, %rcx
	.loc	4 365 3 is_stmt 1
	addq	$1, %rcx
	addq	$16, 160(%rsp)
	movq	%r12, 200(%rsp)
	movq	%rcx, %rax
	movq	%rcx, 288(%rsp)
	cmpq	128(%rsp), %rcx
	jl	.LBB38_515
.Ltmp1690:
.LBB38_542:
	.loc	4 386 22
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
	movq	176(%rsp), %rax
	.loc	4 386 13 is_stmt 0
	movq	(%rax), %rcx
	movq	8(%rax), %r8
.Ltmp1325:
	movups	384(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	208(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	896(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	880(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movq	152(%rsp), %rsi
	movq	144(%rsp), %rdx
	callq	command_line_arguments.BuildAAR
.Ltmp1326:
.Ltmp1691:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 386 84
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1692:
	.loc	4 391 16 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rbp
	.loc	4 391 21 is_stmt 0
	testq	%rbp, %rbp
	jne	.LBB38_546
.Ltmp1693:
.Ltmp1327:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1328:
.Ltmp1694:
.LBB38_546:
	.loc	4 0 21
	movq	48(%rbp), %r14
.Ltmp1695:
	movq	56(%rbp), %rbp
.Ltmp1696:
.Ltmp1329:
	.loc	4 392 16 is_stmt 1
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
.Ltmp1330:
.Ltmp1697:
	cmpb	$1, %al
	movl	$10, %eax
	cmoveq	%rax, %rbp
.Ltmp1698:
	.loc	4 0 16 is_stmt 0
	movl	$.Lconst.382, %eax
	cmoveq	%rax, %r14
.Ltmp1699:
	.loc	4 397 38 is_stmt 1
	movq	%r14, 3864(%rsp)
	movq	%rbp, 3872(%rsp)
	movups	.Lconst.295(%rip), %xmm0
	movups	%xmm0, 3880(%rsp)
	movups	.Lconst.413(%rip), %xmm0
	movups	%xmm0, 3896(%rsp)
	leaq	3864(%rsp), %rax
	movq	%rax, 1944(%rsp)
	movq	$3, 1952(%rsp)
	movq	$3, 1960(%rsp)
.Ltmp1331:
	movq	1960(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1944(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1332:
.Ltmp1700:
	.loc	4 397 22 is_stmt 0
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
.Ltmp1333:
	.loc	4 397 13
	movq	%rax, %rsi
	movq	184(%rsp), %rcx
	movq	264(%rsp), %r8
	callq	command_line_arguments.CopyFile
.Ltmp1334:
.Ltmp1701:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 397 100
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1702:
	.loc	4 0 100
	xorl	%r13d, %r13d
	xorl	%ebp, %ebp
	jmp	.LBB38_186
.Ltmp1703:
.LBB38_167:
	.loc	4 170 24 is_stmt 1
	cmpq	$0, 152(%rsp)
	jne	.LBB38_169
.Ltmp1704:
.Ltmp1003:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1004:
.Ltmp1705:
.LBB38_169:
	movups	952(%rsp), %xmm0
	movq	152(%rsp), %rax
	movups	%xmm0, (%rax)
.Ltmp1706:
.LBB38_171:
	.loc	4 171 76
	leaq	4768(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp1707:
	.loc	4 171 80 is_stmt 0
	cmpq	$0, 288(%rsp)
	jg	.LBB38_173
.Ltmp1708:
.Ltmp1005:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1006:
.Ltmp1709:
.LBB38_173:
	.loc	4 0 80
	movups	(%rbp), %xmm0
	movaps	%xmm0, 3296(%rsp)
.Ltmp1007:
	.loc	4 171 58
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp1008:
.Ltmp1710:
	.loc	4 0 58
	movq	%rax, %rbp
	movaps	3296(%rsp), %xmm0
	movaps	%xmm0, 3280(%rsp)
.Ltmp1009:
	leaq	3280(%rsp), %rdx
	.loc	4 171 58
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1010:
.Ltmp1711:
	movq	$string..d, 2208(%rsp)
	movq	%rbp, 2216(%rsp)
	leaq	2208(%rsp), %rax
	movq	%rax, 1392(%rsp)
	movq	$1, 1400(%rsp)
	movq	$1, 1408(%rsp)
	movq	command_line_arguments.BindFile(%rip), %rdi
	movq	command_line_arguments.BindFile+8(%rip), %rsi
.Ltmp1011:
	movq	1408(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1392(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	fmt.Sprintf
.Ltmp1012:
.Ltmp1712:
.Ltmp1013:
	.loc	4 171 44
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	strings.NewReader
.Ltmp1014:
.Ltmp1713:
	.loc	4 171 19
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
	movq	152(%rsp), %rcx
	.loc	4 171 9
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdx
.Ltmp1015:
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader, %ecx
	movq	%rax, %r8
	callq	command_line_arguments.WriteFile
.Ltmp1016:
.Ltmp1714:
	.loc	4 172 10 is_stmt 1
	testq	%rax, %rax
	je	.LBB38_179
.Ltmp1715:
	.loc	4 173 74
	movq	(%rax), %rax
	.loc	4 173 15 is_stmt 0
	movq	%rax, 2192(%rsp)
	movq	%rdx, 2200(%rsp)
	leaq	2192(%rsp), %rax
	movq	%rax, 1416(%rsp)
	movq	$1, 1424(%rsp)
	movq	$1, 1432(%rsp)
.Ltmp1017:
	movq	1432(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1416(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.349, %edi
	movl	$48, %esi
	callq	fmt.Errorf
.Ltmp1716:
.Ltmp1018:
	.loc	4 0 15
	movb	$1, %r15b
	jmp	.LBB38_45
.Ltmp1717:
.LBB38_179:
.Ltmp1019:
	.loc	4 206 11 is_stmt 1
	movl	$type...60x.7.6.7string, %edi
	callq	runtime.newobject
	movq	%rax, 112(%rsp)
.Ltmp1020:
	movq	200(%rsp), %rsi
.Ltmp1718:
	.loc	4 0 11 is_stmt 0
	movups	.Lconst.306(%rip), %xmm0
	movaps	%xmm0, 3264(%rsp)
.Ltmp1021:
	leaq	3264(%rsp), %rdx
.Ltmp1719:
	.loc	4 207 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	callq	runtime.mapaccess2
.Ltmp1022:
.Ltmp1720:
	.loc	4 207 3 is_stmt 0
	testb	$1, %dl
	jne	.LBB38_184
.Ltmp1721:
	.loc	4 0 3
	xorl	%eax, %eax
	movq	%rax, 128(%rsp)
	xorl	%ebx, %ebx
	jmp	.LBB38_196
.Ltmp1722:
.LBB38_184:
	.loc	4 208 29 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp1023:
	leaq	3648(%rsp), %rdi
	.loc	4 208 16 is_stmt 0
	callq	command_line_arguments.DarwinArmEnv
.Ltmp1024:
.Ltmp1723:
	movq	3672(%rsp), %r13
.Ltmp1724:
	movq	3680(%rsp), %rbp
.Ltmp1725:
	.loc	4 0 16
	movups	3648(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	3664(%rsp), %rax
	movq	%rax, 224(%rsp)
	.loc	4 209 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_186
.Ltmp1726:
	.loc	4 0 11 is_stmt 0
	movq	112(%rsp), %rax
	movq	%rax, 840(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 848(%rsp)
.Ltmp1025:
	.loc	4 212 11 is_stmt 1
	movq	856(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	840(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2592(%rsp), %rdi
	movl	$type...6.7string, %esi
	movl	$1, %edx
	callq	runtime.growslice
.Ltmp1026:
.Ltmp1727:
	.loc	4 0 11 is_stmt 0
	movq	2592(%rsp), %rbp
.Ltmp1728:
	movq	2600(%rsp), %rax
	movq	2608(%rsp), %rcx
	.loc	4 212 11
	movq	%rbp, 840(%rsp)
	movq	%rax, 848(%rsp)
	movq	%rcx, 856(%rsp)
	testq	%rax, %rax
	jg	.LBB38_190
.Ltmp1729:
.Ltmp1027:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1028:
.Ltmp1730:
.LBB38_190:
	.loc	4 0 11
	movq	224(%rsp), %rax
	movq	%rax, 1168(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 1152(%rsp)
	.loc	4 212 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_191
.Ltmp1731:
.Ltmp1029:
	.loc	4 0 11
	leaq	1152(%rsp), %rdx
	.loc	4 212 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp1030:
	jmp	.LBB38_195
.Ltmp1732:
.LBB38_191:
	testq	%rbp, %rbp
	jne	.LBB38_193
.Ltmp1733:
.Ltmp1031:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1032:
.Ltmp1734:
.LBB38_193:
	movq	1168(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	1152(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp1735:
.LBB38_195:
	.loc	4 212 9
	movq	840(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	848(%rsp), %rax
.Ltmp1736:
	movq	%rax, 128(%rsp)
	movq	856(%rsp), %rbx
.Ltmp1737:
.LBB38_196:
	.loc	4 0 9
	movups	.Lconst.308(%rip), %xmm0
	movaps	%xmm0, 3248(%rsp)
.Ltmp1033:
	leaq	3248(%rsp), %rdx
.Ltmp1738:
	.loc	4 214 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	200(%rsp), %rsi
	callq	runtime.mapaccess2
.Ltmp1034:
.Ltmp1739:
	.loc	4 214 3 is_stmt 0
	testb	$1, %dl
	je	.LBB38_216
.Ltmp1740:
	.loc	4 215 31 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp1035:
	leaq	3608(%rsp), %rdi
	.loc	4 215 16 is_stmt 0
	callq	command_line_arguments.DarwinArm64Env
.Ltmp1036:
.Ltmp1741:
	movq	3632(%rsp), %r13
.Ltmp1742:
	movq	3640(%rsp), %rbp
.Ltmp1743:
	.loc	4 0 16
	movups	3608(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	3624(%rsp), %rax
	movq	%rax, 224(%rsp)
	.loc	4 216 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_186
.Ltmp1744:
	.loc	4 0 11 is_stmt 0
	movq	112(%rsp), %rax
	movq	%rax, 792(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 800(%rsp)
	movq	%rbx, 808(%rsp)
	.loc	4 219 11 is_stmt 1
	leaq	1(%rax), %rbp
.Ltmp1745:
	cmpq	%rbx, %rbp
	jbe	.LBB38_210
.Ltmp1746:
.Ltmp1039:
	movq	808(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	792(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2568(%rsp), %rdi
	movl	$type...6.7string, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1040:
.Ltmp1747:
	.loc	4 0 11 is_stmt 0
	movq	2568(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	2576(%rsp), %rbp
	movq	2584(%rsp), %rbx
	jmp	.LBB38_203
.Ltmp1748:
.LBB38_210:
	.loc	4 219 11
	cmpq	%rbx, %rbp
	jg	.LBB38_212
.Ltmp1749:
	.loc	4 0 11
	movq	%rbp, %rax
	orq	%rbx, %rax
	jns	.LBB38_203
.Ltmp1750:
.LBB38_212:
.Ltmp1037:
	.loc	4 219 11
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1038:
.Ltmp1751:
.LBB38_203:
	movq	112(%rsp), %rax
	movq	%rax, 792(%rsp)
	movq	%rbp, 800(%rsp)
	movq	%rbx, 808(%rsp)
	cmpq	$0, 128(%rsp)
	js	.LBB38_205
.Ltmp1752:
	.loc	4 0 11
	cmpq	%rbp, 128(%rsp)
	jl	.LBB38_206
.Ltmp1753:
.LBB38_205:
.Ltmp1041:
	.loc	4 219 11
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1042:
.Ltmp1754:
.LBB38_206:
	movq	128(%rsp), %rax
	leaq	(%rax,%rax,2), %rax
	movq	112(%rsp), %rcx
	leaq	(%rcx,%rax,8), %rbp
	movq	224(%rsp), %rax
	movq	%rax, 1136(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 1120(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_207
.Ltmp1755:
.Ltmp1043:
	.loc	4 0 11
	leaq	1120(%rsp), %rdx
	.loc	4 219 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp1044:
	jmp	.LBB38_215
.Ltmp1756:
.LBB38_207:
	testq	%rbp, %rbp
	jne	.LBB38_209
.Ltmp1757:
.Ltmp1045:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1046:
.Ltmp1758:
.LBB38_209:
	movq	1136(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	1120(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp1759:
.LBB38_215:
	.loc	4 219 9
	movq	792(%rsp), %rax
.Ltmp1760:
	movq	%rax, 112(%rsp)
	movq	800(%rsp), %rax
.Ltmp1761:
	movq	%rax, 128(%rsp)
	movq	808(%rsp), %rbx
.Ltmp1762:
.LBB38_216:
	.loc	4 0 9
	movups	.Lconst.312(%rip), %xmm0
	movaps	%xmm0, 3232(%rsp)
.Ltmp1047:
	leaq	3232(%rsp), %rdx
.Ltmp1763:
	.loc	4 221 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	200(%rsp), %rsi
	callq	runtime.mapaccess2
.Ltmp1048:
.Ltmp1764:
	.loc	4 221 3 is_stmt 0
	testb	$1, %dl
	je	.LBB38_236
.Ltmp1765:
	.loc	4 222 29 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp1049:
	leaq	3568(%rsp), %rdi
	.loc	4 222 16 is_stmt 0
	callq	command_line_arguments.Darwin386Env
.Ltmp1050:
.Ltmp1766:
	movq	3592(%rsp), %r13
.Ltmp1767:
	movq	3600(%rsp), %rbp
.Ltmp1768:
	.loc	4 0 16
	movups	3568(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	3584(%rsp), %rax
	movq	%rax, 224(%rsp)
	.loc	4 223 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_186
.Ltmp1769:
	.loc	4 0 11 is_stmt 0
	movq	112(%rsp), %rax
	movq	%rax, 768(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 776(%rsp)
	movq	%rbx, 784(%rsp)
	.loc	4 226 11 is_stmt 1
	leaq	1(%rax), %rbp
.Ltmp1770:
	cmpq	%rbx, %rbp
	jbe	.LBB38_230
.Ltmp1771:
.Ltmp1053:
	movq	784(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	768(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2544(%rsp), %rdi
	movl	$type...6.7string, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1054:
.Ltmp1772:
	.loc	4 0 11 is_stmt 0
	movq	2544(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	2552(%rsp), %rbp
	movq	2560(%rsp), %rbx
	jmp	.LBB38_223
.Ltmp1773:
.LBB38_230:
	.loc	4 226 11
	cmpq	%rbx, %rbp
	jg	.LBB38_232
.Ltmp1774:
	.loc	4 0 11
	movq	%rbp, %rax
	orq	%rbx, %rax
	jns	.LBB38_223
.Ltmp1775:
.LBB38_232:
.Ltmp1051:
	.loc	4 226 11
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1052:
.Ltmp1776:
.LBB38_223:
	movq	112(%rsp), %rax
	movq	%rax, 768(%rsp)
	movq	%rbp, 776(%rsp)
	movq	%rbx, 784(%rsp)
	cmpq	$0, 128(%rsp)
	js	.LBB38_225
.Ltmp1777:
	.loc	4 0 11
	cmpq	%rbp, 128(%rsp)
	jl	.LBB38_226
.Ltmp1778:
.LBB38_225:
.Ltmp1055:
	.loc	4 226 11
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1056:
.Ltmp1779:
.LBB38_226:
	movq	128(%rsp), %rax
	leaq	(%rax,%rax,2), %rax
	movq	112(%rsp), %rcx
	leaq	(%rcx,%rax,8), %rbp
	movq	224(%rsp), %rax
	movq	%rax, 1104(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 1088(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_227
.Ltmp1780:
.Ltmp1057:
	.loc	4 0 11
	leaq	1088(%rsp), %rdx
	.loc	4 226 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp1058:
	jmp	.LBB38_235
.Ltmp1781:
.LBB38_227:
	testq	%rbp, %rbp
	jne	.LBB38_229
.Ltmp1782:
.Ltmp1059:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1060:
.Ltmp1783:
.LBB38_229:
	movq	1104(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	1088(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp1784:
.LBB38_235:
	.loc	4 226 9
	movq	768(%rsp), %rax
.Ltmp1785:
	movq	%rax, 112(%rsp)
	movq	776(%rsp), %rax
.Ltmp1786:
	movq	%rax, 128(%rsp)
	movq	784(%rsp), %rbx
.Ltmp1787:
.LBB38_236:
	.loc	4 0 9
	movups	.Lconst.310(%rip), %xmm0
	movaps	%xmm0, 3216(%rsp)
.Ltmp1061:
	leaq	3216(%rsp), %rdx
.Ltmp1788:
	.loc	4 228 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	200(%rsp), %rsi
	callq	runtime.mapaccess2
.Ltmp1062:
.Ltmp1789:
	.loc	4 228 3 is_stmt 0
	testb	$1, %dl
	je	.LBB38_256
.Ltmp1790:
	.loc	4 229 31 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rsi
.Ltmp1063:
	leaq	3528(%rsp), %rdi
	.loc	4 229 16 is_stmt 0
	callq	command_line_arguments.DarwinAmd64Env
.Ltmp1064:
.Ltmp1791:
	movq	3552(%rsp), %r13
.Ltmp1792:
	movq	3560(%rsp), %rbp
.Ltmp1793:
	.loc	4 0 16
	movups	3528(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	3544(%rsp), %rax
	movq	%rax, 224(%rsp)
	.loc	4 230 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB38_186
.Ltmp1794:
	.loc	4 0 11 is_stmt 0
	movq	112(%rsp), %rax
	movq	%rax, 816(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 824(%rsp)
	movq	%rbx, 832(%rsp)
	.loc	4 233 11 is_stmt 1
	leaq	1(%rax), %rbp
.Ltmp1795:
	cmpq	%rbx, %rbp
	jbe	.LBB38_250
.Ltmp1796:
.Ltmp1067:
	movq	832(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	816(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2520(%rsp), %rdi
	movl	$type...6.7string, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1068:
.Ltmp1797:
	.loc	4 0 11 is_stmt 0
	movq	2520(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	2528(%rsp), %rbp
	movq	2536(%rsp), %rbx
	jmp	.LBB38_243
.Ltmp1798:
.LBB38_250:
	.loc	4 233 11
	cmpq	%rbx, %rbp
	jg	.LBB38_252
.Ltmp1799:
	.loc	4 0 11
	movq	%rbp, %rax
	orq	%rbx, %rax
	jns	.LBB38_243
.Ltmp1800:
.LBB38_252:
.Ltmp1065:
	.loc	4 233 11
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1066:
.Ltmp1801:
.LBB38_243:
	movq	112(%rsp), %rax
	movq	%rax, 816(%rsp)
	movq	%rbp, 824(%rsp)
	movq	%rbx, 832(%rsp)
	cmpq	$0, 128(%rsp)
	js	.LBB38_245
.Ltmp1802:
	.loc	4 0 11
	cmpq	%rbp, 128(%rsp)
	jl	.LBB38_246
.Ltmp1803:
.LBB38_245:
.Ltmp1069:
	.loc	4 233 11
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1070:
.Ltmp1804:
.LBB38_246:
	movq	128(%rsp), %rax
	leaq	(%rax,%rax,2), %rax
	movq	112(%rsp), %rcx
	leaq	(%rcx,%rax,8), %rbp
	movq	224(%rsp), %rax
	movq	%rax, 1072(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 1056(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_247
.Ltmp1805:
.Ltmp1071:
	.loc	4 0 11
	leaq	1056(%rsp), %rdx
	.loc	4 233 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp1072:
	jmp	.LBB38_255
.Ltmp1806:
.LBB38_247:
	testq	%rbp, %rbp
	jne	.LBB38_249
.Ltmp1807:
.Ltmp1073:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1074:
.Ltmp1808:
.LBB38_249:
	movq	1072(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	1056(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp1809:
.LBB38_255:
	.loc	4 233 9
	movq	816(%rsp), %rax
.Ltmp1810:
	movq	%rax, 112(%rsp)
	movq	824(%rsp), %rax
.Ltmp1811:
	.loc	4 0 9
	movq	%rax, 128(%rsp)
.Ltmp1812:
.LBB38_256:
.Ltmp1075:
	.loc	4 241 12 is_stmt 1
	movl	$type...60x.7command_line_arguments.Bind.archPath, %edi
	callq	runtime.newobject
	movq	%rax, 136(%rsp)
.Ltmp1076:
.Ltmp1813:
.Ltmp1077:
	.loc	4 242 3
	movl	$type..chan.0command_line_arguments.Bind.archPath, %edi
	callq	runtime.newobject
	movq	%rax, 184(%rsp)
.Ltmp1078:
.Ltmp1814:
.Ltmp1079:
	.loc	4 242 15 is_stmt 0
	movl	$type..chan.0command_line_arguments.Bind.archPath, %edi
	xorl	%esi, %esi
	callq	runtime.makechan
.Ltmp1080:
.Ltmp1815:
	movq	%rax, %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_260
.Ltmp1816:
.Ltmp1081:
	movq	184(%rsp), %rdi
	movq	%rbp, %rsi
	callq	runtime.writebarrierptr
.Ltmp1082:
	jmp	.LBB38_264
.Ltmp1817:
.LBB38_260:
	cmpq	$0, 184(%rsp)
	jne	.LBB38_262
.Ltmp1818:
.Ltmp1083:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1084:
.Ltmp1819:
.LBB38_262:
	movq	184(%rsp), %rax
	movq	%rbp, (%rax)
.Ltmp1820:
.LBB38_264:
	.loc	4 0 15
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 352(%rsp)
	movq	$0, 368(%rsp)
.Ltmp1821:
	.loc	4 243 3 is_stmt 1
	cmpq	$0, 128(%rsp)
	jle	.LBB38_265
.Ltmp1822:
	.loc	4 0 3 is_stmt 0
	xorl	%eax, %eax
	movq	%rax, 160(%rsp)
	movl	$0, %eax
	movq	%rax, 144(%rsp)
	movq	136(%rsp), %rax
	movq	%rax, 192(%rsp)
	xorl	%r12d, %r12d
.Ltmp1823:
.LBB38_267:
	movq	112(%rsp), %rcx
	movq	16(%rcx), %rax
	movq	%rax, 368(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 352(%rsp)
.Ltmp1085:
	.loc	4 244 7 is_stmt 1
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5, %edi
	callq	runtime.newobject
.Ltmp1086:
.Ltmp1824:
	movq	%rax, %r13
	movq	$command_line_arguments.Bind..func1, 3000(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 3008(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 3016(%rsp)
	movq	176(%rsp), %rax
	movq	%rax, 3024(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 3032(%rsp)
	movq	296(%rsp), %rax
	movq	%rax, 3040(%rsp)
	movq	184(%rsp), %rax
	movq	%rax, 3048(%rsp)
.Ltmp1087:
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5, %edi
	movq	%r13, %rsi
	leaq	3000(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1088:
.Ltmp1825:
	.loc	4 244 4 is_stmt 0
	testq	%r13, %r13
	jne	.LBB38_271
.Ltmp1826:
.Ltmp1089:
	movl	$11, %edi
	callq	__go_runtime_error
.Ltmp1090:
.Ltmp1827:
.LBB38_271:
.Ltmp1091:
	movl	$type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5, %edi
	callq	runtime.newobject
.Ltmp1092:
.Ltmp1828:
	movq	%rax, %rbp
	movq	%r13, 4352(%rsp)
	movq	368(%rsp), %rax
	leaq	4360(%rsp), %rcx
	movq	%rax, 16(%rcx)
	movaps	352(%rsp), %xmm0
	movups	%xmm0, (%rcx)
.Ltmp1093:
	movl	$type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5, %edi
	movq	%rbp, %rsi
	leaq	4352(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1094:
.Ltmp1829:
.Ltmp1095:
	movl	$command_line_arguments.command_line_arguments..thunk4, %edi
	movq	%rbp, %rsi
	callq	__go_go
.Ltmp1096:
.Ltmp1830:
	.loc	4 254 8 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rax
	movq	%rax, %rbx
	.loc	4 254 13 is_stmt 0
	testq	%rax, %rax
	jne	.LBB38_276
.Ltmp1831:
.Ltmp1097:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1098:
	movq	%r15, %rbx
.Ltmp1832:
.LBB38_276:
	.loc	4 254 7
	cmpb	$0, 8(%rbx)
	je	.LBB38_296
.Ltmp1833:
	.loc	4 0 0
	movq	192(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	160(%rsp), %r14
	jmp	.LBB38_278
.Ltmp1834:
.LBB38_296:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 2928(%rsp)
	movaps	%xmm0, 2912(%rsp)
	movaps	%xmm0, 2896(%rsp)
.Ltmp1835:
	.loc	4 255 15 is_stmt 1
	movq	184(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp1099:
	.loc	4 255 13 is_stmt 0
	leaq	2896(%rsp), %rsi
	callq	runtime.chanrecv1
.Ltmp1100:
.Ltmp1836:
	.loc	4 0 13
	movaps	2896(%rsp), %xmm0
	movaps	2912(%rsp), %xmm1
	movaps	2928(%rsp), %xmm2
	movaps	%xmm2, 240(%rsp)
	movaps	%xmm1, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	.loc	4 256 17 is_stmt 1
	movq	240(%rsp), %r13
	testq	%r13, %r13
	jne	.LBB38_298
.Ltmp1837:
	.loc	4 0 17 is_stmt 0
	movq	192(%rsp), %rax
	movq	%rax, 744(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 752(%rsp)
	movq	160(%rsp), %rcx
	movq	%rcx, 760(%rsp)
	.loc	4 259 13 is_stmt 1
	leaq	1(%rax), %r13
	cmpq	%rcx, %r13
	jbe	.LBB38_309
.Ltmp1838:
.Ltmp1103:
	movq	760(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	744(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, %esi
	leaq	2496(%rsp), %rdi
	movq	%r13, %rdx
	callq	runtime.growslice
.Ltmp1104:
.Ltmp1839:
	.loc	4 0 13 is_stmt 0
	movq	2496(%rsp), %rbp
	movq	2504(%rsp), %rax
	movq	2512(%rsp), %rcx
	movq	272(%rsp), %rdx
	movq	%rdx, 192(%rsp)
	movq	280(%rsp), %r13
	movq	264(%rsp), %rdx
	movq	%rdx, 160(%rsp)
	jmp	.LBB38_302
.Ltmp1840:
.LBB38_309:
	.loc	4 259 13
	cmpq	160(%rsp), %r13
	jg	.LBB38_311
.Ltmp1841:
	.loc	4 0 13
	movq	%r13, %rax
	movq	160(%rsp), %rcx
	orq	%rcx, %rax
	movq	192(%rsp), %rbp
	movq	%r13, %rax
	jns	.LBB38_302
.Ltmp1842:
.LBB38_311:
.Ltmp1101:
	.loc	4 259 13
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1102:
	movq	272(%rsp), %rbp
	movq	%rbp, 192(%rsp)
	movq	280(%rsp), %rcx
	movq	%rcx, %r13
	movq	264(%rsp), %rsi
	movq	%rsi, %rax
	movq	%rsi, 160(%rsp)
	movq	%rcx, %rax
	movq	%rsi, %rcx
.Ltmp1843:
.LBB38_302:
	movq	%rbp, 744(%rsp)
	movq	%rax, 752(%rsp)
	movq	%rcx, 760(%rsp)
	cmpq	$0, 144(%rsp)
	js	.LBB38_304
.Ltmp1844:
	.loc	4 0 13
	cmpq	%rax, 144(%rsp)
	jl	.LBB38_305
.Ltmp1845:
.LBB38_304:
.Ltmp1105:
	.loc	4 259 13
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1106:
	movq	312(%rsp), %rax
	movq	%rax, 144(%rsp)
.Ltmp1846:
.LBB38_305:
	movq	144(%rsp), %rax
	leaq	(%rax,%rax,2), %rax
	shlq	$4, %rax
	addq	%rax, %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_306
.Ltmp1847:
.Ltmp1107:
	movl	$command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, %edi
	movq	%rbp, %rsi
	leaq	208(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1108:
	jmp	.LBB38_313
.Ltmp1848:
.LBB38_306:
	testq	%rbp, %rbp
	jne	.LBB38_308
.Ltmp1849:
.Ltmp1109:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1110:
	movq	304(%rsp), %rbp
.Ltmp1850:
.LBB38_308:
	movaps	208(%rsp), %xmm0
	movaps	224(%rsp), %xmm1
	movaps	240(%rsp), %xmm2
	movups	%xmm2, 32(%rbp)
	movups	%xmm1, 16(%rbp)
	movups	%xmm0, (%rbp)
	movq	%rbp, 304(%rsp)
.Ltmp1851:
.LBB38_313:
	.loc	4 259 11
	movq	744(%rsp), %rcx
.Ltmp1852:
	.loc	4 0 11
	movq	144(%rsp), %rax
	movq	%rax, 312(%rsp)
	.loc	4 259 11
	movq	752(%rsp), %rax
.Ltmp1853:
	movq	760(%rsp), %r14
.Ltmp1854:
	.loc	4 0 11
	movq	%rax, 144(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 264(%rsp)
	movq	%r13, 280(%rsp)
	movq	192(%rsp), %rax
	movq	%rax, 272(%rsp)
	movq	%r14, 160(%rsp)
	movq	%rcx, 136(%rsp)
.Ltmp1855:
	movq	%rcx, 192(%rsp)
.Ltmp1856:
.LBB38_278:
	movq	%r12, %rax
	.loc	4 243 3 is_stmt 1
	addq	$1, %rax
	addq	$24, 112(%rsp)
	movq	%rbx, %r15
	movq	%rax, %r12
	cmpq	128(%rsp), %rax
	jl	.LBB38_267
	jmp	.LBB38_279
.Ltmp1857:
.LBB38_265:
	.loc	4 0 3 is_stmt 0
	xorl	%eax, %eax
.Ltmp1858:
	movq	%rax, 144(%rsp)
	xorl	%r14d, %r14d
.Ltmp1859:
.LBB38_279:
	.loc	4 262 6 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rbp
	.loc	4 262 11 is_stmt 0
	testq	%rbp, %rbp
	jne	.LBB38_281
.Ltmp1860:
.Ltmp1112:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1113:
.Ltmp1861:
.LBB38_281:
	.loc	4 262 3
	testb	$1, 8(%rbp)
	je	.LBB38_319
.Ltmp1862:
	.loc	4 0 3
	cmpq	$0, 128(%rsp)
	jle	.LBB38_319
.Ltmp1863:
	xorl	%eax, %eax
	movq	%rax, 112(%rsp)
.Ltmp1864:
.LBB38_284:
	movq	%rbp, 160(%rsp)
	movq	168(%rsp), %rbp
	movq	%r13, %r15
	movq	152(%rsp), %r12
.Ltmp1865:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 2880(%rsp)
	movaps	%xmm0, 2864(%rsp)
	movaps	%xmm0, 2848(%rsp)
.Ltmp1866:
	.loc	4 264 15 is_stmt 1
	movq	184(%rsp), %rax
	movq	(%rax), %rdi
.Ltmp1114:
	.loc	4 264 13 is_stmt 0
	leaq	2848(%rsp), %rsi
	callq	runtime.chanrecv1
.Ltmp1115:
.Ltmp1867:
	.loc	4 0 13
	movaps	2848(%rsp), %xmm0
	movaps	2864(%rsp), %xmm1
	movaps	2880(%rsp), %xmm2
	movaps	%xmm2, 240(%rsp)
	movaps	%xmm1, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	.loc	4 265 17 is_stmt 1
	movq	240(%rsp), %r13
	testq	%r13, %r13
	jne	.LBB38_298
.Ltmp1868:
	.loc	4 0 17 is_stmt 0
	movq	136(%rsp), %rax
	movq	%rax, 720(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 728(%rsp)
	movq	%r14, 736(%rsp)
	.loc	4 268 13 is_stmt 1
	leaq	1(%rax), %r13
	cmpq	%r14, %r13
	jbe	.LBB38_314
.Ltmp1869:
.Ltmp1118:
	movq	736(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	720(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, %esi
	leaq	2472(%rsp), %rdi
	movq	%r13, %rdx
	callq	runtime.growslice
.Ltmp1119:
.Ltmp1870:
	.loc	4 0 13 is_stmt 0
	movq	2472(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	2480(%rsp), %rax
	movq	2488(%rsp), %r14
	movq	%rbp, 168(%rsp)
	movq	%r15, %r13
	movq	%r12, 152(%rsp)
	jmp	.LBB38_289
.Ltmp1871:
.LBB38_314:
	.loc	4 268 13
	cmpq	%r14, %r13
	jg	.LBB38_316
.Ltmp1872:
	.loc	4 0 13
	movq	%r13, %rax
	orq	%r14, %rax
	movq	136(%rsp), %rax
	movq	%rax, 168(%rsp)
	movq	%r14, 152(%rsp)
	movq	%r13, %rax
	jns	.LBB38_289
.Ltmp1873:
.LBB38_316:
.Ltmp1116:
	.loc	4 268 13
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1117:
	movq	%rbp, 168(%rsp)
	movq	%r15, %r13
	movq	%r12, 152(%rsp)
	movq	%rbp, 136(%rsp)
	movq	%r15, %rax
	movq	%r12, %r14
.Ltmp1874:
.LBB38_289:
	movq	136(%rsp), %rcx
	movq	%rcx, 720(%rsp)
	movq	%rax, 728(%rsp)
	movq	%r14, 736(%rsp)
	cmpq	$0, 144(%rsp)
	js	.LBB38_291
.Ltmp1875:
	.loc	4 0 13
	movq	144(%rsp), %rcx
	movq	%rcx, %rbp
	cmpq	%rax, %rcx
	jl	.LBB38_292
.Ltmp1876:
.LBB38_291:
.Ltmp1120:
	.loc	4 268 13
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1121:
	movq	160(%rsp), %rbp
.Ltmp1877:
.LBB38_292:
	leaq	(,%rbp,2), %rax
	addq	%rbp, %rax
	shlq	$4, %rax
	addq	%rax, 136(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_293
.Ltmp1878:
.Ltmp1122:
	movl	$command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, %edi
	movq	136(%rsp), %rsi
	leaq	208(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1123:
	jmp	.LBB38_318
.Ltmp1879:
.LBB38_293:
	cmpq	$0, 136(%rsp)
	jne	.LBB38_295
.Ltmp1880:
.Ltmp1124:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1125:
	movq	%rbx, 136(%rsp)
.Ltmp1881:
.LBB38_295:
	movaps	208(%rsp), %xmm0
	movaps	224(%rsp), %xmm1
	movaps	240(%rsp), %xmm2
	movq	136(%rsp), %rbx
	movups	%xmm2, 32(%rbx)
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
.Ltmp1882:
.LBB38_318:
	.loc	4 268 11
	movq	720(%rsp), %rax
.Ltmp1883:
	movq	%rax, 136(%rsp)
	movq	728(%rsp), %rax
.Ltmp1884:
	movq	%rax, 144(%rsp)
	movq	736(%rsp), %r14
.Ltmp1885:
	.loc	4 0 11
	movq	112(%rsp), %rax
	movq	%rax, %rcx
.Ltmp1886:
	.loc	4 263 31 is_stmt 1
	addq	$1, %rcx
.Ltmp1887:
	.loc	4 0 31 is_stmt 0
	movq	%rcx, %rax
.Ltmp1888:
	.loc	4 263 18
	movq	%rcx, 112(%rsp)
	cmpq	128(%rsp), %rcx
	jl	.LBB38_284
.Ltmp1889:
.LBB38_319:
	.loc	4 0 18
	movaps	.Lconst.375+16(%rip), %xmm0
	movaps	%xmm0, 4240(%rsp)
	movaps	.Lconst.375(%rip), %xmm0
	movaps	%xmm0, 4224(%rsp)
	leaq	4224(%rsp), %rax
	.loc	4 273 15 is_stmt 1
	movq	%rax, 1440(%rsp)
	movq	$2, 1448(%rsp)
	movq	$2, 1456(%rsp)
.Ltmp1127:
	movq	1456(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1440(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.376, %edi
	movl	$5, %esi
	callq	os_exec.Command
	movq	%rax, 128(%rsp)
.Ltmp1128:
.Ltmp1890:
	.loc	4 0 15 is_stmt 0
	movq	128(%rsp), %rax
	movq	%rax, 184(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp1891:
	.loc	4 274 3 is_stmt 1
	cmpq	$0, 144(%rsp)
	jle	.LBB38_360
.Ltmp1892:
	.loc	4 0 3 is_stmt 0
	addq	$16, 136(%rsp)
	xorl	%eax, %eax
	movq	%rax, 112(%rsp)
.Ltmp1893:
.LBB38_322:
	movq	136(%rsp), %rax
	.loc	4 274 3
	movq	-16(%rax), %rdi
.Ltmp1894:
	movq	-8(%rax), %rsi
.Ltmp1895:
	.loc	4 0 3
	movups	(%rax), %xmm0
	movaps	%xmm0, 208(%rsp)
.Ltmp1129:
	.loc	4 275 41 is_stmt 1
	callq	command_line_arguments.ArchClang
.Ltmp1896:
.Ltmp1130:
	.loc	4 0 41 is_stmt 0
	movq	%rax, 936(%rsp)
	movq	%rdx, 944(%rsp)
	movq	184(%rsp), %r12
	movq	%r12, 168(%rsp)
	cmpq	$0, 128(%rsp)
	jne	.LBB38_326
.Ltmp1897:
.Ltmp1131:
	.loc	4 275 7
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1132:
.Ltmp1898:
.Ltmp1133:
	.loc	4 275 25
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1134:
	movq	%r15, 168(%rsp)
	movq	%rbp, %r12
.Ltmp1899:
.LBB38_326:
	.loc	4 0 25
	movq	%r12, %rax
	movups	16(%r12), %xmm0
	movaps	%xmm0, 320(%rsp)
	movq	32(%r12), %rax
	movq	%rax, 336(%rsp)
	.loc	4 275 15
	movq	328(%rsp), %rbx
	movups	.Lconst.379(%rip), %xmm0
	movaps	%xmm0, 2064(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 2048(%rsp)
	leaq	3(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB38_336
.Ltmp1900:
.Ltmp1137:
	movq	336(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	320(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	2448(%rsp), %rdi
	callq	runtime.growslice
.Ltmp1138:
.Ltmp1901:
	.loc	4 0 15
	movq	2448(%rsp), %r13
	movq	2456(%rsp), %rdx
	movq	2464(%rsp), %rax
	jmp	.LBB38_329
.Ltmp1902:
.LBB38_336:
	.loc	4 275 15
	cmpq	%rax, %rdx
	jg	.LBB38_338
.Ltmp1903:
	.loc	4 0 15
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB38_338
.Ltmp1904:
	.loc	4 275 15
	movq	320(%rsp), %r13
	movq	%rdx, 304(%rsp)
	movq	%rax, 912(%rsp)
	movq	%r13, 312(%rsp)
	jmp	.LBB38_329
.Ltmp1905:
.LBB38_338:
.Ltmp1135:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1136:
	movq	312(%rsp), %r13
	movq	304(%rsp), %rdx
	movq	912(%rsp), %rax
.Ltmp1906:
.LBB38_329:
	movq	%r13, 320(%rsp)
	movq	%rdx, 328(%rsp)
	movq	%rax, 336(%rsp)
	testq	%rbx, %rbx
	js	.LBB38_331
.Ltmp1907:
	.loc	4 0 15
	movq	%rbx, 152(%rsp)
	cmpq	%rdx, %rbx
	jl	.LBB38_332
.Ltmp1908:
.LBB38_331:
.Ltmp1139:
	.loc	4 275 15
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1140:
	movq	%r14, 152(%rsp)
.Ltmp1909:
.LBB38_332:
	movq	152(%rsp), %rax
	shlq	$4, %rax
	addq	%rax, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_333
.Ltmp1910:
.Ltmp1141:
	movl	$string..d, %edi
	movq	%r13, %rsi
	leaq	2064(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1142:
	jmp	.LBB38_341
.Ltmp1911:
.LBB38_333:
	testq	%r13, %r13
	jne	.LBB38_335
.Ltmp1912:
.Ltmp1143:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1144:
	movq	264(%rsp), %r13
.Ltmp1913:
.LBB38_335:
	movaps	2064(%rsp), %xmm0
	movups	%xmm0, (%r13)
	movq	%r13, 264(%rsp)
.Ltmp1914:
.LBB38_341:
	movq	%rbx, %r14
	addq	$1, %r14
	movq	320(%rsp), %rbp
	js	.LBB38_343
.Ltmp1915:
	.loc	4 0 15
	cmpq	328(%rsp), %r14
	jl	.LBB38_344
.Ltmp1916:
.LBB38_343:
.Ltmp1145:
	.loc	4 275 15
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1146:
	movq	160(%rsp), %r14
.Ltmp1917:
.LBB38_344:
	movq	%r14, %rax
	shlq	$4, %rax
	addq	%rax, %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_345
.Ltmp1918:
.Ltmp1147:
	movl	$string..d, %edi
	movq	%rbp, %rsi
	leaq	936(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1148:
	jmp	.LBB38_349
.Ltmp1919:
.LBB38_345:
	testq	%rbp, %rbp
	jne	.LBB38_347
.Ltmp1920:
.Ltmp1149:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1150:
	movq	280(%rsp), %rbp
.Ltmp1921:
.LBB38_347:
	movups	936(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	movq	%rbp, 280(%rsp)
.Ltmp1922:
.LBB38_349:
	addq	$2, %rbx
	movq	320(%rsp), %rbp
	js	.LBB38_351
.Ltmp1923:
	.loc	4 0 15
	cmpq	328(%rsp), %rbx
	jl	.LBB38_352
.Ltmp1924:
.LBB38_351:
.Ltmp1151:
	.loc	4 275 15
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1152:
	movq	192(%rsp), %rbx
.Ltmp1925:
.LBB38_352:
	movq	%rbx, %rax
	shlq	$4, %rax
	addq	%rax, %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_353
.Ltmp1926:
.Ltmp1153:
	movl	$string..d, %edi
	movq	%rbp, %rsi
	leaq	2048(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1154:
	jmp	.LBB38_357
.Ltmp1927:
.LBB38_353:
	testq	%rbp, %rbp
	jne	.LBB38_355
.Ltmp1928:
.Ltmp1155:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1156:
	movq	272(%rsp), %rbp
.Ltmp1929:
.LBB38_355:
	movaps	2048(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	movq	%rbp, 272(%rsp)
.Ltmp1930:
.LBB38_357:
	.loc	4 0 15
	movq	168(%rsp), %rax
	leaq	16(%rax), %rsi
	movq	336(%rsp), %rax
	movq	%rax, 1040(%rsp)
	movaps	320(%rsp), %xmm0
	movaps	%xmm0, 1024(%rsp)
	.loc	4 275 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_558
.Ltmp1931:
.Ltmp1157:
	movl	$type...6.7string, %edi
	leaq	1024(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1158:
	jmp	.LBB38_359
.Ltmp1932:
.LBB38_558:
	movq	1040(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	1024(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp1933:
.LBB38_359:
	.loc	4 0 13
	movq	112(%rsp), %rax
	.loc	4 274 3 is_stmt 1
	addq	$1, %rax
	addq	$48, 136(%rsp)
	movq	%rbx, 192(%rsp)
	movq	%r14, 160(%rsp)
	movq	168(%rsp), %r15
	movq	152(%rsp), %r14
	movq	%r12, %rbp
	movq	%rax, %rcx
	movq	%rax, 112(%rsp)
	cmpq	144(%rsp), %rax
	jl	.LBB38_322
.Ltmp1934:
.LBB38_360:
	.loc	4 277 6
	cmpq	$0, 128(%rsp)
	jne	.LBB38_363
.Ltmp1935:
.Ltmp1160:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1161:
.Ltmp1936:
.Ltmp1162:
	.loc	4 277 24 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1163:
.Ltmp1937:
.LBB38_363:
	.loc	4 0 24
	movq	184(%rsp), %rax
	movups	16(%rax), %xmm0
	movaps	%xmm0, 400(%rsp)
	movq	32(%rax), %rax
	movq	%rax, 416(%rsp)
	.loc	4 277 14
	movq	408(%rsp), %r14
	movups	.Lconst.381(%rip), %xmm0
	movaps	%xmm0, 2032(%rsp)
	leaq	2(%r14), %rbp
	cmpq	%rax, %rbp
	jbe	.LBB38_373
.Ltmp1938:
.Ltmp1166:
	movq	416(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	400(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	2424(%rsp), %rdi
	movl	$string..d, %esi
	movq	%rbp, %rdx
	callq	runtime.growslice
.Ltmp1167:
.Ltmp1939:
	.loc	4 0 14
	movq	2424(%rsp), %r13
	movq	2432(%rsp), %rbp
	movq	2440(%rsp), %rax
	jmp	.LBB38_366
.Ltmp1940:
.LBB38_298:
	movq	248(%rsp), %rbp
	jmp	.LBB38_186
.Ltmp1941:
.LBB38_373:
	.loc	4 277 14
	cmpq	%rax, %rbp
	jg	.LBB38_375
.Ltmp1942:
	.loc	4 0 14
	movq	%rax, %rcx
	orq	%rbp, %rcx
	js	.LBB38_375
.Ltmp1943:
	.loc	4 277 14
	movq	400(%rsp), %r13
	jmp	.LBB38_366
.Ltmp1944:
.LBB38_375:
.Ltmp1164:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp1165:
.Ltmp1945:
.LBB38_366:
	movq	%r13, 400(%rsp)
	movq	%rbp, 408(%rsp)
	movq	%rax, 416(%rsp)
	testq	%r14, %r14
	js	.LBB38_368
.Ltmp1946:
	.loc	4 0 14
	cmpq	%rbp, %r14
	jl	.LBB38_369
.Ltmp1947:
.LBB38_368:
.Ltmp1168:
	.loc	4 277 14
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1169:
.Ltmp1948:
.LBB38_369:
	movq	%r14, %rax
	shlq	$4, %rax
	addq	%rax, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_370
.Ltmp1949:
.Ltmp1170:
	.loc	4 0 14
	leaq	2032(%rsp), %rdx
	.loc	4 277 14
	movl	$string..d, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp1171:
	jmp	.LBB38_379
.Ltmp1950:
.LBB38_370:
	testq	%r13, %r13
	jne	.LBB38_372
.Ltmp1951:
.Ltmp1172:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1173:
.Ltmp1952:
.LBB38_372:
	movaps	2032(%rsp), %xmm0
	movups	%xmm0, (%r13)
.Ltmp1953:
.LBB38_379:
	addq	$1, %r14
	movq	400(%rsp), %rbp
	js	.LBB38_381
.Ltmp1954:
	.loc	4 0 14
	cmpq	408(%rsp), %r14
	jl	.LBB38_382
.Ltmp1955:
.LBB38_381:
.Ltmp1174:
	.loc	4 277 14
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp1175:
.Ltmp1956:
.LBB38_382:
	shlq	$4, %r14
	addq	%r14, %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_383
.Ltmp1957:
.Ltmp1176:
	.loc	4 0 14
	leaq	384(%rsp), %rdx
	.loc	4 277 14
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp1177:
	jmp	.LBB38_387
.Ltmp1958:
.LBB38_383:
	testq	%rbp, %rbp
	jne	.LBB38_385
.Ltmp1959:
.Ltmp1178:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1179:
.Ltmp1960:
.LBB38_385:
	movups	384(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp1961:
.LBB38_387:
	.loc	4 0 14
	addq	$16, 128(%rsp)
	movq	416(%rsp), %rax
	movq	%rax, 1008(%rsp)
	movaps	400(%rsp), %xmm0
	movaps	%xmm0, 992(%rsp)
	.loc	4 277 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB38_559
.Ltmp1962:
.Ltmp1180:
	.loc	4 0 12
	leaq	992(%rsp), %rdx
	.loc	4 277 12
	movl	$type...6.7string, %edi
	movq	128(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp1181:
	jmp	.LBB38_389
.Ltmp1963:
.LBB38_559:
	movq	1008(%rsp), %rax
	movq	128(%rsp), %rcx
	movq	%rax, 16(%rcx)
	movaps	992(%rsp), %xmm0
	movups	%xmm0, (%rcx)
.Ltmp1964:
.LBB38_389:
	.loc	4 278 20 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %rdi
	movq	176(%rsp), %rax
	.loc	4 278 13 is_stmt 0
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
.Ltmp1182:
	movq	184(%rsp), %rcx
	callq	command_line_arguments.RunCmd
.Ltmp1183:
.Ltmp1965:
	.loc	4 0 13
	movq	%rax, %r13
	.loc	4 278 46
	testq	%rax, %rax
	jne	.LBB38_159
.Ltmp1966:
	.loc	4 283 16 is_stmt 1
	movq	104(%rsp), %rax
	movq	(%rax), %r14
	.loc	4 283 21 is_stmt 0
	testq	%r14, %r14
	jne	.LBB38_393
.Ltmp1967:
.Ltmp1184:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1185:
.Ltmp1968:
.LBB38_393:
	.loc	4 0 21
	movq	48(%r14), %rbp
.Ltmp1969:
	movq	56(%r14), %r13
.Ltmp1970:
.Ltmp1186:
	.loc	4 284 16 is_stmt 1
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rbp, %rdi
	movq	%r13, %rsi
	callq	runtime.eqstring
.Ltmp1187:
.Ltmp1971:
	cmpb	$1, %al
	movl	$.Lconst.382, %eax
	cmoveq	%rax, %rbp
.Ltmp1972:
	.loc	4 0 16 is_stmt 0
	movl	$10, %eax
	cmoveq	%rax, %r13
.Ltmp1973:
	.loc	4 300 38 is_stmt 1
	movq	%rbp, 4448(%rsp)
	movq	%r13, 4456(%rsp)
	movups	.Lconst.304(%rip), %xmm0
	movups	%xmm0, 4464(%rsp)
	movups	.Lconst.340(%rip), %xmm0
	movups	%xmm0, 4480(%rsp)
	movups	%xmm0, 4496(%rsp)
	movups	.Lconst.342(%rip), %xmm0
	movups	%xmm0, 4512(%rsp)
	leaq	4448(%rsp), %rax
	movq	%rax, 1464(%rsp)
	movq	$5, 1472(%rsp)
	movq	$5, 1480(%rsp)
.Ltmp1188:
	movq	1480(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	1464(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp1189:
.Ltmp1974:
	.loc	4 300 22 is_stmt 0
	movq	104(%rsp), %rcx
	movq	(%rcx), %rdi
	.loc	4 300 13
	movq	384(%rsp), %rcx
	movq	392(%rsp), %r8
.Ltmp1190:
	movq	%rax, %rsi
	callq	command_line_arguments.CopyFile
.Ltmp1191:
.Ltmp1975:
	.loc	4 0 13
	movq	%rax, %r13
.Ltmp1976:
	.loc	4 300 129
	testq	%rax, %rax
	je	.LBB38_397
.Ltmp1977:
.LBB38_159:
	.loc	4 0 129
	movq	%rdx, %rbp
.Ltmp1978:
.LBB38_186:
	movb	$1, %r15b
.Ltmp1979:
	leaq	127(%rsp), %rbx
	jmp	.LBB38_553
.Ltmp1980:
.LBB38_397:
	movb	$1, %r15b
	movq	200(%rsp), %rbx
	jmp	.LBB38_398
.Ltmp1981:
.LBB38_12:
.Ltmp1324:
	jmp	.LBB38_19
.Ltmp1982:
.LBB38_14:
.Ltmp1126:
	jmp	.LBB38_19
.Ltmp1983:
.LBB38_13:
.Ltmp1159:
	jmp	.LBB38_19
.Ltmp1984:
.LBB38_15:
.Ltmp1111:
	jmp	.LBB38_19
.Ltmp1985:
.LBB38_16:
.Ltmp972:
	jmp	.LBB38_19
.Ltmp1986:
.LBB38_17:
.Ltmp955:
	jmp	.LBB38_19
.Ltmp1987:
.LBB38_18:
.Ltmp1343:
.LBB38_19:
.Ltmp1344:
	leaq	127(%rsp), %rdi
	.loc	4 402 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1345:
	.loc	4 0 1 is_stmt 0
	movb	$1, %r15b
	jmp	.LBB38_400
.LBB38_551:
.Ltmp1346:
	movq	%rax, %r14
	xorl	%r13d, %r13d
	xorl	%ebp, %ebp
	xorl	%r15d, %r15d
.Ltmp1988:
	leaq	127(%rsp), %rbx
	jmp	.LBB38_553
.Ltmp1989:
.LBB38_552:
.Ltmp1349:
	.loc	4 402 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp1990:
	.p2align	4, 0x90
.LBB38_553:
.Ltmp1347:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp1348:
.Ltmp1991:
	.loc	4 0 1
	testb	%r15b, %r15b
	je	.LBB38_560
.Ltmp1992:
	.loc	4 70 3 is_stmt 1
	movq	%r13, %rax
	movq	%rbp, %rdx
	addq	$4712, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1993:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1994:
.LBB38_560:
	.cfi_def_cfa_offset 4768
	.loc	4 0 3 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end38:
	.size	command_line_arguments.Bind, .Lfunc_end38-command_line_arguments.Bind
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table38:
.Lexception3:
	.byte	255
	.byte	3
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin38-.Lfunc_begin38
	.uleb128 .Ltmp871-.Lfunc_begin38
	.byte	0
	.byte	0
	.uleb128 .Ltmp871-.Lfunc_begin38
	.uleb128 .Ltmp922-.Ltmp871
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp922-.Lfunc_begin38
	.uleb128 .Ltmp923-.Ltmp922
	.byte	0
	.byte	0
	.uleb128 .Ltmp923-.Lfunc_begin38
	.uleb128 .Ltmp942-.Ltmp923
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp943-.Lfunc_begin38
	.uleb128 .Ltmp954-.Ltmp943
	.uleb128 .Ltmp955-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp958-.Lfunc_begin38
	.uleb128 .Ltmp967-.Ltmp958
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp968-.Lfunc_begin38
	.uleb128 .Ltmp971-.Ltmp968
	.uleb128 .Ltmp972-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp973-.Lfunc_begin38
	.uleb128 .Ltmp1297-.Ltmp973
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1298-.Lfunc_begin38
	.uleb128 .Ltmp1323-.Ltmp1298
	.uleb128 .Ltmp1324-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1325-.Lfunc_begin38
	.uleb128 .Ltmp1084-.Ltmp1325
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1085-.Lfunc_begin38
	.uleb128 .Ltmp1110-.Ltmp1085
	.uleb128 .Ltmp1111-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1112-.Lfunc_begin38
	.uleb128 .Ltmp1113-.Ltmp1112
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1114-.Lfunc_begin38
	.uleb128 .Ltmp1125-.Ltmp1114
	.uleb128 .Ltmp1126-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1127-.Lfunc_begin38
	.uleb128 .Ltmp1128-.Ltmp1127
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1129-.Lfunc_begin38
	.uleb128 .Ltmp1158-.Ltmp1129
	.uleb128 .Ltmp1159-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1160-.Lfunc_begin38
	.uleb128 .Ltmp1191-.Ltmp1160
	.uleb128 .Ltmp1343-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1344-.Lfunc_begin38
	.uleb128 .Ltmp1345-.Ltmp1344
	.uleb128 .Ltmp1346-.Lfunc_begin38
	.byte	0
	.uleb128 .Ltmp1345-.Lfunc_begin38
	.uleb128 .Ltmp1347-.Ltmp1345
	.byte	0
	.byte	0
	.uleb128 .Ltmp1347-.Lfunc_begin38
	.uleb128 .Ltmp1348-.Ltmp1347
	.uleb128 .Ltmp1349-.Lfunc_begin38
	.byte	1
	.uleb128 .Ltmp1348-.Lfunc_begin38
	.uleb128 .Lfunc_end38-.Ltmp1348
	.byte	0
	.byte	0
.Lcst_end3:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase3:
	.p2align	2

	.section	.text.command_line_arguments.validateGoInstall,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.validateGoInstall,@function
command_line_arguments.validateGoInstall:
.Lfunc_begin39:
	.loc	5 46 0 is_stmt 1
	.cfi_startproc
	leaq	-376(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB39_2
	movabsq	$376, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB39_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$352, %rsp
	.cfi_def_cfa_offset 384
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp1995:
	movq	%rdi, %rbx
.Ltmp1996:
	leaq	296(%rsp), %rdi
.Ltmp1997:
	.loc	5 56 15 prologue_end
	movl	$.Lconst.554, %edx
	movl	$2, %ecx
	movq	%rbx, %rsi
	callq	command_line_arguments.LookPath
	.loc	5 56 38 is_stmt 0
	cmpq	$0, 312(%rsp)
	je	.LBB39_4
.Ltmp1998:
	.loc	5 57 14 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.556, %edi
	movl	$26, %esi
	callq	fmt.Errorf
.Ltmp1999:
.LBB39_11:
	.loc	5 0 14 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %r14
.Ltmp2000:
	.loc	5 48 9 is_stmt 1
	testq	%r15, %r15
	jne	.LBB39_13
	jmp	.LBB39_14
.Ltmp2001:
.LBB39_4:
	.loc	5 0 9 is_stmt 0
	leaq	256(%rsp), %rdi
.Ltmp2002:
	.loc	5 60 14 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.GoVersion
.Ltmp2003:
	movq	280(%rsp), %r15
.Ltmp2004:
	movq	288(%rsp), %r14
.Ltmp2005:
	.loc	5 0 14 is_stmt 0
	movups	256(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	272(%rsp), %rax
	movq	%rax, 64(%rsp)
	.loc	5 61 9 is_stmt 1
	testq	%r15, %r15
	je	.LBB39_5
.Ltmp2006:
	.loc	5 48 9
	testq	%r15, %r15
	je	.LBB39_14
.Ltmp2007:
.LBB39_13:
	.loc	5 49 7
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp2008:
	.loc	5 0 7 is_stmt 0
	movups	.Lconst.553(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	leaq	192(%rsp), %rdx
	.loc	5 49 7
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 176(%rsp)
	movq	%rbx, 184(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	328(%rsp), %rdi
	callq	fmt.Println
.Ltmp2009:
.LBB39_14:
	.loc	5 52 2 is_stmt 1
	movq	%r15, %rax
	movq	%r14, %rdx
	addq	$352, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2010:
	.cfi_def_cfa_offset 8
	retq
.LBB39_5:
	.cfi_def_cfa_offset 384
.Ltmp2011:
	.loc	5 64 6
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	5 64 2 is_stmt 0
	testb	$1, %al
	je	.LBB39_15
.Ltmp2012:
	.loc	5 0 2
	movups	.Lconst.558(%rip), %xmm0
	movaps	%xmm0, 240(%rsp)
	leaq	240(%rsp), %rax
	.loc	5 65 33 is_stmt 1
	movq	%rax, 104(%rsp)
	movq	$16, 112(%rsp)
	movq	$16, 120(%rsp)
	.loc	5 65 12 is_stmt 0
	movq	120(%rsp), %rax
	movq	%rax, 40(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.HasPrefix
	.loc	5 65 55
	testb	%al, %al
	jne	.LBB39_9
.Ltmp2013:
	.loc	5 0 55
	movups	.Lconst.559(%rip), %xmm0
	movaps	%xmm0, 224(%rsp)
	leaq	224(%rsp), %rax
	.loc	5 65 85
	movq	%rax, 128(%rsp)
	movq	$16, 136(%rsp)
	movq	$16, 144(%rsp)
	.loc	5 65 64
	movq	144(%rsp), %rax
	movq	%rax, 40(%rsp)
	movups	128(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.HasPrefix
	.loc	5 65 107
	testb	%al, %al
	jne	.LBB39_9
.Ltmp2014:
	.loc	5 0 107
	movups	.Lconst.560(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
	leaq	208(%rsp), %rax
	.loc	5 65 137
	movq	%rax, 152(%rsp)
	movq	$16, 160(%rsp)
	movq	$16, 168(%rsp)
	.loc	5 65 116
	movq	168(%rsp), %rax
	movq	%rax, 40(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.HasPrefix
.Ltmp2015:
.LBB39_9:
	.loc	5 65 3
	testb	$1, %al
	jne	.LBB39_10
.Ltmp2016:
.LBB39_15:
	.loc	5 0 3
	xorl	%r15d, %r15d
.Ltmp2017:
	xorl	%r14d, %r14d
.Ltmp2018:
	.loc	5 48 9 is_stmt 1
	testq	%r15, %r15
	jne	.LBB39_13
	jmp	.LBB39_14
.Ltmp2019:
.LBB39_10:
	.loc	5 66 18
	movl	$.Lconst.561, %edi
	movl	$27, %esi
	callq	errors.New
	jmp	.LBB39_11
.Ltmp2020:
.Lfunc_end39:
	.size	command_line_arguments.validateGoInstall, .Lfunc_end39-command_line_arguments.validateGoInstall
	.cfi_endproc

	.section	.text.command_line_arguments.NewTmpDir,"ax",@progbits
	.globl	command_line_arguments.NewTmpDir
	.p2align	4, 0x90
	.type	command_line_arguments.NewTmpDir,@function
command_line_arguments.NewTmpDir:
.Lfunc_begin40:
	.loc	6 113 0
	.cfi_startproc
	leaq	-280(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB40_2
	movq	%r10, %rax
	movabsq	$280, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB40_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$232, %rsp
	.cfi_def_cfa_offset 288
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r15
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r13
.Ltmp2021:
	.loc	6 116 6 prologue_end
	movq	%rsi, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 116 2 is_stmt 0
	testb	$1, %al
	jne	.LBB40_3
.Ltmp2022:
	.loc	6 123 11 is_stmt 1
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB40_16
.Ltmp2023:
	.loc	6 0 11 is_stmt 0
	movl	$.Lconst.462, %ebx
.Ltmp2024:
	movl	$5, %r12d
	jmp	.LBB40_8
.Ltmp2025:
.LBB40_3:
	leaq	168(%rsp), %rdi
.Ltmp2026:
	.loc	6 118 24 is_stmt 1
	movl	$.Lconst.460, %ecx
	movl	$14, %r8d
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	io_ioutil.TempDir
	movq	184(%rsp), %rax
.Ltmp2027:
	.loc	6 119 10
	testq	%rax, %rax
	je	.LBB40_7
.Ltmp2028:
	.loc	6 118 24
	movq	192(%rsp), %rcx
	.loc	6 120 4
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r13)
	movq	%rax, 16(%r13)
	movq	%rcx, 24(%r13)
	jmp	.LBB40_15
.Ltmp2029:
.LBB40_16:
	.loc	6 126 22
	movq	%rbx, 200(%rsp)
	movq	%r15, 208(%rsp)
	movups	.Lconst.465(%rip), %xmm0
	movups	%xmm0, 216(%rsp)
	leaq	200(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	$2, 56(%rsp)
	movq	$2, 64(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, %rbx
.Ltmp2030:
	movq	%rdx, %r12
.Ltmp2031:
	.loc	6 0 22 is_stmt 0
	jmp	.LBB40_8
.Ltmp2032:
.LBB40_7:
	.loc	6 118 24 is_stmt 1
	movq	168(%rsp), %rbx
.Ltmp2033:
	movq	176(%rsp), %r12
.Ltmp2034:
.LBB40_8:
	.loc	6 129 6
	movq	%r14, %rdi
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 129 21 is_stmt 0
	testb	%al, %al
	je	.LBB40_9
.Ltmp2035:
	.loc	6 129 2
	testb	$1, %al
	jne	.LBB40_12
	jmp	.LBB40_14
.Ltmp2036:
.LBB40_9:
	.loc	6 129 25
	testq	%r14, %r14
	je	.LBB40_17
.Ltmp2037:
	movb	13(%r14), %al
	.loc	6 129 2
	testb	$1, %al
	je	.LBB40_14
.Ltmp2038:
.LBB40_12:
	.loc	6 130 25 is_stmt 1
	movups	.Lconst.467(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	%rbx, 40(%rsp)
.Ltmp2039:
	movq	%rbx, 144(%rsp)
	movq	%r12, 152(%rsp)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %rbx
	movq	%rdx, %rbp
	.loc	6 130 11 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movq	%rbx, 112(%rsp)
	movq	%rbp, 120(%rsp)
	leaq	112(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 96(%rsp)
	movq	%r15, 104(%rsp)
	.loc	6 130 4
	testq	%r14, %r14
	je	.LBB40_17
.Ltmp2040:
	movq	(%r14), %rdi
	leaq	96(%rsp), %rax
	.loc	6 130 11
	movq	%rax, 72(%rsp)
	movq	$1, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Logger.Println
	movq	40(%rsp), %rbx
.Ltmp2041:
.LBB40_14:
	.loc	6 132 2 is_stmt 1
	movq	%rbx, (%r13)
	movq	%r12, 8(%r13)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r13)
.Ltmp2042:
.LBB40_15:
	.loc	6 0 2 is_stmt 0
	movq	%r13, %rax
	addq	$232, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp2043:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB40_17:
	.cfi_def_cfa_offset 288
.Ltmp2044:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end40:
	.size	command_line_arguments.NewTmpDir, .Lfunc_end40-command_line_arguments.NewTmpDir
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk3,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk3,@function
command_line_arguments.command_line_arguments..thunk3:
.Lfunc_begin41:
	.loc	4 79 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB41_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB41_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp2045:
	.loc	4 79 3 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
	movq	%rax, %rdi
.Ltmp2046:
	callq	command_line_arguments.RemoveAll
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp2047:
.Lfunc_end41:
	.size	command_line_arguments.command_line_arguments..thunk3, .Lfunc_end41-command_line_arguments.command_line_arguments..thunk3
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI42_0:
	.zero	16
	.section	.text.command_line_arguments.MatchaPkgPath,"ax",@progbits
	.globl	command_line_arguments.MatchaPkgPath
	.p2align	4, 0x90
	.type	command_line_arguments.MatchaPkgPath,@function
command_line_arguments.MatchaPkgPath:
.Lfunc_begin42:
	.loc	5 83 0
	.cfi_startproc
	leaq	-280(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB42_2
	movq	%r10, %rax
	movabsq	$280, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB42_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$232, %rsp
	.cfi_def_cfa_offset 288
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	%rdi, 32(%rsp)
.Ltmp2048:
	.loc	5 84 32 prologue_end
	movl	$.Lconst.414, %esi
	movl	$6, %edx
	movq	%r15, %rdi
	callq	command_line_arguments.GoEnv
	leaq	104(%rsp), %rdi
.Ltmp2049:
	.loc	5 84 22 is_stmt 0
	movq	%rax, %rsi
	callq	path_filepath.SplitList
	movq	104(%rsp), %rbp
.Ltmp2050:
	.loc	5 0 22
	movq	112(%rsp), %rcx
.Ltmp2051:
	movq	%rcx, 40(%rsp)
.Ltmp2052:
	.loc	5 86 2 is_stmt 1
	testq	%rcx, %rcx
	movq	%rbp, 48(%rsp)
	jle	.LBB42_3
.Ltmp2053:
	.loc	5 0 2 is_stmt 0
	leaq	192(%rsp), %r13
	movl	$1, %r14d
.Ltmp2054:
	.p2align	4, 0x90
.LBB42_5:
	.loc	5 87 16 is_stmt 1
	movups	(%rbp), %xmm0
	movaps	%xmm0, 176(%rsp)
	movups	.Lconst.564(%rip), %xmm0
	movups	%xmm0, (%r13)
	movups	.Lconst.326(%rip), %xmm0
	movups	%xmm0, 16(%r13)
	leaq	176(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	$3, 64(%rsp)
	movq	$3, 72(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, %r12
.Ltmp2055:
	movq	%rdx, %rbx
.Ltmp2056:
	.loc	5 88 6
	movq	%r15, %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.IsDir
	testb	$1, %al
	jne	.LBB42_7
.Ltmp2057:
	.loc	5 0 6 is_stmt 0
	addq	$16, %rbp
	cmpq	40(%rsp), %r14
	leaq	1(%r14), %r14
	jl	.LBB42_5
	jmp	.LBB42_7
.Ltmp2058:
.LBB42_3:
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
.Ltmp2059:
.LBB42_7:
	.loc	5 92 7 is_stmt 1
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB42_14
.Ltmp2060:
	.loc	5 93 19
	cmpq	$0, 40(%rsp)
	je	.LBB42_9
.Ltmp2061:
	.loc	5 0 19 is_stmt 0
	jle	.LBB42_15
.Ltmp2062:
	.loc	5 96 20 is_stmt 1
	movq	48(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 128(%rsp)
	movups	.Lconst.564(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	movups	.Lconst.326(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$3, 88(%rsp)
	movq	$3, 96(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp2063:
	.loc	5 0 20 is_stmt 0
	movq	32(%rsp), %rcx
	.loc	5 96 4
	movq	%rax, (%rcx)
	movq	%rdx, 8(%rcx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rcx)
	jmp	.LBB42_10
.Ltmp2064:
.LBB42_14:
	.loc	5 0 4
	movq	32(%rsp), %rax
	.loc	5 99 2 is_stmt 1
	movq	%r12, (%rax)
	movq	%rbx, 8(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rax)
	jmp	.LBB42_11
.Ltmp2065:
.LBB42_9:
	.loc	5 94 19
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.565, %edi
	movl	$22, %esi
	callq	fmt.Errorf
.Ltmp2066:
	.loc	5 0 19 is_stmt 0
	movq	32(%rsp), %rcx
	.loc	5 94 4
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rcx)
	movq	%rax, 16(%rcx)
	movq	%rdx, 24(%rcx)
.Ltmp2067:
.LBB42_10:
	.loc	5 0 4
	movq	%rcx, %rax
.Ltmp2068:
.LBB42_11:
	addq	$232, %rsp
.Ltmp2069:
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp2070:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp2071:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB42_15:
	.cfi_def_cfa_offset 288
.Ltmp2072:
	.loc	5 96 32 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp2073:
.Lfunc_end42:
	.size	command_line_arguments.MatchaPkgPath, .Lfunc_end42-command_line_arguments.MatchaPkgPath
	.cfi_endproc

	.section	.text.command_line_arguments.ReadFile,"ax",@progbits
	.globl	command_line_arguments.ReadFile
	.p2align	4, 0x90
	.type	command_line_arguments.ReadFile,@function
command_line_arguments.ReadFile:
.Lfunc_begin43:
	.loc	6 193 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB43_2
	movq	%r10, %rax
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB43_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$128, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r12
.Ltmp2074:
	.loc	6 194 6 prologue_end
	movq	%rsi, %rdi
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 194 2 is_stmt 0
	testb	$1, %al
	je	.LBB43_5
.Ltmp2075:
	.loc	6 195 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
	movq	%r15, 72(%rsp)
	movq	%r14, 80(%rsp)
	leaq	72(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 56(%rsp)
	movq	%r13, 64(%rsp)
	.loc	6 195 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB43_9
.Ltmp2076:
	movq	(%rbx), %rdi
	leaq	56(%rsp), %rax
	.loc	6 195 11
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.478, %esi
	movl	$8, %edx
	callq	log.Logger.Printf
.Ltmp2077:
.LBB43_5:
	.loc	6 197 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 197 2 is_stmt 0
	testb	$1, %al
	jne	.LBB43_6
.Ltmp2078:
	.loc	6 200 9 is_stmt 1
	movl	$type...60x.7uint8, %edi
	callq	runtime.newobject
.Ltmp2079:
	.loc	6 200 2 is_stmt 0
	movq	%rax, (%r12)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%r12)
	movups	%xmm0, 8(%r12)
	jmp	.LBB43_8
.Ltmp2080:
.LBB43_6:
	.loc	6 0 2
	leaq	88(%rsp), %rdi
.Ltmp2081:
	.loc	6 198 17 is_stmt 1
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	io_ioutil.ReadFile
	movups	88(%rsp), %xmm0
	movq	104(%rsp), %rax
.Ltmp2082:
	.loc	6 198 3 is_stmt 0
	movups	%xmm0, (%r12)
	movq	%rax, 16(%r12)
	movups	112(%rsp), %xmm0
	movups	%xmm0, 24(%r12)
.Ltmp2083:
.LBB43_8:
	.loc	6 0 3
	movq	%r12, %rax
	addq	$128, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp2084:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2085:
	.cfi_def_cfa_offset 8
	retq
.LBB43_9:
	.cfi_def_cfa_offset 176
.Ltmp2086:
	.loc	6 195 4 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2087:
.Lfunc_end43:
	.size	command_line_arguments.ReadFile, .Lfunc_end43-command_line_arguments.ReadFile
	.cfi_endproc

	.section	.text.command_line_arguments.GoVersion,"ax",@progbits
	.globl	command_line_arguments.GoVersion
	.p2align	4, 0x90
	.type	command_line_arguments.GoVersion,@function
command_line_arguments.GoVersion:
.Lfunc_begin44:
	.loc	5 126 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB44_2
	movq	%r10, %rax
	movabsq	$200, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB44_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$176, %rsp
	.cfi_def_cfa_offset 208
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movups	.Lconst.577(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	leaq	112(%rsp), %rax
.Ltmp2088:
	.loc	5 127 14 prologue_end
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.554, %edi
	movl	$2, %esi
	callq	os_exec.Command
	movq	%rax, %r15
.Ltmp2089:
	.loc	5 128 33
	movl	$type...622x.7uint8, %edi
	callq	runtime.newobject
	movabsq	$8660272688770471982, %rcx
	movq	%rcx, 14(%rax)
	movaps	.Lconst.579(%rip), %xmm0
	movups	%xmm0, (%rax)
	movq	%rax, 56(%rsp)
	movq	$22, 64(%rsp)
	movq	$22, 72(%rsp)
	.loc	5 128 14 is_stmt 0
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	136(%rsp), %rdi
.Ltmp2090:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rsi
.Ltmp2091:
	movq	%r15, %r8
	callq	command_line_arguments.OutputCmd
.Ltmp2092:
	movq	160(%rsp), %rax
.Ltmp2093:
	movq	168(%rsp), %rcx
	movups	136(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	152(%rsp), %rdx
	movq	%rdx, 96(%rsp)
	.loc	5 129 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB44_5
.Ltmp2094:
	.loc	5 130 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	$0, 16(%rbx)
	movq	%rax, 24(%rbx)
	movq	%rcx, 32(%rbx)
	jmp	.LBB44_4
.Ltmp2095:
.LBB44_5:
	.loc	5 132 2
	movq	96(%rsp), %rax
.Ltmp2096:
	movq	%rax, 16(%rbx)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rbx)
.Ltmp2097:
.LBB44_4:
	.loc	5 0 2 is_stmt 0
	movq	%rbx, %rax
	addq	$176, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2098:
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end44:
	.size	command_line_arguments.GoVersion, .Lfunc_end44-command_line_arguments.GoVersion
	.cfi_endproc

	.section	.text.command_line_arguments.Getwd,"ax",@progbits
	.globl	command_line_arguments.Getwd
	.p2align	4, 0x90
	.type	command_line_arguments.Getwd,@function
command_line_arguments.Getwd:
.Lfunc_begin45:
	.loc	6 305 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB45_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB45_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$168, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
.Ltmp2099:
	.loc	6 306 6 prologue_end
	movq	%rsi, %rdi
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 306 2 is_stmt 0
	testb	$1, %al
	je	.LBB45_5
.Ltmp2100:
	.loc	6 307 4 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB45_9
.Ltmp2101:
	movq	(%rbx), %rdi
	.loc	6 307 11 is_stmt 0
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.498, %esi
	movl	$4, %edx
	callq	log.Logger.Printf
.Ltmp2102:
.LBB45_5:
	.loc	6 309 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 309 2 is_stmt 0
	testb	$1, %al
	jne	.LBB45_6
.Ltmp2103:
	.loc	6 312 2 is_stmt 1
	movups	.Lconst.501(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	xorps	%xmm1, %xmm1
	movaps	%xmm1, 144(%rsp)
	movups	%xmm1, 16(%r14)
	movups	%xmm0, (%r14)
	jmp	.LBB45_8
.Ltmp2104:
.LBB45_6:
	.loc	6 0 2 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
	leaq	64(%rsp), %rdi
	.loc	6 310 13 is_stmt 1
	callq	os.Getwd
	movups	64(%rsp), %xmm0
	movups	80(%rsp), %xmm1
	movaps	%xmm1, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
	.loc	6 310 3 is_stmt 0
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm1, 112(%rsp)
	movups	%xmm0, (%r14)
	movups	%xmm1, 16(%r14)
.Ltmp2105:
.LBB45_8:
	.loc	6 0 3
	movq	%r14, %rax
	addq	$168, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp2106:
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB45_9:
	.cfi_def_cfa_offset 192
.Ltmp2107:
	.loc	6 307 4 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2108:
.Lfunc_end45:
	.size	command_line_arguments.Getwd, .Lfunc_end45-command_line_arguments.Getwd
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI46_0:
	.zero	16
	.section	.text.command_line_arguments.ImportAll,"ax",@progbits
	.globl	command_line_arguments.ImportAll
	.p2align	4, 0x90
	.type	command_line_arguments.ImportAll,@function
command_line_arguments.ImportAll:
.Lfunc_begin46:
	.loc	5 197 0
	.cfi_startproc
	leaq	-376(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB46_2
	movq	%r10, %rax
	movabsq	$376, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB46_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$328, %rsp
	.cfi_def_cfa_offset 384
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %r12
	movq	%r8, 72(%rsp)
	movq	%rcx, 64(%rsp)
	movq	%rdx, 104(%rsp)
	movq	%rsi, 56(%rsp)
	movq	%rdi, 48(%rsp)
.Ltmp2109:
	.loc	5 198 10 prologue_end
	movl	$type..map.6string.7.1go_build.Package, %edi
	xorl	%esi, %esi
	movl	$24, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %r13
.Ltmp2110:
	.loc	5 0 10 is_stmt 0
	movq	392(%rsp), %rax
	movq	%rax, 96(%rsp)
.Ltmp2111:
	.loc	5 199 2 is_stmt 1
	testq	%rax, %rax
	jle	.LBB46_10
.Ltmp2112:
	.loc	5 0 2 is_stmt 0
	movq	384(%rsp), %rbx
	addq	$8, %rbx
	xorl	%r14d, %r14d
	movq	%r12, 88(%rsp)
	movq	%r13, 80(%rsp)
.Ltmp2113:
	.p2align	4, 0x90
.LBB46_5:
	.loc	5 199 2
	movq	-8(%rbx), %r15
.Ltmp2114:
	movq	(%rbx), %rbp
.Ltmp2115:
	.loc	5 200 7 is_stmt 1
	movq	56(%rsp), %rdi
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	5 200 3 is_stmt 0
	testb	$1, %al
	je	.LBB46_8
.Ltmp2116:
	.loc	5 201 12 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp2117:
	.loc	5 0 12 is_stmt 0
	movq	64(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 160(%rsp)
	.loc	5 201 12
	movl	$string..d, %edi
	movq	%r13, %rsi
	leaq	152(%rsp), %rdx
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp2118:
	.loc	5 0 12
	movq	%r15, 136(%rsp)
	movq	%rbp, 144(%rsp)
	.loc	5 201 12
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	136(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	$string..d, 192(%rsp)
	movq	%r13, 200(%rsp)
	movq	$string..d, 208(%rsp)
	movq	%r12, 216(%rsp)
	movq	56(%rsp), %rax
	testq	%rax, %rax
	je	.LBB46_28
.Ltmp2119:
	.loc	5 201 5
	movq	(%rax), %rdi
	.loc	5 201 12
	leaq	192(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$2, 120(%rsp)
	movq	$2, 128(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.606, %esi
	movl	$19, %edx
	callq	log.Logger.Printf
	movq	88(%rsp), %r12
	movq	80(%rsp), %r13
.Ltmp2120:
.LBB46_8:
	.loc	5 204 13 is_stmt 1
	movq	%r13, (%rsp)
	movq	104(%rsp), %rdi
	movq	%r15, %rsi
	movq	%rbp, %rdx
	movq	64(%rsp), %rcx
	movq	72(%rsp), %r8
	movq	%r12, %r9
	callq	command_line_arguments.Import
.Ltmp2121:
	.loc	5 204 53 is_stmt 0
	testq	%rax, %rax
	jne	.LBB46_9
.Ltmp2122:
	.loc	5 199 2 is_stmt 1
	addq	$1, %r14
	addq	$16, %rbx
	cmpq	96(%rsp), %r14
	jl	.LBB46_5
.Ltmp2123:
.LBB46_10:
	.loc	5 209 14
	movl	$type...60x.7.1go_build.Package, %edi
	callq	runtime.newobject
	movq	%r13, %rsi
	movq	%rax, %r13
.Ltmp2124:
	.loc	5 0 14 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 304(%rsp)
	movaps	%xmm0, 288(%rsp)
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movaps	%xmm0, 240(%rsp)
	movaps	%xmm0, 224(%rsp)
	leaq	224(%rsp), %rdx
.Ltmp2125:
	.loc	5 210 2 is_stmt 1
	movl	$type..map.6string.7.1go_build.Package, %edi
	callq	runtime.mapiterinit
	cmpq	$0, 224(%rsp)
	je	.LBB46_11
.Ltmp2126:
	.loc	5 0 2 is_stmt 0
	xorl	%ebx, %ebx
	leaq	168(%rsp), %r14
	leaq	224(%rsp), %r15
	xorl	%ebp, %ebp
.Ltmp2127:
	.p2align	4, 0x90
.LBB46_27:
	.loc	5 210 2
	movq	232(%rsp), %rax
	movq	(%rax), %r12
.Ltmp2128:
	.loc	5 0 2
	movq	%r13, 24(%rsp)
	movq	%rbp, 32(%rsp)
	movq	%rbx, 40(%rsp)
	.loc	5 211 14 is_stmt 1
	leaq	1(%rbp), %rdx
	cmpq	%rbx, %rdx
	jbe	.LBB46_16
.Ltmp2129:
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$type...1go_build.Package, %esi
	movq	%r14, %rdi
	callq	runtime.growslice
	movq	168(%rsp), %r13
	movq	176(%rsp), %rdx
	movq	184(%rsp), %rbx
.Ltmp2130:
	.loc	5 0 14 is_stmt 0
	jmp	.LBB46_13
.Ltmp2131:
	.p2align	4, 0x90
.LBB46_16:
	.loc	5 211 14
	cmpq	%rbx, %rdx
	jg	.LBB46_18
.Ltmp2132:
	.loc	5 0 14
	movq	%rdx, %rax
	orq	%rbx, %rax
	js	.LBB46_18
.Ltmp2133:
.LBB46_13:
	.loc	5 211 14
	movq	%r13, 24(%rsp)
	movq	%rdx, 32(%rsp)
	movq	%rbx, 40(%rsp)
	testq	%rbp, %rbp
	js	.LBB46_15
.Ltmp2134:
	.loc	5 0 14
	cmpq	%rdx, %rbp
	jge	.LBB46_15
.Ltmp2135:
	.loc	5 211 14
	leaq	(,%rbp,8), %rdi
	addq	%r13, %rdi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB46_20
.Ltmp2136:
	movq	%r12, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB46_23
.Ltmp2137:
	.p2align	4, 0x90
.LBB46_20:
	testq	%rdi, %rdi
	je	.LBB46_28
.Ltmp2138:
	movq	%r12, (%rdi)
.Ltmp2139:
.LBB46_23:
	.loc	5 211 12
	movq	24(%rsp), %r13
.Ltmp2140:
	movq	32(%rsp), %rbp
.Ltmp2141:
	movq	40(%rsp), %rbx
.Ltmp2142:
	.loc	5 210 2 is_stmt 1
	movq	%r15, %rdi
	callq	runtime.mapiternext
	cmpq	$0, 224(%rsp)
	jne	.LBB46_27
	jmp	.LBB46_24
.Ltmp2143:
.LBB46_9:
	.loc	5 205 4
	xorps	%xmm0, %xmm0
	movq	48(%rsp), %rcx
	movups	%xmm0, (%rcx)
	movq	$0, 16(%rcx)
	movq	%rax, 24(%rcx)
	movq	%rdx, 32(%rcx)
	movq	%rcx, %rax
	jmp	.LBB46_25
.Ltmp2144:
.LBB46_11:
	.loc	5 0 4 is_stmt 0
	xorl	%ebp, %ebp
.Ltmp2145:
	xorl	%ebx, %ebx
.Ltmp2146:
.LBB46_24:
	movq	48(%rsp), %rax
	.loc	5 214 2 is_stmt 1
	movq	%r13, (%rax)
	movq	%rbp, 8(%rax)
	movq	%rbx, 16(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rax)
.Ltmp2147:
.LBB46_25:
	.loc	5 0 2 is_stmt 0
	addq	$328, %rsp
.Ltmp2148:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB46_15:
	.cfi_def_cfa_offset 384
.Ltmp2149:
	.loc	5 211 14 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp2150:
.LBB46_18:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp2151:
.LBB46_28:
	.loc	5 0 14 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end46:
	.size	command_line_arguments.ImportAll, .Lfunc_end46-command_line_arguments.ImportAll
	.cfi_endproc

	.section	.text.command_line_arguments.validateXcodeInstall,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.validateXcodeInstall,@function
command_line_arguments.validateXcodeInstall:
.Lfunc_begin47:
	.file	7 "./ios.go"
	.loc	7 13 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB47_2
	movabsq	$168, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB47_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$144, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp2152:
	movq	%rdi, %rax
.Ltmp2153:
	leaq	88(%rsp), %rdi
.Ltmp2154:
	.loc	7 24 15 prologue_end
	movl	$.Lconst.376, %edx
	movl	$5, %ecx
	movq	%rax, %rsi
.Ltmp2155:
	callq	command_line_arguments.LookPath
.Ltmp2156:
	movq	104(%rsp), %rbx
.Ltmp2157:
	.loc	7 24 41 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB47_4
.Ltmp2158:
	.loc	7 24 15
	movq	112(%rsp), %r14
.Ltmp2159:
	.loc	7 15 9 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB47_7
.Ltmp2160:
.LBB47_6:
	.loc	7 16 7
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r15
	movups	.Lconst.511(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	leaq	64(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 48(%rsp)
	movq	%r15, 56(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	120(%rsp), %rdi
	callq	fmt.Println
.Ltmp2161:
.LBB47_7:
	.loc	7 20 2
	movq	%rbx, %rax
	movq	%r14, %rdx
	addq	$144, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp2162:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB47_4:
	.cfi_def_cfa_offset 176
.Ltmp2163:
	.loc	7 0 2 is_stmt 0
	xorl	%ebx, %ebx
.Ltmp2164:
	xorl	%r14d, %r14d
.Ltmp2165:
	.loc	7 15 9 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB47_6
	jmp	.LBB47_7
.Ltmp2166:
.Lfunc_end47:
	.size	command_line_arguments.validateXcodeInstall, .Lfunc_end47-command_line_arguments.validateXcodeInstall
	.cfi_endproc

	.section	.text.command_line_arguments.WriteFile,"ax",@progbits
	.globl	command_line_arguments.WriteFile
	.p2align	4, 0x90
	.type	command_line_arguments.WriteFile,@function
command_line_arguments.WriteFile:
.Lfunc_begin48:
	.loc	6 160 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception4
	leaq	-296(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB48_2
	movq	%r10, %rax
	movabsq	$296, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB48_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$248, %rsp
	.cfi_def_cfa_offset 304
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, %r13
	movq	%rdi, %rbx
	movq	%rdi, 40(%rsp)
	movb	$0, 38(%rsp)
	movb	$0, 39(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	$0, 72(%rsp)
.Ltmp2167:
.Ltmp2202:
	.loc	6 161 6 prologue_end
	callq	command_line_arguments.Flags.ShouldPrint
.Ltmp2168:
.Ltmp2203:
	.loc	6 161 2 is_stmt 0
	testb	$1, %al
	je	.LBB48_10
.Ltmp2204:
.Ltmp2169:
	.loc	6 162 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp2170:
.Ltmp2205:
	.loc	6 0 11 is_stmt 0
	movq	%rax, %rbx
.Ltmp2206:
	movq	%r13, 136(%rsp)
	movq	%r12, 144(%rsp)
.Ltmp2171:
	leaq	136(%rsp), %rdx
	.loc	6 162 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp2172:
.Ltmp2207:
	movq	$string..d, 120(%rsp)
	movq	%rbx, 128(%rsp)
	.loc	6 162 3
	movq	40(%rsp), %rbx
.Ltmp2208:
	.loc	6 162 4
	testq	%rbx, %rbx
	jne	.LBB48_8
.Ltmp2209:
.Ltmp2173:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2174:
.Ltmp2210:
.LBB48_8:
	movq	(%rbx), %rdi
	leaq	120(%rsp), %rax
	.loc	6 162 11
	movq	%rax, 96(%rsp)
	movq	$1, 104(%rsp)
	movq	$1, 112(%rsp)
.Ltmp2175:
	movq	112(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.475, %esi
	movl	$9, %edx
	callq	log.Logger.Printf
.Ltmp2176:
.Ltmp2211:
	.loc	6 165 18 is_stmt 1
	movq	40(%rsp), %rbx
.Ltmp2212:
.LBB48_10:
	.loc	6 165 19 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB48_14
.Ltmp2213:
	movb	9(%rbx), %al
	movb	%al, 39(%rsp)
	jmp	.LBB48_18
.Ltmp2214:
.LBB48_14:
.Ltmp2177:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2178:
.Ltmp2215:
	.loc	6 166 2 is_stmt 1
	movq	40(%rsp), %rbx
.Ltmp2216:
	.loc	6 165 19
	movb	9, %al
.Ltmp2217:
	.loc	6 0 19 is_stmt 0
	movb	%al, 39(%rsp)
	.loc	6 166 3 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB48_18
.Ltmp2218:
.Ltmp2179:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2219:
.Ltmp2180:
	.loc	6 0 3 is_stmt 0
	xorl	%ebx, %ebx
.Ltmp2220:
.LBB48_18:
	.loc	6 166 17
	movb	$1, 9(%rbx)
	.loc	6 167 8 is_stmt 1
	movq	$command_line_arguments.WriteFile..func1, 176(%rsp)
	leaq	40(%rsp), %rax
	movq	%rax, 184(%rsp)
	leaq	39(%rsp), %rax
	movq	%rax, 192(%rsp)
	leaq	176(%rsp), %rax
	.loc	6 167 2 is_stmt 0
	movq	%rax, 88(%rsp)
.Ltmp2181:
	leaq	38(%rsp), %rdi
	leaq	88(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk5, %esi
	callq	runtime.deferproc
.Ltmp2182:
.Ltmp2221:
.Ltmp2183:
	.loc	6 171 29 is_stmt 1
	movq	%r13, %rdi
	movq	%r12, %rsi
	callq	path_filepath.Dir
.Ltmp2184:
.Ltmp2222:
	.loc	6 171 17 is_stmt 0
	movq	40(%rsp), %rdi
.Ltmp2223:
.Ltmp2185:
	.loc	6 171 11
	movq	%rax, %rsi
	callq	command_line_arguments.Mkdir
.Ltmp2224:
.Ltmp2186:
	.loc	6 171 9
	movq	%rax, 48(%rsp)
	movq	%rdx, 56(%rsp)
	movb	$1, %bpl
	.loc	6 171 49
	testq	%rax, %rax
	je	.LBB48_23
.Ltmp2225:
	.loc	6 0 49
	leaq	38(%rsp), %rbx
	jmp	.LBB48_35
.Ltmp2226:
.LBB48_23:
	.loc	6 174 5 is_stmt 1
	movq	40(%rsp), %rdi
.Ltmp2227:
.Ltmp2187:
	.loc	6 174 6 is_stmt 0
	callq	command_line_arguments.Flags.ShouldRun
.Ltmp2228:
.Ltmp2188:
	.loc	6 174 2
	testb	$1, %al
	jne	.LBB48_26
.Ltmp2229:
	.loc	6 0 2
	leaq	38(%rsp), %rbx
	jmp	.LBB48_35
.Ltmp2230:
.LBB48_26:
	movq	$0, 72(%rsp)
.Ltmp2189:
	leaq	200(%rsp), %rdi
.Ltmp2231:
	.loc	6 176 18 is_stmt 1
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	os.Create
.Ltmp2190:
.Ltmp2232:
	movq	200(%rsp), %rax
	movups	208(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	6 176 13 is_stmt 0
	movq	%rax, 72(%rsp)
	.loc	6 177 10 is_stmt 1
	cmpq	$0, 48(%rsp)
	je	.LBB48_29
.Ltmp2233:
	.loc	6 0 10 is_stmt 0
	leaq	38(%rsp), %rbx
	jmp	.LBB48_35
.Ltmp2234:
.LBB48_29:
	.loc	6 180 9 is_stmt 1
	movq	$command_line_arguments.WriteFile..func2, 152(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 160(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 168(%rsp)
	leaq	152(%rsp), %rax
	.loc	6 180 3 is_stmt 0
	movq	%rax, 80(%rsp)
.Ltmp2191:
	leaq	38(%rsp), %rdi
	leaq	80(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk6, %esi
	callq	runtime.deferproc
.Ltmp2192:
.Ltmp2235:
	.loc	6 186 23 is_stmt 1
	movq	72(%rsp), %rdx
.Ltmp2193:
	leaq	224(%rsp), %rdi
	.loc	6 186 18 is_stmt 0
	movl	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %esi
	movq	%r15, %rcx
	movq	%r14, %r8
	callq	io.Copy
.Ltmp2194:
.Ltmp2236:
	.loc	6 0 18
	movups	232(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	leaq	38(%rsp), %rbx
	jmp	.LBB48_35
.Ltmp2237:
.LBB48_12:
.Ltmp2195:
.Ltmp2196:
	leaq	38(%rsp), %rdi
	.loc	6 191 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp2197:
.Ltmp2238:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	leaq	38(%rsp), %rbx
	jmp	.LBB48_35
.Ltmp2239:
.LBB48_32:
.Ltmp2198:
	movq	%rax, %r14
	xorl	%ebp, %ebp
	leaq	38(%rsp), %rbx
	jmp	.LBB48_35
.Ltmp2240:
.LBB48_34:
.Ltmp2201:
	.loc	6 191 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp2241:
	.p2align	4, 0x90
.LBB48_35:
.Ltmp2199:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp2200:
.Ltmp2242:
	testb	$1, 38(%rsp)
	jne	.LBB48_38
.Ltmp2243:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB48_39
.Ltmp2244:
.LBB48_38:
	movq	48(%rsp), %rax
	movq	56(%rsp), %rdx
	addq	$248, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp2245:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp2246:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB48_39:
	.cfi_def_cfa_offset 304
.Ltmp2247:
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end48:
	.size	command_line_arguments.WriteFile, .Lfunc_end48-command_line_arguments.WriteFile
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table48:
.Lexception4:
	.byte	255
	.byte	3
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin48-.Lfunc_begin48
	.uleb128 .Ltmp2167-.Lfunc_begin48
	.byte	0
	.byte	0
	.uleb128 .Ltmp2167-.Lfunc_begin48
	.uleb128 .Ltmp2194-.Ltmp2167
	.uleb128 .Ltmp2195-.Lfunc_begin48
	.byte	1
	.uleb128 .Ltmp2196-.Lfunc_begin48
	.uleb128 .Ltmp2197-.Ltmp2196
	.uleb128 .Ltmp2198-.Lfunc_begin48
	.byte	0
	.uleb128 .Ltmp2197-.Lfunc_begin48
	.uleb128 .Ltmp2199-.Ltmp2197
	.byte	0
	.byte	0
	.uleb128 .Ltmp2199-.Lfunc_begin48
	.uleb128 .Ltmp2200-.Ltmp2199
	.uleb128 .Ltmp2201-.Lfunc_begin48
	.byte	1
	.uleb128 .Ltmp2200-.Lfunc_begin48
	.uleb128 .Lfunc_end48-.Ltmp2200
	.byte	0
	.byte	0
.Lcst_end4:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase4:
	.p2align	2

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI49_0:
	.zero	16
	.section	.text.command_line_arguments.DarwinArmEnv,"ax",@progbits
	.globl	command_line_arguments.DarwinArmEnv
	.p2align	4, 0x90
	.type	command_line_arguments.DarwinArmEnv,@function
command_line_arguments.DarwinArmEnv:
.Lfunc_begin49:
	.loc	7 65 0 is_stmt 1
	.cfi_startproc
	leaq	-584(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB49_2
	movq	%r10, %rax
	movabsq	$584, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB49_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$536, %rsp
	.cfi_def_cfa_offset 592
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	leaq	352(%rsp), %rdi
.Ltmp2248:
	.loc	7 66 24 prologue_end
	movl	$.Lconst.531, %edx
	movl	$8, %ecx
	callq	command_line_arguments.EnvClang
.Ltmp2249:
	movups	352(%rsp), %xmm0
	movups	368(%rsp), %xmm1
	movaps	%xmm1, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movq	384(%rsp), %rax
.Ltmp2250:
	movq	392(%rsp), %rcx
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm1, 96(%rsp)
	.loc	7 67 9
	testq	%rax, %rax
	je	.LBB49_5
.Ltmp2251:
	.loc	7 68 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	$0, 16(%rbx)
	movq	%rax, 24(%rbx)
	movq	%rcx, 32(%rbx)
	jmp	.LBB49_4
.Ltmp2252:
.LBB49_5:
	.loc	7 76 67
	movl	$.Lconst.62, %edi
	movl	$3, %esi
	callq	command_line_arguments.ArchClang
.Ltmp2253:
	movq	%rax, %r15
	movq	%rdx, %r14
	.loc	7 77 68
	movl	$.Lconst.62, %edi
	movl	$3, %esi
	callq	command_line_arguments.ArchClang
	movq	%rax, %r12
	movq	%rdx, %r13
	.loc	7 74 6
	movups	.Lconst.47(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 304(%rsp)
	movaps	288(%rsp), %xmm0
	movaps	304(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 88(%rsp)
	movq	%rdx, 80(%rsp)
	.loc	7 75 7
	movups	.Lconst.49(%rip), %xmm0
	movaps	%xmm0, 320(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 336(%rsp)
	movaps	320(%rsp), %xmm0
	movaps	336(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 72(%rsp)
	movq	%rdx, 64(%rsp)
	.loc	7 76 14
	movups	.Lconst.51(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movups	.Lconst.534(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movq	%r15, 176(%rsp)
	movq	%r14, 184(%rsp)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movaps	160(%rsp), %xmm2
	movaps	176(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring4
	movq	%rax, %r15
	movq	%rdx, %r14
	.loc	7 77 15
	movups	.Lconst.55(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movups	.Lconst.534(%rip), %xmm0
	movaps	%xmm0, 224(%rsp)
	movq	%r12, 240(%rsp)
	movq	%r13, 248(%rsp)
	movaps	192(%rsp), %xmm0
	movaps	208(%rsp), %xmm1
	movaps	224(%rsp), %xmm2
	movaps	240(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp2254:
	callq	runtime.concatstring4
.Ltmp2255:
	movq	%rax, %r13
	movq	%rdx, %r12
	.loc	7 70 9
	movl	$type...68x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp2256:
	movups	.Lconst.536(%rip), %xmm0
	movaps	%xmm0, 400(%rsp)
	movups	.Lconst.538(%rip), %xmm0
	movaps	%xmm0, 416(%rsp)
	movups	.Lconst.64(%rip), %xmm0
	movaps	%xmm0, 432(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 448(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 456(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 464(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 472(%rsp)
	movq	%r15, 480(%rsp)
	movq	%r14, 488(%rsp)
	movq	%r13, 496(%rsp)
	movq	%r12, 504(%rsp)
	movups	.Lconst.59(%rip), %xmm0
	movaps	%xmm0, 512(%rsp)
	leaq	400(%rsp), %rdx
	movl	$type...68x.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp2257:
	.loc	7 70 2 is_stmt 0
	movq	%rbp, (%rbx)
	movq	$8, 8(%rbx)
	movq	$8, 16(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rbx)
.Ltmp2258:
.LBB49_4:
	.loc	7 0 2
	movq	%rbx, %rax
	addq	$536, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end49:
	.size	command_line_arguments.DarwinArmEnv, .Lfunc_end49-command_line_arguments.DarwinArmEnv
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI50_0:
	.zero	16
	.section	.text.command_line_arguments.DarwinArm64Env,"ax",@progbits
	.globl	command_line_arguments.DarwinArm64Env
	.p2align	4, 0x90
	.type	command_line_arguments.DarwinArm64Env,@function
command_line_arguments.DarwinArm64Env:
.Lfunc_begin50:
	.loc	7 82 0 is_stmt 1
	.cfi_startproc
	leaq	-568(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB50_2
	movq	%r10, %rax
	movabsq	$568, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB50_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$520, %rsp
	.cfi_def_cfa_offset 576
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	leaq	472(%rsp), %rdi
.Ltmp2259:
	.loc	7 83 24 prologue_end
	movl	$.Lconst.531, %edx
	movl	$8, %ecx
	callq	command_line_arguments.EnvClang
.Ltmp2260:
	movups	472(%rsp), %xmm0
	movups	488(%rsp), %xmm1
	movaps	%xmm1, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movq	504(%rsp), %rax
.Ltmp2261:
	movq	512(%rsp), %rcx
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm1, 96(%rsp)
	.loc	7 84 9
	testq	%rax, %rax
	je	.LBB50_5
.Ltmp2262:
	.loc	7 85 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	$0, 16(%rbx)
	movq	%rax, 24(%rbx)
	movq	%rcx, 32(%rbx)
	jmp	.LBB50_4
.Ltmp2263:
.LBB50_5:
	.loc	7 92 67
	movl	$.Lconst.91, %edi
	movl	$5, %esi
	callq	command_line_arguments.ArchClang
.Ltmp2264:
	movq	%rax, %r15
	movq	%rdx, %r12
	.loc	7 93 68
	movl	$.Lconst.91, %edi
	movl	$5, %esi
	callq	command_line_arguments.ArchClang
	movq	%rax, %rbp
	movq	%rdx, %r14
	.loc	7 90 6
	movups	.Lconst.47(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 304(%rsp)
	movaps	288(%rsp), %xmm0
	movaps	304(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 88(%rsp)
	movq	%rdx, 80(%rsp)
	.loc	7 91 7
	movups	.Lconst.49(%rip), %xmm0
	movaps	%xmm0, 320(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 336(%rsp)
	movaps	320(%rsp), %xmm0
	movaps	336(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 72(%rsp)
	movq	%rdx, 64(%rsp)
	.loc	7 92 14
	movups	.Lconst.51(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movups	.Lconst.534(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movq	%r15, 176(%rsp)
	movq	%r12, 184(%rsp)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movaps	160(%rsp), %xmm2
	movaps	176(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring4
	movq	%rax, %r12
	movq	%rdx, %r15
	.loc	7 93 15
	movups	.Lconst.55(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movups	.Lconst.534(%rip), %xmm0
	movaps	%xmm0, 224(%rsp)
	movq	%rbp, 240(%rsp)
	movq	%r14, 248(%rsp)
	movaps	192(%rsp), %xmm0
	movaps	208(%rsp), %xmm1
	movaps	224(%rsp), %xmm2
	movaps	240(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp2265:
	callq	runtime.concatstring4
.Ltmp2266:
	movq	%rax, %rbp
	movq	%rdx, %r14
	.loc	7 87 9
	movl	$type...67x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp2267:
	movups	.Lconst.536(%rip), %xmm0
	movaps	%xmm0, 352(%rsp)
	movups	.Lconst.540(%rip), %xmm0
	movaps	%xmm0, 368(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 384(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 392(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 400(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 408(%rsp)
	movq	%r12, 416(%rsp)
	movq	%r15, 424(%rsp)
	movq	%rbp, 432(%rsp)
	movq	%r14, 440(%rsp)
	movups	.Lconst.59(%rip), %xmm0
	movaps	%xmm0, 448(%rsp)
	leaq	352(%rsp), %rdx
	movl	$type...67x.7string, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp2268:
	.loc	7 87 2 is_stmt 0
	movq	%r13, (%rbx)
	movq	$7, 8(%rbx)
	movq	$7, 16(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rbx)
.Ltmp2269:
.LBB50_4:
	.loc	7 0 2
	movq	%rbx, %rax
	addq	$520, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end50:
	.size	command_line_arguments.DarwinArm64Env, .Lfunc_end50-command_line_arguments.DarwinArm64Env
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI51_0:
	.zero	16
	.section	.text.command_line_arguments.Darwin386Env,"ax",@progbits
	.globl	command_line_arguments.Darwin386Env
	.p2align	4, 0x90
	.type	command_line_arguments.Darwin386Env,@function
command_line_arguments.Darwin386Env:
.Lfunc_begin51:
	.loc	7 98 0 is_stmt 1
	.cfi_startproc
	leaq	-568(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB51_2
	movq	%r10, %rax
	movabsq	$568, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB51_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$520, %rsp
	.cfi_def_cfa_offset 576
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	leaq	472(%rsp), %rdi
.Ltmp2270:
	.loc	7 99 24 prologue_end
	movl	$.Lconst.542, %edx
	movl	$15, %ecx
	callq	command_line_arguments.EnvClang
.Ltmp2271:
	movups	472(%rsp), %xmm0
	movups	488(%rsp), %xmm1
	movaps	%xmm1, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movq	504(%rsp), %rax
.Ltmp2272:
	movq	512(%rsp), %rcx
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm1, 96(%rsp)
	.loc	7 100 9
	testq	%rax, %rax
	je	.LBB51_5
.Ltmp2273:
	.loc	7 101 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	$0, 16(%rbx)
	movq	%rax, 24(%rbx)
	movq	%rcx, 32(%rbx)
	jmp	.LBB51_4
.Ltmp2274:
.LBB51_5:
	.loc	7 108 72
	movl	$.Lconst.97, %edi
	movl	$3, %esi
	callq	command_line_arguments.ArchClang
.Ltmp2275:
	movq	%rax, %r15
	movq	%rdx, %r12
	.loc	7 109 73
	movl	$.Lconst.97, %edi
	movl	$3, %esi
	callq	command_line_arguments.ArchClang
	movq	%rax, %rbp
	movq	%rdx, %r14
	.loc	7 106 6
	movups	.Lconst.47(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 304(%rsp)
	movaps	288(%rsp), %xmm0
	movaps	304(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 88(%rsp)
	movq	%rdx, 80(%rsp)
	.loc	7 107 7
	movups	.Lconst.49(%rip), %xmm0
	movaps	%xmm0, 320(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 336(%rsp)
	movaps	320(%rsp), %xmm0
	movaps	336(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 72(%rsp)
	movq	%rdx, 64(%rsp)
	.loc	7 108 14
	movups	.Lconst.51(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movups	.Lconst.545(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movq	%r15, 176(%rsp)
	movq	%r12, 184(%rsp)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movaps	160(%rsp), %xmm2
	movaps	176(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring4
	movq	%rax, %r12
	movq	%rdx, %r15
	.loc	7 109 15
	movups	.Lconst.55(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	movups	.Lconst.545(%rip), %xmm0
	movaps	%xmm0, 224(%rsp)
	movq	%rbp, 240(%rsp)
	movq	%r14, 248(%rsp)
	movaps	192(%rsp), %xmm0
	movaps	208(%rsp), %xmm1
	movaps	224(%rsp), %xmm2
	movaps	240(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp2276:
	callq	runtime.concatstring4
.Ltmp2277:
	movq	%rax, %rbp
	movq	%rdx, %r14
	.loc	7 103 9
	movl	$type...67x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp2278:
	movups	.Lconst.536(%rip), %xmm0
	movaps	%xmm0, 352(%rsp)
	movups	.Lconst.547(%rip), %xmm0
	movaps	%xmm0, 368(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 384(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 392(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 400(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 408(%rsp)
	movq	%r12, 416(%rsp)
	movq	%r15, 424(%rsp)
	movq	%rbp, 432(%rsp)
	movq	%r14, 440(%rsp)
	movups	.Lconst.59(%rip), %xmm0
	movaps	%xmm0, 448(%rsp)
	leaq	352(%rsp), %rdx
	movl	$type...67x.7string, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp2279:
	.loc	7 103 2 is_stmt 0
	movq	%r13, (%rbx)
	movq	$7, 8(%rbx)
	movq	$7, 16(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rbx)
.Ltmp2280:
.LBB51_4:
	.loc	7 0 2
	movq	%rbx, %rax
	addq	$520, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end51:
	.size	command_line_arguments.Darwin386Env, .Lfunc_end51-command_line_arguments.Darwin386Env
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI52_0:
	.zero	16
	.section	.text.command_line_arguments.DarwinAmd64Env,"ax",@progbits
	.globl	command_line_arguments.DarwinAmd64Env
	.p2align	4, 0x90
	.type	command_line_arguments.DarwinAmd64Env,@function
command_line_arguments.DarwinAmd64Env:
.Lfunc_begin52:
	.loc	7 114 0 is_stmt 1
	.cfi_startproc
	leaq	-520(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB52_2
	movq	%r10, %rax
	movabsq	$520, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB52_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$472, %rsp
	.cfi_def_cfa_offset 528
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	leaq	424(%rsp), %rdi
.Ltmp2281:
	.loc	7 115 24 prologue_end
	movl	$.Lconst.542, %edx
	movl	$15, %ecx
	callq	command_line_arguments.EnvClang
.Ltmp2282:
	movups	424(%rsp), %xmm0
	movups	440(%rsp), %xmm1
	movaps	%xmm1, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	movq	456(%rsp), %rax
.Ltmp2283:
	movq	464(%rsp), %rcx
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm1, 80(%rsp)
	.loc	7 116 9
	testq	%rax, %rax
	je	.LBB52_5
.Ltmp2284:
	.loc	7 117 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
	movq	$0, 16(%rbx)
	movq	%rax, 24(%rbx)
	movq	%rcx, 32(%rbx)
	jmp	.LBB52_4
.Ltmp2285:
.LBB52_5:
	.loc	7 122 6
	movups	.Lconst.47(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
	movaps	144(%rsp), %xmm0
	movaps	160(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp2286:
	movq	%rax, 72(%rsp)
	movq	%rdx, 64(%rsp)
	.loc	7 123 7
	movups	.Lconst.49(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	movaps	176(%rsp), %xmm0
	movaps	192(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 56(%rsp)
	movq	%rdx, 48(%rsp)
	.loc	7 124 14
	movups	.Lconst.51(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 224(%rsp)
	movups	.Lconst.549(%rip), %xmm0
	movaps	%xmm0, 240(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	224(%rsp), %xmm1
	movaps	240(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	movq	%rax, %rbp
	movq	%rdx, %r14
	.loc	7 125 15
	movups	.Lconst.55(%rip), %xmm0
	movaps	%xmm0, 256(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 272(%rsp)
	movups	.Lconst.549(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	movaps	256(%rsp), %xmm0
	movaps	272(%rsp), %xmm1
	movaps	288(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp2287:
	callq	runtime.concatstring3
.Ltmp2288:
	movq	%rax, %r15
	movq	%rdx, %r12
	.loc	7 119 9
	movl	$type...67x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %r13
.Ltmp2289:
	movups	.Lconst.536(%rip), %xmm0
	movaps	%xmm0, 304(%rsp)
	movups	.Lconst.551(%rip), %xmm0
	movaps	%xmm0, 320(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 336(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 344(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 352(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 360(%rsp)
	movq	%rbp, 368(%rsp)
	movq	%r14, 376(%rsp)
	movq	%r15, 384(%rsp)
	movq	%r12, 392(%rsp)
	movups	.Lconst.59(%rip), %xmm0
	movaps	%xmm0, 400(%rsp)
	leaq	304(%rsp), %rdx
	movl	$type...67x.7string, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
.Ltmp2290:
	.loc	7 119 2 is_stmt 0
	movq	%r13, (%rbx)
	movq	$7, 8(%rbx)
	movq	$7, 16(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rbx)
.Ltmp2291:
.LBB52_4:
	.loc	7 0 2
	movq	%rbx, %rax
	addq	$472, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end52:
	.size	command_line_arguments.DarwinAmd64Env, .Lfunc_end52-command_line_arguments.DarwinAmd64Env
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Bind.archPath..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Bind.archPath..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Bind.archPath..hash,@function
command_line_arguments.command_line_arguments.Bind.archPath..hash:
.Lfunc_begin53:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB53_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB53_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp2292:
	.loc	1 1 1 prologue_end
	callq	runtime.strhash
	leaq	16(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	addq	$32, %rbx
.Ltmp2293:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.interhash
.Ltmp2294:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2295:
.Lfunc_end53:
	.size	command_line_arguments.command_line_arguments.Bind.archPath..hash, .Lfunc_end53-command_line_arguments.command_line_arguments.Bind.archPath..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Bind.archPath..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Bind.archPath..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Bind.archPath..eq,@function
command_line_arguments.command_line_arguments.Bind.archPath..eq:
.Lfunc_begin54:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB54_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB54_2:
.Ltmp2296:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp2297:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB54_9
.Ltmp2298:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp2299:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB54_9
.Ltmp2300:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp2301:
	.loc	1 1 1
	movq	(%rdi), %rdi
	movq	8(%rbx), %rsi
	movq	(%r14), %rdx
	movq	8(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB54_5
.Ltmp2302:
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
	movq	16(%r14), %rdx
	movq	24(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB54_5
.Ltmp2303:
	movq	32(%rbx), %rdi
	movq	40(%rbx), %rsi
	movq	32(%r14), %rdx
	movq	40(%r14), %rcx
	callq	runtime.ifaceeq
	cmpb	$1, %al
	sete	%al
	jmp	.LBB54_6
.Ltmp2304:
.LBB54_5:
	xorl	%eax, %eax
.Ltmp2305:
.LBB54_6:
	.loc	1 0 1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp2306:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp2307:
	.cfi_def_cfa_offset 8
	retq
.LBB54_9:
	.cfi_def_cfa_offset 32
.Ltmp2308:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp2309:
	callq	__go_runtime_error
.Ltmp2310:
.Lfunc_end54:
	.size	command_line_arguments.command_line_arguments.Bind.archPath..eq, .Lfunc_end54-command_line_arguments.command_line_arguments.Bind.archPath..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Bind..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.Bind..func1,@function
command_line_arguments.Bind..func1:
.Lfunc_begin55:
	.loc	4 244 0 is_stmt 1
	.cfi_startproc
	leaq	-600(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB55_2
	movq	%r10, %rax
	movabsq	$600, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB55_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$552, %rsp
	.cfi_def_cfa_offset 608
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r10, %r12
.Ltmp2311:
	.loc	4 245 13 prologue_end
	movq	624(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	608(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.425, %edi
	movl	$6, %esi
	callq	command_line_arguments.FindEnv
	movq	%rax, %r14
.Ltmp2312:
	movq	%rdx, %r15
.Ltmp2313:
	.loc	4 246 80
	movq	16(%r12), %rax
	movq	(%rax), %rdi
	.loc	4 246 74 is_stmt 0
	movl	$.Lconst.414, %esi
	movl	$6, %edx
	callq	command_line_arguments.GoEnv
	movaps	608(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	624(%rsp), %rcx
	movq	%rcx, 112(%rsp)
	.loc	4 246 11
	movq	104(%rsp), %rbx
	.loc	4 246 33
	movq	8(%r12), %rcx
	.loc	4 246 30
	movups	.Lconst.417(%rip), %xmm0
	movaps	%xmm0, 352(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 368(%rsp)
	movups	.Lconst.419(%rip), %xmm0
	movaps	%xmm0, 384(%rsp)
	movq	%rax, 400(%rsp)
	movq	%rdx, 408(%rsp)
	movaps	352(%rsp), %xmm0
	movaps	368(%rsp), %xmm1
	movaps	384(%rsp), %xmm2
	movaps	400(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring4
	movq	%rax, 120(%rsp)
	movq	%rdx, 128(%rsp)
	.loc	4 246 11
	leaq	1(%rbx), %rdx
	movq	112(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB55_7
.Ltmp2314:
	movq	112(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	232(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	232(%rsp), %rsi
	movq	240(%rsp), %rdx
	movq	248(%rsp), %rax
	jmp	.LBB55_4
.Ltmp2315:
.LBB55_7:
	cmpq	%rax, %rdx
	jg	.LBB55_16
.Ltmp2316:
	.loc	4 0 11
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB55_16
.Ltmp2317:
	.loc	4 246 11
	movq	96(%rsp), %rsi
.Ltmp2318:
.LBB55_4:
	movq	%rsi, 96(%rsp)
	movq	%rdx, 104(%rsp)
	movq	%rax, 112(%rsp)
	testq	%rbx, %rbx
	js	.LBB55_6
.Ltmp2319:
	.loc	4 0 11
	cmpq	%rdx, %rbx
	jge	.LBB55_6
.Ltmp2320:
	.loc	4 246 11
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB55_11
.Ltmp2321:
	.loc	4 0 11
	leaq	120(%rsp), %rdx
	.loc	4 246 11
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB55_14
.Ltmp2322:
.LBB55_11:
	testq	%rsi, %rsi
	je	.LBB55_12
.Ltmp2323:
	movups	120(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2324:
.LBB55_14:
	.loc	4 0 11
	leaq	608(%rsp), %rbp
	.loc	4 246 9
	movq	112(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	.loc	4 247 43 is_stmt 1
	movups	.Lconst.428(%rip), %xmm0
	movaps	%xmm0, 256(%rsp)
	movq	%r14, 272(%rsp)
	movq	%r15, 280(%rsp)
	movups	.Lconst.430(%rip), %xmm0
	movaps	%xmm0, 288(%rsp)
	movaps	256(%rsp), %xmm0
	movaps	272(%rsp), %xmm1
	movaps	288(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	.loc	4 247 27 is_stmt 0
	movq	24(%r12), %rcx
	.loc	4 247 22
	movups	(%rcx), %xmm0
	movaps	%xmm0, 432(%rsp)
	movq	%rax, 448(%rsp)
	movq	%rdx, 456(%rsp)
	leaq	432(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$2, 144(%rsp)
	movq	$2, 152(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, %rbx
.Ltmp2325:
	movq	%rdx, %r13
.Ltmp2326:
	.loc	4 250 36 is_stmt 1
	movq	32(%r12), %rax
	.loc	4 250 27 is_stmt 0
	movups	(%rax), %xmm0
	movaps	%xmm0, 416(%rsp)
	movaps	.Lconst.431(%rip), %xmm0
	movaps	%xmm0, 512(%rsp)
	movaps	.Lconst.431+16(%rip), %xmm0
	movaps	%xmm0, 528(%rsp)
	.loc	4 250 12
	movups	.Lconst.433(%rip), %xmm0
	movaps	%xmm0, 464(%rsp)
	movups	.Lconst.381(%rip), %xmm0
	movaps	%xmm0, 480(%rsp)
	movq	%rbx, 496(%rsp)
	movq	%rdx, 504(%rsp)
	.loc	4 250 20
	movq	16(%r12), %rax
	movq	(%rax), %rdi
	leaq	416(%rsp), %rax
	.loc	4 250 27
	movq	%rax, 160(%rsp)
	movq	$1, 168(%rsp)
	movq	$1, 176(%rsp)
	leaq	512(%rsp), %rax
	.loc	4 250 52
	movq	%rax, 184(%rsp)
	movq	$2, 192(%rsp)
	movq	$2, 200(%rsp)
	.loc	4 250 94
	movq	24(%r12), %rax
	.loc	4 250 79
	movq	40(%r12), %rcx
	leaq	464(%rsp), %rdx
	.loc	4 250 12
	movq	%rdx, 208(%rsp)
	movq	$3, 216(%rsp)
	movq	$3, 224(%rsp)
	movq	(%rcx), %rsi
	movq	8(%rcx), %rdx
	movq	(%rax), %rcx
	movq	8(%rax), %r8
	movq	224(%rsp), %rax
	movq	%rax, 88(%rsp)
	movups	208(%rsp), %xmm0
	movups	%xmm0, 72(%rsp)
	movq	200(%rsp), %rax
	movq	%rax, 64(%rsp)
	movups	184(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 40(%rsp)
	movups	(%rbp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	176(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	160(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.GoBuild
.Ltmp2327:
	.loc	4 251 17 is_stmt 1
	movq	%r14, 304(%rsp)
	movq	%r15, 312(%rsp)
	movq	%rbx, 320(%rsp)
	movq	%r13, 328(%rsp)
	movq	%rax, 336(%rsp)
	movq	%rdx, 344(%rsp)
	.loc	4 251 5 is_stmt 0
	movq	48(%r12), %rax
.Ltmp2328:
	movq	(%rax), %rdi
	leaq	304(%rsp), %rsi
	.loc	4 251 14
	callq	runtime.chansend1
	addq	$552, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp2329:
	.cfi_def_cfa_offset 32
	.loc	4 0 14
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp2330:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB55_6:
	.cfi_def_cfa_offset 608
.Ltmp2331:
	.loc	4 246 11 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp2332:
.LBB55_16:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp2333:
.LBB55_12:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2334:
.Lfunc_end55:
	.size	command_line_arguments.Bind..func1, .Lfunc_end55-command_line_arguments.Bind..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk4,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk4,@function
command_line_arguments.command_line_arguments..thunk4:
.Lfunc_begin56:
	.loc	4 244 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB56_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB56_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
.Ltmp2335:
	.loc	4 244 4 prologue_end
	movq	(%rdi), %r10
	movq	24(%rdi), %rax
	movq	%rax, 16(%rsp)
	movups	8(%rdi), %xmm0
	movups	%xmm0, (%rsp)
	callq	*(%r10)
.Ltmp2336:
	.loc	4 0 4 is_stmt 0
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2337:
.Lfunc_end56:
	.size	command_line_arguments.command_line_arguments..thunk4, .Lfunc_end56-command_line_arguments.command_line_arguments..thunk4
	.cfi_endproc

	.section	.text.command_line_arguments.ArchClang,"ax",@progbits
	.globl	command_line_arguments.ArchClang
	.p2align	4, 0x90
	.type	command_line_arguments.ArchClang,@function
command_line_arguments.ArchClang:
.Lfunc_begin57:
	.loc	7 30 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB57_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB57_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$104, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
.Ltmp2338:
	.loc	7 32 2 prologue_end
	movl	$.Lconst.62, %edx
	movl	$3, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB57_5
.Ltmp2339:
	.loc	7 0 2 is_stmt 0
	movl	$.Lconst.512, %r12d
	movl	$5, %ebx
	jmp	.LBB57_4
.Ltmp2340:
.LBB57_5:
	.loc	7 34 2 is_stmt 1
	movl	$.Lconst.91, %r12d
	movl	$5, %ebx
	movl	$.Lconst.91, %edx
	movl	$5, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB57_4
.Ltmp2341:
	.loc	7 36 2
	movl	$.Lconst.97, %edx
	movl	$3, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB57_8
.Ltmp2342:
	.loc	7 0 2 is_stmt 0
	movl	$.Lconst.514, %r12d
	movl	$4, %ebx
	jmp	.LBB57_4
.Ltmp2343:
.LBB57_8:
	.loc	7 38 2 is_stmt 1
	movl	$.Lconst.103, %edx
	movl	$5, %ecx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB57_10
.Ltmp2344:
	.loc	7 0 2 is_stmt 0
	movl	$.Lconst.104, %r12d
	movl	$6, %ebx
.Ltmp2345:
.LBB57_4:
	.loc	7 33 3 is_stmt 1
	movq	%r12, %rax
	movq	%rbx, %rdx
.Ltmp2346:
	addq	$104, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2347:
	.cfi_def_cfa_offset 8
	retq
.LBB57_10:
	.cfi_def_cfa_offset 144
.Ltmp2348:
	.loc	7 41 13
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 88(%rsp)
	movq	%r14, 96(%rsp)
	leaq	88(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 72(%rsp)
	movq	%rbx, 80(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.516, %edi
	movl	$18, %esi
	callq	fmt.Sprintf
	movq	%rax, %r15
.Ltmp2349:
	movq	%rdx, %r14
	.loc	7 41 3 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 56(%rsp)
	movq	%r14, 64(%rsp)
	leaq	56(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp2350:
.Lfunc_end57:
	.size	command_line_arguments.ArchClang, .Lfunc_end57-command_line_arguments.ArchClang
	.cfi_endproc

	.section	.text.command_line_arguments.CopyFile,"ax",@progbits
	.globl	command_line_arguments.CopyFile
	.p2align	4, 0x90
	.type	command_line_arguments.CopyFile,@function
command_line_arguments.CopyFile:
.Lfunc_begin58:
	.loc	6 203 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception5
	cmpq	%fs:112, %rsp
	ja	.LBB58_2
	movq	%r10, %rax
	movabsq	$248, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB58_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$200, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r12
	movq	%rcx, %r13
	movq	%rdx, 40(%rsp)
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rdi, 32(%rsp)
	movb	$0, 30(%rsp)
	movb	$0, 31(%rsp)
.Ltmp2351:
.Ltmp2386:
	.loc	6 204 6 prologue_end
	callq	command_line_arguments.Flags.ShouldPrint
.Ltmp2352:
.Ltmp2387:
	.loc	6 204 2 is_stmt 0
	testb	$1, %al
	je	.LBB58_12
.Ltmp2388:
.Ltmp2353:
	.loc	6 205 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp2354:
.Ltmp2389:
	.loc	6 0 11 is_stmt 0
	movq	%rax, %rbx
.Ltmp2390:
	movq	%r13, 104(%rsp)
	movq	%r12, 112(%rsp)
.Ltmp2355:
	leaq	104(%rsp), %rdx
	.loc	6 205 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp2356:
.Ltmp2391:
.Ltmp2357:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp2358:
.Ltmp2392:
	.loc	6 0 11
	movq	%rax, %rbp
	movq	%r14, 88(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 96(%rsp)
.Ltmp2359:
	leaq	88(%rsp), %rdx
	.loc	6 205 11
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp2360:
.Ltmp2393:
	movq	$string..d, 168(%rsp)
	movq	%rbx, 176(%rsp)
	movq	$string..d, 184(%rsp)
	movq	%rbp, 192(%rsp)
	.loc	6 205 3
	movq	32(%rsp), %rbx
.Ltmp2394:
	.loc	6 205 4
	testq	%rbx, %rbx
	jne	.LBB58_10
.Ltmp2395:
.Ltmp2361:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2362:
.Ltmp2396:
.LBB58_10:
	movq	(%rbx), %rdi
	leaq	168(%rsp), %rax
	.loc	6 205 11
	movq	%rax, 64(%rsp)
	movq	$2, 72(%rsp)
	movq	$2, 80(%rsp)
.Ltmp2363:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.481, %esi
	movl	$9, %edx
	callq	log.Logger.Printf
.Ltmp2364:
.Ltmp2397:
	.loc	6 208 18 is_stmt 1
	movq	32(%rsp), %rbx
.Ltmp2398:
.LBB58_12:
	.loc	6 208 19 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB58_16
.Ltmp2399:
	movb	9(%rbx), %al
	movb	%al, 31(%rsp)
	jmp	.LBB58_20
.Ltmp2400:
.LBB58_16:
.Ltmp2365:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2366:
.Ltmp2401:
	.loc	6 209 2 is_stmt 1
	movq	32(%rsp), %rbx
.Ltmp2402:
	.loc	6 208 19
	movb	9, %al
.Ltmp2403:
	.loc	6 0 19 is_stmt 0
	movb	%al, 31(%rsp)
	.loc	6 209 3 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB58_20
.Ltmp2404:
.Ltmp2367:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2405:
.Ltmp2368:
	.loc	6 0 3 is_stmt 0
	xorl	%ebx, %ebx
.Ltmp2406:
.LBB58_20:
	.loc	6 209 17
	movb	$1, 9(%rbx)
	.loc	6 210 8 is_stmt 1
	movq	$command_line_arguments.CopyFile..func1, 144(%rsp)
	leaq	32(%rsp), %rax
	movq	%rax, 152(%rsp)
	leaq	31(%rsp), %rax
	movq	%rax, 160(%rsp)
	leaq	144(%rsp), %rax
	.loc	6 210 2 is_stmt 0
	movq	%rax, 56(%rsp)
.Ltmp2369:
	leaq	30(%rsp), %rdi
	leaq	56(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk7, %esi
	callq	runtime.deferproc
.Ltmp2370:
.Ltmp2407:
	.loc	6 214 5 is_stmt 1
	movq	32(%rsp), %rdi
.Ltmp2408:
.Ltmp2371:
	.loc	6 214 6 is_stmt 0
	callq	command_line_arguments.Flags.ShouldRun
.Ltmp2409:
.Ltmp2372:
	.loc	6 0 6
	movb	$1, %r15b
	.loc	6 214 2
	testb	$1, %al
	jne	.LBB58_24
.Ltmp2410:
.LBB58_23:
	.loc	6 0 2
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
.Ltmp2411:
	leaq	30(%rsp), %rbp
	jmp	.LBB58_34
.Ltmp2412:
.LBB58_24:
.Ltmp2373:
	leaq	120(%rsp), %rdi
.Ltmp2413:
	.loc	6 215 19 is_stmt 1
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	os.Open
.Ltmp2374:
.Ltmp2414:
	movq	128(%rsp), %rbx
.Ltmp2415:
	.loc	6 216 10
	testq	%rbx, %rbx
	je	.LBB58_29
.Ltmp2416:
	.loc	6 215 19
	movq	136(%rsp), %r14
.Ltmp2417:
	.loc	6 0 19 is_stmt 0
	leaq	30(%rsp), %rbp
	jmp	.LBB58_34
.Ltmp2418:
.LBB58_29:
	movq	120(%rsp), %rbx
.Ltmp2419:
	.loc	6 219 3 is_stmt 1
	movq	%rbx, 48(%rsp)
.Ltmp2375:
	leaq	30(%rsp), %rdi
	leaq	48(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk8, %esi
	callq	runtime.deferproc
.Ltmp2376:
.Ltmp2420:
	.loc	6 220 20
	movq	32(%rsp), %rdi
.Ltmp2421:
.Ltmp2377:
	.loc	6 220 10 is_stmt 0
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %ecx
	movq	%r14, %rsi
	movq	40(%rsp), %rdx
	movq	%rbx, %r8
	callq	command_line_arguments.WriteFile
.Ltmp2422:
.Ltmp2378:
	.loc	6 0 10
	movq	%rax, %rbx
	movq	%rdx, %r14
.Ltmp2423:
	leaq	30(%rsp), %rbp
	jmp	.LBB58_34
.Ltmp2424:
.LBB58_14:
.Ltmp2379:
.Ltmp2380:
	leaq	30(%rsp), %rdi
	.loc	6 223 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp2381:
.Ltmp2425:
	.loc	6 0 1 is_stmt 0
	movb	$1, %r15b
	jmp	.LBB58_23
.Ltmp2426:
.LBB58_32:
.Ltmp2382:
	movq	%rax, %r12
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
.Ltmp2427:
	xorl	%r15d, %r15d
.Ltmp2428:
	leaq	30(%rsp), %rbp
	jmp	.LBB58_34
.Ltmp2429:
.LBB58_33:
.Ltmp2385:
	.loc	6 223 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp2430:
	.p2align	4, 0x90
.LBB58_34:
.Ltmp2383:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp2384:
.Ltmp2431:
	.loc	6 0 1
	testb	%r15b, %r15b
	je	.LBB58_37
.Ltmp2432:
	.loc	6 217 4 is_stmt 1
	movq	%rbx, %rax
	movq	%r14, %rdx
	addq	$200, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp2433:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp2434:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2435:
.LBB58_37:
	.cfi_def_cfa_offset 256
	.loc	6 0 4 is_stmt 0
	movq	%r12, %rdi
	callq	_Unwind_Resume
.Lfunc_end58:
	.size	command_line_arguments.CopyFile, .Lfunc_end58-command_line_arguments.CopyFile
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table58:
.Lexception5:
	.byte	255
	.byte	3
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin58-.Lfunc_begin58
	.uleb128 .Ltmp2351-.Lfunc_begin58
	.byte	0
	.byte	0
	.uleb128 .Ltmp2351-.Lfunc_begin58
	.uleb128 .Ltmp2378-.Ltmp2351
	.uleb128 .Ltmp2379-.Lfunc_begin58
	.byte	1
	.uleb128 .Ltmp2380-.Lfunc_begin58
	.uleb128 .Ltmp2381-.Ltmp2380
	.uleb128 .Ltmp2382-.Lfunc_begin58
	.byte	0
	.uleb128 .Ltmp2381-.Lfunc_begin58
	.uleb128 .Ltmp2383-.Ltmp2381
	.byte	0
	.byte	0
	.uleb128 .Ltmp2383-.Lfunc_begin58
	.uleb128 .Ltmp2384-.Ltmp2383
	.uleb128 .Ltmp2385-.Lfunc_begin58
	.byte	1
	.uleb128 .Ltmp2384-.Lfunc_begin58
	.uleb128 .Lfunc_end58-.Ltmp2384
	.byte	0
	.byte	0
.Lcst_end5:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase5:
	.p2align	2

	.section	.text.command_line_arguments.GoEnv,"ax",@progbits
	.globl	command_line_arguments.GoEnv
	.p2align	4, 0x90
	.type	command_line_arguments.GoEnv,@function
command_line_arguments.GoEnv:
.Lfunc_begin59:
	.loc	5 113 0 is_stmt 1
	.cfi_startproc
	leaq	-264(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB59_2
	movq	%r10, %rax
	movabsq	$264, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB59_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$224, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %r13
	movq	%rdi, %r14
.Ltmp2436:
	.loc	5 114 12 prologue_end
	callq	command_line_arguments.GetEnv
	movq	%rax, %rbx
.Ltmp2437:
	movq	%rdx, %r12
.Ltmp2438:
	.loc	5 114 33 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	movq	%r12, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB59_3
.Ltmp2439:
	.loc	5 118 14 is_stmt 1
	movups	.Lconst.576(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	%r13, 144(%rsp)
	movq	%r15, 152(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$2, 48(%rsp)
	movq	$2, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.554, %edi
	movl	$2, %esi
	callq	os_exec.Command
	movq	%rax, %r12
.Ltmp2440:
	.loc	5 119 35
	movups	.Lconst.490(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	%r13, 112(%rsp)
	movq	%r15, 120(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	112(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rdx, %rcx
	leaq	160(%rsp), %rdi
	.loc	5 119 33 is_stmt 0
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	runtime.stringtoslicebyte
	.loc	5 119 14
	movq	176(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	160(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	184(%rsp), %rdi
.Ltmp2441:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	movq	%r12, %r8
	callq	command_line_arguments.OutputCmd
	movups	184(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	200(%rsp), %rax
	movq	%rax, 80(%rsp)
	.loc	5 120 9 is_stmt 1
	cmpq	$0, 208(%rsp)
	je	.LBB59_7
.Ltmp2442:
	.loc	5 121 3
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB59_4
.Ltmp2443:
.LBB59_3:
	.loc	5 115 3
	movq	%rbx, %rax
	movq	%r12, %rdx
	jmp	.LBB59_4
.Ltmp2444:
.LBB59_7:
	.loc	5 123 27
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.slicebytetostring
	.loc	5 123 17 is_stmt 0
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	strings.TrimSpace
.Ltmp2445:
.LBB59_4:
	.loc	5 0 17
	addq	$224, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
.Ltmp2446:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp2447:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end59:
	.size	command_line_arguments.GoEnv, .Lfunc_end59-command_line_arguments.GoEnv
	.cfi_endproc

	.section	.text.command_line_arguments.GoBuild,"ax",@progbits
	.globl	command_line_arguments.GoBuild
	.p2align	4, 0x90
	.type	command_line_arguments.GoBuild,@function
command_line_arguments.GoBuild:
.Lfunc_begin60:
	.loc	5 135 0 is_stmt 1
	.cfi_startproc
	leaq	-1384(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB60_2
	movq	%r10, %rax
	movabsq	$1384, %r10
	movabsq	$96, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB60_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1336, %rsp
	.cfi_def_cfa_offset 1392
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r15
	movq	%rcx, %r12
	movq	%rdx, %rax
	movq	%rdi, %r14
.Ltmp2448:
	.loc	5 136 18 prologue_end
	movq	1432(%rsp), %rcx
	movq	%rcx, 16(%rsp)
	movups	1416(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1264(%rsp), %rdi
	movq	%rsi, %rdx
.Ltmp2449:
	movq	%rax, %rcx
.Ltmp2450:
	callq	command_line_arguments.PkgPath
.Ltmp2451:
	movq	1280(%rsp), %rax
.Ltmp2452:
	.loc	5 137 9
	testq	%rax, %rax
	je	.LBB60_5
.Ltmp2453:
	.loc	5 136 18
	movq	1288(%rsp), %rdx
	jmp	.LBB60_4
.Ltmp2454:
.LBB60_5:
	.loc	5 0 18 is_stmt 0
	movq	1264(%rsp), %rbx
.Ltmp2455:
	movq	1272(%rsp), %rbp
.Ltmp2456:
	.loc	5 141 6 is_stmt 1
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	callq	command_line_arguments.IsDir
.Ltmp2457:
	.loc	5 141 5 is_stmt 0
	testb	%al, %al
	je	.LBB60_6
.Ltmp2458:
	.loc	5 0 5
	movq	%r12, 320(%rsp)
.Ltmp2459:
	movq	%r15, 328(%rsp)
	leaq	1440(%rsp), %r15
	.loc	5 145 45 is_stmt 1
	movups	.Lconst.583(%rip), %xmm0
	movaps	%xmm0, 1232(%rsp)
	movq	%rbx, 1248(%rsp)
	movq	%rbp, 1256(%rsp)
	movaps	1232(%rsp), %xmm0
	movaps	1248(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	.loc	5 145 14 is_stmt 0
	movups	.Lconst.585(%rip), %xmm0
	movaps	%xmm0, 1296(%rsp)
	movq	%rax, 1312(%rsp)
	movq	%rdx, 1320(%rsp)
	leaq	1296(%rsp), %rax
	movq	%rax, 824(%rsp)
	movq	$2, 832(%rsp)
	movq	$2, 840(%rsp)
	movq	840(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	824(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.554, %edi
	movl	$2, %esi
	callq	os_exec.Command
	movq	%rax, %r13
.Ltmp2460:
	movq	%rax, %r12
	.loc	5 146 20 is_stmt 1
	cmpq	$0, 8(%r15)
	jle	.LBB60_29
.Ltmp2461:
	.loc	5 147 48
	movq	16(%r15), %rax
	movq	%rax, 16(%rsp)
	movups	(%r15), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.439, %edi
	movl	$1, %esi
	callq	strings.Join
	movq	%rax, 336(%rsp)
	movq	%rdx, 344(%rsp)
	.loc	5 147 6 is_stmt 0
	testq	%r13, %r13
	je	.LBB60_152
.Ltmp2462:
	.loc	5 0 6
	movups	16(%r12), %xmm0
	movaps	%xmm0, 112(%rsp)
	movq	32(%r12), %rax
	movq	%rax, 128(%rsp)
	.loc	5 147 14
	movq	120(%rsp), %rbp
.Ltmp2463:
	.loc	5 0 14
	movups	.Lconst.587(%rip), %xmm0
	movaps	%xmm0, 960(%rsp)
	.loc	5 147 14
	leaq	2(%rbp), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_14
.Ltmp2464:
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1208(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1208(%rsp), %rsi
	movq	1216(%rsp), %rdx
	movq	1224(%rsp), %rax
	jmp	.LBB60_11
.Ltmp2465:
.LBB60_6:
	.loc	5 142 14 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp2466:
	.loc	5 0 14 is_stmt 0
	movq	%rbx, 1000(%rsp)
	movq	%rbp, 1008(%rsp)
	leaq	1000(%rsp), %rdx
	.loc	5 142 14
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 984(%rsp)
	movq	%r14, 992(%rsp)
	leaq	984(%rsp), %rax
	movq	%rax, 800(%rsp)
	movq	$1, 808(%rsp)
	movq	$1, 816(%rsp)
	movq	816(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	800(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.580, %edi
	movl	$64, %esi
	callq	fmt.Errorf
	jmp	.LBB60_4
.Ltmp2467:
.LBB60_14:
	.loc	5 147 14 is_stmt 1
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2468:
	.loc	5 0 14 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB60_146
.Ltmp2469:
	.loc	5 147 14
	movq	112(%rsp), %rsi
.Ltmp2470:
.LBB60_11:
	movq	%rsi, 112(%rsp)
	movq	%rdx, 120(%rsp)
	movq	%rax, 128(%rsp)
	testq	%rbp, %rbp
	js	.LBB60_13
.Ltmp2471:
	.loc	5 0 14
	cmpq	%rdx, %rbp
	jge	.LBB60_13
.Ltmp2472:
	.loc	5 147 14
	movq	%rbp, %rax
	shlq	$4, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_18
.Ltmp2473:
	.loc	5 0 14
	leaq	960(%rsp), %rdx
	.loc	5 147 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	addq	$1, %rbp
	js	.LBB60_13
.Ltmp2474:
.LBB60_22:
	.loc	5 0 14
	cmpq	120(%rsp), %rbp
	jge	.LBB60_13
.Ltmp2475:
	.loc	5 147 14
	shlq	$4, %rbp
	addq	112(%rsp), %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_24
.Ltmp2476:
	.loc	5 0 14
	leaq	336(%rsp), %rdx
	.loc	5 147 14
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB60_27
.Ltmp2477:
.LBB60_18:
	testq	%rsi, %rsi
	je	.LBB60_152
.Ltmp2478:
	movaps	960(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	addq	$1, %rbp
	jns	.LBB60_22
	jmp	.LBB60_13
.Ltmp2479:
.LBB60_24:
	testq	%rbp, %rbp
	je	.LBB60_152
.Ltmp2480:
	movups	336(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2481:
.LBB60_27:
	.loc	5 0 14
	leaq	16(%r13), %rsi
	movq	128(%rsp), %rax
	movq	%rax, 720(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 704(%rsp)
	.loc	5 147 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_153
.Ltmp2482:
	.loc	5 0 12
	leaq	704(%rsp), %rdx
	.loc	5 147 12
	movl	$type...6.7string, %edi
	callq	runtime.typedmemmove
.Ltmp2483:
.LBB60_29:
	.loc	5 149 6 is_stmt 1
	testq	%r14, %r14
	je	.LBB60_152
.Ltmp2484:
.LBB60_30:
	.loc	5 149 2 is_stmt 0
	testb	$1, 12(%r14)
	je	.LBB60_46
.Ltmp2485:
	.loc	5 150 6 is_stmt 1
	testq	%r13, %r13
	je	.LBB60_152
.Ltmp2486:
	.loc	5 0 6 is_stmt 0
	movups	16(%r12), %xmm0
	movaps	%xmm0, 272(%rsp)
	movq	32(%r12), %rax
	movq	%rax, 288(%rsp)
	.loc	5 150 14
	movq	280(%rsp), %rbx
	movups	.Lconst.589(%rip), %xmm0
	movaps	%xmm0, 944(%rsp)
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_39
.Ltmp2487:
	movq	288(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	272(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1184(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1184(%rsp), %rsi
	movq	1192(%rsp), %rdx
	movq	1200(%rsp), %rax
	jmp	.LBB60_34
.Ltmp2488:
.LBB60_39:
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2489:
	.loc	5 0 14
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB60_146
.Ltmp2490:
	.loc	5 150 14
	movq	272(%rsp), %rsi
.Ltmp2491:
.LBB60_34:
	movq	%rsi, 272(%rsp)
	movq	%rdx, 280(%rsp)
	movq	%rax, 288(%rsp)
	testq	%rbx, %rbx
	js	.LBB60_13
.Ltmp2492:
	.loc	5 0 14
	cmpq	%rdx, %rbx
	jge	.LBB60_13
.Ltmp2493:
	.loc	5 150 14
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_37
.Ltmp2494:
	.loc	5 0 14
	leaq	944(%rsp), %rdx
	.loc	5 150 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB60_43
.Ltmp2495:
.LBB60_153:
	.loc	5 147 12 is_stmt 1
	movq	720(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	704(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	5 149 6
	testq	%r14, %r14
	jne	.LBB60_30
	jmp	.LBB60_152
.Ltmp2496:
.LBB60_37:
	.loc	5 150 14
	testq	%rsi, %rsi
	je	.LBB60_152
.Ltmp2497:
	movaps	944(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2498:
.LBB60_43:
	.loc	5 0 14 is_stmt 0
	leaq	16(%r13), %rsi
	movq	288(%rsp), %rax
	movq	%rax, 688(%rsp)
	movaps	272(%rsp), %xmm0
	movaps	%xmm0, 672(%rsp)
	.loc	5 150 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_45
.Ltmp2499:
	.loc	5 0 12
	leaq	672(%rsp), %rdx
	.loc	5 150 12
	movl	$type...6.7string, %edi
	callq	runtime.typedmemmove
.Ltmp2500:
.LBB60_46:
	.loc	5 155 2 is_stmt 1
	testb	$1, 11(%r14)
	je	.LBB60_62
.Ltmp2501:
.LBB60_47:
	.loc	5 156 6
	testq	%r13, %r13
	je	.LBB60_152
.Ltmp2502:
	.loc	5 0 6 is_stmt 0
	movups	16(%r12), %xmm0
	movaps	%xmm0, 240(%rsp)
	movq	32(%r12), %rax
	movq	%rax, 256(%rsp)
	.loc	5 156 14
	movq	248(%rsp), %rbx
	movups	.Lconst.591(%rip), %xmm0
	movaps	%xmm0, 928(%rsp)
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_55
.Ltmp2503:
	movq	256(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	240(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1160(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1160(%rsp), %rsi
	movq	1168(%rsp), %rdx
	movq	1176(%rsp), %rax
	jmp	.LBB60_50
.Ltmp2504:
.LBB60_55:
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2505:
	.loc	5 0 14
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB60_146
.Ltmp2506:
	.loc	5 156 14
	movq	240(%rsp), %rsi
.Ltmp2507:
.LBB60_50:
	movq	%rsi, 240(%rsp)
	movq	%rdx, 248(%rsp)
	movq	%rax, 256(%rsp)
	testq	%rbx, %rbx
	js	.LBB60_13
.Ltmp2508:
	.loc	5 0 14
	cmpq	%rdx, %rbx
	jge	.LBB60_13
.Ltmp2509:
	.loc	5 156 14
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_53
.Ltmp2510:
	.loc	5 0 14
	leaq	928(%rsp), %rdx
	.loc	5 156 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB60_59
.Ltmp2511:
.LBB60_45:
	.loc	5 150 12 is_stmt 1
	movq	688(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	672(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	5 155 2
	testb	$1, 11(%r14)
	jne	.LBB60_47
	jmp	.LBB60_62
.Ltmp2512:
.LBB60_53:
	.loc	5 156 14
	testq	%rsi, %rsi
	je	.LBB60_152
.Ltmp2513:
	movaps	928(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2514:
.LBB60_59:
	.loc	5 0 14 is_stmt 0
	leaq	16(%r13), %rsi
	movq	256(%rsp), %rax
	movq	%rax, 656(%rsp)
	movaps	240(%rsp), %xmm0
	movaps	%xmm0, 640(%rsp)
	.loc	5 156 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_61
.Ltmp2515:
	.loc	5 0 12
	leaq	640(%rsp), %rdx
	.loc	5 156 12
	movl	$type...6.7string, %edi
	callq	runtime.typedmemmove
	jmp	.LBB60_62
.Ltmp2516:
.LBB60_61:
	movq	656(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	640(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2517:
.LBB60_62:
	.loc	5 158 20 is_stmt 1
	movq	16(%r14), %rdi
	movq	24(%r14), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB60_84
.Ltmp2518:
	.loc	5 159 6
	testq	%r13, %r13
	je	.LBB60_152
.Ltmp2519:
	.loc	5 0 6 is_stmt 0
	leaq	16(%r14), %rcx
	movups	16(%r12), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	32(%r12), %rax
	movq	%rax, 96(%rsp)
	.loc	5 159 14
	movq	88(%rsp), %rbp
	movups	.Lconst.593(%rip), %xmm0
	movaps	%xmm0, 912(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 896(%rsp)
	leaq	2(%rbp), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_71
.Ltmp2520:
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1136(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1136(%rsp), %rsi
	movq	1144(%rsp), %rdx
	movq	1152(%rsp), %rax
	jmp	.LBB60_66
.Ltmp2521:
.LBB60_71:
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2522:
	.loc	5 0 14
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB60_146
.Ltmp2523:
	.loc	5 159 14
	movq	80(%rsp), %rsi
.Ltmp2524:
.LBB60_66:
	movq	%rsi, 80(%rsp)
	movq	%rdx, 88(%rsp)
	movq	%rax, 96(%rsp)
	testq	%rbp, %rbp
	js	.LBB60_13
.Ltmp2525:
	.loc	5 0 14
	cmpq	%rdx, %rbp
	jge	.LBB60_13
.Ltmp2526:
	.loc	5 159 14
	movq	%rbp, %rax
	shlq	$4, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_69
.Ltmp2527:
	.loc	5 0 14
	leaq	912(%rsp), %rdx
	.loc	5 159 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	addq	$1, %rbp
	js	.LBB60_13
.Ltmp2528:
.LBB60_76:
	.loc	5 0 14
	cmpq	88(%rsp), %rbp
	jge	.LBB60_13
.Ltmp2529:
	.loc	5 159 14
	shlq	$4, %rbp
	addq	80(%rsp), %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_78
.Ltmp2530:
	.loc	5 0 14
	leaq	896(%rsp), %rdx
	.loc	5 159 14
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB60_81
.Ltmp2531:
.LBB60_69:
	testq	%rsi, %rsi
	je	.LBB60_152
.Ltmp2532:
	movaps	912(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	addq	$1, %rbp
	jns	.LBB60_76
	jmp	.LBB60_13
.Ltmp2533:
.LBB60_78:
	testq	%rbp, %rbp
	je	.LBB60_152
.Ltmp2534:
	movaps	896(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2535:
.LBB60_81:
	.loc	5 0 14
	leaq	16(%r13), %rsi
	movq	96(%rsp), %rax
	movq	%rax, 624(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 608(%rsp)
	.loc	5 159 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_83
.Ltmp2536:
	.loc	5 0 12
	leaq	608(%rsp), %rdx
	.loc	5 159 12
	movl	$type...6.7string, %edi
	callq	runtime.typedmemmove
	jmp	.LBB60_84
.Ltmp2537:
.LBB60_83:
	movq	624(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	608(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2538:
.LBB60_84:
	.loc	5 161 20 is_stmt 1
	movq	32(%r14), %rdi
	movq	40(%r14), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB60_106
.Ltmp2539:
	.loc	5 162 6
	testq	%r13, %r13
	je	.LBB60_152
.Ltmp2540:
	.loc	5 0 6 is_stmt 0
	leaq	32(%r14), %rcx
	movups	16(%r12), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	32(%r12), %rax
	movq	%rax, 64(%rsp)
	.loc	5 162 14
	movq	56(%rsp), %rbp
	movups	.Lconst.595(%rip), %xmm0
	movaps	%xmm0, 880(%rsp)
	movups	(%rcx), %xmm0
	movaps	%xmm0, 864(%rsp)
	leaq	2(%rbp), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_93
.Ltmp2541:
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1112(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1112(%rsp), %rsi
	movq	1120(%rsp), %rdx
	movq	1128(%rsp), %rax
	jmp	.LBB60_88
.Ltmp2542:
.LBB60_93:
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2543:
	.loc	5 0 14
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB60_146
.Ltmp2544:
	.loc	5 162 14
	movq	48(%rsp), %rsi
.Ltmp2545:
.LBB60_88:
	movq	%rsi, 48(%rsp)
	movq	%rdx, 56(%rsp)
	movq	%rax, 64(%rsp)
	testq	%rbp, %rbp
	js	.LBB60_13
.Ltmp2546:
	.loc	5 0 14
	cmpq	%rdx, %rbp
	jge	.LBB60_13
.Ltmp2547:
	.loc	5 162 14
	movq	%rbp, %rax
	shlq	$4, %rax
	addq	%rax, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_91
.Ltmp2548:
	.loc	5 0 14
	leaq	880(%rsp), %rdx
	.loc	5 162 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	addq	$1, %rbp
	js	.LBB60_13
.Ltmp2549:
.LBB60_98:
	.loc	5 0 14
	cmpq	56(%rsp), %rbp
	jge	.LBB60_13
.Ltmp2550:
	.loc	5 162 14
	shlq	$4, %rbp
	addq	48(%rsp), %rbp
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_100
.Ltmp2551:
	.loc	5 0 14
	leaq	864(%rsp), %rdx
	.loc	5 162 14
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB60_103
.Ltmp2552:
.LBB60_91:
	testq	%rsi, %rsi
	je	.LBB60_152
.Ltmp2553:
	movaps	880(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	addq	$1, %rbp
	jns	.LBB60_98
	jmp	.LBB60_13
.Ltmp2554:
.LBB60_100:
	testq	%rbp, %rbp
	je	.LBB60_152
.Ltmp2555:
	movaps	864(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2556:
.LBB60_103:
	.loc	5 0 14
	leaq	16(%r13), %rsi
	movq	64(%rsp), %rax
	movq	%rax, 592(%rsp)
	movaps	48(%rsp), %xmm0
	movaps	%xmm0, 576(%rsp)
	.loc	5 162 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_105
.Ltmp2557:
	.loc	5 0 12
	leaq	576(%rsp), %rdx
	.loc	5 162 12
	movl	$type...6.7string, %edi
	callq	runtime.typedmemmove
.Ltmp2558:
.LBB60_106:
	.loc	5 164 2 is_stmt 1
	testb	$1, 13(%r14)
	jne	.LBB60_107
.Ltmp2559:
.LBB60_115:
	.loc	5 0 0 is_stmt 0
	testq	%r13, %r13
	je	.LBB60_152
.Ltmp2560:
	.loc	5 167 5 is_stmt 1
	leaq	16(%r13), %rbp
	jmp	.LBB60_124
.Ltmp2561:
.LBB60_105:
	.loc	5 162 12
	movq	592(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	576(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	5 164 2
	testb	$1, 13(%r14)
	je	.LBB60_115
.Ltmp2562:
.LBB60_107:
	.loc	5 0 0 is_stmt 0
	testq	%r13, %r13
	je	.LBB60_152
.Ltmp2563:
	movups	16(%r12), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	32(%r12), %rax
	movq	%rax, 224(%rsp)
	.loc	5 165 14 is_stmt 1
	movq	216(%rsp), %rbx
	movups	.Lconst.597(%rip), %xmm0
	movaps	%xmm0, 848(%rsp)
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_117
.Ltmp2564:
	movq	224(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	208(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1088(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1088(%rsp), %rsi
	movq	1096(%rsp), %rdx
	movq	1104(%rsp), %rax
	jmp	.LBB60_110
.Ltmp2565:
.LBB60_117:
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2566:
	.loc	5 0 14 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB60_146
.Ltmp2567:
	.loc	5 165 14
	movq	208(%rsp), %rsi
.Ltmp2568:
.LBB60_110:
	movq	%rsi, 208(%rsp)
	movq	%rdx, 216(%rsp)
	movq	%rax, 224(%rsp)
	testq	%rbx, %rbx
	js	.LBB60_13
.Ltmp2569:
	.loc	5 0 14
	cmpq	%rdx, %rbx
	jge	.LBB60_13
.Ltmp2570:
	.loc	5 165 14
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_113
.Ltmp2571:
	.loc	5 0 14
	leaq	848(%rsp), %rdx
	.loc	5 165 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB60_121
.Ltmp2572:
.LBB60_113:
	testq	%rsi, %rsi
	je	.LBB60_152
.Ltmp2573:
	movaps	848(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2574:
.LBB60_121:
	.loc	5 0 14
	leaq	16(%r13), %rbp
	movq	224(%rsp), %rax
	movq	%rax, 560(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 544(%rsp)
	.loc	5 165 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_123
.Ltmp2575:
	.loc	5 0 12
	leaq	544(%rsp), %rdx
	.loc	5 165 12
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB60_124
.Ltmp2576:
.LBB60_123:
	movq	560(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	544(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2577:
.LBB60_124:
	.loc	5 0 12
	leaq	1464(%rsp), %rcx
	movups	(%rbp), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 192(%rsp)
	.loc	5 167 13 is_stmt 1
	movq	184(%rsp), %rbx
	movups	(%rcx), %xmm0
	movaps	%xmm0, 512(%rsp)
	movq	16(%rcx), %rcx
	movq	%rcx, 528(%rsp)
	movq	520(%rsp), %rdx
	addq	%rbx, %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_130
.Ltmp2578:
	movq	192(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	176(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1064(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1064(%rsp), %rcx
	movq	1072(%rsp), %rdx
	movq	1080(%rsp), %rax
	jmp	.LBB60_126
.Ltmp2579:
.LBB60_130:
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2580:
	.loc	5 0 13 is_stmt 0
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB60_146
.Ltmp2581:
	.loc	5 167 13
	movq	176(%rsp), %rcx
.Ltmp2582:
.LBB60_126:
	movq	%rcx, 176(%rsp)
	movq	%rdx, 184(%rsp)
	movq	%rax, 192(%rsp)
	testq	%rbx, %rbx
	js	.LBB60_146
.Ltmp2583:
	.loc	5 0 13
	cmpq	%rbx, %rax
	jl	.LBB60_146
.Ltmp2584:
	leaq	1392(%rsp), %r15
	xorl	%esi, %esi
	.loc	5 167 13
	subq	%rbx, %rax
	cmovneq	%rbx, %rsi
	shlq	$4, %rsi
	addq	%rsi, %rcx
	subq	%rbx, %rdx
	movq	%rcx, 776(%rsp)
	movq	%rdx, 784(%rsp)
	movq	%rax, 792(%rsp)
	movq	528(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	512(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	792(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	776(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %edi
	callq	runtime.typedslicecopy
	movaps	176(%rsp), %xmm0
	movaps	%xmm0, 480(%rsp)
	movq	192(%rsp), %rax
	movq	%rax, 496(%rsp)
	.loc	5 167 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_133
.Ltmp2585:
	.loc	5 0 11
	leaq	480(%rsp), %rdx
	.loc	5 167 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB60_134
.Ltmp2586:
.LBB60_133:
	movq	496(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	480(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2587:
.LBB60_134:
	.loc	5 0 11
	movups	(%rbp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 160(%rsp)
	.loc	5 168 13 is_stmt 1
	movq	152(%rsp), %rbx
	movups	(%r15), %xmm0
	movaps	%xmm0, 448(%rsp)
	movq	16(%r15), %rcx
	movq	%rcx, 464(%rsp)
	movq	456(%rsp), %rdx
	addq	%rbx, %rdx
	cmpq	%rax, %rdx
	jbe	.LBB60_140
.Ltmp2588:
	movq	160(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	144(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1040(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1040(%rsp), %rcx
	movq	1048(%rsp), %rdx
	movq	1056(%rsp), %rax
	jmp	.LBB60_136
.Ltmp2589:
.LBB60_140:
	cmpq	%rax, %rdx
	jg	.LBB60_146
.Ltmp2590:
	.loc	5 0 13 is_stmt 0
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB60_146
.Ltmp2591:
	.loc	5 168 13
	movq	144(%rsp), %rcx
.Ltmp2592:
.LBB60_136:
	movq	%rcx, 144(%rsp)
	movq	%rdx, 152(%rsp)
	movq	%rax, 160(%rsp)
	testq	%rbx, %rbx
	js	.LBB60_146
.Ltmp2593:
	.loc	5 0 13
	cmpq	%rbx, %rax
	jl	.LBB60_146
.Ltmp2594:
	leaq	1416(%rsp), %r15
	xorl	%esi, %esi
	.loc	5 168 13
	subq	%rbx, %rax
	cmovneq	%rbx, %rsi
	shlq	$4, %rsi
	addq	%rsi, %rcx
	subq	%rbx, %rdx
	movq	%rcx, 752(%rsp)
	movq	%rdx, 760(%rsp)
	movq	%rax, 768(%rsp)
	movq	464(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	448(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	768(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	752(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %edi
	callq	runtime.typedslicecopy
	movaps	144(%rsp), %xmm0
	movaps	%xmm0, 416(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 432(%rsp)
	.loc	5 168 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_143
.Ltmp2595:
	.loc	5 0 11
	leaq	416(%rsp), %rdx
	.loc	5 168 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB60_144
.Ltmp2596:
.LBB60_143:
	movq	432(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	416(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2597:
.LBB60_144:
	.loc	5 169 19 is_stmt 1
	movl	$type...60x.7string, %edi
	callq	runtime.newobject
	movq	%rax, 296(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 304(%rsp)
	movups	(%r15), %xmm1
	movaps	%xmm1, 384(%rsp)
	movq	16(%r15), %rcx
	movq	%rcx, 400(%rsp)
	.loc	5 169 12 is_stmt 0
	movq	392(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB60_147
.Ltmp2598:
	movq	312(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	296(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	1016(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	1016(%rsp), %rax
	movq	1024(%rsp), %rdx
	movq	1032(%rsp), %rcx
	movq	%rax, 296(%rsp)
	movq	%rdx, 304(%rsp)
	movq	%rcx, 312(%rsp)
	testq	%rcx, %rcx
	jns	.LBB60_148
.Ltmp2599:
.LBB60_146:
	.loc	5 0 12
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp2600:
.LBB60_147:
	leaq	304(%rsp), %rcx
	.loc	5 169 12
	movups	%xmm0, (%rcx)
	xorl	%ecx, %ecx
	xorl	%edx, %edx
.Ltmp2601:
.LBB60_148:
	.loc	5 0 12
	addq	$40, %r13
.Ltmp2602:
	movq	%rax, 728(%rsp)
	movq	%rdx, 736(%rsp)
	movq	%rcx, 744(%rsp)
	.loc	5 169 12
	movq	400(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	384(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	744(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	728(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %edi
	callq	runtime.typedslicecopy
	movups	296(%rsp), %xmm0
	movaps	%xmm0, 352(%rsp)
	movq	312(%rsp), %rax
	movq	%rax, 368(%rsp)
	.loc	5 169 10
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB60_151
.Ltmp2603:
	.loc	5 0 10
	leaq	352(%rsp), %rdx
	.loc	5 169 10
	movl	$type...6.7string, %edi
	movq	%r13, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB60_150
.Ltmp2604:
.LBB60_151:
	movq	368(%rsp), %rax
	movq	%rax, 16(%r13)
	movaps	352(%rsp), %xmm0
	movups	%xmm0, (%r13)
.Ltmp2605:
.LBB60_150:
	.loc	5 170 9 is_stmt 1
	movq	%r14, %rdi
	movq	320(%rsp), %rsi
	movq	328(%rsp), %rdx
	movq	%r12, %rcx
	callq	command_line_arguments.RunCmd
.Ltmp2606:
.LBB60_4:
	.loc	5 0 9 is_stmt 0
	addq	$1336, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2607:
.LBB60_13:
	.cfi_def_cfa_offset 1392
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp2608:
.LBB60_152:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end60:
	.size	command_line_arguments.GoBuild, .Lfunc_end60-command_line_arguments.GoBuild
	.cfi_endproc

	.section	.text.command_line_arguments.FindEnv,"ax",@progbits
	.globl	command_line_arguments.FindEnv
	.p2align	4, 0x90
	.type	command_line_arguments.FindEnv,@function
command_line_arguments.FindEnv:
.Lfunc_begin61:
	.loc	5 72 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB61_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB61_2:
.Ltmp2609:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	5 73 12 prologue_end
	movq	%rdi, 40(%rsp)
	movq	%rsi, 48(%rsp)
	movups	.Lconst.456(%rip), %xmm0
	movups	%xmm0, 56(%rsp)
	movups	40(%rsp), %xmm0
	movups	56(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp2610:
	movq	%rax, 32(%rsp)
.Ltmp2611:
	.loc	5 0 12 is_stmt 0
	movq	136(%rsp), %r13
.Ltmp2612:
	.loc	5 74 2 is_stmt 1
	testq	%r13, %r13
	jle	.LBB61_8
.Ltmp2613:
	.loc	5 0 2 is_stmt 0
	movq	%rdx, %rcx
.Ltmp2614:
	movq	128(%rsp), %rbp
	.loc	5 74 2
	addq	$8, %rbp
	xorl	%r14d, %r14d
.Ltmp2615:
	.p2align	4, 0x90
.LBB61_5:
	movq	-8(%rbp), %r12
.Ltmp2616:
	movq	(%rbp), %rbx
.Ltmp2617:
	.loc	5 75 14 is_stmt 1
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	32(%rsp), %rdx
	movq	%rcx, %r15
	callq	strings.HasPrefix
.Ltmp2618:
	.loc	5 75 3 is_stmt 0
	testb	$1, %al
	jne	.LBB61_6
.Ltmp2619:
	.loc	5 74 2 is_stmt 1
	addq	$1, %r14
	addq	$16, %rbp
	cmpq	%r13, %r14
	movq	%r15, %rcx
	jl	.LBB61_5
.Ltmp2620:
.LBB61_8:
	.loc	5 79 2
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB61_9
.LBB61_6:
.Ltmp2621:
	.loc	5 76 13
	testq	%r15, %r15
	js	.LBB61_10
.Ltmp2622:
	movq	$-1, %rcx
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	__go_string_slice
.Ltmp2623:
.LBB61_9:
	.loc	5 0 13 is_stmt 0
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB61_10:
	.cfi_def_cfa_offset 128
.Ltmp2624:
	.loc	5 76 13
	movl	$5, %edi
	callq	__go_runtime_error
.Ltmp2625:
.Lfunc_end61:
	.size	command_line_arguments.FindEnv, .Lfunc_end61-command_line_arguments.FindEnv
	.cfi_endproc

	.section	.text.command_line_arguments.OutputCmd,"ax",@progbits
	.globl	command_line_arguments.OutputCmd
	.p2align	4, 0x90
	.type	command_line_arguments.OutputCmd,@function
command_line_arguments.OutputCmd:
.Lfunc_begin62:
	.loc	6 25 0 is_stmt 1
	.cfi_startproc
	leaq	-808(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB62_2
	movq	%r10, %rax
	movabsq	$808, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB62_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$760, %rsp
	.cfi_def_cfa_offset 816
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp2626:
	movq	%r8, %r14
	movq	%rcx, %rbx
	movq	%rdx, 72(%rsp)
	movq	%rsi, %r15
.Ltmp2627:
	movq	%rdi, %r13
.Ltmp2628:
	.loc	6 26 6 prologue_end
	movq	%rsi, %rdi
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 26 2 is_stmt 0
	testb	$1, %al
	je	.LBB62_10
.Ltmp2629:
	.loc	6 28 9 is_stmt 1
	testq	%r14, %r14
	je	.LBB62_50
.Ltmp2630:
	.loc	6 28 14 is_stmt 0
	movq	64(%r14), %rdi
	movq	72(%r14), %rsi
	xorl	%r12d, %r12d
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	movl	$0, %ebp
	cmpb	$1, %al
	je	.LBB62_6
.Ltmp2631:
	.loc	6 0 14
	leaq	64(%r14), %rax
	.loc	6 29 4 is_stmt 1
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 592(%rsp)
	movups	.Lconst.438(%rip), %xmm0
	movaps	%xmm0, 608(%rsp)
	movups	(%rax), %xmm0
	movaps	%xmm0, 624(%rsp)
	movups	.Lconst.440(%rip), %xmm0
	movaps	%xmm0, 640(%rsp)
	movaps	592(%rsp), %xmm0
	movaps	608(%rsp), %xmm1
	movaps	624(%rsp), %xmm2
	movaps	640(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring4
	movq	%rax, %r12
.Ltmp2632:
	movq	%rdx, %rbp
.Ltmp2633:
.LBB62_6:
	.loc	6 31 19
	cmpq	$0, 48(%r14)
	movq	%rbx, 184(%rsp)
	jle	.LBB62_8
.Ltmp2634:
	.loc	6 32 19
	movq	56(%r14), %rax
	movq	%rax, 16(%rsp)
	movups	40(%r14), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.439, %edi
	movl	$1, %esi
	callq	strings.Join
	.loc	6 32 4 is_stmt 0
	movq	%r12, 448(%rsp)
	movq	%rbp, 456(%rsp)
	movq	%rax, 464(%rsp)
	movq	%rdx, 472(%rsp)
	movups	.Lconst.440(%rip), %xmm0
	movups	%xmm0, 480(%rsp)
	movups	448(%rsp), %xmm0
	movups	464(%rsp), %xmm1
	movups	480(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	movq	%rax, %r12
.Ltmp2635:
	movq	%rdx, %rbp
.Ltmp2636:
.LBB62_8:
	.loc	6 34 18 is_stmt 1
	movq	32(%r14), %rax
	movq	%rax, 16(%rsp)
	movups	16(%r14), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.439, %edi
	movl	$1, %esi
	callq	strings.Join
	.loc	6 34 3 is_stmt 0
	movq	%r12, 336(%rsp)
	movq	%rbp, 344(%rsp)
	movq	%rax, 352(%rsp)
	movq	%rdx, 360(%rsp)
	movups	336(%rsp), %xmm0
	movups	352(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, %rbp
.Ltmp2637:
	movq	%rdx, %r12
.Ltmp2638:
	.loc	6 35 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%rbp, 320(%rsp)
	movq	%r12, 328(%rsp)
	leaq	320(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 304(%rsp)
	movq	%rbx, 312(%rsp)
	.loc	6 35 4 is_stmt 0
	testq	%r15, %r15
	je	.LBB62_50
.Ltmp2639:
	movq	(%r15), %rdi
	leaq	304(%rsp), %rax
	.loc	6 35 11
	movq	%rax, 240(%rsp)
	movq	$1, 248(%rsp)
	movq	$1, 256(%rsp)
	movq	256(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	240(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	log.Logger.Println
	movq	184(%rsp), %rbx
.Ltmp2640:
.LBB62_10:
	.loc	6 38 12 is_stmt 1
	movl	$bytes.Buffer..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp2641:
	.loc	6 39 12
	movl	$bytes.Buffer..d, %edi
	callq	runtime.newobject
	.loc	6 40 5
	testq	%r14, %r14
	je	.LBB62_50
.Ltmp2642:
	.loc	6 0 5 is_stmt 0
	movq	%rax, %rbp
.Ltmp2643:
	.loc	6 40 5
	leaq	96(%r14), %rsi
	.loc	6 40 13
	movq	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer, 168(%rsp)
	movq	%r12, 176(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB62_12
.Ltmp2644:
	.loc	6 0 13
	leaq	168(%rsp), %rdx
	.loc	6 40 13
	movl	$io.Writer..d, %edi
	callq	runtime.typedmemmove
	.loc	6 41 5 is_stmt 1
	leaq	112(%r14), %rsi
	.loc	6 41 13 is_stmt 0
	movq	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer, 112(%rsp)
	movq	%rbp, 120(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB62_13
.Ltmp2645:
	.loc	6 0 13
	leaq	112(%rsp), %rdx
	.loc	6 41 13
	movl	$io.Writer..d, %edi
	callq	runtime.typedmemmove
	.loc	6 43 6 is_stmt 1
	testq	%r15, %r15
	jne	.LBB62_17
	jmp	.LBB62_50
.Ltmp2646:
.LBB62_12:
	.loc	6 40 13
	movq	168(%rsp), %rax
	movq	%rax, (%rsi)
	movq	176(%rsp), %rax
	movq	%rax, 8(%rsi)
	.loc	6 41 5
	leaq	112(%r14), %rsi
	.loc	6 41 13 is_stmt 0
	movq	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer, 112(%rsp)
	movq	%rbp, 120(%rsp)
.Ltmp2647:
.LBB62_13:
	.loc	6 0 13
	leaq	112(%rsp), %rax
	.loc	6 41 13
	movups	(%rax), %xmm0
	movups	%xmm0, (%rsi)
	.loc	6 43 6 is_stmt 1
	testq	%r15, %r15
	je	.LBB62_50
.Ltmp2648:
.LBB62_17:
	.loc	6 43 17 is_stmt 0
	testb	$1, 13(%r15)
	je	.LBB62_19
.Ltmp2649:
	.loc	6 43 27
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	72(%rsp), %rdi
	movq	%rbx, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB62_19
.Ltmp2650:
	.loc	6 0 27
	movups	40(%r14), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	56(%r14), %rax
	movq	%rax, 96(%rsp)
	movq	%rbx, %rax
	.loc	6 48 14 is_stmt 1
	movq	88(%rsp), %rbx
	.loc	6 48 30 is_stmt 0
	movups	.Lconst.446(%rip), %xmm0
	movaps	%xmm0, 496(%rsp)
	movq	72(%rsp), %rcx
	movq	%rcx, 512(%rsp)
	movq	%rax, 520(%rsp)
	movaps	496(%rsp), %xmm0
	movaps	512(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rax, 192(%rsp)
	movq	%rdx, 200(%rsp)
	.loc	6 48 14
	leaq	1(%rbx), %rdx
	movq	96(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB62_29
.Ltmp2651:
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	424(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	424(%rsp), %rsi
	movq	432(%rsp), %rdx
	movq	440(%rsp), %rax
	jmp	.LBB62_26
.Ltmp2652:
.LBB62_29:
	cmpq	%rax, %rdx
	jg	.LBB62_51
.Ltmp2653:
	.loc	6 0 14
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB62_51
.Ltmp2654:
	.loc	6 48 14
	movq	80(%rsp), %rsi
.Ltmp2655:
.LBB62_26:
	movq	%rsi, 80(%rsp)
	movq	%rdx, 88(%rsp)
	movq	%rax, 96(%rsp)
	testq	%rbx, %rbx
	js	.LBB62_28
.Ltmp2656:
	.loc	6 0 14
	cmpq	%rdx, %rbx
	jge	.LBB62_28
.Ltmp2657:
	.loc	6 48 14
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB62_33
.Ltmp2658:
	.loc	6 0 14
	leaq	192(%rsp), %rdx
	.loc	6 48 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB62_36
.Ltmp2659:
.LBB62_33:
	testq	%rsi, %rsi
	je	.LBB62_50
.Ltmp2660:
	movups	192(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2661:
.LBB62_36:
	.loc	6 0 14
	leaq	40(%r14), %rsi
	movq	96(%rsp), %rax
	movq	%rax, 224(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 208(%rsp)
	.loc	6 48 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB62_38
.Ltmp2662:
	.loc	6 0 12
	leaq	208(%rsp), %rdx
	.loc	6 48 12
	movl	$type...6.7string, %edi
	callq	runtime.typedmemmove
	jmp	.LBB62_19
.Ltmp2663:
.LBB62_38:
	movq	224(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	208(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2664:
.LBB62_19:
	.loc	6 0 12
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 144(%rsp)
	movq	$0, 160(%rsp)
.Ltmp2665:
	.loc	5 43 9 is_stmt 1
	cmpb	$0, 10(%r15)
	je	.LBB62_20
.Ltmp2666:
	.loc	5 0 9 is_stmt 0
	leaq	816(%rsp), %rax
	.loc	6 60 10 is_stmt 1
	movq	16(%rax), %rcx
	movq	%rcx, 160(%rsp)
	movups	(%rax), %xmm0
	movaps	%xmm0, 144(%rsp)
	.loc	6 63 2
	testb	$1, 12(%r15)
	jne	.LBB62_43
.Ltmp2667:
.LBB62_52:
	.loc	6 73 2
	movq	160(%rsp), %rax
	movq	%rax, 16(%r13)
	movaps	144(%rsp), %xmm0
	movups	%xmm0, (%r13)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%r13)
	jmp	.LBB62_46
.Ltmp2668:
.LBB62_20:
	.loc	6 0 2 is_stmt 0
	movq	%rbp, 72(%rsp)
.Ltmp2669:
	leaq	736(%rsp), %rdi
	.loc	6 54 38 is_stmt 1
	callq	os.Environ
	movq	752(%rsp), %rax
	movq	%rax, 384(%rsp)
	movups	736(%rsp), %xmm0
	movaps	%xmm0, 368(%rsp)
	.loc	6 54 29 is_stmt 0
	leaq	40(%r14), %rbp
	.loc	6 54 13
	movq	384(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	368(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	56(%r14), %rax
	movq	%rax, 16(%rsp)
	movups	40(%r14), %xmm0
	movups	%xmm0, (%rsp)
	leaq	400(%rsp), %rdi
	callq	command_line_arguments.MergeEnviron
	.loc	6 54 11
	cmpl	$0, runtime.writeBarrier(%rip)
	movq	%r13, 136(%rsp)
	movq	%r12, 128(%rsp)
.Ltmp2670:
	.loc	6 0 11
	je	.LBB62_39
.Ltmp2671:
	leaq	400(%rsp), %rdx
	.loc	6 54 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB62_22
.Ltmp2672:
.LBB62_39:
	movq	416(%rsp), %rax
	movq	%rax, 16(%rbp)
	movups	400(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2673:
.LBB62_22:
	.loc	6 55 16 is_stmt 1
	movq	%r14, %rdi
	callq	os_exec.Cmd.Run
	.loc	6 55 28 is_stmt 0
	testq	%rax, %rax
	je	.LBB62_23
.Ltmp2674:
	.loc	6 0 28
	movq	%rax, %r13
.Ltmp2675:
	movq	%rdx, %r12
.Ltmp2676:
	.loc	6 56 60 is_stmt 1
	movq	32(%r14), %rax
	movq	%rax, 16(%rsp)
	movups	16(%r14), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.439, %edi
	movl	$1, %esi
	callq	strings.Join
	movq	%rax, %r14
.Ltmp2677:
	movq	%rdx, %rbp
	.loc	6 56 20 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 288(%rsp)
	movq	%rbp, 296(%rsp)
	leaq	288(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	6 56 81
	movq	(%r13), %rax
	.loc	6 56 20
	movq	$string..d, 528(%rsp)
	movq	%rbx, 536(%rsp)
	movq	%rax, 544(%rsp)
	movq	%r12, 552(%rsp)
	movq	$type...1bytes.Buffer, 560(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 568(%rsp)
	movq	$type...1bytes.Buffer, 576(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 584(%rsp)
	leaq	528(%rsp), %rax
	movq	%rax, 264(%rsp)
	movq	$4, 272(%rsp)
	movq	$4, 280(%rsp)
	movq	280(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	264(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.447, %edi
	movl	$19, %esi
	callq	fmt.Errorf
.Ltmp2678:
	.loc	6 56 4
	xorps	%xmm0, %xmm0
	movq	136(%rsp), %rcx
	movups	%xmm0, (%rcx)
	movq	$0, 16(%rcx)
	movq	%rax, 24(%rcx)
	movq	%rdx, 32(%rcx)
	movq	%rcx, %rax
.Ltmp2679:
	.loc	6 0 4
	jmp	.LBB62_47
.Ltmp2680:
.LBB62_23:
	leaq	712(%rsp), %rdi
	movq	128(%rsp), %r12
	.loc	6 58 18 is_stmt 1
	movq	%r12, %rsi
	callq	bytes.Buffer.Bytes
	movq	728(%rsp), %rax
	movq	%rax, 160(%rsp)
	movups	712(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movq	136(%rsp), %r13
	.loc	6 63 2
	testb	$1, 12(%r15)
	je	.LBB62_52
.Ltmp2681:
.LBB62_43:
	.loc	6 66 34
	movq	os.Stderr(%rip), %rcx
	leaq	688(%rsp), %rdi
.Ltmp2682:
	.loc	6 66 22 is_stmt 0
	movl	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %edx
	movq	%r12, %rsi
	callq	bytes.Buffer.WriteTo
	movq	696(%rsp), %rax
.Ltmp2683:
	.loc	6 66 47
	testq	%rax, %rax
	je	.LBB62_48
.Ltmp2684:
	.loc	6 66 22
	movq	704(%rsp), %rcx
	jmp	.LBB62_45
.Ltmp2685:
.LBB62_48:
	.loc	6 69 34 is_stmt 1
	movq	os.Stdout(%rip), %rcx
	leaq	664(%rsp), %rdi
.Ltmp2686:
	.loc	6 69 22 is_stmt 0
	movl	$pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File, %edx
	movq	%r12, %rsi
	callq	bytes.Buffer.WriteTo
.Ltmp2687:
	movq	672(%rsp), %rax
.Ltmp2688:
	.loc	6 69 47
	testq	%rax, %rax
	je	.LBB62_52
.Ltmp2689:
	.loc	6 69 22
	movq	680(%rsp), %rcx
.Ltmp2690:
.LBB62_45:
	.loc	6 0 22
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r13)
	movq	$0, 16(%r13)
	movq	%rax, 24(%r13)
	movq	%rcx, 32(%r13)
.Ltmp2691:
.LBB62_46:
	movq	%r13, %rax
.Ltmp2692:
.LBB62_47:
	addq	$760, %rsp
.Ltmp2693:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp2694:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB62_50:
	.cfi_def_cfa_offset 816
.Ltmp2695:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2696:
.LBB62_28:
	.loc	6 48 14 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp2697:
.LBB62_51:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp2698:
.Lfunc_end62:
	.size	command_line_arguments.OutputCmd, .Lfunc_end62-command_line_arguments.OutputCmd
	.cfi_endproc

	.section	.text.command_line_arguments.MergeEnviron,"ax",@progbits
	.globl	command_line_arguments.MergeEnviron
	.p2align	4, 0x90
	.type	command_line_arguments.MergeEnviron,@function
command_line_arguments.MergeEnviron:
.Lfunc_begin63:
	.loc	6 78 0
	.cfi_startproc
	leaq	-696(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB63_2
	movq	%r10, %rax
	movabsq	$696, %r10
	movabsq	$48, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB63_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$648, %rsp
	.cfi_def_cfa_offset 704
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
.Ltmp2699:
	.loc	6 79 31 prologue_end
	movq	736(%rsp), %rbx
	.loc	6 79 40 is_stmt 0
	movq	712(%rsp), %rax
	movq	%rax, 152(%rsp)
	.loc	6 79 35
	leaq	(%rax,%rbx), %rcx
	leaq	472(%rsp), %rdi
	.loc	6 79 9
	movl	$string..d, %esi
	xorl	%edx, %edx
	callq	runtime.makeslice
	movq	488(%rsp), %rax
	movq	%rax, 112(%rsp)
	movups	472(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
.Ltmp2700:
	.loc	6 82 10 is_stmt 1
	movl	$type..map.6string.7string, %edi
	xorl	%edx, %edx
	movq	%rbx, %rsi
	callq	runtime.makemap
	movq	%rax, 120(%rsp)
.Ltmp2701:
	.loc	6 0 10 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp2702:
	.loc	6 83 2 is_stmt 1
	testq	%rbx, %rbx
	jle	.LBB63_23
.Ltmp2703:
	.loc	6 0 2 is_stmt 0
	movq	728(%rsp), %r14
	xorl	%r13d, %r13d
	leaq	448(%rsp), %r12
	jmp	.LBB63_4
.Ltmp2704:
	.p2align	4, 0x90
.LBB63_11:
	.loc	6 91 11 is_stmt 1
	movl	$.Lconst.449, %edi
.Ltmp2705:
	movl	$5, %esi
	movl	$.Lconst.172, %edx
	movl	$7, %ecx
	callq	runtime.eqstring
.Ltmp2706:
	cmpb	$1, %al
	jne	.LBB63_29
.Ltmp2707:
	.loc	6 92 22
	movq	(%rbp), %rdi
	movq	8(%rbp), %rsi
	callq	strings.ToUpper
	movq	%rax, 200(%rsp)
	movq	%rdx, 208(%rsp)
	.loc	6 92 12 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB63_28
.Ltmp2708:
	movl	$string..d, %edi
	movq	%rbp, %rsi
	leaq	200(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB63_29
.Ltmp2709:
.LBB63_28:
	movups	200(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp2710:
	.p2align	4, 0x90
.LBB63_29:
	.loc	6 0 12
	movups	(%rbp), %xmm0
	movaps	%xmm0, 400(%rsp)
	movups	16(%rbp), %xmm0
	movaps	%xmm0, 256(%rsp)
	.loc	6 94 17 is_stmt 1
	movl	$type..map.6string.7string, %edi
	movq	120(%rsp), %rsi
	leaq	400(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB63_30
.Ltmp2711:
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	256(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB63_22
.Ltmp2712:
.LBB63_30:
	testq	%rax, %rax
	je	.LBB63_19
.Ltmp2713:
	movaps	256(%rsp), %xmm0
	movups	%xmm0, (%rax)
	jmp	.LBB63_22
.Ltmp2714:
	.p2align	4, 0x90
.LBB63_4:
	.loc	6 83 2
	movups	(%r14), %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp2715:
	.loc	6 84 19
	movq	48(%rsp), %rsi
	movq	56(%rsp), %rdx
.Ltmp2716:
	movl	$.Lconst.455, %ecx
	movl	$1, %r8d
	movl	$2, %r9d
	movq	%r12, %rdi
	callq	strings.SplitN
.Ltmp2717:
	.loc	6 85 16
	cmpq	$2, 456(%rsp)
	jne	.LBB63_6
.Ltmp2718:
	.loc	6 0 16 is_stmt 0
	movq	448(%rsp), %rbp
.Ltmp2719:
	.loc	6 85 32
	movq	(%rbp), %rdi
	movq	8(%rbp), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB63_11
.Ltmp2720:
.LBB63_6:
	.loc	6 0 32
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	112(%rsp), %rax
	movq	%rax, 144(%rsp)
	.loc	6 88 10 is_stmt 1
	movq	136(%rsp), %rbp
	leaq	1(%rbp), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB63_14
.Ltmp2721:
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	344(%rsp), %rdi
	callq	runtime.growslice
	movq	344(%rsp), %rsi
	movq	352(%rsp), %rdx
	movq	360(%rsp), %rax
	jmp	.LBB63_8
.Ltmp2722:
	.p2align	4, 0x90
.LBB63_14:
	cmpq	%rax, %rdx
	jg	.LBB63_56
.Ltmp2723:
	.loc	6 0 10 is_stmt 0
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB63_56
.Ltmp2724:
	.loc	6 88 10
	movq	128(%rsp), %rsi
.Ltmp2725:
.LBB63_8:
	movq	%rsi, 128(%rsp)
	movq	%rdx, 136(%rsp)
	movq	%rax, 144(%rsp)
	testq	%rbp, %rbp
	js	.LBB63_10
.Ltmp2726:
	.loc	6 0 10
	cmpq	%rdx, %rbp
	jge	.LBB63_10
.Ltmp2727:
	.loc	6 88 10
	shlq	$4, %rbp
	addq	%rbp, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB63_18
.Ltmp2728:
	movl	$string..d, %edi
	leaq	48(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB63_21
.Ltmp2729:
	.p2align	4, 0x90
.LBB63_18:
	testq	%rsi, %rsi
	je	.LBB63_19
.Ltmp2730:
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2731:
.LBB63_21:
	.loc	6 88 8
	movq	144(%rsp), %rax
	movq	%rax, 112(%rsp)
	movaps	128(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
.Ltmp2732:
.LBB63_22:
	.loc	6 83 2 is_stmt 1
	addq	$1, %r13
	addq	$16, %r14
	cmpq	%rbx, %r13
	jl	.LBB63_4
.Ltmp2733:
.LBB63_23:
	.loc	6 0 2 is_stmt 0
	movq	%r15, 160(%rsp)
.Ltmp2734:
	.loc	6 96 2 is_stmt 1
	cmpq	$0, 152(%rsp)
	jle	.LBB63_41
.Ltmp2735:
	.loc	6 0 2 is_stmt 0
	leaq	704(%rsp), %rax
	movq	(%rax), %r15
	addq	$8, %r15
	xorl	%r13d, %r13d
	leaq	384(%rsp), %rbp
.Ltmp2736:
	.p2align	4, 0x90
.LBB63_25:
	.loc	6 96 2
	movq	-8(%r15), %r14
.Ltmp2737:
	movq	(%r15), %r12
.Ltmp2738:
	.loc	6 97 19 is_stmt 1
	movl	$.Lconst.455, %ecx
	movl	$1, %r8d
	movl	$2, %r9d
	leaq	424(%rsp), %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	strings.SplitN
.Ltmp2739:
	.loc	6 98 16
	cmpq	$2, 432(%rsp)
	jne	.LBB63_27
.Ltmp2740:
	.loc	6 0 16 is_stmt 0
	movq	424(%rsp), %rbx
.Ltmp2741:
	.loc	6 98 32
	movq	(%rbx), %rdi
	movq	8(%rbx), %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB63_27
.Ltmp2742:
	.loc	6 101 11 is_stmt 1
	movl	$.Lconst.449, %edi
	movl	$5, %esi
	movl	$.Lconst.172, %edx
	movl	$7, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB63_36
.Ltmp2743:
	.loc	6 102 22
	movq	(%rbx), %rdi
	movq	8(%rbx), %rsi
	callq	strings.ToUpper
	movq	%rax, 184(%rsp)
	movq	%rdx, 192(%rsp)
	.loc	6 102 12 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB63_35
.Ltmp2744:
	movl	$string..d, %edi
	movq	%rbx, %rsi
	leaq	184(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB63_36
.Ltmp2745:
.LBB63_35:
	movups	184(%rsp), %xmm0
	movups	%xmm0, (%rbx)
.Ltmp2746:
	.p2align	4, 0x90
.LBB63_36:
	.loc	6 0 12
	movups	(%rbx), %xmm0
	movaps	%xmm0, 384(%rsp)
	movups	16(%rbx), %xmm0
	movaps	%xmm0, 240(%rsp)
	.loc	6 104 17 is_stmt 1
	movl	$type..map.6string.7string, %edi
	movq	120(%rsp), %rsi
	movq	%rbp, %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB63_37
.Ltmp2747:
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	240(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB63_40
.Ltmp2748:
	.p2align	4, 0x90
.LBB63_37:
	testq	%rax, %rax
	je	.LBB63_19
.Ltmp2749:
	movaps	240(%rsp), %xmm0
	movups	%xmm0, (%rax)
.Ltmp2750:
.LBB63_40:
	.loc	6 96 2
	addq	$1, %r13
	addq	$16, %r15
	cmpq	152(%rsp), %r13
	jl	.LBB63_25
.Ltmp2751:
.LBB63_41:
	.loc	6 0 2 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 368(%rsp)
	movaps	%xmm0, 576(%rsp)
	movaps	%xmm0, 560(%rsp)
	movaps	%xmm0, 544(%rsp)
	movaps	%xmm0, 528(%rsp)
	movaps	%xmm0, 512(%rsp)
	movaps	%xmm0, 496(%rsp)
	leaq	496(%rsp), %rdx
.Ltmp2752:
	.loc	6 106 2 is_stmt 1
	movl	$type..map.6string.7string, %edi
	movq	120(%rsp), %rsi
	callq	runtime.mapiterinit
	movq	496(%rsp), %rax
	testq	%rax, %rax
	je	.LBB63_55
.Ltmp2753:
	.loc	6 0 2 is_stmt 0
	leaq	608(%rsp), %rbx
	leaq	320(%rsp), %r14
	leaq	496(%rsp), %r12
	leaq	168(%rsp), %r15
.Ltmp2754:
	.p2align	4, 0x90
.LBB63_54:
	.loc	6 106 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 368(%rsp)
	movq	504(%rsp), %rax
	movups	(%rax), %xmm1
	movaps	%xmm1, 48(%rsp)
	movaps	96(%rsp), %xmm1
	movaps	%xmm1, 64(%rsp)
	movq	112(%rsp), %rax
	movq	%rax, 80(%rsp)
	.loc	6 107 9 is_stmt 1
	movq	72(%rsp), %rbp
	.loc	6 107 21 is_stmt 0
	movaps	%xmm0, 592(%rsp)
	movups	.Lconst.456(%rip), %xmm0
	movups	%xmm0, (%rbx)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, 16(%rbx)
	movaps	592(%rsp), %xmm0
	movaps	608(%rsp), %xmm1
	movaps	624(%rsp), %xmm2
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring3
	movq	%rax, 168(%rsp)
	movq	%rdx, 176(%rsp)
	.loc	6 107 9
	leaq	1(%rbp), %rdx
	movq	80(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB63_49
.Ltmp2755:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	movq	%r14, %rdi
	callq	runtime.growslice
	movq	320(%rsp), %rsi
	movq	328(%rsp), %rdx
	movq	336(%rsp), %rax
	jmp	.LBB63_44
.Ltmp2756:
	.p2align	4, 0x90
.LBB63_49:
	cmpq	%rax, %rdx
	jg	.LBB63_56
.Ltmp2757:
	.loc	6 0 9
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB63_56
.Ltmp2758:
	.loc	6 107 9
	movq	64(%rsp), %rsi
.Ltmp2759:
.LBB63_44:
	movq	%rsi, 64(%rsp)
	movq	%rdx, 72(%rsp)
	movq	%rax, 80(%rsp)
	testq	%rbp, %rbp
	js	.LBB63_10
.Ltmp2760:
	.loc	6 0 9
	cmpq	%rdx, %rbp
	jge	.LBB63_10
.Ltmp2761:
	.loc	6 107 9
	shlq	$4, %rbp
	addq	%rbp, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB63_47
.Ltmp2762:
	movl	$string..d, %edi
	movq	%r15, %rdx
	callq	runtime.typedmemmove
	jmp	.LBB63_53
.Ltmp2763:
	.p2align	4, 0x90
.LBB63_47:
	testq	%rsi, %rsi
	je	.LBB63_19
.Ltmp2764:
	movups	168(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp2765:
.LBB63_53:
	.loc	6 107 7
	movq	80(%rsp), %rax
	movq	%rax, 112(%rsp)
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	.loc	6 106 2 is_stmt 1
	movq	%r12, %rdi
	callq	runtime.mapiternext
	movq	496(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB63_54
.Ltmp2766:
.LBB63_55:
	.loc	6 109 2
	movq	112(%rsp), %rcx
	movq	160(%rsp), %rax
	movq	%rcx, 16(%rax)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%rax)
	addq	$648, %rsp
.Ltmp2767:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB63_10:
	.cfi_def_cfa_offset 704
.Ltmp2768:
	.loc	6 0 2 is_stmt 0
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp2769:
.LBB63_27:
	.loc	6 99 14 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 304(%rsp)
	movq	%r12, 312(%rsp)
	leaq	304(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 288(%rsp)
	movq	%rbx, 296(%rsp)
	leaq	288(%rsp), %rax
	movq	%rax, 216(%rsp)
	movq	$1, 224(%rsp)
	movq	$1, 232(%rsp)
	movq	232(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	216(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.457, %edi
	movl	$31, %esi
	callq	fmt.Sprintf
	movq	%rax, %r14
	movq	%rdx, %rbp
	.loc	6 99 4 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 272(%rsp)
	movq	%rbp, 280(%rsp)
	leaq	272(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp2770:
.LBB63_56:
	.loc	6 0 4
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp2771:
.LBB63_19:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end63:
	.size	command_line_arguments.MergeEnviron, .Lfunc_end63-command_line_arguments.MergeEnviron
	.cfi_endproc

	.section	.text.command_line_arguments.RemoveAll,"ax",@progbits
	.globl	command_line_arguments.RemoveAll
	.p2align	4, 0x90
	.type	command_line_arguments.RemoveAll,@function
command_line_arguments.RemoveAll:
.Lfunc_begin64:
	.loc	6 150 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB64_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB64_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$88, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp2772:
	.loc	6 151 6 prologue_end
	callq	command_line_arguments.Flags.ShouldPrint
	.loc	6 151 2 is_stmt 0
	testb	$1, %al
	je	.LBB64_5
.Ltmp2773:
	.loc	6 152 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	movq	%r15, 72(%rsp)
	movq	%r14, 80(%rsp)
	leaq	72(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 56(%rsp)
	movq	%r12, 64(%rsp)
	.loc	6 152 4 is_stmt 0
	testq	%rbx, %rbx
	je	.LBB64_9
.Ltmp2774:
	movq	(%rbx), %rdi
	leaq	56(%rsp), %rax
	.loc	6 152 11
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.473, %esi
	movl	$12, %edx
	callq	log.Logger.Printf
.Ltmp2775:
.LBB64_5:
	.loc	6 154 6 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.Flags.ShouldRun
	.loc	6 154 2 is_stmt 0
	testb	$1, %al
	jne	.LBB64_6
.Ltmp2776:
	.loc	6 157 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB64_8
.Ltmp2777:
.LBB64_6:
	.loc	6 155 13
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	os.RemoveAll
.Ltmp2778:
.LBB64_8:
	.loc	6 0 13 is_stmt 0
	addq	$88, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp2779:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2780:
	.cfi_def_cfa_offset 8
	retq
.LBB64_9:
	.cfi_def_cfa_offset 128
.Ltmp2781:
	.loc	6 152 4 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2782:
.Lfunc_end64:
	.size	command_line_arguments.RemoveAll, .Lfunc_end64-command_line_arguments.RemoveAll
	.cfi_endproc

	.section	.text.command_line_arguments.WriteFile..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.WriteFile..func1,@function
command_line_arguments.WriteFile..func1:
.Lfunc_begin65:
	.loc	6 167 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB65_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB65_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp2783:
	.loc	6 168 3 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rax
	.loc	6 168 4 is_stmt 0
	testq	%rax, %rax
	je	.LBB65_4
	.loc	6 168 20
	movq	16(%r10), %rcx
	movb	(%rcx), %cl
	.loc	6 168 18
	movb	%cl, 9(%rax)
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB65_4:
	.cfi_def_cfa_offset 16
	.loc	6 168 4
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2784:
.Lfunc_end65:
	.size	command_line_arguments.WriteFile..func1, .Lfunc_end65-command_line_arguments.WriteFile..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk5,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk5,@function
command_line_arguments.command_line_arguments..thunk5:
.Lfunc_begin66:
	.loc	6 167 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB66_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB66_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp2785:
	.loc	6 167 2 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp2786:
	.loc	6 0 2 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp2787:
.Lfunc_end66:
	.size	command_line_arguments.command_line_arguments..thunk5, .Lfunc_end66-command_line_arguments.command_line_arguments..thunk5
	.cfi_endproc

	.section	.text.command_line_arguments.WriteFile..func2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.WriteFile..func2,@function
command_line_arguments.WriteFile..func2:
.Lfunc_begin67:
	.loc	6 180 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB67_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB67_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%r10, %rbx
.Ltmp2788:
	.loc	6 181 15 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rdi
	.loc	6 181 19 is_stmt 0
	callq	os.File.Close
	movq	%rax, (%rsp)
	movq	%rdx, 8(%rsp)
	.loc	6 181 29
	movq	16(%rbx), %rsi
	.loc	6 181 33
	cmpq	$0, (%rsi)
	jne	.LBB67_7
	.loc	6 182 9 is_stmt 1
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB67_4
	.loc	6 0 9 is_stmt 0
	movq	%rsp, %rdx
	.loc	6 182 9
	movl	$error..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB67_7
.LBB67_4:
	testq	%rsi, %rsi
	je	.LBB67_5
	movups	(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.LBB67_7:
	.loc	6 0 9
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB67_5:
	.cfi_def_cfa_offset 32
	.loc	6 182 9
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2789:
.Lfunc_end67:
	.size	command_line_arguments.WriteFile..func2, .Lfunc_end67-command_line_arguments.WriteFile..func2
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk6,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk6,@function
command_line_arguments.command_line_arguments..thunk6:
.Lfunc_begin68:
	.loc	6 180 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB68_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB68_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp2790:
	.loc	6 180 3 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp2791:
	.loc	6 0 3 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp2792:
.Lfunc_end68:
	.size	command_line_arguments.command_line_arguments..thunk6, .Lfunc_end68-command_line_arguments.command_line_arguments..thunk6
	.cfi_endproc

	.section	.text.command_line_arguments.CopyFile..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.CopyFile..func1,@function
command_line_arguments.CopyFile..func1:
.Lfunc_begin69:
	.loc	6 210 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB69_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB69_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp2793:
	.loc	6 211 3 prologue_end
	movq	8(%r10), %rax
	movq	(%rax), %rax
	.loc	6 211 4 is_stmt 0
	testq	%rax, %rax
	je	.LBB69_4
	.loc	6 211 20
	movq	16(%r10), %rcx
	movb	(%rcx), %cl
	.loc	6 211 18
	movb	%cl, 9(%rax)
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB69_4:
	.cfi_def_cfa_offset 16
	.loc	6 211 4
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2794:
.Lfunc_end69:
	.size	command_line_arguments.CopyFile..func1, .Lfunc_end69-command_line_arguments.CopyFile..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk7,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk7,@function
command_line_arguments.command_line_arguments..thunk7:
.Lfunc_begin70:
	.loc	6 210 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB70_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB70_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp2795:
	.loc	6 210 2 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp2796:
	.loc	6 0 2 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp2797:
.Lfunc_end70:
	.size	command_line_arguments.command_line_arguments..thunk7, .Lfunc_end70-command_line_arguments.command_line_arguments..thunk7
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk8,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk8,@function
command_line_arguments.command_line_arguments..thunk8:
.Lfunc_begin71:
	.loc	6 219 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB71_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB71_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp2798:
	.loc	6 219 3 prologue_end
	movl	$.Ltmp2799, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB71_4
.Ltmp2800:
	movq	(%rbx), %rdi
	callq	os.File.Close
.Ltmp2801:
.Ltmp2799:
.LBB71_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp2802:
	.cfi_def_cfa_offset 8
	retq
.Ltmp2803:
.Lfunc_end71:
	.size	command_line_arguments.command_line_arguments..thunk8, .Lfunc_end71-command_line_arguments.command_line_arguments..thunk8
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk9,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk9,@function
command_line_arguments.command_line_arguments..thunk9:
.Lfunc_begin72:
	.loc	6 274 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB72_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB72_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp2804:
	.loc	6 274 3 prologue_end
	movl	$.Ltmp2805, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB72_4
.Ltmp2806:
	movq	(%rbx), %rdi
	callq	os.File.Close
.Ltmp2807:
.Ltmp2805:
.LBB72_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp2808:
	.cfi_def_cfa_offset 8
	retq
.Ltmp2809:
.Lfunc_end72:
	.size	command_line_arguments.command_line_arguments..thunk9, .Lfunc_end72-command_line_arguments.command_line_arguments..thunk9
	.cfi_endproc

	.section	.text.command_line_arguments.Init,"ax",@progbits
	.globl	command_line_arguments.Init
	.p2align	4, 0x90
	.type	command_line_arguments.Init,@function
command_line_arguments.Init:
.Lfunc_begin73:
	.file	8 "./init.go"
	.loc	8 14 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception6
	leaq	-1016(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB73_2
	movq	%r10, %rax
	movabsq	$1016, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB73_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$968, %rsp
	.cfi_def_cfa_offset 1024
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movb	$0, 79(%rsp)
.Ltmp2810:
.Ltmp2907:
	leaq	904(%rsp), %rdi
.Ltmp2908:
	.loc	8 15 16 prologue_end
	callq	time.Now
.Ltmp2811:
.Ltmp2909:
	.loc	8 0 16 is_stmt 0
	movq	920(%rsp), %rax
	movq	%rax, 256(%rsp)
	movups	904(%rsp), %xmm0
	movaps	%xmm0, 240(%rsp)
.Ltmp2812:
	.loc	8 18 9 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.validateGoInstall
.Ltmp2813:
.Ltmp2910:
	.loc	8 0 9 is_stmt 0
	movq	%rax, %r13
	.loc	8 19 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB73_8
.Ltmp2911:
.LBB73_5:
	.loc	8 0 9 is_stmt 0
	movq	%rdx, %rbp
	movb	$1, %r14b
.Ltmp2912:
	leaq	79(%rsp), %rbx
.Ltmp2913:
	jmp	.LBB73_96
.Ltmp2914:
.LBB73_8:
	.loc	8 24 27 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB73_10
.Ltmp2915:
.Ltmp2814:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp2815:
.Ltmp2916:
.LBB73_10:
	.loc	8 24 13 is_stmt 0
	movq	72(%rbx), %rdi
	movq	80(%rbx), %rsi
.Ltmp2816:
	callq	command_line_arguments.ParseTargets
.Ltmp2817:
.Ltmp2917:
	.loc	8 0 13
	movq	%rax, %r12
.Ltmp2818:
	leaq	320(%rsp), %rdi
	.loc	8 27 24 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.MatchaPkgPath
.Ltmp2819:
.Ltmp2918:
	movq	336(%rsp), %r13
.Ltmp2919:
	.loc	8 28 9
	testq	%r13, %r13
	je	.LBB73_16
.Ltmp2920:
	.loc	8 0 9 is_stmt 0
	movb	$1, %r14b
	.loc	8 27 24 is_stmt 1
	movq	344(%rsp), %rbp
.Ltmp2921:
.LBB73_14:
	.loc	8 0 24 is_stmt 0
	leaq	79(%rsp), %rbx
.Ltmp2922:
	jmp	.LBB73_96
.Ltmp2923:
.LBB73_16:
	movq	320(%rsp), %rsi
.Ltmp2924:
	movq	328(%rsp), %r15
.Ltmp2925:
.Ltmp2820:
	.loc	8 33 12 is_stmt 1
	movq	%rbx, %rdi
	movq	%rsi, 104(%rsp)
.Ltmp2926:
	movq	%r15, %rdx
	callq	command_line_arguments.RemoveAll
.Ltmp2821:
.Ltmp2927:
	.loc	8 0 12 is_stmt 0
	movq	%rax, %r13
.Ltmp2928:
	.loc	8 33 45
	testq	%rax, %rax
	jne	.LBB73_5
.Ltmp2929:
.Ltmp2822:
	.loc	8 38 12 is_stmt 1
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	callq	command_line_arguments.Mkdir
.Ltmp2823:
.Ltmp2930:
	.loc	8 0 12 is_stmt 0
	movq	%rax, %r13
	.loc	8 38 41
	testq	%rax, %rax
	jne	.LBB73_5
.Ltmp2931:
.Ltmp2824:
	.loc	8 0 41
	leaq	288(%rsp), %rdi
	.loc	8 43 17 is_stmt 1
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rbx, %rsi
	callq	command_line_arguments.NewTmpDir
.Ltmp2825:
.Ltmp2932:
	movq	304(%rsp), %r13
.Ltmp2933:
	.loc	8 44 9
	testq	%r13, %r13
	je	.LBB73_23
.Ltmp2934:
	.loc	8 0 9 is_stmt 0
	movb	$1, %r14b
	.loc	8 43 17 is_stmt 1
	movq	312(%rsp), %rbp
.Ltmp2935:
	.loc	8 0 17 is_stmt 0
	leaq	79(%rsp), %rbx
.Ltmp2936:
	jmp	.LBB73_96
.Ltmp2937:
.LBB73_23:
	movq	288(%rsp), %rax
.Ltmp2938:
	movq	296(%rsp), %rcx
.Ltmp2939:
	.loc	8 47 2 is_stmt 1
	movq	%rbx, 264(%rsp)
	movq	%rax, 120(%rsp)
.Ltmp2940:
	movq	%rax, 272(%rsp)
	movq	%rcx, 112(%rsp)
.Ltmp2941:
	movq	%rcx, 280(%rsp)
.Ltmp2826:
	leaq	79(%rsp), %rdi
	leaq	264(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk10, %esi
	callq	runtime.deferproc
.Ltmp2827:
.Ltmp2942:
	.loc	8 0 2 is_stmt 0
	movups	.Lconst.304(%rip), %xmm0
	movaps	%xmm0, 528(%rsp)
.Ltmp2828:
.Ltmp2943:
	leaq	528(%rsp), %rdx
.Ltmp2944:
	.loc	8 50 5 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2829:
.Ltmp2945:
	.loc	8 50 2 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_26
.Ltmp2946:
.LBB73_53:
	.loc	8 0 2
	movups	.Lconst.295(%rip), %xmm0
	movaps	%xmm0, 416(%rsp)
.Ltmp2856:
	leaq	416(%rsp), %rdx
.Ltmp2947:
	.loc	8 97 5 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2857:
.Ltmp2948:
	.loc	8 97 2 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_55
.Ltmp2949:
.LBB73_82:
.Ltmp2884:
	.loc	8 0 2
	leaq	928(%rsp), %rdi
	.loc	8 146 20 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.GoVersion
.Ltmp2885:
.Ltmp2950:
	.loc	8 0 20 is_stmt 0
	movups	928(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	944(%rsp), %rax
	movq	%rax, 96(%rsp)
	movb	$1, %r14b
	.loc	8 147 9 is_stmt 1
	cmpq	$0, 952(%rsp)
	je	.LBB73_85
.Ltmp2951:
.LBB73_84:
	.loc	8 0 9 is_stmt 0
	xorl	%r13d, %r13d
	xorl	%ebp, %ebp
.Ltmp2952:
	leaq	79(%rsp), %rbx
.Ltmp2953:
	jmp	.LBB73_96
.Ltmp2954:
.LBB73_26:
.Ltmp2830:
	.loc	8 52 13 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.validateXcodeInstall
.Ltmp2831:
.Ltmp2955:
	.loc	8 0 13 is_stmt 0
	movq	%rax, %r13
.Ltmp2956:
	.loc	8 52 42
	testq	%rax, %rax
	jne	.LBB73_5
.Ltmp2957:
	.loc	8 0 42
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	$0, 96(%rsp)
.Ltmp2958:
	movups	.Lconst.306(%rip), %xmm0
	movaps	%xmm0, 512(%rsp)
.Ltmp2832:
	leaq	512(%rsp), %rdx
.Ltmp2959:
	.loc	8 59 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2833:
.Ltmp2960:
	.loc	8 59 3 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_30
.Ltmp2961:
.LBB73_35:
	.loc	8 0 3
	movups	.Lconst.308(%rip), %xmm0
	movaps	%xmm0, 496(%rsp)
.Ltmp2838:
	leaq	496(%rsp), %rdx
.Ltmp2962:
	.loc	8 68 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2839:
.Ltmp2963:
	.loc	8 68 3 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_37
.Ltmp2964:
.LBB73_41:
	.loc	8 0 3
	movups	.Lconst.312(%rip), %xmm0
	movaps	%xmm0, 480(%rsp)
.Ltmp2844:
	leaq	480(%rsp), %rdx
.Ltmp2965:
	.loc	8 77 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2845:
.Ltmp2966:
	.loc	8 77 3 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_43
.Ltmp2967:
.LBB73_47:
	.loc	8 0 3
	movups	.Lconst.310(%rip), %xmm0
	movaps	%xmm0, 448(%rsp)
.Ltmp2850:
	leaq	448(%rsp), %rdx
.Ltmp2968:
	.loc	8 86 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2851:
.Ltmp2969:
	.loc	8 86 3 is_stmt 0
	testb	$1, %dl
	je	.LBB73_53
.Ltmp2970:
.Ltmp2852:
	.loc	8 0 3
	leaq	744(%rsp), %rdi
	.loc	8 87 18 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.DarwinAmd64Env
.Ltmp2853:
.Ltmp2971:
	movq	768(%rsp), %r13
.Ltmp2972:
	movq	776(%rsp), %rbp
.Ltmp2973:
	.loc	8 0 18 is_stmt 0
	movups	744(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	760(%rsp), %rax
	movq	%rax, 96(%rsp)
	movb	$1, %r14b
	.loc	8 87 41
	testq	%r13, %r13
	jne	.LBB73_14
.Ltmp2974:
	.loc	8 0 41
	movups	.Lconst.505(%rip), %xmm0
	movaps	%xmm0, 432(%rsp)
	leaq	432(%rsp), %rax
.Ltmp2975:
	.loc	8 90 14 is_stmt 1
	movq	%rax, 152(%rsp)
	movq	$1, 160(%rsp)
	movq	$1, 168(%rsp)
.Ltmp2854:
	movq	168(%rsp), %rax
	movq	%rax, 56(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2855:
.Ltmp2976:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
	.loc	8 90 81
	testq	%rax, %rax
	jne	.LBB73_34
	jmp	.LBB73_53
.Ltmp2977:
.LBB73_55:
.Ltmp2858:
	.loc	8 99 13 is_stmt 1
	movq	%rbx, %rdi
	callq	command_line_arguments.ValidateAndroidInstall
.Ltmp2859:
.Ltmp2978:
	.loc	8 0 13 is_stmt 0
	movq	%rax, %r13
	.loc	8 99 44
	testq	%rax, %rax
	jne	.LBB73_5
.Ltmp2979:
	.loc	8 0 44
	movups	.Lconst.297(%rip), %xmm0
	movaps	%xmm0, 400(%rsp)
.Ltmp2860:
	leaq	400(%rsp), %rdx
.Ltmp2980:
	.loc	8 104 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2861:
.Ltmp2981:
	.loc	8 104 3 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_59
.Ltmp2982:
.LBB73_64:
	.loc	8 0 3
	movups	.Lconst.299(%rip), %xmm0
	movaps	%xmm0, 384(%rsp)
.Ltmp2866:
	leaq	384(%rsp), %rdx
.Ltmp2983:
	.loc	8 114 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2867:
.Ltmp2984:
	.loc	8 114 3 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_66
.Ltmp2985:
.LBB73_70:
	.loc	8 0 3
	movups	.Lconst.301(%rip), %xmm0
	movaps	%xmm0, 368(%rsp)
.Ltmp2872:
	leaq	368(%rsp), %rdx
.Ltmp2986:
	.loc	8 124 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2873:
.Ltmp2987:
	.loc	8 124 3 is_stmt 0
	testb	$1, %dl
	jne	.LBB73_72
.Ltmp2988:
.LBB73_76:
	.loc	8 0 3
	movups	.Lconst.303(%rip), %xmm0
	movaps	%xmm0, 352(%rsp)
.Ltmp2878:
	leaq	352(%rsp), %rdx
.Ltmp2989:
	.loc	8 134 6 is_stmt 1
	movl	$type..map.6string.7struct.4.5, %edi
	movq	%r12, %rsi
	callq	runtime.mapaccess2
.Ltmp2879:
.Ltmp2990:
	.loc	8 134 3 is_stmt 0
	testb	$1, %dl
	je	.LBB73_82
.Ltmp2991:
.Ltmp2880:
	.loc	8 0 3
	leaq	584(%rsp), %rdi
.Ltmp2992:
	.loc	8 135 16 is_stmt 1
	movl	$.Lconst.103, %edx
	movl	$5, %ecx
	movq	%rbx, %rsi
	callq	command_line_arguments.AndroidEnv
.Ltmp2881:
.Ltmp2993:
	movq	608(%rsp), %r13
.Ltmp2994:
	movq	616(%rsp), %rbp
.Ltmp2995:
	.loc	8 0 16 is_stmt 0
	movups	584(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	600(%rsp), %rax
	movq	%rax, 96(%rsp)
	.loc	8 136 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB73_61
.Ltmp2996:
.Ltmp2882:
	.loc	8 139 14
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 56(%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2883:
.Ltmp2997:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
.Ltmp2998:
	.loc	8 139 68
	testq	%rax, %rax
	jne	.LBB73_5
	jmp	.LBB73_82
.Ltmp2999:
.LBB73_85:
	.loc	8 150 22 is_stmt 1
	movq	104(%rsp), %rax
	movq	%rax, 552(%rsp)
	movq	%r15, 560(%rsp)
	movups	.Lconst.318(%rip), %xmm0
	movups	%xmm0, 568(%rsp)
	leaq	552(%rsp), %rax
	movq	%rax, 176(%rsp)
	movq	$2, 184(%rsp)
	movq	$2, 192(%rsp)
.Ltmp2886:
	movq	192(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	176(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp2887:
.Ltmp3000:
	.loc	8 0 22 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %rbp
.Ltmp2888:
.Ltmp3001:
	.loc	8 151 40 is_stmt 1
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	bytes.NewReader
.Ltmp2889:
.Ltmp3002:
.Ltmp2890:
	.loc	8 151 12 is_stmt 0
	movl	$pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader, %ecx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%rbp, %rdx
	movq	%rax, %r8
	callq	command_line_arguments.WriteFile
.Ltmp2891:
.Ltmp3003:
	.loc	8 0 12
	movq	%rax, %r13
	.loc	8 151 67
	testq	%rax, %rax
	jne	.LBB73_34
.Ltmp3004:
	.loc	8 0 67
	testb	$1, 12(%rbx)
	je	.LBB73_93
.Ltmp3005:
.Ltmp2892:
	.loc	8 157 16 is_stmt 1
	movq	256(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	240(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	time.Since
.Ltmp2893:
.Ltmp3006:
	.loc	8 0 16 is_stmt 0
	movq	%rax, %rbp
.Ltmp3007:
.Ltmp2894:
	.loc	8 158 11 is_stmt 1
	movl	$time.Duration..d, %edi
	callq	runtime.newobject
.Ltmp2895:
.Ltmp3008:
	.loc	8 0 11 is_stmt 0
	movq	%rax, %rcx
	movabsq	$1237940039285380275, %rdx
	.loc	8 157 43 is_stmt 1
	movq	%rbp, %rax
	imulq	%rdx
	movq	%rdx, %rax
	shrq	$63, %rax
	sarq	$26, %rdx
	addq	%rax, %rdx
	imulq	$1000000000, %rdx, %rax
.Ltmp3009:
	.loc	8 158 11
	movq	%rax, (%rcx)
	movq	$time.Duration..d, 224(%rsp)
	movq	%rcx, 232(%rsp)
	.loc	8 158 4 is_stmt 0
	movq	(%rbx), %rdi
	leaq	224(%rsp), %rax
.Ltmp3010:
	.loc	8 158 11
	movq	%rax, 200(%rsp)
	movq	$1, 208(%rsp)
	movq	$1, 216(%rsp)
.Ltmp2896:
	movq	216(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	200(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.506, %esi
	movl	$15, %edx
	callq	log.Logger.Printf
.Ltmp2897:
.Ltmp3011:
.LBB73_93:
	.loc	8 160 3 is_stmt 1
	movq	(%rbx), %rdi
.Ltmp2898:
	.loc	8 160 10 is_stmt 0
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.508, %esi
	movl	$20, %edx
	callq	log.Logger.Printf
.Ltmp2899:
	jmp	.LBB73_84
.Ltmp3012:
.LBB73_30:
.Ltmp2834:
	.loc	8 0 10
	leaq	864(%rsp), %rdi
.Ltmp3013:
	.loc	8 60 18 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.DarwinArmEnv
.Ltmp2835:
.Ltmp3014:
	movq	888(%rsp), %r13
.Ltmp3015:
	movq	896(%rsp), %rbp
.Ltmp3016:
	.loc	8 0 18 is_stmt 0
	movups	864(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	880(%rsp), %rax
	movq	%rax, 96(%rsp)
	movb	$1, %r14b
	.loc	8 60 39
	testq	%r13, %r13
	jne	.LBB73_14
.Ltmp3017:
.Ltmp2836:
	.loc	8 63 14 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 56(%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2837:
.Ltmp3018:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
	.loc	8 63 68
	testq	%rax, %rax
	jne	.LBB73_34
	jmp	.LBB73_35
.Ltmp3019:
.LBB73_37:
.Ltmp2840:
	.loc	8 0 68
	leaq	824(%rsp), %rdi
.Ltmp3020:
	.loc	8 69 18 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.DarwinArm64Env
.Ltmp2841:
.Ltmp3021:
	movq	848(%rsp), %r13
.Ltmp3022:
	movq	856(%rsp), %rbp
.Ltmp3023:
	.loc	8 0 18 is_stmt 0
	movups	824(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	840(%rsp), %rax
	movq	%rax, 96(%rsp)
	movb	$1, %r14b
	.loc	8 69 41
	testq	%r13, %r13
	jne	.LBB73_14
.Ltmp3024:
.Ltmp2842:
	.loc	8 72 14 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 56(%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2843:
.Ltmp3025:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
	.loc	8 72 68
	testq	%rax, %rax
	jne	.LBB73_34
	jmp	.LBB73_41
.Ltmp3026:
.LBB73_59:
.Ltmp2862:
	.loc	8 0 68
	leaq	704(%rsp), %rdi
.Ltmp3027:
	.loc	8 105 16 is_stmt 1
	movl	$.Lconst.62, %edx
	movl	$3, %ecx
	movq	%rbx, %rsi
	callq	command_line_arguments.AndroidEnv
.Ltmp2863:
.Ltmp3028:
	movq	728(%rsp), %r13
.Ltmp3029:
	movq	736(%rsp), %rbp
.Ltmp3030:
	.loc	8 0 16 is_stmt 0
	movups	704(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	720(%rsp), %rax
	movq	%rax, 96(%rsp)
	.loc	8 106 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB73_61
.Ltmp3031:
.Ltmp2864:
	.loc	8 109 14
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 56(%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2865:
.Ltmp3032:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
.Ltmp3033:
	.loc	8 109 68
	testq	%rax, %rax
	jne	.LBB73_5
	jmp	.LBB73_64
.Ltmp3034:
.LBB73_43:
.Ltmp2846:
	.loc	8 0 68
	leaq	784(%rsp), %rdi
.Ltmp3035:
	.loc	8 78 18 is_stmt 1
	movq	%rbx, %rsi
	callq	command_line_arguments.Darwin386Env
.Ltmp2847:
.Ltmp3036:
	movq	808(%rsp), %r13
.Ltmp3037:
	movq	816(%rsp), %rbp
.Ltmp3038:
	.loc	8 0 18 is_stmt 0
	movups	784(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	800(%rsp), %rax
	movq	%rax, 96(%rsp)
	movb	$1, %r14b
	.loc	8 78 39
	testq	%r13, %r13
	jne	.LBB73_14
.Ltmp3039:
	.loc	8 0 39
	movups	.Lconst.505(%rip), %xmm0
	movaps	%xmm0, 464(%rsp)
	leaq	464(%rsp), %rax
.Ltmp3040:
	.loc	8 81 14 is_stmt 1
	movq	%rax, 128(%rsp)
	movq	$1, 136(%rsp)
	movq	$1, 144(%rsp)
.Ltmp2848:
	movq	144(%rsp), %rax
	movq	%rax, 56(%rsp)
	movups	128(%rsp), %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2849:
.Ltmp3041:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
	.loc	8 81 81
	testq	%rax, %rax
	je	.LBB73_47
.Ltmp3042:
.LBB73_34:
	.loc	8 0 81
	movq	%rdx, %rbp
.Ltmp3043:
	leaq	79(%rsp), %rbx
.Ltmp3044:
	jmp	.LBB73_96
.Ltmp3045:
.LBB73_66:
.Ltmp2868:
	leaq	664(%rsp), %rdi
.Ltmp3046:
	.loc	8 115 16 is_stmt 1
	movl	$.Lconst.91, %edx
	movl	$5, %ecx
	movq	%rbx, %rsi
	callq	command_line_arguments.AndroidEnv
.Ltmp2869:
.Ltmp3047:
	movq	688(%rsp), %r13
.Ltmp3048:
	movq	696(%rsp), %rbp
.Ltmp3049:
	.loc	8 0 16 is_stmt 0
	movups	664(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	680(%rsp), %rax
	movq	%rax, 96(%rsp)
	.loc	8 116 11 is_stmt 1
	testq	%r13, %r13
	jne	.LBB73_61
.Ltmp3050:
.Ltmp2870:
	.loc	8 119 14
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 56(%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2871:
.Ltmp3051:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
.Ltmp3052:
	.loc	8 119 68
	testq	%rax, %rax
	jne	.LBB73_5
	jmp	.LBB73_70
.Ltmp3053:
.LBB73_72:
.Ltmp2874:
	.loc	8 0 68
	leaq	624(%rsp), %rdi
.Ltmp3054:
	.loc	8 125 16 is_stmt 1
	movl	$.Lconst.97, %edx
	movl	$3, %ecx
	movq	%rbx, %rsi
	callq	command_line_arguments.AndroidEnv
.Ltmp2875:
.Ltmp3055:
	movq	648(%rsp), %r13
.Ltmp3056:
	movq	656(%rsp), %rbp
.Ltmp3057:
	.loc	8 0 16 is_stmt 0
	movups	624(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	640(%rsp), %rax
	movq	%rax, 96(%rsp)
	.loc	8 126 11 is_stmt 1
	testq	%r13, %r13
	je	.LBB73_74
.Ltmp3058:
.LBB73_61:
	.loc	8 0 11 is_stmt 0
	movb	$1, %r14b
.Ltmp3059:
	leaq	79(%rsp), %rbx
.Ltmp3060:
	jmp	.LBB73_96
.Ltmp3061:
.LBB73_74:
.Ltmp2876:
	.loc	8 129 14 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, 40(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 32(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, 16(%rsp)
	movups	.Lconst.503(%rip), %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 56(%rsp)
	movq	%rbx, %rdi
	movq	104(%rsp), %rsi
	movq	%r15, %rdx
	movq	120(%rsp), %rcx
	movq	112(%rsp), %r8
	callq	command_line_arguments.InstallPkg
.Ltmp2877:
.Ltmp3062:
	.loc	8 0 14 is_stmt 0
	movq	%rax, %r13
.Ltmp3063:
	.loc	8 129 68
	testq	%rax, %rax
	jne	.LBB73_5
	jmp	.LBB73_76
.Ltmp3064:
.LBB73_6:
.Ltmp2900:
.Ltmp2901:
	.loc	8 0 68
	leaq	79(%rsp), %rdi
	.loc	8 162 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp2902:
.Ltmp3065:
	.loc	8 0 1 is_stmt 0
	movb	$1, %r14b
	jmp	.LBB73_84
.Ltmp3066:
.LBB73_94:
.Ltmp2903:
	movq	%rax, %r15
	xorl	%r13d, %r13d
	xorl	%ebp, %ebp
	xorl	%r14d, %r14d
.Ltmp3067:
	leaq	79(%rsp), %rbx
.Ltmp3068:
	jmp	.LBB73_96
.Ltmp3069:
.LBB73_95:
.Ltmp2906:
	.loc	8 162 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp3070:
	.p2align	4, 0x90
.LBB73_96:
.Ltmp2904:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp2905:
.Ltmp3071:
	.loc	8 0 1
	testb	%r14b, %r14b
	je	.LBB73_99
.Ltmp3072:
	.loc	8 20 3 is_stmt 1
	movq	%r13, %rax
	movq	%rbp, %rdx
	addq	$968, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp3073:
	.cfi_def_cfa_offset 8
	retq
.Ltmp3074:
.LBB73_99:
	.cfi_def_cfa_offset 1024
	.loc	8 0 3 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end73:
	.size	command_line_arguments.Init, .Lfunc_end73-command_line_arguments.Init
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table73:
.Lexception6:
	.byte	255
	.byte	3
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin73-.Lfunc_begin73
	.uleb128 .Ltmp2810-.Lfunc_begin73
	.byte	0
	.byte	0
	.uleb128 .Ltmp2810-.Lfunc_begin73
	.uleb128 .Ltmp2877-.Ltmp2810
	.uleb128 .Ltmp2900-.Lfunc_begin73
	.byte	1
	.uleb128 .Ltmp2901-.Lfunc_begin73
	.uleb128 .Ltmp2902-.Ltmp2901
	.uleb128 .Ltmp2903-.Lfunc_begin73
	.byte	0
	.uleb128 .Ltmp2902-.Lfunc_begin73
	.uleb128 .Ltmp2904-.Ltmp2902
	.byte	0
	.byte	0
	.uleb128 .Ltmp2904-.Lfunc_begin73
	.uleb128 .Ltmp2905-.Ltmp2904
	.uleb128 .Ltmp2906-.Lfunc_begin73
	.byte	1
	.uleb128 .Ltmp2905-.Lfunc_begin73
	.uleb128 .Lfunc_end73-.Ltmp2905
	.byte	0
	.byte	0
.Lcst_end6:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase6:
	.p2align	2

	.section	.text.command_line_arguments.command_line_arguments..thunk10,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk10,@function
command_line_arguments.command_line_arguments..thunk10:
.Lfunc_begin74:
	.loc	8 47 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB74_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB74_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp3075:
	.loc	8 47 2 prologue_end
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
	movq	%rax, %rdi
.Ltmp3076:
	callq	command_line_arguments.RemoveAll
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp3077:
.Lfunc_end74:
	.size	command_line_arguments.command_line_arguments..thunk10, .Lfunc_end74-command_line_arguments.command_line_arguments..thunk10
	.cfi_endproc

	.section	.text.command_line_arguments.InstallPkg,"ax",@progbits
	.globl	command_line_arguments.InstallPkg
	.p2align	4, 0x90
	.type	command_line_arguments.InstallPkg,@function
command_line_arguments.InstallPkg:
.Lfunc_begin75:
	.loc	5 174 0
	.cfi_startproc
	leaq	-984(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB75_2
	movq	%r10, %rax
	movabsq	$984, %r10
	movabsq	$64, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB75_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$936, %rsp
	.cfi_def_cfa_offset 992
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, %rbp
	movq	%rdx, %rax
	movq	%rdi, %r13
.Ltmp3078:
	.loc	5 175 18 prologue_end
	movq	1024(%rsp), %rcx
	movq	%rcx, 16(%rsp)
	movaps	1008(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	904(%rsp), %rdi
.Ltmp3079:
	movq	%rsi, %rdx
.Ltmp3080:
	movq	%rax, %rcx
.Ltmp3081:
	callq	command_line_arguments.PkgPath
.Ltmp3082:
	movq	920(%rsp), %rax
.Ltmp3083:
	movq	928(%rsp), %rdx
.Ltmp3084:
	.loc	5 0 18 is_stmt 0
	movups	904(%rsp), %xmm0
	movaps	%xmm0, 848(%rsp)
	.loc	5 176 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB75_93
.Ltmp3085:
	.loc	5 0 9 is_stmt 0
	leaq	1032(%rsp), %r12
	movups	(%r12), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	16(%r12), %rax
.Ltmp3086:
	movq	%rax, 64(%rsp)
	.loc	5 179 9 is_stmt 1
	movq	56(%rsp), %rbx
	.loc	5 179 30 is_stmt 0
	movups	.Lconst.583(%rip), %xmm0
	movaps	%xmm0, 864(%rsp)
	movaps	848(%rsp), %xmm0
	movaps	%xmm0, 880(%rsp)
	movaps	864(%rsp), %xmm0
	movaps	880(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp3087:
	.loc	5 0 30
	movq	%rax, 272(%rsp)
	movq	%rdx, 280(%rsp)
	.loc	5 179 9
	leaq	1(%rbx), %rdx
	movq	64(%rsp), %rax
	cmpq	%rax, %rdx
	jbe	.LBB75_8
.Ltmp3088:
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	808(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	808(%rsp), %rsi
	movq	816(%rsp), %rdx
	movq	824(%rsp), %rax
	jmp	.LBB75_5
.Ltmp3089:
.LBB75_8:
	cmpq	%rax, %rdx
	jg	.LBB75_88
.Ltmp3090:
	.loc	5 0 9
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB75_88
.Ltmp3091:
	.loc	5 179 9
	movq	48(%rsp), %rsi
.Ltmp3092:
.LBB75_5:
	movq	%rsi, 48(%rsp)
	movq	%rdx, 56(%rsp)
	movq	%rax, 64(%rsp)
	testq	%rbx, %rbx
	js	.LBB75_7
.Ltmp3093:
	.loc	5 0 9
	cmpq	%rdx, %rbx
	jge	.LBB75_7
.Ltmp3094:
	.loc	5 179 9
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	movq	%r14, 264(%rsp)
	movq	%rbp, 256(%rsp)
.Ltmp3095:
	.loc	5 0 9
	je	.LBB75_12
.Ltmp3096:
	leaq	272(%rsp), %rdx
	.loc	5 179 9
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB75_15
.Ltmp3097:
.LBB75_12:
	testq	%rsi, %rsi
	je	.LBB75_13
.Ltmp3098:
	movups	272(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp3099:
.LBB75_15:
	.loc	5 179 7
	movq	64(%rsp), %rax
	movq	%rax, 16(%r12)
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%r12)
	movups	.Lconst.599(%rip), %xmm0
	movaps	%xmm0, 832(%rsp)
	leaq	832(%rsp), %rax
	.loc	5 181 14 is_stmt 1
	movq	%rax, 584(%rsp)
	movq	$1, 592(%rsp)
	movq	$1, 600(%rsp)
	movq	600(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	584(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.554, %edi
	movl	$2, %esi
	callq	os_exec.Command
	.loc	5 182 5
	testq	%rax, %rax
	je	.LBB75_13
.Ltmp3100:
	.loc	5 0 5 is_stmt 0
	movq	%rax, %r15
.Ltmp3101:
	movq	%rax, %rsi
	movups	16(%r15), %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	32(%r15), %rax
	movq	%rax, 224(%rsp)
	.loc	5 182 13
	movq	216(%rsp), %r14
	movups	(%r12), %xmm0
	movaps	%xmm0, 512(%rsp)
	movq	16(%r12), %rcx
	movq	%rcx, 528(%rsp)
	movq	520(%rsp), %rdx
	addq	%r14, %rdx
	cmpq	%rax, %rdx
	jbe	.LBB75_31
.Ltmp3102:
	.loc	5 0 13
	movq	%rsi, %r12
	.loc	5 182 13
	movq	224(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	208(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	784(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	784(%rsp), %rcx
	movq	792(%rsp), %rdx
	movq	800(%rsp), %rax
	jmp	.LBB75_18
.Ltmp3103:
.LBB75_31:
	cmpq	%rax, %rdx
	jg	.LBB75_88
.Ltmp3104:
	.loc	5 0 13
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB75_88
.Ltmp3105:
	movq	%rsi, %r12
	.loc	5 182 13
	movq	208(%rsp), %rcx
.Ltmp3106:
.LBB75_18:
	movq	%rcx, 208(%rsp)
	movq	%rdx, 216(%rsp)
	movq	%rax, 224(%rsp)
	testq	%r14, %r14
	js	.LBB75_88
.Ltmp3107:
	.loc	5 0 13
	cmpq	%r14, %rax
	jl	.LBB75_88
.Ltmp3108:
	leaq	16(%r15), %rbp
	xorl	%esi, %esi
	.loc	5 182 13
	subq	%r14, %rax
	cmovneq	%r14, %rsi
	shlq	$4, %rsi
	addq	%rsi, %rcx
	subq	%r14, %rdx
	movq	%rcx, 560(%rsp)
	movq	%rdx, 568(%rsp)
	movq	%rax, 576(%rsp)
	movq	528(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	512(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	576(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	560(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %edi
	callq	runtime.typedslicecopy
	movaps	208(%rsp), %xmm0
	movaps	%xmm0, 480(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 496(%rsp)
	.loc	5 182 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_34
.Ltmp3109:
	.loc	5 0 11
	leaq	480(%rsp), %rdx
	.loc	5 182 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	.loc	5 183 6 is_stmt 1
	testq	%r13, %r13
	je	.LBB75_13
.Ltmp3110:
.LBB75_23:
	.loc	5 183 2 is_stmt 0
	testb	$1, 12(%r13)
	je	.LBB75_42
.Ltmp3111:
	.loc	5 0 2
	movups	(%rbp), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 192(%rsp)
	.loc	5 184 14 is_stmt 1
	movq	184(%rsp), %rbx
	movups	.Lconst.589(%rip), %xmm0
	movaps	%xmm0, 640(%rsp)
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB75_35
.Ltmp3112:
	movq	192(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	176(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	760(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	760(%rsp), %rsi
	movq	768(%rsp), %rdx
	movq	776(%rsp), %rax
	jmp	.LBB75_26
.Ltmp3113:
.LBB75_34:
	.loc	5 182 11
	movq	496(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	480(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	.loc	5 183 6
	testq	%r13, %r13
	jne	.LBB75_23
	jmp	.LBB75_13
.Ltmp3114:
.LBB75_35:
	.loc	5 184 14
	cmpq	%rax, %rdx
	jg	.LBB75_88
.Ltmp3115:
	.loc	5 0 14 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB75_88
.Ltmp3116:
	.loc	5 184 14
	movq	176(%rsp), %rsi
.Ltmp3117:
.LBB75_26:
	movq	%rsi, 176(%rsp)
	movq	%rdx, 184(%rsp)
	movq	%rax, 192(%rsp)
	testq	%rbx, %rbx
	js	.LBB75_7
.Ltmp3118:
	.loc	5 0 14
	cmpq	%rdx, %rbx
	jge	.LBB75_7
.Ltmp3119:
	.loc	5 184 14
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_29
.Ltmp3120:
	.loc	5 0 14
	leaq	640(%rsp), %rdx
	.loc	5 184 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB75_39
.Ltmp3121:
.LBB75_29:
	testq	%rsi, %rsi
	je	.LBB75_13
.Ltmp3122:
	movaps	640(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp3123:
.LBB75_39:
	.loc	5 0 14
	movq	192(%rsp), %rax
	movq	%rax, 464(%rsp)
	movaps	176(%rsp), %xmm0
	movaps	%xmm0, 448(%rsp)
	.loc	5 184 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_41
.Ltmp3124:
	.loc	5 0 12
	leaq	448(%rsp), %rdx
	.loc	5 184 12
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
.Ltmp3125:
.LBB75_42:
	.loc	5 186 2 is_stmt 1
	testb	$1, 11(%r13)
	je	.LBB75_57
.Ltmp3126:
.LBB75_43:
	.loc	5 0 2 is_stmt 0
	movups	(%rbp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 160(%rsp)
	.loc	5 187 14 is_stmt 1
	movq	152(%rsp), %rbx
	movups	.Lconst.591(%rip), %xmm0
	movaps	%xmm0, 624(%rsp)
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB75_50
.Ltmp3127:
	movq	160(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	144(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	736(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	736(%rsp), %rsi
	movq	744(%rsp), %rdx
	movq	752(%rsp), %rax
	jmp	.LBB75_45
.Ltmp3128:
.LBB75_50:
	cmpq	%rax, %rdx
	jg	.LBB75_88
.Ltmp3129:
	.loc	5 0 14 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB75_88
.Ltmp3130:
	.loc	5 187 14
	movq	144(%rsp), %rsi
.Ltmp3131:
.LBB75_45:
	movq	%rsi, 144(%rsp)
	movq	%rdx, 152(%rsp)
	movq	%rax, 160(%rsp)
	testq	%rbx, %rbx
	js	.LBB75_7
.Ltmp3132:
	.loc	5 0 14
	cmpq	%rdx, %rbx
	jge	.LBB75_7
.Ltmp3133:
	.loc	5 187 14
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_48
.Ltmp3134:
	.loc	5 0 14
	leaq	624(%rsp), %rdx
	.loc	5 187 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB75_54
.Ltmp3135:
.LBB75_41:
	.loc	5 184 12 is_stmt 1
	movq	464(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	448(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	.loc	5 186 2
	testb	$1, 11(%r13)
	jne	.LBB75_43
.Ltmp3136:
.LBB75_57:
	.loc	5 189 2
	testb	$1, 13(%r13)
	jne	.LBB75_58
	jmp	.LBB75_72
.Ltmp3137:
.LBB75_48:
	.loc	5 187 14
	testq	%rsi, %rsi
	je	.LBB75_13
.Ltmp3138:
	movaps	624(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp3139:
.LBB75_54:
	.loc	5 0 14 is_stmt 0
	movq	160(%rsp), %rax
	movq	%rax, 432(%rsp)
	movaps	144(%rsp), %xmm0
	movaps	%xmm0, 416(%rsp)
	.loc	5 187 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_56
.Ltmp3140:
	.loc	5 0 12
	leaq	416(%rsp), %rdx
	.loc	5 187 12
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	.loc	5 189 2 is_stmt 1
	testb	$1, 13(%r13)
	jne	.LBB75_58
	jmp	.LBB75_72
.Ltmp3141:
.LBB75_56:
	.loc	5 187 12
	movq	432(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	416(%rsp), %xmm0
	movups	%xmm0, (%rbp)
	.loc	5 189 2
	testb	$1, 13(%r13)
	je	.LBB75_72
.Ltmp3142:
.LBB75_58:
	.loc	5 0 2 is_stmt 0
	movups	(%rbp), %xmm0
	movaps	%xmm0, 112(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 128(%rsp)
	.loc	5 190 14 is_stmt 1
	movq	120(%rsp), %rbx
	movups	.Lconst.597(%rip), %xmm0
	movaps	%xmm0, 608(%rsp)
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB75_65
.Ltmp3143:
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	712(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	712(%rsp), %rsi
	movq	720(%rsp), %rdx
	movq	728(%rsp), %rax
	jmp	.LBB75_60
.Ltmp3144:
.LBB75_65:
	cmpq	%rax, %rdx
	jg	.LBB75_88
.Ltmp3145:
	.loc	5 0 14 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB75_88
.Ltmp3146:
	.loc	5 190 14
	movq	112(%rsp), %rsi
.Ltmp3147:
.LBB75_60:
	movq	%rsi, 112(%rsp)
	movq	%rdx, 120(%rsp)
	movq	%rax, 128(%rsp)
	testq	%rbx, %rbx
	js	.LBB75_7
.Ltmp3148:
	.loc	5 0 14
	cmpq	%rdx, %rbx
	jge	.LBB75_7
.Ltmp3149:
	.loc	5 190 14
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_63
.Ltmp3150:
	.loc	5 0 14
	leaq	608(%rsp), %rdx
	.loc	5 190 14
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB75_69
.Ltmp3151:
.LBB75_63:
	testq	%rsi, %rsi
	je	.LBB75_13
.Ltmp3152:
	movaps	608(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp3153:
.LBB75_69:
	.loc	5 0 14
	movq	128(%rsp), %rax
	movq	%rax, 400(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 384(%rsp)
	.loc	5 190 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_71
.Ltmp3154:
	.loc	5 0 12
	leaq	384(%rsp), %rdx
	.loc	5 190 12
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB75_72
.Ltmp3155:
.LBB75_71:
	movq	400(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	384(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp3156:
.LBB75_72:
	.loc	5 0 12
	movups	(%rbp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	16(%rbp), %rax
	movq	%rax, 96(%rsp)
	.loc	5 192 13 is_stmt 1
	movq	88(%rsp), %rbx
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB75_79
.Ltmp3157:
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	688(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	688(%rsp), %rsi
	movq	696(%rsp), %rdx
	movq	704(%rsp), %rax
	jmp	.LBB75_74
.Ltmp3158:
.LBB75_79:
	cmpq	%rax, %rdx
	jg	.LBB75_88
.Ltmp3159:
	.loc	5 0 13 is_stmt 0
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB75_88
.Ltmp3160:
	.loc	5 192 13
	movq	80(%rsp), %rsi
.Ltmp3161:
.LBB75_74:
	movq	%rsi, 80(%rsp)
	movq	%rdx, 88(%rsp)
	movq	%rax, 96(%rsp)
	testq	%rbx, %rbx
	js	.LBB75_7
.Ltmp3162:
	.loc	5 0 13
	cmpq	%rdx, %rbx
	jge	.LBB75_7
.Ltmp3163:
	leaq	992(%rsp), %rdx
	.loc	5 192 13
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_77
.Ltmp3164:
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB75_83
.Ltmp3165:
.LBB75_77:
	testq	%rsi, %rsi
	je	.LBB75_13
.Ltmp3166:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp3167:
.LBB75_83:
	.loc	5 0 13
	leaq	1008(%rsp), %rbx
	movq	96(%rsp), %rax
	movq	%rax, 368(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 352(%rsp)
	.loc	5 192 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_85
.Ltmp3168:
	.loc	5 0 11
	leaq	352(%rsp), %rdx
	.loc	5 192 11
	movl	$type...6.7string, %edi
	movq	%rbp, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB75_86
.Ltmp3169:
.LBB75_85:
	movq	368(%rsp), %rax
	movq	%rax, 16(%rbp)
	movaps	352(%rsp), %xmm0
	movups	%xmm0, (%rbp)
.Ltmp3170:
.LBB75_86:
	.loc	5 193 19 is_stmt 1
	movl	$type...60x.7string, %edi
	callq	runtime.newobject
	movq	%rax, 232(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 240(%rsp)
	movups	(%rbx), %xmm1
	movaps	%xmm1, 320(%rsp)
	movq	16(%rbx), %rcx
	movq	%rcx, 336(%rsp)
	.loc	5 193 12 is_stmt 0
	movq	328(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB75_89
.Ltmp3171:
	movq	248(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	232(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	664(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	664(%rsp), %rax
	movq	672(%rsp), %rdx
	movq	680(%rsp), %rcx
	movq	%rax, 232(%rsp)
	movq	%rdx, 240(%rsp)
	movq	%rcx, 248(%rsp)
	testq	%rcx, %rcx
	jns	.LBB75_90
.Ltmp3172:
.LBB75_88:
	.loc	5 0 12
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp3173:
.LBB75_89:
	leaq	240(%rsp), %rcx
	.loc	5 193 12
	movups	%xmm0, (%rcx)
	xorl	%ecx, %ecx
	xorl	%edx, %edx
.Ltmp3174:
.LBB75_90:
	.loc	5 0 12
	addq	$40, %r15
.Ltmp3175:
	movq	%rax, 536(%rsp)
	movq	%rdx, 544(%rsp)
	movq	%rcx, 552(%rsp)
	.loc	5 193 12
	movq	336(%rsp), %rax
	movq	%rax, 40(%rsp)
	movaps	320(%rsp), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	552(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	536(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %edi
	callq	runtime.typedslicecopy
	movups	232(%rsp), %xmm0
	movaps	%xmm0, 288(%rsp)
	movq	248(%rsp), %rax
	movq	%rax, 304(%rsp)
	.loc	5 193 10
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB75_95
.Ltmp3176:
	.loc	5 0 10
	leaq	288(%rsp), %rdx
	.loc	5 193 10
	movl	$type...6.7string, %edi
	movq	%r15, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB75_92
.Ltmp3177:
.LBB75_95:
	movq	304(%rsp), %rax
	movq	%rax, 16(%r15)
	movaps	288(%rsp), %xmm0
	movups	%xmm0, (%r15)
.Ltmp3178:
.LBB75_92:
	.loc	5 194 9 is_stmt 1
	movq	%r13, %rdi
	movq	256(%rsp), %rsi
	movq	264(%rsp), %rdx
	movq	%r12, %rcx
	callq	command_line_arguments.RunCmd
.Ltmp3179:
.LBB75_93:
	.loc	5 0 9 is_stmt 0
	addq	$936, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp3180:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3181:
.LBB75_7:
	.cfi_def_cfa_offset 992
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp3182:
.LBB75_13:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end75:
	.size	command_line_arguments.InstallPkg, .Lfunc_end75-command_line_arguments.InstallPkg
	.cfi_endproc

	.section	.text.command_line_arguments.EnvClang,"ax",@progbits
	.globl	command_line_arguments.EnvClang
	.p2align	4, 0x90
	.type	command_line_arguments.EnvClang,@function
command_line_arguments.EnvClang:
.Lfunc_begin76:
	.loc	7 46 0 is_stmt 1
	.cfi_startproc
	leaq	-504(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB76_2
	movq	%r10, %rax
	movabsq	$504, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB76_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$456, %rsp
	.cfi_def_cfa_offset 512
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r12
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
.Ltmp3183:
	.loc	7 48 14 prologue_end
	movups	.Lconst.519(%rip), %xmm0
	movaps	%xmm0, 384(%rsp)
	movq	%rdx, 400(%rsp)
	movq	%rcx, 408(%rsp)
	movups	.Lconst.521(%rip), %xmm0
	movaps	%xmm0, 416(%rsp)
	movups	.Lconst.155(%rip), %xmm0
	movaps	%xmm0, 432(%rsp)
	leaq	384(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	$4, 72(%rsp)
	movq	$4, 80(%rsp)
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.376, %edi
	movl	$5, %esi
	callq	os_exec.Command
	movq	%rax, %rbp
.Ltmp3184:
	.loc	7 49 52
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	strings.ToUpper
	.loc	7 49 41 is_stmt 0
	movups	.Lconst.523(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movq	%rax, 128(%rsp)
	movq	%rdx, 136(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rdx, %rcx
	leaq	312(%rsp), %rdi
	.loc	7 49 33
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	runtime.stringtoslicebyte
	.loc	7 49 14
	movq	328(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	312(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	272(%rsp), %rdi
.Ltmp3185:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	movq	%rbp, %r8
	callq	command_line_arguments.OutputCmd
.Ltmp3186:
	movq	296(%rsp), %rax
.Ltmp3187:
	movq	304(%rsp), %rcx
	movups	272(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	288(%rsp), %rdx
	movq	%rdx, 48(%rsp)
	.loc	7 50 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB76_3
.Ltmp3188:
	.loc	7 53 29
	movq	48(%rsp), %rax
.Ltmp3189:
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.slicebytetostring
	.loc	7 53 19 is_stmt 0
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	strings.TrimSpace
	movq	%rax, 56(%rsp)
	movq	%rdx, %rbp
.Ltmp3190:
	.loc	7 56 13 is_stmt 1
	movups	.Lconst.519(%rip), %xmm0
	movaps	%xmm0, 336(%rsp)
	movq	%rbx, 352(%rsp)
	movq	%r12, 360(%rsp)
	movups	.Lconst.525(%rip), %xmm0
	movaps	%xmm0, 368(%rsp)
	leaq	336(%rsp), %rax
	movq	%rax, 88(%rsp)
	movq	$3, 96(%rsp)
	movq	$3, 104(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.376, %edi
	movl	$5, %esi
	callq	os_exec.Command
	movq	%rax, %r13
.Ltmp3191:
	.loc	7 57 49
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	strings.ToUpper
	.loc	7 57 38 is_stmt 0
	movups	.Lconst.527(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	movq	%rax, 160(%rsp)
	movq	%rdx, 168(%rsp)
	movaps	144(%rsp), %xmm0
	movaps	160(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
	movq	%rdx, %rcx
	leaq	248(%rsp), %rdi
	.loc	7 57 32
	xorl	%esi, %esi
	movq	%rax, %rdx
	callq	runtime.stringtoslicebyte
	.loc	7 57 13
	movq	264(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	248(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	208(%rsp), %rdi
.Ltmp3192:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rsi
	movq	%r13, %r8
	callq	command_line_arguments.OutputCmd
.Ltmp3193:
	movq	232(%rsp), %rax
.Ltmp3194:
	movq	240(%rsp), %rcx
	movups	208(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	224(%rsp), %rdx
	movq	%rdx, 48(%rsp)
	.loc	7 58 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB76_6
.Ltmp3195:
.LBB76_3:
	.loc	7 0 9 is_stmt 0
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r15)
	movups	%xmm0, (%r15)
	movq	%rax, 32(%r15)
	movq	%rcx, 40(%r15)
.Ltmp3196:
.LBB76_4:
	movq	%r15, %rax
	addq	$456, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp3197:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp3198:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB76_6:
	.cfi_def_cfa_offset 512
.Ltmp3199:
	.loc	7 61 27 is_stmt 1
	movq	48(%rsp), %rax
.Ltmp3200:
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.slicebytetostring
	.loc	7 61 17 is_stmt 0
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	strings.TrimSpace
.Ltmp3201:
	.loc	7 62 26 is_stmt 1
	movups	.Lconst.529(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	%rax, 192(%rsp)
	movq	%rdx, 200(%rsp)
	movaps	176(%rsp), %xmm0
	movaps	192(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
.Ltmp3202:
	callq	runtime.concatstring2
.Ltmp3203:
	.loc	7 62 2 is_stmt 0
	movq	56(%rsp), %rcx
	movq	%rcx, (%r15)
	movq	%rbp, 8(%r15)
	movq	%rax, 16(%r15)
	movq	%rdx, 24(%r15)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 32(%r15)
	jmp	.LBB76_4
.Ltmp3204:
.Lfunc_end76:
	.size	command_line_arguments.EnvClang, .Lfunc_end76-command_line_arguments.EnvClang
	.cfi_endproc

	.section	.text.command_line_arguments.PkgPath,"ax",@progbits
	.globl	command_line_arguments.PkgPath
	.p2align	4, 0x90
	.type	command_line_arguments.PkgPath,@function
command_line_arguments.PkgPath:
.Lfunc_begin77:
	.loc	5 103 0 is_stmt 1
	.cfi_startproc
	leaq	-312(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB77_2
	movq	%r10, %rax
	movabsq	$312, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB77_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$264, %rsp
	.cfi_def_cfa_offset 320
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 88(%rsp)
	movq	%rdx, %rbx
	movq	%rdi, %r12
.Ltmp3205:
	.loc	5 104 16 prologue_end
	movq	336(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	320(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.567, %edi
	movl	$4, %esi
.Ltmp3206:
	callq	command_line_arguments.FindEnv
	movq	%rax, %rbp
.Ltmp3207:
	movq	%rdx, %r15
.Ltmp3208:
	.loc	5 104 38 is_stmt 0
	movq	336(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	320(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.425, %edi
	movl	$6, %esi
	callq	command_line_arguments.FindEnv
	movq	%rax, %r14
.Ltmp3209:
	movq	%rdx, %r13
.Ltmp3210:
	.loc	5 105 9 is_stmt 1
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rbp, %rdi
	movq	%r15, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB77_4
.Ltmp3211:
	.loc	5 105 24 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB77_5
.Ltmp3212:
.LBB77_4:
	.loc	5 106 18 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp3213:
	.loc	5 0 18 is_stmt 0
	movq	%rbp, 136(%rsp)
	movq	%r15, 144(%rsp)
	leaq	136(%rsp), %rdx
	.loc	5 106 18
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r14, 120(%rsp)
	movq	%r13, 128(%rsp)
	leaq	120(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 232(%rsp)
	movq	%rbx, 240(%rsp)
	movq	$string..d, 248(%rsp)
	movq	%rbp, 256(%rsp)
	leaq	232(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	$2, 104(%rsp)
	movq	$2, 112(%rsp)
	movq	112(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.569, %edi
	movl	$33, %esi
	callq	fmt.Errorf
.Ltmp3214:
	.loc	5 106 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r12)
	movq	%rax, 16(%r12)
	movq	%rdx, 24(%r12)
	jmp	.LBB77_6
.Ltmp3215:
.LBB77_5:
	.loc	5 109 9 is_stmt 1
	movq	%rbx, 152(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 160(%rsp)
	movups	.Lconst.572(%rip), %xmm0
	movups	%xmm0, 168(%rsp)
	movq	%rbp, 184(%rsp)
	movq	%r15, 192(%rsp)
	movups	.Lconst.574(%rip), %xmm0
	movups	%xmm0, 200(%rsp)
	movq	%r14, 216(%rsp)
	movq	%r13, 224(%rsp)
	movups	216(%rsp), %xmm0
	movups	%xmm0, 64(%rsp)
	movups	152(%rsp), %xmm0
	movups	168(%rsp), %xmm1
	movups	184(%rsp), %xmm2
	movups	200(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring5
.Ltmp3216:
	.loc	5 109 2 is_stmt 0
	movq	%rax, (%r12)
	movq	%rdx, 8(%r12)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r12)
.Ltmp3217:
.LBB77_6:
	.loc	5 0 2
	movq	%r12, %rax
	addq	$264, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp3218:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp3219:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end77:
	.size	command_line_arguments.PkgPath, .Lfunc_end77-command_line_arguments.PkgPath
	.cfi_endproc

	.section	.text.command_line_arguments.Import,"ax",@progbits
	.globl	command_line_arguments.Import
	.p2align	4, 0x90
	.type	command_line_arguments.Import,@function
command_line_arguments.Import:
.Lfunc_begin78:
	.loc	5 217 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB78_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$8, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB78_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %r15
	movq	%r8, %r12
	movq	%rcx, %rbx
	movq	%rdx, %rbp
	movq	%rsi, %r14
	movq	%rdi, %r13
.Ltmp3220:
	.loc	5 219 10 prologue_end
	movl	$.Lconst.611, %edx
	movl	$1, %ecx
	movq	%rsi, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
	xorl	%ecx, %ecx
	movl	$0, %edx
	cmpb	$1, %al
	jne	.LBB78_5
.Ltmp3221:
.LBB78_3:
	.loc	5 220 3
	movq	%rcx, %rax
	jmp	.LBB78_4
.Ltmp3222:
.LBB78_5:
	.loc	5 223 17
	movq	%r15, (%rsp)
	leaq	24(%rsp), %rdi
	movq	%r13, %rsi
	movq	%r14, %rdx
	movq	%rbp, %rcx
	movq	%rbx, %r8
	movq	%r12, %r9
	callq	go_build.Context.Import
	movq	32(%rsp), %rax
.Ltmp3223:
	.loc	5 224 9
	testq	%rax, %rax
	je	.LBB78_7
.Ltmp3224:
	.loc	5 223 17
	movq	40(%rsp), %rdx
.Ltmp3225:
.LBB78_4:
	.loc	5 0 17 is_stmt 0
	addq	$88, %rsp
.Ltmp3226:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB78_7:
	.cfi_def_cfa_offset 144
.Ltmp3227:
	movq	%r15, 16(%rsp)
.Ltmp3228:
	movq	24(%rsp), %rbx
.Ltmp3229:
	.loc	5 229 22 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB78_19
.Ltmp3230:
	.loc	5 0 22 is_stmt 0
	movq	144(%rsp), %rbp
	movups	(%rbx), %xmm0
	movaps	%xmm0, 64(%rsp)
	leaq	64(%rsp), %rdx
	.loc	5 229 5
	movl	$type..map.6string.7.1go_build.Package, %edi
	movq	%rbp, %rsi
	callq	runtime.mapaccess2
.Ltmp3231:
	movl	%edx, %eax
.Ltmp3232:
	.loc	5 0 5
	xorl	%ecx, %ecx
	movl	$0, %edx
	testb	$1, %al
	jne	.LBB78_3
.Ltmp3233:
	movups	(%rbx), %xmm0
	movaps	%xmm0, 48(%rsp)
	leaq	48(%rsp), %rdx
	.loc	5 232 16 is_stmt 1
	movl	$type..map.6string.7.1go_build.Package, %edi
	movq	%rbp, %r14
.Ltmp3234:
	movq	%rbp, %rsi
	callq	runtime.mapassign
.Ltmp3235:
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB78_10
.Ltmp3236:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	runtime.writebarrierptr
	movq	%r13, %r15
.Ltmp3237:
	.loc	5 0 16 is_stmt 0
	jmp	.LBB78_12
.Ltmp3238:
.LBB78_10:
	.loc	5 232 16
	testq	%rax, %rax
	je	.LBB78_19
.Ltmp3239:
	.loc	5 0 16
	movq	%r13, %r15
.Ltmp3240:
	.loc	5 232 16
	movq	%rbx, (%rax)
.Ltmp3241:
.LBB78_12:
	.loc	5 0 16
	movq	%r14, %r13
	movq	696(%rbx), %r14
.Ltmp3242:
	.loc	5 235 2 is_stmt 1
	testq	%r14, %r14
	jle	.LBB78_13
.Ltmp3243:
	.loc	5 0 2 is_stmt 0
	movq	688(%rbx), %rbp
	addq	$8, %rbp
	xorl	%r12d, %r12d
.Ltmp3244:
	.p2align	4, 0x90
.LBB78_17:
	.loc	5 235 2
	movq	-8(%rbp), %rsi
.Ltmp3245:
	movq	(%rbp), %rdx
.Ltmp3246:
	.loc	5 236 13 is_stmt 1
	movq	(%rbx), %rcx
	movq	8(%rbx), %r8
	movq	%r13, (%rsp)
	movq	%r15, %rdi
	movq	16(%rsp), %r9
	callq	command_line_arguments.Import
.Ltmp3247:
	.loc	5 236 54 is_stmt 0
	testq	%rax, %rax
	jne	.LBB78_18
.Ltmp3248:
	.loc	5 235 2 is_stmt 1
	addq	$1, %r12
	addq	$16, %rbp
	cmpq	%r14, %r12
	jl	.LBB78_17
.Ltmp3249:
	.loc	5 0 2 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	jmp	.LBB78_3
.Ltmp3250:
.LBB78_13:
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	jmp	.LBB78_3
.Ltmp3251:
.LBB78_18:
	movq	%rax, %rcx
	jmp	.LBB78_3
.Ltmp3252:
.LBB78_19:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end78:
	.size	command_line_arguments.Import, .Lfunc_end78-command_line_arguments.Import
	.cfi_endproc

	.section	.text.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash,"ax",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash
	.p2align	4, 0x90
	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash,@function
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash:
.Lfunc_begin79:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB79_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB79_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp3253:
	.loc	1 1 1 prologue_end
	callq	runtime.memhash32
	leaq	8(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	addq	$16, %rbx
.Ltmp3254:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
.Ltmp3255:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp3256:
.Lfunc_end79:
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash, .Lfunc_end79-command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash
	.cfi_endproc

	.section	.text.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq,"ax",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq
	.p2align	4, 0x90
	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq,@function
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq:
.Lfunc_begin80:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB80_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB80_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp3257:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB80_7
.Ltmp3258:
	testq	%rsi, %rsi
	je	.LBB80_7
.Ltmp3259:
	movl	(%rdi), %eax
	cmpl	(%rsi), %eax
	jne	.LBB80_8
.Ltmp3260:
	movq	8(%rdi), %rax
	cmpq	8(%rsi), %rax
	jne	.LBB80_8
.Ltmp3261:
	movq	16(%rdi), %rax
	cmpq	16(%rsi), %rax
	sete	%al
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp3262:
.LBB80_8:
	.cfi_def_cfa_offset 16
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp3263:
.LBB80_7:
	.cfi_def_cfa_offset 16
	movl	$6, %edi
.Ltmp3264:
	callq	__go_runtime_error
.Ltmp3265:
.Lfunc_end80:
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq, .Lfunc_end80-command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq
	.cfi_endproc

	.section	.text.command_line_arguments..import,"ax",@progbits
	.globl	command_line_arguments..import
	.p2align	4, 0x90
	.type	command_line_arguments..import,@function
command_line_arguments..import:
.Lfunc_begin81:
	.loc	3 5 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB81_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB81_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp3266:
	.loc	1 1 1 prologue_end
	movl	$go..C0, %edi
	callq	runtime.registerGCRoots
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp3267:
.Lfunc_end81:
	.size	command_line_arguments..import, .Lfunc_end81-command_line_arguments..import
	.cfi_endproc

	.type	.Lconst.1,@object
	.section	.rodata..Lconst.1,"a",@progbits
.Lconst.1:
	.asciz	"Invalid or unsupported Android installation. See https://gomatcha.io/guide/installation/\nfor detailed instructions or set the --target=\"ios\" flag to only build for iOS.\n"
	.size	.Lconst.1, 170

	.type	.Lconst.2,@object
	.section	.rodata..Lconst.2,"a",@progbits
	.p2align	3
.Lconst.2:
	.quad	.Lconst.1
	.quad	169
	.size	.Lconst.2, 16

	.type	string..d,@object
	.section	.rodata.string..d,"aG",@progbits,string..d,comdat
	.weak	string..d
	.p2align	4
string..d:
	.quad	16
	.quad	8
	.long	2296014490
	.byte	24
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.strhash..f
	.quad	runtime.strequal..f
	.quad	gcbits..ba
	.quad	go..C1
	.quad	go..C4
	.quad	type...1string
	.size	string..d, 72

	.type	gcbits..ba,@object
	.section	.rodata.gcbits..ba,"aG",@progbits,gcbits..ba,comdat
	.weak	gcbits..ba
gcbits..ba:
	.byte	1
	.size	gcbits..ba, 1

	.type	.Lconst.3,@object
	.section	.rodata..Lconst.3,"a",@progbits
.Lconst.3:
	.asciz	"string"
	.size	.Lconst.3, 7

	.type	go..C1,@object
	.section	.rodata.go..C1,"a",@progbits
	.p2align	3
go..C1:
	.quad	.Lconst.3
	.quad	6
	.size	go..C1, 16

	.type	go..C2,@object
	.section	.rodata.go..C2,"a",@progbits
	.p2align	3
go..C2:
	.quad	.Lconst.3
	.quad	6
	.size	go..C2, 16

	.type	go..C3,@object
	.section	.bss.go..C3,"aw",@nobits
	.p2align	4
go..C3:
	.zero	40
	.size	go..C3, 40

	.type	go..C4,@object
	.section	.rodata.go..C4,"a",@progbits
	.p2align	4
go..C4:
	.quad	go..C2
	.quad	0
	.quad	go..C3
	.quad	0
	.quad	0
	.size	go..C4, 40

	.type	type...1string,@object
	.section	.rodata.type...1string,"aG",@progbits,type...1string,comdat
	.weak	type...1string
	.p2align	4
type...1string:
	.quad	8
	.quad	8
	.long	2376493481
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C5
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...1string, 80

	.type	.Lconst.4,@object
	.section	.rodata..Lconst.4,"a",@progbits
.Lconst.4:
	.asciz	"*string"
	.size	.Lconst.4, 8

	.type	go..C5,@object
	.section	.rodata.go..C5,"a",@progbits
	.p2align	3
go..C5:
	.quad	.Lconst.4
	.quad	7
	.size	go..C5, 16

	.type	command_line_arguments.ValidateAndroidInstall..f,@object
	.section	.rodata.command_line_arguments.ValidateAndroidInstall..f,"a",@progbits
	.globl	command_line_arguments.ValidateAndroidInstall..f
	.p2align	3
command_line_arguments.ValidateAndroidInstall..f:
	.quad	command_line_arguments.ValidateAndroidInstall
	.size	command_line_arguments.ValidateAndroidInstall..f, 8

	.type	.Lconst.7,@object
	.section	.rodata..Lconst.7,"a",@progbits
.Lconst.7:
	.asciz	"javac"
	.size	.Lconst.7, 6

	.type	.Lconst.9,@object
	.section	.rodata..Lconst.9,"a",@progbits
.Lconst.9:
	.asciz	"javac was not found in $PATH. "
	.size	.Lconst.9, 31

	.type	.Lconst.10,@object
	.section	.rodata..Lconst.10,"a",@progbits
	.p2align	3
.Lconst.10:
	.quad	.Lconst.9
	.quad	30
	.size	.Lconst.10, 16

	.type	.Lconst.11,@object
	.section	.rodata..Lconst.11,"a",@progbits
	.p2align	4
.Lconst.11:
	.zero	24
	.size	.Lconst.11, 24

	.type	.Lconst.12,@object
	.section	.rodata..Lconst.12,"a",@progbits
.Lconst.12:
	.asciz	"ANDROID_HOME"
	.size	.Lconst.12, 13

	.type	.Lconst.15,@object
	.section	.rodata..Lconst.15,"a",@progbits
.Lconst.15:
	.asciz	"$ANDROID_HOME enviromental variable is unset and does not point to an Android SDK. "
	.size	.Lconst.15, 84

	.type	.Lconst.16,@object
	.section	.rodata..Lconst.16,"a",@progbits
	.p2align	3
.Lconst.16:
	.quad	.Lconst.15
	.quad	83
	.size	.Lconst.16, 16

	.type	.Lconst.17,@object
	.section	.rodata..Lconst.17,"a",@progbits
.Lconst.17:
	.asciz	"$ANDROID_HOME enviromental variable does not point to an Android SDK. "
	.size	.Lconst.17, 71

	.type	.Lconst.18,@object
	.section	.rodata..Lconst.18,"a",@progbits
	.p2align	3
.Lconst.18:
	.quad	.Lconst.17
	.quad	70
	.size	.Lconst.18, 16

	.type	command_line_arguments.AndroidSDKPath..f,@object
	.section	.rodata.command_line_arguments.AndroidSDKPath..f,"a",@progbits
	.globl	command_line_arguments.AndroidSDKPath..f
	.p2align	3
command_line_arguments.AndroidSDKPath..f:
	.quad	command_line_arguments.AndroidSDKPath
	.size	command_line_arguments.AndroidSDKPath..f, 8

	.type	.Lconst.19,@object
	.section	.rodata..Lconst.19,"a",@progbits
.Lconst.19:
	.asciz	"platforms"
	.size	.Lconst.19, 10

	.type	.Lconst.20,@object
	.section	.rodata..Lconst.20,"a",@progbits
	.p2align	3
.Lconst.20:
	.quad	.Lconst.19
	.quad	9
	.size	.Lconst.20, 16

	.type	.Lconst.21,@object
	.section	.rodata..Lconst.21,"a",@progbits
.Lconst.21:
	.asciz	"$ANDROID_HOME enviromental variable does not point to an Android SDK. Missing directory at $ANDROID_HOME/platforms. "
	.size	.Lconst.21, 117

	.type	.Lconst.22,@object
	.section	.rodata..Lconst.22,"a",@progbits
	.p2align	3
.Lconst.22:
	.quad	.Lconst.21
	.quad	116
	.size	.Lconst.22, 16

	.type	.Lconst.24,@object
	.section	.rodata..Lconst.24,"a",@progbits
.Lconst.24:
	.asciz	"android-21"
	.size	.Lconst.24, 11

	.type	.Lconst.25,@object
	.section	.rodata..Lconst.25,"a",@progbits
	.p2align	3
.Lconst.25:
	.quad	.Lconst.24
	.quad	10
	.size	.Lconst.25, 16

	.type	.Lconst.26,@object
	.section	.rodata..Lconst.26,"a",@progbits
.Lconst.26:
	.asciz	"android-"
	.size	.Lconst.26, 9

	.type	.Lconst.27,@object
	.section	.rodata..Lconst.27,"a",@progbits
	.p2align	3
.Lconst.27:
	.quad	.Lconst.26
	.quad	8
	.size	.Lconst.27, 16

	.type	.Lconst.28,@object
	.section	.rodata..Lconst.28,"a",@progbits
.Lconst.28:
	.asciz	"android.jar"
	.size	.Lconst.28, 12

	.type	.Lconst.29,@object
	.section	.rodata..Lconst.29,"a",@progbits
	.p2align	3
.Lconst.29:
	.quad	.Lconst.28
	.quad	11
	.size	.Lconst.29, 16

	.type	.Lconst.30,@object
	.section	.rodata..Lconst.30,"a",@progbits
.Lconst.30:
	.asciz	"Android SDK platform with minimum API level of 15 was not found in $ANDROID_HOME/platforms. SDK platforms can be installed in Android Studio > SDK Manager."
	.size	.Lconst.30, 156

	.type	command_line_arguments.AndroidPlatformPath..f,@object
	.section	.rodata.command_line_arguments.AndroidPlatformPath..f,"a",@progbits
	.globl	command_line_arguments.AndroidPlatformPath..f
	.p2align	3
command_line_arguments.AndroidPlatformPath..f:
	.quad	command_line_arguments.AndroidPlatformPath
	.size	command_line_arguments.AndroidPlatformPath..f, 8

	.type	.Lconst.32,@object
	.section	.rodata..Lconst.32,"a",@progbits
.Lconst.32:
	.asciz	"ndk-bundle"
	.size	.Lconst.32, 11

	.type	.Lconst.33,@object
	.section	.rodata..Lconst.33,"a",@progbits
	.p2align	3
.Lconst.33:
	.quad	.Lconst.32
	.quad	10
	.size	.Lconst.33, 16

	.type	.Lconst.34,@object
	.section	.rodata..Lconst.34,"a",@progbits
.Lconst.34:
	.asciz	"NDK was not found at $ANDROID_HOME/ndk-bundle. NDK can be installed in Android Studio > SDK Manager."
	.size	.Lconst.34, 101

	.type	command_line_arguments.NDKPath..f,@object
	.section	.rodata.command_line_arguments.NDKPath..f,"a",@progbits
	.globl	command_line_arguments.NDKPath..f
	.p2align	3
command_line_arguments.NDKPath..f:
	.quad	command_line_arguments.NDKPath
	.size	command_line_arguments.NDKPath..f, 8

	.type	.Lconst.37,@object
	.section	.rodata..Lconst.37,"a",@progbits
	.p2align	4
.Lconst.37:
	.zero	24
	.size	.Lconst.37, 24

	.type	.Lconst.38,@object
	.section	.rodata..Lconst.38,"a",@progbits
.Lconst.38:
	.asciz	"-target %s -gcc-toolchain %s"
	.size	.Lconst.38, 29

	.type	.Lconst.40,@object
	.section	.rodata..Lconst.40,"a",@progbits
.Lconst.40:
	.asciz	"%s --sysroot %s -isystem %s -D__ANDROID_API__=%s"
	.size	.Lconst.40, 49

	.type	.Lconst.42,@object
	.section	.rodata..Lconst.42,"a",@progbits
.Lconst.42:
	.asciz	"%s --sysroot %s"
	.size	.Lconst.42, 16

	.type	.Lconst.44,@object
	.section	.rodata..Lconst.44,"a",@progbits
.Lconst.44:
	.asciz	"GOARCH="
	.size	.Lconst.44, 8

	.type	.Lconst.45,@object
	.section	.rodata..Lconst.45,"a",@progbits
	.p2align	3
.Lconst.45:
	.quad	.Lconst.44
	.quad	7
	.size	.Lconst.45, 16

	.type	.Lconst.46,@object
	.section	.rodata..Lconst.46,"a",@progbits
.Lconst.46:
	.asciz	"CC="
	.size	.Lconst.46, 4

	.type	.Lconst.47,@object
	.section	.rodata..Lconst.47,"a",@progbits
	.p2align	3
.Lconst.47:
	.quad	.Lconst.46
	.quad	3
	.size	.Lconst.47, 16

	.type	.Lconst.48,@object
	.section	.rodata..Lconst.48,"a",@progbits
.Lconst.48:
	.asciz	"CXX="
	.size	.Lconst.48, 5

	.type	.Lconst.49,@object
	.section	.rodata..Lconst.49,"a",@progbits
	.p2align	3
.Lconst.49:
	.quad	.Lconst.48
	.quad	4
	.size	.Lconst.49, 16

	.type	.Lconst.50,@object
	.section	.rodata..Lconst.50,"a",@progbits
.Lconst.50:
	.asciz	"CGO_CFLAGS="
	.size	.Lconst.50, 12

	.type	.Lconst.51,@object
	.section	.rodata..Lconst.51,"a",@progbits
	.p2align	3
.Lconst.51:
	.quad	.Lconst.50
	.quad	11
	.size	.Lconst.51, 16

	.type	.Lconst.52,@object
	.section	.rodata..Lconst.52,"a",@progbits
.Lconst.52:
	.asciz	"CGO_CPPFLAGS="
	.size	.Lconst.52, 14

	.type	.Lconst.53,@object
	.section	.rodata..Lconst.53,"a",@progbits
	.p2align	3
.Lconst.53:
	.quad	.Lconst.52
	.quad	13
	.size	.Lconst.53, 16

	.type	.Lconst.54,@object
	.section	.rodata..Lconst.54,"a",@progbits
.Lconst.54:
	.asciz	"CGO_LDFLAGS="
	.size	.Lconst.54, 13

	.type	.Lconst.55,@object
	.section	.rodata..Lconst.55,"a",@progbits
	.p2align	3
.Lconst.55:
	.quad	.Lconst.54
	.quad	12
	.size	.Lconst.55, 16

	.type	.Lconst.56,@object
	.section	.rodata..Lconst.56,"a",@progbits
.Lconst.56:
	.asciz	"GOOS=android"
	.size	.Lconst.56, 13

	.type	.Lconst.57,@object
	.section	.rodata..Lconst.57,"a",@progbits
	.p2align	3
.Lconst.57:
	.quad	.Lconst.56
	.quad	12
	.size	.Lconst.57, 16

	.type	.Lconst.58,@object
	.section	.rodata..Lconst.58,"a",@progbits
.Lconst.58:
	.asciz	"CGO_ENABLED=1"
	.size	.Lconst.58, 14

	.type	.Lconst.59,@object
	.section	.rodata..Lconst.59,"a",@progbits
	.p2align	3
.Lconst.59:
	.quad	.Lconst.58
	.quad	13
	.size	.Lconst.59, 16

	.type	type...68x.7string,@object
	.section	.rodata.type...68x.7string,"aG",@progbits,type...68x.7string,comdat
	.weak	type...68x.7string
	.p2align	4
type...68x.7string:
	.quad	128
	.quad	120
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkwa
	.quad	go..C6
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	8
	.size	type...68x.7string, 96

	.type	gcbits..wkwa,@object
	.section	.rodata.gcbits..wkwa,"aG",@progbits,gcbits..wkwa,comdat
	.weak	gcbits..wkwa
gcbits..wkwa:
	.zero	2,85
	.size	gcbits..wkwa, 2

	.type	.Lconst.60,@object
	.section	.rodata..Lconst.60,"a",@progbits
.Lconst.60:
	.asciz	"[8]string"
	.size	.Lconst.60, 10

	.type	go..C6,@object
	.section	.rodata.go..C6,"a",@progbits
	.p2align	3
go..C6:
	.quad	.Lconst.60
	.quad	9
	.size	go..C6, 16

	.type	type...6.7string,@object
	.section	.rodata.type...6.7string,"aG",@progbits,type...6.7string,comdat
	.weak	type...6.7string
	.p2align	4
type...6.7string:
	.quad	24
	.quad	8
	.long	2296014504
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C7
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...6.7string, 80

	.type	.Lconst.61,@object
	.section	.rodata..Lconst.61,"a",@progbits
.Lconst.61:
	.asciz	"[]string"
	.size	.Lconst.61, 9

	.type	go..C7,@object
	.section	.rodata.go..C7,"a",@progbits
	.p2align	3
go..C7:
	.quad	.Lconst.61
	.quad	8
	.size	go..C7, 16

	.type	.Lconst.62,@object
	.section	.rodata..Lconst.62,"a",@progbits
.Lconst.62:
	.asciz	"arm"
	.size	.Lconst.62, 4

	.type	.Lconst.63,@object
	.section	.rodata..Lconst.63,"a",@progbits
.Lconst.63:
	.asciz	"GOARM=7"
	.size	.Lconst.63, 8

	.type	.Lconst.64,@object
	.section	.rodata..Lconst.64,"a",@progbits
	.p2align	3
.Lconst.64:
	.quad	.Lconst.63
	.quad	7
	.size	.Lconst.64, 16

	.type	.Lconst.65,@object
	.section	.rodata..Lconst.65,"a",@progbits
	.p2align	3
.Lconst.65:
	.quad	.Lconst.62
	.quad	3
	.size	.Lconst.65, 16

	.type	command_line_arguments.AndroidEnv..f,@object
	.section	.rodata.command_line_arguments.AndroidEnv..f,"a",@progbits
	.globl	command_line_arguments.AndroidEnv..f
	.p2align	3
command_line_arguments.AndroidEnv..f:
	.quad	command_line_arguments.AndroidEnv
	.size	command_line_arguments.AndroidEnv..f, 8

	.type	command_line_arguments..command_line_arguments.ndkToolchain..d,@object
	.section	.rodata.command_line_arguments..command_line_arguments.ndkToolchain..d,"a",@progbits
	.globl	command_line_arguments..command_line_arguments.ndkToolchain..d
	.p2align	4
command_line_arguments..command_line_arguments.ndkToolchain..d:
	.quad	112
	.quad	104
	.long	3009741464
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.ndkToolchain..hash..f
	.quad	command_line_arguments.command_line_arguments.ndkToolchain..eq..f
	.quad	gcbits..wkfa
	.quad	go..C8
	.quad	go..C12
	.quad	type...1command_line_arguments.ndkToolchain
	.quad	go..C49
	.quad	7
	.quad	7
	.size	command_line_arguments..command_line_arguments.ndkToolchain..d, 96

	.type	command_line_arguments.command_line_arguments.ndkToolchain..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.ndkToolchain..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.ndkToolchain..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.ndkToolchain..hash..f:
	.quad	command_line_arguments.command_line_arguments.ndkToolchain..hash
	.size	command_line_arguments.command_line_arguments.ndkToolchain..hash..f, 8

	.type	command_line_arguments.command_line_arguments.ndkToolchain..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.ndkToolchain..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.ndkToolchain..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.ndkToolchain..eq..f:
	.quad	command_line_arguments.command_line_arguments.ndkToolchain..eq
	.size	command_line_arguments.command_line_arguments.ndkToolchain..eq..f, 8

	.type	gcbits..wkfa,@object
	.section	.rodata.gcbits..wkfa,"aG",@progbits,gcbits..wkfa,comdat
	.weak	gcbits..wkfa
gcbits..wkfa:
	.ascii	"U\025"
	.size	gcbits..wkfa, 2

	.type	.Lconst.66,@object
	.section	.rodata..Lconst.66,"a",@progbits
.Lconst.66:
	.asciz	"\tcommand_line_arguments\tcmd.ndkToolchain"
	.size	.Lconst.66, 41

	.type	go..C8,@object
	.section	.rodata.go..C8,"a",@progbits
	.p2align	3
go..C8:
	.quad	.Lconst.66
	.quad	40
	.size	go..C8, 16

	.type	.Lconst.67,@object
	.section	.rodata..Lconst.67,"a",@progbits
.Lconst.67:
	.asciz	"ndkToolchain"
	.size	.Lconst.67, 13

	.type	go..C9,@object
	.section	.rodata.go..C9,"a",@progbits
	.p2align	3
go..C9:
	.quad	.Lconst.67
	.quad	12
	.size	go..C9, 16

	.type	.Lconst.68,@object
	.section	.rodata..Lconst.68,"a",@progbits
.Lconst.68:
	.asciz	"command-line-arguments"
	.size	.Lconst.68, 23

	.type	go..C10,@object
	.section	.rodata.go..C10,"a",@progbits
	.p2align	3
go..C10:
	.quad	.Lconst.68
	.quad	22
	.size	go..C10, 16

	.type	go..C11,@object
	.section	.bss.go..C11,"aw",@nobits
	.p2align	4
go..C11:
	.zero	40
	.size	go..C11, 40

	.type	go..C12,@object
	.section	.rodata.go..C12,"a",@progbits
	.p2align	4
go..C12:
	.quad	go..C9
	.quad	go..C10
	.quad	go..C11
	.quad	0
	.quad	0
	.size	go..C12, 40

	.type	type...1command_line_arguments.ndkToolchain,@object
	.section	.rodata.type...1command_line_arguments.ndkToolchain,"aG",@progbits,type...1command_line_arguments.ndkToolchain,comdat
	.weak	type...1command_line_arguments.ndkToolchain
	.p2align	4
type...1command_line_arguments.ndkToolchain:
	.quad	8
	.quad	8
	.long	911223177
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C13
	.quad	go..C33
	.quad	type...1.1command_line_arguments.ndkToolchain
	.quad	command_line_arguments..command_line_arguments.ndkToolchain..d
	.size	type...1command_line_arguments.ndkToolchain, 80

	.type	.Lconst.69,@object
	.section	.rodata..Lconst.69,"a",@progbits
.Lconst.69:
	.asciz	"*\tcommand_line_arguments\tcmd.ndkToolchain"
	.size	.Lconst.69, 42

	.type	go..C13,@object
	.section	.rodata.go..C13,"a",@progbits
	.p2align	3
go..C13:
	.quad	.Lconst.69
	.quad	41
	.size	go..C13, 16

	.type	.Lconst.70,@object
	.section	.rodata..Lconst.70,"a",@progbits
.Lconst.70:
	.asciz	"clangPath"
	.size	.Lconst.70, 10

	.type	go..C14,@object
	.section	.rodata.go..C14,"a",@progbits
	.p2align	3
go..C14:
	.quad	.Lconst.70
	.quad	9
	.size	go..C14, 16

	.type	go..C15,@object
	.section	.rodata.go..C15,"a",@progbits
	.p2align	3
go..C15:
	.quad	.Lconst.68
	.quad	22
	.size	go..C15, 16

	.type	type..func.8.9.8string.9,@object
	.section	.rodata.type..func.8.9.8string.9,"aG",@progbits,type..func.8.9.8string.9,comdat
	.weak	type..func.8.9.8string.9
	.p2align	4
type..func.8.9.8string.9:
	.quad	8
	.quad	8
	.long	916039304
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C16
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C17
	.quad	0
	.quad	0
	.quad	go..C18
	.quad	1
	.quad	1
	.size	type..func.8.9.8string.9, 128

	.type	.Lconst.71,@object
	.section	.rodata..Lconst.71,"a",@progbits
.Lconst.71:
	.asciz	"func() string"
	.size	.Lconst.71, 14

	.type	go..C16,@object
	.section	.rodata.go..C16,"a",@progbits
	.p2align	3
go..C16:
	.quad	.Lconst.71
	.quad	13
	.size	go..C16, 16

	.type	go..C17,@object
	.section	.bss.go..C17,"aw",@nobits
	.p2align	3
go..C17:
	.zero	8
	.size	go..C17, 8

	.type	go..C18,@object
	.section	.data.go..C18,"aw",@progbits
	.p2align	3
go..C18:
	.quad	string..d
	.size	go..C18, 8

	.type	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.ndkToolchain.9.8string.9,"aG",@progbits,type..func.8.1command_line_arguments.ndkToolchain.9.8string.9,comdat
	.weak	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9
	.p2align	4
type..func.8.1command_line_arguments.ndkToolchain.9.8string.9:
	.quad	8
	.quad	8
	.long	10409896
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C19
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C20
	.quad	1
	.quad	1
	.quad	go..C21
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9, 128

	.type	.Lconst.72,@object
	.section	.rodata..Lconst.72,"a",@progbits
.Lconst.72:
	.asciz	"func(*\tcommand_line_arguments\tcmd.ndkToolchain) string"
	.size	.Lconst.72, 55

	.type	go..C19,@object
	.section	.rodata.go..C19,"a",@progbits
	.p2align	3
go..C19:
	.quad	.Lconst.72
	.quad	54
	.size	go..C19, 16

	.type	go..C20,@object
	.section	.data.go..C20,"aw",@progbits
	.p2align	3
go..C20:
	.quad	type...1command_line_arguments.ndkToolchain
	.size	go..C20, 8

	.type	go..C21,@object
	.section	.data.go..C21,"aw",@progbits
	.p2align	3
go..C21:
	.quad	string..d
	.size	go..C21, 8

	.type	.Lconst.73,@object
	.section	.rodata..Lconst.73,"a",@progbits
.Lconst.73:
	.asciz	"clangppPath"
	.size	.Lconst.73, 12

	.type	go..C22,@object
	.section	.rodata.go..C22,"a",@progbits
	.p2align	3
go..C22:
	.quad	.Lconst.73
	.quad	11
	.size	go..C22, 16

	.type	go..C23,@object
	.section	.rodata.go..C23,"a",@progbits
	.p2align	3
go..C23:
	.quad	.Lconst.68
	.quad	22
	.size	go..C23, 16

	.type	.Lconst.74,@object
	.section	.rodata..Lconst.74,"a",@progbits
.Lconst.74:
	.asciz	"csysroot"
	.size	.Lconst.74, 9

	.type	go..C24,@object
	.section	.rodata.go..C24,"a",@progbits
	.p2align	3
go..C24:
	.quad	.Lconst.74
	.quad	8
	.size	go..C24, 16

	.type	go..C25,@object
	.section	.rodata.go..C25,"a",@progbits
	.p2align	3
go..C25:
	.quad	.Lconst.68
	.quad	22
	.size	go..C25, 16

	.type	.Lconst.75,@object
	.section	.rodata..Lconst.75,"a",@progbits
.Lconst.75:
	.asciz	"gccToolchain"
	.size	.Lconst.75, 13

	.type	go..C26,@object
	.section	.rodata.go..C26,"a",@progbits
	.p2align	3
go..C26:
	.quad	.Lconst.75
	.quad	12
	.size	go..C26, 16

	.type	go..C27,@object
	.section	.rodata.go..C27,"a",@progbits
	.p2align	3
go..C27:
	.quad	.Lconst.68
	.quad	22
	.size	go..C27, 16

	.type	.Lconst.76,@object
	.section	.rodata..Lconst.76,"a",@progbits
.Lconst.76:
	.asciz	"isystem"
	.size	.Lconst.76, 8

	.type	go..C28,@object
	.section	.rodata.go..C28,"a",@progbits
	.p2align	3
go..C28:
	.quad	.Lconst.76
	.quad	7
	.size	go..C28, 16

	.type	go..C29,@object
	.section	.rodata.go..C29,"a",@progbits
	.p2align	3
go..C29:
	.quad	.Lconst.68
	.quad	22
	.size	go..C29, 16

	.type	.Lconst.77,@object
	.section	.rodata..Lconst.77,"a",@progbits
.Lconst.77:
	.asciz	"ldsysroot"
	.size	.Lconst.77, 10

	.type	go..C30,@object
	.section	.rodata.go..C30,"a",@progbits
	.p2align	3
go..C30:
	.quad	.Lconst.77
	.quad	9
	.size	go..C30, 16

	.type	go..C31,@object
	.section	.rodata.go..C31,"a",@progbits
	.p2align	3
go..C31:
	.quad	.Lconst.68
	.quad	22
	.size	go..C31, 16

	.type	go..C32,@object
	.section	.data.go..C32,"aw",@progbits
	.p2align	4
go..C32:
	.quad	go..C14
	.quad	go..C15
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9
	.quad	command_line_arguments.ndkToolchain.clangPath
	.quad	go..C22
	.quad	go..C23
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9
	.quad	command_line_arguments.ndkToolchain.clangppPath
	.quad	go..C24
	.quad	go..C25
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9
	.quad	command_line_arguments.ndkToolchain.csysroot
	.quad	go..C26
	.quad	go..C27
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9
	.quad	command_line_arguments.ndkToolchain.gccToolchain
	.quad	go..C28
	.quad	go..C29
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9
	.quad	command_line_arguments.ndkToolchain.isystem
	.quad	go..C30
	.quad	go..C31
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.ndkToolchain.9.8string.9
	.quad	command_line_arguments.ndkToolchain.ldsysroot
	.size	go..C32, 240

	.type	go..C33,@object
	.section	.rodata.go..C33,"a",@progbits
	.p2align	4
go..C33:
	.quad	0
	.quad	0
	.quad	go..C32
	.quad	6
	.quad	6
	.size	go..C33, 40

	.type	type...1.1command_line_arguments.ndkToolchain,@object
	.section	.rodata.type...1.1command_line_arguments.ndkToolchain,"aG",@progbits,type...1.1command_line_arguments.ndkToolchain,comdat
	.weak	type...1.1command_line_arguments.ndkToolchain
	.p2align	4
type...1.1command_line_arguments.ndkToolchain:
	.quad	8
	.quad	8
	.long	1694668953
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C34
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.ndkToolchain
	.size	type...1.1command_line_arguments.ndkToolchain, 80

	.type	.Lconst.78,@object
	.section	.rodata..Lconst.78,"a",@progbits
.Lconst.78:
	.asciz	"**\tcommand_line_arguments\tcmd.ndkToolchain"
	.size	.Lconst.78, 43

	.type	go..C34,@object
	.section	.rodata.go..C34,"a",@progbits
	.p2align	3
go..C34:
	.quad	.Lconst.78
	.quad	42
	.size	go..C34, 16

	.type	.Lconst.79,@object
	.section	.rodata..Lconst.79,"a",@progbits
.Lconst.79:
	.asciz	"arch"
	.size	.Lconst.79, 5

	.type	go..C35,@object
	.section	.rodata.go..C35,"a",@progbits
	.p2align	3
go..C35:
	.quad	.Lconst.79
	.quad	4
	.size	go..C35, 16

	.type	go..C36,@object
	.section	.rodata.go..C36,"a",@progbits
	.p2align	3
go..C36:
	.quad	.Lconst.68
	.quad	22
	.size	go..C36, 16

	.type	.Lconst.80,@object
	.section	.rodata..Lconst.80,"a",@progbits
.Lconst.80:
	.asciz	"api"
	.size	.Lconst.80, 4

	.type	go..C37,@object
	.section	.rodata.go..C37,"a",@progbits
	.p2align	3
go..C37:
	.quad	.Lconst.80
	.quad	3
	.size	go..C37, 16

	.type	go..C38,@object
	.section	.rodata.go..C38,"a",@progbits
	.p2align	3
go..C38:
	.quad	.Lconst.68
	.quad	22
	.size	go..C38, 16

	.type	.Lconst.81,@object
	.section	.rodata..Lconst.81,"a",@progbits
.Lconst.81:
	.asciz	"gcc"
	.size	.Lconst.81, 4

	.type	go..C39,@object
	.section	.rodata.go..C39,"a",@progbits
	.p2align	3
go..C39:
	.quad	.Lconst.81
	.quad	3
	.size	go..C39, 16

	.type	go..C40,@object
	.section	.rodata.go..C40,"a",@progbits
	.p2align	3
go..C40:
	.quad	.Lconst.68
	.quad	22
	.size	go..C40, 16

	.type	.Lconst.82,@object
	.section	.rodata..Lconst.82,"a",@progbits
.Lconst.82:
	.asciz	"triple"
	.size	.Lconst.82, 7

	.type	go..C41,@object
	.section	.rodata.go..C41,"a",@progbits
	.p2align	3
go..C41:
	.quad	.Lconst.82
	.quad	6
	.size	go..C41, 16

	.type	go..C42,@object
	.section	.rodata.go..C42,"a",@progbits
	.p2align	3
go..C42:
	.quad	.Lconst.68
	.quad	22
	.size	go..C42, 16

	.type	.Lconst.83,@object
	.section	.rodata..Lconst.83,"a",@progbits
.Lconst.83:
	.asciz	"clangTriple"
	.size	.Lconst.83, 12

	.type	go..C43,@object
	.section	.rodata.go..C43,"a",@progbits
	.p2align	3
go..C43:
	.quad	.Lconst.83
	.quad	11
	.size	go..C43, 16

	.type	go..C44,@object
	.section	.rodata.go..C44,"a",@progbits
	.p2align	3
go..C44:
	.quad	.Lconst.68
	.quad	22
	.size	go..C44, 16

	.type	.Lconst.84,@object
	.section	.rodata..Lconst.84,"a",@progbits
.Lconst.84:
	.asciz	"ndkRoot"
	.size	.Lconst.84, 8

	.type	go..C45,@object
	.section	.rodata.go..C45,"a",@progbits
	.p2align	3
go..C45:
	.quad	.Lconst.84
	.quad	7
	.size	go..C45, 16

	.type	go..C46,@object
	.section	.rodata.go..C46,"a",@progbits
	.p2align	3
go..C46:
	.quad	.Lconst.68
	.quad	22
	.size	go..C46, 16

	.type	.Lconst.85,@object
	.section	.rodata..Lconst.85,"a",@progbits
.Lconst.85:
	.asciz	"hostTag"
	.size	.Lconst.85, 8

	.type	go..C47,@object
	.section	.rodata.go..C47,"a",@progbits
	.p2align	3
go..C47:
	.quad	.Lconst.85
	.quad	7
	.size	go..C47, 16

	.type	go..C48,@object
	.section	.rodata.go..C48,"a",@progbits
	.p2align	3
go..C48:
	.quad	.Lconst.68
	.quad	22
	.size	go..C48, 16

	.type	go..C49,@object
	.section	.data.go..C49,"aw",@progbits
	.p2align	4
go..C49:
	.quad	go..C35
	.quad	go..C36
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C37
	.quad	go..C38
	.quad	string..d
	.quad	0
	.quad	32
	.quad	go..C39
	.quad	go..C40
	.quad	string..d
	.quad	0
	.quad	64
	.quad	go..C41
	.quad	go..C42
	.quad	string..d
	.quad	0
	.quad	96
	.quad	go..C43
	.quad	go..C44
	.quad	string..d
	.quad	0
	.quad	128
	.quad	go..C45
	.quad	go..C46
	.quad	string..d
	.quad	0
	.quad	160
	.quad	go..C47
	.quad	go..C48
	.quad	string..d
	.quad	0
	.quad	192
	.size	go..C49, 280

	.type	.Lconst.86,@object
	.section	.rodata..Lconst.86,"a",@progbits
.Lconst.86:
	.asciz	"15"
	.size	.Lconst.86, 3

	.type	.Lconst.87,@object
	.section	.rodata..Lconst.87,"a",@progbits
.Lconst.87:
	.asciz	"arm-linux-androideabi-4.9"
	.size	.Lconst.87, 26

	.type	.Lconst.88,@object
	.section	.rodata..Lconst.88,"a",@progbits
.Lconst.88:
	.asciz	"arm-linux-androideabi"
	.size	.Lconst.88, 22

	.type	.Lconst.89,@object
	.section	.rodata..Lconst.89,"a",@progbits
.Lconst.89:
	.asciz	"armv7a-none-linux-androideabi"
	.size	.Lconst.89, 30

	.type	.Lconst.90,@object
	.section	.rodata..Lconst.90,"a",@progbits
	.p2align	4
.Lconst.90:
	.quad	.Lconst.62
	.quad	3
	.quad	.Lconst.86
	.quad	2
	.quad	.Lconst.87
	.quad	25
	.quad	.Lconst.88
	.quad	21
	.quad	.Lconst.89
	.quad	29
	.zero	16
	.zero	16
	.size	.Lconst.90, 112

	.type	.Lconst.91,@object
	.section	.rodata..Lconst.91,"a",@progbits
.Lconst.91:
	.asciz	"arm64"
	.size	.Lconst.91, 6

	.type	.Lconst.92,@object
	.section	.rodata..Lconst.92,"a",@progbits
.Lconst.92:
	.asciz	"21"
	.size	.Lconst.92, 3

	.type	.Lconst.93,@object
	.section	.rodata..Lconst.93,"a",@progbits
.Lconst.93:
	.asciz	"aarch64-linux-android-4.9"
	.size	.Lconst.93, 26

	.type	.Lconst.94,@object
	.section	.rodata..Lconst.94,"a",@progbits
.Lconst.94:
	.asciz	"aarch64-linux-android"
	.size	.Lconst.94, 22

	.type	.Lconst.95,@object
	.section	.rodata..Lconst.95,"a",@progbits
.Lconst.95:
	.asciz	"aarch64-none-linux-android"
	.size	.Lconst.95, 27

	.type	.Lconst.96,@object
	.section	.rodata..Lconst.96,"a",@progbits
	.p2align	4
.Lconst.96:
	.quad	.Lconst.91
	.quad	5
	.quad	.Lconst.92
	.quad	2
	.quad	.Lconst.93
	.quad	25
	.quad	.Lconst.94
	.quad	21
	.quad	.Lconst.95
	.quad	26
	.zero	16
	.zero	16
	.size	.Lconst.96, 112

	.type	.Lconst.97,@object
	.section	.rodata..Lconst.97,"a",@progbits
.Lconst.97:
	.asciz	"386"
	.size	.Lconst.97, 4

	.type	.Lconst.98,@object
	.section	.rodata..Lconst.98,"a",@progbits
.Lconst.98:
	.asciz	"x86"
	.size	.Lconst.98, 4

	.type	.Lconst.99,@object
	.section	.rodata..Lconst.99,"a",@progbits
.Lconst.99:
	.asciz	"x86-4.9"
	.size	.Lconst.99, 8

	.type	.Lconst.100,@object
	.section	.rodata..Lconst.100,"a",@progbits
.Lconst.100:
	.asciz	"i686-linux-android"
	.size	.Lconst.100, 19

	.type	.Lconst.101,@object
	.section	.rodata..Lconst.101,"a",@progbits
.Lconst.101:
	.asciz	"i686-none-linux-android"
	.size	.Lconst.101, 24

	.type	.Lconst.102,@object
	.section	.rodata..Lconst.102,"a",@progbits
	.p2align	4
.Lconst.102:
	.quad	.Lconst.98
	.quad	3
	.quad	.Lconst.86
	.quad	2
	.quad	.Lconst.99
	.quad	7
	.quad	.Lconst.100
	.quad	18
	.quad	.Lconst.101
	.quad	23
	.zero	16
	.zero	16
	.size	.Lconst.102, 112

	.type	.Lconst.103,@object
	.section	.rodata..Lconst.103,"a",@progbits
.Lconst.103:
	.asciz	"amd64"
	.size	.Lconst.103, 6

	.type	.Lconst.104,@object
	.section	.rodata..Lconst.104,"a",@progbits
.Lconst.104:
	.asciz	"x86_64"
	.size	.Lconst.104, 7

	.type	.Lconst.105,@object
	.section	.rodata..Lconst.105,"a",@progbits
.Lconst.105:
	.asciz	"x86_64-4.9"
	.size	.Lconst.105, 11

	.type	.Lconst.106,@object
	.section	.rodata..Lconst.106,"a",@progbits
.Lconst.106:
	.asciz	"x86_64-linux-android"
	.size	.Lconst.106, 21

	.type	.Lconst.107,@object
	.section	.rodata..Lconst.107,"a",@progbits
.Lconst.107:
	.asciz	"x86_64-none-linux-android"
	.size	.Lconst.107, 26

	.type	.Lconst.108,@object
	.section	.rodata..Lconst.108,"a",@progbits
	.p2align	4
.Lconst.108:
	.quad	.Lconst.104
	.quad	6
	.quad	.Lconst.92
	.quad	2
	.quad	.Lconst.105
	.quad	10
	.quad	.Lconst.106
	.quad	20
	.quad	.Lconst.107
	.quad	25
	.zero	16
	.zero	16
	.size	.Lconst.108, 112

	.type	.Lconst.109,@object
	.section	.rodata..Lconst.109,"a",@progbits
	.p2align	3
.Lconst.109:
	.quad	.Lconst.91
	.quad	5
	.size	.Lconst.109, 16

	.type	.Lconst.110,@object
	.section	.rodata..Lconst.110,"a",@progbits
	.p2align	3
.Lconst.110:
	.quad	.Lconst.97
	.quad	3
	.size	.Lconst.110, 16

	.type	.Lconst.111,@object
	.section	.rodata..Lconst.111,"a",@progbits
	.p2align	3
.Lconst.111:
	.quad	.Lconst.103
	.quad	5
	.size	.Lconst.111, 16

	.type	type..map.6string.7.1command_line_arguments.ndkToolchain,@object
	.section	.rodata.type..map.6string.7.1command_line_arguments.ndkToolchain,"aG",@progbits,type..map.6string.7.1command_line_arguments.ndkToolchain,comdat
	.weak	type..map.6string.7.1command_line_arguments.ndkToolchain
	.p2align	4
type..map.6string.7.1command_line_arguments.ndkToolchain:
	.quad	8
	.quad	8
	.long	3207237683
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C50
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...1command_line_arguments.ndkToolchain
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7.1command_line_arguments.ndkToolchain, 112

	.type	.Lconst.112,@object
	.section	.rodata..Lconst.112,"a",@progbits
.Lconst.112:
	.asciz	"map[string]*\tcommand_line_arguments\tcmd.ndkToolchain"
	.size	.Lconst.112, 53

	.type	go..C50,@object
	.section	.rodata.go..C50,"a",@progbits
	.p2align	3
go..C50:
	.quad	.Lconst.112
	.quad	52
	.size	go..C50, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	3818548100
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C51
	.quad	0
	.quad	0
	.quad	go..C65
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkEGba,@object
	.section	.rodata.gcbits..kwkEGba,"aG",@progbits,gcbits..kwkEGba,comdat
	.weak	gcbits..kwkEGba
gcbits..kwkEGba:
	.ascii	"\252\252\376\003"
	.size	gcbits..kwkEGba, 4

	.type	.Lconst.113,@object
	.section	.rodata..Lconst.113,"a",@progbits
.Lconst.113:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tcmd.ndkToolchain; overflow * }"
	.size	.Lconst.113, 109

	.type	go..C51,@object
	.section	.rodata.go..C51,"a",@progbits
	.p2align	3
go..C51:
	.quad	.Lconst.113
	.quad	108
	.size	go..C51, 16

	.type	.Lconst.114,@object
	.section	.rodata..Lconst.114,"a",@progbits
.Lconst.114:
	.asciz	"topbits"
	.size	.Lconst.114, 8

	.type	go..C52,@object
	.section	.rodata.go..C52,"a",@progbits
	.p2align	3
go..C52:
	.quad	.Lconst.114
	.quad	7
	.size	go..C52, 16

	.type	type...68x.7uint8,@object
	.section	.rodata.type...68x.7uint8,"aG",@progbits,type...68x.7uint8,comdat
	.weak	type...68x.7uint8
	.p2align	4
type...68x.7uint8:
	.quad	8
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C53
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	8
	.size	type...68x.7uint8, 96

	.type	.Lconst.115,@object
	.section	.rodata..Lconst.115,"a",@progbits
.Lconst.115:
	.asciz	"[8]uint8"
	.size	.Lconst.115, 9

	.type	go..C53,@object
	.section	.rodata.go..C53,"a",@progbits
	.p2align	3
go..C53:
	.quad	.Lconst.115
	.quad	8
	.size	go..C53, 16

	.type	uint8..d,@object
	.section	.rodata.uint8..d,"aG",@progbits,uint8..d,comdat
	.weak	uint8..d
	.p2align	4
uint8..d:
	.quad	1
	.quad	0
	.long	264632089
	.byte	136
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C54
	.quad	go..C57
	.quad	type...1uint8
	.size	uint8..d, 72

	.type	.Lconst.116,@object
	.section	.rodata..Lconst.116,"a",@progbits
.Lconst.116:
	.asciz	"uint8"
	.size	.Lconst.116, 6

	.type	go..C54,@object
	.section	.rodata.go..C54,"a",@progbits
	.p2align	3
go..C54:
	.quad	.Lconst.116
	.quad	5
	.size	go..C54, 16

	.type	go..C55,@object
	.section	.rodata.go..C55,"a",@progbits
	.p2align	3
go..C55:
	.quad	.Lconst.116
	.quad	5
	.size	go..C55, 16

	.type	go..C56,@object
	.section	.bss.go..C56,"aw",@nobits
	.p2align	4
go..C56:
	.zero	40
	.size	go..C56, 40

	.type	go..C57,@object
	.section	.rodata.go..C57,"a",@progbits
	.p2align	4
go..C57:
	.quad	go..C55
	.quad	0
	.quad	go..C56
	.quad	0
	.quad	0
	.size	go..C57, 40

	.type	type...1uint8,@object
	.section	.rodata.type...1uint8,"aG",@progbits,type...1uint8,comdat
	.weak	type...1uint8
	.p2align	4
type...1uint8:
	.quad	8
	.quad	8
	.long	4234113433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C58
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...1uint8, 80

	.type	.Lconst.117,@object
	.section	.rodata..Lconst.117,"a",@progbits
.Lconst.117:
	.asciz	"*uint8"
	.size	.Lconst.117, 7

	.type	go..C58,@object
	.section	.rodata.go..C58,"a",@progbits
	.p2align	3
go..C58:
	.quad	.Lconst.117
	.quad	6
	.size	go..C58, 16

	.type	type...6.7uint8,@object
	.section	.rodata.type...6.7uint8,"aG",@progbits,type...6.7uint8,comdat
	.weak	type...6.7uint8
	.p2align	4
type...6.7uint8:
	.quad	24
	.quad	8
	.long	264632103
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C59
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...6.7uint8, 80

	.type	.Lconst.118,@object
	.section	.rodata..Lconst.118,"a",@progbits
.Lconst.118:
	.asciz	"[]uint8"
	.size	.Lconst.118, 8

	.type	go..C59,@object
	.section	.rodata.go..C59,"a",@progbits
	.p2align	3
go..C59:
	.quad	.Lconst.118
	.quad	7
	.size	go..C59, 16

	.type	.Lconst.119,@object
	.section	.rodata..Lconst.119,"a",@progbits
.Lconst.119:
	.asciz	"keys"
	.size	.Lconst.119, 5

	.type	go..C60,@object
	.section	.rodata.go..C60,"a",@progbits
	.p2align	3
go..C60:
	.quad	.Lconst.119
	.quad	4
	.size	go..C60, 16

	.type	.Lconst.120,@object
	.section	.rodata..Lconst.120,"a",@progbits
.Lconst.120:
	.asciz	"values"
	.size	.Lconst.120, 7

	.type	go..C61,@object
	.section	.rodata.go..C61,"a",@progbits
	.p2align	3
go..C61:
	.quad	.Lconst.120
	.quad	6
	.size	go..C61, 16

	.type	type...68x.7.1command_line_arguments.ndkToolchain,@object
	.section	.rodata.type...68x.7.1command_line_arguments.ndkToolchain,"aG",@progbits,type...68x.7.1command_line_arguments.ndkToolchain,comdat
	.weak	type...68x.7.1command_line_arguments.ndkToolchain
	.p2align	4
type...68x.7.1command_line_arguments.ndkToolchain:
	.quad	64
	.quad	64
	.long	1822446369
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C62
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.ndkToolchain
	.quad	type...6.7.1command_line_arguments.ndkToolchain
	.quad	8
	.size	type...68x.7.1command_line_arguments.ndkToolchain, 96

	.type	gcbits..Gh,@object
	.section	.rodata.gcbits..Gh,"aG",@progbits,gcbits..Gh,comdat
	.weak	gcbits..Gh
gcbits..Gh:
	.byte	255
	.size	gcbits..Gh, 1

	.type	.Lconst.121,@object
	.section	.rodata..Lconst.121,"a",@progbits
.Lconst.121:
	.asciz	"[8]*\tcommand_line_arguments\tcmd.ndkToolchain"
	.size	.Lconst.121, 45

	.type	go..C62,@object
	.section	.rodata.go..C62,"a",@progbits
	.p2align	3
go..C62:
	.quad	.Lconst.121
	.quad	44
	.size	go..C62, 16

	.type	type...6.7.1command_line_arguments.ndkToolchain,@object
	.section	.rodata.type...6.7.1command_line_arguments.ndkToolchain,"aG",@progbits,type...6.7.1command_line_arguments.ndkToolchain,comdat
	.weak	type...6.7.1command_line_arguments.ndkToolchain
	.p2align	4
type...6.7.1command_line_arguments.ndkToolchain:
	.quad	24
	.quad	8
	.long	911223191
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C63
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.ndkToolchain
	.size	type...6.7.1command_line_arguments.ndkToolchain, 80

	.type	.Lconst.122,@object
	.section	.rodata..Lconst.122,"a",@progbits
.Lconst.122:
	.asciz	"[]*\tcommand_line_arguments\tcmd.ndkToolchain"
	.size	.Lconst.122, 44

	.type	go..C63,@object
	.section	.rodata.go..C63,"a",@progbits
	.p2align	3
go..C63:
	.quad	.Lconst.122
	.quad	43
	.size	go..C63, 16

	.type	.Lconst.123,@object
	.section	.rodata..Lconst.123,"a",@progbits
.Lconst.123:
	.asciz	"overflow"
	.size	.Lconst.123, 9

	.type	go..C64,@object
	.section	.rodata.go..C64,"a",@progbits
	.p2align	3
go..C64:
	.quad	.Lconst.123
	.quad	8
	.size	go..C64, 16

	.type	go..C65,@object
	.section	.data.go..C65,"aw",@progbits
	.p2align	4
go..C65:
	.quad	go..C52
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C60
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C61
	.quad	0
	.quad	type...68x.7.1command_line_arguments.ndkToolchain
	.quad	0
	.quad	272
	.quad	go..C64
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C65, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	2703464932
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C66
	.quad	0
	.quad	0
	.quad	go..C97
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	gcbits..mb,@object
	.section	.rodata.gcbits..mb,"aG",@progbits,gcbits..mb,comdat
	.weak	gcbits..mb
gcbits..mb:
	.byte	44
	.size	gcbits..mb, 1

	.type	.Lconst.124,@object
	.section	.rodata..Lconst.124,"a",@progbits
.Lconst.124:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tcmd.ndkToolchain; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tcmd.ndkToolchain; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.124, 344

	.type	go..C66,@object
	.section	.rodata.go..C66,"a",@progbits
	.p2align	3
go..C66:
	.quad	.Lconst.124
	.quad	343
	.size	go..C66, 16

	.type	.Lconst.125,@object
	.section	.rodata..Lconst.125,"a",@progbits
.Lconst.125:
	.asciz	"count"
	.size	.Lconst.125, 6

	.type	go..C67,@object
	.section	.rodata.go..C67,"a",@progbits
	.p2align	3
go..C67:
	.quad	.Lconst.125
	.quad	5
	.size	go..C67, 16

	.type	int..d,@object
	.section	.rodata.int..d,"aG",@progbits,int..d,comdat
	.weak	int..d
	.p2align	4
int..d:
	.quad	8
	.quad	0
	.long	876704034
	.byte	130
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C68
	.quad	go..C71
	.quad	type...1int
	.size	int..d, 72

	.type	.Lconst.126,@object
	.section	.rodata..Lconst.126,"a",@progbits
.Lconst.126:
	.asciz	"int"
	.size	.Lconst.126, 4

	.type	go..C68,@object
	.section	.rodata.go..C68,"a",@progbits
	.p2align	3
go..C68:
	.quad	.Lconst.126
	.quad	3
	.size	go..C68, 16

	.type	go..C69,@object
	.section	.rodata.go..C69,"a",@progbits
	.p2align	3
go..C69:
	.quad	.Lconst.126
	.quad	3
	.size	go..C69, 16

	.type	go..C70,@object
	.section	.bss.go..C70,"aw",@nobits
	.p2align	4
go..C70:
	.zero	40
	.size	go..C70, 40

	.type	go..C71,@object
	.section	.rodata.go..C71,"a",@progbits
	.p2align	4
go..C71:
	.quad	go..C69
	.quad	0
	.quad	go..C70
	.quad	0
	.quad	0
	.size	go..C71, 40

	.type	type...1int,@object
	.section	.rodata.type...1int,"aG",@progbits,type...1int,comdat
	.weak	type...1int
	.p2align	4
type...1int:
	.quad	8
	.quad	8
	.long	1142362665
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C72
	.quad	0
	.quad	0
	.quad	int..d
	.size	type...1int, 80

	.type	.Lconst.127,@object
	.section	.rodata..Lconst.127,"a",@progbits
.Lconst.127:
	.asciz	"*int"
	.size	.Lconst.127, 5

	.type	go..C72,@object
	.section	.rodata.go..C72,"a",@progbits
	.p2align	3
go..C72:
	.quad	.Lconst.127
	.quad	4
	.size	go..C72, 16

	.type	.Lconst.128,@object
	.section	.rodata..Lconst.128,"a",@progbits
.Lconst.128:
	.asciz	"flags"
	.size	.Lconst.128, 6

	.type	go..C73,@object
	.section	.rodata.go..C73,"a",@progbits
	.p2align	3
go..C73:
	.quad	.Lconst.128
	.quad	5
	.size	go..C73, 16

	.type	.Lconst.129,@object
	.section	.rodata..Lconst.129,"a",@progbits
.Lconst.129:
	.asciz	"B"
	.size	.Lconst.129, 2

	.type	go..C74,@object
	.section	.rodata.go..C74,"a",@progbits
	.p2align	3
go..C74:
	.quad	.Lconst.129
	.quad	1
	.size	go..C74, 16

	.type	.Lconst.130,@object
	.section	.rodata..Lconst.130,"a",@progbits
.Lconst.130:
	.asciz	"noverflow"
	.size	.Lconst.130, 10

	.type	go..C75,@object
	.section	.rodata.go..C75,"a",@progbits
	.p2align	3
go..C75:
	.quad	.Lconst.130
	.quad	9
	.size	go..C75, 16

	.type	uint16..d,@object
	.section	.rodata.uint16..d,"aG",@progbits,uint16..d,comdat
	.weak	uint16..d
	.p2align	4
uint16..d:
	.quad	2
	.quad	0
	.long	76732288
	.byte	137
	.byte	2
	.byte	2
	.zero	1
	.quad	runtime.memhash16..f
	.quad	runtime.memequal16..f
	.quad	0
	.quad	go..C76
	.quad	go..C79
	.quad	type...1uint16
	.size	uint16..d, 72

	.type	.Lconst.131,@object
	.section	.rodata..Lconst.131,"a",@progbits
.Lconst.131:
	.asciz	"uint16"
	.size	.Lconst.131, 7

	.type	go..C76,@object
	.section	.rodata.go..C76,"a",@progbits
	.p2align	3
go..C76:
	.quad	.Lconst.131
	.quad	6
	.size	go..C76, 16

	.type	go..C77,@object
	.section	.rodata.go..C77,"a",@progbits
	.p2align	3
go..C77:
	.quad	.Lconst.131
	.quad	6
	.size	go..C77, 16

	.type	go..C78,@object
	.section	.bss.go..C78,"aw",@nobits
	.p2align	4
go..C78:
	.zero	40
	.size	go..C78, 40

	.type	go..C79,@object
	.section	.rodata.go..C79,"a",@progbits
	.p2align	4
go..C79:
	.quad	go..C77
	.quad	0
	.quad	go..C78
	.quad	0
	.quad	0
	.size	go..C79, 40

	.type	type...1uint16,@object
	.section	.rodata.type...1uint16,"aG",@progbits,type...1uint16,comdat
	.weak	type...1uint16
	.p2align	4
type...1uint16:
	.quad	8
	.quad	8
	.long	1227716617
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C80
	.quad	0
	.quad	0
	.quad	uint16..d
	.size	type...1uint16, 80

	.type	.Lconst.132,@object
	.section	.rodata..Lconst.132,"a",@progbits
.Lconst.132:
	.asciz	"*uint16"
	.size	.Lconst.132, 8

	.type	go..C80,@object
	.section	.rodata.go..C80,"a",@progbits
	.p2align	3
go..C80:
	.quad	.Lconst.132
	.quad	7
	.size	go..C80, 16

	.type	.Lconst.133,@object
	.section	.rodata..Lconst.133,"a",@progbits
.Lconst.133:
	.asciz	"hash0"
	.size	.Lconst.133, 6

	.type	go..C81,@object
	.section	.rodata.go..C81,"a",@progbits
	.p2align	3
go..C81:
	.quad	.Lconst.133
	.quad	5
	.size	go..C81, 16

	.type	uint32..d,@object
	.section	.rodata.uint32..d,"aG",@progbits,uint32..d,comdat
	.weak	uint32..d
	.p2align	4
uint32..d:
	.quad	4
	.quad	0
	.long	278357906
	.byte	138
	.byte	4
	.byte	4
	.zero	1
	.quad	runtime.memhash32..f
	.quad	runtime.memequal32..f
	.quad	0
	.quad	go..C82
	.quad	go..C85
	.quad	type...1uint32
	.size	uint32..d, 72

	.type	.Lconst.134,@object
	.section	.rodata..Lconst.134,"a",@progbits
.Lconst.134:
	.asciz	"uint32"
	.size	.Lconst.134, 7

	.type	go..C82,@object
	.section	.rodata.go..C82,"a",@progbits
	.p2align	3
go..C82:
	.quad	.Lconst.134
	.quad	6
	.size	go..C82, 16

	.type	go..C83,@object
	.section	.rodata.go..C83,"a",@progbits
	.p2align	3
go..C83:
	.quad	.Lconst.134
	.quad	6
	.size	go..C83, 16

	.type	go..C84,@object
	.section	.bss.go..C84,"aw",@nobits
	.p2align	4
go..C84:
	.zero	40
	.size	go..C84, 40

	.type	go..C85,@object
	.section	.rodata.go..C85,"a",@progbits
	.p2align	4
go..C85:
	.quad	go..C83
	.quad	0
	.quad	go..C84
	.quad	0
	.quad	0
	.size	go..C85, 40

	.type	type...1uint32,@object
	.section	.rodata.type...1uint32,"aG",@progbits,type...1uint32,comdat
	.weak	type...1uint32
	.p2align	4
type...1uint32:
	.quad	8
	.quad	8
	.long	158759209
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C86
	.quad	0
	.quad	0
	.quad	uint32..d
	.size	type...1uint32, 80

	.type	.Lconst.135,@object
	.section	.rodata..Lconst.135,"a",@progbits
.Lconst.135:
	.asciz	"*uint32"
	.size	.Lconst.135, 8

	.type	go..C86,@object
	.section	.rodata.go..C86,"a",@progbits
	.p2align	3
go..C86:
	.quad	.Lconst.135
	.quad	7
	.size	go..C86, 16

	.type	.Lconst.136,@object
	.section	.rodata..Lconst.136,"a",@progbits
.Lconst.136:
	.asciz	"buckets"
	.size	.Lconst.136, 8

	.type	go..C87,@object
	.section	.rodata.go..C87,"a",@progbits
	.p2align	3
go..C87:
	.quad	.Lconst.136
	.quad	7
	.size	go..C87, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	967227465
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C88
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.137,@object
	.section	.rodata..Lconst.137,"a",@progbits
.Lconst.137:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tcmd.ndkToolchain; overflow * }"
	.size	.Lconst.137, 110

	.type	go..C88,@object
	.section	.rodata.go..C88,"a",@progbits
	.p2align	3
go..C88:
	.quad	.Lconst.137
	.quad	109
	.size	go..C88, 16

	.type	.Lconst.138,@object
	.section	.rodata..Lconst.138,"a",@progbits
.Lconst.138:
	.asciz	"oldbuckets"
	.size	.Lconst.138, 11

	.type	go..C89,@object
	.section	.rodata.go..C89,"a",@progbits
	.p2align	3
go..C89:
	.quad	.Lconst.138
	.quad	10
	.size	go..C89, 16

	.type	.Lconst.139,@object
	.section	.rodata..Lconst.139,"a",@progbits
.Lconst.139:
	.asciz	"nevacuate"
	.size	.Lconst.139, 10

	.type	go..C90,@object
	.section	.rodata.go..C90,"a",@progbits
	.p2align	3
go..C90:
	.quad	.Lconst.139
	.quad	9
	.size	go..C90, 16

	.type	uintptr..d,@object
	.section	.rodata.uintptr..d,"aG",@progbits,uintptr..d,comdat
	.weak	uintptr..d
	.p2align	4
uintptr..d:
	.quad	8
	.quad	0
	.long	2806773995
	.byte	140
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C91
	.quad	go..C94
	.quad	type...1uintptr
	.size	uintptr..d, 72

	.type	.Lconst.140,@object
	.section	.rodata..Lconst.140,"a",@progbits
.Lconst.140:
	.asciz	"uintptr"
	.size	.Lconst.140, 8

	.type	go..C91,@object
	.section	.rodata.go..C91,"a",@progbits
	.p2align	3
go..C91:
	.quad	.Lconst.140
	.quad	7
	.size	go..C91, 16

	.type	go..C92,@object
	.section	.rodata.go..C92,"a",@progbits
	.p2align	3
go..C92:
	.quad	.Lconst.140
	.quad	7
	.size	go..C92, 16

	.type	go..C93,@object
	.section	.bss.go..C93,"aw",@nobits
	.p2align	4
go..C93:
	.zero	40
	.size	go..C93, 40

	.type	go..C94,@object
	.section	.rodata.go..C94,"a",@progbits
	.p2align	4
go..C94:
	.quad	go..C92
	.quad	0
	.quad	go..C93
	.quad	0
	.quad	0
	.size	go..C94, 40

	.type	type...1uintptr,@object
	.section	.rodata.type...1uintptr,"aG",@progbits,type...1uintptr,comdat
	.weak	type...1uintptr
	.p2align	4
type...1uintptr:
	.quad	8
	.quad	8
	.long	1958710969
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C95
	.quad	0
	.quad	0
	.quad	uintptr..d
	.size	type...1uintptr, 80

	.type	.Lconst.141,@object
	.section	.rodata..Lconst.141,"a",@progbits
.Lconst.141:
	.asciz	"*uintptr"
	.size	.Lconst.141, 9

	.type	go..C95,@object
	.section	.rodata.go..C95,"a",@progbits
	.p2align	3
go..C95:
	.quad	.Lconst.141
	.quad	8
	.size	go..C95, 16

	.type	.Lconst.142,@object
	.section	.rodata..Lconst.142,"a",@progbits
.Lconst.142:
	.asciz	"extra"
	.size	.Lconst.142, 6

	.type	go..C96,@object
	.section	.rodata.go..C96,"a",@progbits
	.p2align	3
go..C96:
	.quad	.Lconst.142
	.quad	5
	.size	go..C96, 16

	.type	go..C97,@object
	.section	.data.go..C97,"aw",@progbits
	.p2align	4
go..C97:
	.quad	go..C67
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C73
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C74
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C75
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C81
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C87
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C89
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.ndkToolchain.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C90
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C96
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C97, 360

	.type	.Lconst.144,@object
	.section	.rodata..Lconst.144,"a",@progbits
.Lconst.144:
	.asciz	"toolchainForArch(): Unknown arch %v"
	.size	.Lconst.144, 36

	.type	.Lconst.146,@object
	.section	.rodata..Lconst.146,"a",@progbits
.Lconst.146:
	.asciz	"toolchains"
	.size	.Lconst.146, 11

	.type	.Lconst.147,@object
	.section	.rodata..Lconst.147,"a",@progbits
	.p2align	3
.Lconst.147:
	.quad	.Lconst.146
	.quad	10
	.size	.Lconst.147, 16

	.type	.Lconst.148,@object
	.section	.rodata..Lconst.148,"a",@progbits
.Lconst.148:
	.asciz	"prebuilt"
	.size	.Lconst.148, 9

	.type	.Lconst.149,@object
	.section	.rodata..Lconst.149,"a",@progbits
	.p2align	3
.Lconst.149:
	.quad	.Lconst.148
	.quad	8
	.size	.Lconst.149, 16

	.type	.Lconst.150,@object
	.section	.rodata..Lconst.150,"a",@progbits
.Lconst.150:
	.asciz	"llvm"
	.size	.Lconst.150, 5

	.type	.Lconst.151,@object
	.section	.rodata..Lconst.151,"a",@progbits
	.p2align	3
.Lconst.151:
	.quad	.Lconst.150
	.quad	4
	.size	.Lconst.151, 16

	.type	.Lconst.152,@object
	.section	.rodata..Lconst.152,"a",@progbits
.Lconst.152:
	.asciz	"bin"
	.size	.Lconst.152, 4

	.type	.Lconst.153,@object
	.section	.rodata..Lconst.153,"a",@progbits
	.p2align	3
.Lconst.153:
	.quad	.Lconst.152
	.quad	3
	.size	.Lconst.153, 16

	.type	.Lconst.154,@object
	.section	.rodata..Lconst.154,"a",@progbits
.Lconst.154:
	.asciz	"clang"
	.size	.Lconst.154, 6

	.type	.Lconst.155,@object
	.section	.rodata..Lconst.155,"a",@progbits
	.p2align	3
.Lconst.155:
	.quad	.Lconst.154
	.quad	5
	.size	.Lconst.155, 16

	.type	.Lconst.156,@object
	.section	.rodata..Lconst.156,"a",@progbits
.Lconst.156:
	.asciz	"clang++"
	.size	.Lconst.156, 8

	.type	.Lconst.157,@object
	.section	.rodata..Lconst.157,"a",@progbits
	.p2align	3
.Lconst.157:
	.quad	.Lconst.156
	.quad	7
	.size	.Lconst.157, 16

	.type	.Lconst.158,@object
	.section	.rodata..Lconst.158,"a",@progbits
.Lconst.158:
	.asciz	"sysroot"
	.size	.Lconst.158, 8

	.type	.Lconst.159,@object
	.section	.rodata..Lconst.159,"a",@progbits
	.p2align	3
.Lconst.159:
	.quad	.Lconst.158
	.quad	7
	.size	.Lconst.159, 16

	.type	.Lconst.160,@object
	.section	.rodata..Lconst.160,"a",@progbits
.Lconst.160:
	.asciz	"usr"
	.size	.Lconst.160, 4

	.type	.Lconst.161,@object
	.section	.rodata..Lconst.161,"a",@progbits
	.p2align	3
.Lconst.161:
	.quad	.Lconst.160
	.quad	3
	.size	.Lconst.161, 16

	.type	.Lconst.162,@object
	.section	.rodata..Lconst.162,"a",@progbits
.Lconst.162:
	.asciz	"include"
	.size	.Lconst.162, 8

	.type	.Lconst.163,@object
	.section	.rodata..Lconst.163,"a",@progbits
	.p2align	3
.Lconst.163:
	.quad	.Lconst.162
	.quad	7
	.size	.Lconst.163, 16

	.type	.Lconst.164,@object
	.section	.rodata..Lconst.164,"a",@progbits
.Lconst.164:
	.asciz	"arch-"
	.size	.Lconst.164, 6

	.type	.Lconst.165,@object
	.section	.rodata..Lconst.165,"a",@progbits
	.p2align	3
.Lconst.165:
	.quad	.Lconst.164
	.quad	5
	.size	.Lconst.165, 16

	.type	.Lconst.166,@object
	.section	.rodata..Lconst.166,"a",@progbits
.Lconst.166:
	.asciz	"armeabi-v7a"
	.size	.Lconst.166, 12

	.type	.Lconst.168,@object
	.section	.rodata..Lconst.168,"a",@progbits
.Lconst.168:
	.asciz	"arm64-v8a"
	.size	.Lconst.168, 10

	.type	.Lconst.170,@object
	.section	.rodata..Lconst.170,"a",@progbits
	.p2align	3
.Lconst.170:
	.quad	.Lconst.98
	.quad	3
	.size	.Lconst.170, 16

	.type	.Lconst.171,@object
	.section	.rodata..Lconst.171,"a",@progbits
	.p2align	3
.Lconst.171:
	.quad	.Lconst.104
	.quad	6
	.size	.Lconst.171, 16

	.type	command_line_arguments.GetAndroidABI..f,@object
	.section	.rodata.command_line_arguments.GetAndroidABI..f,"a",@progbits
	.globl	command_line_arguments.GetAndroidABI..f
	.p2align	3
command_line_arguments.GetAndroidABI..f:
	.quad	command_line_arguments.GetAndroidABI
	.size	command_line_arguments.GetAndroidABI..f, 8

	.type	.Lconst.172,@object
	.section	.rodata..Lconst.172,"a",@progbits
.Lconst.172:
	.asciz	"windows"
	.size	.Lconst.172, 8

	.type	.Lconst.174,@object
	.section	.rodata..Lconst.174,"a",@progbits
.Lconst.174:
	.asciz	"ndkHostTag(): Unsupported GOARCH %v"
	.size	.Lconst.174, 36

	.type	.Lconst.176,@object
	.section	.rodata..Lconst.176,"a",@progbits
.Lconst.176:
	.asciz	"linux-"
	.size	.Lconst.176, 7

	.type	.Lconst.177,@object
	.section	.rodata..Lconst.177,"a",@progbits
	.p2align	3
.Lconst.177:
	.quad	.Lconst.176
	.quad	6
	.size	.Lconst.177, 16

	.type	.Lconst.182,@object
	.section	.rodata..Lconst.182,"a",@progbits
.Lconst.182:
	.asciz	"The SDK is often located at ~/Android/Sdk on Linux."
	.size	.Lconst.182, 52

	.type	.Lconst.188,@object
	.section	.rodata..Lconst.188,"a",@progbits
.Lconst.188:
	.asciz	"The Java compiler is often located at /usr/local/android-studio/jre/bin on Linux."
	.size	.Lconst.188, 82

	.type	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File,@object
	.section	.rodata.pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File,"aG",@progbits,pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File,comdat
	.weak	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File
	.p2align	3
pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File:
	.quad	type...1os.File
	.quad	os.File.Write
	.size	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..os.File, 16

	.type	.Lconst.195,@object
	.section	.rodata..Lconst.195,"a",@progbits
.Lconst.195:
	.asciz	"AndroidManifest.xml"
	.size	.Lconst.195, 20

	.type	.Lconst.197,@object
	.section	.rodata..Lconst.197,"a",@progbits
.Lconst.197:
	.asciz	"go."
	.size	.Lconst.197, 4

	.type	.Lconst.198,@object
	.section	.rodata..Lconst.198,"a",@progbits
	.p2align	3
.Lconst.198:
	.quad	.Lconst.197
	.quad	3
	.size	.Lconst.198, 16

	.type	.Lconst.199,@object
	.section	.rodata..Lconst.199,"a",@progbits
.Lconst.199:
	.asciz	".gojni"
	.size	.Lconst.199, 7

	.type	.Lconst.200,@object
	.section	.rodata..Lconst.200,"a",@progbits
	.p2align	3
.Lconst.200:
	.quad	.Lconst.199
	.quad	6
	.size	.Lconst.200, 16

	.type	.Lconst.201,@object
	.section	.rodata..Lconst.201,"a",@progbits
.Lconst.201:
	.asciz	"<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=%q>\n<uses-sdk android:minSdkVersion=\"%d\"/></manifest>"
	.size	.Lconst.201, 131

	.type	.Lconst.203,@object
	.section	.rodata..Lconst.203,"a",@progbits
.Lconst.203:
	.asciz	"proguard.txt"
	.size	.Lconst.203, 13

	.type	.Lconst.205,@object
	.section	.rodata..Lconst.205,"a",@progbits
.Lconst.205:
	.asciz	"-keep class go.** { *; }"
	.size	.Lconst.205, 25

	.type	.Lconst.206,@object
	.section	.rodata..Lconst.206,"a",@progbits
	.p2align	3
.Lconst.206:
	.quad	.Lconst.205
	.quad	24
	.size	.Lconst.206, 16

	.type	.Lconst.207,@object
	.section	.rodata..Lconst.207,"a",@progbits
.Lconst.207:
	.asciz	"classes.jar"
	.size	.Lconst.207, 12

	.type	.Lconst.209,@object
	.section	.rodata..Lconst.209,"a",@progbits
.Lconst.209:
	.asciz	"src/main/java"
	.size	.Lconst.209, 14

	.type	.Lconst.210,@object
	.section	.rodata..Lconst.210,"a",@progbits
	.p2align	3
.Lconst.210:
	.quad	.Lconst.209
	.quad	13
	.size	.Lconst.210, 16

	.type	.Lconst.211,@object
	.section	.rodata..Lconst.211,"a",@progbits
.Lconst.211:
	.asciz	"/libgojni.so"
	.size	.Lconst.211, 13

	.type	.Lconst.212,@object
	.section	.rodata..Lconst.212,"a",@progbits
	.p2align	3
.Lconst.212:
	.quad	.Lconst.211
	.quad	12
	.size	.Lconst.212, 16

	.type	.Lconst.213,@object
	.section	.rodata..Lconst.213,"a",@progbits
.Lconst.213:
	.asciz	"jni/"
	.size	.Lconst.213, 5

	.type	.Lconst.214,@object
	.section	.rodata..Lconst.214,"a",@progbits
	.p2align	3
.Lconst.214:
	.quad	.Lconst.213
	.quad	4
	.size	.Lconst.214, 16

	.type	.Lconst.215,@object
	.section	.rodata..Lconst.215,"a",@progbits
.Lconst.215:
	.asciz	"src/main/jniLibs/"
	.size	.Lconst.215, 18

	.type	.Lconst.216,@object
	.section	.rodata..Lconst.216,"a",@progbits
	.p2align	3
.Lconst.216:
	.quad	.Lconst.215
	.quad	17
	.size	.Lconst.216, 16

	.type	type..struct.4.4x.5a0.0.1os.File.5,@object
	.section	.rodata.type..struct.4.4x.5a0.0.1os.File.5,"aG",@progbits,type..struct.4.4x.5a0.0.1os.File.5,comdat
	.weak	type..struct.4.4x.5a0.0.1os.File.5
	.p2align	4
type..struct.4.4x.5a0.0.1os.File.5:
	.quad	8
	.quad	8
	.long	1800758484
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C98
	.quad	0
	.quad	0
	.quad	go..C100
	.quad	1
	.quad	1
	.size	type..struct.4.4x.5a0.0.1os.File.5, 96

	.type	.Lconst.217,@object
	.section	.rodata..Lconst.217,"a",@progbits
.Lconst.217:
	.asciz	"struct { a0 *\tos\tos.File }"
	.size	.Lconst.217, 27

	.type	go..C98,@object
	.section	.rodata.go..C98,"a",@progbits
	.p2align	3
go..C98:
	.quad	.Lconst.217
	.quad	26
	.size	go..C98, 16

	.type	.Lconst.218,@object
	.section	.rodata..Lconst.218,"a",@progbits
.Lconst.218:
	.asciz	"a0"
	.size	.Lconst.218, 3

	.type	go..C99,@object
	.section	.rodata.go..C99,"a",@progbits
	.p2align	3
go..C99:
	.quad	.Lconst.218
	.quad	2
	.size	go..C99, 16

	.type	go..C100,@object
	.section	.data.go..C100,"aw",@progbits
	.p2align	4
go..C100:
	.quad	go..C99
	.quad	0
	.quad	type...1os.File
	.quad	0
	.quad	0
	.size	go..C100, 40

	.type	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File,@object
	.section	.rodata.pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File,"aG",@progbits,pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File,comdat
	.weak	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File
	.p2align	3
pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File:
	.quad	type...1os.File
	.quad	os.File.Read
	.size	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..os.File, 16

	.type	.Lconst.219,@object
	.section	.rodata..Lconst.219,"a",@progbits
.Lconst.219:
	.asciz	"R.txt"
	.size	.Lconst.219, 6

	.type	.Lconst.221,@object
	.section	.rodata..Lconst.221,"a",@progbits
.Lconst.221:
	.asciz	"res/"
	.size	.Lconst.221, 5

	.type	command_line_arguments.BuildAAR..f,@object
	.section	.rodata.command_line_arguments.BuildAAR..f,"a",@progbits
	.globl	command_line_arguments.BuildAAR..f
	.p2align	3
command_line_arguments.BuildAAR..f:
	.quad	command_line_arguments.BuildAAR
	.size	command_line_arguments.BuildAAR..f, 8

	.type	error..d,@object
	.section	.rodata.error..d,"aG",@progbits,error..d,comdat
	.weak	error..d
	.p2align	4
error..d:
	.quad	16
	.quad	16
	.long	2166057687
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C101
	.quad	go..C104
	.quad	type...1error
	.quad	go..C107
	.quad	1
	.quad	1
	.size	error..d, 96

	.type	gcbits..da,@object
	.section	.rodata.gcbits..da,"aG",@progbits,gcbits..da,comdat
	.weak	gcbits..da
gcbits..da:
	.byte	3
	.size	gcbits..da, 1

	.type	.Lconst.223,@object
	.section	.rodata..Lconst.223,"a",@progbits
.Lconst.223:
	.asciz	"error"
	.size	.Lconst.223, 6

	.type	go..C101,@object
	.section	.rodata.go..C101,"a",@progbits
	.p2align	3
go..C101:
	.quad	.Lconst.223
	.quad	5
	.size	go..C101, 16

	.type	go..C102,@object
	.section	.rodata.go..C102,"a",@progbits
	.p2align	3
go..C102:
	.quad	.Lconst.223
	.quad	5
	.size	go..C102, 16

	.type	go..C103,@object
	.section	.bss.go..C103,"aw",@nobits
	.p2align	4
go..C103:
	.zero	40
	.size	go..C103, 40

	.type	go..C104,@object
	.section	.rodata.go..C104,"a",@progbits
	.p2align	4
go..C104:
	.quad	go..C102
	.quad	0
	.quad	go..C103
	.quad	0
	.quad	0
	.size	go..C104, 40

	.type	type...1error,@object
	.section	.rodata.type...1error,"aG",@progbits,type...1error,comdat
	.weak	type...1error
	.p2align	4
type...1error:
	.quad	8
	.quad	8
	.long	297184633
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C105
	.quad	0
	.quad	0
	.quad	error..d
	.size	type...1error, 80

	.type	.Lconst.224,@object
	.section	.rodata..Lconst.224,"a",@progbits
.Lconst.224:
	.asciz	"*error"
	.size	.Lconst.224, 7

	.type	go..C105,@object
	.section	.rodata.go..C105,"a",@progbits
	.p2align	3
go..C105:
	.quad	.Lconst.224
	.quad	6
	.size	go..C105, 16

	.type	.Lconst.225,@object
	.section	.rodata..Lconst.225,"a",@progbits
.Lconst.225:
	.asciz	"Error"
	.size	.Lconst.225, 6

	.type	go..C106,@object
	.section	.rodata.go..C106,"a",@progbits
	.p2align	3
go..C106:
	.quad	.Lconst.225
	.quad	5
	.size	go..C106, 16

	.type	go..C107,@object
	.section	.data.go..C107,"aw",@progbits
	.p2align	4
go..C107:
	.quad	go..C106
	.quad	0
	.quad	type..func.8.9.8string.9
	.size	go..C107, 24

	.type	.Lconst.226,@object
	.section	.rodata..Lconst.226,"a",@progbits
.Lconst.226:
	.asciz	"aar: %s\n"
	.size	.Lconst.226, 9

	.type	type...1command_line_arguments.Flags,@object
	.section	.rodata.type...1command_line_arguments.Flags,"aG",@progbits,type...1command_line_arguments.Flags,comdat
	.weak	type...1command_line_arguments.Flags
	.p2align	4
type...1command_line_arguments.Flags:
	.quad	8
	.quad	8
	.long	2628967129
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C108
	.quad	go..C123
	.quad	type...1.1command_line_arguments.Flags
	.quad	command_line_arguments.Flags..d
	.size	type...1command_line_arguments.Flags, 80

	.type	.Lconst.229,@object
	.section	.rodata..Lconst.229,"a",@progbits
.Lconst.229:
	.asciz	"*\tcommand_line_arguments\tcmd.Flags"
	.size	.Lconst.229, 35

	.type	go..C108,@object
	.section	.rodata.go..C108,"a",@progbits
	.p2align	3
go..C108:
	.quad	.Lconst.229
	.quad	34
	.size	go..C108, 16

	.type	.Lconst.230,@object
	.section	.rodata..Lconst.230,"a",@progbits
.Lconst.230:
	.asciz	"ShouldPrint"
	.size	.Lconst.230, 12

	.type	go..C109,@object
	.section	.rodata.go..C109,"a",@progbits
	.p2align	3
go..C109:
	.quad	.Lconst.230
	.quad	11
	.size	go..C109, 16

	.type	type..func.8.9.8bool.9,@object
	.section	.rodata.type..func.8.9.8bool.9,"aG",@progbits,type..func.8.9.8bool.9,comdat
	.weak	type..func.8.9.8bool.9
	.p2align	4
type..func.8.9.8bool.9:
	.quad	8
	.quad	8
	.long	3933103176
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C110
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C111
	.quad	0
	.quad	0
	.quad	go..C117
	.quad	1
	.quad	1
	.size	type..func.8.9.8bool.9, 128

	.type	.Lconst.231,@object
	.section	.rodata..Lconst.231,"a",@progbits
.Lconst.231:
	.asciz	"func() bool"
	.size	.Lconst.231, 12

	.type	go..C110,@object
	.section	.rodata.go..C110,"a",@progbits
	.p2align	3
go..C110:
	.quad	.Lconst.231
	.quad	11
	.size	go..C110, 16

	.type	go..C111,@object
	.section	.bss.go..C111,"aw",@nobits
	.p2align	3
go..C111:
	.zero	8
	.size	go..C111, 8

	.type	bool..d,@object
	.section	.rodata.bool..d,"aG",@progbits,bool..d,comdat
	.weak	bool..d
	.p2align	4
bool..d:
	.quad	1
	.quad	0
	.long	1537849745
	.byte	129
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C112
	.quad	go..C115
	.quad	type...1bool
	.size	bool..d, 72

	.type	.Lconst.232,@object
	.section	.rodata..Lconst.232,"a",@progbits
.Lconst.232:
	.asciz	"bool"
	.size	.Lconst.232, 5

	.type	go..C112,@object
	.section	.rodata.go..C112,"a",@progbits
	.p2align	3
go..C112:
	.quad	.Lconst.232
	.quad	4
	.size	go..C112, 16

	.type	go..C113,@object
	.section	.rodata.go..C113,"a",@progbits
	.p2align	3
go..C113:
	.quad	.Lconst.232
	.quad	4
	.size	go..C113, 16

	.type	go..C114,@object
	.section	.bss.go..C114,"aw",@nobits
	.p2align	4
go..C114:
	.zero	40
	.size	go..C114, 40

	.type	go..C115,@object
	.section	.rodata.go..C115,"a",@progbits
	.p2align	4
go..C115:
	.quad	go..C113
	.quad	0
	.quad	go..C114
	.quad	0
	.quad	0
	.size	go..C115, 40

	.type	type...1bool,@object
	.section	.rodata.type...1bool,"aG",@progbits,type...1bool,comdat
	.weak	type...1bool
	.p2align	4
type...1bool:
	.quad	8
	.quad	8
	.long	3130759449
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C116
	.quad	0
	.quad	0
	.quad	bool..d
	.size	type...1bool, 80

	.type	.Lconst.233,@object
	.section	.rodata..Lconst.233,"a",@progbits
.Lconst.233:
	.asciz	"*bool"
	.size	.Lconst.233, 6

	.type	go..C116,@object
	.section	.rodata.go..C116,"a",@progbits
	.p2align	3
go..C116:
	.quad	.Lconst.233
	.quad	5
	.size	go..C116, 16

	.type	go..C117,@object
	.section	.data.go..C117,"aw",@progbits
	.p2align	3
go..C117:
	.quad	bool..d
	.size	go..C117, 8

	.type	type..func.8.1command_line_arguments.Flags.9.8bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Flags.9.8bool.9,"aG",@progbits,type..func.8.1command_line_arguments.Flags.9.8bool.9,comdat
	.weak	type..func.8.1command_line_arguments.Flags.9.8bool.9
	.p2align	4
type..func.8.1command_line_arguments.Flags.9.8bool.9:
	.quad	8
	.quad	8
	.long	2160705384
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C118
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C119
	.quad	1
	.quad	1
	.quad	go..C120
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Flags.9.8bool.9, 128

	.type	.Lconst.234,@object
	.section	.rodata..Lconst.234,"a",@progbits
.Lconst.234:
	.asciz	"func(*\tcommand_line_arguments\tcmd.Flags) bool"
	.size	.Lconst.234, 46

	.type	go..C118,@object
	.section	.rodata.go..C118,"a",@progbits
	.p2align	3
go..C118:
	.quad	.Lconst.234
	.quad	45
	.size	go..C118, 16

	.type	go..C119,@object
	.section	.data.go..C119,"aw",@progbits
	.p2align	3
go..C119:
	.quad	type...1command_line_arguments.Flags
	.size	go..C119, 8

	.type	go..C120,@object
	.section	.data.go..C120,"aw",@progbits
	.p2align	3
go..C120:
	.quad	bool..d
	.size	go..C120, 8

	.type	.Lconst.235,@object
	.section	.rodata..Lconst.235,"a",@progbits
.Lconst.235:
	.asciz	"ShouldRun"
	.size	.Lconst.235, 10

	.type	go..C121,@object
	.section	.rodata.go..C121,"a",@progbits
	.p2align	3
go..C121:
	.quad	.Lconst.235
	.quad	9
	.size	go..C121, 16

	.type	go..C122,@object
	.section	.data.go..C122,"aw",@progbits
	.p2align	4
go..C122:
	.quad	go..C109
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.Flags.9.8bool.9
	.quad	command_line_arguments.Flags.ShouldPrint
	.quad	go..C121
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.Flags.9.8bool.9
	.quad	command_line_arguments.Flags.ShouldRun
	.size	go..C122, 80

	.type	go..C123,@object
	.section	.rodata.go..C123,"a",@progbits
	.p2align	4
go..C123:
	.quad	0
	.quad	0
	.quad	go..C122
	.quad	2
	.quad	2
	.size	go..C123, 40

	.type	type...1.1command_line_arguments.Flags,@object
	.section	.rodata.type...1.1command_line_arguments.Flags,"aG",@progbits,type...1.1command_line_arguments.Flags,comdat
	.weak	type...1.1command_line_arguments.Flags
	.p2align	4
type...1.1command_line_arguments.Flags:
	.quad	8
	.quad	8
	.long	3408768409
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C124
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Flags
	.size	type...1.1command_line_arguments.Flags, 80

	.type	.Lconst.236,@object
	.section	.rodata..Lconst.236,"a",@progbits
.Lconst.236:
	.asciz	"**\tcommand_line_arguments\tcmd.Flags"
	.size	.Lconst.236, 36

	.type	go..C124,@object
	.section	.rodata.go..C124,"a",@progbits
	.p2align	3
go..C124:
	.quad	.Lconst.236
	.quad	35
	.size	go..C124, 16

	.type	command_line_arguments.Flags..d,@object
	.section	.rodata.command_line_arguments.Flags..d,"a",@progbits
	.globl	command_line_arguments.Flags..d
	.p2align	4
command_line_arguments.Flags..d:
	.quad	88
	.quad	80
	.long	1238052269
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Flags..hash..f
	.quad	command_line_arguments.command_line_arguments.Flags..eq..f
	.quad	gcbits..wsaa
	.quad	go..C125
	.quad	go..C129
	.quad	type...1command_line_arguments.Flags
	.quad	go..C143
	.quad	12
	.quad	12
	.size	command_line_arguments.Flags..d, 96

	.type	command_line_arguments.command_line_arguments.Flags..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Flags..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Flags..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Flags..hash..f:
	.quad	command_line_arguments.command_line_arguments.Flags..hash
	.size	command_line_arguments.command_line_arguments.Flags..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Flags..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Flags..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Flags..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Flags..eq..f:
	.quad	command_line_arguments.command_line_arguments.Flags..eq
	.size	command_line_arguments.command_line_arguments.Flags..eq..f, 8

	.type	gcbits..wsaa,@object
	.section	.rodata.gcbits..wsaa,"aG",@progbits,gcbits..wsaa,comdat
	.weak	gcbits..wsaa
gcbits..wsaa:
	.ascii	"U\002"
	.size	gcbits..wsaa, 2

	.type	.Lconst.237,@object
	.section	.rodata..Lconst.237,"a",@progbits
.Lconst.237:
	.asciz	"\tcommand_line_arguments\tcmd.Flags"
	.size	.Lconst.237, 34

	.type	go..C125,@object
	.section	.rodata.go..C125,"a",@progbits
	.p2align	3
go..C125:
	.quad	.Lconst.237
	.quad	33
	.size	go..C125, 16

	.type	.Lconst.238,@object
	.section	.rodata..Lconst.238,"a",@progbits
.Lconst.238:
	.asciz	"Flags"
	.size	.Lconst.238, 6

	.type	go..C126,@object
	.section	.rodata.go..C126,"a",@progbits
	.p2align	3
go..C126:
	.quad	.Lconst.238
	.quad	5
	.size	go..C126, 16

	.type	go..C127,@object
	.section	.rodata.go..C127,"a",@progbits
	.p2align	3
go..C127:
	.quad	.Lconst.68
	.quad	22
	.size	go..C127, 16

	.type	go..C128,@object
	.section	.bss.go..C128,"aw",@nobits
	.p2align	4
go..C128:
	.zero	40
	.size	go..C128, 40

	.type	go..C129,@object
	.section	.rodata.go..C129,"a",@progbits
	.p2align	4
go..C129:
	.quad	go..C126
	.quad	go..C127
	.quad	go..C128
	.quad	0
	.quad	0
	.size	go..C129, 40

	.type	.Lconst.239,@object
	.section	.rodata..Lconst.239,"a",@progbits
.Lconst.239:
	.asciz	"Logger"
	.size	.Lconst.239, 7

	.type	go..C130,@object
	.section	.rodata.go..C130,"a",@progbits
	.p2align	3
go..C130:
	.quad	.Lconst.239
	.quad	6
	.size	go..C130, 16

	.type	.Lconst.240,@object
	.section	.rodata..Lconst.240,"a",@progbits
.Lconst.240:
	.asciz	"Threaded"
	.size	.Lconst.240, 9

	.type	go..C131,@object
	.section	.rodata.go..C131,"a",@progbits
	.p2align	3
go..C131:
	.quad	.Lconst.240
	.quad	8
	.size	go..C131, 16

	.type	.Lconst.241,@object
	.section	.rodata..Lconst.241,"a",@progbits
.Lconst.241:
	.asciz	"disablePrint"
	.size	.Lconst.241, 13

	.type	go..C132,@object
	.section	.rodata.go..C132,"a",@progbits
	.p2align	3
go..C132:
	.quad	.Lconst.241
	.quad	12
	.size	go..C132, 16

	.type	go..C133,@object
	.section	.rodata.go..C133,"a",@progbits
	.p2align	3
go..C133:
	.quad	.Lconst.68
	.quad	22
	.size	go..C133, 16

	.type	.Lconst.242,@object
	.section	.rodata..Lconst.242,"a",@progbits
.Lconst.242:
	.asciz	"BuildN"
	.size	.Lconst.242, 7

	.type	go..C134,@object
	.section	.rodata.go..C134,"a",@progbits
	.p2align	3
go..C134:
	.quad	.Lconst.242
	.quad	6
	.size	go..C134, 16

	.type	.Lconst.243,@object
	.section	.rodata..Lconst.243,"a",@progbits
.Lconst.243:
	.asciz	"BuildX"
	.size	.Lconst.243, 7

	.type	go..C135,@object
	.section	.rodata.go..C135,"a",@progbits
	.p2align	3
go..C135:
	.quad	.Lconst.243
	.quad	6
	.size	go..C135, 16

	.type	.Lconst.244,@object
	.section	.rodata..Lconst.244,"a",@progbits
.Lconst.244:
	.asciz	"BuildV"
	.size	.Lconst.244, 7

	.type	go..C136,@object
	.section	.rodata.go..C136,"a",@progbits
	.p2align	3
go..C136:
	.quad	.Lconst.244
	.quad	6
	.size	go..C136, 16

	.type	.Lconst.245,@object
	.section	.rodata..Lconst.245,"a",@progbits
.Lconst.245:
	.asciz	"BuildWork"
	.size	.Lconst.245, 10

	.type	go..C137,@object
	.section	.rodata.go..C137,"a",@progbits
	.p2align	3
go..C137:
	.quad	.Lconst.245
	.quad	9
	.size	go..C137, 16

	.type	.Lconst.246,@object
	.section	.rodata..Lconst.246,"a",@progbits
.Lconst.246:
	.asciz	"BuildGcflags"
	.size	.Lconst.246, 13

	.type	go..C138,@object
	.section	.rodata.go..C138,"a",@progbits
	.p2align	3
go..C138:
	.quad	.Lconst.246
	.quad	12
	.size	go..C138, 16

	.type	.Lconst.247,@object
	.section	.rodata..Lconst.247,"a",@progbits
.Lconst.247:
	.asciz	"BuildLdflags"
	.size	.Lconst.247, 13

	.type	go..C139,@object
	.section	.rodata.go..C139,"a",@progbits
	.p2align	3
go..C139:
	.quad	.Lconst.247
	.quad	12
	.size	go..C139, 16

	.type	.Lconst.248,@object
	.section	.rodata..Lconst.248,"a",@progbits
.Lconst.248:
	.asciz	"BuildO"
	.size	.Lconst.248, 7

	.type	go..C140,@object
	.section	.rodata.go..C140,"a",@progbits
	.p2align	3
go..C140:
	.quad	.Lconst.248
	.quad	6
	.size	go..C140, 16

	.type	.Lconst.249,@object
	.section	.rodata..Lconst.249,"a",@progbits
.Lconst.249:
	.asciz	"BuildBinary"
	.size	.Lconst.249, 12

	.type	go..C141,@object
	.section	.rodata.go..C141,"a",@progbits
	.p2align	3
go..C141:
	.quad	.Lconst.249
	.quad	11
	.size	go..C141, 16

	.type	.Lconst.250,@object
	.section	.rodata..Lconst.250,"a",@progbits
.Lconst.250:
	.asciz	"BuildTargets"
	.size	.Lconst.250, 13

	.type	go..C142,@object
	.section	.rodata.go..C142,"a",@progbits
	.p2align	3
go..C142:
	.quad	.Lconst.250
	.quad	12
	.size	go..C142, 16

	.type	go..C143,@object
	.section	.data.go..C143,"aw",@progbits
	.p2align	4
go..C143:
	.quad	go..C130
	.quad	0
	.quad	type...1log.Logger
	.quad	0
	.quad	0
	.quad	go..C131
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	16
	.quad	go..C132
	.quad	go..C133
	.quad	bool..d
	.quad	0
	.quad	18
	.quad	go..C134
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	20
	.quad	go..C135
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	22
	.quad	go..C136
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	24
	.quad	go..C137
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	26
	.quad	go..C138
	.quad	0
	.quad	string..d
	.quad	0
	.quad	32
	.quad	go..C139
	.quad	0
	.quad	string..d
	.quad	0
	.quad	64
	.quad	go..C140
	.quad	0
	.quad	string..d
	.quad	0
	.quad	96
	.quad	go..C141
	.quad	0
	.quad	bool..d
	.quad	0
	.quad	128
	.quad	go..C142
	.quad	0
	.quad	string..d
	.quad	0
	.quad	144
	.size	go..C143, 480

	.type	type...61x.7string,@object
	.section	.rodata.type...61x.7string,"aG",@progbits,type...61x.7string,comdat
	.weak	type...61x.7string
	.p2align	4
type...61x.7string:
	.quad	16
	.quad	8
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C144
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	1
	.size	type...61x.7string, 96

	.type	.Lconst.251,@object
	.section	.rodata..Lconst.251,"a",@progbits
.Lconst.251:
	.asciz	"[1]string"
	.size	.Lconst.251, 10

	.type	go..C144,@object
	.section	.rodata.go..C144,"a",@progbits
	.p2align	3
go..C144:
	.quad	.Lconst.251
	.quad	9
	.size	go..C144, 16

	.type	.Lconst.252,@object
	.section	.rodata..Lconst.252,"a",@progbits
.Lconst.252:
	.asciz	"*.java"
	.size	.Lconst.252, 7

	.type	.Lconst.253,@object
	.section	.rodata..Lconst.253,"a",@progbits
	.p2align	3
.Lconst.253:
	.quad	.Lconst.252
	.quad	6
	.size	.Lconst.253, 16

	.type	.Lconst.255,@object
	.section	.rodata..Lconst.255,"a",@progbits
.Lconst.255:
	.asciz	"javac-output"
	.size	.Lconst.255, 13

	.type	.Lconst.256,@object
	.section	.rodata..Lconst.256,"a",@progbits
	.p2align	3
.Lconst.256:
	.quad	.Lconst.255
	.quad	12
	.size	.Lconst.256, 16

	.type	.Lconst.257,@object
	.section	.rodata..Lconst.257,"a",@progbits
.Lconst.257:
	.asciz	"-d"
	.size	.Lconst.257, 3

	.type	.Lconst.258,@object
	.section	.rodata..Lconst.258,"a",@progbits
	.p2align	3
.Lconst.258:
	.quad	.Lconst.257
	.quad	2
	.size	.Lconst.258, 16

	.type	.Lconst.259,@object
	.section	.rodata..Lconst.259,"a",@progbits
.Lconst.259:
	.asciz	"-source"
	.size	.Lconst.259, 8

	.type	.Lconst.260,@object
	.section	.rodata..Lconst.260,"a",@progbits
	.p2align	3
.Lconst.260:
	.quad	.Lconst.259
	.quad	7
	.size	.Lconst.260, 16

	.type	.Lconst.261,@object
	.section	.rodata..Lconst.261,"a",@progbits
.Lconst.261:
	.asciz	"1.7"
	.size	.Lconst.261, 4

	.type	.Lconst.262,@object
	.section	.rodata..Lconst.262,"a",@progbits
	.p2align	3
.Lconst.262:
	.quad	.Lconst.261
	.quad	3
	.size	.Lconst.262, 16

	.type	.Lconst.263,@object
	.section	.rodata..Lconst.263,"a",@progbits
.Lconst.263:
	.asciz	"-target"
	.size	.Lconst.263, 8

	.type	.Lconst.264,@object
	.section	.rodata..Lconst.264,"a",@progbits
	.p2align	3
.Lconst.264:
	.quad	.Lconst.263
	.quad	7
	.size	.Lconst.264, 16

	.type	.Lconst.265,@object
	.section	.rodata..Lconst.265,"a",@progbits
.Lconst.265:
	.asciz	"-bootclasspath"
	.size	.Lconst.265, 15

	.type	.Lconst.266,@object
	.section	.rodata..Lconst.266,"a",@progbits
	.p2align	3
.Lconst.266:
	.quad	.Lconst.265
	.quad	14
	.size	.Lconst.266, 16

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5:
	.quad	24
	.quad	24
	.long	980033924
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ha
	.quad	go..C145
	.quad	0
	.quad	0
	.quad	go..C153
	.quad	3
	.quad	3
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.f1.0.1.1command_line_arguments.Flags.2.command_line_arguments.jarw2.0.1.1archive_zip.Writer.5, 96

	.type	gcbits..ha,@object
	.section	.rodata.gcbits..ha,"aG",@progbits,gcbits..ha,comdat
	.weak	gcbits..ha
gcbits..ha:
	.byte	7
	.size	gcbits..ha, 1

	.type	.Lconst.267,@object
	.section	.rodata..Lconst.267,"a",@progbits
.Lconst.267:
	.asciz	"struct { f *; f1 **\tcommand_line_arguments\tcmd.Flags; jarw2 **\tarchive_zip\tzip.Writer }"
	.size	.Lconst.267, 88

	.type	go..C145,@object
	.section	.rodata.go..C145,"a",@progbits
	.p2align	3
go..C145:
	.quad	.Lconst.267
	.quad	87
	.size	go..C145, 16

	.type	.Lconst.268,@object
	.section	.rodata..Lconst.268,"a",@progbits
.Lconst.268:
	.asciz	"f"
	.size	.Lconst.268, 2

	.type	go..C146,@object
	.section	.rodata.go..C146,"a",@progbits
	.p2align	3
go..C146:
	.quad	.Lconst.268
	.quad	1
	.size	go..C146, 16

	.type	go..C147,@object
	.section	.rodata.go..C147,"a",@progbits
	.p2align	3
go..C147:
	.quad	.Lconst.268
	.quad	1
	.size	go..C147, 16

	.type	.Lconst.269,@object
	.section	.rodata..Lconst.269,"a",@progbits
.Lconst.269:
	.asciz	"f1"
	.size	.Lconst.269, 3

	.type	go..C148,@object
	.section	.rodata.go..C148,"a",@progbits
	.p2align	3
go..C148:
	.quad	.Lconst.269
	.quad	2
	.size	go..C148, 16

	.type	go..C149,@object
	.section	.rodata.go..C149,"a",@progbits
	.p2align	3
go..C149:
	.quad	.Lconst.68
	.quad	22
	.size	go..C149, 16

	.type	.Lconst.270,@object
	.section	.rodata..Lconst.270,"a",@progbits
.Lconst.270:
	.asciz	"jarw2"
	.size	.Lconst.270, 6

	.type	go..C150,@object
	.section	.rodata.go..C150,"a",@progbits
	.p2align	3
go..C150:
	.quad	.Lconst.270
	.quad	5
	.size	go..C150, 16

	.type	go..C151,@object
	.section	.rodata.go..C151,"a",@progbits
	.p2align	3
go..C151:
	.quad	.Lconst.68
	.quad	22
	.size	go..C151, 16

	.type	type...1.1archive_zip.Writer,@object
	.section	.rodata.type...1.1archive_zip.Writer,"aG",@progbits,type...1.1archive_zip.Writer,comdat
	.weak	type...1.1archive_zip.Writer
	.p2align	4
type...1.1archive_zip.Writer:
	.quad	8
	.quad	8
	.long	284289177
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C152
	.quad	0
	.quad	0
	.quad	type...1archive_zip.Writer
	.size	type...1.1archive_zip.Writer, 80

	.type	.Lconst.271,@object
	.section	.rodata..Lconst.271,"a",@progbits
.Lconst.271:
	.asciz	"**\tarchive_zip\tzip.Writer"
	.size	.Lconst.271, 26

	.type	go..C152,@object
	.section	.rodata.go..C152,"a",@progbits
	.p2align	3
go..C152:
	.quad	.Lconst.271
	.quad	25
	.size	go..C152, 16

	.type	go..C153,@object
	.section	.data.go..C153,"aw",@progbits
	.p2align	4
go..C153:
	.quad	go..C146
	.quad	go..C147
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C148
	.quad	go..C149
	.quad	type...1.1command_line_arguments.Flags
	.quad	0
	.quad	16
	.quad	go..C150
	.quad	go..C151
	.quad	type...1.1archive_zip.Writer
	.quad	0
	.quad	32
	.size	go..C153, 120

	.type	.Lconst.272,@object
	.section	.rodata..Lconst.272,"a",@progbits
.Lconst.272:
	.asciz	"META-INF/MANIFEST.MF"
	.size	.Lconst.272, 21

	.type	.Lconst.274,@object
	.section	.rodata..Lconst.274,"a",@progbits
.Lconst.274:
	.asciz	"Manifest-Version: 1.0\nCreated-By: 1.0 (Go)\n\n"
	.size	.Lconst.274, 45

	.type	command_line_arguments.BuildJar..f,@object
	.section	.rodata.command_line_arguments.BuildJar..f,"a",@progbits
	.globl	command_line_arguments.BuildJar..f
	.p2align	3
command_line_arguments.BuildJar..f:
	.quad	command_line_arguments.BuildJar
	.size	command_line_arguments.BuildJar..f, 8

	.type	.Lconst.277,@object
	.section	.rodata..Lconst.277,"a",@progbits
.Lconst.277:
	.asciz	".java"
	.size	.Lconst.277, 6

	.type	.Lconst.278,@object
	.section	.rodata..Lconst.278,"a",@progbits
.Lconst.278:
	.asciz	"."
	.size	.Lconst.278, 2

	.type	.Lconst.279,@object
	.section	.rodata..Lconst.279,"a",@progbits
	.p2align	3
.Lconst.279:
	.quad	.Lconst.278
	.quad	1
	.size	.Lconst.279, 16

	.type	.Lconst.281,@object
	.section	.rodata..Lconst.281,"a",@progbits
.Lconst.281:
	.asciz	"jar: %s\n"
	.size	.Lconst.281, 9

	.type	.Lconst.284,@object
	.section	.rodata..Lconst.284,"a",@progbits
.Lconst.284:
	.asciz	"android"
	.size	.Lconst.284, 8

	.type	.Lconst.285,@object
	.section	.rodata..Lconst.285,"a",@progbits
.Lconst.285:
	.asciz	"ios"
	.size	.Lconst.285, 4

	.type	.Lconst.287,@object
	.section	.rodata..Lconst.287,"a",@progbits
	.p2align	3
.Lconst.287:
	.quad	.Lconst.284
	.quad	7
	.size	.Lconst.287, 16

	.type	type..map.6string.7struct.4.5,@object
	.section	.rodata.type..map.6string.7struct.4.5,"aG",@progbits,type..map.6string.7struct.4.5,comdat
	.weak	type..map.6string.7struct.4.5
	.p2align	4
type..map.6string.7struct.4.5:
	.quad	8
	.quad	8
	.long	2296014518
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C154
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type..struct.4.5
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	0
	.byte	0
	.short	144
	.byte	1
	.byte	1
	.size	type..map.6string.7struct.4.5, 112

	.type	.Lconst.288,@object
	.section	.rodata..Lconst.288,"a",@progbits
.Lconst.288:
	.asciz	"map[string]struct {}"
	.size	.Lconst.288, 21

	.type	go..C154,@object
	.section	.rodata.go..C154,"a",@progbits
	.p2align	3
go..C154:
	.quad	.Lconst.288
	.quad	20
	.size	go..C154, 16

	.type	type..struct.4.5,@object
	.section	.rodata.type..struct.4.5,"aG",@progbits,type..struct.4.5,comdat
	.weak	type..struct.4.5
	.p2align	4
type..struct.4.5:
	.quad	0
	.quad	0
	.long	12
	.byte	153
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash0..f
	.quad	runtime.memequal0..f
	.quad	0
	.quad	go..C155
	.quad	0
	.quad	0
	.quad	go..C156
	.quad	0
	.quad	0
	.size	type..struct.4.5, 96

	.type	.Lconst.289,@object
	.section	.rodata..Lconst.289,"a",@progbits
.Lconst.289:
	.asciz	"struct {}"
	.size	.Lconst.289, 10

	.type	go..C155,@object
	.section	.rodata.go..C155,"a",@progbits
	.p2align	3
go..C155:
	.quad	.Lconst.289
	.quad	9
	.size	go..C155, 16

	.type	go..C156,@object
	.section	.bss.go..C156,"aw",@nobits
	.p2align	4
go..C156:
	.zero	40
	.size	go..C156, 40

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5:
	.quad	144
	.quad	144
	.long	429210596
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkfa
	.quad	go..C157
	.quad	0
	.quad	0
	.quad	go..C164
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkfa,@object
	.section	.rodata.gcbits..kwkfa,"aG",@progbits,gcbits..kwkfa,comdat
	.weak	gcbits..kwkfa
gcbits..kwkfa:
	.ascii	"\252\252\002"
	.size	gcbits..kwkfa, 3

	.type	.Lconst.290,@object
	.section	.rodata..Lconst.290,"a",@progbits
.Lconst.290:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }"
	.size	.Lconst.290, 77

	.type	go..C157,@object
	.section	.rodata.go..C157,"a",@progbits
	.p2align	3
go..C157:
	.quad	.Lconst.290
	.quad	76
	.size	go..C157, 16

	.type	go..C158,@object
	.section	.rodata.go..C158,"a",@progbits
	.p2align	3
go..C158:
	.quad	.Lconst.114
	.quad	7
	.size	go..C158, 16

	.type	go..C159,@object
	.section	.rodata.go..C159,"a",@progbits
	.p2align	3
go..C159:
	.quad	.Lconst.119
	.quad	4
	.size	go..C159, 16

	.type	go..C160,@object
	.section	.rodata.go..C160,"a",@progbits
	.p2align	3
go..C160:
	.quad	.Lconst.120
	.quad	6
	.size	go..C160, 16

	.type	type...68x.7struct.4.5,@object
	.section	.rodata.type...68x.7struct.4.5,"aG",@progbits,type...68x.7struct.4.5,comdat
	.weak	type...68x.7struct.4.5
	.p2align	4
type...68x.7struct.4.5:
	.quad	0
	.quad	0
	.long	39
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C161
	.quad	0
	.quad	0
	.quad	type..struct.4.5
	.quad	type...6.7struct.4.5
	.quad	8
	.size	type...68x.7struct.4.5, 96

	.type	.Lconst.291,@object
	.section	.rodata..Lconst.291,"a",@progbits
.Lconst.291:
	.asciz	"[8]struct {}"
	.size	.Lconst.291, 13

	.type	go..C161,@object
	.section	.rodata.go..C161,"a",@progbits
	.p2align	3
go..C161:
	.quad	.Lconst.291
	.quad	12
	.size	go..C161, 16

	.type	type...6.7struct.4.5,@object
	.section	.rodata.type...6.7struct.4.5,"aG",@progbits,type...6.7struct.4.5,comdat
	.weak	type...6.7struct.4.5
	.p2align	4
type...6.7struct.4.5:
	.quad	24
	.quad	8
	.long	26
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C162
	.quad	0
	.quad	0
	.quad	type..struct.4.5
	.size	type...6.7struct.4.5, 80

	.type	.Lconst.292,@object
	.section	.rodata..Lconst.292,"a",@progbits
.Lconst.292:
	.asciz	"[]struct {}"
	.size	.Lconst.292, 12

	.type	go..C162,@object
	.section	.rodata.go..C162,"a",@progbits
	.p2align	3
go..C162:
	.quad	.Lconst.292
	.quad	11
	.size	go..C162, 16

	.type	go..C163,@object
	.section	.rodata.go..C163,"a",@progbits
	.p2align	3
go..C163:
	.quad	.Lconst.123
	.quad	8
	.size	go..C163, 16

	.type	go..C164,@object
	.section	.data.go..C164,"aw",@progbits
	.p2align	4
go..C164:
	.quad	go..C158
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C159
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C160
	.quad	0
	.quad	type...68x.7struct.4.5
	.quad	0
	.quad	272
	.quad	go..C163
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	272
	.size	go..C164, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	2181421540
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C165
	.quad	0
	.quad	0
	.quad	go..C176
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.293,@object
	.section	.rodata..Lconst.293,"a",@progbits
.Lconst.293:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.293, 280

	.type	go..C165,@object
	.section	.rodata.go..C165,"a",@progbits
	.p2align	3
go..C165:
	.quad	.Lconst.293
	.quad	279
	.size	go..C165, 16

	.type	go..C166,@object
	.section	.rodata.go..C166,"a",@progbits
	.p2align	3
go..C166:
	.quad	.Lconst.125
	.quad	5
	.size	go..C166, 16

	.type	go..C167,@object
	.section	.rodata.go..C167,"a",@progbits
	.p2align	3
go..C167:
	.quad	.Lconst.128
	.quad	5
	.size	go..C167, 16

	.type	go..C168,@object
	.section	.rodata.go..C168,"a",@progbits
	.p2align	3
go..C168:
	.quad	.Lconst.129
	.quad	1
	.size	go..C168, 16

	.type	go..C169,@object
	.section	.rodata.go..C169,"a",@progbits
	.p2align	3
go..C169:
	.quad	.Lconst.130
	.quad	9
	.size	go..C169, 16

	.type	go..C170,@object
	.section	.rodata.go..C170,"a",@progbits
	.p2align	3
go..C170:
	.quad	.Lconst.133
	.quad	5
	.size	go..C170, 16

	.type	go..C171,@object
	.section	.rodata.go..C171,"a",@progbits
	.p2align	3
go..C171:
	.quad	.Lconst.136
	.quad	7
	.size	go..C171, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	2572402249
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C172
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.294,@object
	.section	.rodata..Lconst.294,"a",@progbits
.Lconst.294:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]struct {}; overflow * }"
	.size	.Lconst.294, 78

	.type	go..C172,@object
	.section	.rodata.go..C172,"a",@progbits
	.p2align	3
go..C172:
	.quad	.Lconst.294
	.quad	77
	.size	go..C172, 16

	.type	go..C173,@object
	.section	.rodata.go..C173,"a",@progbits
	.p2align	3
go..C173:
	.quad	.Lconst.138
	.quad	10
	.size	go..C173, 16

	.type	go..C174,@object
	.section	.rodata.go..C174,"a",@progbits
	.p2align	3
go..C174:
	.quad	.Lconst.139
	.quad	9
	.size	go..C174, 16

	.type	go..C175,@object
	.section	.rodata.go..C175,"a",@progbits
	.p2align	3
go..C175:
	.quad	.Lconst.142
	.quad	5
	.size	go..C175, 16

	.type	go..C176,@object
	.section	.data.go..C176,"aw",@progbits
	.p2align	4
go..C176:
	.quad	go..C166
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C167
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C168
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C169
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C170
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C171
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C173
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7struct.4.5.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C174
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C175
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C176, 360

	.type	.Lconst.295,@object
	.section	.rodata..Lconst.295,"a",@progbits
	.p2align	3
.Lconst.295:
	.quad	.Lconst.284
	.quad	7
	.size	.Lconst.295, 16

	.type	.Lconst.296,@object
	.section	.rodata..Lconst.296,"a",@progbits
.Lconst.296:
	.asciz	"android/arm"
	.size	.Lconst.296, 12

	.type	.Lconst.297,@object
	.section	.rodata..Lconst.297,"a",@progbits
	.p2align	3
.Lconst.297:
	.quad	.Lconst.296
	.quad	11
	.size	.Lconst.297, 16

	.type	.Lconst.298,@object
	.section	.rodata..Lconst.298,"a",@progbits
.Lconst.298:
	.asciz	"android/arm64"
	.size	.Lconst.298, 14

	.type	.Lconst.299,@object
	.section	.rodata..Lconst.299,"a",@progbits
	.p2align	3
.Lconst.299:
	.quad	.Lconst.298
	.quad	13
	.size	.Lconst.299, 16

	.type	.Lconst.300,@object
	.section	.rodata..Lconst.300,"a",@progbits
.Lconst.300:
	.asciz	"android/386"
	.size	.Lconst.300, 12

	.type	.Lconst.301,@object
	.section	.rodata..Lconst.301,"a",@progbits
	.p2align	3
.Lconst.301:
	.quad	.Lconst.300
	.quad	11
	.size	.Lconst.301, 16

	.type	.Lconst.302,@object
	.section	.rodata..Lconst.302,"a",@progbits
.Lconst.302:
	.asciz	"android/amd64"
	.size	.Lconst.302, 14

	.type	.Lconst.303,@object
	.section	.rodata..Lconst.303,"a",@progbits
	.p2align	3
.Lconst.303:
	.quad	.Lconst.302
	.quad	13
	.size	.Lconst.303, 16

	.type	.Lconst.304,@object
	.section	.rodata..Lconst.304,"a",@progbits
	.p2align	3
.Lconst.304:
	.quad	.Lconst.285
	.quad	3
	.size	.Lconst.304, 16

	.type	.Lconst.305,@object
	.section	.rodata..Lconst.305,"a",@progbits
.Lconst.305:
	.asciz	"ios/arm"
	.size	.Lconst.305, 8

	.type	.Lconst.306,@object
	.section	.rodata..Lconst.306,"a",@progbits
	.p2align	3
.Lconst.306:
	.quad	.Lconst.305
	.quad	7
	.size	.Lconst.306, 16

	.type	.Lconst.307,@object
	.section	.rodata..Lconst.307,"a",@progbits
.Lconst.307:
	.asciz	"ios/arm64"
	.size	.Lconst.307, 10

	.type	.Lconst.308,@object
	.section	.rodata..Lconst.308,"a",@progbits
	.p2align	3
.Lconst.308:
	.quad	.Lconst.307
	.quad	9
	.size	.Lconst.308, 16

	.type	.Lconst.309,@object
	.section	.rodata..Lconst.309,"a",@progbits
.Lconst.309:
	.asciz	"ios/amd64"
	.size	.Lconst.309, 10

	.type	.Lconst.310,@object
	.section	.rodata..Lconst.310,"a",@progbits
	.p2align	3
.Lconst.310:
	.quad	.Lconst.309
	.quad	9
	.size	.Lconst.310, 16

	.type	.Lconst.311,@object
	.section	.rodata..Lconst.311,"a",@progbits
.Lconst.311:
	.asciz	"ios/386"
	.size	.Lconst.311, 8

	.type	.Lconst.312,@object
	.section	.rodata..Lconst.312,"a",@progbits
	.p2align	3
.Lconst.312:
	.quad	.Lconst.311
	.quad	7
	.size	.Lconst.312, 16

	.type	command_line_arguments.ParseTargets..f,@object
	.section	.rodata.command_line_arguments.ParseTargets..f,"a",@progbits
	.globl	command_line_arguments.ParseTargets..f
	.p2align	3
command_line_arguments.ParseTargets..f:
	.quad	command_line_arguments.ParseTargets
	.size	command_line_arguments.ParseTargets..f, 8

	.type	.Lconst.313,@object
	.section	.rodata..Lconst.313,"a",@progbits
.Lconst.313:
	.asciz	"gomatcha.io/matcha"
	.size	.Lconst.313, 19

	.type	command_line_arguments.Build..f,@object
	.section	.rodata.command_line_arguments.Build..f,"a",@progbits
	.globl	command_line_arguments.Build..f
	.p2align	3
command_line_arguments.Build..f:
	.quad	command_line_arguments.Build
	.size	command_line_arguments.Build..f, 8

	.type	.Lconst.317,@object
	.section	.rodata..Lconst.317,"a",@progbits
.Lconst.317:
	.asciz	"version"
	.size	.Lconst.317, 8

	.type	.Lconst.318,@object
	.section	.rodata..Lconst.318,"a",@progbits
	.p2align	3
.Lconst.318:
	.quad	.Lconst.317
	.quad	7
	.size	.Lconst.318, 16

	.type	.Lconst.319,@object
	.section	.rodata..Lconst.319,"a",@progbits
.Lconst.319:
	.asciz	"toolchain partially installed, run `matcha init`"
	.size	.Lconst.319, 49

	.type	.Lconst.321,@object
	.section	.rodata..Lconst.321,"a",@progbits
.Lconst.321:
	.asciz	"toolchain out of date, run `matcha init`"
	.size	.Lconst.321, 41

	.type	.Lconst.323,@object
	.section	.rodata..Lconst.323,"a",@progbits
.Lconst.323:
	.asciz	"darwin"
	.size	.Lconst.323, 7

	.type	.Lconst.324,@object
	.section	.rodata..Lconst.324,"a",@progbits
	.p2align	3
.Lconst.324:
	.quad	.Lconst.323
	.quad	6
	.size	.Lconst.324, 16

	.type	.Lconst.325,@object
	.section	.rodata..Lconst.325,"a",@progbits
.Lconst.325:
	.asciz	"matcha"
	.size	.Lconst.325, 7

	.type	.Lconst.326,@object
	.section	.rodata..Lconst.326,"a",@progbits
	.p2align	3
.Lconst.326:
	.quad	.Lconst.325
	.quad	6
	.size	.Lconst.326, 16

	.type	type...60x.7string,@object
	.section	.rodata.type...60x.7string,"aG",@progbits,type...60x.7string,comdat
	.weak	type...60x.7string
	.p2align	4
type...60x.7string:
	.quad	0
	.quad	0
	.long	297061699
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C179
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	0
	.size	type...60x.7string, 96

	.type	.Lconst.327,@object
	.section	.rodata..Lconst.327,"a",@progbits
.Lconst.327:
	.asciz	"[0]string"
	.size	.Lconst.327, 10

	.type	go..C179,@object
	.section	.rodata.go..C179,"a",@progbits
	.p2align	3
go..C179:
	.quad	.Lconst.327
	.quad	9
	.size	go..C179, 16

	.type	.Lconst.329,@object
	.section	.rodata..Lconst.329,"a",@progbits
.Lconst.329:
	.asciz	"main"
	.size	.Lconst.329, 5

	.type	.Lconst.330,@object
	.section	.rodata..Lconst.330,"a",@progbits
.Lconst.330:
	.asciz	"binding 'main' package (%s) is not supported"
	.size	.Lconst.330, 45

	.type	.Lconst.332,@object
	.section	.rodata..Lconst.332,"a",@progbits
	.p2align	3
.Lconst.332:
	.quad	.Lconst.329
	.quad	4
	.size	.Lconst.332, 16

	.type	.Lconst.333,@object
	.section	.rodata..Lconst.333,"a",@progbits
.Lconst.333:
	.asciz	"gomatcha.io/matcha/bridge"
	.size	.Lconst.333, 26

	.type	.Lconst.335,@object
	.section	.rodata..Lconst.335,"a",@progbits
.Lconst.335:
	.asciz	"IOS-GOPATH"
	.size	.Lconst.335, 11

	.type	.Lconst.336,@object
	.section	.rodata..Lconst.336,"a",@progbits
	.p2align	3
.Lconst.336:
	.quad	.Lconst.335
	.quad	10
	.size	.Lconst.336, 16

	.type	.Lconst.337,@object
	.section	.rodata..Lconst.337,"a",@progbits
.Lconst.337:
	.asciz	"matcha-ios"
	.size	.Lconst.337, 11

	.type	.Lconst.338,@object
	.section	.rodata..Lconst.338,"a",@progbits
	.p2align	3
.Lconst.338:
	.quad	.Lconst.337
	.quad	10
	.size	.Lconst.338, 16

	.type	.Lconst.339,@object
	.section	.rodata..Lconst.339,"a",@progbits
.Lconst.339:
	.asciz	"MatchaBridge"
	.size	.Lconst.339, 13

	.type	.Lconst.340,@object
	.section	.rodata..Lconst.340,"a",@progbits
	.p2align	3
.Lconst.340:
	.quad	.Lconst.339
	.quad	12
	.size	.Lconst.340, 16

	.type	.Lconst.341,@object
	.section	.rodata..Lconst.341,"a",@progbits
.Lconst.341:
	.asciz	"MatchaBridge.a"
	.size	.Lconst.341, 15

	.type	.Lconst.342,@object
	.section	.rodata..Lconst.342,"a",@progbits
	.p2align	3
.Lconst.342:
	.quad	.Lconst.341
	.quad	14
	.size	.Lconst.342, 16

	.type	.Lconst.343,@object
	.section	.rodata..Lconst.343,"a",@progbits
.Lconst.343:
	.asciz	"src"
	.size	.Lconst.343, 4

	.type	.Lconst.344,@object
	.section	.rodata..Lconst.344,"a",@progbits
	.p2align	3
.Lconst.344:
	.quad	.Lconst.343
	.quad	3
	.size	.Lconst.344, 16

	.type	.Lconst.345,@object
	.section	.rodata..Lconst.345,"a",@progbits
.Lconst.345:
	.asciz	"iosbin"
	.size	.Lconst.345, 7

	.type	.Lconst.346,@object
	.section	.rodata..Lconst.346,"a",@progbits
	.p2align	3
.Lconst.346:
	.quad	.Lconst.345
	.quad	6
	.size	.Lconst.346, 16

	.type	.Lconst.347,@object
	.section	.rodata..Lconst.347,"a",@progbits
.Lconst.347:
	.asciz	"main.go"
	.size	.Lconst.347, 8

	.type	.Lconst.348,@object
	.section	.rodata..Lconst.348,"a",@progbits
	.p2align	3
.Lconst.348:
	.quad	.Lconst.347
	.quad	7
	.size	.Lconst.348, 16

	.type	command_line_arguments.BindFile,@object
	.section	.data.command_line_arguments.BindFile,"aw",@progbits
	.globl	command_line_arguments.BindFile
	.p2align	3
command_line_arguments.BindFile:
	.quad	.Lconst.434
	.quad	99
	.size	command_line_arguments.BindFile, 16

	.type	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader,@object
	.section	.rodata.pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader,"aG",@progbits,pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader,comdat
	.weak	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader
	.p2align	3
pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader:
	.quad	type...1strings.Reader
	.quad	strings.Reader.Read
	.size	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..strings.Reader, 16

	.type	.Lconst.349,@object
	.section	.rodata..Lconst.349,"a",@progbits
.Lconst.349:
	.asciz	"failed to create the binding package for iOS: %v"
	.size	.Lconst.349, 49

	.type	type...60x.7.6.7string,@object
	.section	.rodata.type...60x.7.6.7string,"aG",@progbits,type...60x.7.6.7string,comdat
	.weak	type...60x.7.6.7string
	.p2align	4
type...60x.7.6.7string:
	.quad	0
	.quad	0
	.long	297061727
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C180
	.quad	0
	.quad	0
	.quad	type...6.7string
	.quad	type...6.7.6.7string
	.quad	0
	.size	type...60x.7.6.7string, 96

	.type	.Lconst.351,@object
	.section	.rodata..Lconst.351,"a",@progbits
.Lconst.351:
	.asciz	"[0][]string"
	.size	.Lconst.351, 12

	.type	go..C180,@object
	.section	.rodata.go..C180,"a",@progbits
	.p2align	3
go..C180:
	.quad	.Lconst.351
	.quad	11
	.size	go..C180, 16

	.type	type...6.7.6.7string,@object
	.section	.rodata.type...6.7.6.7string,"aG",@progbits,type...6.7.6.7string,comdat
	.weak	type...6.7.6.7string
	.p2align	4
type...6.7.6.7string:
	.quad	24
	.quad	8
	.long	2296014518
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C181
	.quad	0
	.quad	0
	.quad	type...6.7string
	.size	type...6.7.6.7string, 80

	.type	.Lconst.352,@object
	.section	.rodata..Lconst.352,"a",@progbits
.Lconst.352:
	.asciz	"[][]string"
	.size	.Lconst.352, 11

	.type	go..C181,@object
	.section	.rodata.go..C181,"a",@progbits
	.p2align	3
go..C181:
	.quad	.Lconst.352
	.quad	10
	.size	go..C181, 16

	.type	type...60x.7command_line_arguments.Bind.archPath,@object
	.section	.rodata.type...60x.7command_line_arguments.Bind.archPath,"aG",@progbits,type...60x.7command_line_arguments.Bind.archPath,comdat
	.weak	type...60x.7command_line_arguments.Bind.archPath
	.p2align	4
type...60x.7command_line_arguments.Bind.archPath:
	.quad	0
	.quad	0
	.long	2734001821
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C182
	.quad	0
	.quad	0
	.quad	command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d
	.quad	type...6.7command_line_arguments.Bind.archPath
	.quad	0
	.size	type...60x.7command_line_arguments.Bind.archPath, 96

	.type	.Lconst.353,@object
	.section	.rodata..Lconst.353,"a",@progbits
.Lconst.353:
	.asciz	"[0]\tcommand_line_arguments\tcmd.\tBind$\tarchPath"
	.size	.Lconst.353, 47

	.type	go..C182,@object
	.section	.rodata.go..C182,"a",@progbits
	.p2align	3
go..C182:
	.quad	.Lconst.353
	.quad	46
	.size	go..C182, 16

	.type	command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d,@object
	.section	.rodata.command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d,"a",@progbits
	.globl	command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d
	.p2align	4
command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d:
	.quad	48
	.quad	48
	.long	1367000903
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Bind.archPath..hash..f
	.quad	command_line_arguments.command_line_arguments.Bind.archPath..eq..f
	.quad	gcbits..wb
	.quad	go..C183
	.quad	go..C187
	.quad	type...1command_line_arguments.Bind.archPath
	.quad	go..C195
	.quad	3
	.quad	3
	.size	command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d, 96

	.type	command_line_arguments.command_line_arguments.Bind.archPath..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Bind.archPath..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Bind.archPath..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Bind.archPath..hash..f:
	.quad	command_line_arguments.command_line_arguments.Bind.archPath..hash
	.size	command_line_arguments.command_line_arguments.Bind.archPath..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Bind.archPath..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Bind.archPath..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Bind.archPath..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Bind.archPath..eq..f:
	.quad	command_line_arguments.command_line_arguments.Bind.archPath..eq
	.size	command_line_arguments.command_line_arguments.Bind.archPath..eq..f, 8

	.type	gcbits..wb,@object
	.section	.rodata.gcbits..wb,"aG",@progbits,gcbits..wb,comdat
	.weak	gcbits..wb
gcbits..wb:
	.byte	53
	.size	gcbits..wb, 1

	.type	.Lconst.354,@object
	.section	.rodata..Lconst.354,"a",@progbits
.Lconst.354:
	.asciz	"\tcommand_line_arguments\tcmd.\tBind$\tarchPath"
	.size	.Lconst.354, 44

	.type	go..C183,@object
	.section	.rodata.go..C183,"a",@progbits
	.p2align	3
go..C183:
	.quad	.Lconst.354
	.quad	43
	.size	go..C183, 16

	.type	.Lconst.355,@object
	.section	.rodata..Lconst.355,"a",@progbits
.Lconst.355:
	.asciz	"archPath"
	.size	.Lconst.355, 9

	.type	go..C184,@object
	.section	.rodata.go..C184,"a",@progbits
	.p2align	3
go..C184:
	.quad	.Lconst.355
	.quad	8
	.size	go..C184, 16

	.type	go..C185,@object
	.section	.rodata.go..C185,"a",@progbits
	.p2align	3
go..C185:
	.quad	.Lconst.68
	.quad	22
	.size	go..C185, 16

	.type	go..C186,@object
	.section	.bss.go..C186,"aw",@nobits
	.p2align	4
go..C186:
	.zero	40
	.size	go..C186, 40

	.type	go..C187,@object
	.section	.rodata.go..C187,"a",@progbits
	.p2align	4
go..C187:
	.quad	go..C184
	.quad	go..C185
	.quad	go..C186
	.quad	0
	.quad	0
	.size	go..C187, 40

	.type	type...1command_line_arguments.Bind.archPath,@object
	.section	.rodata.type...1command_line_arguments.Bind.archPath,"aG",@progbits,type...1command_line_arguments.Bind.archPath,comdat
	.weak	type...1command_line_arguments.Bind.archPath
	.p2align	4
type...1command_line_arguments.Bind.archPath:
	.quad	8
	.quad	8
	.long	397177977
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C188
	.quad	0
	.quad	0
	.quad	command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d
	.size	type...1command_line_arguments.Bind.archPath, 80

	.type	.Lconst.356,@object
	.section	.rodata..Lconst.356,"a",@progbits
.Lconst.356:
	.asciz	"*\tcommand_line_arguments\tcmd.\tBind$\tarchPath"
	.size	.Lconst.356, 45

	.type	go..C188,@object
	.section	.rodata.go..C188,"a",@progbits
	.p2align	3
go..C188:
	.quad	.Lconst.356
	.quad	44
	.size	go..C188, 16

	.type	go..C189,@object
	.section	.rodata.go..C189,"a",@progbits
	.p2align	3
go..C189:
	.quad	.Lconst.79
	.quad	4
	.size	go..C189, 16

	.type	go..C190,@object
	.section	.rodata.go..C190,"a",@progbits
	.p2align	3
go..C190:
	.quad	.Lconst.68
	.quad	22
	.size	go..C190, 16

	.type	.Lconst.357,@object
	.section	.rodata..Lconst.357,"a",@progbits
.Lconst.357:
	.asciz	"path"
	.size	.Lconst.357, 5

	.type	go..C191,@object
	.section	.rodata.go..C191,"a",@progbits
	.p2align	3
go..C191:
	.quad	.Lconst.357
	.quad	4
	.size	go..C191, 16

	.type	go..C192,@object
	.section	.rodata.go..C192,"a",@progbits
	.p2align	3
go..C192:
	.quad	.Lconst.68
	.quad	22
	.size	go..C192, 16

	.type	.Lconst.358,@object
	.section	.rodata..Lconst.358,"a",@progbits
.Lconst.358:
	.asciz	"err"
	.size	.Lconst.358, 4

	.type	go..C193,@object
	.section	.rodata.go..C193,"a",@progbits
	.p2align	3
go..C193:
	.quad	.Lconst.358
	.quad	3
	.size	go..C193, 16

	.type	go..C194,@object
	.section	.rodata.go..C194,"a",@progbits
	.p2align	3
go..C194:
	.quad	.Lconst.68
	.quad	22
	.size	go..C194, 16

	.type	go..C195,@object
	.section	.data.go..C195,"aw",@progbits
	.p2align	4
go..C195:
	.quad	go..C189
	.quad	go..C190
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C191
	.quad	go..C192
	.quad	string..d
	.quad	0
	.quad	32
	.quad	go..C193
	.quad	go..C194
	.quad	error..d
	.quad	0
	.quad	64
	.size	go..C195, 120

	.type	type...6.7command_line_arguments.Bind.archPath,@object
	.section	.rodata.type...6.7command_line_arguments.Bind.archPath,"aG",@progbits,type...6.7command_line_arguments.Bind.archPath,comdat
	.weak	type...6.7command_line_arguments.Bind.archPath
	.p2align	4
type...6.7command_line_arguments.Bind.archPath:
	.quad	24
	.quad	8
	.long	1367000917
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C196
	.quad	0
	.quad	0
	.quad	command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d
	.size	type...6.7command_line_arguments.Bind.archPath, 80

	.type	.Lconst.359,@object
	.section	.rodata..Lconst.359,"a",@progbits
.Lconst.359:
	.asciz	"[]\tcommand_line_arguments\tcmd.\tBind$\tarchPath"
	.size	.Lconst.359, 46

	.type	go..C196,@object
	.section	.rodata.go..C196,"a",@progbits
	.p2align	3
go..C196:
	.quad	.Lconst.359
	.quad	45
	.size	go..C196, 16

	.type	type..chan.0command_line_arguments.Bind.archPath,@object
	.section	.rodata.type..chan.0command_line_arguments.Bind.archPath,"aG",@progbits,type..chan.0command_line_arguments.Bind.archPath,comdat
	.weak	type..chan.0command_line_arguments.Bind.archPath
	.p2align	4
type..chan.0command_line_arguments.Bind.archPath:
	.quad	8
	.quad	8
	.long	794355975
	.byte	18
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C197
	.quad	0
	.quad	0
	.quad	command_line_arguments.Bind.command_line_arguments..command_line_arguments.archPath..d
	.quad	3
	.size	type..chan.0command_line_arguments.Bind.archPath, 88

	.type	.Lconst.360,@object
	.section	.rodata..Lconst.360,"a",@progbits
.Lconst.360:
	.asciz	"chan \tcommand_line_arguments\tcmd.\tBind$\tarchPath"
	.size	.Lconst.360, 49

	.type	go..C197,@object
	.section	.rodata.go..C197,"a",@progbits
	.p2align	3
go..C197:
	.quad	.Lconst.360
	.quad	48
	.size	go..C197, 16

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5:
	.quad	56
	.quad	56
	.long	3800261956
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gd
	.quad	go..C198
	.quad	0
	.quad	0
	.quad	go..C214
	.quad	7
	.quad	7
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.gopathDir1.0.1string.2.command_line_arguments.flags2.0.1.1command_line_arguments.Flags.2.command_line_arguments.tempdir3.0.1string.2.command_line_arguments.mainPath4.0.1string.2.command_line_arguments.matchaPkgPath5.0.1string.2.command_line_arguments.archChan6.0.1chan.0command_line_arguments.Bind.archPath.5, 96

	.type	gcbits..Gd,@object
	.section	.rodata.gcbits..Gd,"aG",@progbits,gcbits..Gd,comdat
	.weak	gcbits..Gd
gcbits..Gd:
	.byte	127
	.size	gcbits..Gd, 1

	.type	.Lconst.361,@object
	.section	.rodata..Lconst.361,"a",@progbits
.Lconst.361:
	.asciz	"struct { f *; gopathDir1 *string; flags2 **\tcommand_line_arguments\tcmd.Flags; tempdir3 *string; mainPath4 *string; matchaPkgPath5 *string; archChan6 *chan \tcommand_line_arguments\tcmd.\tBind$\tarchPath }"
	.size	.Lconst.361, 201

	.type	go..C198,@object
	.section	.rodata.go..C198,"a",@progbits
	.p2align	3
go..C198:
	.quad	.Lconst.361
	.quad	200
	.size	go..C198, 16

	.type	go..C199,@object
	.section	.rodata.go..C199,"a",@progbits
	.p2align	3
go..C199:
	.quad	.Lconst.268
	.quad	1
	.size	go..C199, 16

	.type	go..C200,@object
	.section	.rodata.go..C200,"a",@progbits
	.p2align	3
go..C200:
	.quad	.Lconst.268
	.quad	1
	.size	go..C200, 16

	.type	.Lconst.362,@object
	.section	.rodata..Lconst.362,"a",@progbits
.Lconst.362:
	.asciz	"gopathDir1"
	.size	.Lconst.362, 11

	.type	go..C201,@object
	.section	.rodata.go..C201,"a",@progbits
	.p2align	3
go..C201:
	.quad	.Lconst.362
	.quad	10
	.size	go..C201, 16

	.type	go..C202,@object
	.section	.rodata.go..C202,"a",@progbits
	.p2align	3
go..C202:
	.quad	.Lconst.68
	.quad	22
	.size	go..C202, 16

	.type	.Lconst.363,@object
	.section	.rodata..Lconst.363,"a",@progbits
.Lconst.363:
	.asciz	"flags2"
	.size	.Lconst.363, 7

	.type	go..C203,@object
	.section	.rodata.go..C203,"a",@progbits
	.p2align	3
go..C203:
	.quad	.Lconst.363
	.quad	6
	.size	go..C203, 16

	.type	go..C204,@object
	.section	.rodata.go..C204,"a",@progbits
	.p2align	3
go..C204:
	.quad	.Lconst.68
	.quad	22
	.size	go..C204, 16

	.type	.Lconst.364,@object
	.section	.rodata..Lconst.364,"a",@progbits
.Lconst.364:
	.asciz	"tempdir3"
	.size	.Lconst.364, 9

	.type	go..C205,@object
	.section	.rodata.go..C205,"a",@progbits
	.p2align	3
go..C205:
	.quad	.Lconst.364
	.quad	8
	.size	go..C205, 16

	.type	go..C206,@object
	.section	.rodata.go..C206,"a",@progbits
	.p2align	3
go..C206:
	.quad	.Lconst.68
	.quad	22
	.size	go..C206, 16

	.type	.Lconst.365,@object
	.section	.rodata..Lconst.365,"a",@progbits
.Lconst.365:
	.asciz	"mainPath4"
	.size	.Lconst.365, 10

	.type	go..C207,@object
	.section	.rodata.go..C207,"a",@progbits
	.p2align	3
go..C207:
	.quad	.Lconst.365
	.quad	9
	.size	go..C207, 16

	.type	go..C208,@object
	.section	.rodata.go..C208,"a",@progbits
	.p2align	3
go..C208:
	.quad	.Lconst.68
	.quad	22
	.size	go..C208, 16

	.type	.Lconst.366,@object
	.section	.rodata..Lconst.366,"a",@progbits
.Lconst.366:
	.asciz	"matchaPkgPath5"
	.size	.Lconst.366, 15

	.type	go..C209,@object
	.section	.rodata.go..C209,"a",@progbits
	.p2align	3
go..C209:
	.quad	.Lconst.366
	.quad	14
	.size	go..C209, 16

	.type	go..C210,@object
	.section	.rodata.go..C210,"a",@progbits
	.p2align	3
go..C210:
	.quad	.Lconst.68
	.quad	22
	.size	go..C210, 16

	.type	.Lconst.367,@object
	.section	.rodata..Lconst.367,"a",@progbits
.Lconst.367:
	.asciz	"archChan6"
	.size	.Lconst.367, 10

	.type	go..C211,@object
	.section	.rodata.go..C211,"a",@progbits
	.p2align	3
go..C211:
	.quad	.Lconst.367
	.quad	9
	.size	go..C211, 16

	.type	go..C212,@object
	.section	.rodata.go..C212,"a",@progbits
	.p2align	3
go..C212:
	.quad	.Lconst.68
	.quad	22
	.size	go..C212, 16

	.type	type...1chan.0command_line_arguments.Bind.archPath,@object
	.section	.rodata.type...1chan.0command_line_arguments.Bind.archPath,"aG",@progbits,type...1chan.0command_line_arguments.Bind.archPath,comdat
	.weak	type...1chan.0command_line_arguments.Bind.archPath
	.p2align	4
type...1chan.0command_line_arguments.Bind.archPath:
	.quad	8
	.quad	8
	.long	4119761017
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C213
	.quad	0
	.quad	0
	.quad	type..chan.0command_line_arguments.Bind.archPath
	.size	type...1chan.0command_line_arguments.Bind.archPath, 80

	.type	.Lconst.368,@object
	.section	.rodata..Lconst.368,"a",@progbits
.Lconst.368:
	.asciz	"*chan \tcommand_line_arguments\tcmd.\tBind$\tarchPath"
	.size	.Lconst.368, 50

	.type	go..C213,@object
	.section	.rodata.go..C213,"a",@progbits
	.p2align	3
go..C213:
	.quad	.Lconst.368
	.quad	49
	.size	go..C213, 16

	.type	go..C214,@object
	.section	.data.go..C214,"aw",@progbits
	.p2align	4
go..C214:
	.quad	go..C199
	.quad	go..C200
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C201
	.quad	go..C202
	.quad	type...1string
	.quad	0
	.quad	16
	.quad	go..C203
	.quad	go..C204
	.quad	type...1.1command_line_arguments.Flags
	.quad	0
	.quad	32
	.quad	go..C205
	.quad	go..C206
	.quad	type...1string
	.quad	0
	.quad	48
	.quad	go..C207
	.quad	go..C208
	.quad	type...1string
	.quad	0
	.quad	64
	.quad	go..C209
	.quad	go..C210
	.quad	type...1string
	.quad	0
	.quad	80
	.quad	go..C211
	.quad	go..C212
	.quad	type...1chan.0command_line_arguments.Bind.archPath
	.quad	0
	.quad	96
	.size	go..C214, 280

	.type	type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5,@object
	.section	.rodata.type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5,"aG",@progbits,type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5,comdat
	.weak	type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5
	.p2align	4
type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5:
	.quad	32
	.quad	16
	.long	4221601228
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..da
	.quad	go..C215
	.quad	0
	.quad	0
	.quad	go..C221
	.quad	2
	.quad	2
	.size	type..struct.4.4x.5fn.0func.8.6.7string.9.8.9.2a0.0.6.7string.5, 96

	.type	.Lconst.369,@object
	.section	.rodata..Lconst.369,"a",@progbits
.Lconst.369:
	.asciz	"struct { fn func([]string); a0 []string }"
	.size	.Lconst.369, 42

	.type	go..C215,@object
	.section	.rodata.go..C215,"a",@progbits
	.p2align	3
go..C215:
	.quad	.Lconst.369
	.quad	41
	.size	go..C215, 16

	.type	.Lconst.370,@object
	.section	.rodata..Lconst.370,"a",@progbits
.Lconst.370:
	.asciz	"fn"
	.size	.Lconst.370, 3

	.type	go..C216,@object
	.section	.rodata.go..C216,"a",@progbits
	.p2align	3
go..C216:
	.quad	.Lconst.370
	.quad	2
	.size	go..C216, 16

	.type	type..func.8.6.7string.9.8.9,@object
	.section	.rodata.type..func.8.6.7string.9.8.9,"aG",@progbits,type..func.8.6.7string.9.8.9,comdat
	.weak	type..func.8.6.7string.9.8.9
	.p2align	4
type..func.8.6.7string.9.8.9:
	.quad	8
	.quad	8
	.long	458020104
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C217
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C218
	.quad	1
	.quad	1
	.quad	go..C219
	.quad	0
	.quad	0
	.size	type..func.8.6.7string.9.8.9, 128

	.type	.Lconst.371,@object
	.section	.rodata..Lconst.371,"a",@progbits
.Lconst.371:
	.asciz	"func([]string)"
	.size	.Lconst.371, 15

	.type	go..C217,@object
	.section	.rodata.go..C217,"a",@progbits
	.p2align	3
go..C217:
	.quad	.Lconst.371
	.quad	14
	.size	go..C217, 16

	.type	go..C218,@object
	.section	.data.go..C218,"aw",@progbits
	.p2align	3
go..C218:
	.quad	type...6.7string
	.size	go..C218, 8

	.type	go..C219,@object
	.section	.bss.go..C219,"aw",@nobits
	.p2align	3
go..C219:
	.zero	8
	.size	go..C219, 8

	.type	go..C220,@object
	.section	.rodata.go..C220,"a",@progbits
	.p2align	3
go..C220:
	.quad	.Lconst.218
	.quad	2
	.size	go..C220, 16

	.type	go..C221,@object
	.section	.data.go..C221,"aw",@progbits
	.p2align	4
go..C221:
	.quad	go..C216
	.quad	0
	.quad	type..func.8.6.7string.9.8.9
	.quad	0
	.quad	0
	.quad	go..C220
	.quad	0
	.quad	type...6.7string
	.quad	0
	.quad	16
	.size	go..C221, 80

	.type	.Lconst.372,@object
	.section	.rodata..Lconst.372,"a",@progbits
	.p2align	4
.Lconst.372:
	.zero	48
	.size	.Lconst.372, 48

	.type	.Lconst.373,@object
	.section	.rodata..Lconst.373,"a",@progbits
.Lconst.373:
	.asciz	"lipo"
	.size	.Lconst.373, 5

	.type	.Lconst.374,@object
	.section	.rodata..Lconst.374,"a",@progbits
.Lconst.374:
	.asciz	"-create"
	.size	.Lconst.374, 8

	.type	.Lconst.375,@object
	.section	.rodata..Lconst.375,"a",@progbits
	.p2align	4
.Lconst.375:
	.quad	.Lconst.373
	.quad	4
	.quad	.Lconst.374
	.quad	7
	.size	.Lconst.375, 32

	.type	.Lconst.376,@object
	.section	.rodata..Lconst.376,"a",@progbits
.Lconst.376:
	.asciz	"xcrun"
	.size	.Lconst.376, 6

	.type	.Lconst.378,@object
	.section	.rodata..Lconst.378,"a",@progbits
.Lconst.378:
	.asciz	"-arch"
	.size	.Lconst.378, 6

	.type	.Lconst.379,@object
	.section	.rodata..Lconst.379,"a",@progbits
	.p2align	3
.Lconst.379:
	.quad	.Lconst.378
	.quad	5
	.size	.Lconst.379, 16

	.type	.Lconst.380,@object
	.section	.rodata..Lconst.380,"a",@progbits
.Lconst.380:
	.asciz	"-o"
	.size	.Lconst.380, 3

	.type	.Lconst.381,@object
	.section	.rodata..Lconst.381,"a",@progbits
	.p2align	3
.Lconst.381:
	.quad	.Lconst.380
	.quad	2
	.size	.Lconst.381, 16

	.type	.Lconst.382,@object
	.section	.rodata..Lconst.382,"a",@progbits
.Lconst.382:
	.asciz	"Matcha-iOS"
	.size	.Lconst.382, 11

	.type	.Lconst.384,@object
	.section	.rodata..Lconst.384,"a",@progbits
.Lconst.384:
	.asciz	"ANDROID-GOPATH"
	.size	.Lconst.384, 15

	.type	.Lconst.385,@object
	.section	.rodata..Lconst.385,"a",@progbits
	.p2align	3
.Lconst.385:
	.quad	.Lconst.384
	.quad	14
	.size	.Lconst.385, 16

	.type	.Lconst.386,@object
	.section	.rodata..Lconst.386,"a",@progbits
.Lconst.386:
	.asciz	"androidlib/main.go"
	.size	.Lconst.386, 19

	.type	.Lconst.387,@object
	.section	.rodata..Lconst.387,"a",@progbits
	.p2align	3
.Lconst.387:
	.quad	.Lconst.386
	.quad	18
	.size	.Lconst.387, 16

	.type	.Lconst.388,@object
	.section	.rodata..Lconst.388,"a",@progbits
.Lconst.388:
	.asciz	"failed to create the main package for android: %v"
	.size	.Lconst.388, 50

	.type	.Lconst.390,@object
	.section	.rodata..Lconst.390,"a",@progbits
.Lconst.390:
	.asciz	"java"
	.size	.Lconst.390, 5

	.type	.Lconst.391,@object
	.section	.rodata..Lconst.391,"a",@progbits
	.p2align	3
.Lconst.391:
	.quad	.Lconst.390
	.quad	4
	.size	.Lconst.391, 16

	.type	.Lconst.392,@object
	.section	.rodata..Lconst.392,"a",@progbits
.Lconst.392:
	.asciz	"io"
	.size	.Lconst.392, 3

	.type	.Lconst.393,@object
	.section	.rodata..Lconst.393,"a",@progbits
	.p2align	3
.Lconst.393:
	.quad	.Lconst.392
	.quad	2
	.size	.Lconst.393, 16

	.type	.Lconst.394,@object
	.section	.rodata..Lconst.394,"a",@progbits
.Lconst.394:
	.asciz	"gomatcha"
	.size	.Lconst.394, 9

	.type	.Lconst.395,@object
	.section	.rodata..Lconst.395,"a",@progbits
	.p2align	3
.Lconst.395:
	.quad	.Lconst.394
	.quad	8
	.size	.Lconst.395, 16

	.type	.Lconst.396,@object
	.section	.rodata..Lconst.396,"a",@progbits
.Lconst.396:
	.asciz	"bridge"
	.size	.Lconst.396, 7

	.type	.Lconst.397,@object
	.section	.rodata..Lconst.397,"a",@progbits
	.p2align	3
.Lconst.397:
	.quad	.Lconst.396
	.quad	6
	.size	.Lconst.397, 16

	.type	.Lconst.398,@object
	.section	.rodata..Lconst.398,"a",@progbits
.Lconst.398:
	.asciz	"GoValue.java"
	.size	.Lconst.398, 13

	.type	.Lconst.399,@object
	.section	.rodata..Lconst.399,"a",@progbits
	.p2align	3
.Lconst.399:
	.quad	.Lconst.398
	.quad	12
	.size	.Lconst.399, 16

	.type	.Lconst.400,@object
	.section	.rodata..Lconst.400,"a",@progbits
.Lconst.400:
	.asciz	"java-GoValue.java"
	.size	.Lconst.400, 18

	.type	.Lconst.401,@object
	.section	.rodata..Lconst.401,"a",@progbits
	.p2align	3
.Lconst.401:
	.quad	.Lconst.400
	.quad	17
	.size	.Lconst.401, 16

	.type	.Lconst.402,@object
	.section	.rodata..Lconst.402,"a",@progbits
.Lconst.402:
	.asciz	"Bridge.java"
	.size	.Lconst.402, 12

	.type	.Lconst.403,@object
	.section	.rodata..Lconst.403,"a",@progbits
	.p2align	3
.Lconst.403:
	.quad	.Lconst.402
	.quad	11
	.size	.Lconst.403, 16

	.type	.Lconst.404,@object
	.section	.rodata..Lconst.404,"a",@progbits
.Lconst.404:
	.asciz	"java-Bridge.java"
	.size	.Lconst.404, 17

	.type	.Lconst.405,@object
	.section	.rodata..Lconst.405,"a",@progbits
	.p2align	3
.Lconst.405:
	.quad	.Lconst.404
	.quad	16
	.size	.Lconst.405, 16

	.type	.Lconst.406,@object
	.section	.rodata..Lconst.406,"a",@progbits
.Lconst.406:
	.asciz	"Tracker.java"
	.size	.Lconst.406, 13

	.type	.Lconst.407,@object
	.section	.rodata..Lconst.407,"a",@progbits
	.p2align	3
.Lconst.407:
	.quad	.Lconst.406
	.quad	12
	.size	.Lconst.407, 16

	.type	.Lconst.408,@object
	.section	.rodata..Lconst.408,"a",@progbits
.Lconst.408:
	.asciz	"java-Tracker.java"
	.size	.Lconst.408, 18

	.type	.Lconst.409,@object
	.section	.rodata..Lconst.409,"a",@progbits
	.p2align	3
.Lconst.409:
	.quad	.Lconst.408
	.quad	17
	.size	.Lconst.409, 16

	.type	.Lconst.410,@object
	.section	.rodata..Lconst.410,"a",@progbits
.Lconst.410:
	.asciz	"matcha-android"
	.size	.Lconst.410, 15

	.type	.Lconst.411,@object
	.section	.rodata..Lconst.411,"a",@progbits
	.p2align	3
.Lconst.411:
	.quad	.Lconst.410
	.quad	14
	.size	.Lconst.411, 16

	.type	.Lconst.412,@object
	.section	.rodata..Lconst.412,"a",@progbits
.Lconst.412:
	.asciz	"matchabridge.aar"
	.size	.Lconst.412, 17

	.type	.Lconst.413,@object
	.section	.rodata..Lconst.413,"a",@progbits
	.p2align	3
.Lconst.413:
	.quad	.Lconst.412
	.quad	16
	.size	.Lconst.413, 16

	.type	.Lconst.414,@object
	.section	.rodata..Lconst.414,"a",@progbits
.Lconst.414:
	.asciz	"GOPATH"
	.size	.Lconst.414, 7

	.type	.Lconst.416,@object
	.section	.rodata..Lconst.416,"a",@progbits
.Lconst.416:
	.asciz	"GOPATH="
	.size	.Lconst.416, 8

	.type	.Lconst.417,@object
	.section	.rodata..Lconst.417,"a",@progbits
	.p2align	3
.Lconst.417:
	.quad	.Lconst.416
	.quad	7
	.size	.Lconst.417, 16

	.type	.Lconst.418,@object
	.section	.rodata..Lconst.418,"a",@progbits
.Lconst.418:
	.asciz	":"
	.size	.Lconst.418, 2

	.type	.Lconst.419,@object
	.section	.rodata..Lconst.419,"a",@progbits
	.p2align	3
.Lconst.419:
	.quad	.Lconst.418
	.quad	1
	.size	.Lconst.419, 16

	.type	.Lconst.420,@object
	.section	.rodata..Lconst.420,"a",@progbits
	.p2align	3
.Lconst.420:
	.quad	.Lconst.325
	.quad	6
	.size	.Lconst.420, 16

	.type	.Lconst.421,@object
	.section	.rodata..Lconst.421,"a",@progbits
.Lconst.421:
	.asciz	"-o="
	.size	.Lconst.421, 4

	.type	.Lconst.422,@object
	.section	.rodata..Lconst.422,"a",@progbits
	.p2align	3
.Lconst.422:
	.quad	.Lconst.421
	.quad	3
	.size	.Lconst.422, 16

	.type	.Lconst.423,@object
	.section	.rodata..Lconst.423,"a",@progbits
.Lconst.423:
	.asciz	"-buildmode=c-shared"
	.size	.Lconst.423, 20

	.type	.Lconst.424,@object
	.section	.rodata..Lconst.424,"a",@progbits
	.p2align	3
.Lconst.424:
	.quad	.Lconst.423
	.quad	19
	.size	.Lconst.424, 16

	.type	command_line_arguments.Bind..f,@object
	.section	.rodata.command_line_arguments.Bind..f,"a",@progbits
	.globl	command_line_arguments.Bind..f
	.p2align	3
command_line_arguments.Bind..f:
	.quad	command_line_arguments.Bind
	.size	command_line_arguments.Bind..f, 8

	.type	.Lconst.425,@object
	.section	.rodata..Lconst.425,"a",@progbits
.Lconst.425:
	.asciz	"GOARCH"
	.size	.Lconst.425, 7

	.type	.Lconst.427,@object
	.section	.rodata..Lconst.427,"a",@progbits
.Lconst.427:
	.asciz	"matcha-"
	.size	.Lconst.427, 8

	.type	.Lconst.428,@object
	.section	.rodata..Lconst.428,"a",@progbits
	.p2align	3
.Lconst.428:
	.quad	.Lconst.427
	.quad	7
	.size	.Lconst.428, 16

	.type	.Lconst.429,@object
	.section	.rodata..Lconst.429,"a",@progbits
.Lconst.429:
	.asciz	".a"
	.size	.Lconst.429, 3

	.type	.Lconst.430,@object
	.section	.rodata..Lconst.430,"a",@progbits
	.p2align	3
.Lconst.430:
	.quad	.Lconst.429
	.quad	2
	.size	.Lconst.430, 16

	.type	.Lconst.431,@object
	.section	.rodata..Lconst.431,"a",@progbits
	.p2align	4
.Lconst.431:
	.quad	.Lconst.325
	.quad	6
	.quad	.Lconst.285
	.quad	3
	.size	.Lconst.431, 32

	.type	.Lconst.432,@object
	.section	.rodata..Lconst.432,"a",@progbits
.Lconst.432:
	.asciz	"-buildmode=c-archive"
	.size	.Lconst.432, 21

	.type	.Lconst.433,@object
	.section	.rodata..Lconst.433,"a",@progbits
	.p2align	3
.Lconst.433:
	.quad	.Lconst.432
	.quad	20
	.size	.Lconst.433, 16

	.type	.Lconst.434,@object
	.section	.rodata..Lconst.434,"a",@progbits
.Lconst.434:
	.asciz	"\npackage main\n\nimport (\n    _ \"gomatcha.io/matcha/bridge\"\n    _ \"%s\"\n)\n\nimport \"C\"\n\nfunc main() {}\n"
	.size	.Lconst.434, 100

	.type	.Lconst.436,@object
	.section	.rodata..Lconst.436,"a",@progbits
	.p2align	4
.Lconst.436:
	.zero	24
	.size	.Lconst.436, 24

	.type	command_line_arguments.RunCmd..f,@object
	.section	.rodata.command_line_arguments.RunCmd..f,"a",@progbits
	.globl	command_line_arguments.RunCmd..f
	.p2align	3
command_line_arguments.RunCmd..f:
	.quad	command_line_arguments.RunCmd
	.size	command_line_arguments.RunCmd..f, 8

	.type	.Lconst.437,@object
	.section	.rodata..Lconst.437,"a",@progbits
.Lconst.437:
	.asciz	"PWD="
	.size	.Lconst.437, 5

	.type	.Lconst.438,@object
	.section	.rodata..Lconst.438,"a",@progbits
	.p2align	3
.Lconst.438:
	.quad	.Lconst.437
	.quad	4
	.size	.Lconst.438, 16

	.type	.Lconst.439,@object
	.section	.rodata..Lconst.439,"a",@progbits
.Lconst.439:
	.asciz	" "
	.size	.Lconst.439, 2

	.type	.Lconst.440,@object
	.section	.rodata..Lconst.440,"a",@progbits
	.p2align	3
.Lconst.440:
	.quad	.Lconst.439
	.quad	1
	.size	.Lconst.440, 16

	.type	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer,@object
	.section	.rodata.pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer,"aG",@progbits,pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer,comdat
	.weak	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer
	.p2align	3
pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer:
	.quad	type...1bytes.Buffer
	.quad	bytes.Buffer.Write
	.size	pimt..interface.4Write.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Buffer, 16

	.type	.Lconst.445,@object
	.section	.rodata..Lconst.445,"a",@progbits
.Lconst.445:
	.asciz	"TMPDIR="
	.size	.Lconst.445, 8

	.type	.Lconst.446,@object
	.section	.rodata..Lconst.446,"a",@progbits
	.p2align	3
.Lconst.446:
	.quad	.Lconst.445
	.quad	7
	.size	.Lconst.446, 16

	.type	.Lconst.447,@object
	.section	.rodata..Lconst.447,"a",@progbits
.Lconst.447:
	.asciz	"%s failed: %v\n%s\n%s"
	.size	.Lconst.447, 20

	.type	command_line_arguments.OutputCmd..f,@object
	.section	.rodata.command_line_arguments.OutputCmd..f,"a",@progbits
	.globl	command_line_arguments.OutputCmd..f
	.p2align	3
command_line_arguments.OutputCmd..f:
	.quad	command_line_arguments.OutputCmd
	.size	command_line_arguments.OutputCmd..f, 8

	.type	.Lconst.449,@object
	.section	.rodata..Lconst.449,"a",@progbits
.Lconst.449:
	.asciz	"linux"
	.size	.Lconst.449, 6

	.type	type..map.6string.7string,@object
	.section	.rodata.type..map.6string.7string,"aG",@progbits,type..map.6string.7string,comdat
	.weak	type..map.6string.7string
	.p2align	4
type..map.6string.7string:
	.quad	8
	.quad	8
	.long	297061700
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C222
	.quad	0
	.quad	0
	.quad	string..d
	.quad	string..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	16
	.byte	0
	.short	272
	.byte	1
	.byte	1
	.size	type..map.6string.7string, 112

	.type	.Lconst.451,@object
	.section	.rodata..Lconst.451,"a",@progbits
.Lconst.451:
	.asciz	"map[string]string"
	.size	.Lconst.451, 18

	.type	go..C222,@object
	.section	.rodata.go..C222,"a",@progbits
	.p2align	3
go..C222:
	.quad	.Lconst.451
	.quad	17
	.size	go..C222, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5:
	.quad	272
	.quad	272
	.long	887229860
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkwkwka
	.quad	go..C223
	.quad	0
	.quad	0
	.quad	go..C228
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkwkwka,@object
	.section	.rodata.gcbits..kwkwkwka,"aG",@progbits,gcbits..kwkwkwka,comdat
	.weak	gcbits..kwkwkwka
gcbits..kwkwkwka:
	.ascii	"\252\252\252\252\002"
	.size	gcbits..kwkwkwka, 5

	.type	.Lconst.452,@object
	.section	.rodata..Lconst.452,"a",@progbits
.Lconst.452:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }"
	.size	.Lconst.452, 74

	.type	go..C223,@object
	.section	.rodata.go..C223,"a",@progbits
	.p2align	3
go..C223:
	.quad	.Lconst.452
	.quad	73
	.size	go..C223, 16

	.type	go..C224,@object
	.section	.rodata.go..C224,"a",@progbits
	.p2align	3
go..C224:
	.quad	.Lconst.114
	.quad	7
	.size	go..C224, 16

	.type	go..C225,@object
	.section	.rodata.go..C225,"a",@progbits
	.p2align	3
go..C225:
	.quad	.Lconst.119
	.quad	4
	.size	go..C225, 16

	.type	go..C226,@object
	.section	.rodata.go..C226,"a",@progbits
	.p2align	3
go..C226:
	.quad	.Lconst.120
	.quad	6
	.size	go..C226, 16

	.type	go..C227,@object
	.section	.rodata.go..C227,"a",@progbits
	.p2align	3
go..C227:
	.quad	.Lconst.123
	.quad	8
	.size	go..C227, 16

	.type	go..C228,@object
	.section	.data.go..C228,"aw",@progbits
	.p2align	4
go..C228:
	.quad	go..C224
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C225
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C226
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	272
	.quad	go..C227
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	528
	.size	go..C228, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1324374500
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C229
	.quad	0
	.quad	0
	.quad	go..C240
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.453,@object
	.section	.rodata..Lconst.453,"a",@progbits
.Lconst.453:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.453, 274

	.type	go..C229,@object
	.section	.rodata.go..C229,"a",@progbits
	.p2align	3
go..C229:
	.quad	.Lconst.453
	.quad	273
	.size	go..C229, 16

	.type	go..C230,@object
	.section	.rodata.go..C230,"a",@progbits
	.p2align	3
go..C230:
	.quad	.Lconst.125
	.quad	5
	.size	go..C230, 16

	.type	go..C231,@object
	.section	.rodata.go..C231,"a",@progbits
	.p2align	3
go..C231:
	.quad	.Lconst.128
	.quad	5
	.size	go..C231, 16

	.type	go..C232,@object
	.section	.rodata.go..C232,"a",@progbits
	.p2align	3
go..C232:
	.quad	.Lconst.129
	.quad	1
	.size	go..C232, 16

	.type	go..C233,@object
	.section	.rodata.go..C233,"a",@progbits
	.p2align	3
go..C233:
	.quad	.Lconst.130
	.quad	9
	.size	go..C233, 16

	.type	go..C234,@object
	.section	.rodata.go..C234,"a",@progbits
	.p2align	3
go..C234:
	.quad	.Lconst.133
	.quad	5
	.size	go..C234, 16

	.type	go..C235,@object
	.section	.rodata.go..C235,"a",@progbits
	.p2align	3
go..C235:
	.quad	.Lconst.136
	.quad	7
	.size	go..C235, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	1310775881
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C236
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.454,@object
	.section	.rodata..Lconst.454,"a",@progbits
.Lconst.454:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }"
	.size	.Lconst.454, 75

	.type	go..C236,@object
	.section	.rodata.go..C236,"a",@progbits
	.p2align	3
go..C236:
	.quad	.Lconst.454
	.quad	74
	.size	go..C236, 16

	.type	go..C237,@object
	.section	.rodata.go..C237,"a",@progbits
	.p2align	3
go..C237:
	.quad	.Lconst.138
	.quad	10
	.size	go..C237, 16

	.type	go..C238,@object
	.section	.rodata.go..C238,"a",@progbits
	.p2align	3
go..C238:
	.quad	.Lconst.139
	.quad	9
	.size	go..C238, 16

	.type	go..C239,@object
	.section	.rodata.go..C239,"a",@progbits
	.p2align	3
go..C239:
	.quad	.Lconst.142
	.quad	5
	.size	go..C239, 16

	.type	go..C240,@object
	.section	.data.go..C240,"aw",@progbits
	.p2align	4
go..C240:
	.quad	go..C230
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C231
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C232
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C233
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C234
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C235
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C237
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C238
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C239
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C240, 360

	.type	.Lconst.455,@object
	.section	.rodata..Lconst.455,"a",@progbits
.Lconst.455:
	.asciz	"="
	.size	.Lconst.455, 2

	.type	.Lconst.456,@object
	.section	.rodata..Lconst.456,"a",@progbits
	.p2align	3
.Lconst.456:
	.quad	.Lconst.455
	.quad	1
	.size	.Lconst.456, 16

	.type	.Lconst.457,@object
	.section	.rodata..Lconst.457,"a",@progbits
.Lconst.457:
	.asciz	"malformed env var %q from input"
	.size	.Lconst.457, 32

	.type	command_line_arguments.MergeEnviron..f,@object
	.section	.rodata.command_line_arguments.MergeEnviron..f,"a",@progbits
	.globl	command_line_arguments.MergeEnviron..f
	.p2align	3
command_line_arguments.MergeEnviron..f:
	.quad	command_line_arguments.MergeEnviron
	.size	command_line_arguments.MergeEnviron..f, 8

	.type	.Lconst.460,@object
	.section	.rodata..Lconst.460,"a",@progbits
.Lconst.460:
	.asciz	"gomobile-work-"
	.size	.Lconst.460, 15

	.type	.Lconst.462,@object
	.section	.rodata..Lconst.462,"a",@progbits
.Lconst.462:
	.asciz	"$WORK"
	.size	.Lconst.462, 6

	.type	.Lconst.464,@object
	.section	.rodata..Lconst.464,"a",@progbits
.Lconst.464:
	.asciz	"work"
	.size	.Lconst.464, 5

	.type	.Lconst.465,@object
	.section	.rodata..Lconst.465,"a",@progbits
	.p2align	3
.Lconst.465:
	.quad	.Lconst.464
	.quad	4
	.size	.Lconst.465, 16

	.type	.Lconst.466,@object
	.section	.rodata..Lconst.466,"a",@progbits
.Lconst.466:
	.asciz	"WORK="
	.size	.Lconst.466, 6

	.type	.Lconst.467,@object
	.section	.rodata..Lconst.467,"a",@progbits
	.p2align	3
.Lconst.467:
	.quad	.Lconst.466
	.quad	5
	.size	.Lconst.467, 16

	.type	command_line_arguments.NewTmpDir..f,@object
	.section	.rodata.command_line_arguments.NewTmpDir..f,"a",@progbits
	.globl	command_line_arguments.NewTmpDir..f
	.p2align	3
command_line_arguments.NewTmpDir..f:
	.quad	command_line_arguments.NewTmpDir
	.size	command_line_arguments.NewTmpDir..f, 8

	.type	.Lconst.468,@object
	.section	.rodata..Lconst.468,"a",@progbits
.Lconst.468:
	.asciz	"go findpackage %s\n"
	.size	.Lconst.468, 19

	.type	.Lconst.471,@object
	.section	.rodata..Lconst.471,"a",@progbits
.Lconst.471:
	.asciz	"$GOPATH/src/"
	.size	.Lconst.471, 13

	.type	.Lconst.472,@object
	.section	.rodata..Lconst.472,"a",@progbits
	.p2align	3
.Lconst.472:
	.quad	.Lconst.471
	.quad	12
	.size	.Lconst.472, 16

	.type	command_line_arguments.PackageDir..f,@object
	.section	.rodata.command_line_arguments.PackageDir..f,"a",@progbits
	.globl	command_line_arguments.PackageDir..f
	.p2align	3
command_line_arguments.PackageDir..f:
	.quad	command_line_arguments.PackageDir
	.size	command_line_arguments.PackageDir..f, 8

	.type	.Lconst.473,@object
	.section	.rodata..Lconst.473,"a",@progbits
.Lconst.473:
	.asciz	"rm -r -f %s\n"
	.size	.Lconst.473, 13

	.type	command_line_arguments.RemoveAll..f,@object
	.section	.rodata.command_line_arguments.RemoveAll..f,"a",@progbits
	.globl	command_line_arguments.RemoveAll..f
	.p2align	3
command_line_arguments.RemoveAll..f:
	.quad	command_line_arguments.RemoveAll
	.size	command_line_arguments.RemoveAll..f, 8

	.type	.Lconst.475,@object
	.section	.rodata..Lconst.475,"a",@progbits
.Lconst.475:
	.asciz	"write %s\n"
	.size	.Lconst.475, 10

	.type	command_line_arguments.WriteFile..f,@object
	.section	.rodata.command_line_arguments.WriteFile..f,"a",@progbits
	.globl	command_line_arguments.WriteFile..f
	.p2align	3
command_line_arguments.WriteFile..f:
	.quad	command_line_arguments.WriteFile
	.size	command_line_arguments.WriteFile..f, 8

	.type	.Lconst.478,@object
	.section	.rodata..Lconst.478,"a",@progbits
.Lconst.478:
	.asciz	"read %s\n"
	.size	.Lconst.478, 9

	.type	type...60x.7uint8,@object
	.section	.rodata.type...60x.7uint8,"aG",@progbits,type...60x.7uint8,comdat
	.weak	type...60x.7uint8
	.p2align	4
type...60x.7uint8:
	.quad	0
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C241
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	0
	.size	type...60x.7uint8, 96

	.type	.Lconst.480,@object
	.section	.rodata..Lconst.480,"a",@progbits
.Lconst.480:
	.asciz	"[0]uint8"
	.size	.Lconst.480, 9

	.type	go..C241,@object
	.section	.rodata.go..C241,"a",@progbits
	.p2align	3
go..C241:
	.quad	.Lconst.480
	.quad	8
	.size	go..C241, 16

	.type	command_line_arguments.ReadFile..f,@object
	.section	.rodata.command_line_arguments.ReadFile..f,"a",@progbits
	.globl	command_line_arguments.ReadFile..f
	.p2align	3
command_line_arguments.ReadFile..f:
	.quad	command_line_arguments.ReadFile
	.size	command_line_arguments.ReadFile..f, 8

	.type	.Lconst.481,@object
	.section	.rodata..Lconst.481,"a",@progbits
.Lconst.481:
	.asciz	"cp %s %s\n"
	.size	.Lconst.481, 10

	.type	command_line_arguments.CopyFile..f,@object
	.section	.rodata.command_line_arguments.CopyFile..f,"a",@progbits
	.globl	command_line_arguments.CopyFile..f
	.p2align	3
command_line_arguments.CopyFile..f:
	.quad	command_line_arguments.CopyFile
	.size	command_line_arguments.CopyFile..f, 8

	.type	.Lconst.483,@object
	.section	.rodata..Lconst.483,"a",@progbits
.Lconst.483:
	.asciz	"mkdir -p %s\n"
	.size	.Lconst.483, 13

	.type	command_line_arguments.Mkdir..f,@object
	.section	.rodata.command_line_arguments.Mkdir..f,"a",@progbits
	.globl	command_line_arguments.Mkdir..f
	.p2align	3
command_line_arguments.Mkdir..f:
	.quad	command_line_arguments.Mkdir
	.size	command_line_arguments.Mkdir..f, 8

	.type	.Lconst.485,@object
	.section	.rodata..Lconst.485,"a",@progbits
.Lconst.485:
	.asciz	"which %s\n"
	.size	.Lconst.485, 10

	.type	command_line_arguments.LookPath..f,@object
	.section	.rodata.command_line_arguments.LookPath..f,"a",@progbits
	.globl	command_line_arguments.LookPath..f
	.p2align	3
command_line_arguments.LookPath..f:
	.quad	command_line_arguments.LookPath
	.size	command_line_arguments.LookPath..f, 8

	.type	.Lconst.487,@object
	.section	.rodata..Lconst.487,"a",@progbits
.Lconst.487:
	.asciz	"printenv %s\n"
	.size	.Lconst.487, 13

	.type	.Lconst.489,@object
	.section	.rodata..Lconst.489,"a",@progbits
.Lconst.489:
	.asciz	"$"
	.size	.Lconst.489, 2

	.type	.Lconst.490,@object
	.section	.rodata..Lconst.490,"a",@progbits
	.p2align	3
.Lconst.490:
	.quad	.Lconst.489
	.quad	1
	.size	.Lconst.490, 16

	.type	command_line_arguments.GetEnv..f,@object
	.section	.rodata.command_line_arguments.GetEnv..f,"a",@progbits
	.globl	command_line_arguments.GetEnv..f
	.p2align	3
command_line_arguments.GetEnv..f:
	.quad	command_line_arguments.GetEnv
	.size	command_line_arguments.GetEnv..f, 8

	.type	.Lconst.491,@object
	.section	.rodata..Lconst.491,"a",@progbits
.Lconst.491:
	.asciz	"ls %s\n"
	.size	.Lconst.491, 7

	.type	command_line_arguments.ReadDirNames..f,@object
	.section	.rodata.command_line_arguments.ReadDirNames..f,"a",@progbits
	.globl	command_line_arguments.ReadDirNames..f
	.p2align	3
command_line_arguments.ReadDirNames..f:
	.quad	command_line_arguments.ReadDirNames
	.size	command_line_arguments.ReadDirNames..f, 8

	.type	.Lconst.493,@object
	.section	.rodata..Lconst.493,"a",@progbits
.Lconst.493:
	.asciz	"test -f %s\n"
	.size	.Lconst.493, 12

	.type	command_line_arguments.IsFile..f,@object
	.section	.rodata.command_line_arguments.IsFile..f,"a",@progbits
	.globl	command_line_arguments.IsFile..f
	.p2align	3
command_line_arguments.IsFile..f:
	.quad	command_line_arguments.IsFile
	.size	command_line_arguments.IsFile..f, 8

	.type	.Lconst.496,@object
	.section	.rodata..Lconst.496,"a",@progbits
.Lconst.496:
	.asciz	"test -d %s\n"
	.size	.Lconst.496, 12

	.type	command_line_arguments.IsDir..f,@object
	.section	.rodata.command_line_arguments.IsDir..f,"a",@progbits
	.globl	command_line_arguments.IsDir..f
	.p2align	3
command_line_arguments.IsDir..f:
	.quad	command_line_arguments.IsDir
	.size	command_line_arguments.IsDir..f, 8

	.type	.Lconst.498,@object
	.section	.rodata..Lconst.498,"a",@progbits
.Lconst.498:
	.asciz	"pwd\n"
	.size	.Lconst.498, 5

	.type	.Lconst.500,@object
	.section	.rodata..Lconst.500,"a",@progbits
.Lconst.500:
	.asciz	"$CWD"
	.size	.Lconst.500, 5

	.type	.Lconst.501,@object
	.section	.rodata..Lconst.501,"a",@progbits
	.p2align	3
.Lconst.501:
	.quad	.Lconst.500
	.quad	4
	.size	.Lconst.501, 16

	.type	command_line_arguments.Getwd..f,@object
	.section	.rodata.command_line_arguments.Getwd..f,"a",@progbits
	.globl	command_line_arguments.Getwd..f
	.p2align	3
command_line_arguments.Getwd..f:
	.quad	command_line_arguments.Getwd
	.size	command_line_arguments.Getwd..f, 8

	.type	.Lconst.502,@object
	.section	.rodata..Lconst.502,"a",@progbits
.Lconst.502:
	.asciz	"std"
	.size	.Lconst.502, 4

	.type	.Lconst.503,@object
	.section	.rodata..Lconst.503,"a",@progbits
	.p2align	3
.Lconst.503:
	.quad	.Lconst.502
	.quad	3
	.size	.Lconst.503, 16

	.type	.Lconst.504,@object
	.section	.rodata..Lconst.504,"a",@progbits
.Lconst.504:
	.asciz	"-tags=ios"
	.size	.Lconst.504, 10

	.type	.Lconst.505,@object
	.section	.rodata..Lconst.505,"a",@progbits
	.p2align	3
.Lconst.505:
	.quad	.Lconst.504
	.quad	9
	.size	.Lconst.505, 16

	.type	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader,@object
	.section	.rodata.pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader,"aG",@progbits,pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader,comdat
	.weak	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader
	.p2align	3
pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader:
	.quad	type...1bytes.Reader
	.quad	bytes.Reader.Read
	.size	pimt..interface.4Read.0func.8.6.7uint8.9.8int.3error.9.5..bytes.Reader, 16

	.type	.Lconst.506,@object
	.section	.rodata..Lconst.506,"a",@progbits
.Lconst.506:
	.asciz	"Build took %s.\n"
	.size	.Lconst.506, 16

	.type	.Lconst.508,@object
	.section	.rodata..Lconst.508,"a",@progbits
.Lconst.508:
	.asciz	"Matcha initialized.\n"
	.size	.Lconst.508, 21

	.type	command_line_arguments.Init..f,@object
	.section	.rodata.command_line_arguments.Init..f,"a",@progbits
	.globl	command_line_arguments.Init..f
	.p2align	3
command_line_arguments.Init..f:
	.quad	command_line_arguments.Init
	.size	command_line_arguments.Init..f, 8

	.type	.Lconst.510,@object
	.section	.rodata..Lconst.510,"a",@progbits
.Lconst.510:
	.asciz	"Invalid or unsupported Xcode installation. See https://gomatcha.io/guide/installation/\nfor detailed instructions or set the --target=\"android\" flag to only build for Android.\n"
	.size	.Lconst.510, 176

	.type	.Lconst.511,@object
	.section	.rodata..Lconst.511,"a",@progbits
	.p2align	3
.Lconst.511:
	.quad	.Lconst.510
	.quad	175
	.size	.Lconst.511, 16

	.type	.Lconst.512,@object
	.section	.rodata..Lconst.512,"a",@progbits
.Lconst.512:
	.asciz	"armv7"
	.size	.Lconst.512, 6

	.type	.Lconst.514,@object
	.section	.rodata..Lconst.514,"a",@progbits
.Lconst.514:
	.asciz	"i386"
	.size	.Lconst.514, 5

	.type	.Lconst.516,@object
	.section	.rodata..Lconst.516,"a",@progbits
.Lconst.516:
	.asciz	"unknown GOARCH: %q"
	.size	.Lconst.516, 19

	.type	command_line_arguments.ArchClang..f,@object
	.section	.rodata.command_line_arguments.ArchClang..f,"a",@progbits
	.globl	command_line_arguments.ArchClang..f
	.p2align	3
command_line_arguments.ArchClang..f:
	.quad	command_line_arguments.ArchClang
	.size	command_line_arguments.ArchClang..f, 8

	.type	.Lconst.518,@object
	.section	.rodata..Lconst.518,"a",@progbits
.Lconst.518:
	.asciz	"--sdk"
	.size	.Lconst.518, 6

	.type	.Lconst.519,@object
	.section	.rodata..Lconst.519,"a",@progbits
	.p2align	3
.Lconst.519:
	.quad	.Lconst.518
	.quad	5
	.size	.Lconst.519, 16

	.type	.Lconst.520,@object
	.section	.rodata..Lconst.520,"a",@progbits
.Lconst.520:
	.asciz	"--find"
	.size	.Lconst.520, 7

	.type	.Lconst.521,@object
	.section	.rodata..Lconst.521,"a",@progbits
	.p2align	3
.Lconst.521:
	.quad	.Lconst.520
	.quad	6
	.size	.Lconst.521, 16

	.type	.Lconst.522,@object
	.section	.rodata..Lconst.522,"a",@progbits
.Lconst.522:
	.asciz	"$CLANG_"
	.size	.Lconst.522, 8

	.type	.Lconst.523,@object
	.section	.rodata..Lconst.523,"a",@progbits
	.p2align	3
.Lconst.523:
	.quad	.Lconst.522
	.quad	7
	.size	.Lconst.523, 16

	.type	.Lconst.524,@object
	.section	.rodata..Lconst.524,"a",@progbits
.Lconst.524:
	.asciz	"--show-sdk-path"
	.size	.Lconst.524, 16

	.type	.Lconst.525,@object
	.section	.rodata..Lconst.525,"a",@progbits
	.p2align	3
.Lconst.525:
	.quad	.Lconst.524
	.quad	15
	.size	.Lconst.525, 16

	.type	.Lconst.526,@object
	.section	.rodata..Lconst.526,"a",@progbits
.Lconst.526:
	.asciz	"$SDK_"
	.size	.Lconst.526, 6

	.type	.Lconst.527,@object
	.section	.rodata..Lconst.527,"a",@progbits
	.p2align	3
.Lconst.527:
	.quad	.Lconst.526
	.quad	5
	.size	.Lconst.527, 16

	.type	.Lconst.528,@object
	.section	.rodata..Lconst.528,"a",@progbits
.Lconst.528:
	.asciz	"-isysroot "
	.size	.Lconst.528, 11

	.type	.Lconst.529,@object
	.section	.rodata..Lconst.529,"a",@progbits
	.p2align	3
.Lconst.529:
	.quad	.Lconst.528
	.quad	10
	.size	.Lconst.529, 16

	.type	command_line_arguments.EnvClang..f,@object
	.section	.rodata.command_line_arguments.EnvClang..f,"a",@progbits
	.globl	command_line_arguments.EnvClang..f
	.p2align	3
command_line_arguments.EnvClang..f:
	.quad	command_line_arguments.EnvClang
	.size	command_line_arguments.EnvClang..f, 8

	.type	.Lconst.531,@object
	.section	.rodata..Lconst.531,"a",@progbits
.Lconst.531:
	.asciz	"iphoneos"
	.size	.Lconst.531, 9

	.type	.Lconst.533,@object
	.section	.rodata..Lconst.533,"a",@progbits
.Lconst.533:
	.asciz	" -miphoneos-version-min=6.1 -arch "
	.size	.Lconst.533, 35

	.type	.Lconst.534,@object
	.section	.rodata..Lconst.534,"a",@progbits
	.p2align	3
.Lconst.534:
	.quad	.Lconst.533
	.quad	34
	.size	.Lconst.534, 16

	.type	.Lconst.535,@object
	.section	.rodata..Lconst.535,"a",@progbits
.Lconst.535:
	.asciz	"GOOS=darwin"
	.size	.Lconst.535, 12

	.type	.Lconst.536,@object
	.section	.rodata..Lconst.536,"a",@progbits
	.p2align	3
.Lconst.536:
	.quad	.Lconst.535
	.quad	11
	.size	.Lconst.536, 16

	.type	.Lconst.537,@object
	.section	.rodata..Lconst.537,"a",@progbits
.Lconst.537:
	.asciz	"GOARCH=arm"
	.size	.Lconst.537, 11

	.type	.Lconst.538,@object
	.section	.rodata..Lconst.538,"a",@progbits
	.p2align	3
.Lconst.538:
	.quad	.Lconst.537
	.quad	10
	.size	.Lconst.538, 16

	.type	command_line_arguments.DarwinArmEnv..f,@object
	.section	.rodata.command_line_arguments.DarwinArmEnv..f,"a",@progbits
	.globl	command_line_arguments.DarwinArmEnv..f
	.p2align	3
command_line_arguments.DarwinArmEnv..f:
	.quad	command_line_arguments.DarwinArmEnv
	.size	command_line_arguments.DarwinArmEnv..f, 8

	.type	.Lconst.539,@object
	.section	.rodata..Lconst.539,"a",@progbits
.Lconst.539:
	.asciz	"GOARCH=arm64"
	.size	.Lconst.539, 13

	.type	.Lconst.540,@object
	.section	.rodata..Lconst.540,"a",@progbits
	.p2align	3
.Lconst.540:
	.quad	.Lconst.539
	.quad	12
	.size	.Lconst.540, 16

	.type	type...67x.7string,@object
	.section	.rodata.type...67x.7string,"aG",@progbits,type...67x.7string,comdat
	.weak	type...67x.7string
	.p2align	4
type...67x.7string:
	.quad	112
	.quad	104
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkfa
	.quad	go..C242
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	7
	.size	type...67x.7string, 96

	.type	.Lconst.541,@object
	.section	.rodata..Lconst.541,"a",@progbits
.Lconst.541:
	.asciz	"[7]string"
	.size	.Lconst.541, 10

	.type	go..C242,@object
	.section	.rodata.go..C242,"a",@progbits
	.p2align	3
go..C242:
	.quad	.Lconst.541
	.quad	9
	.size	go..C242, 16

	.type	command_line_arguments.DarwinArm64Env..f,@object
	.section	.rodata.command_line_arguments.DarwinArm64Env..f,"a",@progbits
	.globl	command_line_arguments.DarwinArm64Env..f
	.p2align	3
command_line_arguments.DarwinArm64Env..f:
	.quad	command_line_arguments.DarwinArm64Env
	.size	command_line_arguments.DarwinArm64Env..f, 8

	.type	.Lconst.542,@object
	.section	.rodata..Lconst.542,"a",@progbits
.Lconst.542:
	.asciz	"iphonesimulator"
	.size	.Lconst.542, 16

	.type	.Lconst.544,@object
	.section	.rodata..Lconst.544,"a",@progbits
.Lconst.544:
	.asciz	" -mios-simulator-version-min=6.1 -arch "
	.size	.Lconst.544, 40

	.type	.Lconst.545,@object
	.section	.rodata..Lconst.545,"a",@progbits
	.p2align	3
.Lconst.545:
	.quad	.Lconst.544
	.quad	39
	.size	.Lconst.545, 16

	.type	.Lconst.546,@object
	.section	.rodata..Lconst.546,"a",@progbits
.Lconst.546:
	.asciz	"GOARCH=386"
	.size	.Lconst.546, 11

	.type	.Lconst.547,@object
	.section	.rodata..Lconst.547,"a",@progbits
	.p2align	3
.Lconst.547:
	.quad	.Lconst.546
	.quad	10
	.size	.Lconst.547, 16

	.type	command_line_arguments.Darwin386Env..f,@object
	.section	.rodata.command_line_arguments.Darwin386Env..f,"a",@progbits
	.globl	command_line_arguments.Darwin386Env..f
	.p2align	3
command_line_arguments.Darwin386Env..f:
	.quad	command_line_arguments.Darwin386Env
	.size	command_line_arguments.Darwin386Env..f, 8

	.type	.Lconst.548,@object
	.section	.rodata..Lconst.548,"a",@progbits
.Lconst.548:
	.asciz	" -mios-simulator-version-min=6.1 -arch x86_64"
	.size	.Lconst.548, 46

	.type	.Lconst.549,@object
	.section	.rodata..Lconst.549,"a",@progbits
	.p2align	3
.Lconst.549:
	.quad	.Lconst.548
	.quad	45
	.size	.Lconst.549, 16

	.type	.Lconst.550,@object
	.section	.rodata..Lconst.550,"a",@progbits
.Lconst.550:
	.asciz	"GOARCH=amd64"
	.size	.Lconst.550, 13

	.type	.Lconst.551,@object
	.section	.rodata..Lconst.551,"a",@progbits
	.p2align	3
.Lconst.551:
	.quad	.Lconst.550
	.quad	12
	.size	.Lconst.551, 16

	.type	command_line_arguments.DarwinAmd64Env..f,@object
	.section	.rodata.command_line_arguments.DarwinAmd64Env..f,"a",@progbits
	.globl	command_line_arguments.DarwinAmd64Env..f
	.p2align	3
command_line_arguments.DarwinAmd64Env..f:
	.quad	command_line_arguments.DarwinAmd64Env
	.size	command_line_arguments.DarwinAmd64Env..f, 8

	.type	.Lconst.552,@object
	.section	.rodata..Lconst.552,"a",@progbits
.Lconst.552:
	.asciz	"Invalid or unsupported Go installation. See https://gomatcha.io/guide/installation/ for detailed instructions.\n"
	.size	.Lconst.552, 112

	.type	.Lconst.553,@object
	.section	.rodata..Lconst.553,"a",@progbits
	.p2align	3
.Lconst.553:
	.quad	.Lconst.552
	.quad	111
	.size	.Lconst.553, 16

	.type	.Lconst.554,@object
	.section	.rodata..Lconst.554,"a",@progbits
.Lconst.554:
	.asciz	"go"
	.size	.Lconst.554, 3

	.type	.Lconst.556,@object
	.section	.rodata..Lconst.556,"a",@progbits
.Lconst.556:
	.asciz	"go was not found in $PATH."
	.size	.Lconst.556, 27

	.type	.Lconst.558,@object
	.section	.rodata.cst16,"aM",@progbits,16
.Lconst.558:
	.ascii	"go version go1.4"
	.size	.Lconst.558, 16

	.type	.Lconst.559,@object
.Lconst.559:
	.ascii	"go version go1.5"
	.size	.Lconst.559, 16

	.type	.Lconst.560,@object
.Lconst.560:
	.ascii	"go version go1.6"
	.size	.Lconst.560, 16

	.type	.Lconst.561,@object
	.section	.rodata..Lconst.561,"a",@progbits
.Lconst.561:
	.asciz	"Go 1.7 or newer is required"
	.size	.Lconst.561, 28

	.type	command_line_arguments.FindEnv..f,@object
	.section	.rodata.command_line_arguments.FindEnv..f,"a",@progbits
	.globl	command_line_arguments.FindEnv..f
	.p2align	3
command_line_arguments.FindEnv..f:
	.quad	command_line_arguments.FindEnv
	.size	command_line_arguments.FindEnv..f, 8

	.type	.Lconst.563,@object
	.section	.rodata..Lconst.563,"a",@progbits
.Lconst.563:
	.asciz	"pkg"
	.size	.Lconst.563, 4

	.type	.Lconst.564,@object
	.section	.rodata..Lconst.564,"a",@progbits
	.p2align	3
.Lconst.564:
	.quad	.Lconst.563
	.quad	3
	.size	.Lconst.564, 16

	.type	.Lconst.565,@object
	.section	.rodata..Lconst.565,"a",@progbits
.Lconst.565:
	.asciz	"$GOPATH does not exist"
	.size	.Lconst.565, 23

	.type	command_line_arguments.MatchaPkgPath..f,@object
	.section	.rodata.command_line_arguments.MatchaPkgPath..f,"a",@progbits
	.globl	command_line_arguments.MatchaPkgPath..f
	.p2align	3
command_line_arguments.MatchaPkgPath..f:
	.quad	command_line_arguments.MatchaPkgPath
	.size	command_line_arguments.MatchaPkgPath..f, 8

	.type	.Lconst.567,@object
	.section	.rodata..Lconst.567,"a",@progbits
.Lconst.567:
	.asciz	"GOOS"
	.size	.Lconst.567, 5

	.type	.Lconst.569,@object
	.section	.rodata..Lconst.569,"a",@progbits
.Lconst.569:
	.asciz	"PkgPath(): Missing GOOS or GOARCH"
	.size	.Lconst.569, 34

	.type	.Lconst.571,@object
	.section	.rodata..Lconst.571,"a",@progbits
.Lconst.571:
	.asciz	"/pkg_"
	.size	.Lconst.571, 6

	.type	.Lconst.572,@object
	.section	.rodata..Lconst.572,"a",@progbits
	.p2align	3
.Lconst.572:
	.quad	.Lconst.571
	.quad	5
	.size	.Lconst.572, 16

	.type	.Lconst.573,@object
	.section	.rodata..Lconst.573,"a",@progbits
.Lconst.573:
	.asciz	"_"
	.size	.Lconst.573, 2

	.type	.Lconst.574,@object
	.section	.rodata..Lconst.574,"a",@progbits
	.p2align	3
.Lconst.574:
	.quad	.Lconst.573
	.quad	1
	.size	.Lconst.574, 16

	.type	command_line_arguments.PkgPath..f,@object
	.section	.rodata.command_line_arguments.PkgPath..f,"a",@progbits
	.globl	command_line_arguments.PkgPath..f
	.p2align	3
command_line_arguments.PkgPath..f:
	.quad	command_line_arguments.PkgPath
	.size	command_line_arguments.PkgPath..f, 8

	.type	.Lconst.575,@object
	.section	.rodata..Lconst.575,"a",@progbits
.Lconst.575:
	.asciz	"env"
	.size	.Lconst.575, 4

	.type	.Lconst.576,@object
	.section	.rodata..Lconst.576,"a",@progbits
	.p2align	3
.Lconst.576:
	.quad	.Lconst.575
	.quad	3
	.size	.Lconst.576, 16

	.type	command_line_arguments.GoEnv..f,@object
	.section	.rodata.command_line_arguments.GoEnv..f,"a",@progbits
	.globl	command_line_arguments.GoEnv..f
	.p2align	3
command_line_arguments.GoEnv..f:
	.quad	command_line_arguments.GoEnv
	.size	command_line_arguments.GoEnv..f, 8

	.type	.Lconst.577,@object
	.section	.rodata..Lconst.577,"a",@progbits
	.p2align	3
.Lconst.577:
	.quad	.Lconst.317
	.quad	7
	.size	.Lconst.577, 16

	.type	type...622x.7uint8,@object
	.section	.rodata.type...622x.7uint8,"aG",@progbits,type...622x.7uint8,comdat
	.weak	type...622x.7uint8
	.p2align	4
type...622x.7uint8:
	.quad	22
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C243
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	22
	.size	type...622x.7uint8, 96

	.type	.Lconst.578,@object
	.section	.rodata..Lconst.578,"a",@progbits
.Lconst.578:
	.asciz	"[22]uint8"
	.size	.Lconst.578, 10

	.type	go..C243,@object
	.section	.rodata.go..C243,"a",@progbits
	.p2align	3
go..C243:
	.quad	.Lconst.578
	.quad	9
	.size	go..C243, 16

	.type	.Lconst.579,@object
	.section	.rodata..Lconst.579,"a",@progbits
	.p2align	4
.Lconst.579:
	.ascii	"go version goX.X.X x/x"
	.size	.Lconst.579, 22

	.type	command_line_arguments.GoVersion..f,@object
	.section	.rodata.command_line_arguments.GoVersion..f,"a",@progbits
	.globl	command_line_arguments.GoVersion..f
	.p2align	3
command_line_arguments.GoVersion..f:
	.quad	command_line_arguments.GoVersion
	.size	command_line_arguments.GoVersion..f, 8

	.type	.Lconst.580,@object
	.section	.rodata..Lconst.580,"a",@progbits
.Lconst.580:
	.asciz	"Matcha not initialized for this target. Missing directory at %v."
	.size	.Lconst.580, 65

	.type	.Lconst.582,@object
	.section	.rodata..Lconst.582,"a",@progbits
.Lconst.582:
	.asciz	"-pkgdir="
	.size	.Lconst.582, 9

	.type	.Lconst.583,@object
	.section	.rodata..Lconst.583,"a",@progbits
	.p2align	3
.Lconst.583:
	.quad	.Lconst.582
	.quad	8
	.size	.Lconst.583, 16

	.type	.Lconst.584,@object
	.section	.rodata..Lconst.584,"a",@progbits
.Lconst.584:
	.asciz	"build"
	.size	.Lconst.584, 6

	.type	.Lconst.585,@object
	.section	.rodata..Lconst.585,"a",@progbits
	.p2align	3
.Lconst.585:
	.quad	.Lconst.584
	.quad	5
	.size	.Lconst.585, 16

	.type	.Lconst.586,@object
	.section	.rodata..Lconst.586,"a",@progbits
.Lconst.586:
	.asciz	"-tags"
	.size	.Lconst.586, 6

	.type	.Lconst.587,@object
	.section	.rodata..Lconst.587,"a",@progbits
	.p2align	3
.Lconst.587:
	.quad	.Lconst.586
	.quad	5
	.size	.Lconst.587, 16

	.type	.Lconst.588,@object
	.section	.rodata..Lconst.588,"a",@progbits
.Lconst.588:
	.asciz	"-v"
	.size	.Lconst.588, 3

	.type	.Lconst.589,@object
	.section	.rodata..Lconst.589,"a",@progbits
	.p2align	3
.Lconst.589:
	.quad	.Lconst.588
	.quad	2
	.size	.Lconst.589, 16

	.type	.Lconst.590,@object
	.section	.rodata..Lconst.590,"a",@progbits
.Lconst.590:
	.asciz	"-x"
	.size	.Lconst.590, 3

	.type	.Lconst.591,@object
	.section	.rodata..Lconst.591,"a",@progbits
	.p2align	3
.Lconst.591:
	.quad	.Lconst.590
	.quad	2
	.size	.Lconst.591, 16

	.type	.Lconst.592,@object
	.section	.rodata..Lconst.592,"a",@progbits
.Lconst.592:
	.asciz	"-gcflags"
	.size	.Lconst.592, 9

	.type	.Lconst.593,@object
	.section	.rodata..Lconst.593,"a",@progbits
	.p2align	3
.Lconst.593:
	.quad	.Lconst.592
	.quad	8
	.size	.Lconst.593, 16

	.type	.Lconst.594,@object
	.section	.rodata..Lconst.594,"a",@progbits
.Lconst.594:
	.asciz	"-ldflags"
	.size	.Lconst.594, 9

	.type	.Lconst.595,@object
	.section	.rodata..Lconst.595,"a",@progbits
	.p2align	3
.Lconst.595:
	.quad	.Lconst.594
	.quad	8
	.size	.Lconst.595, 16

	.type	.Lconst.596,@object
	.section	.rodata..Lconst.596,"a",@progbits
.Lconst.596:
	.asciz	"-work"
	.size	.Lconst.596, 6

	.type	.Lconst.597,@object
	.section	.rodata..Lconst.597,"a",@progbits
	.p2align	3
.Lconst.597:
	.quad	.Lconst.596
	.quad	5
	.size	.Lconst.597, 16

	.type	command_line_arguments.GoBuild..f,@object
	.section	.rodata.command_line_arguments.GoBuild..f,"a",@progbits
	.globl	command_line_arguments.GoBuild..f
	.p2align	3
command_line_arguments.GoBuild..f:
	.quad	command_line_arguments.GoBuild
	.size	command_line_arguments.GoBuild..f, 8

	.type	.Lconst.598,@object
	.section	.rodata..Lconst.598,"a",@progbits
.Lconst.598:
	.asciz	"install"
	.size	.Lconst.598, 8

	.type	.Lconst.599,@object
	.section	.rodata..Lconst.599,"a",@progbits
	.p2align	3
.Lconst.599:
	.quad	.Lconst.598
	.quad	7
	.size	.Lconst.599, 16

	.type	command_line_arguments.InstallPkg..f,@object
	.section	.rodata.command_line_arguments.InstallPkg..f,"a",@progbits
	.globl	command_line_arguments.InstallPkg..f
	.p2align	3
command_line_arguments.InstallPkg..f:
	.quad	command_line_arguments.InstallPkg
	.size	command_line_arguments.InstallPkg..f, 8

	.type	type..map.6string.7.1go_build.Package,@object
	.section	.rodata.type..map.6string.7.1go_build.Package,"aG",@progbits,type..map.6string.7.1go_build.Package,comdat
	.weak	type..map.6string.7.1go_build.Package
	.p2align	4
type..map.6string.7.1go_build.Package:
	.quad	8
	.quad	8
	.long	1185907539
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C244
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...1go_build.Package
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7.1go_build.Package, 112

	.type	.Lconst.600,@object
	.section	.rodata..Lconst.600,"a",@progbits
.Lconst.600:
	.asciz	"map[string]*\tgo_build\tbuild.Package"
	.size	.Lconst.600, 36

	.type	go..C244,@object
	.section	.rodata.go..C244,"a",@progbits
	.p2align	3
go..C244:
	.quad	.Lconst.600
	.quad	35
	.size	go..C244, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	3560492932
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C245
	.quad	0
	.quad	0
	.quad	go..C252
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5, 96

	.type	.Lconst.601,@object
	.section	.rodata..Lconst.601,"a",@progbits
.Lconst.601:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]*\tgo_build\tbuild.Package; overflow * }"
	.size	.Lconst.601, 92

	.type	go..C245,@object
	.section	.rodata.go..C245,"a",@progbits
	.p2align	3
go..C245:
	.quad	.Lconst.601
	.quad	91
	.size	go..C245, 16

	.type	go..C246,@object
	.section	.rodata.go..C246,"a",@progbits
	.p2align	3
go..C246:
	.quad	.Lconst.114
	.quad	7
	.size	go..C246, 16

	.type	go..C247,@object
	.section	.rodata.go..C247,"a",@progbits
	.p2align	3
go..C247:
	.quad	.Lconst.119
	.quad	4
	.size	go..C247, 16

	.type	go..C248,@object
	.section	.rodata.go..C248,"a",@progbits
	.p2align	3
go..C248:
	.quad	.Lconst.120
	.quad	6
	.size	go..C248, 16

	.type	type...68x.7.1go_build.Package,@object
	.section	.rodata.type...68x.7.1go_build.Package,"aG",@progbits,type...68x.7.1go_build.Package,comdat
	.weak	type...68x.7.1go_build.Package
	.p2align	4
type...68x.7.1go_build.Package:
	.quad	64
	.quad	64
	.long	2074753377
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C249
	.quad	0
	.quad	0
	.quad	type...1go_build.Package
	.quad	type...6.7.1go_build.Package
	.quad	8
	.size	type...68x.7.1go_build.Package, 96

	.type	.Lconst.602,@object
	.section	.rodata..Lconst.602,"a",@progbits
.Lconst.602:
	.asciz	"[8]*\tgo_build\tbuild.Package"
	.size	.Lconst.602, 28

	.type	go..C249,@object
	.section	.rodata.go..C249,"a",@progbits
	.p2align	3
go..C249:
	.quad	.Lconst.602
	.quad	27
	.size	go..C249, 16

	.type	type...6.7.1go_build.Package,@object
	.section	.rodata.type...6.7.1go_build.Package,"aG",@progbits,type...6.7.1go_build.Package,comdat
	.weak	type...6.7.1go_build.Package
	.p2align	4
type...6.7.1go_build.Package:
	.quad	24
	.quad	8
	.long	3184860343
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C250
	.quad	0
	.quad	0
	.quad	type...1go_build.Package
	.size	type...6.7.1go_build.Package, 80

	.type	.Lconst.603,@object
	.section	.rodata..Lconst.603,"a",@progbits
.Lconst.603:
	.asciz	"[]*\tgo_build\tbuild.Package"
	.size	.Lconst.603, 27

	.type	go..C250,@object
	.section	.rodata.go..C250,"a",@progbits
	.p2align	3
go..C250:
	.quad	.Lconst.603
	.quad	26
	.size	go..C250, 16

	.type	go..C251,@object
	.section	.rodata.go..C251,"a",@progbits
	.p2align	3
go..C251:
	.quad	.Lconst.123
	.quad	8
	.size	go..C251, 16

	.type	go..C252,@object
	.section	.data.go..C252,"aw",@progbits
	.p2align	4
go..C252:
	.quad	go..C246
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C247
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C248
	.quad	0
	.quad	type...68x.7.1go_build.Package
	.quad	0
	.quad	272
	.quad	go..C251
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C252, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1467718116
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C253
	.quad	0
	.quad	0
	.quad	go..C264
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.604,@object
	.section	.rodata..Lconst.604,"a",@progbits
.Lconst.604:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tgo_build\tbuild.Package; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tgo_build\tbuild.Package; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.604, 310

	.type	go..C253,@object
	.section	.rodata.go..C253,"a",@progbits
	.p2align	3
go..C253:
	.quad	.Lconst.604
	.quad	309
	.size	go..C253, 16

	.type	go..C254,@object
	.section	.rodata.go..C254,"a",@progbits
	.p2align	3
go..C254:
	.quad	.Lconst.125
	.quad	5
	.size	go..C254, 16

	.type	go..C255,@object
	.section	.rodata.go..C255,"a",@progbits
	.p2align	3
go..C255:
	.quad	.Lconst.128
	.quad	5
	.size	go..C255, 16

	.type	go..C256,@object
	.section	.rodata.go..C256,"a",@progbits
	.p2align	3
go..C256:
	.quad	.Lconst.129
	.quad	1
	.size	go..C256, 16

	.type	go..C257,@object
	.section	.rodata.go..C257,"a",@progbits
	.p2align	3
go..C257:
	.quad	.Lconst.130
	.quad	9
	.size	go..C257, 16

	.type	go..C258,@object
	.section	.rodata.go..C258,"a",@progbits
	.p2align	3
go..C258:
	.quad	.Lconst.133
	.quad	5
	.size	go..C258, 16

	.type	go..C259,@object
	.section	.rodata.go..C259,"a",@progbits
	.p2align	3
go..C259:
	.quad	.Lconst.136
	.quad	7
	.size	go..C259, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	1133312073
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C260
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.605,@object
	.section	.rodata..Lconst.605,"a",@progbits
.Lconst.605:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]*\tgo_build\tbuild.Package; overflow * }"
	.size	.Lconst.605, 93

	.type	go..C260,@object
	.section	.rodata.go..C260,"a",@progbits
	.p2align	3
go..C260:
	.quad	.Lconst.605
	.quad	92
	.size	go..C260, 16

	.type	go..C261,@object
	.section	.rodata.go..C261,"a",@progbits
	.p2align	3
go..C261:
	.quad	.Lconst.138
	.quad	10
	.size	go..C261, 16

	.type	go..C262,@object
	.section	.rodata.go..C262,"a",@progbits
	.p2align	3
go..C262:
	.quad	.Lconst.139
	.quad	9
	.size	go..C262, 16

	.type	go..C263,@object
	.section	.rodata.go..C263,"a",@progbits
	.p2align	3
go..C263:
	.quad	.Lconst.142
	.quad	5
	.size	go..C263, 16

	.type	go..C264,@object
	.section	.data.go..C264,"aw",@progbits
	.p2align	4
go..C264:
	.quad	go..C254
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C255
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C256
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C257
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C258
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C259
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C261
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1go_build.Package.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C262
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C263
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C264, 360

	.type	.Lconst.606,@object
	.section	.rodata..Lconst.606,"a",@progbits
.Lconst.606:
	.asciz	"go importall %v %v\n"
	.size	.Lconst.606, 20

	.type	type...60x.7.1go_build.Package,@object
	.section	.rodata.type...60x.7.1go_build.Package,"aG",@progbits,type...60x.7.1go_build.Package,comdat
	.weak	type...60x.7.1go_build.Package
	.p2align	4
type...60x.7.1go_build.Package:
	.quad	0
	.quad	0
	.long	2074753377
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C265
	.quad	0
	.quad	0
	.quad	type...1go_build.Package
	.quad	type...6.7.1go_build.Package
	.quad	0
	.size	type...60x.7.1go_build.Package, 96

	.type	.Lconst.609,@object
	.section	.rodata..Lconst.609,"a",@progbits
.Lconst.609:
	.asciz	"[0]*\tgo_build\tbuild.Package"
	.size	.Lconst.609, 28

	.type	go..C265,@object
	.section	.rodata.go..C265,"a",@progbits
	.p2align	3
go..C265:
	.quad	.Lconst.609
	.quad	27
	.size	go..C265, 16

	.type	command_line_arguments.ImportAll..f,@object
	.section	.rodata.command_line_arguments.ImportAll..f,"a",@progbits
	.globl	command_line_arguments.ImportAll..f
	.p2align	3
command_line_arguments.ImportAll..f:
	.quad	command_line_arguments.ImportAll
	.size	command_line_arguments.ImportAll..f, 8

	.type	.Lconst.611,@object
	.section	.rodata..Lconst.611,"a",@progbits
.Lconst.611:
	.asciz	"C"
	.size	.Lconst.611, 2

	.type	command_line_arguments.Import..f,@object
	.section	.rodata.command_line_arguments.Import..f,"a",@progbits
	.globl	command_line_arguments.Import..f
	.p2align	3
command_line_arguments.Import..f:
	.quad	command_line_arguments.Import
	.size	command_line_arguments.Import..f, 8

	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f,@object
	.section	.rodata.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f,"a",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f
	.p2align	3
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f:
	.quad	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash..f, 8

	.type	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f,@object
	.section	.rodata.command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f,"a",@progbits
	.globl	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f
	.p2align	3
command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f:
	.quad	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq
	.size	command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq..f, 8

	.type	gcbits..GGGGGGa,@object
	.section	.rodata.gcbits..GGGGGGa,"aG",@progbits,gcbits..GGGGGGa,comdat
	.weak	gcbits..GGGGGGa
gcbits..GGGGGGa:
	.ascii	"\377\377\377?"
	.size	gcbits..GGGGGGa, 4

	.type	gcbits..pppppppa,@object
	.section	.rodata.gcbits..pppppppa,"aG",@progbits,gcbits..pppppppa,comdat
	.weak	gcbits..pppppppa
gcbits..pppppppa:
	.ascii	"\357\275\367\336\003"
	.size	gcbits..pppppppa, 5

	.type	gcbits..ppppa,@object
	.section	.rodata.gcbits..ppppa,"aG",@progbits,gcbits..ppppa,comdat
	.weak	gcbits..ppppa
gcbits..ppppa:
	.ascii	"\357\275\007"
	.size	gcbits..ppppa, 3

	.type	gcbits..pppppppppa,@object
	.section	.rodata.gcbits..pppppppppa,"aG",@progbits,gcbits..pppppppppa,comdat
	.weak	gcbits..pppppppppa
gcbits..pppppppppa:
	.ascii	"\357\275\367\336{\017"
	.size	gcbits..pppppppppa, 6

	.type	gcbits..pa,@object
	.section	.rodata.gcbits..pa,"aG",@progbits,gcbits..pa,comdat
	.weak	gcbits..pa
gcbits..pa:
	.byte	15
	.size	gcbits..pa, 1

	.type	gcbits..GGaa,@object
	.section	.rodata.gcbits..GGaa,"aG",@progbits,gcbits..GGaa,comdat
	.weak	gcbits..GGaa
gcbits..GGaa:
	.ascii	"\377\003"
	.size	gcbits..GGaa, 2

	.type	gcbits..ppppppppppppa,@object
	.section	.rodata.gcbits..ppppppppppppa,"aG",@progbits,gcbits..ppppppppppppa,comdat
	.weak	gcbits..ppppppppppppa
gcbits..ppppppppppppa:
	.ascii	"\357\275\367\336{\357\275\007"
	.size	gcbits..ppppppppppppa, 8

	.type	gcbits..pppa,@object
	.section	.rodata.gcbits..pppa,"aG",@progbits,gcbits..pppa,comdat
	.weak	gcbits..pppa
gcbits..pppa:
	.ascii	"\357="
	.size	gcbits..pppa, 2

	.type	gcbits..ppaa,@object
	.section	.rodata.gcbits..ppaa,"aG",@progbits,gcbits..ppaa,comdat
	.weak	gcbits..ppaa
gcbits..ppaa:
	.ascii	"\357\001"
	.size	gcbits..ppaa, 2

	.type	go..C0,@object
	.section	.data.go..C0,"aw",@progbits
	.p2align	4
go..C0:
	.quad	0
	.quad	26
	.quad	command_line_arguments.BindFile
	.quad	16
	.quad	8
	.quad	gcbits..ba
	.quad	go..C18
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C20
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C21
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C32
	.quad	240
	.quad	240
	.quad	gcbits..GGGGGGa
	.quad	go..C49
	.quad	280
	.quad	272
	.quad	gcbits..pppppppa
	.quad	go..C65
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C97
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C100
	.quad	40
	.quad	32
	.quad	gcbits..pa
	.quad	go..C107
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C117
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C119
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C120
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C122
	.quad	80
	.quad	80
	.quad	gcbits..GGaa
	.quad	go..C143
	.quad	480
	.quad	472
	.quad	gcbits..ppppppppppppa
	.quad	go..C153
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C164
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C176
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C195
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C214
	.quad	280
	.quad	272
	.quad	gcbits..pppppppa
	.quad	go..C218
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C221
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C228
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C240
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C252
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C264
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.size	go..C0, 848

	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"llvm-goc"
.Linfo_string1:
	.asciz	"./android.go"
.Linfo_string2:
	.asciz	"/home/wangcong/go_path/src/gomatcha.io/matcha/cmd"
.Linfo_string3:
	.asciz	"runtime.writeBarrier"
.Linfo_string4:
	.asciz	"uint32"
.Linfo_string5:
	.asciz	"io_ioutil.Discard"
.Linfo_string6:
	.asciz	"__methods"
.Linfo_string7:
	.asciz	"__type_descriptor"
.Linfo_string8:
	.asciz	"size"
.Linfo_string9:
	.asciz	"uintptr"
.Linfo_string10:
	.asciz	"ptrdata"
.Linfo_string11:
	.asciz	"hash"
.Linfo_string12:
	.asciz	"kind"
.Linfo_string13:
	.asciz	"uint8"
.Linfo_string14:
	.asciz	"align"
.Linfo_string15:
	.asciz	"fieldAlign"
.Linfo_string16:
	.asciz	"hashfn"
.Linfo_string17:
	.asciz	"code"
.Linfo_string18:
	.asciz	"void"
.Linfo_string19:
	.asciz	"__go_descriptor"
.Linfo_string20:
	.asciz	"equalfn"
.Linfo_string21:
	.asciz	"bool"
.Linfo_string22:
	.asciz	"gcdata"
.Linfo_string23:
	.asciz	"string"
.Linfo_string24:
	.asciz	"__data"
.Linfo_string25:
	.asciz	"__length"
.Linfo_string26:
	.asciz	"int"
.Linfo_string27:
	.asciz	"uncommonType"
.Linfo_string28:
	.asciz	"name"
.Linfo_string29:
	.asciz	"pkgPath"
.Linfo_string30:
	.asciz	"methods"
.Linfo_string31:
	.asciz	"__values"
.Linfo_string32:
	.asciz	"mtyp"
.Linfo_string33:
	.asciz	"typ"
.Linfo_string34:
	.asciz	"tfn"
.Linfo_string35:
	.asciz	"method"
.Linfo_string36:
	.asciz	"__count"
.Linfo_string37:
	.asciz	"__capacity"
.Linfo_string38:
	.asciz	"struct{*method,int,int}"
.Linfo_string39:
	.asciz	"ptrToThis"
.Linfo_string40:
	.asciz	"_type"
.Linfo_string41:
	.asciz	"Write"
.Linfo_string42:
	.asciz	"n"
.Linfo_string43:
	.asciz	"err"
.Linfo_string44:
	.asciz	"Error"
.Linfo_string45:
	.asciz	"struct{*_type,*func(*void)string}"
.Linfo_string46:
	.asciz	"__object"
.Linfo_string47:
	.asciz	"error"
.Linfo_string48:
	.asciz	"struct{int,error}"
.Linfo_string49:
	.asciz	"struct{*uint8,int,int}"
.Linfo_string50:
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string51:
	.asciz	"Writer"
.Linfo_string52:
	.asciz	"go_build.Default"
.Linfo_string53:
	.asciz	"GOARCH"
.Linfo_string54:
	.asciz	"GOOS"
.Linfo_string55:
	.asciz	"GOROOT"
.Linfo_string56:
	.asciz	"GOPATH"
.Linfo_string57:
	.asciz	"CgoEnabled"
.Linfo_string58:
	.asciz	"UseAllFiles"
.Linfo_string59:
	.asciz	"Compiler"
.Linfo_string60:
	.asciz	"BuildTags"
.Linfo_string61:
	.asciz	"struct{*string,int,int}"
.Linfo_string62:
	.asciz	"ReleaseTags"
.Linfo_string63:
	.asciz	"InstallSuffix"
.Linfo_string64:
	.asciz	"JoinPath"
.Linfo_string65:
	.asciz	"SplitPathList"
.Linfo_string66:
	.asciz	"IsAbsPath"
.Linfo_string67:
	.asciz	"IsDir"
.Linfo_string68:
	.asciz	"HasSubdir"
.Linfo_string69:
	.asciz	"rel"
.Linfo_string70:
	.asciz	"ok"
.Linfo_string71:
	.asciz	"struct{string,bool}"
.Linfo_string72:
	.asciz	"ReadDir"
.Linfo_string73:
	.asciz	"UNNAMED"
.Linfo_string74:
	.asciz	"ModTime"
.Linfo_string75:
	.asciz	"wall"
.Linfo_string76:
	.asciz	"uint64"
.Linfo_string77:
	.asciz	"ext"
.Linfo_string78:
	.asciz	"int64"
.Linfo_string79:
	.asciz	"loc"
.Linfo_string80:
	.asciz	"zone"
.Linfo_string81:
	.asciz	"offset"
.Linfo_string82:
	.asciz	"isDST"
.Linfo_string83:
	.asciz	".time.zone"
.Linfo_string84:
	.asciz	"struct{*.time.zone,int,int}"
.Linfo_string85:
	.asciz	"tx"
.Linfo_string86:
	.asciz	"when"
.Linfo_string87:
	.asciz	"index"
.Linfo_string88:
	.asciz	"isstd"
.Linfo_string89:
	.asciz	"isutc"
.Linfo_string90:
	.asciz	".time.zoneTrans"
.Linfo_string91:
	.asciz	"struct{*.time.zoneTrans,int,int}"
.Linfo_string92:
	.asciz	"cacheStart"
.Linfo_string93:
	.asciz	"cacheEnd"
.Linfo_string94:
	.asciz	"cacheZone"
.Linfo_string95:
	.asciz	"Location"
.Linfo_string96:
	.asciz	"Time"
.Linfo_string97:
	.asciz	"Mode"
.Linfo_string98:
	.asciz	"FileMode"
.Linfo_string99:
	.asciz	"Name"
.Linfo_string100:
	.asciz	"Size"
.Linfo_string101:
	.asciz	"Sys"
.Linfo_string102:
	.asciz	"struct{*_type,*void}"
.Linfo_string103:
	.asciz	"struct{*_type,*func(*void)bool,*func(*void)Time,*func(*void)FileMode,*func(*void)string,*func(*void)int64,*func(*void)struct{*_type,*void}}"
.Linfo_string104:
	.asciz	"FileInfo"
.Linfo_string105:
	.asciz	"struct{*FileInfo,int,int}"
.Linfo_string106:
	.asciz	"struct{struct{*FileInfo,int,int},error}"
.Linfo_string107:
	.asciz	"OpenFile"
.Linfo_string108:
	.asciz	"Close"
.Linfo_string109:
	.asciz	"Read"
.Linfo_string110:
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string111:
	.asciz	"ReadCloser"
.Linfo_string112:
	.asciz	"struct{ReadCloser,error}"
.Linfo_string113:
	.asciz	"Context"
.Linfo_string114:
	.asciz	"command_line_arguments.BindFile"
.Linfo_string115:
	.asciz	"os.Stderr"
.Linfo_string116:
	.asciz	"file"
.Linfo_string117:
	.asciz	"pfd"
.Linfo_string118:
	.asciz	"fdmu"
.Linfo_string119:
	.asciz	"state"
.Linfo_string120:
	.asciz	"rsema"
.Linfo_string121:
	.asciz	"wsema"
.Linfo_string122:
	.asciz	".internal/poll.fdMutex"
.Linfo_string123:
	.asciz	"Sysfd"
.Linfo_string124:
	.asciz	"pd"
.Linfo_string125:
	.asciz	"runtimeCtx"
.Linfo_string126:
	.asciz	".internal/poll.pollDesc"
.Linfo_string127:
	.asciz	"iovecs"
.Linfo_string128:
	.asciz	"Base"
.Linfo_string129:
	.asciz	"Len"
.Linfo_string130:
	.asciz	"Iovec_len_t"
.Linfo_string131:
	.asciz	"Iovec"
.Linfo_string132:
	.asciz	"struct{*Iovec,int,int}"
.Linfo_string133:
	.asciz	"csema"
.Linfo_string134:
	.asciz	"IsStream"
.Linfo_string135:
	.asciz	"ZeroReadIsEOF"
.Linfo_string136:
	.asciz	"isFile"
.Linfo_string137:
	.asciz	"isBlocking"
.Linfo_string138:
	.asciz	"FD"
.Linfo_string139:
	.asciz	"dirinfo"
.Linfo_string140:
	.asciz	"buf"
.Linfo_string141:
	.asciz	"dir"
.Linfo_string142:
	.asciz	"DIR"
.Linfo_string143:
	.asciz	".os.dirInfo"
.Linfo_string144:
	.asciz	"nonblock"
.Linfo_string145:
	.asciz	"stdoutOrErr"
.Linfo_string146:
	.asciz	".os.file"
.Linfo_string147:
	.asciz	"File"
.Linfo_string148:
	.asciz	"os.Stdout"
.Linfo_string149:
	.asciz	"cmd.validateAndroidInstall"
.Linfo_string150:
	.asciz	"f"
.Linfo_string151:
	.asciz	"Logger"
.Linfo_string152:
	.asciz	"mu"
.Linfo_string153:
	.asciz	"int32"
.Linfo_string154:
	.asciz	"sema"
.Linfo_string155:
	.asciz	"Mutex"
.Linfo_string156:
	.asciz	"prefix"
.Linfo_string157:
	.asciz	"flag"
.Linfo_string158:
	.asciz	"out"
.Linfo_string159:
	.asciz	"Threaded"
.Linfo_string160:
	.asciz	"disablePrint"
.Linfo_string161:
	.asciz	"BuildN"
.Linfo_string162:
	.asciz	"BuildX"
.Linfo_string163:
	.asciz	"BuildV"
.Linfo_string164:
	.asciz	"BuildWork"
.Linfo_string165:
	.asciz	"BuildGcflags"
.Linfo_string166:
	.asciz	"BuildLdflags"
.Linfo_string167:
	.asciz	"BuildO"
.Linfo_string168:
	.asciz	"BuildBinary"
.Linfo_string169:
	.asciz	"BuildTargets"
.Linfo_string170:
	.asciz	"Flags"
.Linfo_string171:
	.asciz	"$ret1"
.Linfo_string172:
	.asciz	"cmd.toolchainForArch"
.Linfo_string173:
	.asciz	"arch"
.Linfo_string174:
	.asciz	"api"
.Linfo_string175:
	.asciz	"gcc"
.Linfo_string176:
	.asciz	"triple"
.Linfo_string177:
	.asciz	"clangTriple"
.Linfo_string178:
	.asciz	"ndkRoot"
.Linfo_string179:
	.asciz	"hostTag"
.Linfo_string180:
	.asciz	".command-line-arguments.ndkToolchain"
.Linfo_string181:
	.asciz	"struct{*.command-line-arguments.ndkToolchain,error}"
.Linfo_string182:
	.asciz	"goarch"
.Linfo_string183:
	.asciz	"$ret10"
.Linfo_string184:
	.asciz	"$ret11"
.Linfo_string185:
	.asciz	"m"
.Linfo_string186:
	.asciz	"count"
.Linfo_string187:
	.asciz	"flags"
.Linfo_string188:
	.asciz	"B"
.Linfo_string189:
	.asciz	"noverflow"
.Linfo_string190:
	.asciz	"uint16"
.Linfo_string191:
	.asciz	"hash0"
.Linfo_string192:
	.asciz	"buckets"
.Linfo_string193:
	.asciz	"oldbuckets"
.Linfo_string194:
	.asciz	"nevacuate"
.Linfo_string195:
	.asciz	"extra"
.Linfo_string196:
	.asciz	"runtime.hmap"
.Linfo_string197:
	.asciz	"toolchain"
.Linfo_string198:
	.asciz	"cmd.ndkHostTag"
.Linfo_string199:
	.asciz	"struct{string,error}"
.Linfo_string200:
	.asciz	"$ret20"
.Linfo_string201:
	.asciz	"$ret19"
.Linfo_string202:
	.asciz	"cmd.bootClasspath"
.Linfo_string203:
	.asciz	"$ret31"
.Linfo_string204:
	.asciz	"$ret30"
.Linfo_string205:
	.asciz	"cmd._validateGoInstall"
.Linfo_string206:
	.asciz	"$ret72"
.Linfo_string207:
	.asciz	"cmd._validateXcodeInstall"
.Linfo_string208:
	.asciz	"$ret59"
.Linfo_string209:
	.asciz	"command_line_arguments.Flags.ShouldRun"
.Linfo_string210:
	.asciz	"cmd.ShouldRun..1command_line_arguments.Flags"
.Linfo_string211:
	.asciz	"$ret70"
.Linfo_string212:
	.asciz	"command_line_arguments.ValidateAndroidInstall"
.Linfo_string213:
	.asciz	"cmd.ValidateAndroidInstall"
.Linfo_string214:
	.asciz	"command_line_arguments.AndroidPlatformPath"
.Linfo_string215:
	.asciz	"cmd.AndroidPlatformPath"
.Linfo_string216:
	.asciz	"command_line_arguments.NDKPath"
.Linfo_string217:
	.asciz	"cmd.NDKPath"
.Linfo_string218:
	.asciz	"command_line_arguments.LookPath"
.Linfo_string219:
	.asciz	"cmd.LookPath"
.Linfo_string220:
	.asciz	"command_line_arguments.AndroidSDKPath"
.Linfo_string221:
	.asciz	"cmd.AndroidSDKPath"
.Linfo_string222:
	.asciz	"command_line_arguments.GetEnv"
.Linfo_string223:
	.asciz	"cmd.GetEnv"
.Linfo_string224:
	.asciz	"command_line_arguments.IsDir"
.Linfo_string225:
	.asciz	"cmd.IsDir"
.Linfo_string226:
	.asciz	"command_line_arguments.ReadDirNames"
.Linfo_string227:
	.asciz	"cmd.ReadDirNames"
.Linfo_string228:
	.asciz	"struct{struct{*string,int,int},error}"
.Linfo_string229:
	.asciz	"command_line_arguments.IsFile"
.Linfo_string230:
	.asciz	"cmd.IsFile"
.Linfo_string231:
	.asciz	"command_line_arguments.AndroidEnv"
.Linfo_string232:
	.asciz	"cmd.AndroidEnv"
.Linfo_string233:
	.asciz	"command_line_arguments.ndkToolchain.gccToolchain"
.Linfo_string234:
	.asciz	"cmd.gccToolchain..1command_line_arguments.ndkToolchain"
.Linfo_string235:
	.asciz	"command_line_arguments.ndkToolchain.csysroot"
.Linfo_string236:
	.asciz	"cmd.csysroot..1command_line_arguments.ndkToolchain"
.Linfo_string237:
	.asciz	"command_line_arguments.ndkToolchain.isystem"
.Linfo_string238:
	.asciz	"cmd.isystem..1command_line_arguments.ndkToolchain"
.Linfo_string239:
	.asciz	"command_line_arguments.ndkToolchain.ldsysroot"
.Linfo_string240:
	.asciz	"cmd.ldsysroot..1command_line_arguments.ndkToolchain"
.Linfo_string241:
	.asciz	"command_line_arguments.ndkToolchain.clangPath"
.Linfo_string242:
	.asciz	"cmd.clangPath..1command_line_arguments.ndkToolchain"
.Linfo_string243:
	.asciz	"command_line_arguments.ndkToolchain.clangppPath"
.Linfo_string244:
	.asciz	"cmd.clangppPath..1command_line_arguments.ndkToolchain"
.Linfo_string245:
	.asciz	"command_line_arguments.command_line_arguments.ndkToolchain..hash"
.Linfo_string246:
	.asciz	"cmd.command_line_arguments.ndkToolchain..hash"
.Linfo_string247:
	.asciz	"command_line_arguments.command_line_arguments.ndkToolchain..eq"
.Linfo_string248:
	.asciz	"cmd.command_line_arguments.ndkToolchain..eq"
.Linfo_string249:
	.asciz	"command_line_arguments.GetAndroidABI"
.Linfo_string250:
	.asciz	"cmd.GetAndroidABI"
.Linfo_string251:
	.asciz	"command_line_arguments.BuildAAR"
.Linfo_string252:
	.asciz	"cmd.BuildAAR"
.Linfo_string253:
	.asciz	"cmd.BuildAAR..func1"
.Linfo_string254:
	.asciz	"cmd.command_line_arguments..thunk0"
.Linfo_string255:
	.asciz	"cmd.BuildAAR..func2"
.Linfo_string256:
	.asciz	"struct{Writer,error}"
.Linfo_string257:
	.asciz	"command_line_arguments.BuildJar"
.Linfo_string258:
	.asciz	"cmd.BuildJar"
.Linfo_string259:
	.asciz	"cmd.command_line_arguments..thunk1"
.Linfo_string260:
	.asciz	"command_line_arguments.Flags.ShouldPrint"
.Linfo_string261:
	.asciz	"cmd.ShouldPrint..1command_line_arguments.Flags"
.Linfo_string262:
	.asciz	"command_line_arguments.command_line_arguments.Flags..hash"
.Linfo_string263:
	.asciz	"cmd.command_line_arguments.Flags..hash"
.Linfo_string264:
	.asciz	"command_line_arguments.command_line_arguments.Flags..eq"
.Linfo_string265:
	.asciz	"cmd.command_line_arguments.Flags..eq"
.Linfo_string266:
	.asciz	"cmd.BuildJar..func1"
.Linfo_string267:
	.asciz	"command_line_arguments.Mkdir"
.Linfo_string268:
	.asciz	"cmd.Mkdir"
.Linfo_string269:
	.asciz	"command_line_arguments.RunCmd"
.Linfo_string270:
	.asciz	"cmd.RunCmd"
.Linfo_string271:
	.asciz	"cmd.BuildJar..func2"
.Linfo_string272:
	.asciz	"cmd.BuildJar..func3"
.Linfo_string273:
	.asciz	"cmd.command_line_arguments..thunk2"
.Linfo_string274:
	.asciz	"command_line_arguments.ParseTargets"
.Linfo_string275:
	.asciz	"cmd.ParseTargets"
.Linfo_string276:
	.asciz	"command_line_arguments.Build"
.Linfo_string277:
	.asciz	"cmd.Build"
.Linfo_string278:
	.asciz	"command_line_arguments.PackageDir"
.Linfo_string279:
	.asciz	"cmd.PackageDir"
.Linfo_string280:
	.asciz	"command_line_arguments.Bind"
.Linfo_string281:
	.asciz	"cmd.Bind"
.Linfo_string282:
	.asciz	"cmd.validateGoInstall"
.Linfo_string283:
	.asciz	"command_line_arguments.NewTmpDir"
.Linfo_string284:
	.asciz	"cmd.NewTmpDir"
.Linfo_string285:
	.asciz	"cmd.command_line_arguments..thunk3"
.Linfo_string286:
	.asciz	"command_line_arguments.MatchaPkgPath"
.Linfo_string287:
	.asciz	"cmd.MatchaPkgPath"
.Linfo_string288:
	.asciz	"command_line_arguments.ReadFile"
.Linfo_string289:
	.asciz	"cmd.ReadFile"
.Linfo_string290:
	.asciz	"struct{struct{*uint8,int,int},error}"
.Linfo_string291:
	.asciz	"command_line_arguments.GoVersion"
.Linfo_string292:
	.asciz	"cmd.GoVersion"
.Linfo_string293:
	.asciz	"command_line_arguments.Getwd"
.Linfo_string294:
	.asciz	"cmd.Getwd"
.Linfo_string295:
	.asciz	"command_line_arguments.ImportAll"
.Linfo_string296:
	.asciz	"cmd.ImportAll"
.Linfo_string297:
	.asciz	"Dir"
.Linfo_string298:
	.asciz	"ImportComment"
.Linfo_string299:
	.asciz	"Doc"
.Linfo_string300:
	.asciz	"ImportPath"
.Linfo_string301:
	.asciz	"Root"
.Linfo_string302:
	.asciz	"SrcRoot"
.Linfo_string303:
	.asciz	"PkgRoot"
.Linfo_string304:
	.asciz	"PkgTargetRoot"
.Linfo_string305:
	.asciz	"BinDir"
.Linfo_string306:
	.asciz	"Goroot"
.Linfo_string307:
	.asciz	"PkgObj"
.Linfo_string308:
	.asciz	"AllTags"
.Linfo_string309:
	.asciz	"ConflictDir"
.Linfo_string310:
	.asciz	"BinaryOnly"
.Linfo_string311:
	.asciz	"GoFiles"
.Linfo_string312:
	.asciz	"CgoFiles"
.Linfo_string313:
	.asciz	"IgnoredGoFiles"
.Linfo_string314:
	.asciz	"InvalidGoFiles"
.Linfo_string315:
	.asciz	"CFiles"
.Linfo_string316:
	.asciz	"CXXFiles"
.Linfo_string317:
	.asciz	"MFiles"
.Linfo_string318:
	.asciz	"HFiles"
.Linfo_string319:
	.asciz	"FFiles"
.Linfo_string320:
	.asciz	"SFiles"
.Linfo_string321:
	.asciz	"SwigFiles"
.Linfo_string322:
	.asciz	"SwigCXXFiles"
.Linfo_string323:
	.asciz	"SysoFiles"
.Linfo_string324:
	.asciz	"CgoCFLAGS"
.Linfo_string325:
	.asciz	"CgoCPPFLAGS"
.Linfo_string326:
	.asciz	"CgoCXXFLAGS"
.Linfo_string327:
	.asciz	"CgoFFLAGS"
.Linfo_string328:
	.asciz	"CgoLDFLAGS"
.Linfo_string329:
	.asciz	"CgoPkgConfig"
.Linfo_string330:
	.asciz	"Imports"
.Linfo_string331:
	.asciz	"ImportPos"
.Linfo_string332:
	.asciz	"TestGoFiles"
.Linfo_string333:
	.asciz	"TestImports"
.Linfo_string334:
	.asciz	"TestImportPos"
.Linfo_string335:
	.asciz	"XTestGoFiles"
.Linfo_string336:
	.asciz	"XTestImports"
.Linfo_string337:
	.asciz	"XTestImportPos"
.Linfo_string338:
	.asciz	"Package"
.Linfo_string339:
	.asciz	"struct{**Package,int,int}"
.Linfo_string340:
	.asciz	"struct{struct{**Package,int,int},error}"
.Linfo_string341:
	.asciz	"cmd.validateXcodeInstall"
.Linfo_string342:
	.asciz	"command_line_arguments.WriteFile"
.Linfo_string343:
	.asciz	"cmd.WriteFile"
.Linfo_string344:
	.asciz	"command_line_arguments.DarwinArmEnv"
.Linfo_string345:
	.asciz	"cmd.DarwinArmEnv"
.Linfo_string346:
	.asciz	"command_line_arguments.DarwinArm64Env"
.Linfo_string347:
	.asciz	"cmd.DarwinArm64Env"
.Linfo_string348:
	.asciz	"command_line_arguments.Darwin386Env"
.Linfo_string349:
	.asciz	"cmd.Darwin386Env"
.Linfo_string350:
	.asciz	"command_line_arguments.DarwinAmd64Env"
.Linfo_string351:
	.asciz	"cmd.DarwinAmd64Env"
.Linfo_string352:
	.asciz	"command_line_arguments.command_line_arguments.Bind.archPath..hash"
.Linfo_string353:
	.asciz	"cmd.command_line_arguments.Bind.archPath..hash"
.Linfo_string354:
	.asciz	"command_line_arguments.command_line_arguments.Bind.archPath..eq"
.Linfo_string355:
	.asciz	"cmd.command_line_arguments.Bind.archPath..eq"
.Linfo_string356:
	.asciz	"cmd.Bind..func1"
.Linfo_string357:
	.asciz	"cmd.command_line_arguments..thunk4"
.Linfo_string358:
	.asciz	"command_line_arguments.ArchClang"
.Linfo_string359:
	.asciz	"cmd.ArchClang"
.Linfo_string360:
	.asciz	"command_line_arguments.CopyFile"
.Linfo_string361:
	.asciz	"cmd.CopyFile"
.Linfo_string362:
	.asciz	"command_line_arguments.GoEnv"
.Linfo_string363:
	.asciz	"cmd.GoEnv"
.Linfo_string364:
	.asciz	"command_line_arguments.GoBuild"
.Linfo_string365:
	.asciz	"cmd.GoBuild"
.Linfo_string366:
	.asciz	"command_line_arguments.FindEnv"
.Linfo_string367:
	.asciz	"cmd.FindEnv"
.Linfo_string368:
	.asciz	"command_line_arguments.OutputCmd"
.Linfo_string369:
	.asciz	"cmd.OutputCmd"
.Linfo_string370:
	.asciz	"command_line_arguments.MergeEnviron"
.Linfo_string371:
	.asciz	"cmd.MergeEnviron"
.Linfo_string372:
	.asciz	"command_line_arguments.RemoveAll"
.Linfo_string373:
	.asciz	"cmd.RemoveAll"
.Linfo_string374:
	.asciz	"cmd.WriteFile..func1"
.Linfo_string375:
	.asciz	"cmd.command_line_arguments..thunk5"
.Linfo_string376:
	.asciz	"cmd.WriteFile..func2"
.Linfo_string377:
	.asciz	"cmd.command_line_arguments..thunk6"
.Linfo_string378:
	.asciz	"cmd.CopyFile..func1"
.Linfo_string379:
	.asciz	"cmd.command_line_arguments..thunk7"
.Linfo_string380:
	.asciz	"cmd.command_line_arguments..thunk8"
.Linfo_string381:
	.asciz	"cmd.command_line_arguments..thunk9"
.Linfo_string382:
	.asciz	"command_line_arguments.Init"
.Linfo_string383:
	.asciz	"cmd.Init"
.Linfo_string384:
	.asciz	"cmd.command_line_arguments..thunk10"
.Linfo_string385:
	.asciz	"command_line_arguments.InstallPkg"
.Linfo_string386:
	.asciz	"cmd.InstallPkg"
.Linfo_string387:
	.asciz	"command_line_arguments.EnvClang"
.Linfo_string388:
	.asciz	"cmd.EnvClang"
.Linfo_string389:
	.asciz	"_clang"
.Linfo_string390:
	.asciz	"cflags"
.Linfo_string391:
	.asciz	"struct{string,string,error}"
.Linfo_string392:
	.asciz	"command_line_arguments.PkgPath"
.Linfo_string393:
	.asciz	"cmd.PkgPath"
.Linfo_string394:
	.asciz	"command_line_arguments.Import"
.Linfo_string395:
	.asciz	"cmd.Import"
.Linfo_string396:
	.asciz	"command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash"
.Linfo_string397:
	.asciz	"cmd.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash"
.Linfo_string398:
	.asciz	"command_line_arguments.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq"
.Linfo_string399:
	.asciz	"cmd.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq"
.Linfo_string400:
	.asciz	"command_line_arguments..import"
.Linfo_string401:
	.asciz	"cmd.command_line_arguments..import"
.Linfo_string402:
	.asciz	"$ret0"
.Linfo_string403:
	.asciz	"$ret5"
.Linfo_string404:
	.asciz	"$ret4"
.Linfo_string405:
	.asciz	"platformsDir"
.Linfo_string406:
	.asciz	"platformsDirNames"
.Linfo_string407:
	.asciz	"apiPath"
.Linfo_string408:
	.asciz	"apiVer"
.Linfo_string409:
	.asciz	"verStr"
.Linfo_string410:
	.asciz	"i"
.Linfo_string411:
	.asciz	"ver"
.Linfo_string412:
	.asciz	"p"
.Linfo_string413:
	.asciz	"$ret7"
.Linfo_string414:
	.asciz	"$ret6"
.Linfo_string415:
	.asciz	"path"
.Linfo_string416:
	.asciz	"$ret48"
.Linfo_string417:
	.asciz	"$ret2"
.Linfo_string418:
	.asciz	"$ret3"
.Linfo_string419:
	.asciz	"key"
.Linfo_string420:
	.asciz	"$ret54"
.Linfo_string421:
	.asciz	"st"
.Linfo_string422:
	.asciz	"$ret51"
.Linfo_string423:
	.asciz	"$ret52"
.Linfo_string424:
	.asciz	"$ret53"
.Linfo_string425:
	.asciz	"$ret8"
.Linfo_string426:
	.asciz	"$ret9"
.Linfo_string427:
	.asciz	"ldflags"
.Linfo_string428:
	.asciz	"env"
.Linfo_string429:
	.asciz	"tc"
.Linfo_string430:
	.asciz	"seed"
.Linfo_string431:
	.asciz	"$ret92"
.Linfo_string432:
	.asciz	"key1"
.Linfo_string433:
	.asciz	"key2"
.Linfo_string434:
	.asciz	"$ret93"
.Linfo_string435:
	.asciz	"$ret18"
.Linfo_string436:
	.asciz	"aarPath"
.Linfo_string437:
	.asciz	"androidArchs"
.Linfo_string438:
	.asciz	"pkgs"
.Linfo_string439:
	.asciz	"androidDir"
.Linfo_string440:
	.asciz	"aarw"
.Linfo_string441:
	.asciz	"cw"
.Linfo_string442:
	.asciz	"w"
.Linfo_string443:
	.asciz	".archive/zip.countWriter"
.Linfo_string444:
	.asciz	"FileHeader"
.Linfo_string445:
	.asciz	"Comment"
.Linfo_string446:
	.asciz	"NonUTF8"
.Linfo_string447:
	.asciz	"CreatorVersion"
.Linfo_string448:
	.asciz	"ReaderVersion"
.Linfo_string449:
	.asciz	"Method"
.Linfo_string450:
	.asciz	"Modified"
.Linfo_string451:
	.asciz	"ModifiedTime"
.Linfo_string452:
	.asciz	"ModifiedDate"
.Linfo_string453:
	.asciz	"CRC32"
.Linfo_string454:
	.asciz	"CompressedSize"
.Linfo_string455:
	.asciz	"UncompressedSize"
.Linfo_string456:
	.asciz	"CompressedSize64"
.Linfo_string457:
	.asciz	"UncompressedSize64"
.Linfo_string458:
	.asciz	"Extra"
.Linfo_string459:
	.asciz	"ExternalAttrs"
.Linfo_string460:
	.asciz	".archive/zip.header"
.Linfo_string461:
	.asciz	"struct{**.archive/zip.header,int,int}"
.Linfo_string462:
	.asciz	"last"
.Linfo_string463:
	.asciz	"header"
.Linfo_string464:
	.asciz	"zipw"
.Linfo_string465:
	.asciz	"rawCount"
.Linfo_string466:
	.asciz	"comp"
.Linfo_string467:
	.asciz	"WriteCloser"
.Linfo_string468:
	.asciz	"compCount"
.Linfo_string469:
	.asciz	"crc32"
.Linfo_string470:
	.asciz	"BlockSize"
.Linfo_string471:
	.asciz	"Reset"
.Linfo_string472:
	.asciz	"Sum"
.Linfo_string473:
	.asciz	"Sum32"
.Linfo_string474:
	.asciz	"struct{*_type,*func(*void)int,*func(*void)void,*func(*void)int,*func(*void,struct{*uint8,int,int})struct{*uint8,int,int},*func(*void)uint32,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string475:
	.asciz	"Hash32"
.Linfo_string476:
	.asciz	"closed"
.Linfo_string477:
	.asciz	".archive/zip.fileWriter"
.Linfo_string478:
	.asciz	"compressors"
.Linfo_string479:
	.asciz	"comment"
.Linfo_string480:
	.asciz	"testHookCloseSizeOffset"
.Linfo_string481:
	.asciz	"aarwcreate"
.Linfo_string482:
	.asciz	"src"
.Linfo_string483:
	.asciz	"lib"
.Linfo_string484:
	.asciz	"r"
.Linfo_string485:
	.asciz	"__go_thunk_parameter"
.Linfo_string486:
	.asciz	"fn"
.Linfo_string487:
	.asciz	"struct{*__go_descriptor}"
.Linfo_string488:
	.asciz	"tmpdir"
.Linfo_string489:
	.asciz	"param"
.Linfo_string490:
	.asciz	"$ret25"
.Linfo_string491:
	.asciz	"javac"
.Linfo_string492:
	.asciz	"Path"
.Linfo_string493:
	.asciz	"Args"
.Linfo_string494:
	.asciz	"Env"
.Linfo_string495:
	.asciz	"Stdin"
.Linfo_string496:
	.asciz	"Reader"
.Linfo_string497:
	.asciz	"Stdout"
.Linfo_string498:
	.asciz	"Stderr"
.Linfo_string499:
	.asciz	"ExtraFiles"
.Linfo_string500:
	.asciz	"struct{**File,int,int}"
.Linfo_string501:
	.asciz	"SysProcAttr"
.Linfo_string502:
	.asciz	"Chroot"
.Linfo_string503:
	.asciz	"Credential"
.Linfo_string504:
	.asciz	"Uid"
.Linfo_string505:
	.asciz	"Gid"
.Linfo_string506:
	.asciz	"Groups"
.Linfo_string507:
	.asciz	"struct{*uint32,int,int}"
.Linfo_string508:
	.asciz	"NoSetGroups"
.Linfo_string509:
	.asciz	"Ptrace"
.Linfo_string510:
	.asciz	"Setsid"
.Linfo_string511:
	.asciz	"Setpgid"
.Linfo_string512:
	.asciz	"Setctty"
.Linfo_string513:
	.asciz	"Noctty"
.Linfo_string514:
	.asciz	"Ctty"
.Linfo_string515:
	.asciz	"Foreground"
.Linfo_string516:
	.asciz	"Pgid"
.Linfo_string517:
	.asciz	"Pdeathsig"
.Linfo_string518:
	.asciz	"Signal"
.Linfo_string519:
	.asciz	"Cloneflags"
.Linfo_string520:
	.asciz	"Unshareflags"
.Linfo_string521:
	.asciz	"UidMappings"
.Linfo_string522:
	.asciz	"ContainerID"
.Linfo_string523:
	.asciz	"HostID"
.Linfo_string524:
	.asciz	"SysProcIDMap"
.Linfo_string525:
	.asciz	"struct{*SysProcIDMap,int,int}"
.Linfo_string526:
	.asciz	"GidMappings"
.Linfo_string527:
	.asciz	"GidMappingsEnableSetgroups"
.Linfo_string528:
	.asciz	"AmbientCaps"
.Linfo_string529:
	.asciz	"struct{*uintptr,int,int}"
.Linfo_string530:
	.asciz	"Process"
.Linfo_string531:
	.asciz	"Pid"
.Linfo_string532:
	.asciz	"handle"
.Linfo_string533:
	.asciz	"isdone"
.Linfo_string534:
	.asciz	"sigMu"
.Linfo_string535:
	.asciz	"writerSem"
.Linfo_string536:
	.asciz	"readerSem"
.Linfo_string537:
	.asciz	"readerCount"
.Linfo_string538:
	.asciz	"readerWait"
.Linfo_string539:
	.asciz	"RWMutex"
.Linfo_string540:
	.asciz	"ProcessState"
.Linfo_string541:
	.asciz	"pid"
.Linfo_string542:
	.asciz	"status"
.Linfo_string543:
	.asciz	"WaitStatus"
.Linfo_string544:
	.asciz	"rusage"
.Linfo_string545:
	.asciz	"Utime"
.Linfo_string546:
	.asciz	"Sec"
.Linfo_string547:
	.asciz	"Timeval_sec_t"
.Linfo_string548:
	.asciz	"Usec"
.Linfo_string549:
	.asciz	"Timeval_usec_t"
.Linfo_string550:
	.asciz	"Timeval"
.Linfo_string551:
	.asciz	"Stime"
.Linfo_string552:
	.asciz	"Maxrss"
.Linfo_string553:
	.asciz	"Ixrss"
.Linfo_string554:
	.asciz	"Idrss"
.Linfo_string555:
	.asciz	"Isrss"
.Linfo_string556:
	.asciz	"Minflt"
.Linfo_string557:
	.asciz	"Majflt"
.Linfo_string558:
	.asciz	"Nswap"
.Linfo_string559:
	.asciz	"Inblock"
.Linfo_string560:
	.asciz	"Oublock"
.Linfo_string561:
	.asciz	"Msgsnd"
.Linfo_string562:
	.asciz	"Msgrcv"
.Linfo_string563:
	.asciz	"Nsignals"
.Linfo_string564:
	.asciz	"Nvcsw"
.Linfo_string565:
	.asciz	"Nivcsw"
.Linfo_string566:
	.asciz	"Rusage"
.Linfo_string567:
	.asciz	"ctx"
.Linfo_string568:
	.asciz	"Deadline"
.Linfo_string569:
	.asciz	"deadline"
.Linfo_string570:
	.asciz	"struct{Time,bool}"
.Linfo_string571:
	.asciz	"Done"
.Linfo_string572:
	.asciz	"__go_channel"
.Linfo_string573:
	.asciz	"Err"
.Linfo_string574:
	.asciz	"Value"
.Linfo_string575:
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,struct{*_type,*void})struct{*_type,*void}}"
.Linfo_string576:
	.asciz	"lookPathErr"
.Linfo_string577:
	.asciz	"finished"
.Linfo_string578:
	.asciz	"childFiles"
.Linfo_string579:
	.asciz	"closeAfterStart"
.Linfo_string580:
	.asciz	"struct{*_type,*func(*void)error}"
.Linfo_string581:
	.asciz	"Closer"
.Linfo_string582:
	.asciz	"struct{*Closer,int,int}"
.Linfo_string583:
	.asciz	"closeAfterWait"
.Linfo_string584:
	.asciz	"goroutine"
.Linfo_string585:
	.asciz	"struct{**__go_descriptor,int,int}"
.Linfo_string586:
	.asciz	"errch"
.Linfo_string587:
	.asciz	"waitDone"
.Linfo_string588:
	.asciz	"Cmd"
.Linfo_string589:
	.asciz	"jarw"
.Linfo_string590:
	.asciz	"jarwcreate"
.Linfo_string591:
	.asciz	"manifestFile"
.Linfo_string592:
	.asciz	"a0"
.Linfo_string593:
	.asciz	"struct{*File}"
.Linfo_string594:
	.asciz	"$ret86"
.Linfo_string595:
	.asciz	"$ret69"
.Linfo_string596:
	.asciz	"$ret90"
.Linfo_string597:
	.asciz	"$ret91"
.Linfo_string598:
	.asciz	"info"
.Linfo_string599:
	.asciz	"$ret26"
.Linfo_string600:
	.asciz	"$ret47"
.Linfo_string601:
	.asciz	"cmd"
.Linfo_string602:
	.asciz	"$ret35"
.Linfo_string603:
	.asciz	"$ret29"
.Linfo_string604:
	.asciz	"in"
.Linfo_string605:
	.asciz	"$ret87"
.Linfo_string606:
	.asciz	"a"
.Linfo_string607:
	.asciz	"targetsSlice"
.Linfo_string608:
	.asciz	"targets"
.Linfo_string609:
	.asciz	"$ret32"
.Linfo_string610:
	.asciz	"args"
.Linfo_string611:
	.asciz	"$ret33"
.Linfo_string612:
	.asciz	"pkgpath"
.Linfo_string613:
	.asciz	"$ret42"
.Linfo_string614:
	.asciz	"$ret41"
.Linfo_string615:
	.asciz	"pkg"
.Linfo_string616:
	.asciz	"$ret34"
.Linfo_string617:
	.asciz	"tempdir"
.Linfo_string618:
	.asciz	"matchaPkgPath"
.Linfo_string619:
	.asciz	"cwd"
.Linfo_string620:
	.asciz	"gopathDir"
.Linfo_string621:
	.asciz	"workOutputDir"
.Linfo_string622:
	.asciz	"mainPath"
.Linfo_string623:
	.asciz	"javaDir2"
.Linfo_string624:
	.asciz	"aarDirPath"
.Linfo_string625:
	.asciz	"outputDir"
.Linfo_string626:
	.asciz	"envs"
.Linfo_string627:
	.asciz	"struct{*struct{*string,int,int},int,int}"
.Linfo_string628:
	.asciz	"archs"
.Linfo_string629:
	.asciz	".command-line-arguments.archPath"
.Linfo_string630:
	.asciz	"struct{*.command-line-arguments.archPath,int,int}"
.Linfo_string631:
	.asciz	"archChan"
.Linfo_string632:
	.asciz	"$ret71"
.Linfo_string633:
	.asciz	"$ret40"
.Linfo_string634:
	.asciz	"$ret39"
.Linfo_string635:
	.asciz	"a1"
.Linfo_string636:
	.asciz	"struct{*Flags,string}"
.Linfo_string637:
	.asciz	"gopaths"
.Linfo_string638:
	.asciz	"$ret74"
.Linfo_string639:
	.asciz	"$ret75"
.Linfo_string640:
	.asciz	"filename"
.Linfo_string641:
	.asciz	"$ret44"
.Linfo_string642:
	.asciz	"$ret80"
.Linfo_string643:
	.asciz	"paths"
.Linfo_string644:
	.asciz	"srcDir"
.Linfo_string645:
	.asciz	"mode"
.Linfo_string646:
	.asciz	"ImportMode"
.Linfo_string647:
	.asciz	"$ret84"
.Linfo_string648:
	.asciz	"pkgSlice"
.Linfo_string649:
	.asciz	"$ret83"
.Linfo_string650:
	.asciz	"$ret58"
.Linfo_string651:
	.asciz	"$ret62"
.Linfo_string652:
	.asciz	"$ret61"
.Linfo_string653:
	.asciz	"$ret64"
.Linfo_string654:
	.asciz	"$ret63"
.Linfo_string655:
	.asciz	"$ret66"
.Linfo_string656:
	.asciz	"$ret65"
.Linfo_string657:
	.asciz	"$ret68"
.Linfo_string658:
	.asciz	"$ret67"
.Linfo_string659:
	.asciz	"$ret94"
.Linfo_string660:
	.asciz	"$ret95"
.Linfo_string661:
	.asciz	"struct{*__go_descriptor,struct{*string,int,int}}"
.Linfo_string662:
	.asciz	"$ret60"
.Linfo_string663:
	.asciz	"dst"
.Linfo_string664:
	.asciz	"$ret46"
.Linfo_string665:
	.asciz	"val"
.Linfo_string666:
	.asciz	"$ret78"
.Linfo_string667:
	.asciz	"buildTags"
.Linfo_string668:
	.asciz	"srcs"
.Linfo_string669:
	.asciz	"$ret81"
.Linfo_string670:
	.asciz	"kv"
.Linfo_string671:
	.asciz	"$ret73"
.Linfo_string672:
	.asciz	"fallback"
.Linfo_string673:
	.asciz	"str"
.Linfo_string674:
	.asciz	"outbuf"
.Linfo_string675:
	.asciz	"off"
.Linfo_string676:
	.asciz	"bootstrap"
.Linfo_string677:
	.asciz	"__ARRAY_SIZE_TYPE__"
.Linfo_string678:
	.asciz	"lastRead"
.Linfo_string679:
	.asciz	".bytes.readOp"
.Linfo_string680:
	.asciz	"Buffer"
.Linfo_string681:
	.asciz	"errbuf"
.Linfo_string682:
	.asciz	"$ret37"
.Linfo_string683:
	.asciz	"sink$5"
.Linfo_string684:
	.asciz	"sink$6"
.Linfo_string685:
	.asciz	"cur"
.Linfo_string686:
	.asciz	"goos"
.Linfo_string687:
	.asciz	"elem"
.Linfo_string688:
	.asciz	"ev"
.Linfo_string689:
	.asciz	"$ret43"
.Linfo_string690:
	.asciz	"$ret88"
.Linfo_string691:
	.asciz	"$ret89"
.Linfo_string692:
	.asciz	"$ret57"
.Linfo_string693:
	.asciz	"verpath"
.Linfo_string694:
	.asciz	"took"
.Linfo_string695:
	.asciz	"Duration"
.Linfo_string696:
	.asciz	"temp"
.Linfo_string697:
	.asciz	"$ret82"
.Linfo_string698:
	.asciz	"sdkName"
.Linfo_string699:
	.asciz	"clang"
.Linfo_string700:
	.asciz	"sdk"
.Linfo_string701:
	.asciz	"tOS"
.Linfo_string702:
	.asciz	"tArch"
.Linfo_string703:
	.asciz	"$ret77"
.Linfo_string704:
	.asciz	"$ret76"
.Linfo_string705:
	.asciz	"$ret85"
.Linfo_string706:
	.asciz	"$ret112"
.Linfo_string707:
	.asciz	"$ret113"
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp1
	.short	1
	.byte	85
	.quad	.Ltmp1
	.quad	.Ltmp5
	.short	1
	.byte	94
	.quad	.Ltmp9
	.quad	.Ltmp13
	.short	1
	.byte	94
	.quad	.Ltmp14
	.quad	.Ltmp18
	.short	1
	.byte	94
	.quad	.Ltmp19
	.quad	.Ltmp21
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Ltmp0
	.quad	.Ltmp1
	.short	1
	.byte	85
	.quad	.Ltmp1
	.quad	.Ltmp5
	.short	1
	.byte	94
	.quad	.Ltmp9
	.quad	.Ltmp13
	.short	1
	.byte	94
	.quad	.Ltmp14
	.quad	.Ltmp18
	.short	1
	.byte	94
	.quad	.Ltmp19
	.quad	.Ltmp21
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Ltmp3
	.quad	.Ltmp6
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp9
	.quad	.Ltmp11
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Ltmp5
	.quad	.Ltmp6
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp13
	.quad	.Ltmp14
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp19
	.quad	.Ltmp19
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp19
	.quad	.Lfunc_end0
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp5
	.quad	.Ltmp8
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp13
	.quad	.Ltmp14
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp18
	.quad	.Ltmp19
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp21
	.quad	.Lfunc_end0
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp5
	.quad	.Ltmp8
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp13
	.quad	.Ltmp14
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp18
	.quad	.Ltmp19
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp21
	.quad	.Lfunc_end0
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp11
	.quad	.Ltmp17
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp19
	.quad	.Ltmp20
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp15
	.quad	.Lfunc_end0
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	1
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Lfunc_begin1
	.quad	.Ltmp23
	.short	1
	.byte	84
	.quad	.Ltmp23
	.quad	.Ltmp30
	.short	1
	.byte	86
	.quad	.Ltmp31
	.quad	.Ltmp46
	.short	1
	.byte	86
	.quad	.Ltmp46
	.quad	.Lfunc_end1
	.short	3
	.byte	119
	.byte	208
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp24
	.quad	.Ltmp25
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp26
	.quad	.Ltmp29
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp31
	.quad	.Ltmp32
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp38
	.quad	.Ltmp40
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp42
	.quad	.Ltmp47
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp27
	.quad	.Ltmp28
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp28
	.quad	.Ltmp29
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp31
	.quad	.Ltmp33
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp41
	.quad	.Ltmp41
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp41
	.quad	.Ltmp42
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp69
	.quad	.Ltmp69
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp69
	.quad	.Ltmp71
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp71
	.quad	.Ltmp71
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp71
	.quad	.Lfunc_end1
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp28
	.quad	.Ltmp69
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp71
	.quad	.Lfunc_end1
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp34
	.quad	.Ltmp35
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp35
	.quad	.Ltmp43
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp43
	.quad	.Lfunc_end1
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp37
	.quad	.Ltmp40
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	184
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp42
	.quad	.Ltmp44
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	184
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp44
	.quad	.Ltmp45
	.short	14
	.byte	94
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	119
	.byte	184
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp45
	.quad	.Ltmp50
	.short	15
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	184
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp50
	.quad	.Ltmp51
	.short	17
	.byte	119
	.byte	224
	.byte	1
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	184
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp51
	.quad	.Ltmp51
	.short	13
	.byte	119
	.byte	224
	.byte	1
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp51
	.quad	.Lfunc_end1
	.short	15
	.byte	119
	.byte	224
	.byte	1
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp48
	.quad	.Ltmp52
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp52
	.quad	.Ltmp62
	.short	9
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp62
	.quad	.Ltmp70
	.short	8
	.byte	119
	.byte	48
	.byte	147
	.byte	8
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp48
	.quad	.Ltmp52
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp52
	.quad	.Ltmp70
	.short	2
	.byte	119
	.byte	32
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp52
	.quad	.Ltmp54
	.short	5
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp65
	.quad	.Ltmp67
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp52
	.quad	.Ltmp54
	.short	5
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp63
	.quad	.Ltmp67
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp52
	.quad	.Ltmp54
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp56
	.quad	.Ltmp58
	.short	12
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp53
	.quad	.Ltmp54
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp59
	.quad	.Ltmp60
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp60
	.quad	.Ltmp61
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Lfunc_begin2
	.quad	.Ltmp73
	.short	1
	.byte	84
	.quad	.Ltmp73
	.quad	.Ltmp86
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp75
	.quad	.Ltmp79
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp77
	.quad	.Ltmp78
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp82
	.quad	.Ltmp82
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp82
	.quad	.Ltmp84
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp84
	.quad	.Ltmp84
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp84
	.quad	.Ltmp85
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp77
	.quad	.Ltmp80
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp80
	.quad	.Ltmp81
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp81
	.quad	.Ltmp84
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp84
	.quad	.Ltmp84
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp84
	.quad	.Lfunc_end2
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp80
	.quad	.Ltmp81
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp81
	.quad	.Ltmp85
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Lfunc_begin3
	.quad	.Ltmp88
	.short	1
	.byte	84
	.quad	.Ltmp88
	.quad	.Ltmp95
	.short	1
	.byte	83
	.quad	.Ltmp97
	.quad	.Lfunc_end3
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Lfunc_begin3
	.quad	.Ltmp88
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp88
	.quad	.Ltmp88
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp88
	.quad	.Ltmp96
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp97
	.quad	.Lfunc_end3
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp87
	.quad	.Ltmp88
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp88
	.quad	.Ltmp88
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp88
	.quad	.Ltmp96
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp97
	.quad	.Lfunc_end3
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Lfunc_begin4
	.quad	.Ltmp99
	.short	1
	.byte	84
	.quad	.Ltmp99
	.quad	.Ltmp110
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp100
	.quad	.Ltmp101
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp101
	.quad	.Ltmp109
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp100
	.quad	.Ltmp101
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp101
	.quad	.Ltmp107
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp107
	.quad	.Ltmp107
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp107
	.quad	.Lfunc_end4
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp104
	.quad	.Ltmp107
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp107
	.quad	.Ltmp107
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp107
	.quad	.Ltmp108
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Lfunc_begin5
	.quad	.Ltmp111
	.short	1
	.byte	85
	.quad	.Ltmp111
	.quad	.Ltmp118
	.short	1
	.byte	83
	.quad	.Ltmp120
	.quad	.Lfunc_end5
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Lfunc_begin5
	.quad	.Ltmp111
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp111
	.quad	.Ltmp111
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp111
	.quad	.Ltmp119
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp120
	.quad	.Lfunc_end5
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Lfunc_begin6
	.quad	.Ltmp122
	.short	1
	.byte	85
	.quad	.Ltmp122
	.quad	.Ltmp134
	.short	1
	.byte	83
	.quad	.Ltmp136
	.quad	.Lfunc_end6
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Lfunc_begin6
	.quad	.Ltmp122
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp122
	.quad	.Ltmp122
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp122
	.quad	.Ltmp135
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp136
	.quad	.Lfunc_end6
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp122
	.quad	.Ltmp133
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp133
	.quad	.Lfunc_end6
	.short	3
	.byte	16
	.byte	1
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp127
	.quad	.Ltmp133
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	216
	.byte	0
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp130
	.quad	.Ltmp131
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp131
	.quad	.Ltmp132
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Lfunc_begin7
	.quad	.Ltmp167
	.short	1
	.byte	84
	.quad	.Ltmp167
	.quad	.Ltmp185
	.short	1
	.byte	83
	.quad	.Ltmp191
	.quad	.Ltmp192
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Lfunc_begin7
	.quad	.Ltmp167
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp167
	.quad	.Ltmp167
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp167
	.quad	.Ltmp178
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp180
	.quad	.Ltmp188
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp191
	.quad	.Ltmp199
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp203
	.quad	.Ltmp205
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp206
	.quad	.Ltmp207
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp167
	.quad	.Ltmp178
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp178
	.quad	.Ltmp190
	.short	14
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Ltmp190
	.short	12
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Ltmp191
	.short	10
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp195
	.quad	.Ltmp203
	.short	10
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp207
	.quad	.Ltmp212
	.short	10
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp213
	.quad	.Lfunc_end7
	.short	10
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp179
	.quad	.Ltmp180
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp183
	.quad	.Ltmp185
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp185
	.quad	.Ltmp188
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Ltmp190
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Ltmp191
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp191
	.quad	.Ltmp200
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp200
	.quad	.Ltmp203
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp207
	.quad	.Ltmp212
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp213
	.quad	.Lfunc_end7
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp183
	.quad	.Ltmp185
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp185
	.quad	.Ltmp187
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp187
	.quad	.Ltmp188
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp191
	.quad	.Ltmp198
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp192
	.quad	.Ltmp202
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Lfunc_begin8
	.quad	.Ltmp218
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp214
	.quad	.Ltmp216
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp216
	.quad	.Ltmp217
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Lfunc_begin9
	.quad	.Ltmp220
	.short	1
	.byte	85
	.quad	.Ltmp220
	.quad	.Ltmp232
	.short	1
	.byte	83
	.quad	.Ltmp234
	.quad	.Lfunc_end9
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Lfunc_begin9
	.quad	.Ltmp220
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp220
	.quad	.Ltmp220
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp220
	.quad	.Ltmp233
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp234
	.quad	.Lfunc_end9
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp220
	.quad	.Ltmp231
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp231
	.quad	.Lfunc_end9
	.short	3
	.byte	16
	.byte	1
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp225
	.quad	.Ltmp231
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	216
	.byte	0
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp228
	.quad	.Ltmp229
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp229
	.quad	.Ltmp230
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Lfunc_begin10
	.quad	.Ltmp237
	.short	1
	.byte	84
	.quad	.Ltmp237
	.quad	.Ltmp257
	.short	2
	.byte	119
	.byte	40
	.quad	.Ltmp258
	.quad	.Lfunc_end10
	.short	2
	.byte	119
	.byte	40
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Lfunc_begin10
	.quad	.Ltmp237
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp237
	.quad	.Ltmp237
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp237
	.quad	.Ltmp256
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp258
	.quad	.Ltmp273
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp288
	.quad	.Ltmp291
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp297
	.quad	.Ltmp300
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp236
	.quad	.Ltmp237
	.short	1
	.byte	84
	.quad	.Ltmp237
	.quad	.Ltmp254
	.short	2
	.byte	119
	.byte	40
	.quad	.Ltmp258
	.quad	.Ltmp284
	.short	2
	.byte	119
	.byte	40
	.quad	.Ltmp288
	.quad	.Ltmp291
	.short	2
	.byte	119
	.byte	40
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp236
	.quad	.Ltmp237
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp237
	.quad	.Ltmp237
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp237
	.quad	.Ltmp254
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp258
	.quad	.Ltmp267
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp267
	.quad	.Ltmp284
	.short	8
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp288
	.quad	.Ltmp291
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp239
	.quad	.Ltmp240
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp240
	.quad	.Ltmp244
	.short	1
	.byte	81
	.quad	.Ltmp252
	.quad	.Ltmp253
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp239
	.quad	.Ltmp240
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp242
	.quad	.Ltmp252
	.short	1
	.byte	86
	.quad	.Ltmp258
	.quad	.Ltmp271
	.short	1
	.byte	86
	.quad	.Ltmp288
	.quad	.Ltmp291
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp242
	.quad	.Ltmp252
	.short	1
	.byte	86
	.quad	.Ltmp258
	.quad	.Ltmp271
	.short	1
	.byte	86
	.quad	.Ltmp288
	.quad	.Ltmp291
	.short	1
	.byte	86
	.quad	.Ltmp298
	.quad	.Ltmp299
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp243
	.quad	.Ltmp244
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp245
	.quad	.Ltmp251
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp258
	.quad	.Ltmp259
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Ltmp291
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp246
	.quad	.Ltmp250
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp254
	.quad	.Ltmp254
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp258
	.quad	.Ltmp259
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp270
	.quad	.Ltmp270
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp270
	.quad	.Ltmp289
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Ltmp291
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Ltmp255
	.quad	.Ltmp255
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp255
	.quad	.Ltmp296
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp296
	.quad	.Ltmp296
	.short	10
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp296
	.quad	.Ltmp297
	.short	9
	.byte	95
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp255
	.quad	.Ltmp255
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp265
	.quad	.Ltmp289
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Ltmp291
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp265
	.quad	.Ltmp266
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Ltmp289
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Lfunc_end10
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp272
	.quad	.Ltmp273
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp273
	.quad	.Ltmp274
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp274
	.quad	.Ltmp275
	.short	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp275
	.quad	.Ltmp288
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp291
	.quad	.Ltmp297
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp301
	.quad	.Lfunc_end10
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp276
	.quad	.Ltmp277
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp277
	.quad	.Ltmp280
	.short	7
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp280
	.quad	.Ltmp281
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp278
	.quad	.Ltmp279
	.short	5
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp279
	.quad	.Ltmp288
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp291
	.quad	.Ltmp297
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp301
	.quad	.Lfunc_end10
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp282
	.quad	.Ltmp283
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp283
	.quad	.Ltmp295
	.short	13
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp295
	.quad	.Ltmp296
	.short	11
	.byte	95
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp296
	.quad	.Ltmp297
	.short	9
	.byte	95
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Lfunc_begin11
	.quad	.Ltmp305
	.short	1
	.byte	85
	.quad	.Ltmp306
	.quad	.Ltmp307
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Lfunc_begin12
	.quad	.Ltmp311
	.short	1
	.byte	85
	.quad	.Ltmp312
	.quad	.Ltmp313
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Lfunc_begin13
	.quad	.Ltmp317
	.short	1
	.byte	85
	.quad	.Ltmp318
	.quad	.Ltmp319
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Lfunc_begin14
	.quad	.Ltmp323
	.short	1
	.byte	85
	.quad	.Ltmp324
	.quad	.Ltmp325
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Lfunc_begin15
	.quad	.Ltmp329
	.short	1
	.byte	85
	.quad	.Ltmp330
	.quad	.Ltmp331
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Lfunc_begin16
	.quad	.Ltmp335
	.short	1
	.byte	85
	.quad	.Ltmp336
	.quad	.Ltmp337
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Lfunc_begin17
	.quad	.Ltmp339
	.short	1
	.byte	85
	.quad	.Ltmp339
	.quad	.Ltmp340
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp339
	.quad	.Ltmp341
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp341
	.quad	.Lfunc_end17
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Lfunc_begin18
	.quad	.Ltmp348
	.short	1
	.byte	85
	.quad	.Ltmp348
	.quad	.Ltmp357
	.short	1
	.byte	83
	.quad	.Ltmp359
	.quad	.Ltmp360
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin18
	.quad	.Ltmp346
	.short	1
	.byte	84
	.quad	.Ltmp346
	.quad	.Ltmp358
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Lfunc_begin19
	.quad	.Ltmp362
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp362
	.quad	.Ltmp362
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp362
	.quad	.Ltmp371
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Ltmp370
	.quad	.Lfunc_end19
	.short	7
	.byte	147
	.byte	8
	.byte	16
	.byte	11
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Lfunc_begin20
	.quad	.Ltmp451
	.short	1
	.byte	85
	.quad	.Ltmp451
	.quad	.Ltmp459
	.short	1
	.byte	86
	.quad	.Ltmp493
	.quad	.Ltmp494
	.short	1
	.byte	86
	.quad	.Ltmp496
	.quad	.Ltmp499
	.short	1
	.byte	86
	.quad	.Ltmp512
	.quad	.Ltmp513
	.short	1
	.byte	85
	.quad	.Ltmp534
	.quad	.Ltmp536
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin20
	.quad	.Ltmp451
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp451
	.quad	.Ltmp451
	.short	8
	.byte	84
	.byte	147
	.byte	8
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp451
	.quad	.Ltmp577
	.short	10
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp579
	.quad	.Lfunc_end20
	.short	10
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Ltmp451
	.quad	.Ltmp457
	.short	1
	.byte	94
	.quad	.Ltmp493
	.quad	.Ltmp495
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp451
	.quad	.Ltmp457
	.short	1
	.byte	94
	.quad	.Ltmp461
	.quad	.Ltmp462
	.short	1
	.byte	80
	.quad	.Ltmp493
	.quad	.Ltmp495
	.short	1
	.byte	94
	.quad	.Ltmp559
	.quad	.Ltmp560
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp451
	.quad	.Ltmp465
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp465
	.quad	.Ltmp466
	.short	8
	.byte	86
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp466
	.quad	.Ltmp493
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp495
	.quad	.Ltmp496
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp500
	.quad	.Ltmp503
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp507
	.quad	.Ltmp515
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp515
	.quad	.Ltmp516
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp516
	.quad	.Ltmp519
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp519
	.quad	.Ltmp529
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp529
	.quad	.Ltmp549
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp549
	.quad	.Ltmp552
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp552
	.quad	.Ltmp564
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp565
	.quad	.Ltmp567
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp567
	.quad	.Ltmp569
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp569
	.quad	.Ltmp578
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp579
	.quad	.Lfunc_end20
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp454
	.quad	.Ltmp455
	.short	3
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp455
	.quad	.Ltmp468
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp496
	.quad	.Ltmp502
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp503
	.quad	.Ltmp507
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp463
	.quad	.Ltmp493
	.short	3
	.byte	119
	.byte	192
	.byte	0
	.quad	.Ltmp507
	.quad	.Ltmp567
	.short	3
	.byte	119
	.byte	192
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp468
	.quad	.Ltmp469
	.short	3
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp469
	.quad	.Ltmp483
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp483
	.quad	.Ltmp484
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp484
	.quad	.Ltmp485
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp485
	.quad	.Ltmp491
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp507
	.quad	.Ltmp508
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp508
	.quad	.Ltmp509
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp509
	.quad	.Ltmp510
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp510
	.quad	.Ltmp514
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp532
	.quad	.Ltmp533
	.short	8
	.byte	119
	.byte	168
	.byte	1
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp533
	.quad	.Ltmp550
	.short	10
	.byte	119
	.byte	168
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp561
	.quad	.Ltmp566
	.short	10
	.byte	119
	.byte	168
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp511
	.quad	.Ltmp515
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp518
	.quad	.Ltmp521
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp515
	.quad	.Ltmp518
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp522
	.quad	.Ltmp523
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp523
	.quad	.Ltmp524
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp526
	.quad	.Ltmp550
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp561
	.quad	.Ltmp566
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Ltmp541
	.quad	.Ltmp543
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp561
	.quad	.Ltmp563
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp543
	.quad	.Ltmp548
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp548
	.quad	.Ltmp549
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp563
	.quad	.Ltmp566
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Lfunc_begin22
	.quad	.Ltmp583
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Lfunc_begin23
	.quad	.Ltmp587
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp587
	.quad	.Ltmp588
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp588
	.quad	.Ltmp592
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Lfunc_begin24
	.quad	.Ltmp594
	.short	1
	.byte	85
	.quad	.Ltmp594
	.quad	.Ltmp601
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Lfunc_begin24
	.quad	.Ltmp594
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp594
	.quad	.Ltmp594
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp594
	.quad	.Ltmp629
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp630
	.quad	.Lfunc_end24
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Ltmp595
	.quad	.Ltmp628
	.short	1
	.byte	93
	.quad	.Ltmp630
	.quad	.Lfunc_end24
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Ltmp598
	.quad	.Ltmp599
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp598
	.quad	.Ltmp599
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp603
	.quad	.Ltmp607
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp609
	.quad	.Ltmp612
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp626
	.quad	.Ltmp627
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp630
	.quad	.Ltmp631
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp635
	.quad	.Ltmp635
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp635
	.quad	.Ltmp640
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp640
	.quad	.Ltmp645
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp646
	.quad	.Ltmp648
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Ltmp603
	.quad	.Ltmp607
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Ltmp605
	.quad	.Ltmp607
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp606
	.quad	.Ltmp607
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp608
	.quad	.Ltmp611
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp606
	.quad	.Ltmp607
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp608
	.quad	.Ltmp611
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp609
	.quad	.Ltmp612
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp640
	.quad	.Ltmp645
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp646
	.quad	.Ltmp648
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp612
	.quad	.Ltmp613
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Ltmp622
	.quad	.Ltmp627
	.short	1
	.byte	83
	.quad	.Ltmp630
	.quad	.Ltmp639
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp626
	.quad	.Ltmp627
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp630
	.quad	.Ltmp631
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Ltmp633
	.quad	.Ltmp635
	.short	1
	.byte	92
	.quad	.Ltmp636
	.quad	.Ltmp649
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Ltmp639
	.quad	.Ltmp649
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp643
	.quad	.Ltmp644
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp644
	.quad	.Ltmp645
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Lfunc_begin25
	.quad	.Ltmp651
	.short	1
	.byte	85
	.quad	.Ltmp651
	.quad	.Ltmp655
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Lfunc_begin26
	.quad	.Ltmp664
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp657
	.quad	.Ltmp660
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Lfunc_begin27
	.quad	.Ltmp666
	.short	1
	.byte	85
	.quad	.Ltmp666
	.quad	.Ltmp667
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Ltmp666
	.quad	.Ltmp668
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp668
	.quad	.Lfunc_end27
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Lfunc_begin28
	.quad	.Ltmp675
	.short	1
	.byte	85
	.quad	.Ltmp675
	.quad	.Ltmp689
	.short	1
	.byte	83
	.quad	.Ltmp691
	.quad	.Ltmp692
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Lfunc_begin28
	.quad	.Ltmp673
	.short	1
	.byte	84
	.quad	.Ltmp673
	.quad	.Ltmp690
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Lfunc_begin29
	.quad	.Ltmp698
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp698
	.quad	.Ltmp699
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp699
	.quad	.Ltmp703
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp705
	.quad	.Ltmp706
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Lfunc_begin29
	.quad	.Ltmp700
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Lfunc_begin29
	.quad	.Ltmp700
	.short	6
	.byte	88
	.byte	147
	.byte	8
	.byte	89
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp695
	.quad	.Ltmp700
	.short	6
	.byte	88
	.byte	147
	.byte	8
	.byte	89
	.byte	147
	.byte	8
	.quad	.Ltmp704
	.quad	.Ltmp704
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	89
	.byte	147
	.byte	8
	.quad	.Ltmp704
	.quad	.Lfunc_end29
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Lfunc_begin30
	.quad	.Ltmp708
	.short	1
	.byte	85
	.quad	.Ltmp708
	.quad	.Ltmp715
	.short	1
	.byte	83
	.quad	.Ltmp717
	.quad	.Lfunc_end30
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Lfunc_begin30
	.quad	.Ltmp708
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp708
	.quad	.Ltmp708
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp708
	.quad	.Ltmp716
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp717
	.quad	.Lfunc_end30
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp712
	.quad	.Lfunc_end30
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Lfunc_begin31
	.quad	.Ltmp721
	.short	1
	.byte	85
	.quad	.Ltmp721
	.quad	.Ltmp724
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Lfunc_begin31
	.quad	.Ltmp720
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp721
	.quad	.Ltmp721
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp721
	.quad	.Ltmp724
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Lfunc_begin31
	.quad	.Ltmp719
	.short	1
	.byte	82
	.quad	.Ltmp721
	.quad	.Ltmp723
	.short	1
	.byte	80
	.quad	.Ltmp723
	.quad	.Ltmp724
	.short	1
	.byte	88
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Ltmp725
	.quad	.Ltmp726
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp726
	.quad	.Lfunc_end31
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Ltmp725
	.quad	.Ltmp726
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp726
	.quad	.Lfunc_end31
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Lfunc_begin32
	.quad	.Ltmp730
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp730
	.quad	.Ltmp731
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp731
	.quad	.Ltmp735
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Lfunc_begin33
	.quad	.Ltmp760
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp760
	.quad	.Ltmp760
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp760
	.quad	.Ltmp763
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp764
	.quad	.Ltmp765
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Lfunc_begin33
	.quad	.Ltmp766
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Lfunc_begin33
	.quad	.Ltmp760
	.short	6
	.byte	88
	.byte	147
	.byte	8
	.byte	89
	.byte	147
	.byte	8
	.quad	.Ltmp760
	.quad	.Ltmp760
	.short	6
	.byte	88
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp760
	.quad	.Ltmp762
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp764
	.quad	.Ltmp785
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp788
	.quad	.Ltmp790
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Ltmp760
	.quad	.Ltmp762
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp762
	.quad	.Ltmp762
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp762
	.quad	.Ltmp764
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp774
	.quad	.Ltmp785
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp788
	.quad	.Ltmp790
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp791
	.quad	.Ltmp792
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp793
	.quad	.Ltmp798
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp799
	.quad	.Lfunc_end33
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Ltmp778
	.quad	.Ltmp779
	.short	3
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp779
	.quad	.Ltmp783
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp784
	.quad	.Ltmp789
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc142:
	.quad	.Ltmp785
	.quad	.Ltmp788
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc143:
	.quad	.Lfunc_begin34
	.quad	.Ltmp800
	.short	1
	.byte	85
	.quad	.Ltmp800
	.quad	.Ltmp804
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Lfunc_begin35
	.quad	.Ltmp806
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp806
	.quad	.Ltmp806
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp806
	.quad	.Ltmp808
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp808
	.quad	.Ltmp809
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp809
	.quad	.Ltmp810
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc145:
	.quad	.Ltmp807
	.quad	.Ltmp811
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	224
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp811
	.quad	.Ltmp813
	.short	14
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	224
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp813
	.quad	.Ltmp816
	.short	15
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	119
	.byte	224
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp816
	.quad	.Ltmp816
	.short	11
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp816
	.quad	.Ltmp816
	.short	13
	.byte	119
	.byte	208
	.byte	1
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp816
	.quad	.Lfunc_end35
	.short	15
	.byte	119
	.byte	208
	.byte	1
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Ltmp814
	.quad	.Ltmp815
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc147:
	.quad	.Ltmp814
	.quad	.Ltmp815
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Ltmp817
	.quad	.Ltmp824
	.short	5
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp825
	.quad	.Ltmp833
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc149:
	.quad	.Lfunc_begin36
	.quad	.Ltmp836
	.short	1
	.byte	85
	.quad	.Ltmp836
	.quad	.Ltmp849
	.short	1
	.byte	83
	.quad	.Ltmp850
	.quad	.Lfunc_end36
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp837
	.quad	.Ltmp838
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp839
	.quad	.Ltmp845
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp846
	.quad	.Ltmp847
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp850
	.quad	.Ltmp851
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc151:
	.quad	.Ltmp840
	.quad	.Ltmp844
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp846
	.quad	.Ltmp847
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp848
	.quad	.Ltmp851
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc152:
	.quad	.Lfunc_begin37
	.quad	.Ltmp852
	.short	1
	.byte	84
	.quad	.Ltmp852
	.quad	.Ltmp868
	.short	1
	.byte	83
	.quad	.Ltmp870
	.quad	.Lfunc_end37
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Lfunc_begin37
	.quad	.Ltmp852
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp852
	.quad	.Ltmp852
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp852
	.quad	.Ltmp869
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp870
	.quad	.Lfunc_end37
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc154:
	.quad	.Ltmp858
	.quad	.Ltmp859
	.short	5
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp861
	.quad	.Ltmp864
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp859
	.quad	.Ltmp860
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp862
	.quad	.Ltmp862
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp862
	.quad	.Lfunc_end37
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc156:
	.quad	.Ltmp861
	.quad	.Ltmp864
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp864
	.quad	.Ltmp866
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc158:
	.quad	.Lfunc_begin38
	.quad	.Ltmp1350
	.short	1
	.byte	85
	.quad	.Ltmp1350
	.quad	.Ltmp1354
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc159:
	.quad	.Ltmp1352
	.quad	.Ltmp1506
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	.Ltmp1508
	.quad	.Ltmp1987
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Ltmp1353
	.quad	.Ltmp1360
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1360
	.quad	.Ltmp1361
	.short	8
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1391
	.quad	.Ltmp1392
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1396
	.quad	.Ltmp1397
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1403
	.quad	.Ltmp1411
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1412
	.quad	.Ltmp1424
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1507
	.quad	.Ltmp1508
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1516
	.quad	.Ltmp1517
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1725
	.quad	.Ltmp1728
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1743
	.quad	.Ltmp1745
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1768
	.quad	.Ltmp1770
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1793
	.quad	.Ltmp1795
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1940
	.quad	.Ltmp1941
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1978
	.quad	.Ltmp1980
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1987
	.quad	.Ltmp1987
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1987
	.quad	.Ltmp1988
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1988
	.quad	.Ltmp1988
	.short	8
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1988
	.quad	.Ltmp1993
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1994
	.quad	.Lfunc_end38
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc161:
	.quad	.Ltmp1360
	.quad	.Ltmp1361
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1363
	.quad	.Ltmp1364
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1364
	.quad	.Ltmp1372
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1378
	.quad	.Ltmp1390
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1391
	.quad	.Ltmp1424
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1482
	.quad	.Ltmp1487
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1497
	.quad	.Ltmp1503
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1507
	.quad	.Ltmp1508
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1513
	.quad	.Ltmp1517
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1527
	.quad	.Ltmp1547
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1627
	.quad	.Ltmp1627
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1627
	.quad	.Ltmp1628
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1703
	.quad	.Ltmp1707
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1715
	.quad	.Ltmp1715
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1715
	.quad	.Ltmp1716
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc162:
	.quad	.Ltmp1367
	.quad	.Ltmp1370
	.short	3
	.byte	119
	.byte	176
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Ltmp1383
	.quad	.Ltmp1386
	.short	3
	.byte	119
	.byte	168
	.byte	2
	.quad	0
	.quad	0
.Ldebug_loc164:
	.quad	.Ltmp1407
	.quad	.Ltmp1408
	.short	5
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1408
	.quad	.Ltmp1411
	.short	10
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1412
	.quad	.Ltmp1506
	.short	10
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1508
	.quad	.Ltmp1987
	.short	10
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	1
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc165:
	.quad	.Ltmp1410
	.quad	.Ltmp1411
	.short	3
	.byte	119
	.byte	240
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Ltmp1488
	.quad	.Ltmp1489
	.short	1
	.byte	93
	.quad	.Ltmp1490
	.quad	.Ltmp1491
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc167:
	.quad	.Ltmp1499
	.quad	.Ltmp1502
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc168:
	.quad	.Ltmp1500
	.quad	.Ltmp1506
	.short	3
	.byte	119
	.byte	200
	.byte	1
	.quad	.Ltmp1513
	.quad	.Ltmp1985
	.short	3
	.byte	119
	.byte	200
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Ltmp1503
	.quad	.Ltmp1505
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc170:
	.quad	.Ltmp1521
	.quad	.Ltmp1523
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Ltmp1530
	.quad	.Ltmp1531
	.short	3
	.byte	119
	.byte	168
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc172:
	.quad	.Ltmp1536
	.quad	.Ltmp1547
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1703
	.quad	.Ltmp1747
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1748
	.quad	.Ltmp1749
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Ltmp1546
	.quad	.Ltmp1547
	.short	3
	.byte	119
	.byte	152
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc174:
	.quad	.Ltmp1560
	.quad	.Ltmp1562
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Ltmp1579
	.quad	.Ltmp1581
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc176:
	.quad	.Ltmp1598
	.quad	.Ltmp1600
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc177:
	.quad	.Ltmp1625
	.quad	.Ltmp1670
	.short	10
	.byte	119
	.byte	168
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1671
	.quad	.Ltmp1672
	.short	10
	.byte	119
	.byte	168
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Ltmp1629
	.quad	.Ltmp1670
	.short	10
	.byte	119
	.byte	152
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1671
	.quad	.Ltmp1672
	.short	10
	.byte	119
	.byte	152
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc179:
	.quad	.Ltmp1631
	.quad	.Ltmp1647
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Ltmp1647
	.quad	.Ltmp1670
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1671
	.quad	.Ltmp1672
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc181:
	.quad	.Ltmp1651
	.quad	.Ltmp1654
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc182:
	.quad	.Ltmp1657
	.quad	.Ltmp1670
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp1671
	.quad	.Ltmp1672
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp1659
	.quad	.Ltmp1660
	.short	3
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1660
	.quad	.Ltmp1661
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp1661
	.quad	.Ltmp1662
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp1662
	.quad	.Ltmp1670
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1671
	.quad	.Ltmp1672
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	1
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc184:
	.quad	.Ltmp1664
	.quad	.Ltmp1665
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1665
	.quad	.Ltmp1670
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1671
	.quad	.Ltmp1672
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc185:
	.quad	.Ltmp1695
	.quad	.Ltmp1696
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1696
	.quad	.Ltmp1702
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Ltmp1718
	.quad	.Ltmp1720
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1720
	.quad	.Ltmp1736
	.short	15
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1736
	.quad	.Ltmp1737
	.short	15
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1737
	.quad	.Ltmp1747
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1748
	.quad	.Ltmp1749
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1760
	.quad	.Ltmp1772
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1773
	.quad	.Ltmp1774
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1785
	.quad	.Ltmp1797
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1798
	.quad	.Ltmp1799
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1810
	.quad	.Ltmp1822
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1857
	.quad	.Ltmp1859
	.short	13
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc187:
	.quad	.Ltmp1718
	.quad	.Ltmp1720
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc188:
	.quad	.Ltmp1724
	.quad	.Ltmp1737
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Ltmp1737
	.quad	.Ltmp1739
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc190:
	.quad	.Ltmp1742
	.quad	.Ltmp1747
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1748
	.quad	.Ltmp1749
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Ltmp1762
	.quad	.Ltmp1764
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc192:
	.quad	.Ltmp1767
	.quad	.Ltmp1772
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1773
	.quad	.Ltmp1774
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Ltmp1787
	.quad	.Ltmp1789
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc194:
	.quad	.Ltmp1792
	.quad	.Ltmp1797
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1798
	.quad	.Ltmp1799
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc195:
	.quad	.Ltmp1813
	.quad	.Ltmp1820
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1820
	.quad	.Ltmp1823
	.short	15
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1823
	.quad	.Ltmp1823
	.short	15
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1823
	.quad	.Ltmp1823
	.short	15
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1823
	.quad	.Ltmp1824
	.short	15
	.byte	119
	.byte	192
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1824
	.quad	.Ltmp1839
	.short	15
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1840
	.quad	.Ltmp1841
	.short	15
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1852
	.quad	.Ltmp1853
	.short	13
	.byte	82
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1853
	.quad	.Ltmp1854
	.short	11
	.byte	82
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	119
	.byte	160
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp1854
	.quad	.Ltmp1854
	.short	9
	.byte	82
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1854
	.quad	.Ltmp1855
	.short	11
	.byte	82
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1855
	.quad	.Ltmp1857
	.short	13
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1859
	.quad	.Ltmp1862
	.short	13
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1865
	.quad	.Ltmp1870
	.short	13
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1871
	.quad	.Ltmp1872
	.short	13
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1883
	.quad	.Ltmp1892
	.short	13
	.byte	119
	.byte	136
	.byte	1
	.byte	147
	.byte	8
	.byte	119
	.byte	144
	.byte	1
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp1816
	.quad	.Ltmp1817
	.short	3
	.byte	119
	.byte	184
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc197:
	.quad	.Ltmp1861
	.quad	.Ltmp1865
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp1865
	.quad	.Ltmp1870
	.short	3
	.byte	119
	.byte	240
	.byte	0
	.quad	.Ltmp1871
	.quad	.Ltmp1872
	.short	3
	.byte	119
	.byte	240
	.byte	0
	.quad	.Ltmp1887
	.quad	.Ltmp1888
	.short	1
	.byte	82
	.quad	.Ltmp1888
	.quad	.Ltmp1889
	.short	3
	.byte	119
	.byte	240
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc198:
	.quad	.Ltmp1894
	.quad	.Ltmp1895
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1895
	.quad	.Ltmp1896
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Ltmp1896
	.quad	.Ltmp1901
	.short	3
	.byte	119
	.byte	184
	.byte	1
	.quad	.Ltmp1902
	.quad	.Ltmp1903
	.short	3
	.byte	119
	.byte	184
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc200:
	.quad	.Ltmp1969
	.quad	.Ltmp1970
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1970
	.quad	.Ltmp1976
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc201:
	.quad	.Lfunc_begin39
	.quad	.Ltmp1996
	.short	1
	.byte	85
	.quad	.Ltmp1996
	.quad	.Ltmp2008
	.short	1
	.byte	83
	.quad	.Ltmp2011
	.quad	.Lfunc_end39
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc202:
	.quad	.Ltmp1995
	.quad	.Ltmp1996
	.short	1
	.byte	85
	.quad	.Ltmp1996
	.quad	.Ltmp1999
	.short	1
	.byte	83
	.quad	.Ltmp2001
	.quad	.Ltmp2006
	.short	1
	.byte	83
	.quad	.Ltmp2011
	.quad	.Lfunc_end39
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc203:
	.quad	.Ltmp1997
	.quad	.Ltmp1999
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	2
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2001
	.quad	.Ltmp2006
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	2
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2011
	.quad	.Ltmp2016
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	2
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2019
	.quad	.Lfunc_end39
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	168
	.byte	2
	.byte	35
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc204:
	.quad	.Ltmp2000
	.quad	.Ltmp2001
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2006
	.quad	.Ltmp2010
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2018
	.quad	.Ltmp2019
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc205:
	.quad	.Ltmp2000
	.quad	.Ltmp2001
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2006
	.quad	.Ltmp2010
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2018
	.quad	.Ltmp2019
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc206:
	.quad	.Ltmp2002
	.quad	.Ltmp2003
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2004
	.quad	.Ltmp2006
	.short	9
	.byte	95
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2011
	.quad	.Ltmp2017
	.short	9
	.byte	95
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2019
	.quad	.Lfunc_end39
	.short	9
	.byte	95
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc207:
	.quad	.Ltmp2005
	.quad	.Ltmp2006
	.short	5
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2011
	.quad	.Ltmp2016
	.short	5
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2016
	.quad	.Ltmp2019
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2019
	.quad	.Lfunc_end39
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc208:
	.quad	.Lfunc_begin40
	.quad	.Ltmp2021
	.short	1
	.byte	84
	.quad	.Ltmp2021
	.quad	.Ltmp2043
	.short	1
	.byte	94
	.quad	.Ltmp2044
	.quad	.Lfunc_end40
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc209:
	.quad	.Lfunc_begin40
	.quad	.Ltmp2021
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp2021
	.quad	.Ltmp2021
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2021
	.quad	.Ltmp2024
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2025
	.quad	.Ltmp2030
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2032
	.quad	.Ltmp2033
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc210:
	.quad	.Ltmp2027
	.quad	.Ltmp2029
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp2032
	.quad	.Ltmp2034
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc211:
	.quad	.Ltmp2027
	.quad	.Ltmp2029
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp2032
	.quad	.Ltmp2034
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc212:
	.quad	.Ltmp2028
	.quad	.Ltmp2034
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2034
	.quad	.Ltmp2034
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2034
	.quad	.Ltmp2039
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2039
	.quad	.Ltmp2041
	.short	7
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc213:
	.quad	.Ltmp2030
	.quad	.Ltmp2031
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2031
	.quad	.Ltmp2032
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2033
	.quad	.Ltmp2042
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2044
	.quad	.Lfunc_end40
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc214:
	.quad	.Lfunc_begin41
	.quad	.Ltmp2046
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc215:
	.quad	.Lfunc_begin42
	.quad	.Ltmp2048
	.short	1
	.byte	84
	.quad	.Ltmp2048
	.quad	.Ltmp2071
	.short	1
	.byte	95
	.quad	.Ltmp2072
	.quad	.Lfunc_end42
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc216:
	.quad	.Ltmp2049
	.quad	.Ltmp2050
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	232
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2050
	.quad	.Ltmp2051
	.short	14
	.byte	86
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2051
	.quad	.Ltmp2052
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2052
	.quad	.Ltmp2069
	.short	16
	.byte	86
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2072
	.quad	.Lfunc_end42
	.short	16
	.byte	86
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	0
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc217:
	.quad	.Ltmp2051
	.quad	.Ltmp2055
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2055
	.quad	.Ltmp2056
	.short	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2056
	.quad	.Ltmp2058
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2059
	.quad	.Ltmp2070
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2072
	.quad	.Lfunc_end42
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc218:
	.quad	.Ltmp2059
	.quad	.Ltmp2063
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2063
	.quad	.Ltmp2063
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2063
	.quad	.Ltmp2064
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2064
	.quad	.Ltmp2066
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2066
	.quad	.Ltmp2066
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2066
	.quad	.Ltmp2072
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2072
	.quad	.Lfunc_end42
	.short	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc219:
	.quad	.Ltmp2063
	.quad	.Ltmp2066
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2066
	.quad	.Ltmp2066
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2066
	.quad	.Ltmp2067
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc220:
	.quad	.Lfunc_begin43
	.quad	.Ltmp2074
	.short	1
	.byte	84
	.quad	.Ltmp2074
	.quad	.Ltmp2084
	.short	1
	.byte	83
	.quad	.Ltmp2086
	.quad	.Lfunc_end43
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc221:
	.quad	.Lfunc_begin43
	.quad	.Ltmp2074
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp2074
	.quad	.Ltmp2074
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2074
	.quad	.Ltmp2085
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2086
	.quad	.Lfunc_end43
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc222:
	.quad	.Ltmp2079
	.quad	.Ltmp2081
	.short	13
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2081
	.quad	.Ltmp2082
	.short	15
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2082
	.quad	.Ltmp2083
	.short	13
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc223:
	.quad	.Lfunc_begin44
	.quad	.Ltmp2088
	.short	1
	.byte	84
	.quad	.Ltmp2088
	.quad	.Ltmp2091
	.short	1
	.byte	94
	.quad	.Ltmp2091
	.quad	.Ltmp2092
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc224:
	.quad	.Ltmp2089
	.quad	.Ltmp2098
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc225:
	.quad	.Ltmp2090
	.quad	.Ltmp2092
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2093
	.quad	.Ltmp2096
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc226:
	.quad	.Ltmp2090
	.quad	.Ltmp2092
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2093
	.quad	.Ltmp2096
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc227:
	.quad	.Lfunc_begin45
	.quad	.Ltmp2099
	.short	1
	.byte	84
	.quad	.Ltmp2099
	.quad	.Ltmp2106
	.short	1
	.byte	83
	.quad	.Ltmp2107
	.quad	.Lfunc_end45
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc228:
	.quad	.Lfunc_begin46
	.quad	.Ltmp2109
	.short	1
	.byte	84
	.quad	.Ltmp2109
	.quad	.Ltmp2148
	.short	2
	.byte	119
	.byte	56
	.quad	.Ltmp2149
	.quad	.Lfunc_end46
	.short	2
	.byte	119
	.byte	56
	.quad	0
	.quad	0
.Ldebug_loc229:
	.quad	.Lfunc_begin46
	.quad	.Ltmp2109
	.short	1
	.byte	81
	.quad	.Ltmp2109
	.quad	.Ltmp2148
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	.Ltmp2149
	.quad	.Lfunc_end46
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc230:
	.quad	.Lfunc_begin46
	.quad	.Ltmp2109
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp2109
	.quad	.Ltmp2109
	.short	8
	.byte	82
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp2109
	.quad	.Ltmp2148
	.short	10
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp2149
	.quad	.Lfunc_end46
	.short	10
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc231:
	.quad	.Lfunc_begin46
	.quad	.Ltmp2109
	.short	1
	.byte	89
	.quad	.Ltmp2109
	.quad	.Ltmp2118
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc232:
	.quad	.Ltmp2110
	.quad	.Ltmp2117
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc233:
	.quad	.Ltmp2114
	.quad	.Ltmp2115
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2115
	.quad	.Ltmp2123
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2143
	.quad	.Ltmp2144
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc234:
	.quad	.Ltmp2121
	.quad	.Ltmp2123
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp2143
	.quad	.Ltmp2144
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc235:
	.quad	.Ltmp2121
	.quad	.Ltmp2123
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp2143
	.quad	.Ltmp2144
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2146
	.quad	.Ltmp2146
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2146
	.quad	.Lfunc_end46
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc236:
	.quad	.Ltmp2124
	.quad	.Ltmp2127
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2127
	.quad	.Ltmp2127
	.short	11
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2127
	.quad	.Ltmp2130
	.short	9
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2131
	.quad	.Ltmp2133
	.short	9
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2140
	.quad	.Ltmp2143
	.short	9
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2144
	.quad	.Ltmp2147
	.short	9
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2150
	.quad	.Ltmp2151
	.short	9
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc237:
	.quad	.Ltmp2128
	.quad	.Ltmp2132
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc238:
	.quad	.Ltmp2143
	.quad	.Ltmp2146
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc239:
	.quad	.Lfunc_begin47
	.quad	.Ltmp2153
	.short	1
	.byte	85
	.quad	.Ltmp2153
	.quad	.Ltmp2155
	.short	1
	.byte	80
	.quad	.Ltmp2155
	.quad	.Ltmp2156
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc240:
	.quad	.Ltmp2152
	.quad	.Ltmp2153
	.short	1
	.byte	85
	.quad	.Ltmp2153
	.quad	.Ltmp2155
	.short	1
	.byte	80
	.quad	.Ltmp2155
	.quad	.Ltmp2156
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc241:
	.quad	.Ltmp2157
	.quad	.Ltmp2160
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2163
	.quad	.Ltmp2164
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc242:
	.quad	.Ltmp2159
	.quad	.Ltmp2160
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2163
	.quad	.Ltmp2163
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2163
	.quad	.Lfunc_end47
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc243:
	.quad	.Ltmp2159
	.quad	.Ltmp2162
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2165
	.quad	.Lfunc_end47
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc244:
	.quad	.Ltmp2159
	.quad	.Ltmp2162
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2165
	.quad	.Lfunc_end47
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc245:
	.quad	.Lfunc_begin48
	.quad	.Ltmp2202
	.short	1
	.byte	85
	.quad	.Ltmp2202
	.quad	.Ltmp2206
	.short	1
	.byte	83
	.quad	.Ltmp2208
	.quad	.Ltmp2220
	.short	1
	.byte	83
	.quad	.Ltmp2223
	.quad	.Ltmp2224
	.short	1
	.byte	85
	.quad	.Ltmp2227
	.quad	.Ltmp2228
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc246:
	.quad	.Lfunc_begin48
	.quad	.Ltmp2202
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2202
	.quad	.Ltmp2202
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2202
	.quad	.Ltmp2245
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2247
	.quad	.Lfunc_end48
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc247:
	.quad	.Lfunc_begin48
	.quad	.Ltmp2202
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp2202
	.quad	.Ltmp2202
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2202
	.quad	.Ltmp2246
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2247
	.quad	.Lfunc_end48
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc248:
	.quad	.Ltmp2202
	.quad	.Ltmp2217
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp2217
	.quad	.Ltmp2219
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc249:
	.quad	.Lfunc_begin49
	.quad	.Ltmp2249
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc250:
	.quad	.Ltmp2248
	.quad	.Ltmp2249
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2250
	.quad	.Ltmp2253
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc251:
	.quad	.Ltmp2248
	.quad	.Ltmp2249
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2250
	.quad	.Ltmp2253
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2254
	.quad	.Ltmp2255
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc252:
	.quad	.Ltmp2251
	.quad	.Ltmp2256
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2256
	.quad	.Ltmp2257
	.short	13
	.byte	86
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2257
	.quad	.Ltmp2257
	.short	13
	.byte	86
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2257
	.quad	.Lfunc_end49
	.short	13
	.byte	86
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	8
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc253:
	.quad	.Lfunc_begin50
	.quad	.Ltmp2260
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc254:
	.quad	.Ltmp2259
	.quad	.Ltmp2260
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2261
	.quad	.Ltmp2264
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc255:
	.quad	.Ltmp2259
	.quad	.Ltmp2260
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2261
	.quad	.Ltmp2264
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2265
	.quad	.Ltmp2266
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc256:
	.quad	.Ltmp2262
	.quad	.Ltmp2267
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2267
	.quad	.Ltmp2268
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2268
	.quad	.Ltmp2268
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2268
	.quad	.Lfunc_end50
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc257:
	.quad	.Lfunc_begin51
	.quad	.Ltmp2271
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc258:
	.quad	.Ltmp2270
	.quad	.Ltmp2271
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2272
	.quad	.Ltmp2275
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc259:
	.quad	.Ltmp2270
	.quad	.Ltmp2271
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2272
	.quad	.Ltmp2275
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2276
	.quad	.Ltmp2277
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc260:
	.quad	.Ltmp2273
	.quad	.Ltmp2278
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2278
	.quad	.Ltmp2279
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2279
	.quad	.Ltmp2279
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2279
	.quad	.Lfunc_end51
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc261:
	.quad	.Lfunc_begin52
	.quad	.Ltmp2282
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc262:
	.quad	.Ltmp2281
	.quad	.Ltmp2282
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2283
	.quad	.Ltmp2286
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc263:
	.quad	.Ltmp2281
	.quad	.Ltmp2282
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2283
	.quad	.Ltmp2286
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2287
	.quad	.Ltmp2288
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc264:
	.quad	.Ltmp2284
	.quad	.Ltmp2289
	.short	12
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2289
	.quad	.Ltmp2290
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2290
	.quad	.Ltmp2290
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2290
	.quad	.Lfunc_end52
	.short	13
	.byte	93
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	7
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc265:
	.quad	.Lfunc_begin53
	.quad	.Ltmp2292
	.short	1
	.byte	85
	.quad	.Ltmp2292
	.quad	.Ltmp2293
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc266:
	.quad	.Ltmp2292
	.quad	.Ltmp2294
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp2294
	.quad	.Lfunc_end53
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc267:
	.quad	.Lfunc_begin54
	.quad	.Ltmp2301
	.short	1
	.byte	85
	.quad	.Ltmp2301
	.quad	.Ltmp2306
	.short	1
	.byte	83
	.quad	.Ltmp2308
	.quad	.Ltmp2309
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc268:
	.quad	.Lfunc_begin54
	.quad	.Ltmp2299
	.short	1
	.byte	84
	.quad	.Ltmp2299
	.quad	.Ltmp2307
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc269:
	.quad	.Ltmp2312
	.quad	.Ltmp2313
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2313
	.quad	.Ltmp2330
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2331
	.quad	.Lfunc_end55
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc270:
	.quad	.Ltmp2325
	.quad	.Ltmp2326
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2326
	.quad	.Ltmp2329
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc271:
	.quad	.Ltmp2327
	.quad	.Ltmp2328
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc272:
	.quad	.Lfunc_begin56
	.quad	.Ltmp2336
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc273:
	.quad	.Lfunc_begin57
	.quad	.Ltmp2338
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp2338
	.quad	.Ltmp2338
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2338
	.quad	.Ltmp2347
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2348
	.quad	.Ltmp2349
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc274:
	.quad	.Ltmp2346
	.quad	.Lfunc_end57
	.short	7
	.byte	147
	.byte	8
	.byte	16
	.byte	5
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc275:
	.quad	.Lfunc_begin58
	.quad	.Ltmp2386
	.short	1
	.byte	85
	.quad	.Ltmp2386
	.quad	.Ltmp2390
	.short	1
	.byte	83
	.quad	.Ltmp2394
	.quad	.Ltmp2406
	.short	1
	.byte	83
	.quad	.Ltmp2408
	.quad	.Ltmp2409
	.short	1
	.byte	85
	.quad	.Ltmp2421
	.quad	.Ltmp2422
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc276:
	.quad	.Lfunc_begin58
	.quad	.Ltmp2386
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2386
	.quad	.Ltmp2386
	.short	7
	.byte	84
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp2386
	.quad	.Ltmp2411
	.short	7
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp2412
	.quad	.Ltmp2417
	.short	7
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp2418
	.quad	.Ltmp2423
	.short	7
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp2424
	.quad	.Ltmp2427
	.short	7
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc277:
	.quad	.Lfunc_begin58
	.quad	.Ltmp2386
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp2386
	.quad	.Ltmp2386
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2386
	.quad	.Ltmp2433
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2435
	.quad	.Lfunc_end58
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc278:
	.quad	.Ltmp2386
	.quad	.Ltmp2411
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2411
	.quad	.Ltmp2411
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2411
	.quad	.Ltmp2412
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2417
	.quad	.Ltmp2418
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2423
	.quad	.Ltmp2424
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2428
	.quad	.Ltmp2434
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2435
	.quad	.Lfunc_end58
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc279:
	.quad	.Ltmp2386
	.quad	.Ltmp2403
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp2403
	.quad	.Ltmp2405
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc280:
	.quad	.Ltmp2415
	.quad	.Ltmp2419
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc281:
	.quad	.Ltmp2419
	.quad	.Ltmp2422
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc282:
	.quad	.Lfunc_begin59
	.quad	.Ltmp2436
	.short	1
	.byte	85
	.quad	.Ltmp2436
	.quad	.Ltmp2447
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc283:
	.quad	.Lfunc_begin59
	.quad	.Ltmp2436
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2436
	.quad	.Ltmp2436
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2436
	.quad	.Ltmp2446
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc284:
	.quad	.Ltmp2437
	.quad	.Ltmp2438
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2438
	.quad	.Ltmp2440
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2443
	.quad	.Ltmp2444
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc285:
	.quad	.Ltmp2437
	.quad	.Ltmp2438
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2438
	.quad	.Ltmp2440
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2442
	.quad	.Ltmp2442
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2442
	.quad	.Ltmp2443
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2443
	.quad	.Ltmp2444
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc286:
	.quad	.Ltmp2440
	.quad	.Ltmp2443
	.short	1
	.byte	92
	.quad	.Ltmp2444
	.quad	.Ltmp2445
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc287:
	.quad	.Ltmp2441
	.quad	.Ltmp2443
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	184
	.byte	1
	.byte	35
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2444
	.quad	.Ltmp2445
	.short	11
	.byte	147
	.byte	8
	.byte	119
	.byte	184
	.byte	1
	.byte	35
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc288:
	.quad	.Lfunc_begin60
	.quad	.Ltmp2448
	.short	1
	.byte	85
	.quad	.Ltmp2448
	.quad	.Ltmp2466
	.short	1
	.byte	94
	.quad	.Ltmp2467
	.quad	.Ltmp2606
	.short	1
	.byte	94
	.quad	.Ltmp2607
	.quad	.Lfunc_end60
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc289:
	.quad	.Lfunc_begin60
	.quad	.Ltmp2448
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2448
	.quad	.Ltmp2449
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp2449
	.quad	.Ltmp2450
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp2450
	.quad	.Ltmp2451
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc290:
	.quad	.Lfunc_begin60
	.quad	.Ltmp2448
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp2448
	.quad	.Ltmp2448
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2448
	.quad	.Ltmp2459
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2459
	.quad	.Ltmp2465
	.short	8
	.byte	119
	.byte	192
	.byte	2
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2465
	.quad	.Ltmp2467
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2467
	.quad	.Ltmp2606
	.short	8
	.byte	119
	.byte	192
	.byte	2
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2607
	.quad	.Lfunc_end60
	.short	8
	.byte	119
	.byte	192
	.byte	2
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc291:
	.quad	.Ltmp2452
	.quad	.Ltmp2457
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc292:
	.quad	.Ltmp2455
	.quad	.Ltmp2456
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2456
	.quad	.Ltmp2463
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2465
	.quad	.Ltmp2467
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc293:
	.quad	.Ltmp2460
	.quad	.Ltmp2465
	.short	1
	.byte	93
	.quad	.Ltmp2467
	.quad	.Ltmp2602
	.short	1
	.byte	93
	.quad	.Ltmp2607
	.quad	.Lfunc_end60
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc294:
	.quad	.Ltmp2606
	.quad	.Ltmp2607
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc295:
	.quad	.Lfunc_begin61
	.quad	.Ltmp2610
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc296:
	.quad	.Ltmp2611
	.quad	.Ltmp2614
	.short	4
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp2614
	.quad	.Ltmp2618
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc297:
	.quad	.Ltmp2616
	.quad	.Ltmp2617
	.short	3
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2617
	.quad	.Ltmp2620
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2621
	.quad	.Ltmp2623
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2624
	.quad	.Lfunc_end61
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc298:
	.quad	.Ltmp2620
	.quad	.Lfunc_end61
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc299:
	.quad	.Lfunc_begin62
	.quad	.Ltmp2628
	.short	1
	.byte	84
	.quad	.Ltmp2628
	.quad	.Ltmp2694
	.short	1
	.byte	95
	.quad	.Ltmp2695
	.quad	.Lfunc_end62
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc300:
	.quad	.Lfunc_begin62
	.quad	.Ltmp2628
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp2628
	.quad	.Ltmp2628
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2628
	.quad	.Ltmp2693
	.short	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp2695
	.quad	.Lfunc_end62
	.short	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc301:
	.quad	.Lfunc_begin62
	.quad	.Ltmp2628
	.short	1
	.byte	88
	.quad	.Ltmp2628
	.quad	.Ltmp2677
	.short	1
	.byte	94
	.quad	.Ltmp2680
	.quad	.Ltmp2692
	.short	1
	.byte	94
	.quad	.Ltmp2695
	.quad	.Lfunc_end62
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc302:
	.quad	.Ltmp2626
	.quad	.Ltmp2627
	.short	1
	.byte	84
	.quad	.Ltmp2627
	.quad	.Ltmp2629
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc303:
	.quad	.Ltmp2629
	.quad	.Ltmp2632
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2632
	.quad	.Ltmp2633
	.short	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2633
	.quad	.Ltmp2637
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2637
	.quad	.Ltmp2638
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2638
	.quad	.Ltmp2639
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2639
	.quad	.Ltmp2640
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc304:
	.quad	.Ltmp2641
	.quad	.Ltmp2667
	.short	1
	.byte	92
	.quad	.Ltmp2668
	.quad	.Ltmp2670
	.short	1
	.byte	92
	.quad	.Ltmp2670
	.quad	.Ltmp2681
	.short	3
	.byte	119
	.byte	128
	.byte	1
	.quad	.Ltmp2696
	.quad	.Lfunc_end62
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc305:
	.quad	.Ltmp2643
	.quad	.Ltmp2667
	.short	1
	.byte	86
	.quad	.Ltmp2668
	.quad	.Ltmp2669
	.short	1
	.byte	86
	.quad	.Ltmp2669
	.quad	.Ltmp2681
	.short	3
	.byte	119
	.byte	200
	.byte	0
	.quad	.Ltmp2696
	.quad	.Lfunc_end62
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc306:
	.quad	.Ltmp2667
	.quad	.Ltmp2678
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2678
	.quad	.Ltmp2678
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2678
	.quad	.Ltmp2679
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2690
	.quad	.Ltmp2691
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc307:
	.quad	.Ltmp2675
	.quad	.Ltmp2676
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp2676
	.quad	.Ltmp2680
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc308:
	.quad	.Ltmp2682
	.quad	.Ltmp2690
	.short	3
	.byte	119
	.byte	176
	.byte	5
	.quad	0
	.quad	0
.Ldebug_loc309:
	.quad	.Ltmp2683
	.quad	.Ltmp2687
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc310:
	.quad	.Ltmp2686
	.quad	.Ltmp2690
	.short	3
	.byte	119
	.byte	152
	.byte	5
	.quad	0
	.quad	0
.Ldebug_loc311:
	.quad	.Ltmp2688
	.quad	.Ltmp2690
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc312:
	.quad	.Ltmp2700
	.quad	.Ltmp2705
	.short	7
	.byte	147
	.byte	8
	.byte	16
	.byte	5
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2705
	.quad	.Ltmp2706
	.short	8
	.byte	85
	.byte	147
	.byte	8
	.byte	16
	.byte	5
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc313:
	.quad	.Ltmp2701
	.quad	.Ltmp2767
	.short	3
	.byte	119
	.byte	248
	.byte	0
	.quad	.Ltmp2768
	.quad	.Lfunc_end63
	.short	3
	.byte	119
	.byte	248
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc314:
	.quad	.Ltmp2704
	.quad	.Ltmp2714
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2716
	.quad	.Ltmp2717
	.short	14
	.byte	86
	.byte	147
	.byte	8
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2719
	.quad	.Ltmp2720
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc315:
	.quad	.Ltmp2737
	.quad	.Ltmp2738
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2738
	.quad	.Ltmp2751
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp2769
	.quad	.Ltmp2770
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc316:
	.quad	.Ltmp2738
	.quad	.Ltmp2739
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	168
	.byte	3
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2741
	.quad	.Ltmp2751
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc317:
	.quad	.Lfunc_begin64
	.quad	.Ltmp2772
	.short	1
	.byte	85
	.quad	.Ltmp2772
	.quad	.Ltmp2779
	.short	1
	.byte	83
	.quad	.Ltmp2781
	.quad	.Lfunc_end64
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc318:
	.quad	.Lfunc_begin64
	.quad	.Ltmp2772
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp2772
	.quad	.Ltmp2772
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2772
	.quad	.Ltmp2780
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp2781
	.quad	.Lfunc_end64
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc319:
	.quad	.Ltmp2776
	.quad	.Lfunc_end64
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc320:
	.quad	.Lfunc_begin66
	.quad	.Ltmp2786
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc321:
	.quad	.Lfunc_begin68
	.quad	.Ltmp2791
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc322:
	.quad	.Lfunc_begin70
	.quad	.Ltmp2796
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc323:
	.quad	.Lfunc_begin71
	.quad	.Ltmp2798
	.short	1
	.byte	85
	.quad	.Ltmp2798
	.quad	.Ltmp2802
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc324:
	.quad	.Lfunc_begin72
	.quad	.Ltmp2804
	.short	1
	.byte	85
	.quad	.Ltmp2804
	.quad	.Ltmp2808
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc325:
	.quad	.Lfunc_begin73
	.quad	.Ltmp2907
	.short	1
	.byte	85
	.quad	.Ltmp2907
	.quad	.Ltmp2913
	.short	1
	.byte	83
	.quad	.Ltmp2914
	.quad	.Ltmp2922
	.short	1
	.byte	83
	.quad	.Ltmp2923
	.quad	.Ltmp2936
	.short	1
	.byte	83
	.quad	.Ltmp2937
	.quad	.Ltmp2953
	.short	1
	.byte	83
	.quad	.Ltmp2954
	.quad	.Ltmp3044
	.short	1
	.byte	83
	.quad	.Ltmp3045
	.quad	.Ltmp3060
	.short	1
	.byte	83
	.quad	.Ltmp3061
	.quad	.Ltmp3068
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc326:
	.quad	.Ltmp2907
	.quad	.Ltmp2912
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp2912
	.quad	.Ltmp2912
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2912
	.quad	.Ltmp2914
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2919
	.quad	.Ltmp2928
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2933
	.quad	.Ltmp2946
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2952
	.quad	.Ltmp2956
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2995
	.quad	.Ltmp2999
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3030
	.quad	.Ltmp3034
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3043
	.quad	.Ltmp3045
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3049
	.quad	.Ltmp3053
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3057
	.quad	.Ltmp3064
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3067
	.quad	.Ltmp3073
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3074
	.quad	.Lfunc_end73
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc327:
	.quad	.Ltmp2912
	.quad	.Ltmp2914
	.short	5
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2919
	.quad	.Ltmp2928
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2933
	.quad	.Ltmp2946
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2952
	.quad	.Ltmp2956
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp2972
	.quad	.Ltmp2977
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3015
	.quad	.Ltmp3019
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3022
	.quad	.Ltmp3026
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3037
	.quad	.Ltmp3042
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3043
	.quad	.Ltmp3045
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3059
	.quad	.Ltmp3061
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc328:
	.quad	.Ltmp2924
	.quad	.Ltmp2925
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp2925
	.quad	.Ltmp2926
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2926
	.quad	.Ltmp2951
	.short	8
	.byte	119
	.byte	232
	.byte	0
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp2954
	.quad	.Ltmp3064
	.short	8
	.byte	119
	.byte	232
	.byte	0
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc329:
	.quad	.Ltmp2938
	.quad	.Ltmp2939
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp2939
	.quad	.Ltmp2940
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp2940
	.quad	.Ltmp2941
	.short	8
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp2941
	.quad	.Ltmp2951
	.short	10
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp2954
	.quad	.Ltmp3064
	.short	10
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	240
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc330:
	.quad	.Ltmp2942
	.quad	.Ltmp2945
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc331:
	.quad	.Ltmp2943
	.quad	.Ltmp2951
	.short	1
	.byte	92
	.quad	.Ltmp2954
	.quad	.Ltmp3064
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc332:
	.quad	.Ltmp2946
	.quad	.Ltmp2948
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc333:
	.quad	.Ltmp2958
	.quad	.Ltmp2960
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc334:
	.quad	.Ltmp2961
	.quad	.Ltmp2963
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc335:
	.quad	.Ltmp2964
	.quad	.Ltmp2966
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc336:
	.quad	.Ltmp2967
	.quad	.Ltmp2969
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc337:
	.quad	.Ltmp2979
	.quad	.Ltmp2981
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc338:
	.quad	.Ltmp2982
	.quad	.Ltmp2984
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc339:
	.quad	.Ltmp2985
	.quad	.Ltmp2987
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc340:
	.quad	.Ltmp2988
	.quad	.Ltmp2990
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc341:
	.quad	.Ltmp2994
	.quad	.Ltmp2998
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc342:
	.quad	.Ltmp3002
	.quad	.Ltmp3007
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc343:
	.quad	.Ltmp3009
	.quad	.Ltmp3010
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc344:
	.quad	.Ltmp3029
	.quad	.Ltmp3033
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc345:
	.quad	.Ltmp3048
	.quad	.Ltmp3052
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc346:
	.quad	.Ltmp3056
	.quad	.Ltmp3058
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp3061
	.quad	.Ltmp3063
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc347:
	.quad	.Lfunc_begin74
	.quad	.Ltmp3076
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc348:
	.quad	.Lfunc_begin75
	.quad	.Ltmp3078
	.short	1
	.byte	85
	.quad	.Ltmp3078
	.quad	.Ltmp3180
	.short	1
	.byte	93
	.quad	.Ltmp3181
	.quad	.Lfunc_end75
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc349:
	.quad	.Lfunc_begin75
	.quad	.Ltmp3078
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp3078
	.quad	.Ltmp3080
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp3080
	.quad	.Ltmp3081
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp3081
	.quad	.Ltmp3082
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc350:
	.quad	.Lfunc_begin75
	.quad	.Ltmp3078
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp3078
	.quad	.Ltmp3078
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp3078
	.quad	.Ltmp3095
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp3095
	.quad	.Ltmp3172
	.short	8
	.byte	119
	.byte	128
	.byte	2
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp3173
	.quad	.Ltmp3179
	.short	8
	.byte	119
	.byte	128
	.byte	2
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp3182
	.quad	.Lfunc_end75
	.short	8
	.byte	119
	.byte	128
	.byte	2
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc351:
	.quad	.Ltmp3079
	.quad	.Ltmp3082
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3083
	.quad	.Ltmp3086
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc352:
	.quad	.Ltmp3084
	.quad	.Ltmp3087
	.short	5
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp3179
	.quad	.Ltmp3181
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc353:
	.quad	.Ltmp3101
	.quad	.Ltmp3172
	.short	1
	.byte	95
	.quad	.Ltmp3173
	.quad	.Ltmp3175
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc354:
	.quad	.Lfunc_begin76
	.quad	.Ltmp3183
	.short	1
	.byte	84
	.quad	.Ltmp3183
	.quad	.Ltmp3198
	.short	1
	.byte	94
	.quad	.Ltmp3199
	.quad	.Lfunc_end76
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc355:
	.quad	.Lfunc_begin76
	.quad	.Ltmp3183
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp3183
	.quad	.Ltmp3183
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp3183
	.quad	.Ltmp3197
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp3199
	.quad	.Lfunc_end76
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc356:
	.quad	.Ltmp3184
	.quad	.Ltmp3190
	.short	1
	.byte	86
	.quad	.Ltmp3191
	.quad	.Ltmp3195
	.short	1
	.byte	93
	.quad	.Ltmp3199
	.quad	.Lfunc_end76
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc357:
	.quad	.Ltmp3185
	.quad	.Ltmp3186
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3187
	.quad	.Ltmp3189
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3192
	.quad	.Ltmp3193
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3194
	.quad	.Ltmp3196
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3199
	.quad	.Ltmp3200
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3202
	.quad	.Ltmp3203
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc358:
	.quad	.Ltmp3195
	.quad	.Ltmp3199
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3199
	.quad	.Ltmp3199
	.short	9
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3199
	.quad	.Lfunc_end76
	.short	7
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc359:
	.quad	.Ltmp3195
	.quad	.Ltmp3203
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3203
	.quad	.Ltmp3203
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp3203
	.quad	.Lfunc_end76
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc360:
	.quad	.Ltmp3199
	.quad	.Lfunc_end76
	.short	7
	.byte	119
	.byte	56
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc361:
	.quad	.Ltmp3201
	.quad	.Ltmp3203
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc362:
	.quad	.Lfunc_begin77
	.quad	.Ltmp3206
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc363:
	.quad	.Lfunc_begin77
	.quad	.Ltmp3205
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp3205
	.quad	.Ltmp3205
	.short	8
	.byte	81
	.byte	147
	.byte	8
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp3205
	.quad	.Ltmp3213
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp3215
	.quad	.Ltmp3217
	.short	8
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc364:
	.quad	.Ltmp3207
	.quad	.Ltmp3208
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3208
	.quad	.Ltmp3219
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc365:
	.quad	.Ltmp3209
	.quad	.Ltmp3210
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp3210
	.quad	.Ltmp3218
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc366:
	.quad	.Ltmp3214
	.quad	.Ltmp3215
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp3216
	.quad	.Ltmp3216
	.short	8
	.byte	80
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3216
	.quad	.Lfunc_end77
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc367:
	.quad	.Ltmp3214
	.quad	.Ltmp3216
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp3216
	.quad	.Ltmp3216
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp3216
	.quad	.Ltmp3217
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc368:
	.quad	.Lfunc_begin78
	.quad	.Ltmp3220
	.short	1
	.byte	85
	.quad	.Ltmp3220
	.quad	.Ltmp3221
	.short	1
	.byte	93
	.quad	.Ltmp3222
	.quad	.Ltmp3225
	.short	1
	.byte	93
	.quad	.Ltmp3227
	.quad	.Ltmp3237
	.short	1
	.byte	93
	.quad	.Ltmp3237
	.quad	.Ltmp3238
	.short	1
	.byte	95
	.quad	.Ltmp3238
	.quad	.Ltmp3240
	.short	1
	.byte	93
	.quad	.Ltmp3240
	.quad	.Ltmp3252
	.short	1
	.byte	95
	.quad	.Ltmp3252
	.quad	.Lfunc_end78
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc369:
	.quad	.Lfunc_begin78
	.quad	.Ltmp3220
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp3220
	.quad	.Ltmp3220
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3220
	.quad	.Ltmp3221
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3222
	.quad	.Ltmp3225
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp3227
	.quad	.Ltmp3234
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc370:
	.quad	.Lfunc_begin78
	.quad	.Ltmp3220
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp3220
	.quad	.Ltmp3220
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp3220
	.quad	.Ltmp3221
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp3222
	.quad	.Ltmp3225
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp3227
	.quad	.Ltmp3229
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc371:
	.quad	.Lfunc_begin78
	.quad	.Ltmp3220
	.short	1
	.byte	89
	.quad	.Ltmp3220
	.quad	.Ltmp3221
	.short	1
	.byte	95
	.quad	.Ltmp3222
	.quad	.Ltmp3225
	.short	1
	.byte	95
	.quad	.Ltmp3227
	.quad	.Ltmp3228
	.short	1
	.byte	95
	.quad	.Ltmp3228
	.quad	.Lfunc_end78
	.short	2
	.byte	119
	.byte	16
	.quad	0
	.quad	0
.Ldebug_loc372:
	.quad	.Lfunc_begin78
	.quad	.Ltmp3226
	.short	3
	.byte	119
	.byte	144
	.byte	1
	.quad	.Ltmp3227
	.quad	.Lfunc_end78
	.short	3
	.byte	119
	.byte	144
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc373:
	.quad	.Ltmp3223
	.quad	.Ltmp3225
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp3227
	.quad	.Ltmp3231
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc374:
	.quad	.Ltmp3225
	.quad	.Lfunc_end78
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc375:
	.quad	.Ltmp3229
	.quad	.Ltmp3232
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp3232
	.quad	.Ltmp3235
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc376:
	.quad	.Ltmp3229
	.quad	.Lfunc_end78
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc377:
	.quad	.Ltmp3245
	.quad	.Ltmp3246
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp3246
	.quad	.Ltmp3247
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc378:
	.quad	.Ltmp3247
	.quad	.Ltmp3249
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc379:
	.quad	.Lfunc_begin79
	.quad	.Ltmp3253
	.short	1
	.byte	85
	.quad	.Ltmp3253
	.quad	.Ltmp3254
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc380:
	.quad	.Ltmp3253
	.quad	.Ltmp3255
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp3255
	.quad	.Lfunc_end79
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc381:
	.quad	.Lfunc_begin80
	.quad	.Ltmp3264
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc382:
	.quad	.Lfunc_begin80
	.quad	.Ltmp3265
	.short	1
	.byte	84
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.ascii	"\264B"
	.byte	25
	.byte	17
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	2
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	3
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	62
	.byte	11
	.byte	11
	.byte	11
	.byte	0
	.byte	0
	.byte	4
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	5
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	6
	.byte	15
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	7
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	8
	.byte	21
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	9
	.byte	5
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	10
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	11
	.byte	19
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	12
	.byte	46
	.byte	1
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	13
	.byte	5
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	14
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	15
	.byte	11
	.byte	1
	.byte	0
	.byte	0
	.byte	16
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	17
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	18
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	19
	.byte	11
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	20
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	21
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	22
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	23
	.byte	11
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	24
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	25
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	26
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	27
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	28
	.byte	46
	.byte	1
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	29
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	30
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	31
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	32
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	33
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	34
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	35
	.byte	5
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	36
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	5
	.byte	0
	.byte	0
	.byte	37
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	38
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	39
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	40
	.byte	46
	.byte	1
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	41
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	42
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	43
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	44
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	45
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	5
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	46
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	5
	.byte	0
	.byte	0
	.byte	47
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	48
	.byte	21
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	49
	.byte	1
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	50
	.byte	33
	.byte	0
	.byte	73
	.byte	19
	.byte	34
	.byte	11
	.byte	55
	.byte	11
	.byte	0
	.byte	0
	.byte	51
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	62
	.byte	11
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	17917
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	22
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2

	.quad	0
	.long	.Ldebug_ranges36
	.byte	2
	.long	.Linfo_string3
	.long	57

	.byte	1
	.byte	1
	.long	.Linfo_string3
	.byte	3
	.long	.Linfo_string4
	.byte	7
	.byte	4
	.byte	2
	.long	.Linfo_string5
	.long	79

	.byte	3
	.byte	12
	.long	.Linfo_string5
	.byte	4
	.long	.Linfo_string51
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	115
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	120
	.byte	7
	.long	.Linfo_string50
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string41
	.long	690
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	159
	.byte	4
	.long	.Linfo_string40
	.byte	72
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string8
	.long	325
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string10
	.long	325
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string11
	.long	57
	.byte	1
	.byte	1
	.byte	4
	.byte	16
	.byte	5
	.long	.Linfo_string12
	.long	332
	.byte	1
	.byte	1
	.byte	1
	.byte	20
	.byte	5
	.long	.Linfo_string14
	.long	332
	.byte	1
	.byte	1
	.byte	1
	.byte	21
	.byte	5
	.long	.Linfo_string15
	.long	332
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.byte	5
	.long	.Linfo_string16
	.long	339
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string20
	.long	400
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string22
	.long	456
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string23
	.long	461
	.byte	1
	.byte	1
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string27
	.long	509
	.byte	1
	.byte	1
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string39
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	64
	.byte	0
	.byte	3
	.long	.Linfo_string9
	.byte	7
	.byte	8
	.byte	3
	.long	.Linfo_string13
	.byte	7
	.byte	1
	.byte	6
	.long	344
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	367
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	372
	.byte	8
	.long	325
	.byte	9
	.long	388
	.byte	9
	.long	325
	.byte	0
	.byte	6
	.long	393
	.byte	3
	.long	.Linfo_string18
	.byte	0
	.byte	0
	.byte	6
	.long	405
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	428
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	433
	.byte	8
	.long	449
	.byte	9
	.long	388
	.byte	9
	.long	388
	.byte	0
	.byte	3
	.long	.Linfo_string21
	.byte	7
	.byte	1
	.byte	6
	.long	332
	.byte	6
	.long	466
	.byte	4
	.long	.Linfo_string23
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string24
	.long	456
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string25
	.long	502
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	.Linfo_string26
	.byte	5
	.byte	8
	.byte	6
	.long	514
	.byte	4
	.long	.Linfo_string27
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string28
	.long	461
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string29
	.long	461
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string30
	.long	563
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	.Linfo_string38
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	610
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	615
	.byte	4
	.long	.Linfo_string35
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string28
	.long	461
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string29
	.long	461
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string32
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string33
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string34
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	0
	.byte	6
	.long	695
	.byte	8
	.long	711
	.byte	9
	.long	388
	.byte	9
	.long	836
	.byte	0
	.byte	7
	.long	.Linfo_string48
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string42
	.long	502
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string43
	.long	745
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	4
	.long	.Linfo_string47
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	781
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	786
	.byte	7
	.long	.Linfo_string45
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string44
	.long	820
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	825
	.byte	8
	.long	466
	.byte	9
	.long	388
	.byte	0
	.byte	7
	.long	.Linfo_string49
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	456
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	2
	.long	.Linfo_string52
	.long	898

	.byte	3
	.byte	10
	.long	.Linfo_string52
	.byte	4
	.long	.Linfo_string113
	.byte	208
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string53
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string55
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string56
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string57
	.long	449
	.byte	3
	.byte	10
	.byte	1
	.byte	64
	.byte	5
	.long	.Linfo_string58
	.long	449
	.byte	3
	.byte	10
	.byte	1
	.byte	65
	.byte	5
	.long	.Linfo_string59
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string60
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string62
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.byte	112
	.byte	5
	.long	.Linfo_string63
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	136
	.byte	5
	.long	.Linfo_string64
	.long	1176
	.byte	3
	.byte	10
	.byte	8
	.byte	152
	.byte	5
	.long	.Linfo_string65
	.long	1220
	.byte	3
	.byte	10
	.byte	8
	.byte	160
	.byte	5
	.long	.Linfo_string66
	.long	1264
	.byte	3
	.byte	10
	.byte	8
	.byte	168
	.byte	5
	.long	.Linfo_string67
	.long	1264
	.byte	3
	.byte	10
	.byte	8
	.byte	176
	.byte	5
	.long	.Linfo_string68
	.long	1308
	.byte	3
	.byte	10
	.byte	8
	.byte	184
	.byte	5
	.long	.Linfo_string72
	.long	1391
	.byte	3
	.byte	10
	.byte	8
	.byte	192
	.byte	5
	.long	.Linfo_string107
	.long	2153
	.byte	3
	.byte	10
	.byte	8
	.byte	200
	.byte	0
	.byte	7
	.long	.Linfo_string61
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	461
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	1181
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	1204
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	1209
	.byte	8
	.long	466
	.byte	9
	.long	1129
	.byte	0
	.byte	6
	.long	1225
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	1248
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	1253
	.byte	8
	.long	1129
	.byte	9
	.long	466
	.byte	0
	.byte	6
	.long	1269
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	1292
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	1297
	.byte	8
	.long	449
	.byte	9
	.long	466
	.byte	0
	.byte	6
	.long	1313
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	1336
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	1341
	.byte	8
	.long	1357
	.byte	9
	.long	466
	.byte	9
	.long	466
	.byte	0
	.byte	7
	.long	.Linfo_string71
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string69
	.long	466
	.byte	2
	.byte	10
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string70
	.long	449
	.byte	2
	.byte	10
	.byte	1
	.byte	16
	.byte	0
	.byte	6
	.long	1396
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	1419
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	1424
	.byte	8
	.long	1435
	.byte	9
	.long	466
	.byte	0
	.byte	7
	.long	.Linfo_string106
	.byte	40
	.byte	1
	.byte	5
	.long	.Linfo_string73
	.long	1469
	.byte	2
	.byte	10
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string73
	.long	745
	.byte	2
	.byte	10
	.byte	8
	.byte	24
	.byte	0
	.byte	7
	.long	.Linfo_string105
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	1516
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	1521
	.byte	4
	.long	.Linfo_string104
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	1557
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	1562
	.byte	7
	.long	.Linfo_string103
	.byte	56
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string67
	.long	1661
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string74
	.long	1677
	.byte	2
	.byte	8
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string97
	.long	2064
	.byte	2
	.byte	8
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string99
	.long	820
	.byte	2
	.byte	8
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string100
	.long	2087
	.byte	2
	.byte	8
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string101
	.long	2103
	.byte	2
	.byte	8
	.byte	8
	.byte	48
	.byte	0
	.byte	6
	.long	1666
	.byte	8
	.long	449
	.byte	9
	.long	388
	.byte	0
	.byte	6
	.long	1682
	.byte	8
	.long	1693
	.byte	9
	.long	388
	.byte	0
	.byte	4
	.long	.Linfo_string96
	.byte	24
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string75
	.long	1742
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string77
	.long	1749
	.byte	3
	.byte	8
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string79
	.long	1756
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	.Linfo_string76
	.byte	7
	.byte	8
	.byte	3
	.long	.Linfo_string78
	.byte	5
	.byte	8
	.byte	6
	.long	1761
	.byte	4
	.long	.Linfo_string95
	.byte	88
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string28
	.long	466
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string80
	.long	1849
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string85
	.long	1950
	.byte	3
	.byte	8
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string92
	.long	1749
	.byte	3
	.byte	8
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string93
	.long	1749
	.byte	3
	.byte	8
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string94
	.long	1896
	.byte	3
	.byte	8
	.byte	8
	.byte	80
	.byte	0
	.byte	7
	.long	.Linfo_string84
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	1896
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	1901
	.byte	4
	.long	.Linfo_string83
	.byte	32
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string28
	.long	466
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string81
	.long	502
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string82
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	24
	.byte	0
	.byte	7
	.long	.Linfo_string91
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	1997
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	2002
	.byte	4
	.long	.Linfo_string90
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string86
	.long	1749
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string87
	.long	332
	.byte	3
	.byte	8
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string88
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	9
	.byte	5
	.long	.Linfo_string89
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	10
	.byte	0
	.byte	6
	.long	2069
	.byte	8
	.long	2080
	.byte	9
	.long	388
	.byte	0
	.byte	3
	.long	.Linfo_string98
	.byte	7
	.byte	4
	.byte	6
	.long	2092
	.byte	8
	.long	1749
	.byte	9
	.long	388
	.byte	0
	.byte	6
	.long	2108
	.byte	8
	.long	2119
	.byte	9
	.long	388
	.byte	0
	.byte	7
	.long	.Linfo_string102
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	2158
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	2181
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	2186
	.byte	8
	.long	2197
	.byte	9
	.long	466
	.byte	0
	.byte	7
	.long	.Linfo_string112
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string73
	.long	2231
	.byte	2
	.byte	10
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string73
	.long	745
	.byte	2
	.byte	10
	.byte	8
	.byte	16
	.byte	0
	.byte	4
	.long	.Linfo_string111
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	2267
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	2272
	.byte	7
	.long	.Linfo_string110
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string108
	.long	2319
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string109
	.long	690
	.byte	2
	.byte	8
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	2324
	.byte	8
	.long	745
	.byte	9
	.long	388
	.byte	0
	.byte	10
	.long	.Linfo_string114
	.long	466

	.byte	4
	.short	404
	.long	.Linfo_string114
	.byte	2
	.long	.Linfo_string115
	.long	2366

	.byte	3
	.byte	13
	.long	.Linfo_string115
	.byte	6
	.long	2371
	.byte	4
	.long	.Linfo_string147
	.byte	8
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string116
	.long	2394
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	2399
	.byte	4
	.long	.Linfo_string146
	.byte	80
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string117
	.long	2474
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string28
	.long	466
	.byte	3
	.byte	8
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string139
	.long	2773
	.byte	3
	.byte	8
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string144
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	72
	.byte	5
	.long	.Linfo_string145
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	73
	.byte	0
	.byte	4
	.long	.Linfo_string138
	.byte	48
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string118
	.long	2601
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string123
	.long	502
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string124
	.long	2650
	.byte	3
	.byte	8
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string127
	.long	2673
	.byte	3
	.byte	8
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string133
	.long	57
	.byte	3
	.byte	8
	.byte	4
	.byte	40
	.byte	5
	.long	.Linfo_string134
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	44
	.byte	5
	.long	.Linfo_string135
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	45
	.byte	5
	.long	.Linfo_string136
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	46
	.byte	5
	.long	.Linfo_string137
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	47
	.byte	0
	.byte	4
	.long	.Linfo_string122
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string119
	.long	1742
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string120
	.long	57
	.byte	3
	.byte	8
	.byte	4
	.byte	8
	.byte	5
	.long	.Linfo_string121
	.long	57
	.byte	3
	.byte	8
	.byte	4
	.byte	12
	.byte	0
	.byte	4
	.long	.Linfo_string126
	.byte	8
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string125
	.long	325
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	2678
	.byte	7
	.long	.Linfo_string132
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	2725
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	2730
	.byte	4
	.long	.Linfo_string131
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string128
	.long	456
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string129
	.long	2766
	.byte	3
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	.Linfo_string130
	.byte	7
	.byte	8
	.byte	6
	.long	2778
	.byte	4
	.long	.Linfo_string143
	.byte	32
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string140
	.long	836
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string141
	.long	2814
	.byte	3
	.byte	8
	.byte	8
	.byte	24
	.byte	0
	.byte	6
	.long	2819
	.byte	11
	.long	.Linfo_string142
	.byte	0
	.byte	3
	.byte	8
	.byte	1
	.byte	2
	.long	.Linfo_string148
	.long	2366

	.byte	3
	.byte	13
	.long	.Linfo_string148
	.byte	12
	.long	.Linfo_string149
	.byte	3
	.byte	55
	.long	745
	.byte	1
	.byte	13
	.long	.Linfo_string150
	.byte	3
	.byte	55
	.long	2917
	.byte	14
	.long	.Linfo_string171
	.byte	3
	.byte	55
	.long	745
	.byte	15
	.byte	14
	.long	.Linfo_string43
	.byte	3
	.byte	56
	.long	745
	.byte	0
	.byte	15
	.byte	14
	.long	.Linfo_string43
	.byte	3
	.byte	59
	.long	745
	.byte	0
	.byte	15
	.byte	14
	.long	.Linfo_string43
	.byte	3
	.byte	62
	.long	745
	.byte	0
	.byte	0
	.byte	6
	.long	2922
	.byte	4
	.long	.Linfo_string170
	.byte	88
	.byte	5
	.byte	23
	.byte	1
	.byte	5
	.long	.Linfo_string151
	.long	3088
	.byte	5
	.byte	24
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string159
	.long	449
	.byte	5
	.byte	25
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string160
	.long	449
	.byte	5
	.byte	26
	.byte	1
	.byte	9
	.byte	5
	.long	.Linfo_string161
	.long	449
	.byte	5
	.byte	27
	.byte	1
	.byte	10
	.byte	5
	.long	.Linfo_string162
	.long	449
	.byte	5
	.byte	28
	.byte	1
	.byte	11
	.byte	5
	.long	.Linfo_string163
	.long	449
	.byte	5
	.byte	29
	.byte	1
	.byte	12
	.byte	5
	.long	.Linfo_string164
	.long	449
	.byte	5
	.byte	30
	.byte	1
	.byte	13
	.byte	5
	.long	.Linfo_string165
	.long	466
	.byte	5
	.byte	31
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string166
	.long	466
	.byte	5
	.byte	32
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string167
	.long	466
	.byte	5
	.byte	33
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string168
	.long	449
	.byte	5
	.byte	34
	.byte	1
	.byte	64
	.byte	5
	.long	.Linfo_string169
	.long	466
	.byte	5
	.byte	35
	.byte	8
	.byte	72
	.byte	0
	.byte	6
	.long	3093
	.byte	4
	.long	.Linfo_string151
	.byte	72
	.byte	5
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string152
	.long	3168
	.byte	5
	.byte	12
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string156
	.long	466
	.byte	5
	.byte	12
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string157
	.long	502
	.byte	5
	.byte	12
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string158
	.long	79
	.byte	5
	.byte	12
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string140
	.long	836
	.byte	5
	.byte	12
	.byte	8
	.byte	48
	.byte	0
	.byte	4
	.long	.Linfo_string155
	.byte	8
	.byte	3
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string119
	.long	3204
	.byte	3
	.byte	11
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string154
	.long	57
	.byte	3
	.byte	11
	.byte	4
	.byte	4
	.byte	0
	.byte	3
	.long	.Linfo_string153
	.byte	5
	.byte	4
	.byte	16
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	1
	.byte	87
	.long	.Linfo_string212
	.long	.Linfo_string213
	.byte	3
	.byte	45
	.long	745

	.byte	17
	.long	.Ldebug_loc0
	.long	.Linfo_string150
	.byte	3
	.byte	45
	.long	2917
	.byte	18
	.long	.Ldebug_loc4
	.long	.Linfo_string402
	.byte	3
	.byte	45
	.long	745
	.byte	19
	.quad	.Ltmp2
	.long	.Ltmp22-.Ltmp2
	.byte	18
	.long	.Ldebug_loc5
	.long	.Linfo_string43
	.byte	3
	.byte	46
	.long	745
	.byte	20
	.long	2843
	.long	.Ldebug_ranges0
	.byte	3
	.byte	46
	.byte	21
	.long	.Ldebug_loc1
	.long	2855
	.byte	22
	.long	.Ldebug_loc3
	.long	2866
	.byte	19
	.quad	.Ltmp2
	.long	.Ltmp5-.Ltmp2
	.byte	22
	.long	.Ldebug_loc2
	.long	2878
	.byte	0
	.byte	19
	.quad	.Ltmp10
	.long	.Ltmp13-.Ltmp10
	.byte	22
	.long	.Ldebug_loc6
	.long	2891
	.byte	0
	.byte	19
	.quad	.Ltmp15
	.long	.Ltmp18-.Ltmp15
	.byte	22
	.long	.Ldebug_loc7
	.long	2904
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin1
	.long	.Lfunc_end1-.Lfunc_begin1
	.byte	1
	.byte	87
	.long	.Linfo_string214
	.long	.Linfo_string215
	.byte	3
	.byte	83
	.long	4865

	.byte	17
	.long	.Ldebug_loc8
	.long	.Linfo_string150
	.byte	3
	.byte	83
	.long	2917
	.byte	18
	.long	.Ldebug_loc10
	.long	.Linfo_string403
	.byte	3
	.byte	83
	.long	745
	.byte	18
	.long	.Ldebug_loc11
	.long	.Linfo_string404
	.byte	3
	.byte	83
	.long	466
	.byte	19
	.quad	.Ltmp24
	.long	.Ltmp72-.Ltmp24
	.byte	18
	.long	.Ldebug_loc9
	.long	.Linfo_string43
	.byte	3
	.byte	84
	.long	745
	.byte	18
	.long	.Ldebug_loc12
	.long	.Linfo_string405
	.byte	3
	.byte	89
	.long	466
	.byte	18
	.long	.Ldebug_loc13
	.long	.Linfo_string406
	.byte	3
	.byte	94
	.long	1129
	.byte	18
	.long	.Ldebug_loc14
	.long	.Linfo_string407
	.byte	3
	.byte	102
	.long	466
	.byte	18
	.long	.Ldebug_loc15
	.long	.Linfo_string408
	.byte	3
	.byte	103
	.long	502
	.byte	19
	.quad	.Ltmp48
	.long	.Ltmp68-.Ltmp48
	.byte	18
	.long	.Ldebug_loc17
	.long	.Linfo_string410
	.byte	3
	.byte	104
	.long	466
	.byte	23
	.long	.Ldebug_ranges1
	.byte	18
	.long	.Ldebug_loc16
	.long	.Linfo_string409
	.byte	3
	.byte	105
	.long	466
	.byte	18
	.long	.Ldebug_loc18
	.long	.Linfo_string43
	.byte	3
	.byte	110
	.long	745
	.byte	18
	.long	.Ldebug_loc19
	.long	.Linfo_string411
	.byte	3
	.byte	110
	.long	502
	.byte	18
	.long	.Ldebug_loc20
	.long	.Linfo_string412
	.byte	3
	.byte	115
	.long	466
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin2
	.long	.Lfunc_end2-.Lfunc_begin2
	.byte	1
	.byte	87
	.long	.Linfo_string216
	.long	.Linfo_string217
	.byte	3
	.byte	130
	.long	4865

	.byte	17
	.long	.Ldebug_loc21
	.long	.Linfo_string150
	.byte	3
	.byte	130
	.long	2917
	.byte	18
	.long	.Ldebug_loc23
	.long	.Linfo_string413
	.byte	3
	.byte	130
	.long	745
	.byte	18
	.long	.Ldebug_loc24
	.long	.Linfo_string414
	.byte	3
	.byte	130
	.long	466
	.byte	19
	.quad	.Ltmp74
	.long	.Ltmp85-.Ltmp74
	.byte	18
	.long	.Ldebug_loc22
	.long	.Linfo_string43
	.byte	3
	.byte	131
	.long	745
	.byte	18
	.long	.Ldebug_loc25
	.long	.Linfo_string415
	.byte	3
	.byte	131
	.long	466
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin3
	.long	.Lfunc_end3-.Lfunc_begin3
	.byte	1
	.byte	87
	.long	.Linfo_string218
	.long	.Linfo_string219
	.byte	6
	.byte	245
	.long	4865

	.byte	17
	.long	.Ldebug_loc26
	.long	.Linfo_string150
	.byte	6
	.byte	245
	.long	2917
	.byte	17
	.long	.Ldebug_loc27
	.long	.Linfo_string116
	.byte	6
	.byte	245
	.long	466
	.byte	18
	.long	.Ldebug_loc28
	.long	.Linfo_string416
	.byte	6
	.byte	245
	.long	466
	.byte	0
	.byte	16
	.quad	.Lfunc_begin4
	.long	.Lfunc_end4-.Lfunc_begin4
	.byte	1
	.byte	87
	.long	.Linfo_string220
	.long	.Linfo_string221
	.byte	3
	.byte	68
	.long	4865

	.byte	17
	.long	.Ldebug_loc29
	.long	.Linfo_string150
	.byte	3
	.byte	68
	.long	2917
	.byte	18
	.long	.Ldebug_loc31
	.long	.Linfo_string417
	.byte	3
	.byte	68
	.long	466
	.byte	18
	.long	.Ldebug_loc32
	.long	.Linfo_string418
	.byte	3
	.byte	68
	.long	745
	.byte	19
	.quad	.Ltmp99
	.long	.Ltmp106-.Ltmp99
	.byte	18
	.long	.Ldebug_loc30
	.long	.Linfo_string415
	.byte	3
	.byte	69
	.long	466
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin5
	.long	.Lfunc_end5-.Lfunc_begin5
	.byte	1
	.byte	87
	.long	.Linfo_string222
	.long	.Linfo_string223
	.byte	6
	.byte	255
	.long	466

	.byte	17
	.long	.Ldebug_loc33
	.long	.Linfo_string150
	.byte	6
	.byte	255
	.long	2917
	.byte	17
	.long	.Ldebug_loc34
	.long	.Linfo_string419
	.byte	6
	.byte	255
	.long	466
	.byte	0
	.byte	24
	.quad	.Lfunc_begin6
	.long	.Lfunc_end6-.Lfunc_begin6
	.byte	1
	.byte	87
	.long	.Linfo_string224
	.long	.Linfo_string225
	.byte	6
	.short	293
	.long	449

	.byte	25
	.long	.Ldebug_loc35
	.long	.Linfo_string150
	.byte	6
	.short	293
	.long	2917
	.byte	25
	.long	.Ldebug_loc36
	.long	.Linfo_string415
	.byte	6
	.short	293
	.long	466
	.byte	26
	.long	.Ldebug_loc37
	.long	.Linfo_string420
	.byte	6
	.short	293
	.long	449
	.byte	19
	.quad	.Ltmp127
	.long	.Ltmp133-.Ltmp127
	.byte	26
	.long	.Ldebug_loc38
	.long	.Linfo_string43
	.byte	6
	.short	298
	.long	745
	.byte	26
	.long	.Ldebug_loc39
	.long	.Linfo_string421
	.byte	6
	.short	298
	.long	1521
	.byte	0
	.byte	0
	.byte	24
	.quad	.Lfunc_begin7
	.long	.Lfunc_end7-.Lfunc_begin7
	.byte	1
	.byte	87
	.long	.Linfo_string226
	.long	.Linfo_string227
	.byte	6
	.short	265
	.long	13794

	.byte	25
	.long	.Ldebug_loc40
	.long	.Linfo_string150
	.byte	6
	.short	265
	.long	2917
	.byte	25
	.long	.Ldebug_loc41
	.long	.Linfo_string415
	.byte	6
	.short	265
	.long	466
	.byte	26
	.long	.Ldebug_loc42
	.long	.Linfo_string422
	.byte	6
	.short	265
	.long	1129
	.byte	26
	.long	.Ldebug_loc43
	.long	.Linfo_string423
	.byte	6
	.short	265
	.long	745
	.byte	19
	.quad	.Ltmp181
	.long	.Ltmp203-.Ltmp181
	.byte	26
	.long	.Ldebug_loc44
	.long	.Linfo_string43
	.byte	6
	.short	270
	.long	745
	.byte	26
	.long	.Ldebug_loc45
	.long	.Linfo_string116
	.byte	6
	.short	270
	.long	2366
	.byte	0
	.byte	0
	.byte	27
	.quad	.Lfunc_begin8
	.long	.Lfunc_end8-.Lfunc_begin8
	.byte	1
	.byte	87
	.long	11398
	.byte	21
	.long	.Ldebug_loc46
	.long	11414
	.byte	22
	.long	.Ldebug_loc47
	.long	11425
	.byte	0
	.byte	24
	.quad	.Lfunc_begin9
	.long	.Lfunc_end9-.Lfunc_begin9
	.byte	1
	.byte	87
	.long	.Linfo_string229
	.long	.Linfo_string230
	.byte	6
	.short	281
	.long	449

	.byte	25
	.long	.Ldebug_loc48
	.long	.Linfo_string150
	.byte	6
	.short	281
	.long	2917
	.byte	25
	.long	.Ldebug_loc49
	.long	.Linfo_string415
	.byte	6
	.short	281
	.long	466
	.byte	26
	.long	.Ldebug_loc50
	.long	.Linfo_string424
	.byte	6
	.short	281
	.long	449
	.byte	19
	.quad	.Ltmp225
	.long	.Ltmp231-.Ltmp225
	.byte	26
	.long	.Ldebug_loc51
	.long	.Linfo_string43
	.byte	6
	.short	286
	.long	745
	.byte	26
	.long	.Ldebug_loc52
	.long	.Linfo_string421
	.byte	6
	.short	286
	.long	1521
	.byte	0
	.byte	0
	.byte	12
	.long	.Linfo_string172
	.byte	3
	.byte	183
	.long	4548
	.byte	1
	.byte	13
	.long	.Linfo_string150
	.byte	3
	.byte	183
	.long	2917
	.byte	13
	.long	.Linfo_string182
	.byte	3
	.byte	183
	.long	466
	.byte	14
	.long	.Linfo_string183
	.byte	3
	.byte	183
	.long	4582
	.byte	14
	.long	.Linfo_string184
	.byte	3
	.byte	183
	.long	745
	.byte	15
	.byte	14
	.long	.Linfo_string70
	.byte	3
	.byte	214
	.long	449
	.byte	14
	.long	.Linfo_string185
	.byte	3
	.byte	184
	.long	4688
	.byte	14
	.long	.Linfo_string197
	.byte	3
	.byte	214
	.long	4582
	.byte	14
	.long	.Linfo_string43
	.byte	3
	.byte	219
	.long	745
	.byte	0
	.byte	0
	.byte	7
	.long	.Linfo_string181
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string73
	.long	4582
	.byte	2
	.byte	183
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string73
	.long	745
	.byte	2
	.byte	183
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	4587
	.byte	4
	.long	.Linfo_string180
	.byte	112
	.byte	3
	.byte	172
	.byte	1
	.byte	5
	.long	.Linfo_string173
	.long	466
	.byte	3
	.byte	173
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string174
	.long	466
	.byte	3
	.byte	174
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string175
	.long	466
	.byte	3
	.byte	175
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string176
	.long	466
	.byte	3
	.byte	176
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string177
	.long	466
	.byte	3
	.byte	177
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string178
	.long	466
	.byte	3
	.byte	179
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string179
	.long	466
	.byte	3
	.byte	180
	.byte	8
	.byte	96
	.byte	0
	.byte	6
	.long	4693
	.byte	4
	.long	.Linfo_string196
	.byte	48
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string186
	.long	502
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string187
	.long	332
	.byte	1
	.byte	1
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string188
	.long	332
	.byte	1
	.byte	1
	.byte	1
	.byte	9
	.byte	5
	.long	.Linfo_string189
	.long	4820
	.byte	1
	.byte	1
	.byte	2
	.byte	10
	.byte	5
	.long	.Linfo_string191
	.long	57
	.byte	1
	.byte	1
	.byte	4
	.byte	12
	.byte	5
	.long	.Linfo_string192
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string193
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string194
	.long	325
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string195
	.long	388
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	0
	.byte	3
	.long	.Linfo_string190
	.byte	7
	.byte	2
	.byte	28
	.long	.Linfo_string198
	.byte	3
	.short	271
	.long	4865
	.byte	1
	.byte	29
	.long	.Linfo_string200
	.byte	3
	.short	271
	.long	745
	.byte	29
	.long	.Linfo_string201
	.byte	3
	.short	271
	.long	466
	.byte	0
	.byte	7
	.long	.Linfo_string199
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string73
	.long	466
	.byte	2
	.byte	83
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string73
	.long	745
	.byte	2
	.byte	83
	.byte	8
	.byte	16
	.byte	0
	.byte	16
	.quad	.Lfunc_begin10
	.long	.Lfunc_end10-.Lfunc_begin10
	.byte	1
	.byte	87
	.long	.Linfo_string231
	.long	.Linfo_string232
	.byte	3
	.byte	143
	.long	13794

	.byte	17
	.long	.Ldebug_loc53
	.long	.Linfo_string150
	.byte	3
	.byte	143
	.long	2917
	.byte	17
	.long	.Ldebug_loc54
	.long	.Linfo_string182
	.byte	3
	.byte	143
	.long	466
	.byte	18
	.long	.Ldebug_loc64
	.long	.Linfo_string425
	.byte	3
	.byte	143
	.long	1129
	.byte	18
	.long	.Ldebug_loc65
	.long	.Linfo_string426
	.byte	3
	.byte	143
	.long	745
	.byte	19
	.quad	.Ltmp237
	.long	.Ltmp302-.Ltmp237
	.byte	18
	.long	.Ldebug_loc63
	.long	.Linfo_string43
	.byte	3
	.byte	144
	.long	745
	.byte	18
	.long	.Ldebug_loc68
	.long	.Linfo_string187
	.byte	3
	.byte	148
	.long	466
	.byte	18
	.long	.Ldebug_loc69
	.long	.Linfo_string390
	.byte	3
	.byte	149
	.long	466
	.byte	18
	.long	.Ldebug_loc70
	.long	.Linfo_string427
	.byte	3
	.byte	150
	.long	466
	.byte	18
	.long	.Ldebug_loc71
	.long	.Linfo_string428
	.byte	3
	.byte	151
	.long	1129
	.byte	14
	.long	.Linfo_string429
	.byte	3
	.byte	144
	.long	4582
	.byte	20
	.long	4445
	.long	.Ldebug_ranges2
	.byte	3
	.byte	144
	.byte	21
	.long	.Ldebug_loc55
	.long	4457
	.byte	21
	.long	.Ldebug_loc56
	.long	4468
	.byte	22
	.long	.Ldebug_loc60
	.long	4479
	.byte	22
	.long	.Ldebug_loc62
	.long	4490
	.byte	23
	.long	.Ldebug_ranges4
	.byte	22
	.long	.Ldebug_loc57
	.long	4502
	.byte	22
	.long	.Ldebug_loc58
	.long	4513
	.byte	22
	.long	.Ldebug_loc59
	.long	4524
	.byte	22
	.long	.Ldebug_loc61
	.long	4535
	.byte	20
	.long	4827
	.long	.Ldebug_ranges3
	.byte	3
	.byte	225
	.byte	22
	.long	.Ldebug_loc66
	.long	4840
	.byte	22
	.long	.Ldebug_loc67
	.long	4852
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin11
	.long	.Lfunc_end11-.Lfunc_begin11
	.byte	1
	.byte	87
	.long	.Linfo_string233
	.long	.Linfo_string234
	.byte	3
	.byte	233
	.long	466

	.byte	17
	.long	.Ldebug_loc72
	.long	.Linfo_string429
	.byte	3
	.byte	233
	.long	4582
	.byte	0
	.byte	16
	.quad	.Lfunc_begin12
	.long	.Lfunc_end12-.Lfunc_begin12
	.byte	1
	.byte	87
	.long	.Linfo_string235
	.long	.Linfo_string236
	.byte	3
	.byte	249
	.long	466

	.byte	17
	.long	.Ldebug_loc73
	.long	.Linfo_string429
	.byte	3
	.byte	249
	.long	4582
	.byte	0
	.byte	16
	.quad	.Lfunc_begin13
	.long	.Lfunc_end13-.Lfunc_begin13
	.byte	1
	.byte	87
	.long	.Linfo_string237
	.long	.Linfo_string238
	.byte	3
	.byte	245
	.long	466

	.byte	17
	.long	.Ldebug_loc74
	.long	.Linfo_string429
	.byte	3
	.byte	245
	.long	4582
	.byte	0
	.byte	16
	.quad	.Lfunc_begin14
	.long	.Lfunc_end14-.Lfunc_begin14
	.byte	1
	.byte	87
	.long	.Linfo_string239
	.long	.Linfo_string240
	.byte	3
	.byte	253
	.long	466

	.byte	17
	.long	.Ldebug_loc75
	.long	.Linfo_string429
	.byte	3
	.byte	253
	.long	4582
	.byte	0
	.byte	16
	.quad	.Lfunc_begin15
	.long	.Lfunc_end15-.Lfunc_begin15
	.byte	1
	.byte	87
	.long	.Linfo_string241
	.long	.Linfo_string242
	.byte	3
	.byte	237
	.long	466

	.byte	17
	.long	.Ldebug_loc76
	.long	.Linfo_string429
	.byte	3
	.byte	237
	.long	4582
	.byte	0
	.byte	16
	.quad	.Lfunc_begin16
	.long	.Lfunc_end16-.Lfunc_begin16
	.byte	1
	.byte	87
	.long	.Linfo_string243
	.long	.Linfo_string244
	.byte	3
	.byte	241
	.long	466

	.byte	17
	.long	.Ldebug_loc77
	.long	.Linfo_string429
	.byte	3
	.byte	241
	.long	4582
	.byte	0
	.byte	16
	.quad	.Lfunc_begin17
	.long	.Lfunc_end17-.Lfunc_begin17
	.byte	1
	.byte	87
	.long	.Linfo_string245
	.long	.Linfo_string246
	.byte	1
	.byte	1
	.long	325

	.byte	17
	.long	.Ldebug_loc78
	.long	.Linfo_string419
	.byte	1
	.byte	1
	.long	388
	.byte	30
	.byte	1
	.byte	84
	.long	.Linfo_string430
	.byte	1
	.byte	1
	.long	325
	.byte	18
	.long	.Ldebug_loc79
	.long	.Linfo_string431
	.byte	1
	.byte	1
	.long	325
	.byte	0
	.byte	16
	.quad	.Lfunc_begin18
	.long	.Lfunc_end18-.Lfunc_begin18
	.byte	1
	.byte	87
	.long	.Linfo_string247
	.long	.Linfo_string248
	.byte	1
	.byte	1
	.long	449

	.byte	17
	.long	.Ldebug_loc80
	.long	.Linfo_string432
	.byte	1
	.byte	1
	.long	388
	.byte	17
	.long	.Ldebug_loc81
	.long	.Linfo_string433
	.byte	1
	.byte	1
	.long	388
	.byte	31
	.byte	0
	.long	.Linfo_string434
	.byte	1
	.byte	1
	.long	449
	.byte	0
	.byte	24
	.quad	.Lfunc_begin19
	.long	.Lfunc_end19-.Lfunc_begin19
	.byte	1
	.byte	87
	.long	.Linfo_string249
	.long	.Linfo_string250
	.byte	3
	.short	257
	.long	466

	.byte	25
	.long	.Ldebug_loc82
	.long	.Linfo_string173
	.byte	3
	.short	257
	.long	466
	.byte	26
	.long	.Ldebug_loc83
	.long	.Linfo_string435
	.byte	3
	.short	257
	.long	466
	.byte	0
	.byte	24
	.quad	.Lfunc_begin20
	.long	.Lfunc_end20-.Lfunc_begin20
	.byte	1
	.byte	87
	.long	.Linfo_string251
	.long	.Linfo_string252
	.byte	3
	.short	324
	.long	745

	.byte	25
	.long	.Ldebug_loc84
	.long	.Linfo_string150
	.byte	3
	.short	324
	.long	2917
	.byte	25
	.long	.Ldebug_loc85
	.long	.Linfo_string439
	.byte	3
	.short	324
	.long	466
	.byte	32
	.byte	3
	.byte	145
	.ascii	"\360\007"
	.long	.Linfo_string438
	.byte	3
	.short	324
	.long	13934
	.byte	32
	.byte	3
	.byte	145
	.ascii	"\210\b"
	.long	.Linfo_string437
	.byte	3
	.short	324
	.long	1129
	.byte	32
	.byte	3
	.byte	145
	.ascii	"\240\b"
	.long	.Linfo_string436
	.byte	3
	.short	324
	.long	466
	.byte	26
	.long	.Ldebug_loc88
	.long	.Linfo_string43
	.byte	3
	.short	324
	.long	745
	.byte	19
	.quad	.Ltmp451
	.long	.Ltmp566-.Ltmp451
	.byte	26
	.long	.Ldebug_loc87
	.long	.Linfo_string440
	.byte	3
	.short	343
	.long	14621
	.byte	26
	.long	.Ldebug_loc89
	.long	.Linfo_string158
	.byte	3
	.short	329
	.long	79
	.byte	26
	.long	.Ldebug_loc90
	.long	.Linfo_string481
	.byte	3
	.short	344
	.long	15549
	.byte	26
	.long	.Ldebug_loc91
	.long	.Linfo_string442
	.byte	3
	.short	350
	.long	79
	.byte	26
	.long	.Ldebug_loc92
	.long	.Linfo_string482
	.byte	3
	.short	368
	.long	466
	.byte	23
	.long	.Ldebug_ranges8
	.byte	26
	.long	.Ldebug_loc94
	.long	.Linfo_string173
	.byte	3
	.short	417
	.long	466
	.byte	23
	.long	.Ldebug_ranges7
	.byte	26
	.long	.Ldebug_loc95
	.long	.Linfo_string483
	.byte	3
	.short	418
	.long	466
	.byte	23
	.long	.Ldebug_ranges6
	.byte	26
	.long	.Ldebug_loc96
	.long	.Linfo_string43
	.byte	3
	.short	424
	.long	745
	.byte	26
	.long	.Ldebug_loc97
	.long	.Linfo_string484
	.byte	3
	.short	424
	.long	2366
	.byte	23
	.long	.Ldebug_ranges5
	.byte	26
	.long	.Ldebug_loc98
	.long	.Linfo_string43
	.byte	3
	.short	429
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp497
	.long	.Ltmp507-.Ltmp497
	.byte	26
	.long	.Ldebug_loc86
	.long	.Linfo_string150
	.byte	3
	.short	331
	.long	2366
	.byte	0
	.byte	19
	.quad	.Ltmp511
	.long	.Ltmp515-.Ltmp511
	.byte	26
	.long	.Ldebug_loc93
	.long	.Linfo_string43
	.byte	3
	.short	369
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	33
	.quad	.Lfunc_begin21
	.long	.Lfunc_end21-.Lfunc_begin21
	.byte	1
	.byte	87
	.long	.Linfo_string253
	.byte	3
	.short	335
	.long	393
	.byte	34
	.quad	.Lfunc_begin22
	.long	.Lfunc_end22-.Lfunc_begin22
	.byte	1
	.byte	87
	.long	.Linfo_string254
	.byte	3
	.short	335
	.long	393
	.byte	25
	.long	.Ldebug_loc99
	.long	.Linfo_string485
	.byte	3
	.short	335
	.long	15595
	.byte	0
	.byte	34
	.quad	.Lfunc_begin23
	.long	.Lfunc_end23-.Lfunc_begin23
	.byte	1
	.byte	87
	.long	.Linfo_string255
	.byte	3
	.short	344
	.long	13830
	.byte	25
	.long	.Ldebug_loc100
	.long	.Linfo_string28
	.byte	3
	.short	344
	.long	466
	.byte	0
	.byte	28
	.long	.Linfo_string202
	.byte	3
	.short	538
	.long	4865
	.byte	1
	.byte	35
	.long	.Linfo_string150
	.byte	3
	.short	538
	.long	2917
	.byte	29
	.long	.Linfo_string203
	.byte	3
	.short	538
	.long	745
	.byte	29
	.long	.Linfo_string204
	.byte	3
	.short	538
	.long	466
	.byte	15
	.byte	29
	.long	.Linfo_string43
	.byte	3
	.short	543
	.long	745
	.byte	0
	.byte	0
	.byte	24
	.quad	.Lfunc_begin24
	.long	.Lfunc_end24-.Lfunc_begin24
	.byte	1
	.byte	87
	.long	.Linfo_string257
	.long	.Linfo_string258
	.byte	3
	.short	449
	.long	745

	.byte	25
	.long	.Ldebug_loc101
	.long	.Linfo_string489
	.byte	3
	.short	449
	.long	2917
	.byte	25
	.long	.Ldebug_loc102
	.long	.Linfo_string442
	.byte	3
	.short	449
	.long	79
	.byte	32
	.byte	3
	.byte	145
	.ascii	"\360\005"
	.long	.Linfo_string488
	.byte	3
	.short	449
	.long	466
	.byte	26
	.long	.Ldebug_loc103
	.long	.Linfo_string150
	.byte	3
	.short	449
	.long	15660
	.byte	26
	.long	.Ldebug_loc105
	.long	.Linfo_string490
	.byte	3
	.short	449
	.long	745
	.byte	19
	.quad	.Ltmp596
	.long	.Ltmp650-.Ltmp596
	.byte	26
	.long	.Ldebug_loc110
	.long	.Linfo_string43
	.byte	3
	.short	473
	.long	745
	.byte	26
	.long	.Ldebug_loc112
	.long	.Linfo_string491
	.byte	3
	.short	487
	.long	15665
	.byte	26
	.long	.Ldebug_loc114
	.long	.Linfo_string589
	.byte	3
	.short	500
	.long	17495
	.byte	26
	.long	.Ldebug_loc115
	.long	.Linfo_string590
	.byte	3
	.short	501
	.long	15549
	.byte	26
	.long	.Ldebug_loc116
	.long	.Linfo_string591
	.byte	3
	.short	507
	.long	79
	.byte	19
	.quad	.Ltmp597
	.long	.Ltmp599-.Ltmp597
	.byte	26
	.long	.Ldebug_loc104
	.long	.Linfo_string43
	.byte	3
	.short	454
	.long	745
	.byte	0
	.byte	19
	.quad	.Ltmp602
	.long	.Ltmp604-.Ltmp602
	.byte	26
	.long	.Ldebug_loc106
	.long	.Linfo_string43
	.byte	3
	.short	469
	.long	745
	.byte	0
	.byte	36
	.long	6184
	.quad	.Ltmp606
	.long	.Ltmp612-.Ltmp606
	.byte	3
	.short	473
	.byte	21
	.long	.Ldebug_loc107
	.long	6197
	.byte	22
	.long	.Ldebug_loc109
	.long	6209
	.byte	22
	.long	.Ldebug_loc111
	.long	6221
	.byte	19
	.quad	.Ltmp606
	.long	.Ltmp612-.Ltmp606
	.byte	22
	.long	.Ldebug_loc108
	.long	6234
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp625
	.long	.Ltmp627-.Ltmp625
	.byte	26
	.long	.Ldebug_loc113
	.long	.Linfo_string43
	.byte	3
	.short	489
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin25
	.long	.Lfunc_end25-.Lfunc_begin25
	.byte	1
	.byte	87
	.long	.Linfo_string259
	.byte	3
	.short	428
	.long	449
	.byte	25
	.long	.Ldebug_loc117
	.long	.Linfo_string485
	.byte	3
	.short	428
	.long	17500
	.byte	37
	.byte	0
	.long	.Linfo_string594
	.byte	3
	.short	428
	.long	449
	.byte	0
	.byte	16
	.quad	.Lfunc_begin26
	.long	.Lfunc_end26-.Lfunc_begin26
	.byte	1
	.byte	87
	.long	.Linfo_string260
	.long	.Linfo_string261
	.byte	5
	.byte	38
	.long	449

	.byte	17
	.long	.Ldebug_loc118
	.long	.Linfo_string150
	.byte	5
	.byte	38
	.long	2917
	.byte	18
	.long	.Ldebug_loc119
	.long	.Linfo_string595
	.byte	5
	.byte	38
	.long	449
	.byte	0
	.byte	16
	.quad	.Lfunc_begin27
	.long	.Lfunc_end27-.Lfunc_begin27
	.byte	1
	.byte	87
	.long	.Linfo_string262
	.long	.Linfo_string263
	.byte	1
	.byte	1
	.long	325

	.byte	17
	.long	.Ldebug_loc120
	.long	.Linfo_string419
	.byte	1
	.byte	1
	.long	388
	.byte	30
	.byte	1
	.byte	84
	.long	.Linfo_string430
	.byte	1
	.byte	1
	.long	325
	.byte	18
	.long	.Ldebug_loc121
	.long	.Linfo_string596
	.byte	1
	.byte	1
	.long	325
	.byte	0
	.byte	16
	.quad	.Lfunc_begin28
	.long	.Lfunc_end28-.Lfunc_begin28
	.byte	1
	.byte	87
	.long	.Linfo_string264
	.long	.Linfo_string265
	.byte	1
	.byte	1
	.long	449

	.byte	17
	.long	.Ldebug_loc122
	.long	.Linfo_string432
	.byte	1
	.byte	1
	.long	388
	.byte	17
	.long	.Ldebug_loc123
	.long	.Linfo_string433
	.byte	1
	.byte	1
	.long	388
	.byte	31
	.byte	0
	.long	.Linfo_string597
	.byte	1
	.byte	1
	.long	449
	.byte	0
	.byte	34
	.quad	.Lfunc_begin29
	.long	.Lfunc_end29-.Lfunc_begin29
	.byte	1
	.byte	87
	.long	.Linfo_string266
	.byte	3
	.short	454
	.long	745
	.byte	25
	.long	.Ldebug_loc124
	.long	.Linfo_string415
	.byte	3
	.short	454
	.long	466
	.byte	25
	.long	.Ldebug_loc125
	.long	.Linfo_string598
	.byte	3
	.short	454
	.long	1521
	.byte	25
	.long	.Ldebug_loc126
	.long	.Linfo_string43
	.byte	3
	.short	454
	.long	745
	.byte	26
	.long	.Ldebug_loc127
	.long	.Linfo_string599
	.byte	3
	.short	454
	.long	745
	.byte	0
	.byte	16
	.quad	.Lfunc_begin30
	.long	.Lfunc_end30-.Lfunc_begin30
	.byte	1
	.byte	87
	.long	.Linfo_string267
	.long	.Linfo_string268
	.byte	6
	.byte	235
	.long	745

	.byte	17
	.long	.Ldebug_loc128
	.long	.Linfo_string150
	.byte	6
	.byte	235
	.long	2917
	.byte	17
	.long	.Ldebug_loc129
	.long	.Linfo_string141
	.byte	6
	.byte	235
	.long	466
	.byte	18
	.long	.Ldebug_loc130
	.long	.Linfo_string600
	.byte	6
	.byte	235
	.long	745
	.byte	0
	.byte	16
	.quad	.Lfunc_begin31
	.long	.Lfunc_end31-.Lfunc_begin31
	.byte	1
	.byte	87
	.long	.Linfo_string269
	.long	.Linfo_string270
	.byte	6
	.byte	20
	.long	745

	.byte	17
	.long	.Ldebug_loc131
	.long	.Linfo_string150
	.byte	6
	.byte	20
	.long	2917
	.byte	17
	.long	.Ldebug_loc132
	.long	.Linfo_string488
	.byte	6
	.byte	20
	.long	466
	.byte	17
	.long	.Ldebug_loc133
	.long	.Linfo_string601
	.byte	6
	.byte	20
	.long	15665
	.byte	18
	.long	.Ldebug_loc135
	.long	.Linfo_string602
	.byte	6
	.byte	20
	.long	745
	.byte	19
	.quad	.Ltmp721
	.long	.Ltmp727-.Ltmp721
	.byte	18
	.long	.Ldebug_loc134
	.long	.Linfo_string43
	.byte	6
	.byte	21
	.long	745
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin32
	.long	.Lfunc_end32-.Lfunc_begin32
	.byte	1
	.byte	87
	.long	.Linfo_string271
	.byte	3
	.short	501
	.long	13830
	.byte	25
	.long	.Ldebug_loc136
	.long	.Linfo_string28
	.byte	3
	.short	501
	.long	466
	.byte	0
	.byte	34
	.quad	.Lfunc_begin33
	.long	.Lfunc_end33-.Lfunc_begin33
	.byte	1
	.byte	87
	.long	.Linfo_string272
	.byte	3
	.short	513
	.long	745
	.byte	25
	.long	.Ldebug_loc137
	.long	.Linfo_string415
	.byte	3
	.short	513
	.long	466
	.byte	25
	.long	.Ldebug_loc138
	.long	.Linfo_string598
	.byte	3
	.short	513
	.long	1521
	.byte	25
	.long	.Ldebug_loc139
	.long	.Linfo_string43
	.byte	3
	.short	513
	.long	745
	.byte	26
	.long	.Ldebug_loc140
	.long	.Linfo_string603
	.byte	3
	.short	513
	.long	745
	.byte	19
	.quad	.Ltmp760
	.long	.Ltmp790-.Ltmp760
	.byte	26
	.long	.Ldebug_loc141
	.long	.Linfo_string158
	.byte	3
	.short	520
	.long	79
	.byte	26
	.long	.Ldebug_loc142
	.long	.Linfo_string604
	.byte	3
	.short	524
	.long	2366
	.byte	0
	.byte	0
	.byte	34
	.quad	.Lfunc_begin34
	.long	.Lfunc_end34-.Lfunc_begin34
	.byte	1
	.byte	87
	.long	.Linfo_string273
	.byte	3
	.short	528
	.long	449
	.byte	25
	.long	.Ldebug_loc143
	.long	.Linfo_string485
	.byte	3
	.short	528
	.long	17500
	.byte	37
	.byte	0
	.long	.Linfo_string605
	.byte	3
	.short	528
	.long	449
	.byte	0
	.byte	16
	.quad	.Lfunc_begin35
	.long	.Lfunc_end35-.Lfunc_begin35
	.byte	1
	.byte	87
	.long	.Linfo_string274
	.long	.Linfo_string275
	.byte	4
	.byte	19
	.long	4688

	.byte	17
	.long	.Ldebug_loc144
	.long	.Linfo_string606
	.byte	4
	.byte	19
	.long	466
	.byte	18
	.long	.Ldebug_loc147
	.long	.Linfo_string609
	.byte	4
	.byte	19
	.long	4688
	.byte	19
	.quad	.Ltmp807
	.long	.Ltmp835-.Ltmp807
	.byte	18
	.long	.Ldebug_loc145
	.long	.Linfo_string607
	.byte	4
	.byte	20
	.long	1129
	.byte	18
	.long	.Ldebug_loc146
	.long	.Linfo_string608
	.byte	4
	.byte	28
	.long	4688
	.byte	23
	.long	.Ldebug_ranges9
	.byte	18
	.long	.Ldebug_loc148
	.long	.Linfo_string410
	.byte	4
	.byte	29
	.long	466
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin36
	.long	.Lfunc_end36-.Lfunc_begin36
	.byte	1
	.byte	87
	.long	.Linfo_string276
	.long	.Linfo_string277
	.byte	4
	.byte	54
	.long	745

	.byte	17
	.long	.Ldebug_loc149
	.long	.Linfo_string187
	.byte	4
	.byte	54
	.long	2917
	.byte	30
	.byte	3
	.byte	145
	.asciz	"\360"
	.long	.Linfo_string610
	.byte	4
	.byte	54
	.long	1129
	.byte	18
	.long	.Ldebug_loc151
	.long	.Linfo_string611
	.byte	4
	.byte	54
	.long	745
	.byte	19
	.quad	.Ltmp837
	.long	.Ltmp851-.Ltmp837
	.byte	18
	.long	.Ldebug_loc150
	.long	.Linfo_string43
	.byte	4
	.byte	55
	.long	745
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin37
	.long	.Lfunc_end37-.Lfunc_begin37
	.byte	1
	.byte	87
	.long	.Linfo_string278
	.long	.Linfo_string279
	.byte	6
	.byte	136
	.long	4865

	.byte	17
	.long	.Ldebug_loc152
	.long	.Linfo_string150
	.byte	6
	.byte	136
	.long	2917
	.byte	17
	.long	.Ldebug_loc153
	.long	.Linfo_string612
	.byte	6
	.byte	136
	.long	466
	.byte	18
	.long	.Ldebug_loc154
	.long	.Linfo_string613
	.byte	6
	.byte	136
	.long	745
	.byte	18
	.long	.Ldebug_loc155
	.long	.Linfo_string614
	.byte	6
	.byte	136
	.long	466
	.byte	19
	.quad	.Ltmp860
	.long	.Ltmp866-.Ltmp860
	.byte	18
	.long	.Ldebug_loc156
	.long	.Linfo_string43
	.byte	6
	.byte	141
	.long	745
	.byte	18
	.long	.Ldebug_loc157
	.long	.Linfo_string615
	.byte	6
	.byte	141
	.long	13986
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin38
	.long	.Lfunc_end38-.Lfunc_begin38
	.byte	1
	.byte	87
	.long	.Linfo_string280
	.long	.Linfo_string281
	.byte	4
	.byte	64
	.long	745

	.byte	17
	.long	.Ldebug_loc158
	.long	.Linfo_string489
	.byte	4
	.byte	64
	.long	2917
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\240%"
	.long	.Linfo_string610
	.byte	4
	.byte	64
	.long	1129
	.byte	18
	.long	.Ldebug_loc159
	.long	.Linfo_string187
	.byte	4
	.byte	64
	.long	15660
	.byte	18
	.long	.Ldebug_loc160
	.long	.Linfo_string616
	.byte	4
	.byte	64
	.long	745
	.byte	19
	.quad	.Ltmp1353
	.long	.Ltmp1977-.Ltmp1353
	.byte	18
	.long	.Ldebug_loc161
	.long	.Linfo_string43
	.byte	4
	.byte	68
	.long	745
	.byte	18
	.long	.Ldebug_loc162
	.long	.Linfo_string617
	.byte	4
	.byte	74
	.long	461
	.byte	18
	.long	.Ldebug_loc163
	.long	.Linfo_string618
	.byte	4
	.byte	83
	.long	461
	.byte	18
	.long	.Ldebug_loc164
	.long	.Linfo_string619
	.byte	4
	.byte	106
	.long	466
	.byte	18
	.long	.Ldebug_loc165
	.long	.Linfo_string567
	.byte	4
	.byte	112
	.long	17527
	.byte	18
	.long	.Ldebug_loc168
	.long	.Linfo_string608
	.byte	4
	.byte	65
	.long	4688
	.byte	23
	.long	.Ldebug_ranges10
	.byte	18
	.long	.Ldebug_loc166
	.long	.Linfo_string615
	.byte	4
	.byte	135
	.long	13986
	.byte	0
	.byte	23
	.long	.Ldebug_ranges13
	.byte	18
	.long	.Ldebug_loc167
	.long	.Linfo_string70
	.byte	4
	.byte	148
	.long	449
	.byte	23
	.long	.Ldebug_ranges12
	.byte	18
	.long	.Ldebug_loc171
	.long	.Linfo_string620
	.byte	4
	.byte	155
	.long	461
	.byte	18
	.long	.Ldebug_loc172
	.long	.Linfo_string621
	.byte	4
	.byte	158
	.long	466
	.byte	18
	.long	.Ldebug_loc173
	.long	.Linfo_string622
	.byte	4
	.byte	170
	.long	461
	.byte	18
	.long	.Ldebug_loc186
	.long	.Linfo_string626
	.byte	4
	.byte	206
	.long	17532
	.byte	18
	.long	.Ldebug_loc195
	.long	.Linfo_string628
	.byte	4
	.byte	241
	.long	17584
	.byte	18
	.long	.Ldebug_loc196
	.long	.Linfo_string631
	.byte	4
	.byte	242
	.long	17685
	.byte	26
	.long	.Ldebug_loc199
	.long	.Linfo_string601
	.byte	4
	.short	273
	.long	15665
	.byte	26
	.long	.Ldebug_loc200
	.long	.Linfo_string625
	.byte	4
	.short	283
	.long	466
	.byte	23
	.long	.Ldebug_ranges11
	.byte	18
	.long	.Ldebug_loc187
	.long	.Linfo_string70
	.byte	4
	.byte	207
	.long	449
	.byte	19
	.quad	.Ltmp1722
	.long	.Ltmp1737-.Ltmp1722
	.byte	18
	.long	.Ldebug_loc188
	.long	.Linfo_string43
	.byte	4
	.byte	208
	.long	745
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp1738
	.long	.Ltmp1762-.Ltmp1738
	.byte	18
	.long	.Ldebug_loc189
	.long	.Linfo_string70
	.byte	4
	.byte	214
	.long	449
	.byte	19
	.quad	.Ltmp1740
	.long	.Ltmp1762-.Ltmp1740
	.byte	18
	.long	.Ldebug_loc190
	.long	.Linfo_string43
	.byte	4
	.byte	215
	.long	745
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp1763
	.long	.Ltmp1787-.Ltmp1763
	.byte	18
	.long	.Ldebug_loc191
	.long	.Linfo_string70
	.byte	4
	.byte	221
	.long	449
	.byte	19
	.quad	.Ltmp1765
	.long	.Ltmp1787-.Ltmp1765
	.byte	18
	.long	.Ldebug_loc192
	.long	.Linfo_string43
	.byte	4
	.byte	222
	.long	745
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp1788
	.long	.Ltmp1812-.Ltmp1788
	.byte	18
	.long	.Ldebug_loc193
	.long	.Linfo_string70
	.byte	4
	.byte	228
	.long	449
	.byte	19
	.quad	.Ltmp1790
	.long	.Ltmp1812-.Ltmp1790
	.byte	18
	.long	.Ldebug_loc194
	.long	.Linfo_string43
	.byte	4
	.byte	229
	.long	745
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp1866
	.long	.Ltmp1889-.Ltmp1866
	.byte	26
	.long	.Ldebug_loc197
	.long	.Linfo_string410
	.byte	4
	.short	263
	.long	502
	.byte	0
	.byte	19
	.quad	.Ltmp1891
	.long	.Ltmp1934-.Ltmp1891
	.byte	26
	.long	.Ldebug_loc198
	.long	.Linfo_string410
	.byte	4
	.short	274
	.long	17636
	.byte	0
	.byte	0
	.byte	0
	.byte	23
	.long	.Ldebug_ranges16
	.byte	26
	.long	.Ldebug_loc169
	.long	.Linfo_string70
	.byte	4
	.short	306
	.long	449
	.byte	23
	.long	.Ldebug_ranges15
	.byte	26
	.long	.Ldebug_loc177
	.long	.Linfo_string622
	.byte	4
	.short	330
	.long	466
	.byte	26
	.long	.Ldebug_loc178
	.long	.Linfo_string439
	.byte	4
	.short	329
	.long	466
	.byte	26
	.long	.Ldebug_loc179
	.long	.Linfo_string623
	.byte	4
	.short	337
	.long	466
	.byte	26
	.long	.Ldebug_loc180
	.long	.Linfo_string621
	.byte	4
	.short	352
	.long	466
	.byte	26
	.long	.Ldebug_loc181
	.long	.Linfo_string624
	.byte	4
	.short	358
	.long	466
	.byte	26
	.long	.Ldebug_loc182
	.long	.Linfo_string620
	.byte	4
	.short	313
	.long	466
	.byte	26
	.long	.Ldebug_loc185
	.long	.Linfo_string625
	.byte	4
	.short	391
	.long	466
	.byte	23
	.long	.Ldebug_ranges14
	.byte	26
	.long	.Ldebug_loc170
	.long	.Linfo_string70
	.byte	4
	.short	316
	.long	449
	.byte	0
	.byte	19
	.quad	.Ltmp1561
	.long	.Ltmp1579-.Ltmp1561
	.byte	26
	.long	.Ldebug_loc174
	.long	.Linfo_string70
	.byte	4
	.short	319
	.long	449
	.byte	0
	.byte	19
	.quad	.Ltmp1580
	.long	.Ltmp1598-.Ltmp1580
	.byte	26
	.long	.Ldebug_loc175
	.long	.Linfo_string70
	.byte	4
	.short	322
	.long	449
	.byte	0
	.byte	19
	.quad	.Ltmp1599
	.long	.Ltmp1617-.Ltmp1599
	.byte	26
	.long	.Ldebug_loc176
	.long	.Linfo_string70
	.byte	4
	.short	325
	.long	449
	.byte	0
	.byte	19
	.quad	.Ltmp1656
	.long	.Ltmp1690-.Ltmp1656
	.byte	26
	.long	.Ldebug_loc183
	.long	.Linfo_string173
	.byte	4
	.short	365
	.long	466
	.byte	19
	.quad	.Ltmp1660
	.long	.Ltmp1689-.Ltmp1660
	.byte	26
	.long	.Ldebug_loc184
	.long	.Linfo_string43
	.byte	4
	.short	366
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	12
	.long	.Linfo_string205
	.byte	5
	.byte	55
	.long	745
	.byte	1
	.byte	13
	.long	.Linfo_string150
	.byte	5
	.byte	55
	.long	2917
	.byte	14
	.long	.Linfo_string206
	.byte	5
	.byte	55
	.long	745
	.byte	15
	.byte	14
	.long	.Linfo_string43
	.byte	5
	.byte	60
	.long	745
	.byte	15
	.byte	14
	.long	.Linfo_string43
	.byte	5
	.byte	56
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	38
	.quad	.Lfunc_begin39
	.long	.Lfunc_end39-.Lfunc_begin39
	.byte	1
	.byte	87
	.long	.Linfo_string282
	.byte	5
	.byte	46
	.long	745
	.byte	17
	.long	.Ldebug_loc201
	.long	.Linfo_string150
	.byte	5
	.byte	46
	.long	2917
	.byte	18
	.long	.Ldebug_loc204
	.long	.Linfo_string632
	.byte	5
	.byte	46
	.long	745
	.byte	19
	.quad	.Ltmp1997
	.long	.Ltmp2020-.Ltmp1997
	.byte	18
	.long	.Ldebug_loc205
	.long	.Linfo_string43
	.byte	5
	.byte	47
	.long	745
	.byte	20
	.long	8719
	.long	.Ldebug_ranges17
	.byte	5
	.byte	47
	.byte	21
	.long	.Ldebug_loc202
	.long	8731
	.byte	22
	.long	.Ldebug_loc207
	.long	8742
	.byte	23
	.long	.Ldebug_ranges18
	.byte	22
	.long	.Ldebug_loc206
	.long	8754
	.byte	19
	.quad	.Ltmp1997
	.long	.Ltmp1999-.Ltmp1997
	.byte	22
	.long	.Ldebug_loc203
	.long	8766
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin40
	.long	.Lfunc_end40-.Lfunc_begin40
	.byte	1
	.byte	87
	.long	.Linfo_string283
	.long	.Linfo_string284
	.byte	6
	.byte	113
	.long	4865

	.byte	17
	.long	.Ldebug_loc208
	.long	.Linfo_string150
	.byte	6
	.byte	113
	.long	2917
	.byte	17
	.long	.Ldebug_loc209
	.long	.Linfo_string415
	.byte	6
	.byte	113
	.long	466
	.byte	18
	.long	.Ldebug_loc211
	.long	.Linfo_string633
	.byte	6
	.byte	113
	.long	745
	.byte	18
	.long	.Ldebug_loc212
	.long	.Linfo_string634
	.byte	6
	.byte	113
	.long	466
	.byte	19
	.quad	.Ltmp2021
	.long	.Ltmp2042-.Ltmp2021
	.byte	18
	.long	.Ldebug_loc213
	.long	.Linfo_string488
	.byte	6
	.byte	115
	.long	466
	.byte	23
	.long	.Ldebug_ranges19
	.byte	18
	.long	.Ldebug_loc210
	.long	.Linfo_string43
	.byte	6
	.byte	117
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	38
	.quad	.Lfunc_begin41
	.long	.Lfunc_end41-.Lfunc_begin41
	.byte	1
	.byte	87
	.long	.Linfo_string285
	.byte	4
	.byte	79
	.long	393
	.byte	17
	.long	.Ldebug_loc214
	.long	.Linfo_string485
	.byte	4
	.byte	79
	.long	17690
	.byte	0
	.byte	16
	.quad	.Lfunc_begin42
	.long	.Lfunc_end42-.Lfunc_begin42
	.byte	1
	.byte	87
	.long	.Linfo_string286
	.long	.Linfo_string287
	.byte	5
	.byte	83
	.long	4865

	.byte	17
	.long	.Ldebug_loc215
	.long	.Linfo_string150
	.byte	5
	.byte	83
	.long	2917
	.byte	18
	.long	.Ldebug_loc218
	.long	.Linfo_string638
	.byte	5
	.byte	83
	.long	466
	.byte	18
	.long	.Ldebug_loc219
	.long	.Linfo_string639
	.byte	5
	.byte	83
	.long	745
	.byte	19
	.quad	.Ltmp2048
	.long	.Ltmp2073-.Ltmp2048
	.byte	18
	.long	.Ldebug_loc216
	.long	.Linfo_string637
	.byte	5
	.byte	84
	.long	1129
	.byte	18
	.long	.Ldebug_loc217
	.long	.Linfo_string412
	.byte	5
	.byte	85
	.long	466
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin43
	.long	.Lfunc_end43-.Lfunc_begin43
	.byte	1
	.byte	87
	.long	.Linfo_string288
	.long	.Linfo_string289
	.byte	6
	.byte	193
	.long	13866

	.byte	17
	.long	.Ldebug_loc220
	.long	.Linfo_string150
	.byte	6
	.byte	193
	.long	2917
	.byte	17
	.long	.Ldebug_loc221
	.long	.Linfo_string640
	.byte	6
	.byte	193
	.long	466
	.byte	18
	.long	.Ldebug_loc222
	.long	.Linfo_string641
	.byte	6
	.byte	193
	.long	836
	.byte	0
	.byte	16
	.quad	.Lfunc_begin44
	.long	.Lfunc_end44-.Lfunc_begin44
	.byte	1
	.byte	87
	.long	.Linfo_string291
	.long	.Linfo_string292
	.byte	5
	.byte	126
	.long	13866

	.byte	17
	.long	.Ldebug_loc223
	.long	.Linfo_string150
	.byte	5
	.byte	126
	.long	2917
	.byte	18
	.long	.Ldebug_loc226
	.long	.Linfo_string642
	.byte	5
	.byte	126
	.long	745
	.byte	19
	.quad	.Ltmp2088
	.long	.Ltmp2097-.Ltmp2088
	.byte	18
	.long	.Ldebug_loc224
	.long	.Linfo_string601
	.byte	5
	.byte	127
	.long	15665
	.byte	18
	.long	.Ldebug_loc225
	.long	.Linfo_string43
	.byte	5
	.byte	128
	.long	745
	.byte	0
	.byte	0
	.byte	24
	.quad	.Lfunc_begin45
	.long	.Lfunc_end45-.Lfunc_begin45
	.byte	1
	.byte	87
	.long	.Linfo_string293
	.long	.Linfo_string294
	.byte	6
	.short	305
	.long	4865

	.byte	25
	.long	.Ldebug_loc227
	.long	.Linfo_string150
	.byte	6
	.short	305
	.long	2917
	.byte	0
	.byte	16
	.quad	.Lfunc_begin46
	.long	.Lfunc_end46-.Lfunc_begin46
	.byte	1
	.byte	87
	.long	.Linfo_string295
	.long	.Linfo_string296
	.byte	5
	.byte	197
	.long	13900

	.byte	17
	.long	.Ldebug_loc228
	.long	.Linfo_string150
	.byte	5
	.byte	197
	.long	2917
	.byte	17
	.long	.Ldebug_loc229
	.long	.Linfo_string567
	.byte	5
	.byte	197
	.long	17527
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\200\003"
	.long	.Linfo_string643
	.byte	5
	.byte	197
	.long	1129
	.byte	17
	.long	.Ldebug_loc230
	.long	.Linfo_string644
	.byte	5
	.byte	197
	.long	466
	.byte	17
	.long	.Ldebug_loc231
	.long	.Linfo_string645
	.byte	5
	.byte	197
	.long	17729
	.byte	18
	.long	.Ldebug_loc235
	.long	.Linfo_string647
	.byte	5
	.byte	197
	.long	745
	.byte	18
	.long	.Ldebug_loc238
	.long	.Linfo_string649
	.byte	5
	.byte	197
	.long	13934
	.byte	19
	.quad	.Ltmp2109
	.long	.Ltmp2151-.Ltmp2109
	.byte	18
	.long	.Ldebug_loc232
	.long	.Linfo_string438
	.byte	5
	.byte	198
	.long	4688
	.byte	18
	.long	.Ldebug_loc236
	.long	.Linfo_string648
	.byte	5
	.byte	209
	.long	13934
	.byte	23
	.long	.Ldebug_ranges21
	.byte	18
	.long	.Ldebug_loc233
	.long	.Linfo_string410
	.byte	5
	.byte	199
	.long	466
	.byte	23
	.long	.Ldebug_ranges20
	.byte	18
	.long	.Ldebug_loc234
	.long	.Linfo_string43
	.byte	5
	.byte	204
	.long	745
	.byte	0
	.byte	0
	.byte	23
	.long	.Ldebug_ranges22
	.byte	18
	.long	.Ldebug_loc237
	.long	.Linfo_string410
	.byte	5
	.byte	210
	.long	13986
	.byte	0
	.byte	0
	.byte	0
	.byte	12
	.long	.Linfo_string207
	.byte	7
	.byte	23
	.long	745
	.byte	1
	.byte	13
	.long	.Linfo_string150
	.byte	7
	.byte	23
	.long	2917
	.byte	14
	.long	.Linfo_string208
	.byte	7
	.byte	23
	.long	745
	.byte	15
	.byte	14
	.long	.Linfo_string43
	.byte	7
	.byte	24
	.long	745
	.byte	0
	.byte	0
	.byte	38
	.quad	.Lfunc_begin47
	.long	.Lfunc_end47-.Lfunc_begin47
	.byte	1
	.byte	87
	.long	.Linfo_string341
	.byte	7
	.byte	13
	.long	745
	.byte	17
	.long	.Ldebug_loc239
	.long	.Linfo_string150
	.byte	7
	.byte	13
	.long	2917
	.byte	18
	.long	.Ldebug_loc243
	.long	.Linfo_string650
	.byte	7
	.byte	13
	.long	745
	.byte	19
	.quad	.Ltmp2154
	.long	.Ltmp2166-.Ltmp2154
	.byte	18
	.long	.Ldebug_loc244
	.long	.Linfo_string43
	.byte	7
	.byte	14
	.long	745
	.byte	39
	.long	9701
	.quad	.Ltmp2154
	.long	.Ltmp2159-.Ltmp2154
	.byte	7
	.byte	14
	.byte	21
	.long	.Ldebug_loc240
	.long	9713
	.byte	22
	.long	.Ldebug_loc242
	.long	9724
	.byte	19
	.quad	.Ltmp2154
	.long	.Ltmp2159-.Ltmp2154
	.byte	22
	.long	.Ldebug_loc241
	.long	9736
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin48
	.long	.Lfunc_end48-.Lfunc_begin48
	.byte	1
	.byte	87
	.long	.Linfo_string342
	.long	.Linfo_string343
	.byte	6
	.byte	160
	.long	745

	.byte	17
	.long	.Ldebug_loc245
	.long	.Linfo_string150
	.byte	6
	.byte	160
	.long	2917
	.byte	17
	.long	.Ldebug_loc246
	.long	.Linfo_string640
	.byte	6
	.byte	160
	.long	466
	.byte	17
	.long	.Ldebug_loc247
	.long	.Linfo_string484
	.byte	6
	.byte	160
	.long	15945
	.byte	19
	.quad	.Ltmp2202
	.long	.Ltmp2236-.Ltmp2202
	.byte	18
	.long	.Ldebug_loc248
	.long	.Linfo_string160
	.byte	6
	.byte	165
	.long	449
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin49
	.long	.Lfunc_end49-.Lfunc_begin49
	.byte	1
	.byte	87
	.long	.Linfo_string344
	.long	.Linfo_string345
	.byte	7
	.byte	65
	.long	13794

	.byte	17
	.long	.Ldebug_loc249
	.long	.Linfo_string150
	.byte	7
	.byte	65
	.long	2917
	.byte	18
	.long	.Ldebug_loc251
	.long	.Linfo_string651
	.byte	7
	.byte	65
	.long	745
	.byte	18
	.long	.Ldebug_loc252
	.long	.Linfo_string652
	.byte	7
	.byte	65
	.long	1129
	.byte	19
	.quad	.Ltmp2248
	.long	.Ltmp2258-.Ltmp2248
	.byte	18
	.long	.Ldebug_loc250
	.long	.Linfo_string43
	.byte	7
	.byte	66
	.long	745
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin50
	.long	.Lfunc_end50-.Lfunc_begin50
	.byte	1
	.byte	87
	.long	.Linfo_string346
	.long	.Linfo_string347
	.byte	7
	.byte	82
	.long	13794

	.byte	17
	.long	.Ldebug_loc253
	.long	.Linfo_string150
	.byte	7
	.byte	82
	.long	2917
	.byte	18
	.long	.Ldebug_loc255
	.long	.Linfo_string653
	.byte	7
	.byte	82
	.long	745
	.byte	18
	.long	.Ldebug_loc256
	.long	.Linfo_string654
	.byte	7
	.byte	82
	.long	1129
	.byte	19
	.quad	.Ltmp2259
	.long	.Ltmp2269-.Ltmp2259
	.byte	18
	.long	.Ldebug_loc254
	.long	.Linfo_string43
	.byte	7
	.byte	83
	.long	745
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin51
	.long	.Lfunc_end51-.Lfunc_begin51
	.byte	1
	.byte	87
	.long	.Linfo_string348
	.long	.Linfo_string349
	.byte	7
	.byte	98
	.long	13794

	.byte	17
	.long	.Ldebug_loc257
	.long	.Linfo_string150
	.byte	7
	.byte	98
	.long	2917
	.byte	18
	.long	.Ldebug_loc259
	.long	.Linfo_string655
	.byte	7
	.byte	98
	.long	745
	.byte	18
	.long	.Ldebug_loc260
	.long	.Linfo_string656
	.byte	7
	.byte	98
	.long	1129
	.byte	19
	.quad	.Ltmp2270
	.long	.Ltmp2280-.Ltmp2270
	.byte	18
	.long	.Ldebug_loc258
	.long	.Linfo_string43
	.byte	7
	.byte	99
	.long	745
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin52
	.long	.Lfunc_end52-.Lfunc_begin52
	.byte	1
	.byte	87
	.long	.Linfo_string350
	.long	.Linfo_string351
	.byte	7
	.byte	114
	.long	13794

	.byte	17
	.long	.Ldebug_loc261
	.long	.Linfo_string150
	.byte	7
	.byte	114
	.long	2917
	.byte	18
	.long	.Ldebug_loc263
	.long	.Linfo_string657
	.byte	7
	.byte	114
	.long	745
	.byte	18
	.long	.Ldebug_loc264
	.long	.Linfo_string658
	.byte	7
	.byte	114
	.long	1129
	.byte	19
	.quad	.Ltmp2281
	.long	.Ltmp2291-.Ltmp2281
	.byte	18
	.long	.Ldebug_loc262
	.long	.Linfo_string43
	.byte	7
	.byte	115
	.long	745
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin53
	.long	.Lfunc_end53-.Lfunc_begin53
	.byte	1
	.byte	87
	.long	.Linfo_string352
	.long	.Linfo_string353
	.byte	1
	.byte	1
	.long	325

	.byte	17
	.long	.Ldebug_loc265
	.long	.Linfo_string419
	.byte	1
	.byte	1
	.long	388
	.byte	30
	.byte	1
	.byte	84
	.long	.Linfo_string430
	.byte	1
	.byte	1
	.long	325
	.byte	18
	.long	.Ldebug_loc266
	.long	.Linfo_string659
	.byte	1
	.byte	1
	.long	325
	.byte	0
	.byte	16
	.quad	.Lfunc_begin54
	.long	.Lfunc_end54-.Lfunc_begin54
	.byte	1
	.byte	87
	.long	.Linfo_string354
	.long	.Linfo_string355
	.byte	1
	.byte	1
	.long	449

	.byte	17
	.long	.Ldebug_loc267
	.long	.Linfo_string432
	.byte	1
	.byte	1
	.long	388
	.byte	17
	.long	.Ldebug_loc268
	.long	.Linfo_string433
	.byte	1
	.byte	1
	.long	388
	.byte	31
	.byte	0
	.long	.Linfo_string660
	.byte	1
	.byte	1
	.long	449
	.byte	0
	.byte	38
	.quad	.Lfunc_begin55
	.long	.Lfunc_end55-.Lfunc_begin55
	.byte	1
	.byte	87
	.long	.Linfo_string356
	.byte	4
	.byte	244
	.long	393
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\340\004"
	.long	.Linfo_string428
	.byte	4
	.byte	244
	.long	1129
	.byte	19
	.quad	.Ltmp2311
	.long	.Ltmp2334-.Ltmp2311
	.byte	18
	.long	.Ldebug_loc269
	.long	.Linfo_string173
	.byte	4
	.byte	245
	.long	466
	.byte	18
	.long	.Ldebug_loc270
	.long	.Linfo_string415
	.byte	4
	.byte	247
	.long	466
	.byte	18
	.long	.Ldebug_loc271
	.long	.Linfo_string43
	.byte	4
	.byte	250
	.long	745
	.byte	0
	.byte	0
	.byte	38
	.quad	.Lfunc_begin56
	.long	.Lfunc_end56-.Lfunc_begin56
	.byte	1
	.byte	87
	.long	.Linfo_string357
	.byte	4
	.byte	244
	.long	393
	.byte	17
	.long	.Ldebug_loc272
	.long	.Linfo_string485
	.byte	4
	.byte	244
	.long	17736
	.byte	0
	.byte	16
	.quad	.Lfunc_begin57
	.long	.Lfunc_end57-.Lfunc_begin57
	.byte	1
	.byte	87
	.long	.Linfo_string358
	.long	.Linfo_string359
	.byte	7
	.byte	30
	.long	466

	.byte	17
	.long	.Ldebug_loc273
	.long	.Linfo_string182
	.byte	7
	.byte	30
	.long	466
	.byte	18
	.long	.Ldebug_loc274
	.long	.Linfo_string662
	.byte	7
	.byte	30
	.long	466
	.byte	0
	.byte	16
	.quad	.Lfunc_begin58
	.long	.Lfunc_end58-.Lfunc_begin58
	.byte	1
	.byte	87
	.long	.Linfo_string360
	.long	.Linfo_string361
	.byte	6
	.byte	203
	.long	745

	.byte	17
	.long	.Ldebug_loc275
	.long	.Linfo_string150
	.byte	6
	.byte	203
	.long	2917
	.byte	17
	.long	.Ldebug_loc276
	.long	.Linfo_string663
	.byte	6
	.byte	203
	.long	466
	.byte	17
	.long	.Ldebug_loc277
	.long	.Linfo_string482
	.byte	6
	.byte	203
	.long	466
	.byte	18
	.long	.Ldebug_loc278
	.long	.Linfo_string664
	.byte	6
	.byte	203
	.long	745
	.byte	19
	.quad	.Ltmp2386
	.long	.Ltmp2422-.Ltmp2386
	.byte	18
	.long	.Ldebug_loc279
	.long	.Linfo_string160
	.byte	6
	.byte	208
	.long	449
	.byte	19
	.quad	.Ltmp2413
	.long	.Ltmp2422-.Ltmp2413
	.byte	18
	.long	.Ldebug_loc280
	.long	.Linfo_string43
	.byte	6
	.byte	215
	.long	745
	.byte	18
	.long	.Ldebug_loc281
	.long	.Linfo_string116
	.byte	6
	.byte	215
	.long	2366
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin59
	.long	.Lfunc_end59-.Lfunc_begin59
	.byte	1
	.byte	87
	.long	.Linfo_string362
	.long	.Linfo_string363
	.byte	5
	.byte	113
	.long	466

	.byte	17
	.long	.Ldebug_loc282
	.long	.Linfo_string150
	.byte	5
	.byte	113
	.long	2917
	.byte	17
	.long	.Ldebug_loc283
	.long	.Linfo_string28
	.byte	5
	.byte	113
	.long	466
	.byte	18
	.long	.Ldebug_loc285
	.long	.Linfo_string666
	.byte	5
	.byte	113
	.long	466
	.byte	19
	.quad	.Ltmp2436
	.long	.Ltmp2445-.Ltmp2436
	.byte	18
	.long	.Ldebug_loc286
	.long	.Linfo_string601
	.byte	5
	.byte	118
	.long	15665
	.byte	18
	.long	.Ldebug_loc287
	.long	.Linfo_string43
	.byte	5
	.byte	119
	.long	745
	.byte	23
	.long	.Ldebug_ranges23
	.byte	18
	.long	.Ldebug_loc284
	.long	.Linfo_string665
	.byte	5
	.byte	114
	.long	466
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin60
	.long	.Lfunc_end60-.Lfunc_begin60
	.byte	1
	.byte	87
	.long	.Linfo_string364
	.long	.Linfo_string365
	.byte	5
	.byte	135
	.long	745

	.byte	17
	.long	.Ldebug_loc288
	.long	.Linfo_string150
	.byte	5
	.byte	135
	.long	2917
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\360\n"
	.long	.Linfo_string668
	.byte	5
	.byte	135
	.long	1129
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\210\013"
	.long	.Linfo_string428
	.byte	5
	.byte	135
	.long	1129
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\240\013"
	.long	.Linfo_string667
	.byte	5
	.byte	135
	.long	1129
	.byte	17
	.long	.Ldebug_loc289
	.long	.Linfo_string618
	.byte	5
	.byte	135
	.long	466
	.byte	17
	.long	.Ldebug_loc290
	.long	.Linfo_string488
	.byte	5
	.byte	135
	.long	466
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\270\013"
	.long	.Linfo_string610
	.byte	5
	.byte	135
	.long	1129
	.byte	18
	.long	.Ldebug_loc294
	.long	.Linfo_string669
	.byte	5
	.byte	135
	.long	745
	.byte	19
	.quad	.Ltmp2448
	.long	.Ltmp2606-.Ltmp2448
	.byte	18
	.long	.Ldebug_loc291
	.long	.Linfo_string43
	.byte	5
	.byte	136
	.long	745
	.byte	18
	.long	.Ldebug_loc292
	.long	.Linfo_string29
	.byte	5
	.byte	136
	.long	466
	.byte	18
	.long	.Ldebug_loc293
	.long	.Linfo_string601
	.byte	5
	.byte	145
	.long	15665
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin61
	.long	.Lfunc_end61-.Lfunc_begin61
	.byte	1
	.byte	87
	.long	.Linfo_string366
	.long	.Linfo_string367
	.byte	5
	.byte	72
	.long	466

	.byte	30
	.byte	3
	.byte	145
	.ascii	"\200\001"
	.long	.Linfo_string428
	.byte	5
	.byte	72
	.long	1129
	.byte	17
	.long	.Ldebug_loc295
	.long	.Linfo_string419
	.byte	5
	.byte	72
	.long	466
	.byte	18
	.long	.Ldebug_loc298
	.long	.Linfo_string671
	.byte	5
	.byte	72
	.long	466
	.byte	19
	.quad	.Ltmp2609
	.long	.Ltmp2625-.Ltmp2609
	.byte	18
	.long	.Ldebug_loc296
	.long	.Linfo_string156
	.byte	5
	.byte	73
	.long	466
	.byte	23
	.long	.Ldebug_ranges24
	.byte	18
	.long	.Ldebug_loc297
	.long	.Linfo_string670
	.byte	5
	.byte	74
	.long	466
	.byte	0
	.byte	0
	.byte	0
	.byte	40
	.long	.Linfo_string209
	.long	.Linfo_string210
	.byte	5
	.byte	42
	.long	449

	.byte	1
	.byte	13
	.long	.Linfo_string150
	.byte	5
	.byte	42
	.long	2917
	.byte	14
	.long	.Linfo_string211
	.byte	5
	.byte	42
	.long	449
	.byte	0
	.byte	16
	.quad	.Lfunc_begin62
	.long	.Lfunc_end62-.Lfunc_begin62
	.byte	1
	.byte	87
	.long	.Linfo_string368
	.long	.Linfo_string369
	.byte	6
	.byte	25
	.long	13866

	.byte	17
	.long	.Ldebug_loc299
	.long	.Linfo_string150
	.byte	6
	.byte	25
	.long	2917
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\260\006"
	.long	.Linfo_string672
	.byte	6
	.byte	25
	.long	836
	.byte	17
	.long	.Ldebug_loc300
	.long	.Linfo_string488
	.byte	6
	.byte	25
	.long	466
	.byte	17
	.long	.Ldebug_loc301
	.long	.Linfo_string601
	.byte	6
	.byte	25
	.long	15665
	.byte	18
	.long	.Ldebug_loc306
	.long	.Linfo_string682
	.byte	6
	.byte	25
	.long	745
	.byte	19
	.quad	.Ltmp2628
	.long	.Ltmp2698-.Ltmp2628
	.byte	18
	.long	.Ldebug_loc304
	.long	.Linfo_string674
	.byte	6
	.byte	38
	.long	17819
	.byte	18
	.long	.Ldebug_loc305
	.long	.Linfo_string681
	.byte	6
	.byte	39
	.long	17819
	.byte	19
	.quad	.Ltmp2629
	.long	.Ltmp2640-.Ltmp2629
	.byte	18
	.long	.Ldebug_loc303
	.long	.Linfo_string673
	.byte	6
	.byte	27
	.long	466
	.byte	0
	.byte	39
	.long	11398
	.quad	.Ltmp2665
	.long	.Ltmp2666-.Ltmp2665
	.byte	6
	.byte	53
	.byte	21
	.long	.Ldebug_loc302
	.long	11414
	.byte	41
	.byte	0
	.long	11425
	.byte	0
	.byte	19
	.quad	.Ltmp2673
	.long	.Ltmp2680-.Ltmp2673
	.byte	18
	.long	.Ldebug_loc307
	.long	.Linfo_string43
	.byte	6
	.byte	55
	.long	745
	.byte	0
	.byte	19
	.quad	.Ltmp2681
	.long	.Ltmp2685-.Ltmp2681
	.byte	18
	.long	.Ldebug_loc308
	.long	.Linfo_string683
	.byte	6
	.byte	66
	.long	1749
	.byte	18
	.long	.Ldebug_loc309
	.long	.Linfo_string43
	.byte	6
	.byte	66
	.long	745
	.byte	0
	.byte	19
	.quad	.Ltmp2685
	.long	.Ltmp2690-.Ltmp2685
	.byte	18
	.long	.Ldebug_loc310
	.long	.Linfo_string684
	.byte	6
	.byte	69
	.long	1749
	.byte	18
	.long	.Ldebug_loc311
	.long	.Linfo_string43
	.byte	6
	.byte	69
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin63
	.long	.Lfunc_end63-.Lfunc_begin63
	.byte	1
	.byte	87
	.long	.Linfo_string370
	.long	.Linfo_string371
	.byte	6
	.byte	78
	.long	1129

	.byte	30
	.byte	3
	.byte	145
	.ascii	"\300\005"
	.long	.Linfo_string670
	.byte	6
	.byte	78
	.long	1129
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\330\005"
	.long	.Linfo_string685
	.byte	6
	.byte	78
	.long	1129
	.byte	19
	.quad	.Ltmp2699
	.long	.Ltmp2770-.Ltmp2699
	.byte	18
	.long	.Ldebug_loc312
	.long	.Linfo_string686
	.byte	6
	.byte	80
	.long	466
	.byte	18
	.long	.Ldebug_loc313
	.long	.Linfo_string626
	.byte	6
	.byte	82
	.long	4688
	.byte	23
	.long	.Ldebug_ranges25
	.byte	18
	.long	.Ldebug_loc314
	.long	.Linfo_string687
	.byte	6
	.byte	84
	.long	1129
	.byte	0
	.byte	23
	.long	.Ldebug_ranges27
	.byte	18
	.long	.Ldebug_loc315
	.long	.Linfo_string688
	.byte	6
	.byte	96
	.long	466
	.byte	23
	.long	.Ldebug_ranges26
	.byte	18
	.long	.Ldebug_loc316
	.long	.Linfo_string687
	.byte	6
	.byte	97
	.long	1129
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin64
	.long	.Lfunc_end64-.Lfunc_begin64
	.byte	1
	.byte	87
	.long	.Linfo_string372
	.long	.Linfo_string373
	.byte	6
	.byte	150
	.long	745

	.byte	17
	.long	.Ldebug_loc317
	.long	.Linfo_string150
	.byte	6
	.byte	150
	.long	2917
	.byte	17
	.long	.Ldebug_loc318
	.long	.Linfo_string415
	.byte	6
	.byte	150
	.long	466
	.byte	18
	.long	.Ldebug_loc319
	.long	.Linfo_string689
	.byte	6
	.byte	150
	.long	745
	.byte	0
	.byte	42
	.quad	.Lfunc_begin65
	.long	.Lfunc_end65-.Lfunc_begin65
	.byte	1
	.byte	87
	.long	.Linfo_string374
	.byte	6
	.byte	167
	.long	393
	.byte	38
	.quad	.Lfunc_begin66
	.long	.Lfunc_end66-.Lfunc_begin66
	.byte	1
	.byte	87
	.long	.Linfo_string375
	.byte	6
	.byte	167
	.long	393
	.byte	17
	.long	.Ldebug_loc320
	.long	.Linfo_string485
	.byte	6
	.byte	167
	.long	15595
	.byte	0
	.byte	42
	.quad	.Lfunc_begin67
	.long	.Lfunc_end67-.Lfunc_begin67
	.byte	1
	.byte	87
	.long	.Linfo_string376
	.byte	6
	.byte	180
	.long	393
	.byte	38
	.quad	.Lfunc_begin68
	.long	.Lfunc_end68-.Lfunc_begin68
	.byte	1
	.byte	87
	.long	.Linfo_string377
	.byte	6
	.byte	180
	.long	393
	.byte	17
	.long	.Ldebug_loc321
	.long	.Linfo_string485
	.byte	6
	.byte	180
	.long	15595
	.byte	0
	.byte	42
	.quad	.Lfunc_begin69
	.long	.Lfunc_end69-.Lfunc_begin69
	.byte	1
	.byte	87
	.long	.Linfo_string378
	.byte	6
	.byte	210
	.long	393
	.byte	38
	.quad	.Lfunc_begin70
	.long	.Lfunc_end70-.Lfunc_begin70
	.byte	1
	.byte	87
	.long	.Linfo_string379
	.byte	6
	.byte	210
	.long	393
	.byte	17
	.long	.Ldebug_loc322
	.long	.Linfo_string485
	.byte	6
	.byte	210
	.long	15595
	.byte	0
	.byte	38
	.quad	.Lfunc_begin71
	.long	.Lfunc_end71-.Lfunc_begin71
	.byte	1
	.byte	87
	.long	.Linfo_string380
	.byte	6
	.byte	219
	.long	449
	.byte	17
	.long	.Ldebug_loc323
	.long	.Linfo_string485
	.byte	6
	.byte	219
	.long	17500
	.byte	31
	.byte	0
	.long	.Linfo_string690
	.byte	6
	.byte	219
	.long	449
	.byte	0
	.byte	34
	.quad	.Lfunc_begin72
	.long	.Lfunc_end72-.Lfunc_begin72
	.byte	1
	.byte	87
	.long	.Linfo_string381
	.byte	6
	.short	274
	.long	449
	.byte	25
	.long	.Ldebug_loc324
	.long	.Linfo_string485
	.byte	6
	.short	274
	.long	17500
	.byte	37
	.byte	0
	.long	.Linfo_string691
	.byte	6
	.short	274
	.long	449
	.byte	0
	.byte	16
	.quad	.Lfunc_begin73
	.long	.Lfunc_end73-.Lfunc_begin73
	.byte	1
	.byte	87
	.long	.Linfo_string382
	.long	.Linfo_string383
	.byte	8
	.byte	14
	.long	745

	.byte	17
	.long	.Ldebug_loc325
	.long	.Linfo_string150
	.byte	8
	.byte	14
	.long	2917
	.byte	18
	.long	.Ldebug_loc326
	.long	.Linfo_string692
	.byte	8
	.byte	14
	.long	745
	.byte	19
	.quad	.Ltmp2908
	.long	.Ltmp3064-.Ltmp2908
	.byte	18
	.long	.Ldebug_loc327
	.long	.Linfo_string43
	.byte	8
	.byte	18
	.long	745
	.byte	18
	.long	.Ldebug_loc328
	.long	.Linfo_string618
	.byte	8
	.byte	27
	.long	466
	.byte	18
	.long	.Ldebug_loc329
	.long	.Linfo_string488
	.byte	8
	.byte	43
	.long	466
	.byte	18
	.long	.Ldebug_loc331
	.long	.Linfo_string608
	.byte	8
	.byte	24
	.long	4688
	.byte	18
	.long	.Ldebug_loc342
	.long	.Linfo_string693
	.byte	8
	.byte	150
	.long	466
	.byte	23
	.long	.Ldebug_ranges31
	.byte	18
	.long	.Ldebug_loc330
	.long	.Linfo_string70
	.byte	8
	.byte	50
	.long	449
	.byte	23
	.long	.Ldebug_ranges28
	.byte	18
	.long	.Ldebug_loc333
	.long	.Linfo_string70
	.byte	8
	.byte	59
	.long	449
	.byte	0
	.byte	23
	.long	.Ldebug_ranges29
	.byte	18
	.long	.Ldebug_loc334
	.long	.Linfo_string70
	.byte	8
	.byte	68
	.long	449
	.byte	0
	.byte	23
	.long	.Ldebug_ranges30
	.byte	18
	.long	.Ldebug_loc335
	.long	.Linfo_string70
	.byte	8
	.byte	77
	.long	449
	.byte	0
	.byte	19
	.quad	.Ltmp2968
	.long	.Ltmp2977-.Ltmp2968
	.byte	18
	.long	.Ldebug_loc336
	.long	.Linfo_string70
	.byte	8
	.byte	86
	.long	449
	.byte	0
	.byte	0
	.byte	23
	.long	.Ldebug_ranges35
	.byte	18
	.long	.Ldebug_loc332
	.long	.Linfo_string70
	.byte	8
	.byte	97
	.long	449
	.byte	23
	.long	.Ldebug_ranges32
	.byte	18
	.long	.Ldebug_loc337
	.long	.Linfo_string70
	.byte	8
	.byte	104
	.long	449
	.byte	19
	.quad	.Ltmp3027
	.long	.Ltmp3034-.Ltmp3027
	.byte	18
	.long	.Ldebug_loc344
	.long	.Linfo_string43
	.byte	8
	.byte	105
	.long	745
	.byte	0
	.byte	0
	.byte	23
	.long	.Ldebug_ranges33
	.byte	18
	.long	.Ldebug_loc338
	.long	.Linfo_string70
	.byte	8
	.byte	114
	.long	449
	.byte	19
	.quad	.Ltmp3046
	.long	.Ltmp3053-.Ltmp3046
	.byte	18
	.long	.Ldebug_loc345
	.long	.Linfo_string43
	.byte	8
	.byte	115
	.long	745
	.byte	0
	.byte	0
	.byte	23
	.long	.Ldebug_ranges34
	.byte	18
	.long	.Ldebug_loc339
	.long	.Linfo_string70
	.byte	8
	.byte	124
	.long	449
	.byte	19
	.quad	.Ltmp3054
	.long	.Ltmp3064-.Ltmp3054
	.byte	18
	.long	.Ldebug_loc346
	.long	.Linfo_string43
	.byte	8
	.byte	125
	.long	745
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp2989
	.long	.Ltmp2999-.Ltmp2989
	.byte	18
	.long	.Ldebug_loc340
	.long	.Linfo_string70
	.byte	8
	.byte	134
	.long	449
	.byte	19
	.quad	.Ltmp2992
	.long	.Ltmp2999-.Ltmp2992
	.byte	18
	.long	.Ldebug_loc341
	.long	.Linfo_string43
	.byte	8
	.byte	135
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	19
	.quad	.Ltmp3005
	.long	.Ltmp3011-.Ltmp3005
	.byte	18
	.long	.Ldebug_loc343
	.long	.Linfo_string694
	.byte	8
	.byte	157
	.long	17913
	.byte	0
	.byte	0
	.byte	0
	.byte	38
	.quad	.Lfunc_begin74
	.long	.Lfunc_end74-.Lfunc_begin74
	.byte	1
	.byte	87
	.long	.Linfo_string384
	.byte	8
	.byte	47
	.long	393
	.byte	17
	.long	.Ldebug_loc347
	.long	.Linfo_string485
	.byte	8
	.byte	47
	.long	17690
	.byte	0
	.byte	16
	.quad	.Lfunc_begin75
	.long	.Lfunc_end75-.Lfunc_begin75
	.byte	1
	.byte	87
	.long	.Linfo_string385
	.long	.Linfo_string386
	.byte	5
	.byte	174
	.long	745

	.byte	17
	.long	.Ldebug_loc348
	.long	.Linfo_string150
	.byte	5
	.byte	174
	.long	2917
	.byte	17
	.long	.Ldebug_loc349
	.long	.Linfo_string618
	.byte	5
	.byte	174
	.long	466
	.byte	17
	.long	.Ldebug_loc350
	.long	.Linfo_string696
	.byte	5
	.byte	174
	.long	466
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\340\007"
	.long	.Linfo_string615
	.byte	5
	.byte	174
	.long	466
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\360\007"
	.long	.Linfo_string428
	.byte	5
	.byte	174
	.long	1129
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\210\b"
	.long	.Linfo_string610
	.byte	5
	.byte	174
	.long	1129
	.byte	18
	.long	.Ldebug_loc352
	.long	.Linfo_string697
	.byte	5
	.byte	174
	.long	745
	.byte	19
	.quad	.Ltmp3078
	.long	.Ltmp3179-.Ltmp3078
	.byte	18
	.long	.Ldebug_loc351
	.long	.Linfo_string43
	.byte	5
	.byte	175
	.long	745
	.byte	18
	.long	.Ldebug_loc353
	.long	.Linfo_string601
	.byte	5
	.byte	181
	.long	15665
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin76
	.long	.Lfunc_end76-.Lfunc_begin76
	.byte	1
	.byte	87
	.long	.Linfo_string387
	.long	.Linfo_string388
	.byte	7
	.byte	46
	.long	14574

	.byte	17
	.long	.Ldebug_loc354
	.long	.Linfo_string150
	.byte	7
	.byte	46
	.long	2917
	.byte	17
	.long	.Ldebug_loc355
	.long	.Linfo_string698
	.byte	7
	.byte	46
	.long	466
	.byte	18
	.long	.Ldebug_loc357
	.long	.Linfo_string43
	.byte	7
	.byte	46
	.long	745
	.byte	18
	.long	.Ldebug_loc358
	.long	.Linfo_string389
	.byte	7
	.byte	46
	.long	466
	.byte	18
	.long	.Ldebug_loc359
	.long	.Linfo_string390
	.byte	7
	.byte	46
	.long	466
	.byte	19
	.quad	.Ltmp3183
	.long	.Ltmp3204-.Ltmp3183
	.byte	18
	.long	.Ldebug_loc356
	.long	.Linfo_string601
	.byte	7
	.byte	48
	.long	15665
	.byte	18
	.long	.Ldebug_loc360
	.long	.Linfo_string699
	.byte	7
	.byte	53
	.long	466
	.byte	18
	.long	.Ldebug_loc361
	.long	.Linfo_string700
	.byte	7
	.byte	61
	.long	466
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin77
	.long	.Lfunc_end77-.Lfunc_begin77
	.byte	1
	.byte	87
	.long	.Linfo_string392
	.long	.Linfo_string393
	.byte	5
	.byte	103
	.long	4865

	.byte	17
	.long	.Ldebug_loc362
	.long	.Linfo_string150
	.byte	5
	.byte	103
	.long	2917
	.byte	17
	.long	.Ldebug_loc363
	.long	.Linfo_string618
	.byte	5
	.byte	103
	.long	466
	.byte	30
	.byte	3
	.byte	145
	.ascii	"\300\002"
	.long	.Linfo_string428
	.byte	5
	.byte	103
	.long	1129
	.byte	18
	.long	.Ldebug_loc366
	.long	.Linfo_string703
	.byte	5
	.byte	103
	.long	745
	.byte	18
	.long	.Ldebug_loc367
	.long	.Linfo_string704
	.byte	5
	.byte	103
	.long	466
	.byte	19
	.quad	.Ltmp3205
	.long	.Ltmp3217-.Ltmp3205
	.byte	18
	.long	.Ldebug_loc364
	.long	.Linfo_string701
	.byte	5
	.byte	104
	.long	466
	.byte	18
	.long	.Ldebug_loc365
	.long	.Linfo_string702
	.byte	5
	.byte	104
	.long	466
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin78
	.long	.Lfunc_end78-.Lfunc_begin78
	.byte	1
	.byte	87
	.long	.Linfo_string394
	.long	.Linfo_string395
	.byte	5
	.byte	217
	.long	745

	.byte	17
	.long	.Ldebug_loc368
	.long	.Linfo_string567
	.byte	5
	.byte	217
	.long	17527
	.byte	17
	.long	.Ldebug_loc369
	.long	.Linfo_string415
	.byte	5
	.byte	217
	.long	466
	.byte	17
	.long	.Ldebug_loc370
	.long	.Linfo_string644
	.byte	5
	.byte	217
	.long	466
	.byte	17
	.long	.Ldebug_loc371
	.long	.Linfo_string645
	.byte	5
	.byte	217
	.long	17729
	.byte	17
	.long	.Ldebug_loc372
	.long	.Linfo_string438
	.byte	5
	.byte	217
	.long	4688
	.byte	18
	.long	.Ldebug_loc374
	.long	.Linfo_string705
	.byte	5
	.byte	217
	.long	745
	.byte	19
	.quad	.Ltmp3220
	.long	.Ltmp3249-.Ltmp3220
	.byte	18
	.long	.Ldebug_loc373
	.long	.Linfo_string43
	.byte	5
	.byte	223
	.long	745
	.byte	18
	.long	.Ldebug_loc376
	.long	.Linfo_string615
	.byte	5
	.byte	223
	.long	13986
	.byte	19
	.quad	.Ltmp3229
	.long	.Ltmp3233-.Ltmp3229
	.byte	18
	.long	.Ldebug_loc375
	.long	.Linfo_string70
	.byte	5
	.byte	229
	.long	449
	.byte	0
	.byte	19
	.quad	.Ltmp3242
	.long	.Ltmp3249-.Ltmp3242
	.byte	18
	.long	.Ldebug_loc377
	.long	.Linfo_string410
	.byte	5
	.byte	235
	.long	466
	.byte	19
	.quad	.Ltmp3246
	.long	.Ltmp3248-.Ltmp3246
	.byte	18
	.long	.Ldebug_loc378
	.long	.Linfo_string43
	.byte	5
	.byte	236
	.long	745
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Lfunc_begin79
	.long	.Lfunc_end79-.Lfunc_begin79
	.byte	1
	.byte	87
	.long	.Linfo_string396
	.long	.Linfo_string397
	.byte	1
	.byte	1
	.long	325

	.byte	17
	.long	.Ldebug_loc379
	.long	.Linfo_string419
	.byte	1
	.byte	1
	.long	388
	.byte	30
	.byte	1
	.byte	84
	.long	.Linfo_string430
	.byte	1
	.byte	1
	.long	325
	.byte	18
	.long	.Ldebug_loc380
	.long	.Linfo_string706
	.byte	1
	.byte	1
	.long	325
	.byte	0
	.byte	16
	.quad	.Lfunc_begin80
	.long	.Lfunc_end80-.Lfunc_begin80
	.byte	1
	.byte	87
	.long	.Linfo_string398
	.long	.Linfo_string399
	.byte	1
	.byte	1
	.long	449

	.byte	17
	.long	.Ldebug_loc381
	.long	.Linfo_string432
	.byte	1
	.byte	1
	.long	388
	.byte	17
	.long	.Ldebug_loc382
	.long	.Linfo_string433
	.byte	1
	.byte	1
	.long	388
	.byte	31
	.byte	0
	.long	.Linfo_string707
	.byte	1
	.byte	1
	.long	449
	.byte	0
	.byte	43
	.quad	.Lfunc_begin81
	.long	.Lfunc_end81-.Lfunc_begin81
	.byte	1
	.byte	87
	.long	.Linfo_string400
	.long	.Linfo_string401
	.byte	3
	.byte	5
	.long	393

	.byte	7
	.long	.Linfo_string228
	.byte	40
	.byte	1
	.byte	44
	.long	.Linfo_string73
	.long	1129
	.byte	2
	.short	265
	.byte	8
	.byte	0
	.byte	44
	.long	.Linfo_string73
	.long	745
	.byte	2
	.short	265
	.byte	8
	.byte	24
	.byte	0
	.byte	7
	.long	.Linfo_string256
	.byte	32
	.byte	1
	.byte	44
	.long	.Linfo_string73
	.long	79
	.byte	2
	.short	344
	.byte	8
	.byte	0
	.byte	44
	.long	.Linfo_string73
	.long	745
	.byte	2
	.short	344
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	.Linfo_string290
	.byte	40
	.byte	1
	.byte	5
	.long	.Linfo_string73
	.long	836
	.byte	2
	.byte	193
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string73
	.long	745
	.byte	2
	.byte	193
	.byte	8
	.byte	24
	.byte	0
	.byte	7
	.long	.Linfo_string340
	.byte	40
	.byte	1
	.byte	5
	.long	.Linfo_string73
	.long	13934
	.byte	2
	.byte	197
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string73
	.long	745
	.byte	2
	.byte	197
	.byte	8
	.byte	24
	.byte	0
	.byte	7
	.long	.Linfo_string339
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	13981
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	13986
	.byte	6
	.long	13991
	.byte	45
	.long	.Linfo_string338
	.short	832
	.byte	3
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string297
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string99
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string298
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string299
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string300
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string301
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string302
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	96
	.byte	5
	.long	.Linfo_string303
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	112
	.byte	5
	.long	.Linfo_string304
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	128
	.byte	5
	.long	.Linfo_string305
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	144
	.byte	5
	.long	.Linfo_string306
	.long	449
	.byte	3
	.byte	10
	.byte	1
	.byte	160
	.byte	5
	.long	.Linfo_string307
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	168
	.byte	5
	.long	.Linfo_string308
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.byte	184
	.byte	5
	.long	.Linfo_string309
	.long	466
	.byte	3
	.byte	10
	.byte	8
	.byte	208
	.byte	5
	.long	.Linfo_string310
	.long	449
	.byte	3
	.byte	10
	.byte	1
	.byte	224
	.byte	5
	.long	.Linfo_string311
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.byte	232
	.byte	46
	.long	.Linfo_string312
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	256
	.byte	46
	.long	.Linfo_string313
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	280
	.byte	46
	.long	.Linfo_string314
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	304
	.byte	46
	.long	.Linfo_string315
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	328
	.byte	46
	.long	.Linfo_string316
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	352
	.byte	46
	.long	.Linfo_string317
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	376
	.byte	46
	.long	.Linfo_string318
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	400
	.byte	46
	.long	.Linfo_string319
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	424
	.byte	46
	.long	.Linfo_string320
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	448
	.byte	46
	.long	.Linfo_string321
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	472
	.byte	46
	.long	.Linfo_string322
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	496
	.byte	46
	.long	.Linfo_string323
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	520
	.byte	46
	.long	.Linfo_string324
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	544
	.byte	46
	.long	.Linfo_string325
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	568
	.byte	46
	.long	.Linfo_string326
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	592
	.byte	46
	.long	.Linfo_string327
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	616
	.byte	46
	.long	.Linfo_string328
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	640
	.byte	46
	.long	.Linfo_string329
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	664
	.byte	46
	.long	.Linfo_string330
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	688
	.byte	46
	.long	.Linfo_string331
	.long	4688
	.byte	3
	.byte	10
	.byte	8
	.short	712
	.byte	46
	.long	.Linfo_string332
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	720
	.byte	46
	.long	.Linfo_string333
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	744
	.byte	46
	.long	.Linfo_string334
	.long	4688
	.byte	3
	.byte	10
	.byte	8
	.short	768
	.byte	46
	.long	.Linfo_string335
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	776
	.byte	46
	.long	.Linfo_string336
	.long	1129
	.byte	3
	.byte	10
	.byte	8
	.short	800
	.byte	46
	.long	.Linfo_string337
	.long	4688
	.byte	3
	.byte	10
	.byte	8
	.short	824
	.byte	0
	.byte	7
	.long	.Linfo_string391
	.byte	48
	.byte	1
	.byte	5
	.long	.Linfo_string389
	.long	466
	.byte	2
	.byte	46
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string390
	.long	466
	.byte	2
	.byte	46
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string43
	.long	745
	.byte	2
	.byte	46
	.byte	8
	.byte	32
	.byte	0
	.byte	6
	.long	14626
	.byte	4
	.long	.Linfo_string51
	.byte	80
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string441
	.long	14727
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string141
	.long	14768
	.byte	3
	.byte	8
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string462
	.long	15097
	.byte	3
	.byte	8
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string476
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	40
	.byte	5
	.long	.Linfo_string478
	.long	4688
	.byte	3
	.byte	8
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string479
	.long	466
	.byte	3
	.byte	8
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string480
	.long	15500
	.byte	3
	.byte	8
	.byte	8
	.byte	72
	.byte	0
	.byte	6
	.long	14732
	.byte	4
	.long	.Linfo_string443
	.byte	24
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string442
	.long	79
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string186
	.long	1749
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	.Linfo_string461
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	14815
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	14820
	.byte	6
	.long	14825
	.byte	4
	.long	.Linfo_string460
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string444
	.long	14861
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string81
	.long	1742
	.byte	3
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	14866
	.byte	4
	.long	.Linfo_string444
	.byte	136
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string99
	.long	466
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string445
	.long	466
	.byte	3
	.byte	8
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string446
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	32
	.byte	5
	.long	.Linfo_string447
	.long	4820
	.byte	3
	.byte	8
	.byte	2
	.byte	34
	.byte	5
	.long	.Linfo_string448
	.long	4820
	.byte	3
	.byte	8
	.byte	2
	.byte	36
	.byte	5
	.long	.Linfo_string170
	.long	4820
	.byte	3
	.byte	8
	.byte	2
	.byte	38
	.byte	5
	.long	.Linfo_string449
	.long	4820
	.byte	3
	.byte	8
	.byte	2
	.byte	40
	.byte	5
	.long	.Linfo_string450
	.long	1693
	.byte	3
	.byte	8
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string451
	.long	4820
	.byte	3
	.byte	8
	.byte	2
	.byte	72
	.byte	5
	.long	.Linfo_string452
	.long	4820
	.byte	3
	.byte	8
	.byte	2
	.byte	74
	.byte	5
	.long	.Linfo_string453
	.long	57
	.byte	3
	.byte	8
	.byte	4
	.byte	76
	.byte	5
	.long	.Linfo_string454
	.long	57
	.byte	3
	.byte	8
	.byte	4
	.byte	80
	.byte	5
	.long	.Linfo_string455
	.long	57
	.byte	3
	.byte	8
	.byte	4
	.byte	84
	.byte	5
	.long	.Linfo_string456
	.long	1742
	.byte	3
	.byte	8
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string457
	.long	1742
	.byte	3
	.byte	8
	.byte	8
	.byte	96
	.byte	5
	.long	.Linfo_string458
	.long	836
	.byte	3
	.byte	8
	.byte	8
	.byte	104
	.byte	5
	.long	.Linfo_string459
	.long	57
	.byte	3
	.byte	8
	.byte	4
	.byte	128
	.byte	0
	.byte	6
	.long	15102
	.byte	4
	.long	.Linfo_string477
	.byte	80
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string463
	.long	14820
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string464
	.long	79
	.byte	3
	.byte	8
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string465
	.long	14727
	.byte	3
	.byte	8
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string466
	.long	15203
	.byte	3
	.byte	8
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string468
	.long	14727
	.byte	3
	.byte	8
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string469
	.long	15291
	.byte	3
	.byte	8
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string476
	.long	449
	.byte	3
	.byte	8
	.byte	1
	.byte	72
	.byte	0
	.byte	4
	.long	.Linfo_string467
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	15239
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	15244
	.byte	7
	.long	.Linfo_string110
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string108
	.long	2319
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string41
	.long	690
	.byte	2
	.byte	8
	.byte	8
	.byte	16
	.byte	0
	.byte	4
	.long	.Linfo_string475
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	15327
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	15332
	.byte	7
	.long	.Linfo_string474
	.byte	56
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string470
	.long	15431
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string471
	.long	15447
	.byte	2
	.byte	8
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string100
	.long	15431
	.byte	2
	.byte	8
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string472
	.long	15463
	.byte	2
	.byte	8
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string473
	.long	15484
	.byte	2
	.byte	8
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string41
	.long	690
	.byte	2
	.byte	8
	.byte	8
	.byte	48
	.byte	0
	.byte	6
	.long	15436
	.byte	8
	.long	502
	.byte	9
	.long	388
	.byte	0
	.byte	6
	.long	15452
	.byte	8
	.long	393
	.byte	9
	.long	388
	.byte	0
	.byte	6
	.long	15468
	.byte	8
	.long	836
	.byte	9
	.long	388
	.byte	9
	.long	836
	.byte	0
	.byte	6
	.long	15489
	.byte	8
	.long	57
	.byte	9
	.long	388
	.byte	0
	.byte	6
	.long	15505
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	15528
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	15533
	.byte	8
	.long	393
	.byte	9
	.long	1742
	.byte	9
	.long	1742
	.byte	0
	.byte	6
	.long	15554
	.byte	47
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.short	344
	.byte	1
	.byte	44
	.long	.Linfo_string17
	.long	15579
	.byte	3
	.short	344
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	15584
	.byte	8
	.long	13830
	.byte	9
	.long	466
	.byte	0
	.byte	6
	.long	15600
	.byte	7
	.long	.Linfo_string487
	.byte	8
	.byte	1
	.byte	44
	.long	.Linfo_string486
	.long	15622
	.byte	2
	.short	335
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	15627
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	15650
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	15655
	.byte	48
	.long	393
	.byte	6
	.long	2917
	.byte	6
	.long	15670
	.byte	45
	.long	.Linfo_string588
	.short	328
	.byte	3
	.byte	14
	.byte	1
	.byte	5
	.long	.Linfo_string492
	.long	466
	.byte	3
	.byte	14
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string493
	.long	1129
	.byte	3
	.byte	14
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string494
	.long	1129
	.byte	3
	.byte	14
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string297
	.long	466
	.byte	3
	.byte	14
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string495
	.long	15945
	.byte	3
	.byte	14
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string497
	.long	79
	.byte	3
	.byte	14
	.byte	8
	.byte	96
	.byte	5
	.long	.Linfo_string498
	.long	79
	.byte	3
	.byte	14
	.byte	8
	.byte	112
	.byte	5
	.long	.Linfo_string499
	.long	16020
	.byte	3
	.byte	14
	.byte	8
	.byte	128
	.byte	5
	.long	.Linfo_string501
	.long	16072
	.byte	3
	.byte	14
	.byte	8
	.byte	152
	.byte	5
	.long	.Linfo_string530
	.long	16587
	.byte	3
	.byte	14
	.byte	8
	.byte	160
	.byte	5
	.long	.Linfo_string540
	.long	16729
	.byte	3
	.byte	14
	.byte	8
	.byte	168
	.byte	5
	.long	.Linfo_string567
	.long	17063
	.byte	3
	.byte	14
	.byte	8
	.byte	176
	.byte	5
	.long	.Linfo_string576
	.long	745
	.byte	3
	.byte	14
	.byte	8
	.byte	192
	.byte	5
	.long	.Linfo_string577
	.long	449
	.byte	3
	.byte	14
	.byte	1
	.byte	208
	.byte	5
	.long	.Linfo_string578
	.long	16020
	.byte	3
	.byte	14
	.byte	8
	.byte	216
	.byte	5
	.long	.Linfo_string579
	.long	17278
	.byte	3
	.byte	14
	.byte	8
	.byte	240
	.byte	46
	.long	.Linfo_string583
	.long	17278
	.byte	3
	.byte	14
	.byte	8
	.short	264
	.byte	46
	.long	.Linfo_string584
	.long	17405
	.byte	3
	.byte	14
	.byte	8
	.short	288
	.byte	46
	.long	.Linfo_string586
	.long	17243
	.byte	3
	.byte	14
	.byte	8
	.short	312
	.byte	46
	.long	.Linfo_string587
	.long	17243
	.byte	3
	.byte	14
	.byte	8
	.short	320
	.byte	0
	.byte	4
	.long	.Linfo_string496
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	15981
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	15986
	.byte	7
	.long	.Linfo_string50
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string109
	.long	690
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	.Linfo_string500
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	16067
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	2366
	.byte	6
	.long	16077
	.byte	4
	.long	.Linfo_string501
	.byte	160
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string502
	.long	466
	.byte	3
	.byte	13
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string503
	.long	16308
	.byte	3
	.byte	13
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string509
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	24
	.byte	5
	.long	.Linfo_string510
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	25
	.byte	5
	.long	.Linfo_string511
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	26
	.byte	5
	.long	.Linfo_string512
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	27
	.byte	5
	.long	.Linfo_string513
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	28
	.byte	5
	.long	.Linfo_string514
	.long	502
	.byte	3
	.byte	13
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string515
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	40
	.byte	5
	.long	.Linfo_string516
	.long	502
	.byte	3
	.byte	13
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string517
	.long	16427
	.byte	3
	.byte	13
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string519
	.long	325
	.byte	3
	.byte	13
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string520
	.long	325
	.byte	3
	.byte	13
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string521
	.long	16434
	.byte	3
	.byte	13
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string526
	.long	16434
	.byte	3
	.byte	13
	.byte	8
	.byte	104
	.byte	5
	.long	.Linfo_string527
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	128
	.byte	5
	.long	.Linfo_string528
	.long	16535
	.byte	3
	.byte	13
	.byte	8
	.byte	136
	.byte	0
	.byte	6
	.long	16313
	.byte	4
	.long	.Linfo_string503
	.byte	40
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string504
	.long	57
	.byte	3
	.byte	13
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string505
	.long	57
	.byte	3
	.byte	13
	.byte	4
	.byte	4
	.byte	5
	.long	.Linfo_string506
	.long	16375
	.byte	3
	.byte	13
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string508
	.long	449
	.byte	3
	.byte	13
	.byte	1
	.byte	32
	.byte	0
	.byte	7
	.long	.Linfo_string507
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	16422
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	57
	.byte	3
	.long	.Linfo_string518
	.byte	5
	.byte	8
	.byte	7
	.long	.Linfo_string525
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	16481
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	16486
	.byte	4
	.long	.Linfo_string524
	.byte	24
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string522
	.long	502
	.byte	3
	.byte	13
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string523
	.long	502
	.byte	3
	.byte	13
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string100
	.long	502
	.byte	3
	.byte	13
	.byte	8
	.byte	16
	.byte	0
	.byte	7
	.long	.Linfo_string529
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	16582
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	325
	.byte	6
	.long	16592
	.byte	4
	.long	.Linfo_string530
	.byte	48
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string531
	.long	502
	.byte	3
	.byte	13
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string532
	.long	325
	.byte	3
	.byte	13
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string533
	.long	57
	.byte	3
	.byte	13
	.byte	4
	.byte	16
	.byte	5
	.long	.Linfo_string534
	.long	16654
	.byte	3
	.byte	13
	.byte	4
	.byte	20
	.byte	0
	.byte	4
	.long	.Linfo_string539
	.byte	24
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string442
	.long	3168
	.byte	3
	.byte	13
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string535
	.long	57
	.byte	3
	.byte	13
	.byte	4
	.byte	8
	.byte	5
	.long	.Linfo_string536
	.long	57
	.byte	3
	.byte	13
	.byte	4
	.byte	12
	.byte	5
	.long	.Linfo_string537
	.long	3204
	.byte	3
	.byte	13
	.byte	4
	.byte	16
	.byte	5
	.long	.Linfo_string538
	.long	3204
	.byte	3
	.byte	13
	.byte	4
	.byte	20
	.byte	0
	.byte	6
	.long	16734
	.byte	4
	.long	.Linfo_string540
	.byte	24
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string541
	.long	502
	.byte	3
	.byte	13
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string542
	.long	16783
	.byte	3
	.byte	13
	.byte	4
	.byte	8
	.byte	5
	.long	.Linfo_string544
	.long	16790
	.byte	3
	.byte	13
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	.Linfo_string543
	.byte	7
	.byte	4
	.byte	6
	.long	16795
	.byte	4
	.long	.Linfo_string566
	.byte	144
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string545
	.long	17013
	.byte	3
	.byte	13
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string551
	.long	17013
	.byte	3
	.byte	13
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string552
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string553
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string554
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string555
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string556
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string557
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string558
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string559
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string560
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	96
	.byte	5
	.long	.Linfo_string561
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	104
	.byte	5
	.long	.Linfo_string562
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	112
	.byte	5
	.long	.Linfo_string563
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	120
	.byte	5
	.long	.Linfo_string564
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	128
	.byte	5
	.long	.Linfo_string565
	.long	1749
	.byte	3
	.byte	13
	.byte	8
	.byte	136
	.byte	0
	.byte	4
	.long	.Linfo_string550
	.byte	16
	.byte	3
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string546
	.long	17049
	.byte	3
	.byte	13
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string548
	.long	17056
	.byte	3
	.byte	13
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	.Linfo_string547
	.byte	5
	.byte	8
	.byte	3
	.long	.Linfo_string549
	.byte	5
	.byte	8
	.byte	4
	.long	.Linfo_string113
	.byte	16
	.byte	3
	.byte	14
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	17099
	.byte	3
	.byte	14
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	17104
	.byte	7
	.long	.Linfo_string575
	.byte	40
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	14
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string568
	.long	17177
	.byte	2
	.byte	14
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string571
	.long	17227
	.byte	2
	.byte	14
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string573
	.long	2319
	.byte	2
	.byte	14
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string574
	.long	17257
	.byte	2
	.byte	14
	.byte	8
	.byte	32
	.byte	0
	.byte	6
	.long	17182
	.byte	8
	.long	17193
	.byte	9
	.long	388
	.byte	0
	.byte	7
	.long	.Linfo_string570
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string569
	.long	1693
	.byte	2
	.byte	14
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string70
	.long	449
	.byte	2
	.byte	14
	.byte	1
	.byte	24
	.byte	0
	.byte	6
	.long	17232
	.byte	8
	.long	17243
	.byte	9
	.long	388
	.byte	0
	.byte	6
	.long	17248
	.byte	11
	.long	.Linfo_string572
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	6
	.long	17262
	.byte	8
	.long	2119
	.byte	9
	.long	388
	.byte	9
	.long	2119
	.byte	0
	.byte	7
	.long	.Linfo_string582
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	17325
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	17330
	.byte	4
	.long	.Linfo_string581
	.byte	16
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string6
	.long	17366
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string46
	.long	388
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	17371
	.byte	7
	.long	.Linfo_string580
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string7
	.long	154
	.byte	2
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string108
	.long	2319
	.byte	2
	.byte	8
	.byte	8
	.byte	8
	.byte	0
	.byte	7
	.long	.Linfo_string585
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	17452
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	17457
	.byte	6
	.long	17462
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	3
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	17485
	.byte	3
	.byte	8
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	17490
	.byte	48
	.long	745
	.byte	6
	.long	14621
	.byte	6
	.long	17505
	.byte	7
	.long	.Linfo_string593
	.byte	8
	.byte	1
	.byte	44
	.long	.Linfo_string592
	.long	2366
	.byte	2
	.short	428
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	898
	.byte	7
	.long	.Linfo_string627
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	17579
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	1129
	.byte	7
	.long	.Linfo_string630
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	17631
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	502
	.byte	2
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	17636
	.byte	4
	.long	.Linfo_string629
	.byte	48
	.byte	4
	.byte	236
	.byte	1
	.byte	5
	.long	.Linfo_string173
	.long	466
	.byte	4
	.byte	237
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string415
	.long	466
	.byte	4
	.byte	238
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string43
	.long	745
	.byte	4
	.byte	239
	.byte	8
	.byte	32
	.byte	0
	.byte	6
	.long	17243
	.byte	6
	.long	17695
	.byte	7
	.long	.Linfo_string636
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string592
	.long	2917
	.byte	2
	.byte	79
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string635
	.long	466
	.byte	2
	.byte	79
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	.Linfo_string646
	.byte	7
	.byte	8
	.byte	6
	.long	17741
	.byte	7
	.long	.Linfo_string661
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string486
	.long	17775
	.byte	2
	.byte	244
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string592
	.long	1129
	.byte	2
	.byte	244
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	17780
	.byte	4
	.long	.Linfo_string19
	.byte	8
	.byte	4
	.byte	244
	.byte	1
	.byte	5
	.long	.Linfo_string17
	.long	17803
	.byte	4
	.byte	244
	.byte	8
	.byte	0
	.byte	0
	.byte	6
	.long	17808
	.byte	8
	.long	393
	.byte	9
	.long	1129
	.byte	0
	.byte	6
	.long	17824
	.byte	4
	.long	.Linfo_string680
	.byte	104
	.byte	4
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string140
	.long	836
	.byte	4
	.byte	8
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string675
	.long	502
	.byte	4
	.byte	8
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string676
	.long	17886
	.byte	4
	.byte	8
	.byte	1
	.byte	32
	.byte	5
	.long	.Linfo_string678
	.long	17906
	.byte	4
	.byte	8
	.byte	1
	.byte	96
	.byte	0
	.byte	49
	.long	332
	.byte	50
	.long	17899
	.byte	0
	.byte	64
	.byte	0
	.byte	51
	.long	.Linfo_string677
	.byte	8
	.byte	7
	.byte	3
	.long	.Linfo_string679
	.byte	5
	.byte	1
	.byte	3
	.long	.Linfo_string695
	.byte	5
	.byte	8
	.byte	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp2
	.quad	.Ltmp5
	.quad	.Ltmp10
	.quad	.Ltmp13
	.quad	.Ltmp15
	.quad	.Ltmp18
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp52
	.quad	.Ltmp61
	.quad	.Ltmp64
	.quad	.Ltmp67
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp237
	.quad	.Ltmp254
	.quad	.Ltmp258
	.quad	.Ltmp270
	.quad	.Ltmp288
	.quad	.Ltmp291
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp260
	.quad	.Ltmp266
	.quad	.Ltmp288
	.quad	.Ltmp290
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp237
	.quad	.Ltmp254
	.quad	.Ltmp258
	.quad	.Ltmp270
	.quad	.Ltmp288
	.quad	.Ltmp291
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp546
	.quad	.Ltmp549
	.quad	.Ltmp563
	.quad	.Ltmp566
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp537
	.quad	.Ltmp549
	.quad	.Ltmp561
	.quad	.Ltmp566
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp494
	.quad	.Ltmp496
	.quad	.Ltmp515
	.quad	.Ltmp518
	.quad	.Ltmp523
	.quad	.Ltmp549
	.quad	.Ltmp561
	.quad	.Ltmp566
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp494
	.quad	.Ltmp496
	.quad	.Ltmp515
	.quad	.Ltmp550
	.quad	.Ltmp561
	.quad	.Ltmp566
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp814
	.quad	.Ltmp815
	.quad	.Ltmp817
	.quad	.Ltmp834
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp1485
	.quad	.Ltmp1495
	.quad	.Ltmp1509
	.quad	.Ltmp1513
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp1719
	.quad	.Ltmp1721
	.quad	.Ltmp1722
	.quad	.Ltmp1737
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Ltmp1513
	.quad	.Ltmp1515
	.quad	.Ltmp1527
	.quad	.Ltmp1547
	.quad	.Ltmp1703
	.quad	.Ltmp1977
	.quad	0
	.quad	0
.Ldebug_ranges13:
	.quad	.Ltmp1501
	.quad	.Ltmp1503
	.quad	.Ltmp1513
	.quad	.Ltmp1515
	.quad	.Ltmp1527
	.quad	.Ltmp1547
	.quad	.Ltmp1703
	.quad	.Ltmp1977
	.quad	0
	.quad	0
.Ldebug_ranges14:
	.quad	.Ltmp1522
	.quad	.Ltmp1526
	.quad	.Ltmp1547
	.quad	.Ltmp1560
	.quad	0
	.quad	0
.Ldebug_ranges15:
	.quad	.Ltmp1517
	.quad	.Ltmp1526
	.quad	.Ltmp1547
	.quad	.Ltmp1702
	.quad	0
	.quad	0
.Ldebug_ranges16:
	.quad	.Ltmp1504
	.quad	.Ltmp1506
	.quad	.Ltmp1517
	.quad	.Ltmp1526
	.quad	.Ltmp1547
	.quad	.Ltmp1702
	.quad	0
	.quad	0
.Ldebug_ranges17:
	.quad	.Ltmp1997
	.quad	.Ltmp1999
	.quad	.Ltmp2002
	.quad	.Ltmp2006
	.quad	.Ltmp2011
	.quad	.Ltmp2016
	.quad	.Ltmp2019
	.quad	.Ltmp2020
	.quad	0
	.quad	0
.Ldebug_ranges18:
	.quad	.Ltmp1997
	.quad	.Ltmp1999
	.quad	.Ltmp2002
	.quad	.Ltmp2006
	.quad	.Ltmp2011
	.quad	.Ltmp2016
	.quad	.Ltmp2019
	.quad	.Ltmp2020
	.quad	0
	.quad	0
.Ldebug_ranges19:
	.quad	.Ltmp2026
	.quad	.Ltmp2029
	.quad	.Ltmp2032
	.quad	.Ltmp2034
	.quad	0
	.quad	0
.Ldebug_ranges20:
	.quad	.Ltmp2120
	.quad	.Ltmp2122
	.quad	.Ltmp2143
	.quad	.Ltmp2144
	.quad	0
	.quad	0
.Ldebug_ranges21:
	.quad	.Ltmp2111
	.quad	.Ltmp2123
	.quad	.Ltmp2143
	.quad	.Ltmp2144
	.quad	0
	.quad	0
.Ldebug_ranges22:
	.quad	.Ltmp2125
	.quad	.Ltmp2143
	.quad	.Ltmp2145
	.quad	.Ltmp2146
	.quad	.Ltmp2149
	.quad	.Ltmp2151
	.quad	0
	.quad	0
.Ldebug_ranges23:
	.quad	.Ltmp2436
	.quad	.Ltmp2439
	.quad	.Ltmp2443
	.quad	.Ltmp2444
	.quad	0
	.quad	0
.Ldebug_ranges24:
	.quad	.Ltmp2612
	.quad	.Ltmp2620
	.quad	.Ltmp2621
	.quad	.Ltmp2625
	.quad	0
	.quad	0
.Ldebug_ranges25:
	.quad	.Ltmp2704
	.quad	.Ltmp2714
	.quad	.Ltmp2715
	.quad	.Ltmp2732
	.quad	0
	.quad	0
.Ldebug_ranges26:
	.quad	.Ltmp2738
	.quad	.Ltmp2750
	.quad	.Ltmp2769
	.quad	.Ltmp2770
	.quad	0
	.quad	0
.Ldebug_ranges27:
	.quad	.Ltmp2734
	.quad	.Ltmp2751
	.quad	.Ltmp2769
	.quad	.Ltmp2770
	.quad	0
	.quad	0
.Ldebug_ranges28:
	.quad	.Ltmp2959
	.quad	.Ltmp2961
	.quad	.Ltmp3013
	.quad	.Ltmp3019
	.quad	0
	.quad	0
.Ldebug_ranges29:
	.quad	.Ltmp2962
	.quad	.Ltmp2964
	.quad	.Ltmp3020
	.quad	.Ltmp3026
	.quad	0
	.quad	0
.Ldebug_ranges30:
	.quad	.Ltmp2965
	.quad	.Ltmp2967
	.quad	.Ltmp3035
	.quad	.Ltmp3042
	.quad	0
	.quad	0
.Ldebug_ranges31:
	.quad	.Ltmp2944
	.quad	.Ltmp2946
	.quad	.Ltmp2954
	.quad	.Ltmp2977
	.quad	.Ltmp3013
	.quad	.Ltmp3026
	.quad	.Ltmp3035
	.quad	.Ltmp3042
	.quad	0
	.quad	0
.Ldebug_ranges32:
	.quad	.Ltmp2980
	.quad	.Ltmp2982
	.quad	.Ltmp3027
	.quad	.Ltmp3034
	.quad	0
	.quad	0
.Ldebug_ranges33:
	.quad	.Ltmp2983
	.quad	.Ltmp2985
	.quad	.Ltmp3046
	.quad	.Ltmp3053
	.quad	0
	.quad	0
.Ldebug_ranges34:
	.quad	.Ltmp2986
	.quad	.Ltmp2988
	.quad	.Ltmp3054
	.quad	.Ltmp3064
	.quad	0
	.quad	0
.Ldebug_ranges35:
	.quad	.Ltmp2947
	.quad	.Ltmp2949
	.quad	.Ltmp2977
	.quad	.Ltmp2999
	.quad	.Ltmp3027
	.quad	.Ltmp3034
	.quad	.Ltmp3046
	.quad	.Ltmp3064
	.quad	0
	.quad	0
.Ldebug_ranges36:
	.quad	.Lfunc_begin0
	.quad	.Lfunc_end0
	.quad	.Lfunc_begin1
	.quad	.Lfunc_end1
	.quad	.Lfunc_begin2
	.quad	.Lfunc_end2
	.quad	.Lfunc_begin3
	.quad	.Lfunc_end3
	.quad	.Lfunc_begin4
	.quad	.Lfunc_end4
	.quad	.Lfunc_begin5
	.quad	.Lfunc_end5
	.quad	.Lfunc_begin6
	.quad	.Lfunc_end6
	.quad	.Lfunc_begin7
	.quad	.Lfunc_end7
	.quad	.Lfunc_begin8
	.quad	.Lfunc_end8
	.quad	.Lfunc_begin9
	.quad	.Lfunc_end9
	.quad	.Lfunc_begin10
	.quad	.Lfunc_end10
	.quad	.Lfunc_begin11
	.quad	.Lfunc_end11
	.quad	.Lfunc_begin12
	.quad	.Lfunc_end12
	.quad	.Lfunc_begin13
	.quad	.Lfunc_end13
	.quad	.Lfunc_begin14
	.quad	.Lfunc_end14
	.quad	.Lfunc_begin15
	.quad	.Lfunc_end15
	.quad	.Lfunc_begin16
	.quad	.Lfunc_end16
	.quad	.Lfunc_begin17
	.quad	.Lfunc_end17
	.quad	.Lfunc_begin18
	.quad	.Lfunc_end18
	.quad	.Lfunc_begin19
	.quad	.Lfunc_end19
	.quad	.Lfunc_begin20
	.quad	.Lfunc_end20
	.quad	.Lfunc_begin21
	.quad	.Lfunc_end21
	.quad	.Lfunc_begin22
	.quad	.Lfunc_end22
	.quad	.Lfunc_begin23
	.quad	.Lfunc_end23
	.quad	.Lfunc_begin24
	.quad	.Lfunc_end24
	.quad	.Lfunc_begin25
	.quad	.Lfunc_end25
	.quad	.Lfunc_begin26
	.quad	.Lfunc_end26
	.quad	.Lfunc_begin27
	.quad	.Lfunc_end27
	.quad	.Lfunc_begin28
	.quad	.Lfunc_end28
	.quad	.Lfunc_begin29
	.quad	.Lfunc_end29
	.quad	.Lfunc_begin30
	.quad	.Lfunc_end30
	.quad	.Lfunc_begin31
	.quad	.Lfunc_end31
	.quad	.Lfunc_begin32
	.quad	.Lfunc_end32
	.quad	.Lfunc_begin33
	.quad	.Lfunc_end33
	.quad	.Lfunc_begin34
	.quad	.Lfunc_end34
	.quad	.Lfunc_begin35
	.quad	.Lfunc_end35
	.quad	.Lfunc_begin36
	.quad	.Lfunc_end36
	.quad	.Lfunc_begin37
	.quad	.Lfunc_end37
	.quad	.Lfunc_begin38
	.quad	.Lfunc_end38
	.quad	.Lfunc_begin39
	.quad	.Lfunc_end39
	.quad	.Lfunc_begin40
	.quad	.Lfunc_end40
	.quad	.Lfunc_begin41
	.quad	.Lfunc_end41
	.quad	.Lfunc_begin42
	.quad	.Lfunc_end42
	.quad	.Lfunc_begin43
	.quad	.Lfunc_end43
	.quad	.Lfunc_begin44
	.quad	.Lfunc_end44
	.quad	.Lfunc_begin45
	.quad	.Lfunc_end45
	.quad	.Lfunc_begin46
	.quad	.Lfunc_end46
	.quad	.Lfunc_begin47
	.quad	.Lfunc_end47
	.quad	.Lfunc_begin48
	.quad	.Lfunc_end48
	.quad	.Lfunc_begin49
	.quad	.Lfunc_end49
	.quad	.Lfunc_begin50
	.quad	.Lfunc_end50
	.quad	.Lfunc_begin51
	.quad	.Lfunc_end51
	.quad	.Lfunc_begin52
	.quad	.Lfunc_end52
	.quad	.Lfunc_begin53
	.quad	.Lfunc_end53
	.quad	.Lfunc_begin54
	.quad	.Lfunc_end54
	.quad	.Lfunc_begin55
	.quad	.Lfunc_end55
	.quad	.Lfunc_begin56
	.quad	.Lfunc_end56
	.quad	.Lfunc_begin57
	.quad	.Lfunc_end57
	.quad	.Lfunc_begin58
	.quad	.Lfunc_end58
	.quad	.Lfunc_begin59
	.quad	.Lfunc_end59
	.quad	.Lfunc_begin60
	.quad	.Lfunc_end60
	.quad	.Lfunc_begin61
	.quad	.Lfunc_end61
	.quad	.Lfunc_begin62
	.quad	.Lfunc_end62
	.quad	.Lfunc_begin63
	.quad	.Lfunc_end63
	.quad	.Lfunc_begin64
	.quad	.Lfunc_end64
	.quad	.Lfunc_begin65
	.quad	.Lfunc_end65
	.quad	.Lfunc_begin66
	.quad	.Lfunc_end66
	.quad	.Lfunc_begin67
	.quad	.Lfunc_end67
	.quad	.Lfunc_begin68
	.quad	.Lfunc_end68
	.quad	.Lfunc_begin69
	.quad	.Lfunc_end69
	.quad	.Lfunc_begin70
	.quad	.Lfunc_end70
	.quad	.Lfunc_begin71
	.quad	.Lfunc_end71
	.quad	.Lfunc_begin72
	.quad	.Lfunc_end72
	.quad	.Lfunc_begin73
	.quad	.Lfunc_end73
	.quad	.Lfunc_begin74
	.quad	.Lfunc_end74
	.quad	.Lfunc_begin75
	.quad	.Lfunc_end75
	.quad	.Lfunc_begin76
	.quad	.Lfunc_end76
	.quad	.Lfunc_begin77
	.quad	.Lfunc_end77
	.quad	.Lfunc_begin78
	.quad	.Lfunc_end78
	.quad	.Lfunc_begin79
	.quad	.Lfunc_end79
	.quad	.Lfunc_begin80
	.quad	.Lfunc_end80
	.quad	.Lfunc_begin81
	.quad	.Lfunc_end81
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.byte	0
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0
.LpubNames_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	17921
	.long	6141
	.asciz	"cmd.BuildAAR..func2"
	.long	6670
	.asciz	"cmd.ShouldPrint..1command_line_arguments.Flags"
	.long	7759
	.asciz	"cmd.Bind"
	.long	12316
	.asciz	"cmd.Init"
	.long	42
	.asciz	"runtime.writeBarrier"
	.long	2351
	.asciz	"os.Stderr"
	.long	5687
	.asciz	"cmd.BuildAAR"
	.long	3211
	.asciz	"cmd.ValidateAndroidInstall"
	.long	12836
	.asciz	"cmd.command_line_arguments..thunk10"
	.long	10924
	.asciz	"cmd.GoEnv"
	.long	10311
	.asciz	"cmd.DarwinAmd64Env"
	.long	7625
	.asciz	"cmd.PackageDir"
	.long	9895
	.asciz	"cmd.WriteFile"
	.long	5624
	.asciz	"cmd.GetAndroidABI"
	.long	6248
	.asciz	"cmd.BuildJar"
	.long	7521
	.asciz	"cmd.Build"
	.long	10488
	.asciz	"cmd.command_line_arguments.Bind.archPath..eq"
	.long	11767
	.asciz	"cmd.MergeEnviron"
	.long	9459
	.asciz	"cmd.ImportAll"
	.long	883
	.asciz	"go_build.Default"
	.long	4827
	.asciz	"cmd.ndkHostTag"
	.long	6184
	.asciz	"cmd.bootClasspath"
	.long	13620
	.asciz	"cmd.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..hash"
	.long	4016
	.asciz	"cmd.IsDir"
	.long	4320
	.asciz	"cmd.IsFile"
	.long	9308
	.asciz	"cmd.GoVersion"
	.long	10415
	.asciz	"cmd.command_line_arguments.Bind.archPath..hash"
	.long	2843
	.asciz	"cmd.validateAndroidInstall"
	.long	2335
	.asciz	"command_line_arguments.BindFile"
	.long	12009
	.asciz	"cmd.WriteFile..func1"
	.long	5389
	.asciz	"cmd.clangPath..1command_line_arguments.ndkToolchain"
	.long	11934
	.asciz	"cmd.RemoveAll"
	.long	12075
	.asciz	"cmd.WriteFile..func2"
	.long	3658
	.asciz	"cmd.NDKPath"
	.long	4899
	.asciz	"cmd.AndroidEnv"
	.long	4141
	.asciz	"cmd.ReadDirNames"
	.long	64
	.asciz	"io_ioutil.Discard"
	.long	8719
	.asciz	"cmd._validateGoInstall"
	.long	6730
	.asciz	"cmd.command_line_arguments.Flags..hash"
	.long	6966
	.asciz	"cmd.Mkdir"
	.long	5552
	.asciz	"cmd.command_line_arguments.ndkToolchain..eq"
	.long	8780
	.asciz	"cmd.validateGoInstall"
	.long	8933
	.asciz	"cmd.NewTmpDir"
	.long	9412
	.asciz	"cmd.Getwd"
	.long	9114
	.asciz	"cmd.MatchaPkgPath"
	.long	10761
	.asciz	"cmd.CopyFile"
	.long	3777
	.asciz	"cmd.LookPath"
	.long	5299
	.asciz	"cmd.isystem..1command_line_arguments.ndkToolchain"
	.long	5434
	.asciz	"cmd.clangppPath..1command_line_arguments.ndkToolchain"
	.long	11398
	.asciz	"cmd.ShouldRun..1command_line_arguments.Flags"
	.long	5344
	.asciz	"cmd.ldsysroot..1command_line_arguments.ndkToolchain"
	.long	5479
	.asciz	"cmd.command_line_arguments.ndkToolchain..hash"
	.long	11273
	.asciz	"cmd.FindEnv"
	.long	13693
	.asciz	"cmd.struct.4Size.0uint32.2Mallocs.0uint64.2Frees.0uint64.5..eq"
	.long	9999
	.asciz	"cmd.DarwinArmEnv"
	.long	13220
	.asciz	"cmd.PkgPath"
	.long	6098
	.asciz	"cmd.command_line_arguments..thunk0"
	.long	6614
	.asciz	"cmd.command_line_arguments..thunk1"
	.long	3399
	.asciz	"cmd.AndroidPlatformPath"
	.long	7340
	.asciz	"cmd.command_line_arguments..thunk2"
	.long	9073
	.asciz	"cmd.command_line_arguments..thunk3"
	.long	10560
	.asciz	"cmd.Bind..func1"
	.long	9749
	.asciz	"cmd.validateXcodeInstall"
	.long	10660
	.asciz	"cmd.command_line_arguments..thunk4"
	.long	12034
	.asciz	"cmd.command_line_arguments..thunk5"
	.long	12100
	.asciz	"cmd.command_line_arguments..thunk6"
	.long	12166
	.asciz	"cmd.command_line_arguments..thunk7"
	.long	9233
	.asciz	"cmd.ReadFile"
	.long	12260
	.asciz	"cmd.command_line_arguments..thunk9"
	.long	12141
	.asciz	"cmd.CopyFile..func1"
	.long	12207
	.asciz	"cmd.command_line_arguments..thunk8"
	.long	13369
	.asciz	"cmd.Import"
	.long	5209
	.asciz	"cmd.gccToolchain..1command_line_arguments.ndkToolchain"
	.long	10701
	.asciz	"cmd.ArchClang"
	.long	11437
	.asciz	"cmd.OutputCmd"
	.long	4445
	.asciz	"cmd.toolchainForArch"
	.long	6875
	.asciz	"cmd.BuildJar..func1"
	.long	6803
	.asciz	"cmd.command_line_arguments.Flags..eq"
	.long	7041
	.asciz	"cmd.RunCmd"
	.long	3956
	.asciz	"cmd.GetEnv"
	.long	7203
	.asciz	"cmd.BuildJar..func3"
	.long	11064
	.asciz	"cmd.GoBuild"
	.long	7160
	.asciz	"cmd.BuildJar..func2"
	.long	13056
	.asciz	"cmd.EnvClang"
	.long	10207
	.asciz	"cmd.Darwin386Env"
	.long	3852
	.asciz	"cmd.AndroidSDKPath"
	.long	2828
	.asciz	"os.Stdout"
	.long	13765
	.asciz	"cmd.command_line_arguments..import"
	.long	9701
	.asciz	"cmd._validateXcodeInstall"
	.long	7396
	.asciz	"cmd.ParseTargets"
	.long	10103
	.asciz	"cmd.DarwinArm64Env"
	.long	12877
	.asciz	"cmd.InstallPkg"
	.long	5254
	.asciz	"cmd.csysroot..1command_line_arguments.ndkToolchain"
	.long	6072
	.asciz	"cmd.BuildAAR..func1"
	.long	0
.LpubNames_end0:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0
.LpubTypes_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	17921
	.long	17371
	.asciz	"struct{*_type,*func(*void)error}"
	.long	17532
	.asciz	"struct{*struct{*string,int,int},int,int}"
	.long	4865
	.asciz	"struct{string,error}"
	.long	16535
	.asciz	"struct{*uintptr,int,int}"
	.long	449
	.asciz	"bool"
	.long	13991
	.asciz	"Package"
	.long	514
	.asciz	"uncommonType"
	.long	3168
	.asciz	"Mutex"
	.long	15945
	.asciz	"Reader"
	.long	2197
	.asciz	"struct{ReadCloser,error}"
	.long	2601
	.asciz	".internal/poll.fdMutex"
	.long	13900
	.asciz	"struct{struct{**Package,int,int},error}"
	.long	2080
	.asciz	"FileMode"
	.long	4820
	.asciz	"uint16"
	.long	1357
	.asciz	"struct{string,bool}"
	.long	836
	.asciz	"struct{*uint8,int,int}"
	.long	14574
	.asciz	"struct{string,string,error}"
	.long	15332
	.asciz	"struct{*_type,*func(*void)int,*func(*void)void,*func(*void)int,*func(*void,struct{*uint8,int,int})struct{*uint8,int,int},*func(*void)uint32,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	17405
	.asciz	"struct{**__go_descriptor,int,int}"
	.long	1749
	.asciz	"int64"
	.long	2730
	.asciz	"Iovec"
	.long	466
	.asciz	"string"
	.long	2650
	.asciz	".internal/poll.pollDesc"
	.long	563
	.asciz	"struct{*method,int,int}"
	.long	17695
	.asciz	"struct{*Flags,string}"
	.long	2399
	.asciz	".os.file"
	.long	16020
	.asciz	"struct{**File,int,int}"
	.long	13866
	.asciz	"struct{struct{*uint8,int,int},error}"
	.long	1469
	.asciz	"struct{*FileInfo,int,int}"
	.long	17063
	.asciz	"Context"
	.long	14768
	.asciz	"struct{**.archive/zip.header,int,int}"
	.long	14866
	.asciz	"FileHeader"
	.long	2474
	.asciz	"FD"
	.long	502
	.asciz	"int"
	.long	2678
	.asciz	"struct{*Iovec,int,int}"
	.long	17248
	.asciz	"__go_channel"
	.long	786
	.asciz	"struct{*_type,*func(*void)string}"
	.long	17330
	.asciz	"Closer"
	.long	16434
	.asciz	"struct{*SysProcIDMap,int,int}"
	.long	16592
	.asciz	"Process"
	.long	3093
	.asciz	"Logger"
	.long	159
	.asciz	"_type"
	.long	1950
	.asciz	"struct{*.time.zoneTrans,int,int}"
	.long	57
	.asciz	"uint32"
	.long	16795
	.asciz	"Rusage"
	.long	17505
	.asciz	"struct{*File}"
	.long	4587
	.asciz	".command-line-arguments.ndkToolchain"
	.long	17013
	.asciz	"Timeval"
	.long	15670
	.asciz	"Cmd"
	.long	17056
	.asciz	"Timeval_usec_t"
	.long	325
	.asciz	"uintptr"
	.long	17824
	.asciz	"Buffer"
	.long	15102
	.asciz	".archive/zip.fileWriter"
	.long	16486
	.asciz	"SysProcIDMap"
	.long	17906
	.asciz	".bytes.readOp"
	.long	2371
	.asciz	"File"
	.long	615
	.asciz	"method"
	.long	16734
	.asciz	"ProcessState"
	.long	1901
	.asciz	".time.zone"
	.long	2922
	.asciz	"Flags"
	.long	16077
	.asciz	"SysProcAttr"
	.long	2119
	.asciz	"struct{*_type,*void}"
	.long	15203
	.asciz	"WriteCloser"
	.long	15600
	.asciz	"struct{*__go_descriptor}"
	.long	16375
	.asciz	"struct{*uint32,int,int}"
	.long	16654
	.asciz	"RWMutex"
	.long	711
	.asciz	"struct{int,error}"
	.long	1521
	.asciz	"FileInfo"
	.long	1129
	.asciz	"struct{*string,int,int}"
	.long	2002
	.asciz	".time.zoneTrans"
	.long	17780
	.asciz	"__go_descriptor"
	.long	17584
	.asciz	"struct{*.command-line-arguments.archPath,int,int}"
	.long	17104
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,struct{*_type,*void})struct{*_type,*void}}"
	.long	4693
	.asciz	"runtime.hmap"
	.long	16783
	.asciz	"WaitStatus"
	.long	16313
	.asciz	"Credential"
	.long	17049
	.asciz	"Timeval_sec_t"
	.long	17729
	.asciz	"ImportMode"
	.long	2766
	.asciz	"Iovec_len_t"
	.long	745
	.asciz	"error"
	.long	1742
	.asciz	"uint64"
	.long	13934
	.asciz	"struct{**Package,int,int}"
	.long	3204
	.asciz	"int32"
	.long	393
	.asciz	"void"
	.long	1435
	.asciz	"struct{struct{*FileInfo,int,int},error}"
	.long	332
	.asciz	"uint8"
	.long	14626
	.asciz	"Writer"
	.long	1562
	.asciz	"struct{*_type,*func(*void)bool,*func(*void)Time,*func(*void)FileMode,*func(*void)string,*func(*void)int64,*func(*void)struct{*_type,*void}}"
	.long	13794
	.asciz	"struct{struct{*string,int,int},error}"
	.long	17278
	.asciz	"struct{*Closer,int,int}"
	.long	17636
	.asciz	".command-line-arguments.archPath"
	.long	17193
	.asciz	"struct{Time,bool}"
	.long	2231
	.asciz	"ReadCloser"
	.long	14732
	.asciz	".archive/zip.countWriter"
	.long	15244
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	2778
	.asciz	".os.dirInfo"
	.long	14825
	.asciz	".archive/zip.header"
	.long	15291
	.asciz	"Hash32"
	.long	15986
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	1693
	.asciz	"Time"
	.long	13830
	.asciz	"struct{Writer,error}"
	.long	4548
	.asciz	"struct{*.command-line-arguments.ndkToolchain,error}"
	.long	17741
	.asciz	"struct{*__go_descriptor,struct{*string,int,int}}"
	.long	17913
	.asciz	"Duration"
	.long	1761
	.asciz	"Location"
	.long	1849
	.asciz	"struct{*.time.zone,int,int}"
	.long	16427
	.asciz	"Signal"
	.long	2819
	.asciz	"DIR"
	.long	0
.LpubTypes_end0:

	.section	".note.GNU-split-stack","",@progbits
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
