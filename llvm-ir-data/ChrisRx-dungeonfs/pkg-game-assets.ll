; ModuleID = 'gomodule'
source_filename = "gomodule"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.section \22.go_export\22,\22e\22,@progbits"
module asm "\09.ascii \22v2;\5Cn\22"
module asm "\09.ascii \22package \22"
module asm "\09.ascii \22assets\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22pkgpath \22"
module asm "\09.ascii \22command-line-arguments\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22eval\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/eval\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/eval\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22fs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/game/fs\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/game/fs\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22core\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/game/fs/core\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/game/fs/core\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22logging\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/logging\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/ChrisRx/dungeonfs/pkg/logging\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22ast\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go/ast\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22go/ast\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22parser\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go/parser\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22go/parser\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go/token\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22go/token\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22yaml\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22gopkg.in/yaml.v2\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22gopkg.in/yaml.v2\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22init\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22assets\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22command_line_arguments..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fuse\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bazil_org_fuse..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bazil_org_fuse_fs..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22base64\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_base64..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22binary\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_binary..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22json\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_json..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22eval\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_ChrisRx_dungeonfs_pkg_eval..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22core\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_ChrisRx_dungeonfs_pkg_game_fs_core..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22logging\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_ChrisRx_dungeonfs_pkg_logging..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ast\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_ast..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22parser\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_parser..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22scanner\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_scanner..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22go_token..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22golang_org_x_net_context..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22yaml\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22gopkg_in_yaml_v2..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_poll..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22testlog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_testlog..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io_ioutil..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22exec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os_exec..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22signal\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os_signal..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path_filepath..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syntax\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp_syntax..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime_internal_sys..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode..import\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22init_graph\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2240\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2239\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22const \22"
module asm "\09.ascii \22BaseComponent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1 \22"
module asm "\09.ascii \22\5C\22ComponentType\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 2 \22"
module asm "\09.ascii \22\5C\22Component\5C\22 \22"
module asm "\09.ascii \22<type 3 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.attrs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 4 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 5 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.bases\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 6 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 7 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 8 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 2>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Base\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bases\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 9 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 10 \22"
module asm "\09.ascii \22\5C\22Components\5C\22 \22"
module asm "\09.ascii \22<type 11 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LookupBaseType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 8>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22const \22"
module asm "\09.ascii \22DirComponent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 12 \22"
module asm "\09.ascii \22\5C\22Entity\5C\22 \22"
module asm "\09.ascii \22<type 13 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 14 \22"
module asm "\09.ascii \22\5C\22github.com/ChrisRx/dungeonfs/pkg/game/fs.Node\5C\22 \22"
module asm "\09.ascii \22<type 15 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 16 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse/fs.Node\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22fs\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 17 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Attr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18 \22"
module asm "\09.ascii \22\5C\22golang.org/x/net/context.Context\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \22<type 19 \22"
module asm "\09.ascii \22\5C\22context.Context\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 20 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Deadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22deadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21 \22"
module asm "\09.ascii \22\5C\22time.Time\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 22 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.wall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.ext\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 24 \22"
module asm "\09.ascii \22\5C\22time.Location\5C\22 \22"
module asm "\09.ascii \22<type 25 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.zone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 26 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 27 \22"
module asm "\09.ascii \22\5C\22.time.zone\5C\22 \22"
module asm "\09.ascii \22<type 28 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.tx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 29 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 30 \22"
module asm "\09.ascii \22\5C\22.time.zoneTrans\5C\22 \22"
module asm "\09.ascii \22<type 31 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.when\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isstd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isutc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheStart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheEnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheZone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 27>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 24>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.firstZoneUsed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22unix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22start\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22end\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupFirstZone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22YearDay\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnixNano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 34 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanosecond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobDecode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.locabs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.stripMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.abs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Zone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 37 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Weekday\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38 \22"
module asm "\09.ascii \22\5C\22time.Weekday\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Location\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.sec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40 \22"
module asm "\09.ascii \22\5C\22time.Duration\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanoseconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minutes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hours\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Day\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 41 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Local\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22After\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.addSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setLoc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobEncode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 42 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Before\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.unixSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43 \22"
module asm "\09.ascii \22\5C\22time.Month\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 44 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 45 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsZero\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Format\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Year\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UTC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22full\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22yday\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ISOWeek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22week\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AppendFormat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 46 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 47 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.nsec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddDate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22years\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22months\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22days\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Month\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Second\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 35>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.mono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Clock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hour\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22min\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hour\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Done\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 48 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<- \22"
module asm "\09.ascii \22<type 49 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Err\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 50 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 51 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22attr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 53 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.Attr\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22fuse\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 54 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Valid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Inode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Blocks\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Atime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ctime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Crtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55 \22"
module asm "\09.ascii \22\5C\22os.FileMode\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsRegular\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Perm\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nlink\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Rdev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BlockSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 56 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.attr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22out\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 57 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 58 \22"
module asm "\09.ascii \22\5C\22.bazil.org/fuse.attr\5C\22 \22"
module asm "\09.ascii \22<type 59 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Ino\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Blocks\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Atime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ctime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AtimeNsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MtimeNsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22CtimeNsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nlink\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Rdev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Blksize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.padding\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Crtime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetCrtime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ns\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22proto\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.Protocol\5C\22 \22"
module asm "\09.ascii \22<type 62 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Major\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Minor\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.is710\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.is712\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GE\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HasUmask\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HasInvalidate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LT\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.is79\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HasGetattrFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HasAttrBlockSize\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HasOpenNonSeekable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HasReadWriteFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22New\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63 \22"
module asm "\09.ascii \22\5C\22github.com/ChrisRx/dungeonfs/pkg/game/fs.NodeType\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MetaData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 64 \22"
module asm "\09.ascii \22\5C\22github.com/ChrisRx/dungeonfs/pkg/game/fs.NodeMetaData\5C\22 \22"
module asm "\09.ascii \22<type 65 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 66 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GetString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GetBool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GetBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 67 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 68 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Iter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 69 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 70 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Path\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Content\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 71 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Parent\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Children\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 72 \22"
module asm "\09.ascii \22\5C\22github.com/ChrisRx/dungeonfs/pkg/game/fs.Nodes\5C\22 \22"
module asm "\09.ascii \22<type 73 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Iter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 74 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Directories\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 75 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Files\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Delete\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Exists\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Delete\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Entry\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 77 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.Dirent\5C\22 \22"
module asm "\09.ascii \22<type 78 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Inode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.DirentType\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22const \22"
module asm "\09.ascii \22FileComponent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 80 \22"
module asm "\09.ascii \22\5C\22Level\5C\22 \22"
module asm "\09.ascii \22<type 81 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.root\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.objects\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 82 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.paths\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 82>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.properties\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 84 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 85 \22"
module asm "\09.ascii \22\5C\22PropertyFunc\5C\22 \22"
module asm "\09.ascii \22<type 86 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 87 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 88 \22"
module asm "\09.ascii \22\5C\22reflect.Value\5C\22 \22"
module asm "\09.ascii \22<type 89 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 90 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 91 \22"
module asm "\09.ascii \22\5C\22.reflect.rtype\5C\22 \22"
module asm "\09.ascii \22<type 92 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hash\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.align\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.fieldAlign\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect._\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hashfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 93 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94 \22"
module asm "\09.ascii \22\5C\22unsafe.Pointer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22unsafe\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 95 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22any\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.equalfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 96 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.gcdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.string\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 99 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 100 \22"
module asm "\09.ascii \22\5C\22.reflect.uncommonType\5C\22 \22"
module asm "\09.ascii \22<type 101 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.methods\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 102 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 103 \22"
module asm "\09.ascii \22\5C\22.reflect.method\5C\22 \22"
module asm "\09.ascii \22<type 104 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 98>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.mtyp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 91>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.tfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 100>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrToThis\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107 \22"
module asm "\09.ascii \22\5C\22reflect.Type\5C\22 \22"
module asm "\09.ascii \22<type 108 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109 \22"
module asm "\09.ascii \22\5C\22reflect.Method\5C\22 \22"
module asm "\09.ascii \22<type 110 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Func\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111 \22"
module asm "\09.ascii \22\5C\22reflect.Kind\5C\22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 112 \22"
module asm "\09.ascii \22\5C\22reflect.ChanDir\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 112>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113 \22"
module asm "\09.ascii \22\5C\22reflect.StructField\5C\22 \22"
module asm "\09.ascii \22<type 114 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 115 \22"
module asm "\09.ascii \22\5C\22reflect.StructTag\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 115>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 115>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 116 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Anonymous\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 117 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 118 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 119 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 91>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.exportedMethods\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointers\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 112>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ptrTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x4a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 123 \22"
module asm "\09.ascii \22\5C\22.reflect.flag\5C\22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeAssignable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ro\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBe\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22expected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 123>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeExported\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Convert\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TryRecv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice3\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetPointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TrySend\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetCap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.setRunes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 124 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Float\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CallSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 125 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 126 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.assignTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dst\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 90>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22target\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 129 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 130 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22selected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanSet\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 131 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Complex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.runes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 132 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InterfaceData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 133 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnsafeAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsNil\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 134 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 136 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapKeys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 137 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetMapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 88>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 139 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 80>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Root\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 141 \22"
module asm "\09.ascii \22\5C\22github.com/ChrisRx/dungeonfs/pkg/game/fs/core.Directory\5C\22 \22"
module asm "\09.ascii \22<type 142 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 143 \22"
module asm "\09.ascii \22\5C\22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node\5C\22 \22"
module asm "\09.ascii \22<type 144 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.inode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.metadata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145 \22"
module asm "\09.ascii \22\5C\22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.nodeMetaData\5C\22 \22"
module asm "\09.ascii \22<type 146 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 147 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 148 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GetBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 149 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Iter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 150 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 151 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GetString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 152 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GetBool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.parent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 153 \22"
module asm "\09.ascii \22\5C\22.github.com/ChrisRx/dungeonfs/pkg/game/fs/core.nodes\5C\22 \22"
module asm "\09.ascii \22<type 154 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Delete\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Iter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 155 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Directories\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Exists\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 153>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Files\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Entry\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 77>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MetaData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 64>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Children\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 72>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Delete\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Path\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Content\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 159 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 158>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Parent\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 141>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadAll\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Attr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NewFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 162 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 163 \22"
module asm "\09.ascii \22\5C\22github.com/ChrisRx/dungeonfs/pkg/game/fs/core.File\5C\22 \22"
module asm "\09.ascii \22<type 164 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 163>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fsync\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 166 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 167 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.FsyncRequest\5C\22 \22"
module asm "\09.ascii \22<type 168 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.Header\5C\22 \22"
module asm "\09.ascii \22<type 170 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 172 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.Conn\5C\22 \22"
module asm "\09.ascii \22<type 173 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Ready\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<- \22"
module asm "\09.ascii \22<type 175 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MountError\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.dev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 177 \22"
module asm "\09.ascii \22\5C\22os.File\5C\22 \22"
module asm "\09.ascii \22<type 178 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 179 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 180 \22"
module asm "\09.ascii \22\5C\22.os.file\5C\22 \22"
module asm "\09.ascii \22<type 181 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.os.pfd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 182 \22"
module asm "\09.ascii \22\5C\22internal/poll.FD\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 183 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.internal/poll.fdmu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 184 \22"
module asm "\09.ascii \22\5C\22.internal/poll.fdMutex\5C\22 \22"
module asm "\09.ascii \22<type 185 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.internal/poll.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.rsema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.wsema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 186 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 184>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.rwunlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22read\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 186>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.increfAndClose\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 186>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.rwlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22read\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 186>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.decref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 186>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.incref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Sysfd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 187 \22"
module asm "\09.ascii \22\5C\22.internal/poll.pollDesc\5C\22 \22"
module asm "\09.ascii \22<type 188 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.internal/poll.runtimeCtx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 187>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.prepareWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.evict\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.wait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 190 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 182>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.pollable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.prepare\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.waitRead\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.prepareRead\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.waitWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22pd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.waitCanceled\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.iovecs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 191 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 192 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 193 \22"
module asm "\09.ascii \22\5C\22syscall.Iovec\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 194 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 195 \22"
module asm "\09.ascii \22\5C\22syscall.Iovec_len_t\5C\22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22iov\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 196 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 193>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.csema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsStream\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ZeroReadIsEOF\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.isFile\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.internal/poll.isBlocking\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 182>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fchmod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.readLock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.eofError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22arg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RawWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 198 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pwrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 199 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 200 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 202 \22"
module asm "\09.ascii \22\5C\22syscall.Sockaddr\5C\22 \22"
module asm "\09.ascii \22<type 203 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22.syscall.sockaddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ptr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 204 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 205 \22"
module asm "\09.ascii \22\5C\22syscall.RawSockaddrAny\5C\22 \22"
module asm "\09.ascii \22<type 206 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 207 \22"
module asm "\09.ascii \22\5C\22syscall.RawSockaddr\5C\22 \22"
module asm "\09.ascii \22<type 208 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Family\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 209 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Pad\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 210 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2296\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211 \22"
module asm "\09.ascii \22\5C\22syscall.Socklen_t\5C\22 \22"
module asm "\09.ascii \22<type 212 \22"
module asm "\09.ascii \22\5C\22.syscall._socklen_t\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22whence\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteMsg\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 213 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22oob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sa\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 202>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22arg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptIPMreq\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mreq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 216 \22"
module asm "\09.ascii \22\5C\22syscall.IPMreq\5C\22 \22"
module asm "\09.ascii \22<type 217 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Multiaddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 218 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptIPMreqn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mreq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 220 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 221 \22"
module asm "\09.ascii \22\5C\22syscall.IPMreqn\5C\22 \22"
module asm "\09.ascii \22<type 222 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Multiaddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 223 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Address\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ifindex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RawControl\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptInet4Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22arg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 226 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptIPv6Mreq\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mreq\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 227 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 228 \22"
module asm "\09.ascii \22\5C\22syscall.IPv6Mreq\5C\22 \22"
module asm "\09.ascii \22<type 229 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Multiaddr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 230 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadMsg\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 231 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22oob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 232 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 202>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Writev\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 233 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 234 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 235 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RawRead\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteOnce\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 237 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fstat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 238 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 239 \22"
module asm "\09.ascii \22\5C\22syscall.Stat_t\5C\22 \22"
module asm "\09.ascii \22<type 240 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Dev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ino\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nlink\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.syscall.__pad0\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Rdev\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Blksize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Blocks\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Atim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241 \22"
module asm "\09.ascii \22\5C\22syscall.Timespec\5C\22 \22"
module asm "\09.ascii \22<type 242 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 243 \22"
module asm "\09.ascii \22\5C\22syscall.Timespec_sec_t\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244 \22"
module asm "\09.ascii \22\5C\22syscall.Timespec_nsec_t\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 245 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 241>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ts\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 245>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nsec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mtim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Ctim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.syscall.__glibc_reserved\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 246 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Accept\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 202>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fsync\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pread\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22pollable\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadDirent\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 248 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBlocking\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Shutdown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22how\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WaitWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadFrom\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 249 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 202>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.writeUnlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 250 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fchown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.destroy\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Ftruncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.incref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.writeLock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.decref\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.internal/poll.readUnlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fchdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetsockoptLinger\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22level\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 251 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 252 \22"
module asm "\09.ascii \22\5C\22syscall.Linger\5C\22 \22"
module asm "\09.ascii \22<type 253 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Onoff\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Linger\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.dirinfo\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 254 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 255 \22"
module asm "\09.ascii \22\5C\22.os.dirInfo\5C\22 \22"
module asm "\09.ascii \22<type 256 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.os.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 257 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 258 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 259 \22"
module asm "\09.ascii \22\5C\22syscall.DIR\5C\22 \22"
module asm "\09.ascii \22<type 260 \22"
module asm "\09.ascii \22\5C\22.syscall._DIR\5C\22 \22"
module asm "\09.ascii \22<type 261 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.nonblock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.os.stdoutOrErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 262 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 180>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 177>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.wrapErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.checkValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.chmod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.readdirnames\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22names\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 264 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.setDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 265 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Chmod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Chdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.setReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22whence\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteAt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 266 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.setWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.seek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22whence\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Stat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267 \22"
module asm "\09.ascii \22\5C\22os.FileInfo\5C\22 \22"
module asm "\09.ascii \22<type 268 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ModTime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Sys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 269 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 270 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 271 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Readdirnames\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22names\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 272 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.readdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22fi\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Chown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fd\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.pread\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 274 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadAt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 275 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Readdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.os.pwrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 277 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 278 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sync\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.wio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 279 \22"
module asm "\09.ascii \22\5C\22sync.RWMutex\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 280 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 281 \22"
module asm "\09.ascii \22\5C\22sync.Mutex\5C\22 \22"
module asm "\09.ascii \22<type 282 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.sema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 283 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 281>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 283>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.writerSem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerSem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerCount\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.readerWait\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 279>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RUnlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RLocker\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285 \22"
module asm "\09.ascii \22\5C\22sync.Locker\5C\22 \22"
module asm "\09.ascii \22<type 286 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22rw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RLock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.rio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 279>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.proto\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 172>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadRequest\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 288 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.Request\5C\22 \22"
module asm "\09.ascii \22<type 289 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Hdr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RespondError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.fd\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Protocol\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.writeToKernel\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22msg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 291 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InvalidateEntry\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22parent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 292 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.NodeID\5C\22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 292>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InvalidateNode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22nodeID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 292>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.sendInvalidate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22msg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22msg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 294 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 295 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.RequestID\5C\22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 295>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 292>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Pid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.msg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 296 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 297 \22"
module asm "\09.ascii \22\5C\22.bazil.org/fuse.message\5C\22 \22"
module asm "\09.ascii \22<type 298 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.bazil.org/fuse.conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 299 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 300 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 301 \22"
module asm "\09.ascii \22\5C\22.bazil.org/fuse.inHeader\5C\22 \22"
module asm "\09.ascii \22<type 302 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Opcode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Unique\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Nodeid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Pid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse._\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bazil.org/fuse.off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 303 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 297>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 303>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.data\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 94>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 303>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 304 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 303>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Header\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RespondError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.noResponse\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22msg\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 306 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hdr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Handle\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.HandleID\5C\22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 308 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 167>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 308>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 310 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.WriteRequest\5C\22 \22"
module asm "\09.ascii \22<type 311 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Handle\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 313 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.WriteFlags\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 313>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LockOwner\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FileFlags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.OpenFlags\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsReadOnly\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsWriteOnly\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsReadWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 317 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.WriteResponse\5C\22 \22"
module asm "\09.ascii \22<type 318 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 317>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 320 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Attr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Content\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 321 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadAll\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 324 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.ReadRequest\5C\22 \22"
module asm "\09.ascii \22<type 325 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Handle\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 326 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.ReadFlags\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 326>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LockOwner\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FileFlags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 327 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 324>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 327>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 328 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 329 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.ReadResponse\5C\22 \22"
module asm "\09.ascii \22<type 330 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 331 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 332 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 329>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 332>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 333 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 328>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Open\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 335 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.OpenRequest\5C\22 \22"
module asm "\09.ascii \22<type 336 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 335>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 339 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.OpenResponse\5C\22 \22"
module asm "\09.ascii \22<type 340 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Handle\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 341 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.OpenResponseFlags\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 341>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 342 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 342>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse/fs.Handle\5C\22 \22"
module asm "\09.ascii \22<type 344 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Setattr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 345 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 346 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.SetattrRequest\5C\22 \22"
module asm "\09.ascii \22<type 347 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Valid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.SetattrValid\5C\22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MtimeNow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Handle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LockOwner\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Chgtime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Mtime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Atime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Crtime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bkuptime\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AtimeNow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22fl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Handle\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Atime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Uid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Gid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Bkuptime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Chgtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Crtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 349 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 346>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 349>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 351 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.SetattrResponse\5C\22 \22"
module asm "\09.ascii \22<type 352 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Attr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 351>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22New\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 165>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Getxattr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 354 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 355 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.GetxattrRequest\5C\22 \22"
module asm "\09.ascii \22<type 356 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Position\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 357 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 355>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 357>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 358 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 359 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.GetxattrResponse\5C\22 \22"
module asm "\09.ascii \22<type 360 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Xattr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 361 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 362 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 359>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 358>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NewDirectory\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Create\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 364 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.CreateRequest\5C\22 \22"
module asm "\09.ascii \22<type 365 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Umask\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 366 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 364>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 366>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 367 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 368 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.CreateResponse\5C\22 \22"
module asm "\09.ascii \22<type 369 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 370 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.LookupResponse\5C\22 \22"
module asm "\09.ascii \22<type 371 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 292>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Generation\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22EntryValid\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Attr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 372 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 370>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bazil.org/fuse.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 372>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 373 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 368>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 367>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Flush\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 375 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.FlushRequest\5C\22 \22"
module asm "\09.ascii \22<type 376 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Handle\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 307>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LockOwner\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 377 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 375>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 377>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadDirAll\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 378 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 77>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22New\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 63>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Remove\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 379 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 380 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.RemoveRequest\5C\22 \22"
module asm "\09.ascii \22<type 381 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Dir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 382 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 380>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 382>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Access\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 383 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 384 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.AccessRequest\5C\22 \22"
module asm "\09.ascii \22<type 385 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mask\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 386 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 384>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 386>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 387 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 388 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.LookupRequest\5C\22 \22"
module asm "\09.ascii \22<type 389 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 390 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 388>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 390>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 372>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 372>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Open\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 338>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 328>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 160>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Mkdir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22req\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 391 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 392 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.MkdirRequest\5C\22 \22"
module asm "\09.ascii \22<type 393 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22-\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Umask\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 55>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 394 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 392>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 394>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Respond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22resp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 395 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 396 \22"
module asm "\09.ascii \22\5C\22bazil.org/fuse.MkdirResponse\5C\22 \22"
module asm "\09.ascii \22<type 397 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 370>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 398 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 396>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 139>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.visit\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 139>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddProperty\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22attrName\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 399 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 139>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GetProperties\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 400 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22LoadFromFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22folder\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22New\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 401 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 402 \22"
module asm "\09.ascii \22\5C\22Resources\5C\22 \22"
module asm "\09.ascii \22<type 403 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.components\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 10>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.entities\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 404 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 405 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 80>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 406 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 402>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GetObject\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 406>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LoadFile\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 406>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LoadDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22folder\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 140>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewLevel\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22root\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22objects\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 407 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 12>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 139>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22var \22"
module asm "\09.ascii \22PkgLogger\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 408 \22"
module asm "\09.ascii \22\5C\22.command-line-arguments.logger\5C\22 \22"
module asm "\09.ascii \22<type 409 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Printf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 410 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 85>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 402>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22SetNodeAttr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22node\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 87>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22const \22"
module asm "\09.ascii \22UnknownComponent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22= \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22command_line_arguments..init0\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22checksum 77E2B1F0FBF25B14D372F880348E3ED43AA18EE2;\5Cn\22"
module asm "\09.text"

%_type.0 = type { i64, i64, i32, i8, i8, i8, %__go_descriptor.33*, %__go_descriptor.34*, i8*, { i8*, i64 }*, %uncommonType.0*, %_type.0* }
%__go_descriptor.33 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.34 = type { i8 (i8*, i8*, i8*)* }
%uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.39 }
%IPST.39 = type { %method.0*, i64, i64 }
%method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, %_type.0*, i8* }
%functionDescriptor.0 = type { i64 }
%PtrType.0 = type { %_type.0, %_type.0* }
%StructType.1 = type { %_type.0, %IPST.41 }
%IPST.41 = type { %structField.0*, i64, i64 }
%structField.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, { i8*, i64 }*, i64 }
%FuncType.1 = type { %_type.0, i8, %IPST.40, %IPST.40 }
%IPST.40 = type { %_type.0**, i64, i64 }
%SliceType.0 = type { %_type.0, %_type.0* }
%MapType.1 = type { %_type.0, %_type.0*, %_type.0*, %_type.0*, %_type.0*, i8, i8, i8, i8, i16, i8, i8 }
%InterfaceType.1 = type { %_type.0, %IPST.42 }
%IPST.42 = type { %imethod.0*, i64, i64 }
%imethod.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0* }
%ArrayType.1 = type { %_type.0, %_type.0*, %_type.0*, i64 }
%IPST.2 = type { { %_type.0*, i8* }*, i64, i64 }
%.command-line-arguments.logger.0 = type { { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*, i8* }
%Directory.0 = type { %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0" }
%".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0" = type { i64, { i8*, i64 }, i32, { i8*, i64 }, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %Node.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%Node.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, i8* }
%Dirent.0 = type { i64, i32, { i8*, i64 } }
%IPST.12 = type { %Node.0*, i64, i64 }
%IPST.5 = type { { i8*, i64 }*, i64, i64 }
%Attr.0 = type { i64, i64, i64, i64, %Time.0, %Time.0, %Time.0, %Time.0, i32, i32, i32, i32, i32, i32, i32 }
%Time.0 = type { i64, i64, %Location.0* }
%Location.0 = type { { i8*, i64 }, %IPST.37, %IPST.38, i64, i64, %.time.zone.0* }
%IPST.37 = type { %.time.zone.0*, i64, i64 }
%IPST.38 = type { %.time.zoneTrans.0*, i64, i64 }
%.time.zoneTrans.0 = type { i64, i8, i8, i8 }
%.time.zone.0 = type { { i8*, i64 }, i64, i8 }
%File.1 = type { %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0" }
%BlockStmt.0 = type { i64, %IPST.15, i64 }
%IPST.15 = type { %Stmt.0*, i64, i64 }
%Stmt.0 = type { { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }*, i8* }
%NullLogger.0 = type {}
%Component.0 = type { { i8*, i64 }, i64, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i8*, i64 }, %IPST.1 }
%IPST.1 = type { %Component.0**, i64, i64 }
%Resources.0 = type { { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %Level.0* }
%Level.0 = type { %Entity.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%Entity.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, i8* }
%error.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%IPST.13 = type { { i8*, i64 }*, %Component.0**, i8*, { i64, i8, i8, i16, i32, %IPST.0*, %IPST.0*, i64, i8* }*, %IPST.0*, %IPST.0*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.0 = type { [8 x i8], [8 x { i8*, i64 }], [8 x %Component.0*], i8* }
%IPST.6 = type { i8**, i64, i64 }
%IPST.4 = type { { i8*, i64 }*, { %_type.0*, i8* }*, i8*, { i64, i8, i8, i16, i32, { [8 x i8], [8 x { i8*, i64 }], [8 x { %_type.0*, i8* }], i8* }*, { [8 x i8], [8 x { i8*, i64 }], [8 x { %_type.0*, i8* }], i8* }*, i64, i8* }*, { [8 x i8], [8 x { i8*, i64 }], [8 x { %_type.0*, i8* }], i8* }*, { [8 x i8], [8 x { i8*, i64 }], [8 x { %_type.0*, i8* }], i8* }*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.11 = type { { i8*, i64 }*, %Entity.0*, i8*, { i64, i8, i8, i16, i32, { [8 x i8], [8 x { i8*, i64 }], [8 x %Entity.0], i8* }*, { [8 x i8], [8 x { i8*, i64 }], [8 x %Entity.0], i8* }*, i64, i8* }*, { [8 x i8], [8 x { i8*, i64 }], [8 x %Entity.0], i8* }*, { [8 x i8], [8 x { i8*, i64 }], [8 x %Entity.0], i8* }*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%Context.1 = type { %FileSet.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8, %Value.0* }
%FileSet.0 = type { %RWMutex.0, i64, %IPST.21, %File.2* }
%RWMutex.0 = type { %Mutex.0, i32, i32, i32, i32 }
%Mutex.0 = type { i32, i32 }
%IPST.21 = type { %File.2**, i64, i64 }
%File.2 = type { %FileSet.0*, { i8*, i64 }, i64, i64, %Mutex.0, %IPST.19, %IPST.20 }
%IPST.19 = type { i64*, i64, i64 }
%IPST.20 = type { %".go/token.lineInfo.0"*, i64, i64 }
%".go/token.lineInfo.0" = type { i64, { i8*, i64 }, i64 }
%Value.0 = type { %.reflect.rtype.0*, i8*, i64 }
%.reflect.rtype.0 = type { i64, i64, i32, i8, i8, i8, i8, %__go_descriptor.25*, %__go_descriptor.26*, i8*, { i8*, i64 }*, %.reflect.uncommonType.0*, %.reflect.rtype.0* }
%__go_descriptor.25 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.26 = type { i8 (i8*, i8*, i8*)* }
%.reflect.uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.35 }
%IPST.35 = type { %.reflect.method.0*, i64, i64 }
%.reflect.method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %.reflect.rtype.0*, %.reflect.rtype.0*, i8* }
%File.0 = type { %CommentGroup.0*, i64, %Ident.0*, %IPST.7, %Scope.1*, %IPST.8, %IPST.9, %IPST.10 }
%CommentGroup.0 = type { %IPST.16 }
%IPST.16 = type { %Comment.0**, i64, i64 }
%Comment.0 = type { i64, { i8*, i64 } }
%Ident.0 = type { i64, { i8*, i64 }, %Object.0* }
%Object.0 = type { i64, { i8*, i64 }, { %_type.0*, i8* }, { %_type.0*, i8* }, { %_type.0*, i8* } }
%IPST.7 = type { %Decl.0*, i64, i64 }
%Decl.0 = type { { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }*, i8* }
%Scope.1 = type { %Scope.1*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%IPST.8 = type { %ImportSpec.0**, i64, i64 }
%ImportSpec.0 = type { %CommentGroup.0*, %Ident.0*, %BasicLit.0*, %CommentGroup.0*, i64 }
%BasicLit.0 = type { i64, i64, { i8*, i64 } }
%IPST.9 = type { %Ident.0**, i64, i64 }
%IPST.10 = type { %CommentGroup.0**, i64, i64 }
%StructField.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, { i8*, i64 }, i64, %IPST.19, i8 }
%Type.0 = type { { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, i8* }
%__go_descriptor.15 = type { i8 (i8*, i64, i64)* }
%Method.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, %Value.0, i64 }
%IPST.3 = type { { %_type.0*, i8* }*, { %_type.0*, i8* }*, i8*, { i64, i8, i8, i16, i32, { [8 x i8], [8 x { %_type.0*, i8* }], [8 x { %_type.0*, i8* }], i8* }*, { [8 x i8], [8 x { %_type.0*, i8* }], [8 x { %_type.0*, i8* }], i8* }*, i64, i8* }*, { [8 x i8], [8 x { %_type.0*, i8* }], [8 x { %_type.0*, i8* }], i8* }*, { [8 x i8], [8 x { %_type.0*, i8* }], [8 x { %_type.0*, i8* }], i8* }*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%FuncDecl.0 = type { %CommentGroup.0*, %FieldList.0*, %Ident.0*, %FuncType.0*, %BlockStmt.0* }
%FieldList.0 = type { i64, %IPST.17, i64 }
%IPST.17 = type { %Field.0**, i64, i64 }
%Field.0 = type { %CommentGroup.0*, %IPST.9, %Expr.0, %BasicLit.0*, %CommentGroup.0* }
%Expr.0 = type { { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }*, i8* }
%FuncType.0 = type { i64, %FieldList.0*, %FieldList.0* }

$type...1command_line_arguments.ComponentType = comdat any

$gcbits..ba = comdat any

$gcbits..Ac = comdat any

$type...1command_line_arguments.Component = comdat any

$type..func.8.9.8string.9 = comdat any

$string..d = comdat any

$type...1string = comdat any

$type..func.8.1command_line_arguments.Component.9.8string.9 = comdat any

$type..func.8.9.8.6.7.1command_line_arguments.Component.9 = comdat any

$type...6.7.1command_line_arguments.Component = comdat any

$type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9 = comdat any

$type..func.8.9.8command_line_arguments.ComponentType.9 = comdat any

$type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9 = comdat any

$type...1.1command_line_arguments.Component = comdat any

$type..map.6string.7interface.4.5 = comdat any

$type..interface.4.5 = comdat any

$gcbits..da = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkEGGpa = comdat any

$type...68x.7uint8 = comdat any

$uint8..d = comdat any

$type...1uint8 = comdat any

$type...6.7uint8 = comdat any

$type...68x.7string = comdat any

$gcbits..wkwa = comdat any

$type...6.7string = comdat any

$type...68x.7interface.4.5 = comdat any

$gcbits..GGGb = comdat any

$type...6.7interface.4.5 = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$gcbits..mb = comdat any

$int..d = comdat any

$type...1int = comdat any

$uint16..d = comdat any

$type...1uint16 = comdat any

$uint32..d = comdat any

$type...1uint32 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = comdat any

$uintptr..d = comdat any

$type...1uintptr = comdat any

$type..func.8string.9.8.1command_line_arguments.Component.3bool.9 = comdat any

$bool..d = comdat any

$type...1bool = comdat any

$type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9 = comdat any

$type...1command_line_arguments.Components = comdat any

$type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9 = comdat any

$type...1.1command_line_arguments.Components = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkEGba = comdat any

$type...68x.7.1command_line_arguments.Component = comdat any

$gcbits..Gh = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5 = comdat any

$type..map.6string.7.1command_line_arguments.Component = comdat any

$type...1command_line_arguments.Entity = comdat any

$type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9 = comdat any

$error..d = comdat any

$type...1error = comdat any

$type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9 = comdat any

$type..func.8.9.8.6.7uint8.9 = comdat any

$type..func.8.9.8bool.9 = comdat any

$type..func.8.9.8bazil_org_fuse.Dirent.9 = comdat any

$type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9 = comdat any

$type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9 = comdat any

$type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9 = comdat any

$type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node = comdat any

$type..func.8.3.3.3.6.7string.9.8string.9 = comdat any

$gcbits..ha = comdat any

$type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = comdat any

$type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = comdat any

$type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = comdat any

$type..map.6string.7command_line_arguments.PropertyFunc = comdat any

$type...1command_line_arguments.PropertyFunc = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = comdat any

$type...68x.7command_line_arguments.PropertyFunc = comdat any

$type...6.7command_line_arguments.PropertyFunc = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = comdat any

$type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = comdat any

$type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = comdat any

$type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = comdat any

$type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = comdat any

$type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = comdat any

$type...1command_line_arguments.Resources = comdat any

$type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = comdat any

$type..func.8string.9.8command_line_arguments.Entity.9 = comdat any

$type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9 = comdat any

$type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = comdat any

$type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9 = comdat any

$type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9 = comdat any

$type..func.8string.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Resources.3string.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = comdat any

$type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = comdat any

$type...1.1command_line_arguments.Resources = comdat any

$type..map.6string.7command_line_arguments.Entity = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5 = comdat any

$type...68x.7command_line_arguments.Entity = comdat any

$type...6.7command_line_arguments.Entity = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5 = comdat any

$type...1command_line_arguments.Level = comdat any

$type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = comdat any

$type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = comdat any

$type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = comdat any

$type...1.1command_line_arguments.Level = comdat any

$gcbits..Ga = comdat any

$type..map.6string.7map.6string.7command_line_arguments.PropertyFunc = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = comdat any

$type...68x.7map.6string.7command_line_arguments.PropertyFunc = comdat any

$type...6.7map.6string.7command_line_arguments.PropertyFunc = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = comdat any

$type..map.6interface.4.5.7interface.4.5 = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = comdat any

$gcbits..FGGGGGpa = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = comdat any

$type...1map.6string.7interface.4.5 = comdat any

$type...61x.7interface.4.5 = comdat any

$type...62x.7interface.4.5 = comdat any

$gcbits..pa = comdat any

$pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory = comdat any

$pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File = comdat any

$type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node = comdat any

$type...61x.7string = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5 = comdat any

$type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context = comdat any

$type...1.1go_ast.File = comdat any

$pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt = comdat any

$int64..d = comdat any

$type...1int64 = comdat any

$type...1command_line_arguments.logger = comdat any

$type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9 = comdat any

$pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger = comdat any

$gcbits..GGGGa = comdat any

$gcbits..ppppa = comdat any

$gcbits..pppppppppa = comdat any

$gcbits..ppppp = comdat any

$gcbits..GGGGGGGb = comdat any

$gcbits..GGGGGGGa = comdat any

$gcbits..pppa = comdat any

@command_line_arguments.ComponentType..d = constant %_type.0 { i64 8, i64 0, i32 -1416983647, i8 -126, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C1, %uncommonType.0* @go..C5, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.ComponentType, i32 0, i32 0) }
@runtime.memhash64..f = external constant %functionDescriptor.0
@runtime.memequal64..f = external constant %functionDescriptor.0
@const.0 = private constant [45 x i8] c"\09command_line_arguments\09assets.ComponentType\00", align 1
@go..C1 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.0, i32 0, i32 0), i64 44 }
@const.1 = private constant [14 x i8] c"ComponentType\00", align 1
@go..C2 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.1, i32 0, i32 0), i64 13 }
@const.2 = private constant [23 x i8] c"command-line-arguments\00", align 1
@go..C3 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C4 = internal global [1 x %method.0] zeroinitializer
@go..C5 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C2, { i8*, i64 }* @go..C3, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C4, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.ComponentType = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1196901863, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C6, %uncommonType.0* null, %_type.0* null }, %_type.0* @command_line_arguments.ComponentType..d }, comdat
@gcbits..ba = weak constant [1 x i8] c"\01", comdat
@const.3 = private constant [46 x i8] c"*\09command_line_arguments\09assets.ComponentType\00", align 1
@go..C6 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.3, i32 0, i32 0), i64 45 }
@command_line_arguments.Component..d = constant %StructType.1 { %_type.0 { i64 72, i64 56, i32 821328841, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ac, i32 0, i32 0), { i8*, i64 }* @go..C7, %uncommonType.0* @go..C11, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0) }, %IPST.41 { %structField.0* getelementptr inbounds ([5 x %structField.0], [5 x %structField.0]* @go..C106, i32 0, i32 0), i64 5, i64 5 } }
@gcbits..Ac = weak constant [1 x i8] c"Y", comdat
@const.4 = private constant [41 x i8] c"\09command_line_arguments\09assets.Component\00", align 1
@go..C7 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.4, i32 0, i32 0), i64 40 }
@const.5 = private constant [10 x i8] c"Component\00", align 1
@go..C8 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.5, i32 0, i32 0), i64 9 }
@go..C9 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C10 = internal global [1 x %method.0] zeroinitializer
@go..C11 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C8, { i8*, i64 }* @go..C9, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C10, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Component = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 256359577, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C12, %uncommonType.0* @go..C42, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Component, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Component..d, i32 0, i32 0) }, comdat
@const.6 = private constant [42 x i8] c"*\09command_line_arguments\09assets.Component\00", align 1
@go..C12 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.6, i32 0, i32 0), i64 41 }
@const.7 = private constant [5 x i8] c"Base\00", align 1
@go..C13 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.7, i32 0, i32 0), i64 4 }
@type..func.8.9.8string.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 916039304, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C14, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C15, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C21, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.8 = private constant [14 x i8] c"func() string\00", align 1
@go..C14 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.8, i32 0, i32 0), i64 13 }
@go..C15 = internal global [1 x %_type.0*] zeroinitializer
@string..d = weak constant %_type.0 { i64 16, i64 8, i32 -1998952806, i8 24, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.strhash..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.strequal..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C16, %uncommonType.0* @go..C19, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0) }, comdat
@runtime.strhash..f = external constant %functionDescriptor.0
@runtime.strequal..f = external constant %functionDescriptor.0
@const.9 = private constant [7 x i8] c"string\00", align 1
@go..C16 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.9, i32 0, i32 0), i64 6 }
@go..C17 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.9, i32 0, i32 0), i64 6 }
@go..C18 = internal global [1 x %method.0] zeroinitializer
@go..C19 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C17, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C18, i32 0, i32 0), i64 0, i64 0 } }
@type...1string = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1918473815, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C20, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.10 = private constant [8 x i8] c"*string\00", align 1
@go..C20 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.10, i32 0, i32 0), i64 7 }
@go..C21 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@type..func.8.1command_line_arguments.Component.9.8string.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 529611176, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C22, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C23, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C24, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.11 = private constant [55 x i8] c"func(*\09command_line_arguments\09assets.Component) string\00", align 1
@go..C22 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([55 x i8], [55 x i8]* @const.11, i32 0, i32 0), i64 54 }
@go..C23 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0)]
@go..C24 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@const.12 = private constant [6 x i8] c"Bases\00", align 1
@go..C25 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.12, i32 0, i32 0), i64 5 }
@type..func.8.9.8.6.7.1command_line_arguments.Component.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -772855352, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C26, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C27, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C29, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.13 = private constant [51 x i8] c"func() []*\09command_line_arguments\09assets.Component\00", align 1
@go..C26 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.13, i32 0, i32 0), i64 50 }
@go..C27 = internal global [1 x %_type.0*] zeroinitializer
@type...6.7.1command_line_arguments.Component = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 256359591, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C28, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0) }, comdat
@const.14 = private constant [44 x i8] c"[]*\09command_line_arguments\09assets.Component\00", align 1
@go..C28 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.14, i32 0, i32 0), i64 43 }
@go..C29 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Component, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1159283480, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C30, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C31, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C32, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.15 = private constant [92 x i8] c"func(*\09command_line_arguments\09assets.Component) []*\09command_line_arguments\09assets.Component\00", align 1
@go..C30 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([92 x i8], [92 x i8]* @const.15, i32 0, i32 0), i64 91 }
@go..C31 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0)]
@go..C32 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Component, i32 0, i32 0)]
@const.16 = private constant [5 x i8] c"Name\00", align 1
@go..C33 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.16, i32 0, i32 0), i64 4 }
@const.17 = private constant [5 x i8] c"Type\00", align 1
@go..C34 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.17, i32 0, i32 0), i64 4 }
@type..func.8.9.8command_line_arguments.ComponentType.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -492640184, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C35, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C36, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C37, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.18 = private constant [52 x i8] c"func() \09command_line_arguments\09assets.ComponentType\00", align 1
@go..C35 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @const.18, i32 0, i32 0), i64 51 }
@go..C36 = internal global [1 x %_type.0*] zeroinitializer
@go..C37 = internal global [1 x %_type.0*] [%_type.0* @command_line_arguments.ComponentType..d]
@type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -879068312, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C38, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C39, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C40, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.19 = private constant [93 x i8] c"func(*\09command_line_arguments\09assets.Component) \09command_line_arguments\09assets.ComponentType\00", align 1
@go..C38 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([93 x i8], [93 x i8]* @const.19, i32 0, i32 0), i64 92 }
@go..C39 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0)]
@go..C40 = internal global [1 x %_type.0*] [%_type.0* @command_line_arguments.ComponentType..d]
@go..C41 = internal global [4 x %method.0] [%method.0 { { i8*, i64 }* @go..C13, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Component.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Component.0*)* @command_line_arguments.Component.Base to i8*) }, %method.0 { { i8*, i64 }* @go..C25, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8.6.7.1command_line_arguments.Component.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9, i32 0, i32 0), i8* bitcast (void (%IPST.1*, i8*, %Component.0*)* @command_line_arguments.Component.Bases to i8*) }, %method.0 { { i8*, i64 }* @go..C33, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Component.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Component.0*)* @command_line_arguments.Component.Name to i8*) }, %method.0 { { i8*, i64 }* @go..C34, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8command_line_arguments.ComponentType.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9, i32 0, i32 0), i8* bitcast (i64 (i8*, %Component.0*)* @command_line_arguments.Component.Type to i8*) }]
@go..C42 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([4 x %method.0], [4 x %method.0]* @go..C41, i32 0, i32 0), i64 4, i64 4 } }
@type...1.1command_line_arguments.Component = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -193214055, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C43, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0) }, comdat
@const.20 = private constant [43 x i8] c"**\09command_line_arguments\09assets.Component\00", align 1
@go..C43 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.20, i32 0, i32 0), i64 42 }
@const.21 = private constant [5 x i8] c"name\00", align 1
@go..C44 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.21, i32 0, i32 0), i64 4 }
@go..C45 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.22 = private constant [2 x i8] c"t\00", align 1
@go..C46 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.22, i32 0, i32 0), i64 1 }
@go..C47 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.23 = private constant [6 x i8] c"attrs\00", align 1
@go..C48 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.23, i32 0, i32 0), i64 5 }
@go..C49 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7interface.4.5 = weak constant %MapType.1 { %_type.0 { i64 8, i64 8, i32 -1998952774, i8 21, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C50, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 16, i8 0, i16 272, i8 1, i8 1 }, comdat
@const.24 = private constant [24 x i8] c"map[string]interface {}\00", align 1
@go..C50 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @const.24, i32 0, i32 0), i64 23 }
@type..interface.4.5 = weak constant %InterfaceType.1 { %_type.0 { i64 16, i64 16, i32 16, i8 20, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.nilinterhash..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.nilinterequal..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C51, %uncommonType.0* null, %_type.0* null }, %IPST.42 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C52, i32 0, i32 0), i64 0, i64 0 } }, comdat
@runtime.nilinterhash..f = external constant %functionDescriptor.0
@runtime.nilinterequal..f = external constant %functionDescriptor.0
@gcbits..da = weak constant [1 x i8] c"\03", comdat
@const.25 = private constant [13 x i8] c"interface {}\00", align 1
@go..C51 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.25, i32 0, i32 0), i64 12 }
@go..C52 = internal global [1 x %imethod.0] zeroinitializer
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 272, i64 272, i32 429210724, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..kwkEGGpa, i32 0, i32 0), { i8*, i64 }* @go..C53, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C69, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkEGGpa = weak constant [5 x i8] c"\AA\AA\FE\FF\03", comdat
@const.26 = private constant [80 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }\00", align 1
@go..C53 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([80 x i8], [80 x i8]* @const.26, i32 0, i32 0), i64 79 }
@const.27 = private constant [8 x i8] c"topbits\00", align 1
@go..C54 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.27, i32 0, i32 0), i64 7 }
@type...68x.7uint8 = weak constant %ArrayType.1 { %_type.0 { i64 8, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* null, { i8*, i64 }* @go..C55, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 8 }, comdat
@const.28 = private constant [9 x i8] c"[8]uint8\00", align 1
@go..C55 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.28, i32 0, i32 0), i64 8 }
@uint8..d = weak constant %_type.0 { i64 1, i64 0, i32 264632089, i8 -120, i8 1, i8 1, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C56, %uncommonType.0* @go..C59, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint8, i32 0, i32 0) }, comdat
@runtime.memhash8..f = external constant %functionDescriptor.0
@runtime.memequal8..f = external constant %functionDescriptor.0
@const.29 = private constant [6 x i8] c"uint8\00", align 1
@go..C56 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.29, i32 0, i32 0), i64 5 }
@go..C57 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.29, i32 0, i32 0), i64 5 }
@go..C58 = internal global [1 x %method.0] zeroinitializer
@go..C59 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C57, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C58, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint8 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -60853863, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C60, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.30 = private constant [7 x i8] c"*uint8\00", align 1
@go..C60 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.30, i32 0, i32 0), i64 6 }
@type...6.7uint8 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 264632103, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C61, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.31 = private constant [8 x i8] c"[]uint8\00", align 1
@go..C61 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.31, i32 0, i32 0), i64 7 }
@const.32 = private constant [5 x i8] c"keys\00", align 1
@go..C62 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.32, i32 0, i32 0), i64 4 }
@type...68x.7string = weak constant %ArrayType.1 { %_type.0 { i64 128, i64 120, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkwa, i32 0, i32 0), { i8*, i64 }* @go..C63, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 8 }, comdat
@gcbits..wkwa = weak constant [2 x i8] c"UU", comdat
@const.33 = private constant [10 x i8] c"[8]string\00", align 1
@go..C63 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.33, i32 0, i32 0), i64 9 }
@type...6.7string = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1998952792, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C64, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.34 = private constant [9 x i8] c"[]string\00", align 1
@go..C64 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.34, i32 0, i32 0), i64 8 }
@const.35 = private constant [7 x i8] c"values\00", align 1
@go..C65 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.35, i32 0, i32 0), i64 6 }
@type...68x.7interface.4.5 = weak constant %ArrayType.1 { %_type.0 { i64 128, i64 128, i32 47, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..GGGb, i32 0, i32 0), { i8*, i64 }* @go..C66, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7interface.4.5, i32 0, i32 0), i64 8 }, comdat
@gcbits..GGGb = weak constant [2 x i8] c"\FF\FF", comdat
@const.36 = private constant [16 x i8] c"[8]interface {}\00", align 1
@go..C66 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.36, i32 0, i32 0), i64 15 }
@type...6.7interface.4.5 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 30, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C67, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0) }, comdat
@const.37 = private constant [15 x i8] c"[]interface {}\00", align 1
@go..C67 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.37, i32 0, i32 0), i64 14 }
@const.38 = private constant [9 x i8] c"overflow\00", align 1
@go..C68 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.38, i32 0, i32 0), i64 8 }
@unsafe.Pointer..d = external constant %_type.0
@go..C69 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C54, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C62, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C65, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7interface.4.5, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C68, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 528 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 48, i64 48, i32 -2113349148, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C70, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C101, i32 0, i32 0), i64 9, i64 9 } }, comdat
@gcbits..mb = weak constant [1 x i8] c",", comdat
@const.39 = private constant [286 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C70 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([286 x i8], [286 x i8]* @const.39, i32 0, i32 0), i64 285 }
@const.40 = private constant [6 x i8] c"count\00", align 1
@go..C71 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.40, i32 0, i32 0), i64 5 }
@int..d = weak constant %_type.0 { i64 8, i64 0, i32 876704034, i8 -126, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C72, %uncommonType.0* @go..C75, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int, i32 0, i32 0) }, comdat
@const.41 = private constant [4 x i8] c"int\00", align 1
@go..C72 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.41, i32 0, i32 0), i64 3 }
@go..C73 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.41, i32 0, i32 0), i64 3 }
@go..C74 = internal global [1 x %method.0] zeroinitializer
@go..C75 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C73, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C74, i32 0, i32 0), i64 0, i64 0 } }
@type...1int = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1142362665, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C76, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d }, comdat
@const.42 = private constant [5 x i8] c"*int\00", align 1
@go..C76 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.42, i32 0, i32 0), i64 4 }
@const.43 = private constant [6 x i8] c"flags\00", align 1
@go..C77 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@const.44 = private constant [2 x i8] c"B\00", align 1
@go..C78 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.44, i32 0, i32 0), i64 1 }
@const.45 = private constant [10 x i8] c"noverflow\00", align 1
@go..C79 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.45, i32 0, i32 0), i64 9 }
@uint16..d = weak constant %_type.0 { i64 2, i64 0, i32 76732288, i8 -119, i8 2, i8 2, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash16..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal16..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C80, %uncommonType.0* @go..C83, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint16, i32 0, i32 0) }, comdat
@runtime.memhash16..f = external constant %functionDescriptor.0
@runtime.memequal16..f = external constant %functionDescriptor.0
@const.46 = private constant [7 x i8] c"uint16\00", align 1
@go..C80 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.46, i32 0, i32 0), i64 6 }
@go..C81 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.46, i32 0, i32 0), i64 6 }
@go..C82 = internal global [1 x %method.0] zeroinitializer
@go..C83 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C81, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C82, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint16 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1227716617, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C84, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d }, comdat
@const.47 = private constant [8 x i8] c"*uint16\00", align 1
@go..C84 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.47, i32 0, i32 0), i64 7 }
@const.48 = private constant [6 x i8] c"hash0\00", align 1
@go..C85 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.48, i32 0, i32 0), i64 5 }
@uint32..d = weak constant %_type.0 { i64 4, i64 0, i32 278357906, i8 -118, i8 4, i8 4, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash32..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal32..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C86, %uncommonType.0* @go..C89, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint32, i32 0, i32 0) }, comdat
@runtime.memhash32..f = external constant %functionDescriptor.0
@runtime.memequal32..f = external constant %functionDescriptor.0
@const.49 = private constant [7 x i8] c"uint32\00", align 1
@go..C86 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.49, i32 0, i32 0), i64 6 }
@go..C87 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.49, i32 0, i32 0), i64 6 }
@go..C88 = internal global [1 x %method.0] zeroinitializer
@go..C89 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C87, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C88, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint32 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 158759209, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C90, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint32..d }, comdat
@const.50 = private constant [8 x i8] c"*uint32\00", align 1
@go..C90 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.50, i32 0, i32 0), i64 7 }
@const.51 = private constant [8 x i8] c"buckets\00", align 1
@go..C91 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.51, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1722562999, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C92, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.52 = private constant [81 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }\00", align 1
@go..C92 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([81 x i8], [81 x i8]* @const.52, i32 0, i32 0), i64 80 }
@const.53 = private constant [11 x i8] c"oldbuckets\00", align 1
@go..C93 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.53, i32 0, i32 0), i64 10 }
@const.54 = private constant [10 x i8] c"nevacuate\00", align 1
@go..C94 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.54, i32 0, i32 0), i64 9 }
@uintptr..d = weak constant %_type.0 { i64 8, i64 0, i32 -1488193301, i8 -116, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C95, %uncommonType.0* @go..C98, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uintptr, i32 0, i32 0) }, comdat
@const.55 = private constant [8 x i8] c"uintptr\00", align 1
@go..C95 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.55, i32 0, i32 0), i64 7 }
@go..C96 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.55, i32 0, i32 0), i64 7 }
@go..C97 = internal global [1 x %method.0] zeroinitializer
@go..C98 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C96, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C97, i32 0, i32 0), i64 0, i64 0 } }
@type...1uintptr = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1958710969, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C99, %uncommonType.0* null, %_type.0* null }, %_type.0* @uintptr..d }, comdat
@const.56 = private constant [9 x i8] c"*uintptr\00", align 1
@go..C99 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.56, i32 0, i32 0), i64 8 }
@const.57 = private constant [6 x i8] c"extra\00", align 1
@go..C100 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.57, i32 0, i32 0), i64 5 }
@go..C101 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C71, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C77, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C78, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C79, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C85, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C91, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C93, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C94, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C100, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.58 = private constant [5 x i8] c"base\00", align 1
@go..C102 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.58, i32 0, i32 0), i64 4 }
@go..C103 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.59 = private constant [6 x i8] c"bases\00", align 1
@go..C104 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.59, i32 0, i32 0), i64 5 }
@go..C105 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C106 = internal global [5 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C44, { i8*, i64 }* @go..C45, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C46, { i8*, i64 }* @go..C47, %_type.0* @command_line_arguments.ComponentType..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C48, { i8*, i64 }* @go..C49, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C102, { i8*, i64 }* @go..C103, %_type.0* @string..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C104, { i8*, i64 }* @go..C105, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Component, i32 0, i32 0), { i8*, i64 }* null, i64 96 }]
@command_line_arguments.Components..d = constant %MapType.1 { %_type.0 { i64 8, i64 8, i32 1733811696, i8 21, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C107, %uncommonType.0* @go..C123, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Components, i32 0, i32 0) }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }
@const.62 = private constant [42 x i8] c"\09command_line_arguments\09assets.Components\00", align 1
@go..C107 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.62, i32 0, i32 0), i64 41 }
@const.63 = private constant [11 x i8] c"Components\00", align 1
@go..C108 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.63, i32 0, i32 0), i64 10 }
@go..C109 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.64 = private constant [15 x i8] c"LookupBaseType\00", align 1
@go..C110 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.64, i32 0, i32 0), i64 14 }
@type..func.8string.9.8.1command_line_arguments.Component.3bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1038564856, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C111, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C112, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C118, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.65 = private constant [63 x i8] c"func(string) (*\09command_line_arguments\09assets.Component, bool)\00", align 1
@go..C111 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([63 x i8], [63 x i8]* @const.65, i32 0, i32 0), i64 62 }
@go..C112 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@bool..d = weak constant %_type.0 { i64 1, i64 0, i32 1537849745, i8 -127, i8 1, i8 1, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C113, %uncommonType.0* @go..C116, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0) }, comdat
@const.66 = private constant [5 x i8] c"bool\00", align 1
@go..C113 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.66, i32 0, i32 0), i64 4 }
@go..C114 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.66, i32 0, i32 0), i64 4 }
@go..C115 = internal global [1 x %method.0] zeroinitializer
@go..C116 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C114, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C115, i32 0, i32 0), i64 0, i64 0 } }
@type...1bool = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1164207847, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C117, %uncommonType.0* null, %_type.0* null }, %_type.0* @bool..d }, comdat
@const.67 = private constant [6 x i8] c"*bool\00", align 1
@go..C117 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.67, i32 0, i32 0), i64 5 }
@go..C118 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0), %_type.0* @bool..d]
@type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -933145784, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C119, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C120, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C121, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.68 = private constant [106 x i8] c"func(\09command_line_arguments\09assets.Components, string) (*\09command_line_arguments\09assets.Component, bool)\00", align 1
@go..C119 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([106 x i8], [106 x i8]* @const.68, i32 0, i32 0), i64 105 }
@go..C120 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @command_line_arguments.Components..d, i32 0, i32 0), %_type.0* @string..d]
@go..C121 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0), %_type.0* @bool..d]
@go..C122 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C110, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8.1command_line_arguments.Component.3bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9, i32 0, i32 0), i8* bitcast ({ i64, i8 } (i8*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, i64, i64)* @command_line_arguments.Components.LookupBaseType to i8*) }]
@go..C123 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C108, { i8*, i64 }* @go..C109, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C122, i32 0, i32 0), i64 1, i64 1 } }
@type...1command_line_arguments.Components = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1971183369, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C124, %uncommonType.0* @go..C130, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Components, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @command_line_arguments.Components..d, i32 0, i32 0) }, comdat
@const.69 = private constant [43 x i8] c"*\09command_line_arguments\09assets.Components\00", align 1
@go..C124 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.69, i32 0, i32 0), i64 42 }
@go..C125 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.64, i32 0, i32 0), i64 14 }
@type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1927186840, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C126, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C127, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C128, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.70 = private constant [107 x i8] c"func(*\09command_line_arguments\09assets.Components, string) (*\09command_line_arguments\09assets.Component, bool)\00", align 1
@go..C126 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.70, i32 0, i32 0), i64 106 }
@go..C127 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Components, i32 0, i32 0), %_type.0* @string..d]
@go..C128 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0), %_type.0* @bool..d]
@go..C129 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C125, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8.1command_line_arguments.Component.3bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9, i32 0, i32 0), i8* bitcast ({ i64, i8 } (i8*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, i64, i64)* @command_line_arguments.Components.LookupBaseType to i8*) }]
@go..C130 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C129, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Components = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1474162841, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C131, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Components, i32 0, i32 0) }, comdat
@const.71 = private constant [44 x i8] c"**\09command_line_arguments\09assets.Components\00", align 1
@go..C131 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.71, i32 0, i32 0), i64 43 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 208, i64 208, i32 42782084, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C132, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C138, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkEGba = weak constant [4 x i8] c"\AA\AA\FE\03", comdat
@const.72 = private constant [109 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09assets.Component; overflow * }\00", align 1
@go..C132 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([109 x i8], [109 x i8]* @const.72, i32 0, i32 0), i64 108 }
@go..C133 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.27, i32 0, i32 0), i64 7 }
@go..C134 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.32, i32 0, i32 0), i64 4 }
@go..C135 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.35, i32 0, i32 0), i64 6 }
@type...68x.7.1command_line_arguments.Component = weak constant %ArrayType.1 { %_type.0 { i64 64, i64 64, i32 512719169, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C136, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Component, i32 0, i32 0), i64 8 }, comdat
@gcbits..Gh = weak constant [1 x i8] c"\FF", comdat
@const.73 = private constant [45 x i8] c"[8]*\09command_line_arguments\09assets.Component\00", align 1
@go..C136 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.73, i32 0, i32 0), i64 44 }
@go..C137 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.38, i32 0, i32 0), i64 8 }
@go..C138 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C133, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C134, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C135, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7.1command_line_arguments.Component, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C137, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 48, i64 48, i32 1332713956, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C139, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C150, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.74 = private constant [344 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09assets.Component; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09assets.Component; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C139 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([344 x i8], [344 x i8]* @const.74, i32 0, i32 0), i64 343 }
@go..C140 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.40, i32 0, i32 0), i64 5 }
@go..C141 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@go..C142 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.44, i32 0, i32 0), i64 1 }
@go..C143 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.45, i32 0, i32 0), i64 9 }
@go..C144 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.48, i32 0, i32 0), i64 5 }
@go..C145 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.51, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 684513353, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C146, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.75 = private constant [110 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]*\09command_line_arguments\09assets.Component; overflow * }\00", align 1
@go..C146 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.75, i32 0, i32 0), i64 109 }
@go..C147 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.53, i32 0, i32 0), i64 10 }
@go..C148 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.54, i32 0, i32 0), i64 9 }
@go..C149 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.57, i32 0, i32 0), i64 5 }
@go..C150 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C140, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C141, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C142, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C143, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C144, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C145, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C147, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C148, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C149, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@type..map.6string.7.1command_line_arguments.Component = weak constant %MapType.1 { %_type.0 { i64 8, i64 8, i32 -1742593213, i8 21, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C151, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.77 = private constant [53 x i8] c"map[string]*\09command_line_arguments\09assets.Component\00", align 1
@go..C151 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.77, i32 0, i32 0), i64 52 }
@const.78 = private constant [5 x i8] c"file\00", align 1
@const.80 = private constant [4 x i8] c"dir\00", align 1
@command_line_arguments.Entity..d = constant %InterfaceType.1 { %_type.0 { i64 16, i64 16, i32 1998870213, i8 20, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C152, %uncommonType.0* @go..C156, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Entity, i32 0, i32 0) }, %IPST.42 { %imethod.0* getelementptr inbounds ([12 x %imethod.0], [12 x %imethod.0]* @go..C205, i32 0, i32 0), i64 12, i64 12 } }
@runtime.interhash..f = external constant %functionDescriptor.0
@runtime.interequal..f = external constant %functionDescriptor.0
@const.83 = private constant [38 x i8] c"\09command_line_arguments\09assets.Entity\00", align 1
@go..C152 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.83, i32 0, i32 0), i64 37 }
@const.84 = private constant [7 x i8] c"Entity\00", align 1
@go..C153 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.84, i32 0, i32 0), i64 6 }
@go..C154 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C155 = internal global [1 x %method.0] zeroinitializer
@go..C156 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C153, { i8*, i64 }* @go..C154, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C155, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Entity = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1917152345, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C157, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i32 0, i32 0) }, comdat
@const.85 = private constant [39 x i8] c"*\09command_line_arguments\09assets.Entity\00", align 1
@go..C157 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.85, i32 0, i32 0), i64 38 }
@const.86 = private constant [5 x i8] c"Attr\00", align 1
@go..C158 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.86, i32 0, i32 0), i64 4 }
@type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 984497512, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C159, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C160, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C168, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.87 = private constant [65 x i8] c"func(\09context\09context.Context, *\09bazil_org_fuse\09fuse.Attr) error\00", align 1
@go..C159 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([65 x i8], [65 x i8]* @const.87, i32 0, i32 0), i64 64 }
@context.Context..d = external constant %InterfaceType.1
@type...1bazil_org_fuse.Attr = external constant %PtrType.0
@go..C160 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bazil_org_fuse.Attr, i32 0, i32 0)]
@error..d = weak constant %InterfaceType.1 { %_type.0 { i64 16, i64 16, i32 -2128909609, i8 20, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C161, %uncommonType.0* @go..C164, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1error, i32 0, i32 0) }, %IPST.42 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C167, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.88 = private constant [6 x i8] c"error\00", align 1
@go..C161 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.88, i32 0, i32 0), i64 5 }
@go..C162 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.88, i32 0, i32 0), i64 5 }
@go..C163 = internal global [1 x %method.0] zeroinitializer
@go..C164 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C162, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C163, i32 0, i32 0), i64 0, i64 0 } }
@type...1error = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 297184633, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C165, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0) }, comdat
@const.89 = private constant [7 x i8] c"*error\00", align 1
@go..C165 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.89, i32 0, i32 0), i64 6 }
@const.90 = private constant [6 x i8] c"Error\00", align 1
@go..C166 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.90, i32 0, i32 0), i64 5 }
@go..C167 = internal global [1 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C166, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8string.9, i32 0, i32 0) }]
@go..C168 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@const.91 = private constant [9 x i8] c"Children\00", align 1
@go..C169 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.91, i32 0, i32 0), i64 8 }
@type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 631440648, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C170, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C171, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C172, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.92 = private constant [58 x i8] c"func() \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Nodes\00", align 1
@go..C170 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([58 x i8], [58 x i8]* @const.92, i32 0, i32 0), i64 57 }
@go..C171 = internal global [1 x %_type.0*] zeroinitializer
@github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes..d = external constant %InterfaceType.1
@go..C172 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes..d, i32 0, i32 0)]
@const.93 = private constant [8 x i8] c"Content\00", align 1
@go..C173 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.93, i32 0, i32 0), i64 7 }
@type..func.8.9.8.6.7uint8.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -243414584, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C174, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C175, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C176, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.94 = private constant [15 x i8] c"func() []uint8\00", align 1
@go..C174 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.94, i32 0, i32 0), i64 14 }
@go..C175 = internal global [1 x %_type.0*] zeroinitializer
@go..C176 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0)]
@const.95 = private constant [7 x i8] c"Delete\00", align 1
@go..C177 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.95, i32 0, i32 0), i64 6 }
@type..func.8.9.8bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -361864120, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C178, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C179, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C180, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.96 = private constant [12 x i8] c"func() bool\00", align 1
@go..C178 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.96, i32 0, i32 0), i64 11 }
@go..C179 = internal global [1 x %_type.0*] zeroinitializer
@go..C180 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@const.97 = private constant [6 x i8] c"Entry\00", align 1
@go..C181 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.97, i32 0, i32 0), i64 5 }
@type..func.8.9.8bazil_org_fuse.Dirent.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -168109240, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C182, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C183, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C184, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.98 = private constant [35 x i8] c"func() \09bazil_org_fuse\09fuse.Dirent\00", align 1
@go..C182 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.98, i32 0, i32 0), i64 34 }
@go..C183 = internal global [1 x %_type.0*] zeroinitializer
@bazil_org_fuse.Dirent..d = external constant %StructType.1
@go..C184 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @bazil_org_fuse.Dirent..d, i32 0, i32 0)]
@const.99 = private constant [6 x i8] c"IsDir\00", align 1
@go..C185 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.99, i32 0, i32 0), i64 5 }
@const.100 = private constant [7 x i8] c"IsFile\00", align 1
@go..C186 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.100, i32 0, i32 0), i64 6 }
@const.101 = private constant [9 x i8] c"MetaData\00", align 1
@go..C187 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.101, i32 0, i32 0), i64 8 }
@type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 617414664, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C188, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C189, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C190, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.102 = private constant [65 x i8] c"func() \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.NodeMetaData\00", align 1
@go..C188 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([65 x i8], [65 x i8]* @const.102, i32 0, i32 0), i64 64 }
@go..C189 = internal global [1 x %_type.0*] zeroinitializer
@github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData..d = external constant %InterfaceType.1
@go..C190 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData..d, i32 0, i32 0)]
@go..C191 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.16, i32 0, i32 0), i64 4 }
@const.103 = private constant [4 x i8] c"New\00", align 1
@go..C192 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.103, i32 0, i32 0), i64 3 }
@type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1028183128, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C193, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C194, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C195, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.104 = private constant [118 x i8] c"func(\09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.NodeType, string) \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node\00", align 1
@go..C193 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([118 x i8], [118 x i8]* @const.104, i32 0, i32 0), i64 117 }
@github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType..d = external constant %_type.0
@go..C194 = internal global [2 x %_type.0*] [%_type.0* @github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType..d, %_type.0* @string..d]
@github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d = external constant %InterfaceType.1
@go..C195 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0)]
@const.105 = private constant [7 x i8] c"Parent\00", align 1
@go..C196 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.105, i32 0, i32 0), i64 6 }
@type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1845083128, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C197, %uncommonType.0* null, %_type.0* null }, i8 1, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C199, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C200, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.106 = private constant [109 x i8] c"func(...\09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node) \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node\00", align 1
@go..C197 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([109 x i8], [109 x i8]* @const.106, i32 0, i32 0), i64 108 }
@type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 2032485545, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C198, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0) }, comdat
@const.107 = private constant [52 x i8] c"[]\09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node\00", align 1
@go..C198 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @const.107, i32 0, i32 0), i64 51 }
@go..C199 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, i32 0, i32 0)]
@go..C200 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0)]
@const.108 = private constant [5 x i8] c"Path\00", align 1
@go..C201 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.108, i32 0, i32 0), i64 4 }
@type..func.8.3.3.3.6.7string.9.8string.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1374059416, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C202, %uncommonType.0* null, %_type.0* null }, i8 1, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C203, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C204, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.109 = private constant [23 x i8] c"func(...string) string\00", align 1
@go..C202 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.109, i32 0, i32 0), i64 22 }
@go..C203 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0)]
@go..C204 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C205 = internal global [12 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C158, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C169, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C173, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8.6.7uint8.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C177, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8bool.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C181, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8bazil_org_fuse.Dirent.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C185, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8bool.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C186, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8bool.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C187, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C191, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8string.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C192, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C196, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C201, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.3.3.3.6.7string.9.8string.9, i32 0, i32 0) }]
@command_line_arguments.defaultAttrs = internal global { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null
@const.110 = private constant [7 x i8] c"hidden\00", align 1
@const.111 = private constant [10 x i8] c"permitted\00", align 1
@const.112 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.110, i32 0, i32 0), i64 6 }
@const.113 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.111, i32 0, i32 0), i64 9 }
@runtime.writeBarrier = external local_unnamed_addr externally_initialized global i32
@command_line_arguments.Resources..d = constant %StructType.1 { %_type.0 { i64 24, i64 24, i32 1384816727, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0), { i8*, i64 }* @go..C206, %uncommonType.0* @go..C268, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0) }, %IPST.41 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C393, i32 0, i32 0), i64 3, i64 3 } }
@gcbits..ha = weak constant [1 x i8] c"\07", comdat
@const.114 = private constant [41 x i8] c"\09command_line_arguments\09assets.Resources\00", align 1
@go..C206 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.114, i32 0, i32 0), i64 40 }
@const.115 = private constant [10 x i8] c"Resources\00", align 1
@go..C207 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.115, i32 0, i32 0), i64 9 }
@go..C208 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.116 = private constant [12 x i8] c"AddProperty\00", align 1
@go..C209 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.116, i32 0, i32 0), i64 11 }
@type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1575159896, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C210, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C211, i32 0, i32 0), i64 3, i64 3 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C212, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.117 = private constant [84 x i8] c"func(\09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node, string, interface {}) error\00", align 1
@go..C210 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([84 x i8], [84 x i8]* @const.117, i32 0, i32 0), i64 83 }
@go..C211 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0), %_type.0* @string..d, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0)]
@go..C212 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1320371304, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C213, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([4 x %_type.0*], [4 x %_type.0*]* @go..C214, i32 0, i32 0), i64 4, i64 4 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C215, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.118 = private constant [126 x i8] c"func(\09command_line_arguments\09assets.Resources, \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node, string, interface {}) error\00", align 1
@go..C213 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([126 x i8], [126 x i8]* @const.118, i32 0, i32 0), i64 125 }
@go..C214 = internal global [4 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Resources..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0), %_type.0* @string..d, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0)]
@go..C215 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@const.119 = private constant [14 x i8] c"GetProperties\00", align 1
@go..C216 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.119, i32 0, i32 0), i64 13 }
@type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1887360632, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C217, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C218, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C248, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.120 = private constant [76 x i8] c"func(string) (map[string]\09command_line_arguments\09assets.PropertyFunc, bool)\00", align 1
@go..C217 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([76 x i8], [76 x i8]* @const.120, i32 0, i32 0), i64 75 }
@go..C218 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@type..map.6string.7command_line_arguments.PropertyFunc = weak constant %MapType.1 { %_type.0 { i64 8, i64 8, i32 914185783, i8 21, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C219, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @command_line_arguments.PropertyFunc..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.121 = private constant [55 x i8] c"map[string]\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C219 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([55 x i8], [55 x i8]* @const.121, i32 0, i32 0), i64 54 }
@command_line_arguments.PropertyFunc..d = constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1381828723, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C220, %uncommonType.0* @go..C224, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.PropertyFunc, i32 0, i32 0) }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C226, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C227, i32 0, i32 0), i64 2, i64 2 } }
@const.122 = private constant [44 x i8] c"\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C220 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.122, i32 0, i32 0), i64 43 }
@const.123 = private constant [13 x i8] c"PropertyFunc\00", align 1
@go..C221 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.123, i32 0, i32 0), i64 12 }
@go..C222 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C223 = internal global [1 x %method.0] zeroinitializer
@go..C224 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C221, { i8*, i64 }* @go..C222, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C223, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.PropertyFunc = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -634423079, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C225, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @command_line_arguments.PropertyFunc..d, i32 0, i32 0) }, comdat
@const.124 = private constant [45 x i8] c"*\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C225 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.124, i32 0, i32 0), i64 44 }
@go..C226 = internal global [1 x %_type.0*] zeroinitializer
@type...1reflect.Value = external constant %PtrType.0
@go..C227 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1reflect.Value, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 208, i64 208, i32 -839635964, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C228, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C235, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.125 = private constant [111 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.PropertyFunc; overflow * }\00", align 1
@go..C228 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([111 x i8], [111 x i8]* @const.125, i32 0, i32 0), i64 110 }
@go..C229 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.27, i32 0, i32 0), i64 7 }
@go..C230 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.32, i32 0, i32 0), i64 4 }
@go..C231 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.35, i32 0, i32 0), i64 6 }
@type...68x.7command_line_arguments.PropertyFunc = weak constant %ArrayType.1 { %_type.0 { i64 64, i64 64, i32 1531309865, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C232, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @command_line_arguments.PropertyFunc..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.PropertyFunc, i32 0, i32 0), i64 8 }, comdat
@const.126 = private constant [47 x i8] c"[8]\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C232 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([47 x i8], [47 x i8]* @const.126, i32 0, i32 0), i64 46 }
@type...6.7command_line_arguments.PropertyFunc = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1381828709, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C233, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @command_line_arguments.PropertyFunc..d, i32 0, i32 0) }, comdat
@const.127 = private constant [46 x i8] c"[]\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C233 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.127, i32 0, i32 0), i64 45 }
@go..C234 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.38, i32 0, i32 0), i64 8 }
@go..C235 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C229, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C230, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C231, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7command_line_arguments.PropertyFunc, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C234, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 48, i64 48, i32 -1146709532, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C236, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C247, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.128 = private constant [348 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.PropertyFunc; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.PropertyFunc; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C236 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([348 x i8], [348 x i8]* @const.128, i32 0, i32 0), i64 347 }
@go..C237 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.40, i32 0, i32 0), i64 5 }
@go..C238 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@go..C239 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.44, i32 0, i32 0), i64 1 }
@go..C240 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.45, i32 0, i32 0), i64 9 }
@go..C241 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.48, i32 0, i32 0), i64 5 }
@go..C242 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.51, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -549273527, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C243, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.129 = private constant [112 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.PropertyFunc; overflow * }\00", align 1
@go..C243 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([112 x i8], [112 x i8]* @const.129, i32 0, i32 0), i64 111 }
@go..C244 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.53, i32 0, i32 0), i64 10 }
@go..C245 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.54, i32 0, i32 0), i64 9 }
@go..C246 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.57, i32 0, i32 0), i64 5 }
@go..C247 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C237, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C238, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C239, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C240, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C241, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C242, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C244, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C245, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C246, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@go..C248 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), %_type.0* @bool..d]
@type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -64878680, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C249, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C250, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C251, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.130 = private constant [118 x i8] c"func(\09command_line_arguments\09assets.Resources, string) (map[string]\09command_line_arguments\09assets.PropertyFunc, bool)\00", align 1
@go..C249 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([118 x i8], [118 x i8]* @const.130, i32 0, i32 0), i64 117 }
@go..C250 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Resources..d, i32 0, i32 0), %_type.0* @string..d]
@go..C251 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), %_type.0* @bool..d]
@const.131 = private constant [5 x i8] c"Root\00", align 1
@go..C252 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.131, i32 0, i32 0), i64 4 }
@type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -189879736, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C253, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C254, i32 0, i32 0), i64 0, i64 0 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C255, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.132 = private constant [70 x i8] c"func() *\09github_com_ChrisRx_dungeonfs_pkg_game_fs_core\09core.Directory\00", align 1
@go..C253 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([70 x i8], [70 x i8]* @const.132, i32 0, i32 0), i64 69 }
@go..C254 = internal global [1 x %_type.0*] zeroinitializer
@type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory = external constant %PtrType.0
@go..C255 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i32 0, i32 0)]
@type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1174582568, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C256, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C257, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C258, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.133 = private constant [110 x i8] c"func(\09command_line_arguments\09assets.Resources) *\09github_com_ChrisRx_dungeonfs_pkg_game_fs_core\09core.Directory\00", align 1
@go..C256 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.133, i32 0, i32 0), i64 109 }
@go..C257 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Resources..d, i32 0, i32 0)]
@go..C258 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i32 0, i32 0)]
@const.134 = private constant [6 x i8] c"visit\00", align 1
@go..C259 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.134, i32 0, i32 0), i64 5 }
@go..C260 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 615027560, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C261, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C262, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C263, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.135 = private constant [56 x i8] c"func(\09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node)\00", align 1
@go..C261 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([56 x i8], [56 x i8]* @const.135, i32 0, i32 0), i64 55 }
@go..C262 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0)]
@go..C263 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1700449880, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C264, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C265, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C266, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.136 = private constant [98 x i8] c"func(\09command_line_arguments\09assets.Resources, \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node)\00", align 1
@go..C264 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([98 x i8], [98 x i8]* @const.136, i32 0, i32 0), i64 97 }
@go..C265 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Resources..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0)]
@go..C266 = internal global [1 x %_type.0*] zeroinitializer
@go..C267 = internal global [4 x %method.0] [%method.0 { { i8*, i64 }* @go..C209, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Resources.0*, i64, i64, i64, i64, { %_type.0*, i8* }*)* @command_line_arguments.Resources.AddProperty..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C216, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, i32 0, i32 0), i8* bitcast ({ i64, i8 } (i8*, %Resources.0*, i64, i64)* @command_line_arguments.Resources.GetProperties..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C252, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, i32 0, i32 0), i8* bitcast (%Directory.0* (i8*, %Resources.0*)* @command_line_arguments.Resources.Root..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C259, { i8*, i64 }* @go..C260, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Resources.0*, i64, i64)* @command_line_arguments.Resources.visit..stub to i8*) }]
@go..C268 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C207, { i8*, i64 }* @go..C208, %IPST.39 { %method.0* getelementptr inbounds ([4 x %method.0], [4 x %method.0]* @go..C267, i32 0, i32 0), i64 4, i64 4 } }
@type...1command_line_arguments.Resources = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 682231161, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C269, %uncommonType.0* @go..C309, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Resources, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Resources..d, i32 0, i32 0) }, comdat
@const.137 = private constant [42 x i8] c"*\09command_line_arguments\09assets.Resources\00", align 1
@go..C269 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([42 x i8], [42 x i8]* @const.137, i32 0, i32 0), i64 41 }
@go..C270 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.116, i32 0, i32 0), i64 11 }
@type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 312469672, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C271, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([4 x %_type.0*], [4 x %_type.0*]* @go..C272, i32 0, i32 0), i64 4, i64 4 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C273, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.138 = private constant [127 x i8] c"func(*\09command_line_arguments\09assets.Resources, \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node, string, interface {}) error\00", align 1
@go..C271 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([127 x i8], [127 x i8]* @const.138, i32 0, i32 0), i64 126 }
@go..C272 = internal global [4 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0), %_type.0* @string..d, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0)]
@go..C273 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@const.139 = private constant [10 x i8] c"GetObject\00", align 1
@go..C274 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.139, i32 0, i32 0), i64 9 }
@type..func.8string.9.8command_line_arguments.Entity.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -463305592, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C275, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C276, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C277, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.140 = private constant [51 x i8] c"func(string) \09command_line_arguments\09assets.Entity\00", align 1
@go..C275 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.140, i32 0, i32 0), i64 50 }
@go..C276 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C277 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 351274728, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C278, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C279, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C280, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.141 = private constant [94 x i8] c"func(*\09command_line_arguments\09assets.Resources, string) \09command_line_arguments\09assets.Entity\00", align 1
@go..C278 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([94 x i8], [94 x i8]* @const.141, i32 0, i32 0), i64 93 }
@go..C279 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0), %_type.0* @string..d]
@go..C280 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i32 0, i32 0)]
@go..C281 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.119, i32 0, i32 0), i64 13 }
@type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1072780312, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C282, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C283, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C284, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.142 = private constant [119 x i8] c"func(*\09command_line_arguments\09assets.Resources, string) (map[string]\09command_line_arguments\09assets.PropertyFunc, bool)\00", align 1
@go..C282 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([119 x i8], [119 x i8]* @const.142, i32 0, i32 0), i64 118 }
@go..C283 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0), %_type.0* @string..d]
@go..C284 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), %_type.0* @bool..d]
@const.143 = private constant [8 x i8] c"LoadDir\00", align 1
@go..C285 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.143, i32 0, i32 0), i64 7 }
@type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1649350392, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C286, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C287, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C288, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.144 = private constant [85 x i8] c"func(string) (*\09github_com_ChrisRx_dungeonfs_pkg_game_fs_core\09core.Directory, error)\00", align 1
@go..C286 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([85 x i8], [85 x i8]* @const.144, i32 0, i32 0), i64 84 }
@go..C287 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C288 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -834770072, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C289, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C290, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C291, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.145 = private constant [128 x i8] c"func(*\09command_line_arguments\09assets.Resources, string) (*\09github_com_ChrisRx_dungeonfs_pkg_game_fs_core\09core.Directory, error)\00", align 1
@go..C289 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([128 x i8], [128 x i8]* @const.145, i32 0, i32 0), i64 127 }
@go..C290 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0), %_type.0* @string..d]
@go..C291 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@const.146 = private constant [9 x i8] c"LoadFile\00", align 1
@go..C292 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.146, i32 0, i32 0), i64 8 }
@type..func.8string.9.8error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1646758152, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C293, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C294, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C295, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.147 = private constant [19 x i8] c"func(string) error\00", align 1
@go..C293 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.147, i32 0, i32 0), i64 18 }
@go..C294 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C295 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Resources.3string.9.8error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1833628824, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C296, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C297, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C298, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.148 = private constant [62 x i8] c"func(*\09command_line_arguments\09assets.Resources, string) error\00", align 1
@go..C296 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([62 x i8], [62 x i8]* @const.148, i32 0, i32 0), i64 61 }
@go..C297 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0), %_type.0* @string..d]
@go..C298 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@go..C299 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.131, i32 0, i32 0), i64 4 }
@type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 166680936, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C300, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C301, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C302, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.149 = private constant [111 x i8] c"func(*\09command_line_arguments\09assets.Resources) *\09github_com_ChrisRx_dungeonfs_pkg_game_fs_core\09core.Directory\00", align 1
@go..C300 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([111 x i8], [111 x i8]* @const.149, i32 0, i32 0), i64 110 }
@go..C301 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0)]
@go..C302 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i32 0, i32 0)]
@go..C303 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.134, i32 0, i32 0), i64 5 }
@go..C304 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1586615784, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C305, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C306, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C307, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.150 = private constant [99 x i8] c"func(*\09command_line_arguments\09assets.Resources, \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node)\00", align 1
@go..C305 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([99 x i8], [99 x i8]* @const.150, i32 0, i32 0), i64 98 }
@go..C306 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0)]
@go..C307 = internal global [1 x %_type.0*] zeroinitializer
@go..C308 = internal global [7 x %method.0] [%method.0 { { i8*, i64 }* @go..C270, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Resources.0*, i64, i64, i64, i64, { %_type.0*, i8* }*)* @command_line_arguments.Resources.AddProperty..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C274, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8command_line_arguments.Entity.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Resources.0*, i64, i64)* @command_line_arguments.Resources.GetObject to i8*) }, %method.0 { { i8*, i64 }* @go..C281, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, i32 0, i32 0), i8* bitcast ({ i64, i8 } (i8*, %Resources.0*, i64, i64)* @command_line_arguments.Resources.GetProperties..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C285, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9, i32 0, i32 0), i8* bitcast (void ({ %Directory.0*, %error.0 }*, i8*, %Resources.0*, i64, i64)* @command_line_arguments.Resources.LoadDir to i8*) }, %method.0 { { i8*, i64 }* @go..C292, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Resources.3string.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Resources.0*, i64, i64)* @command_line_arguments.Resources.LoadFile to i8*) }, %method.0 { { i8*, i64 }* @go..C299, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, i32 0, i32 0), i8* bitcast (%Directory.0* (i8*, %Resources.0*)* @command_line_arguments.Resources.Root..stub to i8*) }, %method.0 { { i8*, i64 }* @go..C303, { i8*, i64 }* @go..C304, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Resources.0*, i64, i64)* @command_line_arguments.Resources.visit..stub to i8*) }]
@go..C309 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([7 x %method.0], [7 x %method.0]* @go..C308, i32 0, i32 0), i64 7, i64 7 } }
@type...1.1command_line_arguments.Resources = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1969203303, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C310, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Resources, i32 0, i32 0) }, comdat
@const.151 = private constant [43 x i8] c"**\09command_line_arguments\09assets.Resources\00", align 1
@go..C310 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.151, i32 0, i32 0), i64 42 }
@const.152 = private constant [11 x i8] c"components\00", align 1
@go..C311 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.152, i32 0, i32 0), i64 10 }
@go..C312 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.153 = private constant [9 x i8] c"entities\00", align 1
@go..C313 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.153, i32 0, i32 0), i64 8 }
@go..C314 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7command_line_arguments.Entity = weak constant %MapType.1 { %_type.0 { i64 8, i64 8, i32 -82577, i8 21, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C315, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 16, i8 0, i16 272, i8 1, i8 1 }, comdat
@const.154 = private constant [49 x i8] c"map[string]\09command_line_arguments\09assets.Entity\00", align 1
@go..C315 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @const.154, i32 0, i32 0), i64 48 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 272, i64 272, i32 -31452412, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..kwkEGGpa, i32 0, i32 0), { i8*, i64 }* @go..C316, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C323, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.155 = private constant [105 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.Entity; overflow * }\00", align 1
@go..C316 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([105 x i8], [105 x i8]* @const.155, i32 0, i32 0), i64 104 }
@go..C317 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.27, i32 0, i32 0), i64 7 }
@go..C318 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.32, i32 0, i32 0), i64 4 }
@go..C319 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.35, i32 0, i32 0), i64 6 }
@type...68x.7command_line_arguments.Entity = weak constant %ArrayType.1 { %_type.0 { i64 128, i64 128, i32 -297226855, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..GGGb, i32 0, i32 0), { i8*, i64 }* @go..C320, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.Entity, i32 0, i32 0), i64 8 }, comdat
@const.156 = private constant [41 x i8] c"[8]\09command_line_arguments\09assets.Entity\00", align 1
@go..C320 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.156, i32 0, i32 0), i64 40 }
@type...6.7command_line_arguments.Entity = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 1998870227, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C321, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i32 0, i32 0) }, comdat
@const.157 = private constant [40 x i8] c"[]\09command_line_arguments\09assets.Entity\00", align 1
@go..C321 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.157, i32 0, i32 0), i64 39 }
@go..C322 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.38, i32 0, i32 0), i64 8 }
@go..C323 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C317, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C318, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C319, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7command_line_arguments.Entity, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C322, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 528 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 48, i64 48, i32 -1022322204, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C324, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C335, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.158 = private constant [336 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.Entity; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.Entity; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C324 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([336 x i8], [336 x i8]* @const.158, i32 0, i32 0), i64 335 }
@go..C325 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.40, i32 0, i32 0), i64 5 }
@go..C326 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@go..C327 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.44, i32 0, i32 0), i64 1 }
@go..C328 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.45, i32 0, i32 0), i64 9 }
@go..C329 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.48, i32 0, i32 0), i64 5 }
@go..C330 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.51, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -503238583, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C331, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.159 = private constant [106 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09assets.Entity; overflow * }\00", align 1
@go..C331 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([106 x i8], [106 x i8]* @const.159, i32 0, i32 0), i64 105 }
@go..C332 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.53, i32 0, i32 0), i64 10 }
@go..C333 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.54, i32 0, i32 0), i64 9 }
@go..C334 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.57, i32 0, i32 0), i64 5 }
@go..C335 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C325, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C326, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C327, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C328, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C329, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C330, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C332, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C333, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C334, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.160 = private constant [6 x i8] c"Level\00", align 1
@go..C336 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.160, i32 0, i32 0), i64 5 }
@type...1command_line_arguments.Level = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1401864745, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C337, %uncommonType.0* @go..C356, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Level, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Level..d, i32 0, i32 0) }, comdat
@const.161 = private constant [38 x i8] c"*\09command_line_arguments\09assets.Level\00", align 1
@go..C337 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.161, i32 0, i32 0), i64 37 }
@go..C338 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.116, i32 0, i32 0), i64 11 }
@type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1865907880, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C339, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([4 x %_type.0*], [4 x %_type.0*]* @go..C340, i32 0, i32 0), i64 4, i64 4 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C341, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.162 = private constant [123 x i8] c"func(*\09command_line_arguments\09assets.Level, \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node, string, interface {}) error\00", align 1
@go..C339 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([123 x i8], [123 x i8]* @const.162, i32 0, i32 0), i64 122 }
@go..C340 = internal global [4 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Level, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0), %_type.0* @string..d, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0)]
@go..C341 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @error..d, i32 0, i32 0)]
@go..C342 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.119, i32 0, i32 0), i64 13 }
@type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 480657896, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C343, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C344, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C345, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.163 = private constant [115 x i8] c"func(*\09command_line_arguments\09assets.Level, string) (map[string]\09command_line_arguments\09assets.PropertyFunc, bool)\00", align 1
@go..C343 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([115 x i8], [115 x i8]* @const.163, i32 0, i32 0), i64 114 }
@go..C344 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Level, i32 0, i32 0), %_type.0* @string..d]
@go..C345 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), %_type.0* @bool..d]
@go..C346 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.131, i32 0, i32 0), i64 4 }
@type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 1720119144, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C347, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C348, i32 0, i32 0), i64 1, i64 1 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C349, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.164 = private constant [107 x i8] c"func(*\09command_line_arguments\09assets.Level) *\09github_com_ChrisRx_dungeonfs_pkg_game_fs_core\09core.Directory\00", align 1
@go..C347 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.164, i32 0, i32 0), i64 106 }
@go..C348 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Level, i32 0, i32 0)]
@go..C349 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i32 0, i32 0)]
@go..C350 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.134, i32 0, i32 0), i64 5 }
@go..C351 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 -1154913304, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C352, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C353, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C354, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.165 = private constant [95 x i8] c"func(*\09command_line_arguments\09assets.Level, \09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node)\00", align 1
@go..C352 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([95 x i8], [95 x i8]* @const.165, i32 0, i32 0), i64 94 }
@go..C353 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Level, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0)]
@go..C354 = internal global [1 x %_type.0*] zeroinitializer
@go..C355 = internal global [4 x %method.0] [%method.0 { { i8*, i64 }* @go..C338, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Level.0*, i64, i64, i64, i64, { %_type.0*, i8* }*)* @command_line_arguments.Level.AddProperty to i8*) }, %method.0 { { i8*, i64 }* @go..C342, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, i32 0, i32 0), i8* bitcast ({ i64, i8 } (i8*, %Level.0*, i64, i64)* @command_line_arguments.Level.GetProperties to i8*) }, %method.0 { { i8*, i64 }* @go..C346, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, i32 0, i32 0), i8* bitcast (%Directory.0* (i8*, %Level.0*)* @command_line_arguments.Level.Root to i8*) }, %method.0 { { i8*, i64 }* @go..C350, { i8*, i64 }* @go..C351, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Level.0*, i64, i64)* @command_line_arguments.Level.visit to i8*) }]
@go..C356 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([4 x %method.0], [4 x %method.0]* @go..C355, i32 0, i32 0), i64 4, i64 4 } }
@type...1.1command_line_arguments.Level = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 954999449, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C357, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Level, i32 0, i32 0) }, comdat
@const.166 = private constant [39 x i8] c"**\09command_line_arguments\09assets.Level\00", align 1
@go..C357 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.166, i32 0, i32 0), i64 38 }
@command_line_arguments.Level..d = constant %StructType.1 { %_type.0 { i64 40, i64 40, i32 624487458, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0), { i8*, i64 }* @go..C358, %uncommonType.0* @go..C362, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Level, i32 0, i32 0) }, %IPST.41 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C392, i32 0, i32 0), i64 4, i64 4 } }
@gcbits..Ga = weak constant [1 x i8] c"\1F", comdat
@const.167 = private constant [37 x i8] c"\09command_line_arguments\09assets.Level\00", align 1
@go..C358 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.167, i32 0, i32 0), i64 36 }
@go..C359 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.160, i32 0, i32 0), i64 5 }
@go..C360 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C361 = internal global [1 x %method.0] zeroinitializer
@go..C362 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C359, { i8*, i64 }* @go..C360, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C361, i32 0, i32 0), i64 0, i64 0 } }
@const.168 = private constant [5 x i8] c"root\00", align 1
@go..C363 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.168, i32 0, i32 0), i64 4 }
@go..C364 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.169 = private constant [8 x i8] c"objects\00", align 1
@go..C365 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.169, i32 0, i32 0), i64 7 }
@go..C366 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.170 = private constant [6 x i8] c"paths\00", align 1
@go..C367 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.170, i32 0, i32 0), i64 5 }
@go..C368 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.171 = private constant [11 x i8] c"properties\00", align 1
@go..C369 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.171, i32 0, i32 0), i64 10 }
@go..C370 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7map.6string.7command_line_arguments.PropertyFunc = weak constant %MapType.1 { %_type.0 { i64 8, i64 8, i32 -1084767007, i8 21, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C371, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.172 = private constant [66 x i8] c"map[string]map[string]\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C371 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([66 x i8], [66 x i8]* @const.172, i32 0, i32 0), i64 65 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 208, i64 208, i32 -381615804, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C372, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C379, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.173 = private constant [122 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]map[string]\09command_line_arguments\09assets.PropertyFunc; overflow * }\00", align 1
@go..C372 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([122 x i8], [122 x i8]* @const.173, i32 0, i32 0), i64 121 }
@go..C373 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.27, i32 0, i32 0), i64 7 }
@go..C374 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.32, i32 0, i32 0), i64 4 }
@go..C375 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.35, i32 0, i32 0), i64 6 }
@type...68x.7map.6string.7command_line_arguments.PropertyFunc = weak constant %ArrayType.1 { %_type.0 { i64 64, i64 64, i32 1828371581, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C376, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), i64 8 }, comdat
@const.174 = private constant [58 x i8] c"[8]map[string]\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C376 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([58 x i8], [58 x i8]* @const.174, i32 0, i32 0), i64 57 }
@type...6.7map.6string.7command_line_arguments.PropertyFunc = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 914185797, i8 23, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C377, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0) }, comdat
@const.175 = private constant [57 x i8] c"[]map[string]\09command_line_arguments\09assets.PropertyFunc\00", align 1
@go..C377 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([57 x i8], [57 x i8]* @const.175, i32 0, i32 0), i64 56 }
@go..C378 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.38, i32 0, i32 0), i64 8 }
@go..C379 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C373, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C374, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C375, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C378, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 48, i64 48, i32 -2002380316, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C380, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C391, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.176 = private constant [370 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]map[string]\09command_line_arguments\09assets.PropertyFunc; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]map[string]\09command_line_arguments\09assets.PropertyFunc; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C380 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([370 x i8], [370 x i8]* @const.176, i32 0, i32 0), i64 369 }
@go..C381 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.40, i32 0, i32 0), i64 5 }
@go..C382 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@go..C383 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.44, i32 0, i32 0), i64 1 }
@go..C384 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.45, i32 0, i32 0), i64 9 }
@go..C385 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.48, i32 0, i32 0), i64 5 }
@go..C386 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.51, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1810885559, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C387, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.177 = private constant [123 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]map[string]\09command_line_arguments\09assets.PropertyFunc; overflow * }\00", align 1
@go..C387 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([123 x i8], [123 x i8]* @const.177, i32 0, i32 0), i64 122 }
@go..C388 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.53, i32 0, i32 0), i64 10 }
@go..C389 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.54, i32 0, i32 0), i64 9 }
@go..C390 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.57, i32 0, i32 0), i64 5 }
@go..C391 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C381, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C382, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C383, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C384, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C385, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C386, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C388, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C389, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C390, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@go..C392 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C363, { i8*, i64 }* @go..C364, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C365, { i8*, i64 }* @go..C366, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C367, { i8*, i64 }* @go..C368, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C369, { i8*, i64 }* @go..C370, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, i32 0, i32 0), { i8*, i64 }* null, i64 64 }]
@go..C393 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C311, { i8*, i64 }* @go..C312, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @command_line_arguments.Components..d, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C313, { i8*, i64 }* @go..C314, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C336, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Level, i32 0, i32 0), { i8*, i64 }* null, i64 33 }]
@command_line_arguments.New..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (%Resources.0* (i8*)* @command_line_arguments.New to i64) }
@command_line_arguments.LoadFromFile..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Directory.0*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.LoadFromFile to i64) }
@type..map.6interface.4.5.7interface.4.5 = weak constant %MapType.1 { %_type.0 { i64 8, i64 8, i32 48, i8 21, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C394, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 16, i8 0, i16 272, i8 0, i8 1 }, comdat
@const.181 = private constant [30 x i8] c"map[interface {}]interface {}\00", align 1
@go..C394 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @const.181, i32 0, i32 0), i64 29 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 272, i64 272, i32 -486827548, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..FGGGGGpa, i32 0, i32 0), { i8*, i64 }* @go..C395, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C400, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..FGGGGGpa = weak constant [5 x i8] c"\FE\FF\FF\FF\03", comdat
@const.182 = private constant [86 x i8] c"struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }\00", align 1
@go..C395 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([86 x i8], [86 x i8]* @const.182, i32 0, i32 0), i64 85 }
@go..C396 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.27, i32 0, i32 0), i64 7 }
@go..C397 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.32, i32 0, i32 0), i64 4 }
@go..C398 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.35, i32 0, i32 0), i64 6 }
@go..C399 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.38, i32 0, i32 0), i64 8 }
@go..C400 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C396, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C397, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7interface.4.5, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C398, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...68x.7interface.4.5, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C399, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 528 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.1 { %_type.0 { i64 48, i64 48, i32 -398861852, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C401, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C412, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.183 = private constant [298 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C401 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([298 x i8], [298 x i8]* @const.183, i32 0, i32 0), i64 297 }
@go..C402 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.40, i32 0, i32 0), i64 5 }
@go..C403 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.43, i32 0, i32 0), i64 5 }
@go..C404 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.44, i32 0, i32 0), i64 1 }
@go..C405 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.45, i32 0, i32 0), i64 9 }
@go..C406 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.48, i32 0, i32 0), i64 5 }
@go..C407 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.51, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 800693833, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C408, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.184 = private constant [87 x i8] c"*struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }\00", align 1
@go..C408 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([87 x i8], [87 x i8]* @const.184, i32 0, i32 0), i64 86 }
@go..C409 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.53, i32 0, i32 0), i64 10 }
@go..C410 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.54, i32 0, i32 0), i64 9 }
@go..C411 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.57, i32 0, i32 0), i64 5 }
@go..C412 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C402, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C403, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C404, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C405, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C406, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C407, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C409, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C410, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C411, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.185 = private constant [23 x i8] c"attrs wrong type: '%v'\00", align 1
@const.189 = private constant [18 x i8] c"key is not string\00", align 1
@const.190 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.189, i32 0, i32 0), i64 17 }
@type...1map.6string.7interface.4.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1918473303, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C413, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i32 0, i32 0) }, comdat
@const.192 = private constant [25 x i8] c"*map[string]interface {}\00", align 1
@go..C413 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @const.192, i32 0, i32 0), i64 24 }
@const.194 = private constant [2 x i8] c":\00", align 1
@const.196 = private constant [18 x i8] c"missing base type\00", align 1
@const.197 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.196, i32 0, i32 0), i64 17 }
@const.198 = private constant [30 x i8] c"component '%s' already exists\00", align 1
@const.200 = private constant %IPST.2 zeroinitializer
@const.201 = private constant [26 x i8] c"RegisteredComponent: %#v\0A\00", align 1
@type...61x.7interface.4.5 = weak constant %ArrayType.1 { %_type.0 { i64 16, i64 16, i32 47, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C414, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7interface.4.5, i32 0, i32 0), i64 1 }, comdat
@const.202 = private constant [16 x i8] c"[1]interface {}\00", align 1
@go..C414 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.202, i32 0, i32 0), i64 15 }
@command_line_arguments.PkgLogger = global %.command-line-arguments.logger.0 zeroinitializer
@const.205 = private constant [7 x i8] c"*.yaml\00", align 1
@const.206 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.205, i32 0, i32 0), i64 6 }
@const.209 = private constant [33 x i8] c"missing base component type '%s'\00", align 1
@const.211 = private constant [30 x i8] c"unable to find component '%s'\00", align 1
@const.214 = private constant [4 x i8] c"doc\00", align 1
@const.216 = private constant [18 x i8] c"Entity[%s]: %##v\0A\00", align 1
@type...62x.7interface.4.5 = weak constant %ArrayType.1 { %_type.0 { i64 32, i64 32, i32 47, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C415, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7interface.4.5, i32 0, i32 0), i64 2 }, comdat
@gcbits..pa = weak constant [1 x i8] c"\0F", comdat
@const.217 = private constant [16 x i8] c"[2]interface {}\00", align 1
@go..C415 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.217, i32 0, i32 0), i64 15 }
@pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory = weak constant { %_type.0*, { i64, i64 } (i8*, %Directory.0*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void ({ i8*, i64, i64 }*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %Directory.0*, i64, i64, i64)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i32 0, i32 0), { i64, i64 } (i8*, %Directory.0*, i64, i64, %Attr.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Attr, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast ({ i64, i64 } (i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Children..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), void ({ i8*, i64, i64 }*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (void ({ i8*, i64, i64 }*, i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Content..stub to void ({ i8*, i64, i64 }*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (i8 (i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Delete..stub to i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (void (%Dirent.0*, i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Entry..stub to void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (i8 (i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.IsDir..stub to i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (i8 (i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.IsFile..stub to i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast ({ i64, i64 } (i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast ({ i64, i64 } (i8*, %Directory.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Name..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), { i64, i64 } (i8*, %Directory.0*, i64, i64, i64)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.New, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)* bitcast ({ i64, i64 } (i8*, %Directory.0*, %IPST.12*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Parent..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)*), { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)* bitcast ({ i64, i64 } (i8*, %Directory.0*, %IPST.5*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Path..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)*) }, comdat
@type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File = external constant %PtrType.0
@pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File = weak constant { %_type.0*, { i64, i64 } (i8*, %File.1*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void ({ i8*, i64, i64 }*, i8*, %File.1*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %File.1*, i64, i64, i64)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File, i32 0, i32 0), { i64, i64 } (i8*, %File.1*, i64, i64, %Attr.0*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Attr, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast ({ i64, i64 } (i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Children..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), void ({ i8*, i64, i64 }*, i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Content, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (i8 (i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Delete..stub to i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (void (%Dirent.0*, i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Entry..stub to void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (i8 (i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.IsDir..stub to i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast (i8 (i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.IsFile..stub to i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast ({ i64, i64 } (i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)* bitcast ({ i64, i64 } (i8*, %File.1*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Name..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*), { i64, i64 } (i8*, %File.1*, i64, i64, i64)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.New, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)* bitcast ({ i64, i64 } (i8*, %File.1*, %IPST.12*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Parent..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)*), { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)* bitcast ({ i64, i64 } (i8*, %File.1*, %IPST.5*)* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Path..stub to { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)*) }, comdat
@const.219 = private constant [21 x i8] c"something very wrong\00", align 1
@const.220 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.219, i32 0, i32 0), i64 20 }
@command_line_arguments.NewLevel..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (%Level.0* (i8*, i64, i64, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* @command_line_arguments.NewLevel to i64) }
@const.222 = private constant [43 x i8] c"expected type '[]interface{}', received %v\00", align 1
@const.224 = private constant [36 x i8] c"expected type 'string', received %v\00", align 1
@const.226 = private constant %IPST.5 zeroinitializer
@const.227 = private constant [16 x i8] c"NodeParent: %s\0A\00", align 1
@const.229 = private constant [9 x i8] c"adjacent\00", align 1
@const.231 = private constant [9 x i8] c"contains\00", align 1
@const.233 = private constant [15 x i8] c"NodeChild: %s\0A\00", align 1
@type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node = weak constant %ArrayType.1 { %_type.0 { i64 16, i64 16, i32 -229996219, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C416, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, i32 0, i32 0), i64 1 }, comdat
@const.235 = private constant [53 x i8] c"[1]\09github_com_ChrisRx_dungeonfs_pkg_game_fs\09fs.Node\00", align 1
@go..C416 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.235, i32 0, i32 0), i64 52 }
@type...61x.7string = weak constant %ArrayType.1 { %_type.0 { i64 16, i64 8, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C417, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 1 }, comdat
@const.236 = private constant [10 x i8] c"[1]string\00", align 1
@go..C417 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.236, i32 0, i32 0), i64 9 }
@command_line_arguments.srcTmpl = internal global { i8*, i64 } { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @const.238, i32 0, i32 0), i64 32 }
@const.238 = private constant [33 x i8] c"package main\0Afunc main() {\0A\09%s\0A}\00", align 1
@const.240 = private constant [49 x i8] c"Condition is %v, expected map[string]interface{}\00", align 1
@type...1github_com_ChrisRx_dungeonfs_pkg_eval.Context = external constant %PtrType.0
@const.244 = private constant [5 x i8] c"node\00", align 1
@type...1go_ast.File = external constant %PtrType.0
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5 = weak constant %StructType.1 { %_type.0 { i64 24, i64 24, i32 387117444, i8 25, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0), { i8*, i64 }* @go..C418, %uncommonType.0* null, %_type.0* null }, %IPST.41 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C427, i32 0, i32 0), i64 3, i64 3 } }, comdat
@const.247 = private constant [98 x i8] c"struct { f *; ctx1 **\09github_com_ChrisRx_dungeonfs_pkg_eval\09eval.Context; t2 **\09go_ast\09ast.File }\00", align 1
@go..C418 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([98 x i8], [98 x i8]* @const.247, i32 0, i32 0), i64 97 }
@const.248 = private constant [2 x i8] c"f\00", align 1
@go..C419 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.248, i32 0, i32 0), i64 1 }
@go..C420 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.248, i32 0, i32 0), i64 1 }
@const.249 = private constant [5 x i8] c"ctx1\00", align 1
@go..C421 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.249, i32 0, i32 0), i64 4 }
@go..C422 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 560728729, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C423, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_eval.Context, i32 0, i32 0) }, comdat
@const.250 = private constant [54 x i8] c"**\09github_com_ChrisRx_dungeonfs_pkg_eval\09eval.Context\00", align 1
@go..C423 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([54 x i8], [54 x i8]* @const.250, i32 0, i32 0), i64 53 }
@const.251 = private constant [3 x i8] c"t2\00", align 1
@go..C424 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.251, i32 0, i32 0), i64 2 }
@go..C425 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1.1go_ast.File = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 537544857, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C426, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_ast.File, i32 0, i32 0) }, comdat
@const.252 = private constant [19 x i8] c"**\09go_ast\09ast.File\00", align 1
@go..C426 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.252, i32 0, i32 0), i64 18 }
@go..C427 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C419, { i8*, i64 }* @go..C420, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C421, { i8*, i64 }* @go..C422, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C424, { i8*, i64 }* @go..C425, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1go_ast.File, i32 0, i32 0), { i8*, i64 }* null, i64 32 }]
@type...1go_ast.FuncDecl = external constant %PtrType.0
@go_ast.Decl..d = external constant %InterfaceType.1
@type...1go_ast.BlockStmt = external constant %PtrType.0
@pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt = weak constant { %_type.0*, i64 (i8*, %BlockStmt.0*)*, i64 (i8*, %BlockStmt.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_ast.BlockStmt, i32 0, i32 0), i64 (i8*, %BlockStmt.0*)* @go_ast.BlockStmt.End, i64 (i8*, %BlockStmt.0*)* @go_ast.BlockStmt.Pos }, comdat
@const.254 = private constant [25 x i8] c"reflect.Value is invalid\00", align 1
@int64..d = weak constant %_type.0 { i64 8, i64 0, i32 923918228, i8 -122, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* null, { i8*, i64 }* @go..C428, %uncommonType.0* @go..C431, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int64, i32 0, i32 0) }, comdat
@const.256 = private constant [6 x i8] c"int64\00", align 1
@go..C428 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.256, i32 0, i32 0), i64 5 }
@go..C429 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.256, i32 0, i32 0), i64 5 }
@go..C430 = internal global [1 x %method.0] zeroinitializer
@go..C431 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C429, { i8*, i64 }* null, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C430, i32 0, i32 0), i64 0, i64 0 } }
@type...1int64 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1897789769, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C432, %uncommonType.0* null, %_type.0* null }, %_type.0* @int64..d }, comdat
@const.257 = private constant [7 x i8] c"*int64\00", align 1
@go..C432 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.257, i32 0, i32 0), i64 6 }
@const.258 = private constant [30 x i8] c"unhandled condition type '%v'\00", align 1
@command_line_arguments.SetNodeAttr..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, i64, i64, i64, i64, %Value.0*)* @command_line_arguments.SetNodeAttr to i64) }
@command_line_arguments..command_line_arguments.logger..d = constant %InterfaceType.1 { %_type.0 { i64 16, i64 16, i32 -546930070, i8 20, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C433, %uncommonType.0* @go..C437, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.logger, i32 0, i32 0) }, %IPST.42 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C443, i32 0, i32 0), i64 1, i64 1 } }
@const.260 = private constant [38 x i8] c"\09command_line_arguments\09assets.logger\00", align 1
@go..C433 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.260, i32 0, i32 0), i64 37 }
@const.261 = private constant [7 x i8] c"logger\00", align 1
@go..C434 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.261, i32 0, i32 0), i64 6 }
@go..C435 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C436 = internal global [1 x %method.0] zeroinitializer
@go..C437 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C434, { i8*, i64 }* @go..C435, %IPST.39 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C436, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.logger = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -160946519, i8 54, i8 8, i8 8, %__go_descriptor.33* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.33*), %__go_descriptor.34* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.34*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C438, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments..command_line_arguments.logger..d, i32 0, i32 0) }, comdat
@const.262 = private constant [39 x i8] c"*\09command_line_arguments\09assets.logger\00", align 1
@go..C438 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.262, i32 0, i32 0), i64 38 }
@const.263 = private constant [7 x i8] c"Printf\00", align 1
@go..C439 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.263, i32 0, i32 0), i64 6 }
@type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9 = weak constant %FuncType.1 { %_type.0 { i64 8, i64 8, i32 458021592, i8 19, i8 8, i8 8, %__go_descriptor.33* null, %__go_descriptor.34* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C440, %uncommonType.0* null, %_type.0* null }, i8 1, %IPST.40 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C441, i32 0, i32 0), i64 2, i64 2 }, %IPST.40 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C442, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.264 = private constant [30 x i8] c"func(string, ...interface {})\00", align 1
@go..C440 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @const.264, i32 0, i32 0), i64 29 }
@go..C441 = internal global [2 x %_type.0*] [%_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7interface.4.5, i32 0, i32 0)]
@go..C442 = internal global [1 x %_type.0*] zeroinitializer
@go..C443 = internal global [1 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C439, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.1, %FuncType.1* @type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9, i32 0, i32 0) }]
@type...1github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger = external constant %PtrType.0
@pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger = weak constant { %_type.0*, void (i8*, %NullLogger.0*, i64, i64, %IPST.2*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger, i32 0, i32 0), void (i8*, %NullLogger.0*, i64, i64, %IPST.2*)* @github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger.Printf }, comdat
@github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger..d = external constant %StructType.1
@command_line_arguments.command_line_arguments..init0..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void (i8*)* @command_line_arguments.command_line_arguments..init0 to i64) }
@gcbits..GGGGa = weak constant [3 x i8] c"\FF\FF\0F", comdat
@gcbits..ppppa = weak constant [3 x i8] c"\EF\BD\07", comdat
@gcbits..pppppppppa = weak constant [6 x i8] c"\EF\BD\F7\DE{\0F", comdat
@gcbits..ppppp = weak constant [3 x i8] c"\EF\BD\F7", comdat
@gcbits..GGGGGGGb = weak constant [5 x i8] c"\FF\FF\FF\FF\0F", comdat
@gcbits..GGGGGGGa = weak constant [5 x i8] c"\FF\FF\FF\FF\07", comdat
@gcbits..pppa = weak constant [2 x i8] c"\EF=", comdat
@go..C0 = internal global { i8*, i64, [97 x { i8*, i64, i64, i8* }] } { i8* null, i64 97, [97 x { i8*, i64, i64, i8* }] [{ i8*, i64, i64, i8* } { i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.defaultAttrs to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ({ i8*, i64 }* @command_line_arguments.srcTmpl to i8*), i64 16, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%.command-line-arguments.logger.0* @command_line_arguments.PkgLogger to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C21 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C23 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C24 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C29 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C31 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C32 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C37 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C39 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C40 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %method.0]* @go..C41 to i8*), i64 160, i64 160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..GGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C69 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C101 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([5 x %structField.0]* @go..C106 to i8*), i64 200, i64 192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppp, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C112 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C118 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C120 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C121 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C122 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C127 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C128 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C129 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C138 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C150 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C160 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %imethod.0]* @go..C167 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C168 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C172 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C176 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C180 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C184 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C190 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C194 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C195 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C199 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C200 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C203 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C204 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([12 x %imethod.0]* @go..C205 to i8*), i64 288, i64 288, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..GGGGGGGb, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C211 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C212 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %_type.0*]* @go..C214 to i8*), i64 32, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C215 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C218 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C227 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C235 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C247 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C248 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C250 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C251 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C255 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C257 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C258 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C262 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C265 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %method.0]* @go..C267 to i8*), i64 160, i64 160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..GGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %_type.0*]* @go..C272 to i8*), i64 32, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C273 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C276 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C277 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C279 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C280 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C283 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C284 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C287 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C288 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C290 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C291 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C294 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C295 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C297 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C298 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C301 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C302 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C306 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %method.0]* @go..C308 to i8*), i64 280, i64 280, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..GGGGGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C323 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C335 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %_type.0*]* @go..C340 to i8*), i64 32, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C341 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C344 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C345 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C348 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C349 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C353 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %method.0]* @go..C355 to i8*), i64 160, i64 160, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..GGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C379 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C391 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C392 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C393 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C400 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C412 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C427 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C441 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %imethod.0]* @go..C443 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }] }

define { i64, i64 } @command_line_arguments.Component.Base(i8* nest nocapture readnone %nest.2, %Component.0* readonly %c) #0 !dbg !110 {
entry:
  call void @llvm.dbg.value(metadata %Component.0* %c, metadata !125, metadata !DIExpression()), !dbg !126
  %icmp.2 = icmp eq %Component.0* %c, null, !dbg !127
  br i1 %icmp.2, label %then.2, label %else.2

then.2:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !127
  unreachable

else.2:                                           ; preds = %entry
  %"$ret2.sroa.0.0.cast.78.sroa_idx" = getelementptr inbounds %Component.0, %Component.0* %c, i64 0, i32 3, !dbg !128
  %"$ret2.sroa.0.0.cast.78.sroa_cast" = bitcast { i8*, i64 }* %"$ret2.sroa.0.0.cast.78.sroa_idx" to i64*, !dbg !128
  %"$ret2.sroa.0.0.copyload" = load i64, i64* %"$ret2.sroa.0.0.cast.78.sroa_cast", align 8, !dbg !128
  call void @llvm.dbg.value(metadata i64 %"$ret2.sroa.0.0.copyload", metadata !129, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !130
  %"$ret2.sroa.5.0.cast.78.sroa_idx3" = getelementptr inbounds %Component.0, %Component.0* %c, i64 0, i32 3, i32 1, !dbg !128
  %"$ret2.sroa.5.0.copyload" = load i64, i64* %"$ret2.sroa.5.0.cast.78.sroa_idx3", align 8, !dbg !128
  call void @llvm.dbg.value(metadata i64 %"$ret2.sroa.5.0.copyload", metadata !129, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !130
  %ld.1.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret2.sroa.0.0.copyload", 0, !dbg !128
  %ld.1.fca.1.insert = insertvalue { i64, i64 } %ld.1.fca.0.insert, i64 %"$ret2.sroa.5.0.copyload", 1, !dbg !128
  ret { i64, i64 } %ld.1.fca.1.insert, !dbg !128
}

define void @command_line_arguments.Component.Bases(%IPST.1* nocapture sret %sret.formal.0, i8* nest nocapture readnone %nest.3, %Component.0* readonly %c) #0 !dbg !131 {
entry:
  call void @llvm.dbg.value(metadata %Component.0* %c, metadata !134, metadata !DIExpression()), !dbg !135
  %icmp.3 = icmp eq %Component.0* %c, null, !dbg !136
  br i1 %icmp.3, label %then.3, label %else.3

then.3:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !136
  unreachable

else.3:                                           ; preds = %entry
  %field.3 = getelementptr inbounds %Component.0, %Component.0* %c, i64 0, i32 4, !dbg !136
  %cast.84 = bitcast %IPST.1* %field.3 to i8*, !dbg !137
  %cast.85 = bitcast %IPST.1* %sret.formal.0 to i8*, !dbg !137
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %cast.85, i8* nonnull align 8 %cast.84, i64 24, i1 false), !dbg !137
  ret void, !dbg !137
}

define { i64, i64 } @command_line_arguments.Component.Name(i8* nest nocapture readnone %nest.0, %Component.0* readonly %c) #0 !dbg !138 {
entry:
  call void @llvm.dbg.value(metadata %Component.0* %c, metadata !139, metadata !DIExpression()), !dbg !140
  %icmp.0 = icmp eq %Component.0* %c, null, !dbg !141
  br i1 %icmp.0, label %then.0, label %else.0

then.0:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !141
  unreachable

else.0:                                           ; preds = %entry
  %"$ret0.sroa.0.0.cast.71.sroa_cast" = bitcast %Component.0* %c to i64*, !dbg !142
  %"$ret0.sroa.0.0.copyload" = load i64, i64* %"$ret0.sroa.0.0.cast.71.sroa_cast", align 8, !dbg !142
  call void @llvm.dbg.value(metadata i64 %"$ret0.sroa.0.0.copyload", metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !144
  %"$ret0.sroa.5.0.cast.71.sroa_idx3" = getelementptr inbounds %Component.0, %Component.0* %c, i64 0, i32 0, i32 1, !dbg !142
  %"$ret0.sroa.5.0.copyload" = load i64, i64* %"$ret0.sroa.5.0.cast.71.sroa_idx3", align 8, !dbg !142
  call void @llvm.dbg.value(metadata i64 %"$ret0.sroa.5.0.copyload", metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !144
  %ld.0.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret0.sroa.0.0.copyload", 0, !dbg !142
  %ld.0.fca.1.insert = insertvalue { i64, i64 } %ld.0.fca.0.insert, i64 %"$ret0.sroa.5.0.copyload", 1, !dbg !142
  ret { i64, i64 } %ld.0.fca.1.insert, !dbg !142
}

define i64 @command_line_arguments.Component.Type(i8* nest nocapture readnone %nest.1, %Component.0* readonly %c) #0 !dbg !145 {
entry:
  call void @llvm.dbg.value(metadata %Component.0* %c, metadata !148, metadata !DIExpression()), !dbg !149
  call void @llvm.dbg.value(metadata i64 0, metadata !150, metadata !DIExpression()), !dbg !151
  %icmp.1 = icmp eq %Component.0* %c, null, !dbg !152
  br i1 %icmp.1, label %then.1, label %else.1

then.1:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !152
  unreachable

else.1:                                           ; preds = %entry
  %field.1 = getelementptr inbounds %Component.0, %Component.0* %c, i64 0, i32 1, !dbg !152
  %.field.ld.0 = load i64, i64* %field.1, align 8, !dbg !152
  call void @llvm.dbg.value(metadata i64 %.field.ld.0, metadata !150, metadata !DIExpression()), !dbg !151
  ret i64 %.field.ld.0, !dbg !153
}

; Function Attrs: noreturn
declare void @__go_runtime_error(i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

define { i64, i8 } @command_line_arguments.Components.LookupBaseType(i8* nest nocapture readnone %nest.4, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** readonly %pointer, i64 %t.chunk0, i64 %t.chunk1) #0 !dbg !154 {
entry:
  %tmpv.4 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %pointer, metadata !162, metadata !DIExpression()), !dbg !163
  call void @llvm.dbg.value(metadata i64 %t.chunk0, metadata !164, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !165
  call void @llvm.dbg.value(metadata i64 %t.chunk1, metadata !164, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !165
  %icmp.4 = icmp eq { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %pointer, null, !dbg !163
  br i1 %icmp.4, label %then.4, label %else.4

then.4:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !163
  unreachable

else.4:                                           ; preds = %entry
  %.ld.6 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %pointer, align 8, !dbg !163
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.ld.6, metadata !166, metadata !DIExpression()), !dbg !163
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !167, metadata !DIExpression()), !dbg !168
  call void @llvm.dbg.value(metadata i8 0, metadata !169, metadata !DIExpression()), !dbg !170
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !171, metadata !DIExpression()), !dbg !173
  call void @llvm.dbg.value(metadata i8 0, metadata !174, metadata !DIExpression()), !dbg !173
  %t.addr.sroa.0.0.cast.125.sroa_cast = bitcast { i8*, i64 }* %tmpv.4 to i64*
  store i64 %t.chunk0, i64* %t.addr.sroa.0.0.cast.125.sroa_cast, align 8
  %t.addr.sroa.2.0.cast.125.sroa_idx10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.4, i64 0, i32 1
  store i64 %t.chunk1, i64* %t.addr.sroa.2.0.cast.125.sroa_idx10, align 8
  %cast.134 = bitcast { i8*, i64 }* %tmpv.4 to i8*, !dbg !175
  %call.0 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.ld.6, i8* nonnull %cast.134), !dbg !175
  %call.0.fca.1.extract = extractvalue { i64, i8 } %call.0, 1, !dbg !175
  call void @llvm.dbg.value(metadata i8 %call.0.fca.1.extract, metadata !174, metadata !DIExpression()), !dbg !173
  %0 = and i8 %call.0.fca.1.extract, 1, !dbg !176
  %trunc.4 = icmp eq i8 %0, 0, !dbg !176
  br i1 %trunc.4, label %else.5, label %then.5

then.5:                                           ; preds = %else.4
  %call.0.fca.0.extract = extractvalue { i64, i8 } %call.0, 0, !dbg !175
  %1 = inttoptr i64 %call.0.fca.0.extract to i64*, !dbg !175
  %.ld.411 = load i64, i64* %1, align 8, !dbg !175
  call void @llvm.dbg.value(metadata i64* %1, metadata !171, metadata !DIExpression(DW_OP_deref)), !dbg !173
  call void @llvm.dbg.value(metadata i64* %1, metadata !167, metadata !DIExpression(DW_OP_deref)), !dbg !168
  call void @llvm.dbg.value(metadata i8 %call.0.fca.1.extract, metadata !169, metadata !DIExpression()), !dbg !170
  %ld.2.fca.0.insert = insertvalue { i64, i8 } undef, i64 %.ld.411, 0, !dbg !177
  %ld.2.fca.1.insert = insertvalue { i64, i8 } %ld.2.fca.0.insert, i8 %call.0.fca.1.extract, 1, !dbg !177
  ret { i64, i8 } %ld.2.fca.1.insert, !dbg !177

else.5:                                           ; preds = %else.4
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !167, metadata !DIExpression()), !dbg !168
  call void @llvm.dbg.value(metadata i8 0, metadata !169, metadata !DIExpression()), !dbg !170
  ret { i64, i8 } zeroinitializer, !dbg !178
}

declare { i64, i8 } @runtime.mapaccess2(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare i8 @runtime.eqstring(i8*, i64, i64, i64, i64) local_unnamed_addr #0

define void @command_line_arguments..import(i8* nest nocapture readnone %nest.6) local_unnamed_addr #0 !dbg !179 {
entry:
  %tmpv.19 = alloca [2 x { { i8*, i64 }, { %_type.0*, i8* } }], align 8
  call void @runtime.registerGCRoots(i8* nest undef, i8* bitcast ({ i8*, i64, [97 x { i8*, i64, i64, i8* }] }* @go..C0 to i8*)), !dbg !182
  %call.4 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @bool..d), !dbg !184
  store i8 0, i8* %call.4, align 1, !dbg !184
  %call.5 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @bool..d), !dbg !184
  store i8 1, i8* %call.5, align 1, !dbg !184
  %tmp.2.sroa.0.0.cast.204.sroa_cast = bitcast [2 x { { i8*, i64 }, { %_type.0*, i8* } }]* %tmpv.19 to i8*, !dbg !184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.2.sroa.0.0.cast.204.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.112 to i8*), i64 16, i1 false), !dbg !184
  %tmp.2.sroa.2.0.cast.204.sroa_idx3 = getelementptr inbounds [2 x { { i8*, i64 }, { %_type.0*, i8* } }], [2 x { { i8*, i64 }, { %_type.0*, i8* } }]* %tmpv.19, i64 0, i64 0, i32 1, i32 0, !dbg !184
  store %_type.0* @bool..d, %_type.0** %tmp.2.sroa.2.0.cast.204.sroa_idx3, align 8, !dbg !184
  %tmp.2.sroa.3.0.cast.204.sroa_idx4 = getelementptr inbounds [2 x { { i8*, i64 }, { %_type.0*, i8* } }], [2 x { { i8*, i64 }, { %_type.0*, i8* } }]* %tmpv.19, i64 0, i64 0, i32 1, i32 1, !dbg !184
  store i8* %call.4, i8** %tmp.2.sroa.3.0.cast.204.sroa_idx4, align 8, !dbg !184
  %tmp.4.sroa.0.0.cast.206.sroa_idx = getelementptr inbounds [2 x { { i8*, i64 }, { %_type.0*, i8* } }], [2 x { { i8*, i64 }, { %_type.0*, i8* } }]* %tmpv.19, i64 0, i64 1, !dbg !184
  %tmp.4.sroa.0.0.cast.206.sroa_cast = bitcast { { i8*, i64 }, { %_type.0*, i8* } }* %tmp.4.sroa.0.0.cast.206.sroa_idx to i8*, !dbg !184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.4.sroa.0.0.cast.206.sroa_cast, i8* align 8 bitcast ({ i8*, i64 }* @const.113 to i8*), i64 16, i1 false), !dbg !184
  %tmp.4.sroa.2.0.cast.206.sroa_idx7 = getelementptr inbounds [2 x { { i8*, i64 }, { %_type.0*, i8* } }], [2 x { { i8*, i64 }, { %_type.0*, i8* } }]* %tmpv.19, i64 0, i64 1, i32 1, i32 0, !dbg !184
  store %_type.0* @bool..d, %_type.0** %tmp.4.sroa.2.0.cast.206.sroa_idx7, align 8, !dbg !184
  %tmp.4.sroa.3.0.cast.206.sroa_idx8 = getelementptr inbounds [2 x { { i8*, i64 }, { %_type.0*, i8* } }], [2 x { { i8*, i64 }, { %_type.0*, i8* } }]* %tmpv.19, i64 0, i64 1, i32 1, i32 1, !dbg !184
  store i8* %call.5, i8** %tmp.4.sroa.3.0.cast.206.sroa_idx8, align 8, !dbg !184
  %call.6 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.1* @type..map.6string.7interface.4.5 to i8*), i64 2, i64 32, i64 16, i8* nonnull %tmp.2.sroa.0.0.cast.204.sroa_cast), !dbg !184
  %runtime.writeBarrier.ld.0 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !186
  %icmp.12 = icmp eq i32 %runtime.writeBarrier.ld.0, 0, !dbg !186
  br i1 %icmp.12, label %else.168, label %else.167

fallthrough.167:                                  ; preds = %else.167, %else.168
  call void @command_line_arguments.command_line_arguments..init0(i8* nest undef), !dbg !187
  ret void

else.167:                                         ; preds = %entry
  %cast.213 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.6 to i8*, !dbg !186
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.defaultAttrs to i8*), i8* %cast.213), !dbg !186
  br label %fallthrough.167

else.168:                                         ; preds = %entry
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.6, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.defaultAttrs, align 8, !dbg !186
  br label %fallthrough.167
}

declare i8* @runtime.newobject(i8*, %_type.0*) local_unnamed_addr #0

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8*, i8*, i64, i64, i64, i8*) local_unnamed_addr #0

declare void @runtime.writebarrierptr(i8*, i8*, i8*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Resources.AddProperty..stub(i8* nest nocapture readnone %nest.22, %Resources.0* readonly %"$this7.pointer", i64 %"$p8.chunk0", i64 %"$p8.chunk1", i64 %"$p9.chunk0", i64 %"$p9.chunk1", { %_type.0*, i8* }* byval nocapture readonly %"$p10") #0 !dbg !189 {
entry:
  call void @llvm.dbg.declare(metadata { %_type.0*, i8* }* %"$p10", metadata !427, metadata !DIExpression()), !dbg !428
  call void @llvm.dbg.value(metadata %Resources.0* %"$this7.pointer", metadata !429, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.value(metadata i64 %"$p8.chunk0", metadata !431, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !432
  call void @llvm.dbg.value(metadata i64 %"$p8.chunk1", metadata !431, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !432
  call void @llvm.dbg.value(metadata i64 %"$p9.chunk0", metadata !433, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !434
  call void @llvm.dbg.value(metadata i64 %"$p9.chunk1", metadata !433, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !434
  %icmp.185 = icmp eq %Resources.0* %"$this7.pointer", null, !dbg !430
  br i1 %icmp.185, label %then.163, label %else.163

then.163:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !430
  unreachable

else.163:                                         ; preds = %entry
  %"$this7.sroa.3.0.cast.1923.sroa_idx9" = getelementptr inbounds %Resources.0, %Resources.0* %"$this7.pointer", i64 0, i32 2
  %"$this7.sroa.3.0.copyload" = load %Level.0*, %Level.0** %"$this7.sroa.3.0.cast.1923.sroa_idx9", align 8
  call void @llvm.dbg.value(metadata %Level.0* %"$this7.sroa.3.0.copyload", metadata !435, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !430
  %call.164 = call { i64, i64 } @command_line_arguments.Level.AddProperty(i8* nest undef, %Level.0* %"$this7.sroa.3.0.copyload", i64 %"$p8.chunk0", i64 %"$p8.chunk1", i64 %"$p9.chunk0", i64 %"$p9.chunk1", { %_type.0*, i8* }* byval nonnull %"$p10"), !dbg !436
  ret { i64, i64 } %call.164, !dbg !436
}

define { i64, i8 } @command_line_arguments.Resources.GetProperties..stub(i8* nest nocapture readnone %nest.24, %Resources.0* readonly %"$this13.pointer", i64 %"$p14.chunk0", i64 %"$p14.chunk1") #0 !dbg !438 {
entry:
  call void @llvm.dbg.value(metadata %Resources.0* %"$this13.pointer", metadata !445, metadata !DIExpression()), !dbg !446
  call void @llvm.dbg.value(metadata i64 %"$p14.chunk0", metadata !447, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !448
  call void @llvm.dbg.value(metadata i64 %"$p14.chunk1", metadata !447, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !448
  %icmp.187 = icmp eq %Resources.0* %"$this13.pointer", null, !dbg !446
  br i1 %icmp.187, label %then.165, label %else.165

then.165:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !446
  unreachable

else.165:                                         ; preds = %entry
  %"$this13.sroa.3.0.cast.1942.sroa_idx5" = getelementptr inbounds %Resources.0, %Resources.0* %"$this13.pointer", i64 0, i32 2
  %"$this13.sroa.3.0.copyload" = load %Level.0*, %Level.0** %"$this13.sroa.3.0.cast.1942.sroa_idx5", align 8
  call void @llvm.dbg.value(metadata %Level.0* %"$this13.sroa.3.0.copyload", metadata !449, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !446
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !450, metadata !DIExpression()), !dbg !451
  call void @llvm.dbg.value(metadata i8 0, metadata !452, metadata !DIExpression()), !dbg !453
  %call.165 = call { i64, i8 } @command_line_arguments.Level.GetProperties(i8* nest undef, %Level.0* %"$this13.sroa.3.0.copyload", i64 %"$p14.chunk0", i64 %"$p14.chunk1"), !dbg !454
  ret { i64, i8 } %call.165, !dbg !454
}

define %Directory.0* @command_line_arguments.Resources.Root..stub(i8* nest nocapture readnone %nest.25, %Resources.0* readonly %"$this15.pointer") #0 !dbg !456 {
entry:
  call void @llvm.dbg.value(metadata %Resources.0* %"$this15.pointer", metadata !472, metadata !DIExpression()), !dbg !473
  %icmp.188 = icmp eq %Resources.0* %"$this15.pointer", null, !dbg !473
  br i1 %icmp.188, label %then.166, label %else.166

then.166:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !473
  unreachable

else.166:                                         ; preds = %entry
  %"$this15.sroa.3.0.cast.1946.sroa_idx4" = getelementptr inbounds %Resources.0, %Resources.0* %"$this15.pointer", i64 0, i32 2
  %"$this15.sroa.3.0.copyload" = load %Level.0*, %Level.0** %"$this15.sroa.3.0.cast.1946.sroa_idx4", align 8
  call void @llvm.dbg.value(metadata %Level.0* %"$this15.sroa.3.0.copyload", metadata !474, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !473
  call void @llvm.dbg.value(metadata %Directory.0* null, metadata !475, metadata !DIExpression()), !dbg !476
  %call.166 = call %Directory.0* @command_line_arguments.Level.Root(i8* nest undef, %Level.0* %"$this15.sroa.3.0.copyload"), !dbg !477
  call void @llvm.dbg.value(metadata %Directory.0* %call.166, metadata !475, metadata !DIExpression()), !dbg !476
  ret %Directory.0* %call.166, !dbg !477
}

define void @command_line_arguments.Resources.visit..stub(i8* nest nocapture readnone %nest.23, %Resources.0* readonly %"$this11.pointer", i64 %"$p12.chunk0", i64 %"$p12.chunk1") #0 !dbg !479 {
entry:
  call void @llvm.dbg.value(metadata %Resources.0* %"$this11.pointer", metadata !482, metadata !DIExpression()), !dbg !483
  call void @llvm.dbg.value(metadata i64 %"$p12.chunk0", metadata !484, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !485
  call void @llvm.dbg.value(metadata i64 %"$p12.chunk1", metadata !484, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !485
  %icmp.186 = icmp eq %Resources.0* %"$this11.pointer", null, !dbg !483
  br i1 %icmp.186, label %then.164, label %else.164

then.164:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !483
  unreachable

else.164:                                         ; preds = %entry
  %"$this11.sroa.3.0.cast.1931.sroa_idx4" = getelementptr inbounds %Resources.0, %Resources.0* %"$this11.pointer", i64 0, i32 2
  %"$this11.sroa.3.0.copyload" = load %Level.0*, %Level.0** %"$this11.sroa.3.0.cast.1931.sroa_idx4", align 8
  call void @llvm.dbg.value(metadata %Level.0* %"$this11.sroa.3.0.copyload", metadata !486, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !483
  call void @command_line_arguments.Level.visit(i8* nest undef, %Level.0* %"$this11.sroa.3.0.copyload", i64 %"$p12.chunk0", i64 %"$p12.chunk1"), !dbg !487
  ret void
}

define { i64, i64 } @command_line_arguments.Resources.GetObject(i8* nest nocapture readnone %nest.9, %Resources.0* readonly %r, i64 %key.chunk0, i64 %key.chunk1) #0 !dbg !489 {
entry:
  %tmpv.33 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Resources.0* %r, metadata !492, metadata !DIExpression()), !dbg !493
  call void @llvm.dbg.value(metadata i64 %key.chunk0, metadata !494, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !495
  call void @llvm.dbg.value(metadata i64 %key.chunk1, metadata !494, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !495
  call void @llvm.dbg.value(metadata i8 0, metadata !496, metadata !DIExpression()), !dbg !498
  %key.addr.sroa.0.0.cast.419.sroa_cast = bitcast { i8*, i64 }* %tmpv.33 to i64*
  store i64 %key.chunk0, i64* %key.addr.sroa.0.0.cast.419.sroa_cast, align 8
  %key.addr.sroa.2.0.cast.419.sroa_idx21 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.33, i64 0, i32 1
  store i64 %key.chunk1, i64* %key.addr.sroa.2.0.cast.419.sroa_idx21, align 8
  %icmp.13 = icmp eq %Resources.0* %r, null, !dbg !499
  br i1 %icmp.13, label %then.9, label %else.9

then.9:                                           ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !499
  unreachable

else.9:                                           ; preds = %entry
  %field.25 = getelementptr inbounds %Resources.0, %Resources.0* %r, i64 0, i32 1, !dbg !499
  %.field.ld.1 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.25, align 8, !dbg !499
  %cast.425 = bitcast { i8*, i64 }* %tmpv.33 to i8*, !dbg !500
  %call.11 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.1, i8* nonnull %cast.425), !dbg !500
  %call.11.fca.0.extract = extractvalue { i64, i8 } %call.11, 0, !dbg !500
  %call.11.fca.1.extract = extractvalue { i64, i8 } %call.11, 1, !dbg !500
  call void @llvm.dbg.value(metadata i8 %call.11.fca.1.extract, metadata !496, metadata !DIExpression()), !dbg !498
  %0 = and i8 %call.11.fca.1.extract, 1, !dbg !501
  %trunc.12 = icmp eq i8 %0, 0, !dbg !501
  br i1 %trunc.12, label %else.10, label %then.10

then.10:                                          ; preds = %else.9
  %cast.429 = inttoptr i64 %call.11.fca.0.extract to %Entity.0*, !dbg !500
  %val.sroa.6.0.cast.431.sroa_idx17 = getelementptr inbounds %Entity.0, %Entity.0* %cast.429, i64 0, i32 1, !dbg !500
  %val.sroa.6.0.cast.431.sroa_cast = bitcast i8** %val.sroa.6.0.cast.431.sroa_idx17 to i64*, !dbg !500
  %val.sroa.6.0.copyload18 = load i64, i64* %val.sroa.6.0.cast.431.sroa_cast, align 8, !dbg !500
  call void @llvm.dbg.value(metadata i64 %val.sroa.6.0.copyload18, metadata !502, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !498
  %val.sroa.0.0.cast.431.sroa_cast = inttoptr i64 %call.11.fca.0.extract to i64*, !dbg !500
  %val.sroa.0.0.copyload14 = load i64, i64* %val.sroa.0.0.cast.431.sroa_cast, align 8, !dbg !500
  call void @llvm.dbg.value(metadata i64 %val.sroa.0.0.copyload14, metadata !502, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !498
  call void @llvm.dbg.value(metadata i64 %val.sroa.0.0.copyload14, metadata !503, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !504
  call void @llvm.dbg.value(metadata i64 %val.sroa.6.0.copyload18, metadata !503, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !504
  %ld.18.fca.0.insert = insertvalue { i64, i64 } undef, i64 %val.sroa.0.0.copyload14, 0, !dbg !505
  %ld.18.fca.1.insert = insertvalue { i64, i64 } %ld.18.fca.0.insert, i64 %val.sroa.6.0.copyload18, 1, !dbg !505
  ret { i64, i64 } %ld.18.fca.1.insert, !dbg !505

else.10:                                          ; preds = %else.9
  call void @llvm.dbg.value(metadata i64 0, metadata !503, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !504
  call void @llvm.dbg.value(metadata i64 0, metadata !503, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !504
  ret { i64, i64 } zeroinitializer, !dbg !506
}

define void @command_line_arguments.Resources.LoadDir({ %Directory.0*, %error.0 }* nocapture sret %sret.formal.2, i8* nest nocapture readnone %nest.12, %Resources.0* %r, i64 %folder.chunk0, i64 %folder.chunk1) #0 !dbg !507 {
entry:
  %tmp.31 = alloca %IPST.2, align 8
  %tmp.28 = alloca %IPST.2, align 8
  %tmp.23 = alloca %IPST.2, align 8
  %tmp.20 = alloca %IPST.2, align 8
  %tmp.16 = alloca %IPST.5, align 8
  %tmpv.114 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.14 = alloca { %IPST.5, %error.0 }, align 8
  %k = alloca { i8*, i64 }, align 8
  %tmpv.130 = alloca { i8*, i64 }, align 8
  %tmpv.132 = alloca %IPST.13, align 8
  %tmpv.135 = alloca { i8*, i64 }, align 8
  %k2 = alloca { i8*, i64 }, align 8
  %tmpv.140 = alloca { i8*, i64 }, align 8
  %tmpv.142 = alloca %IPST.13, align 8
  %tmpv.147 = alloca { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, align 8
  %tmpv.153 = alloca { i8*, i64 }, align 8
  %tmpv.154 = alloca [1 x { %_type.0*, i8* }], align 8
  %tmpv.157 = alloca { i8*, i64 }, align 8
  %tmpv.165 = alloca { i8*, i64 }, align 8
  %tmpv.166 = alloca [1 x { %_type.0*, i8* }], align 8
  %tmpv.171 = alloca %IPST.1, align 8
  %sret.actual.22 = alloca %IPST.6, align 8
  %tmpv.184 = alloca %IPST.1, align 8
  %tmpv.189 = alloca { i8*, i64 }, align 8
  %tmpv.195 = alloca %IPST.13, align 8
  %tmpv.204 = alloca %IPST.4, align 8
  %tmpv.211 = alloca %IPST.4, align 8
  %tmpv.227 = alloca %IPST.4, align 8
  %tmpv.235 = alloca { i8*, i64 }, align 8
  %tmpv.236 = alloca [2 x { %_type.0*, i8* }], align 8
  %tmpv.239 = alloca { i8*, i64 }, align 8
  %tmpv.240 = alloca %Entity.0, align 8
  %tmpv.252 = alloca %IPST.4, align 8
  %tmpv.259 = alloca %IPST.4, align 8
  %tmpv.275 = alloca %IPST.4, align 8
  %tmpv.283 = alloca { i8*, i64 }, align 8
  %tmpv.284 = alloca [2 x { %_type.0*, i8* }], align 8
  %tmpv.287 = alloca { i8*, i64 }, align 8
  %tmpv.288 = alloca %Entity.0, align 8
  %tmpv.294 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Resources.0* %r, metadata !514, metadata !DIExpression()), !dbg !515
  call void @llvm.dbg.value(metadata i64 %folder.chunk0, metadata !516, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !517
  call void @llvm.dbg.value(metadata i64 %folder.chunk1, metadata !516, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !517
  call void @llvm.dbg.value(metadata %Directory.0* null, metadata !518, metadata !DIExpression()), !dbg !519
  %folder.addr.sroa.0.0.cast.682.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.114 to i64*, !dbg !520
  store i64 %folder.chunk0, i64* %folder.addr.sroa.0.0.cast.682.sroa_cast, align 8, !dbg !520
  %folder.addr.sroa.2.0.cast.682.sroa_idx297 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.114, i64 0, i64 0, i32 1, !dbg !520
  store i64 %folder.chunk1, i64* %folder.addr.sroa.2.0.cast.682.sroa_idx297, align 8, !dbg !520
  %index.5 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.114, i64 0, i64 1, !dbg !520
  %cast.684 = bitcast { i8*, i64 }* %index.5 to i8*, !dbg !520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.684, i8* align 8 bitcast ({ i8*, i64 }* @const.206 to i8*), i64 16, i1 false), !dbg !520
  %field.90 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.16, i64 0, i32 0, !dbg !520
  %cast.686 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.114, i64 0, i64 0, !dbg !520
  store { i8*, i64 }* %cast.686, { i8*, i64 }** %field.90, align 8, !dbg !520
  %field.91 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.16, i64 0, i32 1, !dbg !520
  store i64 2, i64* %field.91, align 8, !dbg !520
  %field.92 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.16, i64 0, i32 2, !dbg !520
  store i64 2, i64* %field.92, align 8, !dbg !520
  %call.32 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.5* byval nonnull %tmp.16), !dbg !520
  %call.32.fca.0.extract = extractvalue { i64, i64 } %call.32, 0, !dbg !520
  %call.32.fca.1.extract = extractvalue { i64, i64 } %call.32, 1, !dbg !520
  call void @path_filepath.Glob({ %IPST.5, %error.0 }* nonnull sret %sret.actual.14, i8* nest undef, i64 %call.32.fca.0.extract, i64 %call.32.fca.1.extract), !dbg !522
  %tmpv.112.sroa.0.sroa.0.0.tmpv.112.sroa.0.0.cast.692.sroa_cast.sroa_idx = getelementptr inbounds { %IPST.5, %error.0 }, { %IPST.5, %error.0 }* %sret.actual.14, i64 0, i32 0, i32 0, !dbg !522
  %tmpv.112.sroa.0.sroa.0.0.copyload271 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.112.sroa.0.sroa.0.0.tmpv.112.sroa.0.0.cast.692.sroa_cast.sroa_idx, align 8, !dbg !522
  %tmpv.112.sroa.0.sroa.3.0.tmpv.112.sroa.0.0.cast.692.sroa_cast.sroa_idx272 = getelementptr inbounds { %IPST.5, %error.0 }, { %IPST.5, %error.0 }* %sret.actual.14, i64 0, i32 0, i32 1, !dbg !522
  %tmpv.112.sroa.0.sroa.3.0.copyload273 = load i64, i64* %tmpv.112.sroa.0.sroa.3.0.tmpv.112.sroa.0.0.cast.692.sroa_cast.sroa_idx272, align 8, !dbg !522
  %tmpv.112.sroa.3.0.cast.692.sroa_idx254 = getelementptr inbounds { %IPST.5, %error.0 }, { %IPST.5, %error.0 }* %sret.actual.14, i64 0, i32 1, i32 0, !dbg !522
  %tmpv.112.sroa.3.0.copyload255 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.112.sroa.3.0.cast.692.sroa_idx254, align 8, !dbg !522
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.112.sroa.0.sroa.0.0.copyload271, metadata !523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !524
  call void @llvm.dbg.value(metadata i64 %tmpv.112.sroa.0.sroa.3.0.copyload273, metadata !523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !524
  call void @llvm.dbg.value(metadata { %IPST.5, %error.0 }* %sret.actual.14, metadata !523, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !524
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.112.sroa.3.0.copyload255, metadata !525, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !524
  %icmp.39 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.112.sroa.3.0.copyload255, null, !dbg !526
  br i1 %icmp.39, label %label.0.preheader, label %then.34

label.0.preheader:                                ; preds = %entry
  %icmp.43391 = icmp sgt i64 %tmpv.112.sroa.0.sroa.3.0.copyload273, 0, !dbg !527
  br i1 %icmp.43391, label %else.35, label %else.37

then.34:                                          ; preds = %entry
  %tmpv.112.sroa.4.0.cast.692.sroa_idx256 = getelementptr inbounds { %IPST.5, %error.0 }, { %IPST.5, %error.0 }* %sret.actual.14, i64 0, i32 1, i32 1, !dbg !522
  %0 = bitcast i8** %tmpv.112.sroa.4.0.cast.692.sroa_idx256 to i64*, !dbg !522
  %tmpv.112.sroa.4.0.copyload257321 = load i64, i64* %0, align 8, !dbg !522
  call void @llvm.dbg.value(metadata i8** %tmpv.112.sroa.4.0.cast.692.sroa_idx256, metadata !525, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !524
  call void @llvm.dbg.value(metadata %Directory.0* null, metadata !518, metadata !DIExpression()), !dbg !519
  %1 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.112.sroa.3.0.copyload255 to i64, !dbg !529
  call void @llvm.dbg.value(metadata i64 %1, metadata !530, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !531
  call void @llvm.dbg.value(metadata i64 %tmpv.112.sroa.4.0.copyload257321, metadata !530, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !531
  %tmp.17.sroa.0.0.cast.708.sroa_idx = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !529
  store %Directory.0* null, %Directory.0** %tmp.17.sroa.0.0.cast.708.sroa_idx, align 8, !dbg !529
  %tmp.17.sroa.2.0.cast.708.sroa_idx298 = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !529
  %tmp.17.sroa.2.0.cast.708.sroa_cast = bitcast %error.0* %tmp.17.sroa.2.0.cast.708.sroa_idx298 to i64*, !dbg !529
  store i64 %1, i64* %tmp.17.sroa.2.0.cast.708.sroa_cast, align 8, !dbg !529
  %tmp.17.sroa.3.0.cast.708.sroa_idx299 = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !529
  %tmp.17.sroa.3.0.cast.708.sroa_cast = bitcast i8** %tmp.17.sroa.3.0.cast.708.sroa_idx299 to i64*, !dbg !529
  store i64 %tmpv.112.sroa.4.0.copyload257321, i64* %tmp.17.sroa.3.0.cast.708.sroa_cast, align 8, !dbg !529
  ret void, !dbg !529

label.0:                                          ; preds = %else.35
  %icmp.43 = icmp slt i64 %add.0, %tmpv.112.sroa.0.sroa.3.0.copyload273, !dbg !527
  br i1 %icmp.43, label %else.35, label %else.37

else.35:                                          ; preds = %label.0.preheader, %label.0
  %tmpv.120.0392 = phi i64 [ %add.0, %label.0 ], [ 0, %label.0.preheader ]
  %ptroff.3 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.112.sroa.0.sroa.0.0.copyload271, i64 %tmpv.120.0392, !dbg !527
  %tmpv.121.sroa.0.0.cast.718.sroa_cast = bitcast { i8*, i64 }* %ptroff.3 to i64*, !dbg !527
  %tmpv.121.sroa.0.0.copyload224 = load i64, i64* %tmpv.121.sroa.0.0.cast.718.sroa_cast, align 8, !dbg !527
  %tmpv.121.sroa.3.0.cast.718.sroa_idx225 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.112.sroa.0.sroa.0.0.copyload271, i64 %tmpv.120.0392, i32 1, !dbg !527
  %tmpv.121.sroa.3.0.copyload226 = load i64, i64* %tmpv.121.sroa.3.0.cast.718.sroa_idx225, align 8, !dbg !527
  call void @llvm.dbg.value(metadata i64 %tmpv.121.sroa.0.0.copyload224, metadata !532, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !533
  call void @llvm.dbg.value(metadata i64 %tmpv.121.sroa.3.0.copyload226, metadata !532, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !533
  %call.33 = call { i64, i64 } @command_line_arguments.Resources.LoadFile(i8* nest undef, %Resources.0* %r, i64 %tmpv.121.sroa.0.0.copyload224, i64 %tmpv.121.sroa.3.0.copyload226), !dbg !534
  %call.33.fca.0.extract = extractvalue { i64, i64 } %call.33, 0, !dbg !534
  call void @llvm.dbg.value(metadata i64 %call.33.fca.0.extract, metadata !536, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !537
  %icmp.42 = icmp eq i64 %call.33.fca.0.extract, 0, !dbg !538
  %add.0 = add nuw nsw i64 %tmpv.120.0392, 1, !dbg !527
  br i1 %icmp.42, label %label.0, label %then.36

then.36:                                          ; preds = %else.35
  %call.33.fca.1.extract = extractvalue { i64, i64 } %call.33, 1, !dbg !534
  call void @llvm.dbg.value(metadata i64 %call.33.fca.1.extract, metadata !536, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !537
  call void @llvm.dbg.value(metadata %Directory.0* null, metadata !518, metadata !DIExpression()), !dbg !519
  call void @llvm.dbg.value(metadata i64 %call.33.fca.0.extract, metadata !530, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !531
  call void @llvm.dbg.value(metadata i64 %call.33.fca.1.extract, metadata !530, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !531
  %tmp.18.sroa.0.0.cast.734.sroa_idx = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !539
  store %Directory.0* null, %Directory.0** %tmp.18.sroa.0.0.cast.734.sroa_idx, align 8, !dbg !539
  %tmp.18.sroa.2.0.cast.734.sroa_idx300 = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !539
  %tmp.18.sroa.2.0.cast.734.sroa_cast = bitcast %error.0* %tmp.18.sroa.2.0.cast.734.sroa_idx300 to i64*, !dbg !539
  store i64 %call.33.fca.0.extract, i64* %tmp.18.sroa.2.0.cast.734.sroa_cast, align 8, !dbg !539
  %tmp.18.sroa.3.0.cast.734.sroa_idx301 = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !539
  %tmp.18.sroa.3.0.cast.734.sroa_cast = bitcast i8** %tmp.18.sroa.3.0.cast.734.sroa_idx301 to i64*, !dbg !539
  store i64 %call.33.fca.1.extract, i64* %tmp.18.sroa.3.0.cast.734.sroa_cast, align 8, !dbg !539
  ret void, !dbg !539

else.37:                                          ; preds = %label.0, %label.0.preheader
  %call.34 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !540
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.34, metadata !541, metadata !DIExpression()), !dbg !542
  %k.0.sroa_cast = bitcast { i8*, i64 }* %k to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %k.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %k.0.sroa_cast, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !543, metadata !DIExpression()), !dbg !545
  %icmp.44 = icmp eq %Resources.0* %r, null, !dbg !546
  br i1 %icmp.44, label %then.38, label %else.38

then.38:                                          ; preds = %else.37
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !546
  unreachable

else.38:                                          ; preds = %else.37
  %field.104 = getelementptr inbounds %Resources.0, %Resources.0* %r, i64 0, i32 0, !dbg !546
  %.field.ld.8 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.104, align 8, !dbg !546
  %cast.740 = bitcast { i8*, i64 }* %tmpv.130 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.740, i8 0, i64 16, i1 false)
  %cast.742 = bitcast %IPST.13* %tmpv.132 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.742, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.8, i8* nonnull %cast.742), !dbg !547
  %field.107 = getelementptr inbounds %IPST.13, %IPST.13* %tmpv.132, i64 0, i32 0, !dbg !547
  %tmpv.132.field.ld.2388 = load { i8*, i64 }*, { i8*, i64 }** %field.107, align 8, !dbg !547
  %icmp.48389 = icmp eq { i8*, i64 }* %tmpv.132.field.ld.2388, null, !dbg !547
  br i1 %icmp.48389, label %else.42, label %then.42.lr.ph

then.42.lr.ph:                                    ; preds = %else.38
  %field.106 = getelementptr inbounds %IPST.13, %IPST.13* %tmpv.132, i64 0, i32 1
  %cast.752 = bitcast { i8*, i64 }* %tmpv.135 to i8*
  %k401 = bitcast { i8*, i64 }* %k to i8*
  br label %then.42

then.39:                                          ; preds = %then.42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.752, i8* nonnull align 8 %k.0.sroa_cast, i64 16, i1 false)
  %call.35 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.34, i8* nonnull %cast.752), !dbg !548
  %cast.756 = bitcast i8* %call.35 to %Component.0**, !dbg !548
  %runtime.writeBarrier.ld.4 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !548
  %icmp.46 = icmp eq i32 %runtime.writeBarrier.ld.4, 0, !dbg !548
  br i1 %icmp.46, label %then.40, label %else.40

fallthrough.39:                                   ; preds = %else.41, %else.40, %then.42
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.742), !dbg !547
  %tmpv.132.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.107, align 8, !dbg !547
  %icmp.48 = icmp eq { i8*, i64 }* %tmpv.132.field.ld.2, null, !dbg !547
  br i1 %icmp.48, label %else.42, label %then.42

then.40:                                          ; preds = %then.39
  %icmp.45 = icmp eq i8* %call.35, null, !dbg !548
  br i1 %icmp.45, label %then.41, label %else.41

else.40:                                          ; preds = %then.39
  %cast.759 = bitcast %Component.0* %.ld.21 to i8*, !dbg !548
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.35, i8* %cast.759), !dbg !548
  br label %fallthrough.39

then.41:                                          ; preds = %then.40
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !548
  unreachable

else.41:                                          ; preds = %then.40
  store %Component.0* %.ld.21, %Component.0** %cast.756, align 8, !dbg !548
  br label %fallthrough.39

then.42:                                          ; preds = %then.42.lr.ph, %fallthrough.39
  %tmpv.132.field.ld.2390 = phi { i8*, i64 }* [ %tmpv.132.field.ld.2388, %then.42.lr.ph ], [ %tmpv.132.field.ld.2, %fallthrough.39 ]
  %cast.747 = bitcast { i8*, i64 }* %tmpv.132.field.ld.2390 to i8*, !dbg !547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.740, i8* align 8 %cast.747, i64 16, i1 false), !dbg !547
  %tmpv.132.field.ld.1 = load %Component.0**, %Component.0*** %field.106, align 8, !dbg !547
  %.ld.21 = load %Component.0*, %Component.0** %tmpv.132.field.ld.1, align 8, !dbg !547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %k401, i8* nonnull align 8 %cast.740, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %Component.0* %.ld.21, metadata !543, metadata !DIExpression()), !dbg !545
  %call.36 = call i64 @command_line_arguments.Component.Type(i8* nest undef, %Component.0* %.ld.21), !dbg !549
  %icmp.47 = icmp eq i64 %call.36, 0, !dbg !550
  br i1 %icmp.47, label %then.39, label %fallthrough.39

else.42:                                          ; preds = %fallthrough.39, %else.38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %k.0.sroa_cast)
  %icmp.72 = icmp eq { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.34, null, !dbg !551
  br i1 %icmp.72, label %else.63, label %fallthrough.61.lr.ph

fallthrough.61.lr.ph:                             ; preds = %else.42
  %cast.865 = getelementptr inbounds { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.34, i64 0, i32 0
  %k2.0.sroa_cast = bitcast { i8*, i64 }* %k2 to i8*
  %cast.764 = bitcast { i8*, i64 }* %tmpv.140 to i8*
  %cast.766 = bitcast %IPST.13* %tmpv.142 to i8*
  %field.153 = getelementptr inbounds %IPST.13, %IPST.13* %tmpv.142, i64 0, i32 0
  %field.109 = getelementptr inbounds %IPST.13, %IPST.13* %tmpv.142, i64 0, i32 1
  %2 = bitcast %Resources.0* %r to i64*
  %3 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %tmpv.147 to i64*
  %cast.805 = bitcast { i8*, i64 }* %tmpv.157 to i8*
  %cast.834 = bitcast %IPST.1* %tmpv.171 to i8*
  %field.140 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.171, i64 0, i32 1
  %field.141 = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.171, i64 0, i32 2
  %cast.837 = bitcast %IPST.1* %tmpv.171 to %IPST.6*
  %tmpv.178.sroa.0.0.cast.842.sroa_idx = bitcast %IPST.6* %sret.actual.22 to %Component.0***
  %4 = getelementptr inbounds %IPST.6, %IPST.6* %sret.actual.22, i64 0, i32 1
  %5 = getelementptr inbounds %IPST.6, %IPST.6* %sret.actual.22, i64 0, i32 2
  %tmpv.178.sroa.0.0.cast.845.sroa_idx = getelementptr inbounds %IPST.1, %IPST.1* %tmpv.171, i64 0, i32 0
  %cast.850 = bitcast %IPST.1* %tmpv.184 to i8*
  %cast.859 = bitcast { i8*, i64 }* %tmpv.189 to i8*
  %k2402 = bitcast { i8*, i64 }* %k2 to i8*
  %deref.ld.0419 = load i64, i64* %cast.865, align 8, !dbg !551
  %icmp.73420 = icmp sgt i64 %deref.ld.0419, 0, !dbg !552
  br i1 %icmp.73420, label %then.62, label %else.63

then.44:                                          ; preds = %then.60
  %call.39 = call { i64, i64 } @command_line_arguments.Component.Base(i8* nest undef, %Component.0* %.ld.23), !dbg !553
  %call.39.fca.0.extract = extractvalue { i64, i64 } %call.39, 0, !dbg !553
  %call.39.fca.1.extract = extractvalue { i64, i64 } %call.39, 1, !dbg !553
  %call.40 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !556
  %tmpv.151.sroa.0.0.cast.790.sroa_cast = bitcast { i8*, i64 }* %tmpv.153 to i64*
  store i64 %call.39.fca.0.extract, i64* %tmpv.151.sroa.0.0.cast.790.sroa_cast, align 8
  %tmpv.151.sroa.2.0.cast.790.sroa_idx193 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.153, i64 0, i32 1
  store i64 %call.39.fca.1.extract, i64* %tmpv.151.sroa.2.0.cast.790.sroa_idx193, align 8
  %cast.793 = bitcast { i8*, i64 }* %tmpv.153 to i8*, !dbg !556
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.40, i8* nonnull %cast.793), !dbg !556
  %tmp.19.sroa.0.0.cast.795.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.154, i64 0, i64 0, i32 0, !dbg !556
  store %_type.0* @string..d, %_type.0** %tmp.19.sroa.0.0.cast.795.sroa_idx, align 8, !dbg !556
  %tmp.19.sroa.2.0.cast.795.sroa_idx302 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.154, i64 0, i64 0, i32 1, !dbg !556
  store i8* %call.40, i8** %tmp.19.sroa.2.0.cast.795.sroa_idx302, align 8, !dbg !556
  %field.115 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.20, i64 0, i32 0, !dbg !556
  %cast.798 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.154, i64 0, i64 0, !dbg !556
  store { %_type.0*, i8* }* %cast.798, { %_type.0*, i8* }** %field.115, align 8, !dbg !556
  %field.116 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.20, i64 0, i32 1, !dbg !556
  store i64 1, i64* %field.116, align 8, !dbg !556
  %field.117 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.20, i64 0, i32 2, !dbg !556
  store i64 1, i64* %field.117, align 8, !dbg !556
  %call.41 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([33 x i8]* @const.209 to i64), i64 32, %IPST.2* byval nonnull %tmp.20), !dbg !556
  %call.41.fca.0.extract = extractvalue { i64, i64 } %call.41, 0, !dbg !556
  %call.41.fca.1.extract = extractvalue { i64, i64 } %call.41, 1, !dbg !556
  %icmp.50 = icmp eq i64 %call.41.fca.0.extract, 0, !dbg !556
  br i1 %icmp.50, label %fallthrough.45, label %else.45

else.44:                                          ; preds = %then.60
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !557, metadata !DIExpression()), !dbg !558
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.805, i8* nonnull align 8 %k2.0.sroa_cast, i64 16, i1 false)
  %.field.ld.11 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.104, align 8, !dbg !559
  %call.42 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.11, i8* nonnull %cast.805), !dbg !560
  %call.42.fca.0.extract = extractvalue { i64, i8 } %call.42, 0, !dbg !560
  %call.42.fca.1.extract = extractvalue { i64, i8 } %call.42, 1, !dbg !560
  %cast.815 = inttoptr i64 %call.42.fca.0.extract to %Component.0**, !dbg !560
  %.ld.26 = load %Component.0*, %Component.0** %cast.815, align 8, !dbg !560
  call void @llvm.dbg.value(metadata %Component.0* %.ld.26, metadata !557, metadata !DIExpression()), !dbg !558
  call void @llvm.dbg.value(metadata i8 %call.42.fca.1.extract, metadata !561, metadata !DIExpression()), !dbg !562
  %icmp.54 = icmp eq i8 %call.42.fca.1.extract, 0, !dbg !563
  br i1 %icmp.54, label %then.47, label %else.47

fallthrough.45:                                   ; preds = %then.44, %else.45
  %tmpv.156.0 = phi i64 [ %.field.ld.10325, %else.45 ], [ 0, %then.44 ]
  call void @runtime.gopanic(i8* nest undef, i64 %tmpv.156.0, i64 %call.41.fca.1.extract), !dbg !564
  unreachable

else.45:                                          ; preds = %then.44
  %6 = inttoptr i64 %call.41.fca.0.extract to i64*, !dbg !556
  %.field.ld.10325 = load i64, i64* %6, align 8, !dbg !556
  br label %fallthrough.45

then.47:                                          ; preds = %else.44
  %call.43 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !565
  %cast.817 = bitcast { i8*, i64 }* %tmpv.165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.817, i8* nonnull align 8 %k2.0.sroa_cast, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.43, i8* nonnull %cast.817), !dbg !565
  %tmp.22.sroa.0.0.cast.822.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.166, i64 0, i64 0, i32 0, !dbg !565
  store %_type.0* @string..d, %_type.0** %tmp.22.sroa.0.0.cast.822.sroa_idx, align 8, !dbg !565
  %tmp.22.sroa.2.0.cast.822.sroa_idx303 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.166, i64 0, i64 0, i32 1, !dbg !565
  store i8* %call.43, i8** %tmp.22.sroa.2.0.cast.822.sroa_idx303, align 8, !dbg !565
  %field.129 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.23, i64 0, i32 0, !dbg !565
  %cast.825 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.166, i64 0, i64 0, !dbg !565
  store { %_type.0*, i8* }* %cast.825, { %_type.0*, i8* }** %field.129, align 8, !dbg !565
  %field.130 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.23, i64 0, i32 1, !dbg !565
  store i64 1, i64* %field.130, align 8, !dbg !565
  %field.131 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.23, i64 0, i32 2, !dbg !565
  store i64 1, i64* %field.131, align 8, !dbg !565
  %call.44 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.211 to i64), i64 29, %IPST.2* byval nonnull %tmp.23), !dbg !565
  %call.44.fca.0.extract = extractvalue { i64, i64 } %call.44, 0, !dbg !565
  %call.44.fca.1.extract = extractvalue { i64, i64 } %call.44, 1, !dbg !565
  %icmp.53 = icmp eq i64 %call.44.fca.0.extract, 0, !dbg !565
  br i1 %icmp.53, label %fallthrough.48, label %else.48

else.47:                                          ; preds = %else.44
  %icmp.55 = icmp eq %Component.0* %.ld.26, null, !dbg !566
  br i1 %icmp.55, label %then.49, label %else.50

fallthrough.48:                                   ; preds = %then.47, %else.48
  %tmpv.168.0 = phi i64 [ %.field.ld.12324, %else.48 ], [ 0, %then.47 ]
  call void @runtime.gopanic(i8* nest undef, i64 %tmpv.168.0, i64 %call.44.fca.1.extract), !dbg !567
  unreachable

else.48:                                          ; preds = %then.47
  %7 = inttoptr i64 %call.44.fca.0.extract to i64*, !dbg !565
  %.field.ld.12324 = load i64, i64* %7, align 8, !dbg !565
  br label %fallthrough.48

then.49:                                          ; preds = %else.47
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !566
  unreachable

else.50:                                          ; preds = %else.47
  %field.138 = getelementptr inbounds %Component.0, %Component.0* %.ld.26, i64 0, i32 4, !dbg !566
  %cast.835 = bitcast %IPST.1* %field.138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.834, i8* nonnull align 8 %cast.835, i64 24, i1 false)
  %tmpv.171.field.ld.0 = load i64, i64* %field.140, align 8, !dbg !568
  %add.1 = add i64 %tmpv.171.field.ld.0, 1, !dbg !568
  %tmpv.171.field.ld.1 = load i64, i64* %field.141, align 8, !dbg !568
  %icmp.57 = icmp ugt i64 %add.1, %tmpv.171.field.ld.1, !dbg !568
  br i1 %icmp.57, label %then.51, label %else.51

then.51:                                          ; preds = %else.50
  call void @runtime.growslice(%IPST.6* nonnull sret %sret.actual.22, i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i64 0, i32 0), %IPST.6* byval nonnull %cast.837, i64 %add.1), !dbg !568
  %tmpv.178.sroa.0.0.copyload = load %Component.0**, %Component.0*** %tmpv.178.sroa.0.0.cast.842.sroa_idx, align 8
  %tmpv.178.sroa.3.0.copyload = load i64, i64* %4, align 8
  %tmpv.178.sroa.4.0.copyload = load i64, i64* %5, align 8
  br label %fallthrough.51

fallthrough.51:                                   ; preds = %else.52, %then.51
  %tmpv.178.sroa.0.0 = phi %Component.0** [ %tmpv.178.sroa.0.0.copyload, %then.51 ], [ %tmpv.171.field.ld.3, %else.52 ]
  %tmpv.178.sroa.3.0 = phi i64 [ %tmpv.178.sroa.3.0.copyload, %then.51 ], [ %add.1, %else.52 ]
  %tmpv.178.sroa.4.0 = phi i64 [ %tmpv.178.sroa.4.0.copyload, %then.51 ], [ %tmpv.171.field.ld.1, %else.52 ]
  store %Component.0** %tmpv.178.sroa.0.0, %Component.0*** %tmpv.178.sroa.0.0.cast.845.sroa_idx, align 8, !dbg !568
  store i64 %tmpv.178.sroa.3.0, i64* %field.140, align 8, !dbg !568
  store i64 %tmpv.178.sroa.4.0, i64* %field.141, align 8, !dbg !568
  %icmp.64 = icmp sge i64 %tmpv.171.field.ld.0, %tmpv.178.sroa.3.0, !dbg !568
  %8 = icmp slt i64 %tmpv.171.field.ld.0, 0, !dbg !568
  %ior.105 = or i1 %8, %icmp.64, !dbg !568
  br i1 %ior.105, label %then.54, label %else.54

else.51:                                          ; preds = %else.50
  %icmp.59 = icmp sgt i64 %add.1, %tmpv.171.field.ld.1, !dbg !568
  %add.1.lobit326 = or i64 %add.1, %tmpv.171.field.ld.1, !dbg !568
  %9 = icmp slt i64 %add.1.lobit326, 0, !dbg !568
  %10 = or i1 %icmp.59, %9, !dbg !568
  br i1 %10, label %then.52, label %else.52

then.52:                                          ; preds = %else.51
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !568
  unreachable

else.52:                                          ; preds = %else.51
  %tmpv.171.field.ld.3 = load %Component.0**, %Component.0*** %tmpv.178.sroa.0.0.cast.845.sroa_idx, align 8, !dbg !568
  br label %fallthrough.51

then.54:                                          ; preds = %fallthrough.51
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !568
  unreachable

else.54:                                          ; preds = %fallthrough.51
  %ptroff.5 = getelementptr %Component.0*, %Component.0** %tmpv.178.sroa.0.0, i64 %tmpv.171.field.ld.0, !dbg !568
  %runtime.writeBarrier.ld.5 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !568
  %icmp.67 = icmp eq i32 %runtime.writeBarrier.ld.5, 0, !dbg !568
  br i1 %icmp.67, label %then.55, label %else.55

then.55:                                          ; preds = %else.54
  %icmp.66 = icmp eq %Component.0** %ptroff.5, null, !dbg !568
  br i1 %icmp.66, label %then.56, label %else.56

fallthrough.55:                                   ; preds = %else.55, %else.56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.850, i8* nonnull align 8 %cast.834, i64 24, i1 false)
  %runtime.writeBarrier.ld.6 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !569
  %icmp.69 = icmp eq i32 %runtime.writeBarrier.ld.6, 0, !dbg !569
  br i1 %icmp.69, label %else.58, label %else.57

else.55:                                          ; preds = %else.54
  %cast.848 = bitcast %Component.0** %ptroff.5 to i8*, !dbg !568
  %cast.849 = inttoptr i64 %call.38.fca.0.extract to i8*, !dbg !568
  call void @runtime.writebarrierptr(i8* nest undef, i8* %cast.848, i8* %cast.849), !dbg !568
  br label %fallthrough.55

then.56:                                          ; preds = %then.55
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !568
  unreachable

else.56:                                          ; preds = %then.55
  store %Component.0* %11, %Component.0** %ptroff.5, align 8, !dbg !568
  br label %fallthrough.55

fallthrough.57:                                   ; preds = %else.57, %else.58
  %call.45 = call i64 @command_line_arguments.Component.Type(i8* nest undef, %Component.0* %11), !dbg !570
  %field.152 = getelementptr inbounds %Component.0, %Component.0* %.ld.26, i64 0, i32 1, !dbg !571
  store i64 %call.45, i64* %field.152, align 8, !dbg !572
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.859, i8* nonnull align 8 %k2.0.sroa_cast, i64 16, i1 false)
  call void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* nonnull %call.34, i8* nonnull %cast.859), !dbg !573
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.766), !dbg !574
  %tmpv.142.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.153, align 8, !dbg !574
  %icmp.71 = icmp eq { i8*, i64 }* %tmpv.142.field.ld.2, null, !dbg !574
  br i1 %icmp.71, label %else.60, label %then.60

else.57:                                          ; preds = %fallthrough.55
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7.1command_line_arguments.Component, i64 0, i32 0), i8* nonnull %cast.835, i8* nonnull %cast.850), !dbg !569
  br label %fallthrough.57

else.58:                                          ; preds = %fallthrough.55
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.835, i8* nonnull align 8 %cast.850, i64 24, i1 false), !dbg !569
  br label %fallthrough.57

then.60:                                          ; preds = %then.62, %fallthrough.57
  %tmpv.142.field.ld.2387 = phi { i8*, i64 }* [ %tmpv.142.field.ld.2, %fallthrough.57 ], [ %tmpv.142.field.ld.2385, %then.62 ]
  %cast.771 = bitcast { i8*, i64 }* %tmpv.142.field.ld.2387 to i8*, !dbg !574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.764, i8* align 8 %cast.771, i64 16, i1 false), !dbg !574
  %tmpv.142.field.ld.1 = load %Component.0**, %Component.0*** %field.109, align 8, !dbg !574
  %.ld.23 = load %Component.0*, %Component.0** %tmpv.142.field.ld.1, align 8, !dbg !574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %k2402, i8* nonnull align 8 %cast.764, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %Component.0* %.ld.23, metadata !575, metadata !DIExpression()), !dbg !576
  %call.37 = call { i64, i64 } @command_line_arguments.Component.Base(i8* nest undef, %Component.0* %.ld.23), !dbg !577
  %call.37.fca.1.extract = extractvalue { i64, i64 } %call.37, 1, !dbg !577
  %call.37.fca.0.extract = extractvalue { i64, i64 } %call.37, 0, !dbg !577
  %.field.ld.9322 = load i64, i64* %2, align 8, !dbg !578
  store i64 %.field.ld.9322, i64* %3, align 8
  %call.38 = call { i64, i8 } @command_line_arguments.Components.LookupBaseType(i8* nest undef, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** nonnull %tmpv.147, i64 %call.37.fca.0.extract, i64 %call.37.fca.1.extract), !dbg !579
  %call.38.fca.0.extract = extractvalue { i64, i8 } %call.38, 0, !dbg !579
  %call.38.fca.1.extract = extractvalue { i64, i8 } %call.38, 1, !dbg !579
  %11 = inttoptr i64 %call.38.fca.0.extract to %Component.0*, !dbg !579
  call void @llvm.dbg.value(metadata %Component.0* %11, metadata !580, metadata !DIExpression()), !dbg !562
  call void @llvm.dbg.value(metadata i8 %call.38.fca.1.extract, metadata !561, metadata !DIExpression()), !dbg !562
  %icmp.51 = icmp eq i8 %call.38.fca.1.extract, 0, !dbg !581
  br i1 %icmp.51, label %then.44, label %else.44

else.60:                                          ; preds = %fallthrough.57, %then.62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %k2.0.sroa_cast)
  %deref.ld.0 = load i64, i64* %cast.865, align 8, !dbg !551
  %icmp.73 = icmp sgt i64 %deref.ld.0, 0, !dbg !552
  br i1 %icmp.73, label %then.62, label %else.63

then.62:                                          ; preds = %fallthrough.61.lr.ph, %else.60
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %k2.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %k2.0.sroa_cast, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !575, metadata !DIExpression()), !dbg !576
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.764, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.766, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* nonnull %call.34, i8* nonnull %cast.766), !dbg !574
  %tmpv.142.field.ld.2385 = load { i8*, i64 }*, { i8*, i64 }** %field.153, align 8, !dbg !574
  %icmp.71386 = icmp eq { i8*, i64 }* %tmpv.142.field.ld.2385, null, !dbg !574
  br i1 %icmp.71386, label %else.60, label %then.60

else.63:                                          ; preds = %else.60, %fallthrough.61.lr.ph, %else.42
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !582, metadata !DIExpression()), !dbg !584
  %.field.ld.16 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.104, align 8, !dbg !585
  %cast.870 = bitcast %IPST.13* %tmpv.195 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.870, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.16, i8* nonnull %cast.870), !dbg !586
  %field.231 = getelementptr inbounds %IPST.13, %IPST.13* %tmpv.195, i64 0, i32 0, !dbg !586
  %tmpv.195.field.ld.2383 = load { i8*, i64 }*, { i8*, i64 }** %field.231, align 8, !dbg !586
  %icmp.99384 = icmp eq { i8*, i64 }* %tmpv.195.field.ld.2383, null, !dbg !586
  br i1 %icmp.99384, label %else.63.else.86_crit_edge, label %then.86.lr.ph

else.63.else.86_crit_edge:                        ; preds = %else.63
  %.pre = getelementptr inbounds %Resources.0, %Resources.0* %r, i64 0, i32 1, !dbg !587
  br label %else.86

then.86.lr.ph:                                    ; preds = %else.63
  %field.156 = getelementptr inbounds %IPST.13, %IPST.13* %tmpv.195, i64 0, i32 1
  %cast.891 = bitcast %IPST.4* %tmpv.204 to i8*
  %field.163 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.204, i64 0, i32 0
  %cast.1053 = bitcast %IPST.4* %tmpv.252 to i8*
  %field.199 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.252, i64 0, i32 0
  %cast.926 = bitcast %IPST.4* %tmpv.211 to i8*
  %field.169 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.211, i64 0, i32 0
  %field.159 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.204, i64 0, i32 1
  %cast.1088 = bitcast %IPST.4* %tmpv.259 to i8*
  %field.205 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.259, i64 0, i32 0
  %field.195 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.252, i64 0, i32 1
  %field.165 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.211, i64 0, i32 1
  %field.201 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.259, i64 0, i32 1
  %tmpv.232.sroa.0.0.cast.1004.sroa_cast = bitcast { i8*, i64 }* %tmpv.235 to i64*
  %tmpv.232.sroa.2.0.cast.1004.sroa_idx101 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.235, i64 0, i32 1
  %cast.1007 = bitcast { i8*, i64 }* %tmpv.235 to i8*
  %tmp.26.sroa.0.0.cast.1011.sroa_idx = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.236, i64 0, i64 0, i32 0
  %tmp.26.sroa.2.0.cast.1011.sroa_idx315 = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.236, i64 0, i64 0, i32 1
  %tmp.27.sroa.0.0.cast.1013.sroa_idx = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.236, i64 0, i64 1, i32 0
  %tmp.27.sroa.2.0.cast.1013.sroa_idx316 = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.236, i64 0, i64 1, i32 1
  %12 = bitcast i8** %tmp.27.sroa.2.0.cast.1013.sroa_idx316 to %Directory.0**
  %cast.1017 = bitcast [2 x { %_type.0*, i8* }]* %tmpv.236 to i8*
  %13 = bitcast %IPST.2* %tmp.28 to i8**
  %field.188 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.28, i64 0, i32 1
  %field.189 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.28, i64 0, i32 2
  %tmpv.238.sroa.0.0.cast.1023.sroa_cast = bitcast { i8*, i64 }* %tmpv.239 to i64*
  %tmpv.238.sroa.2.0.cast.1023.sroa_idx99 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.239, i64 0, i32 1
  %field.190 = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.240, i64 0, i32 0
  %field.191 = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.240, i64 0, i32 1
  %14 = bitcast i8** %field.191 to %Directory.0**
  %field.192 = getelementptr inbounds %Resources.0, %Resources.0* %r, i64 0, i32 1
  %cast.1030 = bitcast { i8*, i64 }* %tmpv.239 to i8*
  %cast.966 = bitcast %IPST.4* %tmpv.227 to i8*
  %field.179 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.227, i64 0, i32 0
  %field.175 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.227, i64 0, i32 1
  %tmpv.280.sroa.0.0.cast.1163.sroa_cast = bitcast { i8*, i64 }* %tmpv.283 to i64*
  %tmpv.280.sroa.2.0.cast.1163.sroa_idx24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.283, i64 0, i32 1
  %cast.1166 = bitcast { i8*, i64 }* %tmpv.283 to i8*
  %tmp.29.sroa.0.0.cast.1170.sroa_idx = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.284, i64 0, i64 0, i32 0
  %tmp.29.sroa.2.0.cast.1170.sroa_idx317 = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.284, i64 0, i64 0, i32 1
  %tmp.30.sroa.0.0.cast.1172.sroa_idx = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.284, i64 0, i64 1, i32 0
  %tmp.30.sroa.2.0.cast.1172.sroa_idx318 = getelementptr inbounds [2 x { %_type.0*, i8* }], [2 x { %_type.0*, i8* }]* %tmpv.284, i64 0, i64 1, i32 1
  %15 = bitcast i8** %tmp.30.sroa.2.0.cast.1172.sroa_idx318 to %File.1**
  %cast.1176 = bitcast [2 x { %_type.0*, i8* }]* %tmpv.284 to i8*
  %16 = bitcast %IPST.2* %tmp.31 to i8**
  %field.224 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.31, i64 0, i32 1
  %field.225 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.31, i64 0, i32 2
  %tmpv.286.sroa.0.0.cast.1182.sroa_cast = bitcast { i8*, i64 }* %tmpv.287 to i64*
  %tmpv.286.sroa.2.0.cast.1182.sroa_idx22 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.287, i64 0, i32 1
  %field.226 = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.288, i64 0, i32 0
  %field.227 = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.288, i64 0, i32 1
  %17 = bitcast i8** %field.227 to %File.1**
  %cast.1189 = bitcast { i8*, i64 }* %tmpv.287 to i8*
  %cast.1128 = bitcast %IPST.4* %tmpv.275 to i8*
  %field.215 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.275, i64 0, i32 0
  %field.211 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.275, i64 0, i32 1
  %cast.1037 = bitcast %Entity.0* %tmpv.240 to i8*
  %cast.1196 = bitcast %Entity.0* %tmpv.288 to i8*
  br label %then.86

case.0:                                           ; preds = %then.86
  %call.46 = call { i64, i64 } @command_line_arguments.Component.Name(i8* nest undef, %Component.0* %.ld.41), !dbg !588
  %call.46.fca.0.extract = extractvalue { i64, i64 } %call.46, 0, !dbg !588
  %call.46.fca.1.extract = extractvalue { i64, i64 } %call.46, 1, !dbg !588
  %call.47 = call %Directory.0* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.NewDirectory(i8* nest undef, i64 %call.46.fca.0.extract, i64 %call.46.fca.1.extract, i64 0, i64 0), !dbg !590
  call void @llvm.dbg.value(metadata %Directory.0* %call.47, metadata !591, metadata !DIExpression()), !dbg !592
  %icmp.75 = icmp eq %Component.0* %.ld.41, null, !dbg !593
  br i1 %icmp.75, label %then.64, label %else.64

case.1:                                           ; preds = %then.86
  %call.60 = call { i64, i64 } @command_line_arguments.Component.Name(i8* nest undef, %Component.0* %.ld.41), !dbg !595
  %call.60.fca.0.extract = extractvalue { i64, i64 } %call.60, 0, !dbg !595
  %call.60.fca.1.extract = extractvalue { i64, i64 } %call.60, 1, !dbg !595
  %call.61 = call %File.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.NewFile(i8* nest undef, i64 %call.60.fca.0.extract, i64 %call.60.fca.1.extract, i64 0, i64 0), !dbg !597
  call void @llvm.dbg.value(metadata %File.1* %call.61, metadata !598, metadata !DIExpression()), !dbg !601
  %icmp.87 = icmp eq %Component.0* %.ld.41, null, !dbg !602
  br i1 %icmp.87, label %then.75, label %else.75

default.0:                                        ; preds = %then.86
  %call.74 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !604
  %cast.1198 = bitcast { i8*, i64 }* %tmpv.294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1198, i8* align 8 bitcast ({ i8*, i64 }* @const.220 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.74, i8* nonnull %cast.1198), !dbg !604
  %18 = ptrtoint i8* %call.74 to i64, !dbg !604
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %18), !dbg !604
  unreachable

then.64:                                          ; preds = %case.0
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !593
  unreachable

else.64:                                          ; preds = %case.0
  %field.157 = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 2, !dbg !593
  %.field.ld.17 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.157, align 8, !dbg !593
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.891, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.17, i8* nonnull %cast.891), !dbg !605
  %tmpv.204.field.ld.2372 = load { i8*, i64 }*, { i8*, i64 }** %field.163, align 8, !dbg !605
  %icmp.76373 = icmp eq { i8*, i64 }* %tmpv.204.field.ld.2372, null, !dbg !605
  br i1 %icmp.76373, label %else.65, label %then.65

then.65:                                          ; preds = %else.64, %then.65
  %tmpv.204.field.ld.2374 = phi { i8*, i64 }* [ %tmpv.204.field.ld.2, %then.65 ], [ %tmpv.204.field.ld.2372, %else.64 ]
  %tmpv.202.sroa.0.0.cast.896.sroa_cast = bitcast { i8*, i64 }* %tmpv.204.field.ld.2374 to i64*, !dbg !605
  %tmpv.202.sroa.0.0.copyload170 = load i64, i64* %tmpv.202.sroa.0.0.cast.896.sroa_cast, align 8, !dbg !605
  %tmpv.202.sroa.3.0.cast.896.sroa_idx171 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.204.field.ld.2374, i64 0, i32 1, !dbg !605
  %tmpv.202.sroa.3.0.copyload172 = load i64, i64* %tmpv.202.sroa.3.0.cast.896.sroa_idx171, align 8, !dbg !605
  %tmpv.204.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.159, align 8, !dbg !605
  %tmpv.203.sroa.0.0.cast.898.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.204.field.ld.1 to i64*, !dbg !605
  %tmpv.203.sroa.0.0.copyload161 = load i64, i64* %tmpv.203.sroa.0.0.cast.898.sroa_cast, align 8, !dbg !605
  %tmpv.203.sroa.3.0.cast.898.sroa_idx162 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.204.field.ld.1, i64 0, i32 1, !dbg !605
  %tmpv.203.sroa.3.0.cast.898.sroa_cast = bitcast i8** %tmpv.203.sroa.3.0.cast.898.sroa_idx162 to i64*, !dbg !605
  %tmpv.203.sroa.3.0.copyload163 = load i64, i64* %tmpv.203.sroa.3.0.cast.898.sroa_cast, align 8, !dbg !605
  call void @llvm.dbg.value(metadata i64 %tmpv.202.sroa.0.0.copyload170, metadata !606, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !607
  call void @llvm.dbg.value(metadata i64 %tmpv.202.sroa.3.0.copyload172, metadata !606, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !607
  call void @llvm.dbg.value(metadata i64 %tmpv.203.sroa.0.0.copyload161, metadata !608, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !607
  call void @llvm.dbg.value(metadata i64 %tmpv.203.sroa.3.0.copyload163, metadata !608, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !607
  %call.48 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub(i8* nest undef, %Directory.0* %call.47), !dbg !609
  %call.48.fca.0.extract = extractvalue { i64, i64 } %call.48, 0, !dbg !609
  %call.48.fca.1.extract = extractvalue { i64, i64 } %call.48, 1, !dbg !609
  %call.49 = call { i64, i64 } @strings.ToLower(i8* nest undef, i64 %tmpv.202.sroa.0.0.copyload170, i64 %tmpv.202.sroa.3.0.copyload172), !dbg !610
  %call.49.fca.0.extract = extractvalue { i64, i64 } %call.49, 0, !dbg !610
  %call.49.fca.1.extract = extractvalue { i64, i64 } %call.49, 1, !dbg !610
  %19 = inttoptr i64 %call.48.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !611
  %field.161 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %19, i64 0, i32 6, !dbg !611
  %.field.ld.18 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.161, align 8, !dbg !611
  %20 = inttoptr i64 %call.48.fca.1.extract to i8*, !dbg !611
  call void %.field.ld.18(i8* nest undef, i8* %20, i64 %call.49.fca.0.extract, i64 %call.49.fca.1.extract, i64 %tmpv.203.sroa.0.0.copyload161, i64 %tmpv.203.sroa.3.0.copyload163), !dbg !611
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.891), !dbg !605
  %tmpv.204.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.163, align 8, !dbg !605
  %icmp.76 = icmp eq { i8*, i64 }* %tmpv.204.field.ld.2, null, !dbg !605
  br i1 %icmp.76, label %else.65, label %then.65

else.65:                                          ; preds = %then.65, %else.64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.926, i8 0, i64 96, i1 false)
  %command_line_arguments.defaultAttrs.ld.0 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.defaultAttrs, align 8, !dbg !612
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %command_line_arguments.defaultAttrs.ld.0, i8* nonnull %cast.926), !dbg !612
  %tmpv.211.field.ld.2375 = load { i8*, i64 }*, { i8*, i64 }** %field.169, align 8, !dbg !612
  %icmp.77376 = icmp eq { i8*, i64 }* %tmpv.211.field.ld.2375, null, !dbg !612
  br i1 %icmp.77376, label %command_line_arguments.Component.Bases.exit, label %then.66

then.66:                                          ; preds = %else.65, %then.66
  %tmpv.211.field.ld.2377 = phi { i8*, i64 }* [ %tmpv.211.field.ld.2, %then.66 ], [ %tmpv.211.field.ld.2375, %else.65 ]
  %tmpv.209.sroa.0.0.cast.931.sroa_cast = bitcast { i8*, i64 }* %tmpv.211.field.ld.2377 to i64*, !dbg !612
  %tmpv.209.sroa.0.0.copyload150 = load i64, i64* %tmpv.209.sroa.0.0.cast.931.sroa_cast, align 8, !dbg !612
  %tmpv.209.sroa.3.0.cast.931.sroa_idx151 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.211.field.ld.2377, i64 0, i32 1, !dbg !612
  %tmpv.209.sroa.3.0.copyload152 = load i64, i64* %tmpv.209.sroa.3.0.cast.931.sroa_idx151, align 8, !dbg !612
  %tmpv.211.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.165, align 8, !dbg !612
  %tmpv.210.sroa.0.0.cast.933.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.211.field.ld.1 to i64*, !dbg !612
  %tmpv.210.sroa.0.0.copyload141 = load i64, i64* %tmpv.210.sroa.0.0.cast.933.sroa_cast, align 8, !dbg !612
  %tmpv.210.sroa.3.0.cast.933.sroa_idx142 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.211.field.ld.1, i64 0, i32 1, !dbg !612
  %tmpv.210.sroa.3.0.cast.933.sroa_cast = bitcast i8** %tmpv.210.sroa.3.0.cast.933.sroa_idx142 to i64*, !dbg !612
  %tmpv.210.sroa.3.0.copyload143 = load i64, i64* %tmpv.210.sroa.3.0.cast.933.sroa_cast, align 8, !dbg !612
  call void @llvm.dbg.value(metadata i64 %tmpv.209.sroa.0.0.copyload150, metadata !614, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !615
  call void @llvm.dbg.value(metadata i64 %tmpv.209.sroa.3.0.copyload152, metadata !614, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !615
  call void @llvm.dbg.value(metadata i64 %tmpv.210.sroa.0.0.copyload141, metadata !616, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !615
  call void @llvm.dbg.value(metadata i64 %tmpv.210.sroa.3.0.copyload143, metadata !616, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !615
  %call.50 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub(i8* nest undef, %Directory.0* %call.47), !dbg !617
  %call.50.fca.0.extract = extractvalue { i64, i64 } %call.50, 0, !dbg !617
  %call.50.fca.1.extract = extractvalue { i64, i64 } %call.50, 1, !dbg !617
  %call.51 = call { i64, i64 } @strings.ToLower(i8* nest undef, i64 %tmpv.209.sroa.0.0.copyload150, i64 %tmpv.209.sroa.3.0.copyload152), !dbg !618
  %call.51.fca.0.extract = extractvalue { i64, i64 } %call.51, 0, !dbg !618
  %call.51.fca.1.extract = extractvalue { i64, i64 } %call.51, 1, !dbg !618
  %21 = inttoptr i64 %call.50.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !619
  %field.167 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %21, i64 0, i32 6, !dbg !619
  %.field.ld.19 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.167, align 8, !dbg !619
  %22 = inttoptr i64 %call.50.fca.1.extract to i8*, !dbg !619
  call void %.field.ld.19(i8* nest undef, i8* %22, i64 %call.51.fca.0.extract, i64 %call.51.fca.1.extract, i64 %tmpv.210.sroa.0.0.copyload141, i64 %tmpv.210.sroa.3.0.copyload143), !dbg !619
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.926), !dbg !612
  %tmpv.211.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.169, align 8, !dbg !612
  %icmp.77 = icmp eq { i8*, i64 }* %tmpv.211.field.ld.2, null, !dbg !612
  br i1 %icmp.77, label %command_line_arguments.Component.Bases.exit, label %then.66

command_line_arguments.Component.Bases.exit:      ; preds = %then.66, %else.65
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !620, metadata !DIExpression()), !dbg !622
  call void @llvm.dbg.value(metadata %Component.0* %.ld.41, metadata !134, metadata !DIExpression()), !dbg !623
  %sret.actual.28.sroa.0.0.cast.84.i.sroa_idx = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 4, i32 0, !dbg !625
  %sret.actual.28.sroa.0.0.copyload = load %Component.0**, %Component.0*** %sret.actual.28.sroa.0.0.cast.84.i.sroa_idx, align 8, !dbg !625
  %sret.actual.28.sroa.2.0.cast.84.i.sroa_idx344 = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 4, i32 1, !dbg !625
  %sret.actual.28.sroa.2.0.copyload = load i64, i64* %sret.actual.28.sroa.2.0.cast.84.i.sroa_idx344, align 8, !dbg !625
  %icmp.83381 = icmp sgt i64 %sret.actual.28.sroa.2.0.copyload, 0, !dbg !626
  br i1 %icmp.83381, label %else.67, label %command_line_arguments.Component.Name.exit

else.67:                                          ; preds = %command_line_arguments.Component.Bases.exit, %else.70
  %tmpv.217.0382 = phi i64 [ %add.3, %else.70 ], [ 0, %command_line_arguments.Component.Bases.exit ]
  %ptroff.6 = getelementptr %Component.0*, %Component.0** %sret.actual.28.sroa.0.0.copyload, i64 %tmpv.217.0382, !dbg !626
  %.ptroff.ld.0 = load %Component.0*, %Component.0** %ptroff.6, align 8, !dbg !626
  call void @llvm.dbg.value(metadata %Component.0* %.ptroff.ld.0, metadata !620, metadata !DIExpression()), !dbg !622
  %icmp.80 = icmp eq %Component.0* %.ptroff.ld.0, null, !dbg !627
  br i1 %icmp.80, label %then.68, label %else.68

then.68:                                          ; preds = %else.67
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !627
  unreachable

else.68:                                          ; preds = %else.67
  %field.173 = getelementptr inbounds %Component.0, %Component.0* %.ptroff.ld.0, i64 0, i32 2, !dbg !627
  %.field.ld.20 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.173, align 8, !dbg !627
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.966, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.20, i8* nonnull %cast.966), !dbg !629
  %tmpv.227.field.ld.2378 = load { i8*, i64 }*, { i8*, i64 }** %field.179, align 8, !dbg !629
  %icmp.82379 = icmp eq { i8*, i64 }* %tmpv.227.field.ld.2378, null, !dbg !629
  br i1 %icmp.82379, label %else.70, label %then.70

else.69:                                          ; preds = %then.70
  %call.53 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub(i8* nest undef, %Directory.0* %call.47), !dbg !630
  %call.53.fca.0.extract = extractvalue { i64, i64 } %call.53, 0, !dbg !630
  %call.53.fca.1.extract = extractvalue { i64, i64 } %call.53, 1, !dbg !630
  %call.54 = call { i64, i64 } @strings.ToLower(i8* nest undef, i64 %tmpv.225.sroa.0.0.copyload120, i64 %tmpv.225.sroa.3.0.copyload122), !dbg !631
  %call.54.fca.0.extract = extractvalue { i64, i64 } %call.54, 0, !dbg !631
  %call.54.fca.1.extract = extractvalue { i64, i64 } %call.54, 1, !dbg !631
  %23 = inttoptr i64 %call.53.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !632
  %field.177 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %23, i64 0, i32 6, !dbg !632
  %.field.ld.21 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.177, align 8, !dbg !632
  %24 = inttoptr i64 %call.53.fca.1.extract to i8*, !dbg !632
  call void %.field.ld.21(i8* nest undef, i8* %24, i64 %call.54.fca.0.extract, i64 %call.54.fca.1.extract, i64 %tmpv.226.sroa.0.0.copyload110, i64 %tmpv.226.sroa.3.0.copyload112), !dbg !632
  br label %label.18

label.18:                                         ; preds = %then.70, %else.69
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.966), !dbg !629
  %tmpv.227.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.179, align 8, !dbg !629
  %icmp.82 = icmp eq { i8*, i64 }* %tmpv.227.field.ld.2, null, !dbg !629
  br i1 %icmp.82, label %else.70, label %then.70

then.70:                                          ; preds = %else.68, %label.18
  %tmpv.227.field.ld.2380 = phi { i8*, i64 }* [ %tmpv.227.field.ld.2, %label.18 ], [ %tmpv.227.field.ld.2378, %else.68 ]
  %tmpv.225.sroa.0.0.cast.971.sroa_cast = bitcast { i8*, i64 }* %tmpv.227.field.ld.2380 to i64*, !dbg !629
  %tmpv.225.sroa.0.0.copyload120 = load i64, i64* %tmpv.225.sroa.0.0.cast.971.sroa_cast, align 8, !dbg !629
  %tmpv.225.sroa.3.0.cast.971.sroa_idx121 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.227.field.ld.2380, i64 0, i32 1, !dbg !629
  %tmpv.225.sroa.3.0.copyload122 = load i64, i64* %tmpv.225.sroa.3.0.cast.971.sroa_idx121, align 8, !dbg !629
  %tmpv.227.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.175, align 8, !dbg !629
  %tmpv.226.sroa.0.0.cast.973.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.227.field.ld.1 to i64*, !dbg !629
  %tmpv.226.sroa.0.0.copyload110 = load i64, i64* %tmpv.226.sroa.0.0.cast.973.sroa_cast, align 8, !dbg !629
  %tmpv.226.sroa.3.0.cast.973.sroa_idx111 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.227.field.ld.1, i64 0, i32 1, !dbg !629
  %tmpv.226.sroa.3.0.cast.973.sroa_cast = bitcast i8** %tmpv.226.sroa.3.0.cast.973.sroa_idx111 to i64*, !dbg !629
  %tmpv.226.sroa.3.0.copyload112 = load i64, i64* %tmpv.226.sroa.3.0.cast.973.sroa_cast, align 8, !dbg !629
  call void @llvm.dbg.value(metadata i64 %tmpv.225.sroa.0.0.copyload120, metadata !633, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !634
  call void @llvm.dbg.value(metadata i64 %tmpv.225.sroa.3.0.copyload122, metadata !633, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !634
  call void @llvm.dbg.value(metadata i64 %tmpv.226.sroa.0.0.copyload110, metadata !635, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !634
  call void @llvm.dbg.value(metadata i64 %tmpv.226.sroa.3.0.copyload112, metadata !635, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !634
  %call.52 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.225.sroa.0.0.copyload120, i64 %tmpv.225.sroa.3.0.copyload122, i64 ptrtoint ([4 x i8]* @const.214 to i64), i64 3), !dbg !636
  %icmp.81 = icmp eq i8 %call.52, 1, !dbg !636
  br i1 %icmp.81, label %label.18, label %else.69

else.70:                                          ; preds = %label.18, %else.68
  %add.3 = add nuw nsw i64 %tmpv.217.0382, 1, !dbg !626
  %icmp.83 = icmp slt i64 %add.3, %sret.actual.28.sroa.2.0.copyload, !dbg !626
  br i1 %icmp.83, label %else.67, label %command_line_arguments.Component.Name.exit

command_line_arguments.Component.Name.exit:       ; preds = %else.70, %command_line_arguments.Component.Bases.exit
  %call.55 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Name..stub(i8* nest undef, %Directory.0* %call.47), !dbg !637
  %call.55.fca.0.extract = extractvalue { i64, i64 } %call.55, 0, !dbg !637
  %call.55.fca.1.extract = extractvalue { i64, i64 } %call.55, 1, !dbg !637
  %command_line_arguments.PkgLogger.field.ld.2 = load { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 0), align 8, !dbg !638
  %field.185 = getelementptr inbounds { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }* %command_line_arguments.PkgLogger.field.ld.2, i64 0, i32 1, !dbg !638
  %.field.ld.22 = load void (i8*, i8*, i64, i64, %IPST.2*)*, void (i8*, i8*, i64, i64, %IPST.2*)** %field.185, align 8, !dbg !638
  %command_line_arguments.PkgLogger.field.ld.3 = load i8*, i8** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 1), align 8, !dbg !638
  %call.56 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...62x.7interface.4.5, i64 0, i32 0)), !dbg !638
  %call.57 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !638
  store i64 %call.55.fca.0.extract, i64* %tmpv.232.sroa.0.0.cast.1004.sroa_cast, align 8
  store i64 %call.55.fca.1.extract, i64* %tmpv.232.sroa.2.0.cast.1004.sroa_idx101, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.57, i8* nonnull %cast.1007), !dbg !638
  store %_type.0* @string..d, %_type.0** %tmp.26.sroa.0.0.cast.1011.sroa_idx, align 8, !dbg !638
  store i8* %call.57, i8** %tmp.26.sroa.2.0.cast.1011.sroa_idx315, align 8, !dbg !638
  store %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i64 0, i32 0), %_type.0** %tmp.27.sroa.0.0.cast.1013.sroa_idx, align 8, !dbg !638
  store %Directory.0* %call.47, %Directory.0** %12, align 8, !dbg !638
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...62x.7interface.4.5, i64 0, i32 0), i8* %call.56, i8* nonnull %cast.1017), !dbg !638
  store i8* %call.56, i8** %13, align 8, !dbg !638
  store i64 2, i64* %field.188, align 8, !dbg !638
  store i64 2, i64* %field.189, align 8, !dbg !638
  call void %.field.ld.22(i8* nest undef, i8* %command_line_arguments.PkgLogger.field.ld.3, i64 ptrtoint ([18 x i8]* @const.216 to i64), i64 17, %IPST.2* byval nonnull %tmp.28), !dbg !638
  call void @llvm.dbg.value(metadata %Component.0* %.ld.41, metadata !139, metadata !DIExpression()), !dbg !639
  %"$ret0.sroa.0.0.cast.71.sroa_cast.i" = bitcast %Component.0* %.ld.41 to i64*, !dbg !641
  %"$ret0.sroa.0.0.copyload.i" = load i64, i64* %"$ret0.sroa.0.0.cast.71.sroa_cast.i", align 8, !dbg !641
  call void @llvm.dbg.value(metadata i64 %"$ret0.sroa.0.0.copyload.i", metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !642
  %"$ret0.sroa.5.0.cast.71.sroa_idx3.i" = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 0, i32 1, !dbg !641
  %"$ret0.sroa.5.0.copyload.i" = load i64, i64* %"$ret0.sroa.5.0.cast.71.sroa_idx3.i", align 8, !dbg !641
  call void @llvm.dbg.value(metadata i64 %"$ret0.sroa.5.0.copyload.i", metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !642
  store i64 %"$ret0.sroa.0.0.copyload.i", i64* %tmpv.238.sroa.0.0.cast.1023.sroa_cast, align 8
  store i64 %"$ret0.sroa.5.0.copyload.i", i64* %tmpv.238.sroa.2.0.cast.1023.sroa_idx99, align 8
  store { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* bitcast ({ %_type.0*, { i64, i64 } (i8*, %Directory.0*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void ({ i8*, i64, i64 }*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %Directory.0*, i64, i64, i64)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)* }* @pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*), { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }** %field.190, align 8, !dbg !643
  store %Directory.0* %call.47, %Directory.0** %14, align 8, !dbg !643
  %.field.ld.23 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.192, align 8, !dbg !644
  %call.59 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.23, i8* nonnull %cast.1030), !dbg !643
  %runtime.writeBarrier.ld.7 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !643
  %icmp.86 = icmp eq i32 %runtime.writeBarrier.ld.7, 0, !dbg !643
  br i1 %icmp.86, label %then.73, label %else.73

then.73:                                          ; preds = %command_line_arguments.Component.Name.exit
  %icmp.85 = icmp eq i8* %call.59, null, !dbg !643
  br i1 %icmp.85, label %then.74, label %else.74

else.73:                                          ; preds = %command_line_arguments.Component.Name.exit
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i64 0, i32 0), i8* %call.59, i8* nonnull %cast.1037), !dbg !643
  br label %label.19

then.74:                                          ; preds = %then.73
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !643
  unreachable

else.74:                                          ; preds = %then.73
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.59, i8* nonnull align 8 %cast.1037, i64 16, i1 false), !dbg !643
  br label %label.19

label.19:                                         ; preds = %else.85, %else.84, %else.74, %else.73
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.870), !dbg !586
  %tmpv.195.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.231, align 8, !dbg !586
  %icmp.99 = icmp eq { i8*, i64 }* %tmpv.195.field.ld.2, null, !dbg !586
  br i1 %icmp.99, label %else.86, label %then.86

then.75:                                          ; preds = %case.1
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !602
  unreachable

else.75:                                          ; preds = %case.1
  %field.193 = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 2, !dbg !602
  %.field.ld.24 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.193, align 8, !dbg !602
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1053, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.24, i8* nonnull %cast.1053), !dbg !645
  %tmpv.252.field.ld.2361 = load { i8*, i64 }*, { i8*, i64 }** %field.199, align 8, !dbg !645
  %icmp.88362 = icmp eq { i8*, i64 }* %tmpv.252.field.ld.2361, null, !dbg !645
  br i1 %icmp.88362, label %else.76, label %then.76

then.76:                                          ; preds = %else.75, %then.76
  %tmpv.252.field.ld.2363 = phi { i8*, i64 }* [ %tmpv.252.field.ld.2, %then.76 ], [ %tmpv.252.field.ld.2361, %else.75 ]
  %tmpv.250.sroa.0.0.cast.1058.sroa_cast = bitcast { i8*, i64 }* %tmpv.252.field.ld.2363 to i64*, !dbg !645
  %tmpv.250.sroa.0.0.copyload93 = load i64, i64* %tmpv.250.sroa.0.0.cast.1058.sroa_cast, align 8, !dbg !645
  %tmpv.250.sroa.3.0.cast.1058.sroa_idx94 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.252.field.ld.2363, i64 0, i32 1, !dbg !645
  %tmpv.250.sroa.3.0.copyload95 = load i64, i64* %tmpv.250.sroa.3.0.cast.1058.sroa_idx94, align 8, !dbg !645
  %tmpv.252.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.195, align 8, !dbg !645
  %tmpv.251.sroa.0.0.cast.1060.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.252.field.ld.1 to i64*, !dbg !645
  %tmpv.251.sroa.0.0.copyload84 = load i64, i64* %tmpv.251.sroa.0.0.cast.1060.sroa_cast, align 8, !dbg !645
  %tmpv.251.sroa.3.0.cast.1060.sroa_idx85 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.252.field.ld.1, i64 0, i32 1, !dbg !645
  %tmpv.251.sroa.3.0.cast.1060.sroa_cast = bitcast i8** %tmpv.251.sroa.3.0.cast.1060.sroa_idx85 to i64*, !dbg !645
  %tmpv.251.sroa.3.0.copyload86 = load i64, i64* %tmpv.251.sroa.3.0.cast.1060.sroa_cast, align 8, !dbg !645
  call void @llvm.dbg.value(metadata i64 %tmpv.250.sroa.0.0.copyload93, metadata !646, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !647
  call void @llvm.dbg.value(metadata i64 %tmpv.250.sroa.3.0.copyload95, metadata !646, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !647
  call void @llvm.dbg.value(metadata i64 %tmpv.251.sroa.0.0.copyload84, metadata !648, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !647
  call void @llvm.dbg.value(metadata i64 %tmpv.251.sroa.3.0.copyload86, metadata !648, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !647
  %call.62 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub(i8* nest undef, %File.1* %call.61), !dbg !649
  %call.62.fca.0.extract = extractvalue { i64, i64 } %call.62, 0, !dbg !649
  %call.62.fca.1.extract = extractvalue { i64, i64 } %call.62, 1, !dbg !649
  %call.63 = call { i64, i64 } @strings.ToLower(i8* nest undef, i64 %tmpv.250.sroa.0.0.copyload93, i64 %tmpv.250.sroa.3.0.copyload95), !dbg !650
  %call.63.fca.0.extract = extractvalue { i64, i64 } %call.63, 0, !dbg !650
  %call.63.fca.1.extract = extractvalue { i64, i64 } %call.63, 1, !dbg !650
  %25 = inttoptr i64 %call.62.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !651
  %field.197 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %25, i64 0, i32 6, !dbg !651
  %.field.ld.25 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.197, align 8, !dbg !651
  %26 = inttoptr i64 %call.62.fca.1.extract to i8*, !dbg !651
  call void %.field.ld.25(i8* nest undef, i8* %26, i64 %call.63.fca.0.extract, i64 %call.63.fca.1.extract, i64 %tmpv.251.sroa.0.0.copyload84, i64 %tmpv.251.sroa.3.0.copyload86), !dbg !651
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1053), !dbg !645
  %tmpv.252.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.199, align 8, !dbg !645
  %icmp.88 = icmp eq { i8*, i64 }* %tmpv.252.field.ld.2, null, !dbg !645
  br i1 %icmp.88, label %else.76, label %then.76

else.76:                                          ; preds = %then.76, %else.75
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1088, i8 0, i64 96, i1 false)
  %command_line_arguments.defaultAttrs.ld.1 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.defaultAttrs, align 8, !dbg !652
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %command_line_arguments.defaultAttrs.ld.1, i8* nonnull %cast.1088), !dbg !652
  %tmpv.259.field.ld.2364 = load { i8*, i64 }*, { i8*, i64 }** %field.205, align 8, !dbg !652
  %icmp.89365 = icmp eq { i8*, i64 }* %tmpv.259.field.ld.2364, null, !dbg !652
  br i1 %icmp.89365, label %command_line_arguments.Component.Bases.exit332, label %then.77

then.77:                                          ; preds = %else.76, %then.77
  %tmpv.259.field.ld.2366 = phi { i8*, i64 }* [ %tmpv.259.field.ld.2, %then.77 ], [ %tmpv.259.field.ld.2364, %else.76 ]
  %tmpv.257.sroa.0.0.cast.1093.sroa_cast = bitcast { i8*, i64 }* %tmpv.259.field.ld.2366 to i64*, !dbg !652
  %tmpv.257.sroa.0.0.copyload73 = load i64, i64* %tmpv.257.sroa.0.0.cast.1093.sroa_cast, align 8, !dbg !652
  %tmpv.257.sroa.3.0.cast.1093.sroa_idx74 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.259.field.ld.2366, i64 0, i32 1, !dbg !652
  %tmpv.257.sroa.3.0.copyload75 = load i64, i64* %tmpv.257.sroa.3.0.cast.1093.sroa_idx74, align 8, !dbg !652
  %tmpv.259.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.201, align 8, !dbg !652
  %tmpv.258.sroa.0.0.cast.1095.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.259.field.ld.1 to i64*, !dbg !652
  %tmpv.258.sroa.0.0.copyload64 = load i64, i64* %tmpv.258.sroa.0.0.cast.1095.sroa_cast, align 8, !dbg !652
  %tmpv.258.sroa.3.0.cast.1095.sroa_idx65 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.259.field.ld.1, i64 0, i32 1, !dbg !652
  %tmpv.258.sroa.3.0.cast.1095.sroa_cast = bitcast i8** %tmpv.258.sroa.3.0.cast.1095.sroa_idx65 to i64*, !dbg !652
  %tmpv.258.sroa.3.0.copyload66 = load i64, i64* %tmpv.258.sroa.3.0.cast.1095.sroa_cast, align 8, !dbg !652
  call void @llvm.dbg.value(metadata i64 %tmpv.257.sroa.0.0.copyload73, metadata !654, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !655
  call void @llvm.dbg.value(metadata i64 %tmpv.257.sroa.3.0.copyload75, metadata !654, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !655
  call void @llvm.dbg.value(metadata i64 %tmpv.258.sroa.0.0.copyload64, metadata !656, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !655
  call void @llvm.dbg.value(metadata i64 %tmpv.258.sroa.3.0.copyload66, metadata !656, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !655
  %call.64 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub(i8* nest undef, %File.1* %call.61), !dbg !657
  %call.64.fca.0.extract = extractvalue { i64, i64 } %call.64, 0, !dbg !657
  %call.64.fca.1.extract = extractvalue { i64, i64 } %call.64, 1, !dbg !657
  %call.65 = call { i64, i64 } @strings.ToLower(i8* nest undef, i64 %tmpv.257.sroa.0.0.copyload73, i64 %tmpv.257.sroa.3.0.copyload75), !dbg !658
  %call.65.fca.0.extract = extractvalue { i64, i64 } %call.65, 0, !dbg !658
  %call.65.fca.1.extract = extractvalue { i64, i64 } %call.65, 1, !dbg !658
  %27 = inttoptr i64 %call.64.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !659
  %field.203 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %27, i64 0, i32 6, !dbg !659
  %.field.ld.26 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.203, align 8, !dbg !659
  %28 = inttoptr i64 %call.64.fca.1.extract to i8*, !dbg !659
  call void %.field.ld.26(i8* nest undef, i8* %28, i64 %call.65.fca.0.extract, i64 %call.65.fca.1.extract, i64 %tmpv.258.sroa.0.0.copyload64, i64 %tmpv.258.sroa.3.0.copyload66), !dbg !659
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1088), !dbg !652
  %tmpv.259.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.205, align 8, !dbg !652
  %icmp.89 = icmp eq { i8*, i64 }* %tmpv.259.field.ld.2, null, !dbg !652
  br i1 %icmp.89, label %command_line_arguments.Component.Bases.exit332, label %then.77

command_line_arguments.Component.Bases.exit332:   ; preds = %then.77, %else.76
  call void @llvm.dbg.value(metadata %Component.0* null, metadata !660, metadata !DIExpression()), !dbg !662
  call void @llvm.dbg.value(metadata %Component.0* %.ld.41, metadata !134, metadata !DIExpression()), !dbg !663
  %sret.actual.38.sroa.0.0.cast.84.i330.sroa_idx = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 4, i32 0, !dbg !665
  %sret.actual.38.sroa.0.0.copyload = load %Component.0**, %Component.0*** %sret.actual.38.sroa.0.0.cast.84.i330.sroa_idx, align 8, !dbg !665
  %sret.actual.38.sroa.2.0.cast.84.i330.sroa_idx342 = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 4, i32 1, !dbg !665
  %sret.actual.38.sroa.2.0.copyload = load i64, i64* %sret.actual.38.sroa.2.0.cast.84.i330.sroa_idx342, align 8, !dbg !665
  %icmp.95370 = icmp sgt i64 %sret.actual.38.sroa.2.0.copyload, 0, !dbg !666
  br i1 %icmp.95370, label %else.78, label %command_line_arguments.Component.Name.exit341

else.78:                                          ; preds = %command_line_arguments.Component.Bases.exit332, %else.81
  %tmpv.265.0371 = phi i64 [ %add.4, %else.81 ], [ 0, %command_line_arguments.Component.Bases.exit332 ]
  %ptroff.7 = getelementptr %Component.0*, %Component.0** %sret.actual.38.sroa.0.0.copyload, i64 %tmpv.265.0371, !dbg !666
  %.ptroff.ld.1 = load %Component.0*, %Component.0** %ptroff.7, align 8, !dbg !666
  call void @llvm.dbg.value(metadata %Component.0* %.ptroff.ld.1, metadata !660, metadata !DIExpression()), !dbg !662
  %icmp.92 = icmp eq %Component.0* %.ptroff.ld.1, null, !dbg !667
  br i1 %icmp.92, label %then.79, label %else.79

then.79:                                          ; preds = %else.78
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !667
  unreachable

else.79:                                          ; preds = %else.78
  %field.209 = getelementptr inbounds %Component.0, %Component.0* %.ptroff.ld.1, i64 0, i32 2, !dbg !667
  %.field.ld.27 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.209, align 8, !dbg !667
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1128, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.27, i8* nonnull %cast.1128), !dbg !669
  %tmpv.275.field.ld.2367 = load { i8*, i64 }*, { i8*, i64 }** %field.215, align 8, !dbg !669
  %icmp.94368 = icmp eq { i8*, i64 }* %tmpv.275.field.ld.2367, null, !dbg !669
  br i1 %icmp.94368, label %else.81, label %then.81

else.80:                                          ; preds = %then.81
  %call.67 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub(i8* nest undef, %File.1* %call.61), !dbg !670
  %call.67.fca.0.extract = extractvalue { i64, i64 } %call.67, 0, !dbg !670
  %call.67.fca.1.extract = extractvalue { i64, i64 } %call.67, 1, !dbg !670
  %call.68 = call { i64, i64 } @strings.ToLower(i8* nest undef, i64 %tmpv.273.sroa.0.0.copyload43, i64 %tmpv.273.sroa.3.0.copyload45), !dbg !671
  %call.68.fca.0.extract = extractvalue { i64, i64 } %call.68, 0, !dbg !671
  %call.68.fca.1.extract = extractvalue { i64, i64 } %call.68, 1, !dbg !671
  %29 = inttoptr i64 %call.67.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !672
  %field.213 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %29, i64 0, i32 6, !dbg !672
  %.field.ld.28 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.213, align 8, !dbg !672
  %30 = inttoptr i64 %call.67.fca.1.extract to i8*, !dbg !672
  call void %.field.ld.28(i8* nest undef, i8* %30, i64 %call.68.fca.0.extract, i64 %call.68.fca.1.extract, i64 %tmpv.274.sroa.0.0.copyload33, i64 %tmpv.274.sroa.3.0.copyload35), !dbg !672
  br label %label.28

label.28:                                         ; preds = %then.81, %else.80
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1128), !dbg !669
  %tmpv.275.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.215, align 8, !dbg !669
  %icmp.94 = icmp eq { i8*, i64 }* %tmpv.275.field.ld.2, null, !dbg !669
  br i1 %icmp.94, label %else.81, label %then.81

then.81:                                          ; preds = %else.79, %label.28
  %tmpv.275.field.ld.2369 = phi { i8*, i64 }* [ %tmpv.275.field.ld.2, %label.28 ], [ %tmpv.275.field.ld.2367, %else.79 ]
  %tmpv.273.sroa.0.0.cast.1133.sroa_cast = bitcast { i8*, i64 }* %tmpv.275.field.ld.2369 to i64*, !dbg !669
  %tmpv.273.sroa.0.0.copyload43 = load i64, i64* %tmpv.273.sroa.0.0.cast.1133.sroa_cast, align 8, !dbg !669
  %tmpv.273.sroa.3.0.cast.1133.sroa_idx44 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.275.field.ld.2369, i64 0, i32 1, !dbg !669
  %tmpv.273.sroa.3.0.copyload45 = load i64, i64* %tmpv.273.sroa.3.0.cast.1133.sroa_idx44, align 8, !dbg !669
  %tmpv.275.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.211, align 8, !dbg !669
  %tmpv.274.sroa.0.0.cast.1135.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.275.field.ld.1 to i64*, !dbg !669
  %tmpv.274.sroa.0.0.copyload33 = load i64, i64* %tmpv.274.sroa.0.0.cast.1135.sroa_cast, align 8, !dbg !669
  %tmpv.274.sroa.3.0.cast.1135.sroa_idx34 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.275.field.ld.1, i64 0, i32 1, !dbg !669
  %tmpv.274.sroa.3.0.cast.1135.sroa_cast = bitcast i8** %tmpv.274.sroa.3.0.cast.1135.sroa_idx34 to i64*, !dbg !669
  %tmpv.274.sroa.3.0.copyload35 = load i64, i64* %tmpv.274.sroa.3.0.cast.1135.sroa_cast, align 8, !dbg !669
  call void @llvm.dbg.value(metadata i64 %tmpv.273.sroa.0.0.copyload43, metadata !673, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !674
  call void @llvm.dbg.value(metadata i64 %tmpv.273.sroa.3.0.copyload45, metadata !673, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !674
  call void @llvm.dbg.value(metadata i64 %tmpv.274.sroa.0.0.copyload33, metadata !675, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !674
  call void @llvm.dbg.value(metadata i64 %tmpv.274.sroa.3.0.copyload35, metadata !675, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !674
  %call.66 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.273.sroa.0.0.copyload43, i64 %tmpv.273.sroa.3.0.copyload45, i64 ptrtoint ([4 x i8]* @const.214 to i64), i64 3), !dbg !676
  %icmp.93 = icmp eq i8 %call.66, 1, !dbg !676
  br i1 %icmp.93, label %label.28, label %else.80

else.81:                                          ; preds = %label.28, %else.79
  %add.4 = add nuw nsw i64 %tmpv.265.0371, 1, !dbg !666
  %icmp.95 = icmp slt i64 %add.4, %sret.actual.38.sroa.2.0.copyload, !dbg !666
  br i1 %icmp.95, label %else.78, label %command_line_arguments.Component.Name.exit341

command_line_arguments.Component.Name.exit341:    ; preds = %else.81, %command_line_arguments.Component.Bases.exit332
  %call.69 = call { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Name..stub(i8* nest undef, %File.1* %call.61), !dbg !677
  %call.69.fca.0.extract = extractvalue { i64, i64 } %call.69, 0, !dbg !677
  %call.69.fca.1.extract = extractvalue { i64, i64 } %call.69, 1, !dbg !677
  %command_line_arguments.PkgLogger.field.ld.4 = load { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 0), align 8, !dbg !678
  %field.221 = getelementptr inbounds { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }* %command_line_arguments.PkgLogger.field.ld.4, i64 0, i32 1, !dbg !678
  %.field.ld.29 = load void (i8*, i8*, i64, i64, %IPST.2*)*, void (i8*, i8*, i64, i64, %IPST.2*)** %field.221, align 8, !dbg !678
  %command_line_arguments.PkgLogger.field.ld.5 = load i8*, i8** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 1), align 8, !dbg !678
  %call.70 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...62x.7interface.4.5, i64 0, i32 0)), !dbg !678
  %call.71 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !678
  store i64 %call.69.fca.0.extract, i64* %tmpv.280.sroa.0.0.cast.1163.sroa_cast, align 8
  store i64 %call.69.fca.1.extract, i64* %tmpv.280.sroa.2.0.cast.1163.sroa_idx24, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.71, i8* nonnull %cast.1166), !dbg !678
  store %_type.0* @string..d, %_type.0** %tmp.29.sroa.0.0.cast.1170.sroa_idx, align 8, !dbg !678
  store i8* %call.71, i8** %tmp.29.sroa.2.0.cast.1170.sroa_idx317, align 8, !dbg !678
  store %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File, i64 0, i32 0), %_type.0** %tmp.30.sroa.0.0.cast.1172.sroa_idx, align 8, !dbg !678
  store %File.1* %call.61, %File.1** %15, align 8, !dbg !678
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...62x.7interface.4.5, i64 0, i32 0), i8* %call.70, i8* nonnull %cast.1176), !dbg !678
  store i8* %call.70, i8** %16, align 8, !dbg !678
  store i64 2, i64* %field.224, align 8, !dbg !678
  store i64 2, i64* %field.225, align 8, !dbg !678
  call void %.field.ld.29(i8* nest undef, i8* %command_line_arguments.PkgLogger.field.ld.5, i64 ptrtoint ([18 x i8]* @const.216 to i64), i64 17, %IPST.2* byval nonnull %tmp.31), !dbg !678
  call void @llvm.dbg.value(metadata %Component.0* %.ld.41, metadata !139, metadata !DIExpression()), !dbg !679
  %"$ret0.sroa.0.0.cast.71.sroa_cast.i335" = bitcast %Component.0* %.ld.41 to i64*, !dbg !681
  %"$ret0.sroa.0.0.copyload.i336" = load i64, i64* %"$ret0.sroa.0.0.cast.71.sroa_cast.i335", align 8, !dbg !681
  call void @llvm.dbg.value(metadata i64 %"$ret0.sroa.0.0.copyload.i336", metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !682
  %"$ret0.sroa.5.0.cast.71.sroa_idx3.i337" = getelementptr inbounds %Component.0, %Component.0* %.ld.41, i64 0, i32 0, i32 1, !dbg !681
  %"$ret0.sroa.5.0.copyload.i338" = load i64, i64* %"$ret0.sroa.5.0.cast.71.sroa_idx3.i337", align 8, !dbg !681
  call void @llvm.dbg.value(metadata i64 %"$ret0.sroa.5.0.copyload.i338", metadata !143, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !682
  store i64 %"$ret0.sroa.0.0.copyload.i336", i64* %tmpv.286.sroa.0.0.cast.1182.sroa_cast, align 8
  store i64 %"$ret0.sroa.5.0.copyload.i338", i64* %tmpv.286.sroa.2.0.cast.1182.sroa_idx22, align 8
  store { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* bitcast ({ %_type.0*, { i64, i64 } (i8*, %File.1*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void ({ i8*, i64, i64 }*, i8*, %File.1*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, void (%Dirent.0*, i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, i8 (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*)*, { i64, i64 } (i8*, %File.1*, i64, i64, i64)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.12*)*, { i64, i64 } (i8*, %".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node.0"*, %IPST.5*)* }* @pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*), { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }** %field.226, align 8, !dbg !683
  store %File.1* %call.61, %File.1** %17, align 8, !dbg !683
  %.field.ld.30 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.192, align 8, !dbg !684
  %call.73 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.30, i8* nonnull %cast.1189), !dbg !683
  %runtime.writeBarrier.ld.8 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !683
  %icmp.98 = icmp eq i32 %runtime.writeBarrier.ld.8, 0, !dbg !683
  br i1 %icmp.98, label %then.84, label %else.84

then.84:                                          ; preds = %command_line_arguments.Component.Name.exit341
  %icmp.97 = icmp eq i8* %call.73, null, !dbg !683
  br i1 %icmp.97, label %then.85, label %else.85

else.84:                                          ; preds = %command_line_arguments.Component.Name.exit341
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i64 0, i32 0), i8* %call.73, i8* nonnull %cast.1196), !dbg !683
  br label %label.19

then.85:                                          ; preds = %then.84
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !683
  unreachable

else.85:                                          ; preds = %then.84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.73, i8* nonnull align 8 %cast.1196, i64 16, i1 false), !dbg !683
  br label %label.19

then.86:                                          ; preds = %then.86.lr.ph, %label.19
  %tmpv.195.field.ld.1 = load %Component.0**, %Component.0*** %field.156, align 8, !dbg !586
  %.ld.41 = load %Component.0*, %Component.0** %tmpv.195.field.ld.1, align 8, !dbg !586
  call void @llvm.dbg.value(metadata %Component.0* %.ld.41, metadata !582, metadata !DIExpression()), !dbg !584
  %call.75 = call i64 @command_line_arguments.Component.Type(i8* nest undef, %Component.0* %.ld.41), !dbg !685
  switch i64 %call.75, label %default.0 [
    i64 2, label %case.0
    i64 1, label %case.1
  ]

else.86:                                          ; preds = %label.19, %else.63.else.86_crit_edge
  %field.232.pre-phi = phi { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** [ %.pre, %else.63.else.86_crit_edge ], [ %field.192, %label.19 ], !dbg !587
  %call.76 = call { i64, i64 } @command_line_arguments.Resources.GetObject(i8* nest undef, %Resources.0* nonnull %r, i64 ptrtoint ([5 x i8]* @const.131 to i64), i64 4), !dbg !686
  %call.76.fca.0.extract = extractvalue { i64, i64 } %call.76, 0, !dbg !686
  %call.76.fca.1.extract = extractvalue { i64, i64 } %call.76, 1, !dbg !686
  call void @llvm.dbg.value(metadata i64 %call.76.fca.0.extract, metadata !687, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !688
  call void @llvm.dbg.value(metadata i64 %call.76.fca.1.extract, metadata !687, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !688
  %.field.ld.31 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.232.pre-phi, align 8, !dbg !587
  %call.77 = call %Level.0* @command_line_arguments.NewLevel(i8* nest undef, i64 %call.76.fca.0.extract, i64 %call.76.fca.1.extract, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.31), !dbg !689
  call void @llvm.dbg.value(metadata %Level.0* %call.77, metadata !690, metadata !DIExpression()), !dbg !691
  %field.233 = getelementptr inbounds %Resources.0, %Resources.0* %r, i64 0, i32 2, !dbg !692
  %runtime.writeBarrier.ld.9 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !693
  %icmp.103 = icmp eq i32 %runtime.writeBarrier.ld.9, 0, !dbg !693
  br i1 %icmp.103, label %else.90, label %else.89

fallthrough.89:                                   ; preds = %else.89, %else.90
  %icmp.104 = icmp eq i64 %call.76.fca.0.extract, 0, !dbg !694
  br i1 %icmp.104, label %fallthrough.91, label %else.91

else.89:                                          ; preds = %else.86
  %cast.1214 = bitcast %Level.0** %field.233 to i8*, !dbg !693
  %cast.1215 = bitcast %Level.0* %call.77 to i8*, !dbg !693
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.1214, i8* %cast.1215), !dbg !693
  br label %fallthrough.89

else.90:                                          ; preds = %else.86
  store %Level.0* %call.77, %Level.0** %field.233, align 8, !dbg !693
  br label %fallthrough.89

fallthrough.91:                                   ; preds = %fallthrough.89, %else.91
  %tmpv.300.0 = phi %_type.0* [ %.field.ld.32, %else.91 ], [ null, %fallthrough.89 ]
  %call.78 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i64 0, i32 0), %_type.0* %tmpv.300.0), !dbg !694
  %31 = ptrtoint i8* %call.78 to i64, !dbg !694
  call void @command_line_arguments.Level.visit(i8* nest undef, %Level.0* %call.77, i64 %31, i64 %call.76.fca.1.extract), !dbg !695
  %call.79 = call %Directory.0* @command_line_arguments.Level.Root(i8* nest undef, %Level.0* %call.77), !dbg !696
  call void @llvm.dbg.value(metadata %Directory.0* %call.79, metadata !518, metadata !DIExpression()), !dbg !519
  call void @llvm.dbg.value(metadata i64 0, metadata !530, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !531
  call void @llvm.dbg.value(metadata i64 0, metadata !530, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !531
  %tmp.34.sroa.0.0.cast.1227.sroa_idx = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !697
  store %Directory.0* %call.79, %Directory.0** %tmp.34.sroa.0.0.cast.1227.sroa_idx, align 8, !dbg !697
  %tmp.34.sroa.2.0.cast.1227.sroa_idx319 = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !697
  %32 = bitcast %error.0* %tmp.34.sroa.2.0.cast.1227.sroa_idx319 to i8*, !dbg !697
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false), !dbg !697
  ret void, !dbg !697

else.91:                                          ; preds = %fallthrough.89
  %33 = inttoptr i64 %call.76.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, !dbg !694
  %field.236 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %33, i64 0, i32 0, !dbg !694
  %.field.ld.32 = load %_type.0*, %_type.0** %field.236, align 8, !dbg !694
  br label %fallthrough.91
}

define { i64, i64 } @command_line_arguments.Resources.LoadFile(i8* nest nocapture readnone %nest.11, %Resources.0* readonly %r, i64 %f.chunk0, i64 %f.chunk1) #0 !dbg !698 {
entry:
  %tmp.15 = alloca %IPST.2, align 8
  %data = alloca { i8*, i64, i64 }, align 8
  %sret.actual.5 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  %tmpv.73 = alloca %IPST.4, align 8
  %sret.actual.7 = alloca %IPST.5, align 8
  %tmpv.77 = alloca { i8*, i64 }, align 8
  %sret.actual.8 = alloca %IPST.6, align 8
  %tmpv.85 = alloca { i8*, i64 }, align 8
  %tmpv.87 = alloca { i8*, i64 }, align 8
  %tmpv.89 = alloca %IPST.1, align 8
  %tmpv.91 = alloca %Component.0, align 8
  %tmpv.92 = alloca { i8*, i64 }, align 8
  %tmpv.104 = alloca { i8*, i64 }, align 8
  %tmpv.111 = alloca [1 x { %_type.0*, i8* }], align 8
  call void @llvm.dbg.value(metadata %Resources.0* %r, metadata !701, metadata !DIExpression()), !dbg !702
  call void @llvm.dbg.value(metadata i64 %f.chunk0, metadata !703, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !704
  call void @llvm.dbg.value(metadata i64 %f.chunk1, metadata !703, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !704
  %0 = bitcast { i8*, i64, i64 }* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  call void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.5, i8* nest undef, i64 %f.chunk0, i64 %f.chunk1), !dbg !705
  %tmpv.62.sroa.0.0.cast.534.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.5 to i8*, !dbg !705
  %tmpv.62.sroa.3.0.cast.534.sroa_idx57 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.5, i64 0, i32 1, !dbg !705
  %tmpv.62.sroa.3.0.cast.534.sroa_cast = bitcast %error.0* %tmpv.62.sroa.3.0.cast.534.sroa_idx57 to i64*, !dbg !705
  %tmpv.62.sroa.3.0.copyload58 = load i64, i64* %tmpv.62.sroa.3.0.cast.534.sroa_cast, align 8, !dbg !705
  %tmpv.62.sroa.4.0.cast.534.sroa_idx59 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.5, i64 0, i32 1, i32 1, !dbg !705
  %tmpv.62.sroa.4.0.cast.534.sroa_cast = bitcast i8** %tmpv.62.sroa.4.0.cast.534.sroa_idx59 to i64*, !dbg !705
  %tmpv.62.sroa.4.0.copyload60 = load i64, i64* %tmpv.62.sroa.4.0.cast.534.sroa_cast, align 8, !dbg !705
  %data76 = bitcast { i8*, i64, i64 }* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %data76, i8* nonnull align 8 %tmpv.62.sroa.0.0.cast.534.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.62.sroa.3.0.copyload58, metadata !707, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !708
  call void @llvm.dbg.value(metadata i64 %tmpv.62.sroa.4.0.copyload60, metadata !707, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !708
  %icmp.22 = icmp eq i64 %tmpv.62.sroa.3.0.copyload58, 0, !dbg !709
  br i1 %icmp.22, label %else.19, label %then.19

then.19:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 %tmpv.62.sroa.3.0.copyload58, metadata !710, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !711
  call void @llvm.dbg.value(metadata i64 %tmpv.62.sroa.4.0.copyload60, metadata !710, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !711
  %ld.34.fca.0.insert = insertvalue { i64, i64 } undef, i64 %tmpv.62.sroa.3.0.copyload58, 0, !dbg !712
  %ld.34.fca.1.insert = insertvalue { i64, i64 } %ld.34.fca.0.insert, i64 %tmpv.62.sroa.4.0.copyload60, 1, !dbg !712
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !712
  ret { i64, i64 } %ld.34.fca.1.insert, !dbg !712

else.19:                                          ; preds = %entry
  %call.19 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0)), !dbg !713
  %cast.548 = bitcast i8* %call.19 to { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, !dbg !713
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %cast.548, metadata !714, metadata !DIExpression()), !dbg !715
  %call.20 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !716
  %runtime.writeBarrier.ld.2 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !716
  %icmp.24 = icmp eq i32 %runtime.writeBarrier.ld.2, 0, !dbg !716
  br i1 %icmp.24, label %then.20, label %else.20

then.20:                                          ; preds = %else.19
  %icmp.23 = icmp eq i8* %call.19, null, !dbg !716
  br i1 %icmp.23, label %then.21, label %else.21

fallthrough.20:                                   ; preds = %else.20, %else.21
  %1 = ptrtoint i8* %call.19 to i64, !dbg !717
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %data, metadata !718, metadata !DIExpression(DW_OP_deref)), !dbg !708
  %call.21 = call { i64, i64 } @gopkg_in_yaml_v2.Unmarshal(i8* nest undef, { i8*, i64, i64 }* byval nonnull %data, i64 ptrtoint (%PtrType.0* @type...1map.6string.7interface.4.5 to i64), i64 %1), !dbg !719
  %call.21.fca.0.extract = extractvalue { i64, i64 } %call.21, 0, !dbg !719
  call void @llvm.dbg.value(metadata i64 %call.21.fca.0.extract, metadata !707, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !708
  %icmp.25 = icmp eq i64 %call.21.fca.0.extract, 0, !dbg !720
  br i1 %icmp.25, label %else.22, label %then.22

else.20:                                          ; preds = %else.19
  %cast.551 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.20 to i8*, !dbg !716
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.19, i8* %cast.551), !dbg !716
  br label %fallthrough.20

then.21:                                          ; preds = %then.20
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !716
  unreachable

else.21:                                          ; preds = %then.20
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.20, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %cast.548, align 8, !dbg !716
  br label %fallthrough.20

then.22:                                          ; preds = %fallthrough.20
  call void @llvm.dbg.value(metadata i64 %call.21.fca.0.extract, metadata !710, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !711
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !721
  ret { i64, i64 } %call.21, !dbg !721

else.22:                                          ; preds = %fallthrough.20
  %cast.574 = bitcast %IPST.4* %tmpv.73 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.574, i8 0, i64 96, i1 false)
  %.ld.11 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %cast.548, align 8, !dbg !722
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.ld.11, i8* nonnull %cast.574), !dbg !722
  %field.89 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.73, i64 0, i32 0, !dbg !722
  %tmpv.73.field.ld.273 = load { i8*, i64 }*, { i8*, i64 }** %field.89, align 8, !dbg !722
  %icmp.3874 = icmp eq { i8*, i64 }* %tmpv.73.field.ld.273, null, !dbg !722
  br i1 %icmp.3874, label %else.33, label %then.33.lr.ph

then.33.lr.ph:                                    ; preds = %else.22
  %field.56 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.73, i64 0, i32 1
  %parts.sroa.0.0.cast.593.sroa_idx = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.7, i64 0, i32 0
  %parts.sroa.6.0.cast.593.sroa_idx14 = getelementptr inbounds %IPST.5, %IPST.5* %sret.actual.7, i64 0, i32 1
  %cast.605 = bitcast %IPST.6* %sret.actual.8 to i8*
  %cast.606 = bitcast { i8*, i64 }* %tmpv.85 to i8*
  %cast.608 = bitcast { i8*, i64 }* %tmpv.87 to i8*
  %cast.611 = bitcast %IPST.1* %tmpv.89 to i8*
  %cast.615 = bitcast %Component.0* %tmpv.91 to i8*
  %field.67 = getelementptr inbounds %Component.0, %Component.0* %tmpv.91, i64 0, i32 1
  %field.68 = getelementptr inbounds %Component.0, %Component.0* %tmpv.91, i64 0, i32 2
  %field.69 = getelementptr inbounds %Component.0, %Component.0* %tmpv.91, i64 0, i32 3
  %cast.617 = bitcast { i8*, i64 }* %field.69 to i8*
  %field.70 = getelementptr inbounds %Component.0, %Component.0* %tmpv.91, i64 0, i32 4
  %cast.619 = bitcast %IPST.1* %field.70 to i8*
  %sret.actual.9.sroa.0.0.cast.625.sroa_cast = bitcast { i8*, i64 }* %tmpv.92 to i64*
  %sret.actual.9.sroa.2.0.cast.625.sroa_idx5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.92, i64 0, i32 1
  %icmp.33 = icmp eq %Resources.0* %r, null
  %field.71 = getelementptr inbounds %Resources.0, %Resources.0* %r, i64 0, i32 0
  %cast.631 = bitcast { i8*, i64 }* %tmpv.92 to i8*
  %tmpv.103.sroa.0.0.cast.647.sroa_cast = bitcast { i8*, i64 }* %tmpv.104 to i64*
  %tmpv.103.sroa.2.0.cast.647.sroa_idx3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.104, i64 0, i32 1
  %cast.651 = bitcast { i8*, i64 }* %tmpv.104 to i8*
  %tmp.14.sroa.0.0.cast.663.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.111, i64 0, i64 0, i32 0
  %tmp.14.sroa.2.0.cast.663.sroa_idx71 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.111, i64 0, i64 0, i32 1
  %cast.667 = bitcast [1 x { %_type.0*, i8* }]* %tmpv.111 to i8*
  %2 = bitcast %IPST.2* %tmp.15 to i8**
  %field.87 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.15, i64 0, i32 1
  %field.88 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.15, i64 0, i32 2
  %tmpv.897778 = bitcast %IPST.1* %tmpv.89 to i8*
  br label %then.33

then.23:                                          ; preds = %then.33
  %call.22 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !724
  %cast.595 = bitcast { i8*, i64 }* %tmpv.77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.595, i8* align 8 bitcast ({ i8*, i64 }* @const.197 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.22, i8* nonnull %cast.595), !dbg !724
  %3 = ptrtoint i8* %call.22 to i64, !dbg !724
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %3), !dbg !724
  unreachable

else.24:                                          ; preds = %then.33
  %field0.23 = bitcast { i8*, i64 }* %parts.sroa.0.0.copyload to i64*, !dbg !726
  %ld.44 = load i64, i64* %field0.23, align 8, !dbg !726
  %4 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %parts.sroa.0.0.copyload, i64 0, i32 1, !dbg !726
  %ld.45 = load i64, i64* %4, align 8, !dbg !726
  call void @llvm.dbg.value(metadata i64 %ld.44, metadata !727, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !731
  call void @llvm.dbg.value(metadata i64 %ld.45, metadata !727, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !731
  call void @llvm.dbg.value(metadata i64 0, metadata !733, metadata !DIExpression()), !dbg !734
  %call.1.i = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.44, i64 %ld.45, i64 ptrtoint ([5 x i8]* @const.78 to i64), i64 4), !dbg !735
  %icmp.5.i = icmp eq i8 %call.1.i, 1, !dbg !735
  br i1 %icmp.5.i, label %command_line_arguments.parseBaseType.exit, label %label.0.i

label.0.i:                                        ; preds = %else.24
  %call.2.i = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.44, i64 %ld.45, i64 ptrtoint ([4 x i8]* @const.80 to i64), i64 3), !dbg !736
  %icmp.7.i = icmp eq i8 %call.2.i, 1, !dbg !736
  br i1 %icmp.7.i, label %command_line_arguments.parseBaseType.exit, label %label.2.i

label.2.i:                                        ; preds = %label.0.i
  %call.3.i = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.44, i64 %ld.45, i64 ptrtoint ([5 x i8]* @const.58 to i64), i64 4), !dbg !737
  %icmp.9.i = icmp eq i8 %call.3.i, 1, !dbg !737
  %..i = select i1 %icmp.9.i, i64 3, i64 0
  br label %command_line_arguments.parseBaseType.exit

command_line_arguments.parseBaseType.exit:        ; preds = %else.24, %label.0.i, %label.2.i
  %merge.i = phi i64 [ 1, %else.24 ], [ 2, %label.0.i ], [ %..i, %label.2.i ]
  call void @llvm.dbg.value(metadata i64 1, metadata !733, metadata !DIExpression()), !dbg !734
  %call.24 = call fastcc { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.parseAttrs(i64 %tmpv.72.sroa.0.0.copyload24, i64 %tmpv.72.sroa.3.0.copyload26), !dbg !738
  call void @runtime.makeslice(%IPST.6* nonnull sret %sret.actual.8, i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i64 0, i32 0), i64 0, i64 0), !dbg !739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.897778, i8* nonnull align 8 %cast.605, i64 24, i1 false)
  %ptroff.1 = getelementptr { i8*, i64 }, { i8*, i64 }* %parts.sroa.0.0.copyload, i64 1, !dbg !740
  %cast.607 = bitcast { i8*, i64 }* %ptroff.1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.606, i8* align 8 %cast.607, i64 16, i1 false)
  %cast.609 = bitcast { i8*, i64 }* %parts.sroa.0.0.copyload to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.608, i8* align 8 %cast.609, i64 16, i1 false)
  %call.25 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Component..d, i64 0, i32 0)), !dbg !741
  %cast.614 = bitcast i8* %call.25 to %Component.0*, !dbg !741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.615, i8* nonnull align 8 %cast.606, i64 16, i1 false), !dbg !742
  store i64 %merge.i, i64* %field.67, align 8, !dbg !742
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.24, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.68, align 8, !dbg !742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.617, i8* nonnull align 8 %cast.608, i64 16, i1 false), !dbg !742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.619, i8* nonnull align 8 %cast.611, i64 24, i1 false), !dbg !742
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Component..d, i64 0, i32 0), i8* %call.25, i8* nonnull %cast.615), !dbg !741
  call void @llvm.dbg.value(metadata %Component.0* %cast.614, metadata !743, metadata !DIExpression()), !dbg !744
  call void @llvm.dbg.value(metadata i8 0, metadata !745, metadata !DIExpression()), !dbg !747
  %call.26 = call { i64, i64 } @command_line_arguments.Component.Name(i8* nest undef, %Component.0* %cast.614), !dbg !748
  %call.26.fca.0.extract = extractvalue { i64, i64 } %call.26, 0, !dbg !748
  %call.26.fca.1.extract = extractvalue { i64, i64 } %call.26, 1, !dbg !748
  store i64 %call.26.fca.0.extract, i64* %sret.actual.9.sroa.0.0.cast.625.sroa_cast, align 8
  store i64 %call.26.fca.1.extract, i64* %sret.actual.9.sroa.2.0.cast.625.sroa_idx5, align 8
  br i1 %icmp.33, label %then.27, label %else.27

then.27:                                          ; preds = %command_line_arguments.parseBaseType.exit
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !749
  unreachable

else.27:                                          ; preds = %command_line_arguments.parseBaseType.exit
  %.field.ld.4 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.71, align 8, !dbg !749
  %call.27 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.4, i8* nonnull %cast.631), !dbg !750
  %call.27.fca.1.extract = extractvalue { i64, i8 } %call.27, 1, !dbg !750
  call void @llvm.dbg.value(metadata i8 %call.27.fca.1.extract, metadata !745, metadata !DIExpression()), !dbg !747
  %5 = and i8 %call.27.fca.1.extract, 1, !dbg !751
  %trunc.31 = icmp eq i8 %5, 0, !dbg !751
  br i1 %trunc.31, label %else.28, label %then.28

then.28:                                          ; preds = %else.27
  %call.28 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.198 to i64), i64 29, %IPST.2* byval nonnull @const.200), !dbg !752
  %call.28.fca.0.extract = extractvalue { i64, i64 } %call.28, 0, !dbg !752
  %call.28.fca.1.extract = extractvalue { i64, i64 } %call.28, 1, !dbg !752
  %icmp.34 = icmp eq i64 %call.28.fca.0.extract, 0, !dbg !752
  br i1 %icmp.34, label %fallthrough.29, label %else.29

else.28:                                          ; preds = %else.27
  %call.29 = call { i64, i64 } @command_line_arguments.Component.Name(i8* nest undef, %Component.0* %cast.614), !dbg !753
  %call.29.fca.0.extract = extractvalue { i64, i64 } %call.29, 0, !dbg !753
  %call.29.fca.1.extract = extractvalue { i64, i64 } %call.29, 1, !dbg !753
  store i64 %call.29.fca.0.extract, i64* %tmpv.103.sroa.0.0.cast.647.sroa_cast, align 8
  store i64 %call.29.fca.1.extract, i64* %tmpv.103.sroa.2.0.cast.647.sroa_idx3, align 8
  %.field.ld.6 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.71, align 8, !dbg !754
  %call.30 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7.1command_line_arguments.Component, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.6, i8* nonnull %cast.651), !dbg !755
  %runtime.writeBarrier.ld.3 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !755
  %icmp.37 = icmp eq i32 %runtime.writeBarrier.ld.3, 0, !dbg !755
  br i1 %icmp.37, label %then.31, label %else.31

fallthrough.29:                                   ; preds = %then.28, %else.29
  %tmpv.101.0 = phi i64 [ %.field.ld.572, %else.29 ], [ 0, %then.28 ]
  call void @runtime.gopanic(i8* nest undef, i64 %tmpv.101.0, i64 %call.28.fca.1.extract), !dbg !756
  unreachable

else.29:                                          ; preds = %then.28
  %6 = inttoptr i64 %call.28.fca.0.extract to i64*, !dbg !752
  %.field.ld.572 = load i64, i64* %6, align 8, !dbg !752
  br label %fallthrough.29

then.31:                                          ; preds = %else.28
  %icmp.36 = icmp eq i8* %call.30, null, !dbg !755
  br i1 %icmp.36, label %then.32, label %else.32

fallthrough.31:                                   ; preds = %else.31, %else.32
  %command_line_arguments.PkgLogger.field.ld.0 = load { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 0), align 8, !dbg !757
  %field.84 = getelementptr inbounds { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }* %command_line_arguments.PkgLogger.field.ld.0, i64 0, i32 1, !dbg !757
  %.field.ld.7 = load void (i8*, i8*, i64, i64, %IPST.2*)*, void (i8*, i8*, i64, i64, %IPST.2*)** %field.84, align 8, !dbg !757
  %command_line_arguments.PkgLogger.field.ld.1 = load i8*, i8** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 1), align 8, !dbg !757
  %call.31 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7interface.4.5, i64 0, i32 0)), !dbg !757
  store %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Component, i64 0, i32 0), %_type.0** %tmp.14.sroa.0.0.cast.663.sroa_idx, align 8, !dbg !757
  store i8* %call.25, i8** %tmp.14.sroa.2.0.cast.663.sroa_idx71, align 8, !dbg !757
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7interface.4.5, i64 0, i32 0), i8* %call.31, i8* nonnull %cast.667), !dbg !757
  store i8* %call.31, i8** %2, align 8, !dbg !757
  store i64 1, i64* %field.87, align 8, !dbg !757
  store i64 1, i64* %field.88, align 8, !dbg !757
  call void %.field.ld.7(i8* nest undef, i8* %command_line_arguments.PkgLogger.field.ld.1, i64 ptrtoint ([26 x i8]* @const.201 to i64), i64 25, %IPST.2* byval nonnull %tmp.15), !dbg !757
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.574), !dbg !722
  %tmpv.73.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.89, align 8, !dbg !722
  %icmp.38 = icmp eq { i8*, i64 }* %tmpv.73.field.ld.2, null, !dbg !722
  br i1 %icmp.38, label %else.33, label %then.33

else.31:                                          ; preds = %else.28
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.30, i8* %call.25), !dbg !755
  br label %fallthrough.31

then.32:                                          ; preds = %then.31
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !755
  unreachable

else.32:                                          ; preds = %then.31
  %7 = bitcast i8* %call.30 to i8**, !dbg !755
  store i8* %call.25, i8** %7, align 8, !dbg !755
  br label %fallthrough.31

then.33:                                          ; preds = %then.33.lr.ph, %fallthrough.31
  %tmpv.73.field.ld.275 = phi { i8*, i64 }* [ %tmpv.73.field.ld.273, %then.33.lr.ph ], [ %tmpv.73.field.ld.2, %fallthrough.31 ]
  %tmpv.71.sroa.0.0.cast.579.sroa_cast = bitcast { i8*, i64 }* %tmpv.73.field.ld.275 to i64*, !dbg !722
  %tmpv.71.sroa.0.0.copyload33 = load i64, i64* %tmpv.71.sroa.0.0.cast.579.sroa_cast, align 8, !dbg !722
  %tmpv.71.sroa.3.0.cast.579.sroa_idx34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.73.field.ld.275, i64 0, i32 1, !dbg !722
  %tmpv.71.sroa.3.0.copyload35 = load i64, i64* %tmpv.71.sroa.3.0.cast.579.sroa_idx34, align 8, !dbg !722
  %tmpv.73.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.56, align 8, !dbg !722
  %tmpv.72.sroa.0.0.cast.581.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.73.field.ld.1 to i64*, !dbg !722
  %tmpv.72.sroa.0.0.copyload24 = load i64, i64* %tmpv.72.sroa.0.0.cast.581.sroa_cast, align 8, !dbg !722
  %tmpv.72.sroa.3.0.cast.581.sroa_idx25 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.73.field.ld.1, i64 0, i32 1, !dbg !722
  %tmpv.72.sroa.3.0.cast.581.sroa_cast = bitcast i8** %tmpv.72.sroa.3.0.cast.581.sroa_idx25 to i64*, !dbg !722
  %tmpv.72.sroa.3.0.copyload26 = load i64, i64* %tmpv.72.sroa.3.0.cast.581.sroa_cast, align 8, !dbg !722
  call void @llvm.dbg.value(metadata i64 %tmpv.71.sroa.0.0.copyload33, metadata !758, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !759
  call void @llvm.dbg.value(metadata i64 %tmpv.71.sroa.3.0.copyload35, metadata !758, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !759
  call void @llvm.dbg.value(metadata i64 %tmpv.72.sroa.0.0.copyload24, metadata !760, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !759
  call void @llvm.dbg.value(metadata i64 %tmpv.72.sroa.3.0.copyload26, metadata !760, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !759
  call void @strings.SplitN(%IPST.5* nonnull sret %sret.actual.7, i8* nest undef, i64 %tmpv.71.sroa.0.0.copyload33, i64 %tmpv.71.sroa.3.0.copyload35, i64 ptrtoint ([2 x i8]* @const.194 to i64), i64 1, i64 2), !dbg !761
  %parts.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %parts.sroa.0.0.cast.593.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %parts.sroa.0.0.copyload, metadata !762, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !763
  %parts.sroa.6.0.copyload = load i64, i64* %parts.sroa.6.0.cast.593.sroa_idx14, align 8
  call void @llvm.dbg.value(metadata i64 %parts.sroa.6.0.copyload, metadata !762, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !763
  call void @llvm.dbg.value(metadata %IPST.5* %sret.actual.7, metadata !762, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !763
  %icmp.26 = icmp eq i64 %parts.sroa.6.0.copyload, 2, !dbg !764
  br i1 %icmp.26, label %else.24, label %then.23

else.33:                                          ; preds = %fallthrough.31, %else.22
  call void @llvm.dbg.value(metadata i64 0, metadata !710, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !711
  call void @llvm.dbg.value(metadata i64 0, metadata !710, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !711
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !765
  ret { i64, i64 } zeroinitializer, !dbg !765
}

define { i64, i64 } @command_line_arguments.Level.AddProperty(i8* nest nocapture readnone %nest.17, %Level.0* readonly %l, i64 %node.chunk0, i64 %node.chunk1, i64 %attrName.chunk0, i64 %attrName.chunk1, { %_type.0*, i8* }* byval nocapture readonly %v) #0 !dbg !766 {
entry:
  %tmp.55 = alloca %IPST.2, align 8
  %tmp.53 = alloca %IPST.2, align 8
  call void @llvm.dbg.declare(metadata { %_type.0*, i8* }* %v, metadata !769, metadata !DIExpression()), !dbg !770
  %tmpv.405 = alloca { i8*, i64 }, align 8
  %tmpv.408 = alloca [1 x { %_type.0*, i8* }], align 8
  %tmpv.413 = alloca { i8*, i64 }, align 8
  %tmpv.415 = alloca %IPST.11, align 8
  %tmpv.418 = alloca { i8*, i64 }, align 8
  %tmpv.419 = alloca { %_type.0*, i8* }, align 8
  %sret.actual.66 = alloca { %Context.1*, %error.0 }, align 8
  %tmpv.433 = alloca { i8*, i64 }, align 8
  %tmpv.434 = alloca [1 x { %_type.0*, i8* }], align 8
  %tmpv.438 = alloca { i8*, i64 }, align 8
  %sret.actual.70 = alloca { %File.0*, %error.0 }, align 8
  %tmpv.448 = alloca { i8*, %Context.1**, %File.0** }, align 8
  %tmpv.449 = alloca { i8*, i64 }, align 8
  %tmpv.458 = alloca { i8*, i64 }, align 8
  %tmpv.465 = alloca { i8*, i64 }, align 8
  %tmpv.468 = alloca { i8*, i64 }, align 8
  %sret.actual.75 = alloca { %Value.0*, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Level.0* %l, metadata !771, metadata !DIExpression()), !dbg !772
  call void @llvm.dbg.value(metadata i64 %node.chunk0, metadata !773, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !774
  call void @llvm.dbg.value(metadata i64 %node.chunk1, metadata !773, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !774
  call void @llvm.dbg.value(metadata i64 %attrName.chunk0, metadata !775, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !776
  call void @llvm.dbg.value(metadata i64 %attrName.chunk1, metadata !775, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !776
  call void @llvm.dbg.value(metadata i8 0, metadata !777, metadata !DIExpression()), !dbg !779
  %cast.1554 = bitcast { i8*, i64 }* %tmpv.405 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1554, i8 0, i64 16, i1 false)
  %field0.97 = bitcast { %_type.0*, i8* }* %v to i64*, !dbg !780
  %ld.183 = load i64, i64* %field0.97, align 8, !dbg !780
  %field1.97 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %v, i64 0, i32 1, !dbg !780
  %0 = bitcast i8** %field1.97 to i64*, !dbg !780
  %ld.184 = load i64, i64* %0, align 8, !dbg !780
  %call.116 = call i8 @runtime.ifaceE2T2(i8* nest undef, %_type.0* nonnull @string..d, i64 %ld.183, i64 %ld.184, i8* nonnull %cast.1554), !dbg !780
  call void @llvm.dbg.value(metadata i8 %call.116, metadata !777, metadata !DIExpression()), !dbg !779
  %c.sroa.0.0.cast.1559.sroa_cast = bitcast { i8*, i64 }* %tmpv.405 to i64*, !dbg !780
  %c.sroa.0.0.copyload117 = load i64, i64* %c.sroa.0.0.cast.1559.sroa_cast, align 8, !dbg !780
  call void @llvm.dbg.value(metadata i64 %c.sroa.0.0.copyload117, metadata !781, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !779
  %c.sroa.9.0.cast.1559.sroa_idx123 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.405, i64 0, i32 1, !dbg !780
  %c.sroa.9.0.copyload124 = load i64, i64* %c.sroa.9.0.cast.1559.sroa_idx123, align 8, !dbg !780
  call void @llvm.dbg.value(metadata i64 %c.sroa.9.0.copyload124, metadata !781, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !779
  %icmp.147 = icmp eq i8 %call.116, 0, !dbg !782
  br i1 %icmp.147, label %then.124, label %else.124

then.124:                                         ; preds = %entry
  %call.117 = call { i64, i64 } @reflect.TypeOf(i8* nest undef, i64 %ld.183, i64 %ld.184), !dbg !783
  %call.117.fca.0.extract = extractvalue { i64, i64 } %call.117, 0, !dbg !783
  %call.117.fca.1.extract = extractvalue { i64, i64 } %call.117, 1, !dbg !783
  %icmp.146 = icmp eq i64 %call.117.fca.0.extract, 0, !dbg !783
  br i1 %icmp.146, label %fallthrough.125, label %else.125

else.124:                                         ; preds = %entry
  %call.119 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !784
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.119, metadata !785, metadata !DIExpression()), !dbg !786
  %icmp.148 = icmp eq %Level.0* %l, null, !dbg !787
  br i1 %icmp.148, label %then.126, label %else.126

fallthrough.125:                                  ; preds = %then.124, %else.125
  %tmpv.409.0 = phi %_type.0* [ %.field.ld.59, %else.125 ], [ null, %then.124 ]
  %1 = inttoptr i64 %call.117.fca.1.extract to i8*, !dbg !789
  %tmp.52.sroa.0.0.cast.1566.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.408, i64 0, i64 0, i32 0, !dbg !789
  store %_type.0* %tmpv.409.0, %_type.0** %tmp.52.sroa.0.0.cast.1566.sroa_idx, align 8, !dbg !789
  %tmp.52.sroa.2.0.cast.1566.sroa_idx145 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.408, i64 0, i64 0, i32 1, !dbg !789
  store i8* %1, i8** %tmp.52.sroa.2.0.cast.1566.sroa_idx145, align 8, !dbg !789
  %field.392 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.53, i64 0, i32 0, !dbg !789
  %cast.1569 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.408, i64 0, i64 0, !dbg !789
  store { %_type.0*, i8* }* %cast.1569, { %_type.0*, i8* }** %field.392, align 8, !dbg !789
  %field.393 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.53, i64 0, i32 1, !dbg !789
  store i64 1, i64* %field.393, align 8, !dbg !789
  %field.394 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.53, i64 0, i32 2, !dbg !789
  store i64 1, i64* %field.394, align 8, !dbg !789
  %call.118 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([49 x i8]* @const.240 to i64), i64 48, %IPST.2* byval nonnull %tmp.53), !dbg !789
  ret { i64, i64 } %call.118, !dbg !790

else.125:                                         ; preds = %then.124
  %2 = inttoptr i64 %call.117.fca.0.extract to { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, !dbg !783
  %field.388 = getelementptr inbounds { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }, { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }* %2, i64 0, i32 0, !dbg !783
  %.field.ld.59 = load %_type.0*, %_type.0** %field.388, align 8, !dbg !783
  br label %fallthrough.125

then.126:                                         ; preds = %else.124
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !787
  unreachable

else.126:                                         ; preds = %else.124
  %field.395 = getelementptr inbounds %Level.0, %Level.0* %l, i64 0, i32 1, !dbg !787
  %.field.ld.60 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.395, align 8, !dbg !787
  %cast.1581 = bitcast { i8*, i64 }* %tmpv.413 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1581, i8 0, i64 16, i1 false)
  %cast.1585 = bitcast %IPST.11* %tmpv.415 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1585, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.60, i8* nonnull %cast.1585), !dbg !791
  %field.404 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.415, i64 0, i32 0, !dbg !791
  %tmpv.415.field.ld.2154 = load { i8*, i64 }*, { i8*, i64 }** %field.404, align 8, !dbg !791
  %icmp.152155 = icmp eq { i8*, i64 }* %tmpv.415.field.ld.2154, null, !dbg !791
  br i1 %icmp.152155, label %else.130, label %then.130.lr.ph

then.130.lr.ph:                                   ; preds = %else.126
  %field.397 = getelementptr inbounds %IPST.11, %IPST.11* %tmpv.415, i64 0, i32 1
  %cast.1601 = bitcast { i8*, i64 }* %tmpv.418 to i8*
  %field.402 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.419, i64 0, i32 0
  %field.403 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.419, i64 0, i32 1
  %3 = bitcast i8** %field.403 to i64*
  %cast.1613 = bitcast { %_type.0*, i8* }* %tmpv.419 to i8*
  br label %then.130

fallthrough.127:                                  ; preds = %then.130, %else.127
  %tmpv.420.0 = phi %_type.0* [ %.field.ld.61, %else.127 ], [ null, %then.130 ]
  store %_type.0* %tmpv.420.0, %_type.0** %field.402, align 8, !dbg !792
  store i64 %tmpv.414.sroa.3.0.copyload30151, i64* %3, align 8, !dbg !792
  %call.120 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.119, i8* nonnull %cast.1601), !dbg !792
  %runtime.writeBarrier.ld.12 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !792
  %icmp.151 = icmp eq i32 %runtime.writeBarrier.ld.12, 0, !dbg !792
  br i1 %icmp.151, label %then.128, label %else.128

else.127:                                         ; preds = %then.130
  %field.400 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %tmpv.414.sroa.0.0.copyload28, i64 0, i32 0, !dbg !793
  %.field.ld.61 = load %_type.0*, %_type.0** %field.400, align 8, !dbg !793
  br label %fallthrough.127

then.128:                                         ; preds = %fallthrough.127
  %icmp.150 = icmp eq i8* %call.120, null, !dbg !792
  br i1 %icmp.150, label %then.129, label %else.129

fallthrough.128:                                  ; preds = %else.128, %else.129
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1585), !dbg !791
  %tmpv.415.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.404, align 8, !dbg !791
  %icmp.152 = icmp eq { i8*, i64 }* %tmpv.415.field.ld.2, null, !dbg !791
  br i1 %icmp.152, label %else.130, label %then.130

else.128:                                         ; preds = %fallthrough.127
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i64 0, i32 0), i8* %call.120, i8* nonnull %cast.1613), !dbg !792
  br label %fallthrough.128

then.129:                                         ; preds = %then.128
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !792
  unreachable

else.129:                                         ; preds = %then.128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.120, i8* nonnull align 8 %cast.1613, i64 16, i1 false), !dbg !792
  br label %fallthrough.128

then.130:                                         ; preds = %then.130.lr.ph, %fallthrough.128
  %tmpv.415.field.ld.2156 = phi { i8*, i64 }* [ %tmpv.415.field.ld.2154, %then.130.lr.ph ], [ %tmpv.415.field.ld.2, %fallthrough.128 ]
  %cast.1590 = bitcast { i8*, i64 }* %tmpv.415.field.ld.2156 to i8*, !dbg !791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1581, i8* align 8 %cast.1590, i64 16, i1 false), !dbg !791
  %tmpv.415.field.ld.1 = load %Entity.0*, %Entity.0** %field.397, align 8, !dbg !791
  %tmpv.414.sroa.0.0.cast.1592.sroa_idx = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.415.field.ld.1, i64 0, i32 0, !dbg !791
  %tmpv.414.sroa.0.0.copyload28 = load { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }** %tmpv.414.sroa.0.0.cast.1592.sroa_idx, align 8, !dbg !791
  %tmpv.414.sroa.3.0.cast.1592.sroa_idx29 = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.415.field.ld.1, i64 0, i32 1, !dbg !791
  %4 = bitcast i8** %tmpv.414.sroa.3.0.cast.1592.sroa_idx29 to i64*, !dbg !791
  %tmpv.414.sroa.3.0.copyload30151 = load i64, i64* %4, align 8, !dbg !791
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %tmpv.414.sroa.0.0.copyload28, metadata !794, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !795
  call void @llvm.dbg.value(metadata i8** %tmpv.414.sroa.3.0.cast.1592.sroa_idx29, metadata !794, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1601, i8* nonnull align 8 %cast.1581, i64 16, i1 false)
  %icmp.149 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %tmpv.414.sroa.0.0.copyload28, null, !dbg !793
  br i1 %icmp.149, label %fallthrough.127, label %else.127

else.130:                                         ; preds = %fallthrough.128, %else.126
  call void @github_com_ChrisRx_dungeonfs_pkg_eval.NewContext({ %Context.1*, %error.0 }* nonnull sret %sret.actual.66, i8* nest undef, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.119), !dbg !796
  %tmpv.424.sroa.0.0.cast.1619.sroa_idx = getelementptr inbounds { %Context.1*, %error.0 }, { %Context.1*, %error.0 }* %sret.actual.66, i64 0, i32 0, !dbg !796
  %tmpv.424.sroa.0.0.copyload20 = load %Context.1*, %Context.1** %tmpv.424.sroa.0.0.cast.1619.sroa_idx, align 8, !dbg !796
  %tmpv.424.sroa.3.sroa.0.0.tmpv.424.sroa.3.0.cast.1619.sroa_cast.sroa_idx = getelementptr inbounds { %Context.1*, %error.0 }, { %Context.1*, %error.0 }* %sret.actual.66, i64 0, i32 1, i32 0, !dbg !796
  %tmpv.424.sroa.3.sroa.0.0.copyload104 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.424.sroa.3.sroa.0.0.tmpv.424.sroa.3.0.cast.1619.sroa_cast.sroa_idx, align 8, !dbg !796
  %tmpv.424.sroa.3.sroa.3.0.tmpv.424.sroa.3.0.cast.1619.sroa_cast.sroa_idx105 = getelementptr inbounds { %Context.1*, %error.0 }, { %Context.1*, %error.0 }* %sret.actual.66, i64 0, i32 1, i32 1, !dbg !796
  %5 = bitcast i8** %tmpv.424.sroa.3.sroa.3.0.tmpv.424.sroa.3.0.cast.1619.sroa_cast.sroa_idx105 to i64*, !dbg !796
  %tmpv.424.sroa.3.sroa.3.0.copyload106147 = load i64, i64* %5, align 8, !dbg !796
  %call.121 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_eval.Context, i64 0, i32 0)), !dbg !797
  %cast.1621 = bitcast i8* %call.121 to %Context.1**, !dbg !797
  call void @llvm.dbg.value(metadata %Context.1** %cast.1621, metadata !798, metadata !DIExpression()), !dbg !899
  %runtime.writeBarrier.ld.13 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !796
  %icmp.154 = icmp eq i32 %runtime.writeBarrier.ld.13, 0, !dbg !796
  br i1 %icmp.154, label %then.131, label %else.131

then.131:                                         ; preds = %else.130
  %icmp.153 = icmp eq i8* %call.121, null, !dbg !796
  br i1 %icmp.153, label %then.132, label %else.132

fallthrough.131:                                  ; preds = %else.131, %else.132
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.424.sroa.3.sroa.0.0.copyload104, metadata !900, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !899
  call void @llvm.dbg.value(metadata i8** %tmpv.424.sroa.3.sroa.3.0.tmpv.424.sroa.3.0.cast.1619.sroa_cast.sroa_idx105, metadata !900, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !899
  %icmp.155 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.424.sroa.3.sroa.0.0.copyload104, null, !dbg !901
  br i1 %icmp.155, label %else.133, label %then.133

else.131:                                         ; preds = %else.130
  %cast.1624 = bitcast %Context.1* %tmpv.424.sroa.0.0.copyload20 to i8*, !dbg !796
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.121, i8* %cast.1624), !dbg !796
  br label %fallthrough.131

then.132:                                         ; preds = %then.131
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !796
  unreachable

else.132:                                         ; preds = %then.131
  store %Context.1* %tmpv.424.sroa.0.0.copyload20, %Context.1** %cast.1621, align 8, !dbg !796
  br label %fallthrough.131

then.133:                                         ; preds = %fallthrough.131
  %6 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.424.sroa.3.sroa.0.0.copyload104 to i64, !dbg !902
  call void @llvm.dbg.value(metadata i64 %6, metadata !903, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !904
  call void @llvm.dbg.value(metadata i64 %tmpv.424.sroa.3.sroa.3.0.copyload106147, metadata !903, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !904
  %ld.190.fca.0.insert = insertvalue { i64, i64 } undef, i64 %6, 0, !dbg !902
  %ld.190.fca.1.insert = insertvalue { i64, i64 } %ld.190.fca.0.insert, i64 %tmpv.424.sroa.3.sroa.3.0.copyload106147, 1, !dbg !902
  ret { i64, i64 } %ld.190.fca.1.insert, !dbg !902

else.133:                                         ; preds = %fallthrough.131
  %7 = inttoptr i64 %node.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, !dbg !905
  %field.409 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %7, i64 0, i32 9, !dbg !905
  %.field.ld.62 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.409, align 8, !dbg !905
  %8 = inttoptr i64 %node.chunk1 to i8*, !dbg !905
  %call.122 = call { i64, i64 } %.field.ld.62(i8* nest undef, i8* %8), !dbg !905
  %call.122.fca.0.extract = extractvalue { i64, i64 } %call.122, 0, !dbg !905
  %call.122.fca.1.extract = extractvalue { i64, i64 } %call.122, 1, !dbg !905
  %call.123 = call { i64, i64 } @strings.Replace(i8* nest undef, i64 %c.sroa.0.0.copyload117, i64 %c.sroa.9.0.copyload124, i64 ptrtoint ([5 x i8]* @const.244 to i64), i64 4, i64 %call.122.fca.0.extract, i64 %call.122.fca.1.extract, i64 -1), !dbg !906
  %call.123.fca.0.extract = extractvalue { i64, i64 } %call.123, 0, !dbg !906
  %call.123.fca.1.extract = extractvalue { i64, i64 } %call.123, 1, !dbg !906
  call void @llvm.dbg.value(metadata i64 %call.123.fca.0.extract, metadata !907, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !908
  call void @llvm.dbg.value(metadata i64 %call.123.fca.1.extract, metadata !907, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !908
  %call.124 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !909
  %src.sroa.0.0.cast.1645.sroa_cast = bitcast { i8*, i64 }* %tmpv.433 to i64*
  store i64 %call.123.fca.0.extract, i64* %src.sroa.0.0.cast.1645.sroa_cast, align 8
  %src.sroa.10.0.cast.1645.sroa_idx61 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.433, i64 0, i32 1
  store i64 %call.123.fca.1.extract, i64* %src.sroa.10.0.cast.1645.sroa_idx61, align 8
  %cast.1648 = bitcast { i8*, i64 }* %tmpv.433 to i8*, !dbg !909
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.124, i8* nonnull %cast.1648), !dbg !909
  %tmp.54.sroa.0.0.cast.1650.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.434, i64 0, i64 0, i32 0, !dbg !909
  store %_type.0* @string..d, %_type.0** %tmp.54.sroa.0.0.cast.1650.sroa_idx, align 8, !dbg !909
  %tmp.54.sroa.2.0.cast.1650.sroa_idx146 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.434, i64 0, i64 0, i32 1, !dbg !909
  store i8* %call.124, i8** %tmp.54.sroa.2.0.cast.1650.sroa_idx146, align 8, !dbg !909
  %field.413 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.55, i64 0, i32 0, !dbg !909
  %cast.1653 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.434, i64 0, i64 0, !dbg !909
  store { %_type.0*, i8* }* %cast.1653, { %_type.0*, i8* }** %field.413, align 8, !dbg !909
  %field.414 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.55, i64 0, i32 1, !dbg !909
  store i64 1, i64* %field.414, align 8, !dbg !909
  %field.415 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.55, i64 0, i32 2, !dbg !909
  store i64 1, i64* %field.415, align 8, !dbg !909
  %ld.197 = load i64, i64* bitcast ({ i8*, i64 }* @command_line_arguments.srcTmpl to i64*), align 8, !dbg !909
  %ld.198 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* @command_line_arguments.srcTmpl, i64 0, i32 1), align 8, !dbg !909
  %call.125 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 %ld.197, i64 %ld.198, %IPST.2* byval nonnull %tmp.55), !dbg !909
  %call.125.fca.0.extract = extractvalue { i64, i64 } %call.125, 0, !dbg !909
  %call.125.fca.1.extract = extractvalue { i64, i64 } %call.125, 1, !dbg !909
  call void @llvm.dbg.value(metadata i64 %call.125.fca.0.extract, metadata !907, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !908
  call void @llvm.dbg.value(metadata i64 %call.125.fca.1.extract, metadata !907, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !908
  %call.126 = call %FileSet.0* @go_token.NewFileSet(i8* nest undef), !dbg !910
  call void @llvm.dbg.value(metadata %FileSet.0* %call.126, metadata !911, metadata !DIExpression()), !dbg !912
  %call.127 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !913
  %src.sroa.0.0.cast.1662.sroa_cast = bitcast { i8*, i64 }* %tmpv.438 to i64*
  store i64 %call.125.fca.0.extract, i64* %src.sroa.0.0.cast.1662.sroa_cast, align 8
  %src.sroa.10.0.cast.1662.sroa_idx62 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.438, i64 0, i32 1
  store i64 %call.125.fca.1.extract, i64* %src.sroa.10.0.cast.1662.sroa_idx62, align 8
  %cast.1665 = bitcast { i8*, i64 }* %tmpv.438 to i8*, !dbg !913
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.127, i8* nonnull %cast.1665), !dbg !913
  %9 = ptrtoint i8* %call.127 to i64, !dbg !913
  call void @go_parser.ParseFile({ %File.0*, %error.0 }* nonnull sret %sret.actual.70, i8* nest undef, %FileSet.0* %call.126, i64 0, i64 0, i64 ptrtoint (%_type.0* @string..d to i64), i64 %9, i64 32), !dbg !914
  %tmpv.436.sroa.0.0.cast.1670.sroa_idx = getelementptr inbounds { %File.0*, %error.0 }, { %File.0*, %error.0 }* %sret.actual.70, i64 0, i32 0, !dbg !914
  %tmpv.436.sroa.0.0.copyload13 = load %File.0*, %File.0** %tmpv.436.sroa.0.0.cast.1670.sroa_idx, align 8, !dbg !914
  %tmpv.436.sroa.3.sroa.0.0.tmpv.436.sroa.3.0.cast.1670.sroa_cast.sroa_idx = getelementptr inbounds { %File.0*, %error.0 }, { %File.0*, %error.0 }* %sret.actual.70, i64 0, i32 1, i32 0, !dbg !914
  %tmpv.436.sroa.3.sroa.0.0.copyload100 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.436.sroa.3.sroa.0.0.tmpv.436.sroa.3.0.cast.1670.sroa_cast.sroa_idx, align 8, !dbg !914
  %tmpv.436.sroa.3.sroa.3.0.tmpv.436.sroa.3.0.cast.1670.sroa_cast.sroa_idx101 = getelementptr inbounds { %File.0*, %error.0 }, { %File.0*, %error.0 }* %sret.actual.70, i64 0, i32 1, i32 1, !dbg !914
  %10 = bitcast i8** %tmpv.436.sroa.3.sroa.3.0.tmpv.436.sroa.3.0.cast.1670.sroa_cast.sroa_idx101 to i64*, !dbg !914
  %tmpv.436.sroa.3.sroa.3.0.copyload102148 = load i64, i64* %10, align 8, !dbg !914
  %call.128 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_ast.File, i64 0, i32 0)), !dbg !915
  %cast.1672 = bitcast i8* %call.128 to %File.0**, !dbg !915
  call void @llvm.dbg.value(metadata %File.0** %cast.1672, metadata !916, metadata !DIExpression()), !dbg !1009
  %runtime.writeBarrier.ld.14 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !914
  %icmp.157 = icmp eq i32 %runtime.writeBarrier.ld.14, 0, !dbg !914
  br i1 %icmp.157, label %then.134, label %else.134

then.134:                                         ; preds = %else.133
  %icmp.156 = icmp eq i8* %call.128, null, !dbg !914
  br i1 %icmp.156, label %then.135, label %else.135

fallthrough.134:                                  ; preds = %else.134, %else.135
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.436.sroa.3.sroa.0.0.copyload100, metadata !900, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !899
  call void @llvm.dbg.value(metadata i8** %tmpv.436.sroa.3.sroa.3.0.tmpv.436.sroa.3.0.cast.1670.sroa_cast.sroa_idx101, metadata !900, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !899
  %icmp.158 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.436.sroa.3.sroa.0.0.copyload100, null, !dbg !1010
  br i1 %icmp.158, label %else.136, label %then.136

else.134:                                         ; preds = %else.133
  %cast.1675 = bitcast %File.0* %tmpv.436.sroa.0.0.copyload13 to i8*, !dbg !914
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.128, i8* %cast.1675), !dbg !914
  br label %fallthrough.134

then.135:                                         ; preds = %then.134
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !914
  unreachable

else.135:                                         ; preds = %then.134
  store %File.0* %tmpv.436.sroa.0.0.copyload13, %File.0** %cast.1672, align 8, !dbg !914
  br label %fallthrough.134

then.136:                                         ; preds = %fallthrough.134
  %11 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.436.sroa.3.sroa.0.0.copyload100 to i64, !dbg !1011
  call void @llvm.dbg.value(metadata i64 %11, metadata !903, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !904
  call void @llvm.dbg.value(metadata i64 %tmpv.436.sroa.3.sroa.3.0.copyload102148, metadata !903, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !904
  %ld.203.fca.0.insert = insertvalue { i64, i64 } undef, i64 %11, 0, !dbg !1011
  %ld.203.fca.1.insert = insertvalue { i64, i64 } %ld.203.fca.0.insert, i64 %tmpv.436.sroa.3.sroa.3.0.copyload102148, 1, !dbg !1011
  ret { i64, i64 } %ld.203.fca.1.insert, !dbg !1011

else.136:                                         ; preds = %fallthrough.134
  %call.129 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5, i64 0, i32 0)), !dbg !1012
  %field.421 = getelementptr inbounds { i8*, %Context.1**, %File.0** }, { i8*, %Context.1**, %File.0** }* %tmpv.448, i64 0, i32 0, !dbg !1012
  store i8* bitcast (void ({ %Value.0*, %error.0 }*, i8*)* @command_line_arguments..1command_line_arguments.Level.AddProperty..func1 to i8*), i8** %field.421, align 8, !dbg !1012
  %field.422 = getelementptr inbounds { i8*, %Context.1**, %File.0** }, { i8*, %Context.1**, %File.0** }* %tmpv.448, i64 0, i32 1, !dbg !1012
  %12 = bitcast %Context.1*** %field.422 to i8**, !dbg !1012
  store i8* %call.121, i8** %12, align 8, !dbg !1012
  %field.423 = getelementptr inbounds { i8*, %Context.1**, %File.0** }, { i8*, %Context.1**, %File.0** }* %tmpv.448, i64 0, i32 2, !dbg !1012
  %13 = bitcast %File.0*** %field.423 to i8**, !dbg !1012
  store i8* %call.128, i8** %13, align 8, !dbg !1012
  %cast.1696 = bitcast { i8*, %Context.1**, %File.0** }* %tmpv.448 to i8*, !dbg !1012
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5, i64 0, i32 0), i8* %call.129, i8* nonnull %cast.1696), !dbg !1012
  call void @llvm.dbg.value(metadata i8* %call.129, metadata !1013, metadata !DIExpression()), !dbg !1025
  call void @llvm.dbg.value(metadata i8 0, metadata !1026, metadata !DIExpression()), !dbg !1028
  %.field.ld.63 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.409, align 8, !dbg !1029
  %call.130 = call { i64, i64 } %.field.ld.63(i8* nest undef, i8* %8), !dbg !1029
  %call.130.fca.0.extract = extractvalue { i64, i64 } %call.130, 0, !dbg !1029
  %call.130.fca.1.extract = extractvalue { i64, i64 } %call.130, 1, !dbg !1029
  %sret.actual.71.sroa.0.0.cast.1699.sroa_cast = bitcast { i8*, i64 }* %tmpv.449 to i64*
  store i64 %call.130.fca.0.extract, i64* %sret.actual.71.sroa.0.0.cast.1699.sroa_cast, align 8
  %sret.actual.71.sroa.2.0.cast.1699.sroa_idx12 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.449, i64 0, i32 1
  store i64 %call.130.fca.1.extract, i64* %sret.actual.71.sroa.2.0.cast.1699.sroa_idx12, align 8
  %field.427 = getelementptr inbounds %Level.0, %Level.0* %l, i64 0, i32 3, !dbg !1030
  %.field.ld.64 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.427, align 8, !dbg !1030
  %cast.1705 = bitcast { i8*, i64 }* %tmpv.449 to i8*, !dbg !1031
  %call.131 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.64, i8* nonnull %cast.1705), !dbg !1031
  %call.131.fca.1.extract = extractvalue { i64, i8 } %call.131, 1, !dbg !1031
  call void @llvm.dbg.value(metadata i8 %call.131.fca.1.extract, metadata !1026, metadata !DIExpression()), !dbg !1028
  %icmp.163 = icmp eq i8 %call.131.fca.1.extract, 0, !dbg !1032
  br i1 %icmp.163, label %then.138, label %fallthrough.138

then.138:                                         ; preds = %else.136
  %.field.ld.65 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.409, align 8, !dbg !1033
  %call.132 = call { i64, i64 } %.field.ld.65(i8* nest undef, i8* %8), !dbg !1033
  %call.132.fca.0.extract = extractvalue { i64, i64 } %call.132, 0, !dbg !1033
  %call.132.fca.1.extract = extractvalue { i64, i64 } %call.132, 1, !dbg !1033
  %tmpv.457.sroa.0.0.cast.1713.sroa_cast = bitcast { i8*, i64 }* %tmpv.458 to i64*
  store i64 %call.132.fca.0.extract, i64* %tmpv.457.sroa.0.0.cast.1713.sroa_cast, align 8
  %tmpv.457.sroa.2.0.cast.1713.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.458, i64 0, i32 1
  store i64 %call.132.fca.1.extract, i64* %tmpv.457.sroa.2.0.cast.1713.sroa_idx11, align 8
  %call.133 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !1034
  %.field.ld.66 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.427, align 8, !dbg !1035
  %cast.1717 = bitcast { i8*, i64 }* %tmpv.458 to i8*, !dbg !1036
  %call.134 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.66, i8* nonnull %cast.1717), !dbg !1036
  %cast.1718 = bitcast i8* %call.134 to { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, !dbg !1036
  %runtime.writeBarrier.ld.15 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1036
  %icmp.162 = icmp eq i32 %runtime.writeBarrier.ld.15, 0, !dbg !1036
  br i1 %icmp.162, label %then.140, label %else.140

fallthrough.138:                                  ; preds = %else.141, %else.140, %else.136
  %.field.ld.67 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.409, align 8, !dbg !1037
  %call.135 = call { i64, i64 } %.field.ld.67(i8* nest undef, i8* %8), !dbg !1037
  %call.135.fca.0.extract = extractvalue { i64, i64 } %call.135, 0, !dbg !1037
  %call.135.fca.1.extract = extractvalue { i64, i64 } %call.135, 1, !dbg !1037
  %sret.actual.74.sroa.0.0.cast.1723.sroa_cast = bitcast { i8*, i64 }* %tmpv.465 to i64*
  store i64 %call.135.fca.0.extract, i64* %sret.actual.74.sroa.0.0.cast.1723.sroa_cast, align 8
  %sret.actual.74.sroa.2.0.cast.1723.sroa_idx9 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.465, i64 0, i32 1
  store i64 %call.135.fca.1.extract, i64* %sret.actual.74.sroa.2.0.cast.1723.sroa_idx9, align 8
  %.field.ld.68 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.427, align 8, !dbg !1038
  %attrName.addr.sroa.0.0.cast.1726.sroa_cast = bitcast { i8*, i64 }* %tmpv.468 to i64*
  store i64 %attrName.chunk0, i64* %attrName.addr.sroa.0.0.cast.1726.sroa_cast, align 8
  %attrName.addr.sroa.3.0.cast.1726.sroa_idx144 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.468, i64 0, i32 1
  store i64 %attrName.chunk1, i64* %attrName.addr.sroa.3.0.cast.1726.sroa_idx144, align 8
  %cast.1730 = bitcast { i8*, i64 }* %tmpv.465 to i8*, !dbg !1039
  %call.136 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.68, i8* nonnull %cast.1730), !dbg !1039
  %cast.1731 = bitcast i8* %call.136 to { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, !dbg !1039
  %.ld.79 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %cast.1731, align 8, !dbg !1039
  %cast.1733 = bitcast { i8*, i64 }* %tmpv.468 to i8*, !dbg !1040
  %call.137 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.PropertyFunc, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.ld.79, i8* nonnull %cast.1733), !dbg !1040
  %runtime.writeBarrier.ld.16 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1040
  %icmp.166 = icmp eq i32 %runtime.writeBarrier.ld.16, 0, !dbg !1040
  br i1 %icmp.166, label %then.143, label %else.143

then.140:                                         ; preds = %then.138
  %icmp.161 = icmp eq i8* %call.134, null, !dbg !1036
  br i1 %icmp.161, label %then.141, label %else.141

else.140:                                         ; preds = %then.138
  %cast.1721 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.133 to i8*, !dbg !1036
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.134, i8* %cast.1721), !dbg !1036
  br label %fallthrough.138

then.141:                                         ; preds = %then.140
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1036
  unreachable

else.141:                                         ; preds = %then.140
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.133, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %cast.1718, align 8, !dbg !1036
  br label %fallthrough.138

then.143:                                         ; preds = %fallthrough.138
  %icmp.165 = icmp eq i8* %call.137, null, !dbg !1040
  br i1 %icmp.165, label %then.144, label %else.144

fallthrough.143:                                  ; preds = %else.143, %else.144
  %14 = bitcast i8* %call.129 to void ({ %Value.0*, %error.0 }*, i8*)**, !dbg !1041
  %deref.ld.1149 = load void ({ %Value.0*, %error.0 }*, i8*)*, void ({ %Value.0*, %error.0 }*, i8*)** %14, align 8, !dbg !1041
  call void %deref.ld.1149({ %Value.0*, %error.0 }* nonnull sret %sret.actual.75, i8* nest %call.129), !dbg !1041
  %tmpv.474.sroa.3.sroa.0.0.tmpv.474.sroa.3.0.cast.1744.sroa_cast.sroa_idx = getelementptr inbounds { %Value.0*, %error.0 }, { %Value.0*, %error.0 }* %sret.actual.75, i64 0, i32 1, i32 0, !dbg !1041
  %tmpv.474.sroa.3.sroa.0.0.copyload96 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.474.sroa.3.sroa.0.0.tmpv.474.sroa.3.0.cast.1744.sroa_cast.sroa_idx, align 8, !dbg !1041
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.474.sroa.3.sroa.0.0.copyload96, metadata !900, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !899
  %icmp.167 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.474.sroa.3.sroa.0.0.copyload96, null, !dbg !1042
  br i1 %icmp.167, label %else.145, label %then.145

else.143:                                         ; preds = %fallthrough.138
  call void @runtime.writebarrierptr(i8* nest undef, i8* %call.137, i8* %call.129), !dbg !1040
  br label %fallthrough.143

then.144:                                         ; preds = %then.143
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1040
  unreachable

else.144:                                         ; preds = %then.143
  %15 = bitcast i8* %call.137 to i8**, !dbg !1040
  store i8* %call.129, i8** %15, align 8, !dbg !1040
  br label %fallthrough.143

then.145:                                         ; preds = %fallthrough.143
  %tmpv.474.sroa.3.sroa.3.0.tmpv.474.sroa.3.0.cast.1744.sroa_cast.sroa_idx97 = getelementptr inbounds { %Value.0*, %error.0 }, { %Value.0*, %error.0 }* %sret.actual.75, i64 0, i32 1, i32 1, !dbg !1041
  %16 = bitcast i8** %tmpv.474.sroa.3.sroa.3.0.tmpv.474.sroa.3.0.cast.1744.sroa_cast.sroa_idx97 to i64*, !dbg !1041
  %tmpv.474.sroa.3.sroa.3.0.copyload98150 = load i64, i64* %16, align 8, !dbg !1041
  call void @llvm.dbg.value(metadata i8** %tmpv.474.sroa.3.sroa.3.0.tmpv.474.sroa.3.0.cast.1744.sroa_cast.sroa_idx97, metadata !900, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !899
  %17 = ptrtoint { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.474.sroa.3.sroa.0.0.copyload96 to i64, !dbg !1043
  call void @llvm.dbg.value(metadata i64 %17, metadata !903, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !904
  call void @llvm.dbg.value(metadata i64 %tmpv.474.sroa.3.sroa.3.0.copyload98150, metadata !903, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !904
  %ld.204.fca.0.insert = insertvalue { i64, i64 } undef, i64 %17, 0, !dbg !1043
  %ld.204.fca.1.insert = insertvalue { i64, i64 } %ld.204.fca.0.insert, i64 %tmpv.474.sroa.3.sroa.3.0.copyload98150, 1, !dbg !1043
  ret { i64, i64 } %ld.204.fca.1.insert, !dbg !1043

else.145:                                         ; preds = %fallthrough.143
  %tmpv.474.sroa.0.0.cast.1744.sroa_idx = getelementptr inbounds { %Value.0*, %error.0 }, { %Value.0*, %error.0 }* %sret.actual.75, i64 0, i32 0, !dbg !1041
  %tmpv.474.sroa.0.0.copyload7 = load %Value.0*, %Value.0** %tmpv.474.sroa.0.0.cast.1744.sroa_idx, align 8, !dbg !1041
  call void @llvm.dbg.value(metadata %Value.0* %tmpv.474.sroa.0.0.copyload7, metadata !1044, metadata !DIExpression()), !dbg !1045
  %call.138 = call { i64, i64 } @command_line_arguments.SetNodeAttr(i8* nest undef, i64 %node.chunk0, i64 %node.chunk1, i64 %attrName.chunk0, i64 %attrName.chunk1, %Value.0* %tmpv.474.sroa.0.0.copyload7), !dbg !1046
  ret { i64, i64 } %call.138, !dbg !1047
}

define { i64, i8 } @command_line_arguments.Level.GetProperties(i8* nest nocapture readnone %nest.19, %Level.0* readonly %l, i64 %key.chunk0, i64 %key.chunk1) #0 !dbg !1048 {
entry:
  %tmpv.492 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Level.0* %l, metadata !1051, metadata !DIExpression()), !dbg !1052
  call void @llvm.dbg.value(metadata i64 %key.chunk0, metadata !1053, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1054
  call void @llvm.dbg.value(metadata i64 %key.chunk1, metadata !1053, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1054
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1055, metadata !DIExpression()), !dbg !1056
  call void @llvm.dbg.value(metadata i8 0, metadata !1057, metadata !DIExpression()), !dbg !1058
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1059, metadata !DIExpression()), !dbg !1061
  call void @llvm.dbg.value(metadata i8 0, metadata !1062, metadata !DIExpression()), !dbg !1061
  %key.addr.sroa.0.0.cast.1797.sroa_cast = bitcast { i8*, i64 }* %tmpv.492 to i64*
  store i64 %key.chunk0, i64* %key.addr.sroa.0.0.cast.1797.sroa_cast, align 8
  %key.addr.sroa.2.0.cast.1797.sroa_idx8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.492, i64 0, i32 1
  store i64 %key.chunk1, i64* %key.addr.sroa.2.0.cast.1797.sroa_idx8, align 8
  %icmp.173 = icmp eq %Level.0* %l, null, !dbg !1063
  br i1 %icmp.173, label %then.150, label %else.150

then.150:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1063
  unreachable

else.150:                                         ; preds = %entry
  %field.458 = getelementptr inbounds %Level.0, %Level.0* %l, i64 0, i32 3, !dbg !1063
  %.field.ld.74 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.458, align 8, !dbg !1063
  %cast.1803 = bitcast { i8*, i64 }* %tmpv.492 to i8*, !dbg !1064
  %call.139 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.74, i8* nonnull %cast.1803), !dbg !1064
  %call.139.fca.1.extract = extractvalue { i64, i8 } %call.139, 1, !dbg !1064
  call void @llvm.dbg.value(metadata i8 %call.139.fca.1.extract, metadata !1062, metadata !DIExpression()), !dbg !1061
  %0 = and i8 %call.139.fca.1.extract, 1, !dbg !1065
  %trunc.153 = icmp eq i8 %0, 0, !dbg !1065
  br i1 %trunc.153, label %else.151, label %then.151

then.151:                                         ; preds = %else.150
  %call.139.fca.0.extract = extractvalue { i64, i8 } %call.139, 0, !dbg !1064
  %1 = inttoptr i64 %call.139.fca.0.extract to i64*, !dbg !1064
  %.ld.879 = load i64, i64* %1, align 8, !dbg !1064
  call void @llvm.dbg.value(metadata i64* %1, metadata !1059, metadata !DIExpression(DW_OP_deref)), !dbg !1061
  call void @llvm.dbg.value(metadata i64* %1, metadata !1055, metadata !DIExpression(DW_OP_deref)), !dbg !1056
  call void @llvm.dbg.value(metadata i8 %call.139.fca.1.extract, metadata !1057, metadata !DIExpression()), !dbg !1058
  %ld.212.fca.0.insert = insertvalue { i64, i8 } undef, i64 %.ld.879, 0, !dbg !1066
  %ld.212.fca.1.insert = insertvalue { i64, i8 } %ld.212.fca.0.insert, i8 %call.139.fca.1.extract, 1, !dbg !1066
  ret { i64, i8 } %ld.212.fca.1.insert, !dbg !1066

else.151:                                         ; preds = %else.150
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1055, metadata !DIExpression()), !dbg !1056
  call void @llvm.dbg.value(metadata i8 0, metadata !1057, metadata !DIExpression()), !dbg !1058
  ret { i64, i8 } zeroinitializer, !dbg !1067
}

define %Directory.0* @command_line_arguments.Level.Root(i8* nest nocapture readnone %nest.14, %Level.0* readonly %l) #0 !dbg !1068 {
entry:
  call void @llvm.dbg.value(metadata %Level.0* %l, metadata !1071, metadata !DIExpression()), !dbg !1072
  call void @llvm.dbg.value(metadata %Directory.0* null, metadata !1073, metadata !DIExpression()), !dbg !1074
  %icmp.105 = icmp eq %Level.0* %l, null, !dbg !1075
  br i1 %icmp.105, label %then.92, label %else.92

then.92:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1075
  unreachable

else.92:                                          ; preds = %entry
  %tmpv.309.sroa.0.0.cast.1242.sroa_idx = getelementptr inbounds %Level.0, %Level.0* %l, i64 0, i32 0, i32 0
  %tmpv.309.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }** %tmpv.309.sroa.0.0.cast.1242.sroa_idx, align 8
  %tmpv.309.sroa.3.0.cast.1242.sroa_idx1 = getelementptr inbounds %Level.0, %Level.0* %l, i64 0, i32 0, i32 1
  %0 = bitcast i8** %tmpv.309.sroa.3.0.cast.1242.sroa_idx1 to %Directory.0**
  %tmpv.309.sroa.3.0.copyload3 = load %Directory.0*, %Directory.0** %0, align 8
  %icmp.106 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %tmpv.309.sroa.0.0.copyload, null, !dbg !1076
  br i1 %icmp.106, label %fallthrough.93, label %else.93

fallthrough.93:                                   ; preds = %else.92, %else.93
  %tmpv.311.0 = phi %_type.0* [ %.field.ld.33, %else.93 ], [ null, %else.92 ]
  call void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, i64 0, i32 0), %_type.0* %tmpv.311.0, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i64 0, i32 0)), !dbg !1076
  call void @llvm.dbg.value(metadata %Directory.0* %tmpv.309.sroa.3.0.copyload3, metadata !1073, metadata !DIExpression()), !dbg !1074
  ret %Directory.0* %tmpv.309.sroa.3.0.copyload3, !dbg !1077

else.93:                                          ; preds = %else.92
  %field.249 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %tmpv.309.sroa.0.0.copyload, i64 0, i32 0, !dbg !1076
  %.field.ld.33 = load %_type.0*, %_type.0** %field.249, align 8, !dbg !1076
  br label %fallthrough.93
}

define void @command_line_arguments.Level.visit(i8* nest nocapture readnone %nest.16, %Level.0* %l, i64 %node.chunk0, i64 %node.chunk1) #0 !dbg !1078 {
entry:
  %tmp.39.i = alloca %IPST.2, align 8
  %tmp.36.i = alloca %IPST.2, align 8
  %sret.actual.44.i = alloca %IPST.6, align 8
  %tmpv.312.i = alloca %IPST.2, align 8
  %tmpv.315.i = alloca [1 x { %_type.0*, i8* }], align 8
  %name1.i = alloca { i8*, i64 }, align 8
  %tmpv.325.i = alloca { i8*, i64 }, align 8
  %tmpv.328.i = alloca [1 x { %_type.0*, i8* }], align 8
  %tmpv.332.i = alloca %IPST.5, align 8
  %sret.actual.49.i = alloca %IPST.6, align 8
  %tmp.49 = alloca %IPST.5, align 8
  %tmp.48 = alloca %IPST.5, align 8
  %tmp.46 = alloca %IPST.12, align 8
  %tmp.45 = alloca %IPST.2, align 8
  %tmp.43 = alloca %IPST.2, align 8
  %tmpv.346 = alloca { i8*, i64 }, align 8
  %tmpv.347 = alloca [1 x { %_type.0*, i8* }], align 8
  %tmpv.353 = alloca %IPST.4, align 8
  %tmpv.364 = alloca { i8*, i64 }, align 8
  %tmpv.374 = alloca { i8*, i64 }, align 8
  %tmpv.375 = alloca [1 x { %_type.0*, i8* }], align 8
  %tmpv.377 = alloca [1 x %Node.0], align 8
  %tmpv.383 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.386 = alloca [1 x { i8*, i64 }], align 8
  %tmpv.391 = alloca { i8*, i64 }, align 8
  %tmpv.392 = alloca %Entity.0, align 8
  %value = alloca { %_type.0*, i8* }, align 8
  %tmpv.401 = alloca %IPST.4, align 8
  call void @llvm.dbg.value(metadata %Level.0* %l, metadata !1081, metadata !DIExpression()), !dbg !1082
  call void @llvm.dbg.value(metadata i64 %node.chunk0, metadata !1083, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1084
  call void @llvm.dbg.value(metadata i64 %node.chunk1, metadata !1083, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1084
  %0 = inttoptr i64 %node.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, !dbg !1085
  %field.297 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %0, i64 0, i32 9, !dbg !1085
  %.field.ld.41 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.297, align 8, !dbg !1085
  %1 = inttoptr i64 %node.chunk1 to i8*, !dbg !1085
  %call.89 = call { i64, i64 } %.field.ld.41(i8* nest undef, i8* %1), !dbg !1085
  %call.89.fca.0.extract = extractvalue { i64, i64 } %call.89, 0, !dbg !1085
  %call.89.fca.1.extract = extractvalue { i64, i64 } %call.89, 1, !dbg !1085
  %command_line_arguments.PkgLogger.field.ld.6 = load { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 0), align 8, !dbg !1086
  %field.302 = getelementptr inbounds { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }* %command_line_arguments.PkgLogger.field.ld.6, i64 0, i32 1, !dbg !1086
  %.field.ld.42 = load void (i8*, i8*, i64, i64, %IPST.2*)*, void (i8*, i8*, i64, i64, %IPST.2*)** %field.302, align 8, !dbg !1086
  %command_line_arguments.PkgLogger.field.ld.7 = load i8*, i8** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 1), align 8, !dbg !1086
  %call.90 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7interface.4.5, i64 0, i32 0)), !dbg !1086
  %call.91 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1086
  %tmpv.343.sroa.0.0.cast.1344.sroa_cast = bitcast { i8*, i64 }* %tmpv.346 to i64*
  store i64 %call.89.fca.0.extract, i64* %tmpv.343.sroa.0.0.cast.1344.sroa_cast, align 8
  %tmpv.343.sroa.2.0.cast.1344.sroa_idx82 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.346, i64 0, i32 1
  store i64 %call.89.fca.1.extract, i64* %tmpv.343.sroa.2.0.cast.1344.sroa_idx82, align 8
  %cast.1347 = bitcast { i8*, i64 }* %tmpv.346 to i8*, !dbg !1086
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.91, i8* nonnull %cast.1347), !dbg !1086
  %tmp.42.sroa.0.0.cast.1349.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.347, i64 0, i64 0, i32 0, !dbg !1086
  store %_type.0* @string..d, %_type.0** %tmp.42.sroa.0.0.cast.1349.sroa_idx, align 8, !dbg !1086
  %tmp.42.sroa.2.0.cast.1349.sroa_idx84 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.347, i64 0, i64 0, i32 1, !dbg !1086
  store i8* %call.91, i8** %tmp.42.sroa.2.0.cast.1349.sroa_idx84, align 8, !dbg !1086
  %cast.1353 = bitcast [1 x { %_type.0*, i8* }]* %tmpv.347 to i8*, !dbg !1086
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7interface.4.5, i64 0, i32 0), i8* %call.90, i8* nonnull %cast.1353), !dbg !1086
  %2 = bitcast %IPST.2* %tmp.43 to i8**, !dbg !1086
  store i8* %call.90, i8** %2, align 8, !dbg !1086
  %field.305 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.43, i64 0, i32 1, !dbg !1086
  store i64 1, i64* %field.305, align 8, !dbg !1086
  %field.306 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.43, i64 0, i32 2, !dbg !1086
  store i64 1, i64* %field.306, align 8, !dbg !1086
  call void %.field.ld.42(i8* nest undef, i8* %command_line_arguments.PkgLogger.field.ld.7, i64 ptrtoint ([16 x i8]* @const.227 to i64), i64 15, %IPST.2* byval nonnull %tmp.43), !dbg !1086
  %field.308 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %0, i64 0, i32 8, !dbg !1087
  %.field.ld.43 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.308, align 8, !dbg !1087
  %call.92 = call { i64, i64 } %.field.ld.43(i8* nest undef, i8* %1), !dbg !1087
  %call.92.fca.0.extract = extractvalue { i64, i64 } %call.92, 0, !dbg !1087
  %call.92.fca.1.extract = extractvalue { i64, i64 } %call.92, 1, !dbg !1087
  %3 = inttoptr i64 %call.92.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !1089
  %field.311 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %3, i64 0, i32 5, !dbg !1089
  %.field.ld.44 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)** %field.311, align 8, !dbg !1089
  %4 = inttoptr i64 %call.92.fca.1.extract to i8*, !dbg !1089
  %call.93 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.44(i8* nest undef, i8* %4), !dbg !1089
  %cast.1367 = bitcast %IPST.4* %tmpv.353 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1367, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.93, i8* nonnull %cast.1367), !dbg !1090
  %field.385 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.353, i64 0, i32 0, !dbg !1090
  %tmpv.353.field.ld.2125 = load { i8*, i64 }*, { i8*, i64 }** %field.385, align 8, !dbg !1090
  %icmp.145126 = icmp eq { i8*, i64 }* %tmpv.353.field.ld.2125, null, !dbg !1090
  br i1 %icmp.145126, label %else.123, label %then.123.lr.ph

then.123.lr.ph:                                   ; preds = %entry
  %field.314 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.353, i64 0, i32 1
  %5 = bitcast %IPST.2* %tmp.39.i to i8*
  %6 = bitcast %IPST.2* %tmp.36.i to i8*
  %7 = bitcast %IPST.6* %sret.actual.44.i to i8*
  %8 = bitcast %IPST.2* %tmpv.312.i to i8*
  %9 = bitcast [1 x { %_type.0*, i8* }]* %tmpv.315.i to i8*
  %10 = bitcast { i8*, i64 }* %tmpv.325.i to i8*
  %11 = bitcast [1 x { %_type.0*, i8* }]* %tmpv.328.i to i8*
  %12 = bitcast %IPST.5* %tmpv.332.i to i8*
  %13 = bitcast %IPST.6* %sret.actual.49.i to i8*
  %ss.i.sroa.0.0.cast.1250.i.sroa_cast = bitcast %IPST.6* %sret.actual.44.i to { i8*, i64 }**
  %ss.i.sroa.6.0.cast.1250.i.sroa_idx94 = getelementptr inbounds %IPST.6, %IPST.6* %sret.actual.44.i, i64 0, i32 1
  %ss.i.sroa.7.0.cast.1250.i.sroa_idx100 = getelementptr inbounds %IPST.6, %IPST.6* %sret.actual.44.i, i64 0, i32 2
  %vv.sroa.0.0.cast.1259.sroa_idx.i = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.312.i, i64 0, i32 0
  %vv.sroa.5.0.cast.1259.sroa_idx40.i = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.312.i, i64 0, i32 1
  %14 = bitcast { i8*, i64 }* %name1.i to i8*
  %field.284.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.332.i, i64 0, i32 1
  %field.285.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.332.i, i64 0, i32 2
  %cast.1314.i = bitcast %IPST.5* %tmpv.332.i to %IPST.6*
  %tmpv.338.sroa.0.0.cast.1319.sroa_idx.i = bitcast %IPST.6* %sret.actual.49.i to { i8*, i64 }**
  %15 = getelementptr inbounds %IPST.6, %IPST.6* %sret.actual.49.i, i64 0, i32 1
  %16 = getelementptr inbounds %IPST.6, %IPST.6* %sret.actual.49.i, i64 0, i32 2
  %tmpv.338.sroa.0.0.cast.1322.sroa_idx.i = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.332.i, i64 0, i32 0
  %17 = bitcast { %_type.0*, i8* }* %value to i8*
  %cast.1522 = bitcast %IPST.4* %tmpv.401 to i8*
  %field.384 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.401, i64 0, i32 0
  %name.sroa.0.0.cast.1408.sroa_cast = bitcast { i8*, i64 }* %tmpv.364 to i64*
  %name.sroa.6.0.cast.1408.sroa_idx49 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.364, i64 0, i32 1
  %icmp.133 = icmp eq %Level.0* %l, null
  %field.318 = getelementptr inbounds %Level.0, %Level.0* %l, i64 0, i32 1
  %cast.1414 = bitcast { i8*, i64 }* %tmpv.364 to i8*
  %tmpv.371.sroa.0.0.cast.1427.sroa_cast = bitcast { i8*, i64 }* %tmpv.374 to i64*
  %tmpv.371.sroa.2.0.cast.1427.sroa_idx26 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.374, i64 0, i32 1
  %cast.1430 = bitcast { i8*, i64 }* %tmpv.374 to i8*
  %tmp.44.sroa.0.0.cast.1432.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.375, i64 0, i64 0, i32 0
  %tmp.44.sroa.2.0.cast.1432.sroa_idx85 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.375, i64 0, i64 0, i32 1
  %cast.1436 = bitcast [1 x { %_type.0*, i8* }]* %tmpv.375 to i8*
  %18 = bitcast %IPST.2* %tmp.45 to i8**
  %field.330 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.45, i64 0, i32 1
  %field.331 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.45, i64 0, i32 2
  %node.addr.sroa.0.0.cast.1444.sroa_cast = bitcast [1 x %Node.0]* %tmpv.377 to i64*
  %node.addr.sroa.7.0.cast.1444.sroa_idx83 = getelementptr inbounds [1 x %Node.0], [1 x %Node.0]* %tmpv.377, i64 0, i64 0, i32 1
  %node.addr.sroa.7.0.cast.1444.sroa_cast = bitcast i8** %node.addr.sroa.7.0.cast.1444.sroa_idx83 to i64*
  %cast.1448 = bitcast [1 x %Node.0]* %tmpv.377 to i8*
  %19 = bitcast %IPST.12* %tmp.46 to i8**
  %field.336 = getelementptr inbounds %IPST.12, %IPST.12* %tmp.46, i64 0, i32 1
  %field.337 = getelementptr inbounds %IPST.12, %IPST.12* %tmp.46, i64 0, i32 2
  %field.339 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %0, i64 0, i32 2
  %field.351 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %0, i64 0, i32 12
  %tmpv.381.sroa.0.0.cast.1467.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.383 to i64*
  %tmpv.381.sroa.2.0.cast.1467.sroa_idx23 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.383, i64 0, i64 0, i32 1
  %tmpv.382.sroa.0.0.cast.1469.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.383, i64 0, i64 1
  %tmpv.382.sroa.0.0.cast.1469.sroa_cast = bitcast { i8*, i64 }* %tmpv.382.sroa.0.0.cast.1469.sroa_idx to i64*
  %tmpv.382.sroa.2.0.cast.1469.sroa_idx21 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.383, i64 0, i64 1, i32 1
  %field.356 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.48, i64 0, i32 0
  %cast.1471 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.383, i64 0, i64 0
  %field.357 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.48, i64 0, i32 1
  %field.358 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.48, i64 0, i32 2
  %tmpv.384.sroa.0.0.cast.1479.sroa_cast = bitcast [1 x { i8*, i64 }]* %tmpv.386 to i64*
  %tmpv.384.sroa.2.0.cast.1479.sroa_idx19 = getelementptr inbounds [1 x { i8*, i64 }], [1 x { i8*, i64 }]* %tmpv.386, i64 0, i64 0, i32 1
  %cast.1483 = bitcast [1 x { i8*, i64 }]* %tmpv.386 to i8*
  %20 = bitcast %IPST.5* %tmp.49 to i8**
  %field.363 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.49, i64 0, i32 1
  %field.364 = getelementptr inbounds %IPST.5, %IPST.5* %tmp.49, i64 0, i32 2
  %tmpv.390.sroa.0.0.cast.1492.sroa_cast = bitcast { i8*, i64 }* %tmpv.391 to i64*
  %tmpv.390.sroa.2.0.cast.1492.sroa_idx16 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.391, i64 0, i32 1
  %n.sroa.0.0.cast.1494.sroa_idx = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.392, i64 0, i32 0
  %n.sroa.14.0.cast.1494.sroa_idx32 = getelementptr inbounds %Entity.0, %Entity.0* %tmpv.392, i64 0, i32 1
  %field.368 = getelementptr inbounds %Level.0, %Level.0* %l, i64 0, i32 2
  %cast.1498 = bitcast { i8*, i64 }* %tmpv.391 to i8*
  %cast.1505 = bitcast %Entity.0* %tmpv.392 to i8*
  %field.376 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.401, i64 0, i32 1
  %21 = bitcast { %_type.0*, i8* }** %field.376 to i8**
  %value146 = bitcast { %_type.0*, i8* }* %value to i8*
  br label %then.123

label.2:                                          ; preds = %then.123
  %call.96 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.94.fca.0.extract, i64 %call.94.fca.1.extract, i64 ptrtoint ([9 x i8]* @const.231 to i64), i64 8), !dbg !1091
  %icmp.129 = icmp eq i8 %call.96, 1, !dbg !1091
  br i1 %icmp.129, label %label.3, label %label.4

label.3:                                          ; preds = %label.2, %then.123
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12), !dbg !1092
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13), !dbg !1092
  call void @llvm.dbg.value(metadata i64 %tmpv.352.sroa.0.0.copyload69, metadata !1098, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1092
  call void @llvm.dbg.value(metadata i64 %tmpv.352.sroa.3.0.copyload71, metadata !1098, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1092
  call void @runtime.makeslice(%IPST.6* nonnull sret %sret.actual.44.i, i8* nest undef, %_type.0* nonnull @string..d, i64 0, i64 0), !dbg !1099
  %ss.i.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %ss.i.sroa.0.0.cast.1250.i.sroa_cast, align 8
  %ss.i.sroa.6.0.copyload = load i64, i64* %ss.i.sroa.6.0.cast.1250.i.sroa_idx94, align 8
  %ss.i.sroa.7.0.copyload = load i64, i64* %ss.i.sroa.7.0.cast.1250.i.sroa_idx100, align 8
  call void @llvm.dbg.value(metadata i8 0, metadata !1101, metadata !DIExpression()), !dbg !1102
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false)
  %call.83.i = call i8 @runtime.ifaceE2T2(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7interface.4.5, i64 0, i32 0), i64 %tmpv.352.sroa.0.0.copyload69, i64 %tmpv.352.sroa.3.0.copyload71, i8* nonnull %8), !dbg !1103
  call void @llvm.dbg.value(metadata i8 %call.83.i, metadata !1101, metadata !DIExpression()), !dbg !1102
  %vv.sroa.0.0.copyload38.i = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %vv.sroa.0.0.cast.1259.sroa_idx.i, align 8, !dbg !1103
  call void @llvm.dbg.value(metadata { %_type.0*, i8* }* %vv.sroa.0.0.copyload38.i, metadata !1104, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1102
  %vv.sroa.5.0.copyload41.i = load i64, i64* %vv.sroa.5.0.cast.1259.sroa_idx40.i, align 8, !dbg !1103
  call void @llvm.dbg.value(metadata i64 %vv.sroa.5.0.copyload41.i, metadata !1104, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1102
  call void @llvm.dbg.value(metadata %IPST.2* %tmpv.312.i, metadata !1104, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !1102
  %icmp.109.i = icmp eq i8 %call.83.i, 0, !dbg !1105
  br i1 %icmp.109.i, label %then.94.i, label %label.0.preheader.i

label.0.preheader.i:                              ; preds = %label.3
  %icmp.1269.i = icmp sgt i64 %vv.sroa.5.0.copyload41.i, 0, !dbg !1106
  br i1 %icmp.1269.i, label %else.97.i, label %command_line_arguments.parseStringSlice.exit

then.94.i:                                        ; preds = %label.3
  %call.84.i = call { i64, i64 } @reflect.TypeOf(i8* nest undef, i64 %tmpv.352.sroa.0.0.copyload69, i64 %tmpv.352.sroa.3.0.copyload71), !dbg !1108
  %call.84.fca.0.extract.i = extractvalue { i64, i64 } %call.84.i, 0, !dbg !1108
  %call.84.fca.1.extract.i = extractvalue { i64, i64 } %call.84.i, 1, !dbg !1108
  %icmp.107.i = icmp eq i64 %call.84.fca.0.extract.i, 0, !dbg !1108
  br i1 %icmp.107.i, label %fallthrough.95.i, label %else.95.i

fallthrough.95.i:                                 ; preds = %else.95.i, %then.94.i
  %tmpv.316.0.i = phi %_type.0* [ %.field.ld.34.i, %else.95.i ], [ null, %then.94.i ]
  %22 = inttoptr i64 %call.84.fca.1.extract.i to i8*, !dbg !1109
  %tmp.35.sroa.0.0.cast.1266.sroa_idx.i = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.315.i, i64 0, i64 0, i32 0, !dbg !1109
  store %_type.0* %tmpv.316.0.i, %_type.0** %tmp.35.sroa.0.0.cast.1266.sroa_idx.i, align 8, !dbg !1109
  %tmp.35.sroa.2.0.cast.1266.sroa_idx52.i = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.315.i, i64 0, i64 0, i32 1, !dbg !1109
  store i8* %22, i8** %tmp.35.sroa.2.0.cast.1266.sroa_idx52.i, align 8, !dbg !1109
  %field.257.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.36.i, i64 0, i32 0, !dbg !1109
  %cast.1269.i = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.315.i, i64 0, i64 0, !dbg !1109
  store { %_type.0*, i8* }* %cast.1269.i, { %_type.0*, i8* }** %field.257.i, align 8, !dbg !1109
  %field.258.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.36.i, i64 0, i32 1, !dbg !1109
  store i64 1, i64* %field.258.i, align 8, !dbg !1109
  %field.259.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.36.i, i64 0, i32 2, !dbg !1109
  store i64 1, i64* %field.259.i, align 8, !dbg !1109
  %call.85.i = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([43 x i8]* @const.222 to i64), i64 42, %IPST.2* byval nonnull %tmp.36.i), !dbg !1109
  %call.85.fca.0.extract.i = extractvalue { i64, i64 } %call.85.i, 0, !dbg !1109
  %call.85.fca.1.extract.i = extractvalue { i64, i64 } %call.85.i, 1, !dbg !1109
  %icmp.108.i = icmp eq i64 %call.85.fca.0.extract.i, 0, !dbg !1109
  br i1 %icmp.108.i, label %fallthrough.96.i, label %else.96.i

else.95.i:                                        ; preds = %then.94.i
  %23 = inttoptr i64 %call.84.fca.0.extract.i to { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, !dbg !1108
  %field.253.i = getelementptr inbounds { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }, { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }* %23, i64 0, i32 0, !dbg !1108
  %.field.ld.34.i = load %_type.0*, %_type.0** %field.253.i, align 8, !dbg !1108
  br label %fallthrough.95.i

fallthrough.96.i:                                 ; preds = %else.96.i, %fallthrough.95.i
  %tmpv.318.0.i = phi i64 [ %.field.ld.353.i, %else.96.i ], [ 0, %fallthrough.95.i ]
  call void @runtime.gopanic(i8* nest undef, i64 %tmpv.318.0.i, i64 %call.85.fca.1.extract.i), !dbg !1110
  unreachable

else.96.i:                                        ; preds = %fallthrough.95.i
  %24 = inttoptr i64 %call.85.fca.0.extract.i to i64*, !dbg !1109
  %.field.ld.353.i = load i64, i64* %24, align 8, !dbg !1109
  br label %fallthrough.96.i

else.97.i:                                        ; preds = %label.0.preheader.i, %fallthrough.105.i
  %ss.i.sroa.0.0 = phi { i8*, i64 }* [ %ss.i.sroa.0.0.copyload93, %fallthrough.105.i ], [ %ss.i.sroa.0.0.copyload, %label.0.preheader.i ]
  %ss.i.sroa.6.0 = phi i64 [ %ss.i.sroa.6.0.copyload99, %fallthrough.105.i ], [ %ss.i.sroa.6.0.copyload, %label.0.preheader.i ]
  %ss.i.sroa.7.0 = phi i64 [ %ss.i.sroa.7.0.copyload105, %fallthrough.105.i ], [ %ss.i.sroa.7.0.copyload, %label.0.preheader.i ]
  %tmpv.319.010.i = phi i64 [ %add.7.i, %fallthrough.105.i ], [ 0, %label.0.preheader.i ]
  %ptroff.8.i = getelementptr { %_type.0*, i8* }, { %_type.0*, i8* }* %vv.sroa.0.0.copyload38.i, i64 %tmpv.319.010.i, !dbg !1106
  %tmpv.320.sroa.0.0.cast.1283.sroa_cast.i = bitcast { %_type.0*, i8* }* %ptroff.8.i to i64*, !dbg !1106
  %tmpv.320.sroa.0.0.copyload33.i = load i64, i64* %tmpv.320.sroa.0.0.cast.1283.sroa_cast.i, align 8, !dbg !1106
  %tmpv.320.sroa.3.0.cast.1283.sroa_idx34.i = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %vv.sroa.0.0.copyload38.i, i64 %tmpv.319.010.i, i32 1, !dbg !1106
  %tmpv.320.sroa.3.0.cast.1283.sroa_cast.i = bitcast i8** %tmpv.320.sroa.3.0.cast.1283.sroa_idx34.i to i64*, !dbg !1106
  %tmpv.320.sroa.3.0.copyload35.i = load i64, i64* %tmpv.320.sroa.3.0.cast.1283.sroa_cast.i, align 8, !dbg !1106
  call void @llvm.dbg.value(metadata i64 %tmpv.320.sroa.0.0.copyload33.i, metadata !1111, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1112
  call void @llvm.dbg.value(metadata i64 %tmpv.320.sroa.3.0.copyload35.i, metadata !1111, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1112
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1113, metadata !DIExpression()), !dbg !1115
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false)
  %call.86.i = call i8 @runtime.ifaceE2T2(i8* nest undef, %_type.0* nonnull @string..d, i64 %tmpv.320.sroa.0.0.copyload33.i, i64 %tmpv.320.sroa.3.0.copyload35.i, i8* nonnull %10), !dbg !1116
  call void @llvm.dbg.value(metadata i8 %call.86.i, metadata !1113, metadata !DIExpression()), !dbg !1115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %10, i64 16, i1 false), !dbg !1116
  %icmp.114.i = icmp eq i8 %call.86.i, 0, !dbg !1117
  br i1 %icmp.114.i, label %then.98.i, label %else.98.i

then.98.i:                                        ; preds = %else.97.i
  %call.87.i = call { i64, i64 } @reflect.TypeOf(i8* nest undef, i64 %tmpv.352.sroa.0.0.copyload69, i64 %tmpv.352.sroa.3.0.copyload71), !dbg !1118
  %call.87.fca.0.extract.i = extractvalue { i64, i64 } %call.87.i, 0, !dbg !1118
  %call.87.fca.1.extract.i = extractvalue { i64, i64 } %call.87.i, 1, !dbg !1118
  %icmp.112.i = icmp eq i64 %call.87.fca.0.extract.i, 0, !dbg !1118
  br i1 %icmp.112.i, label %fallthrough.99.i, label %else.99.i

else.98.i:                                        ; preds = %else.97.i
  store { i8*, i64 }* %ss.i.sroa.0.0, { i8*, i64 }** %tmpv.338.sroa.0.0.cast.1322.sroa_idx.i, align 8
  store i64 %ss.i.sroa.6.0, i64* %field.284.i, align 8
  store i64 %ss.i.sroa.7.0, i64* %field.285.i, align 8
  %add.5.i = add i64 %ss.i.sroa.6.0, 1, !dbg !1119
  %icmp.115.i = icmp ugt i64 %add.5.i, %ss.i.sroa.7.0, !dbg !1119
  br i1 %icmp.115.i, label %then.101.i, label %else.101.i

fallthrough.99.i:                                 ; preds = %else.99.i, %then.98.i
  %tmpv.329.0.i = phi %_type.0* [ %.field.ld.36.i, %else.99.i ], [ null, %then.98.i ]
  %25 = inttoptr i64 %call.87.fca.1.extract.i to i8*, !dbg !1120
  %tmp.38.sroa.0.0.cast.1302.sroa_idx.i = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.328.i, i64 0, i64 0, i32 0, !dbg !1120
  store %_type.0* %tmpv.329.0.i, %_type.0** %tmp.38.sroa.0.0.cast.1302.sroa_idx.i, align 8, !dbg !1120
  %tmp.38.sroa.2.0.cast.1302.sroa_idx53.i = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.328.i, i64 0, i64 0, i32 1, !dbg !1120
  store i8* %25, i8** %tmp.38.sroa.2.0.cast.1302.sroa_idx53.i, align 8, !dbg !1120
  %field.275.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.39.i, i64 0, i32 0, !dbg !1120
  %cast.1305.i = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.328.i, i64 0, i64 0, !dbg !1120
  store { %_type.0*, i8* }* %cast.1305.i, { %_type.0*, i8* }** %field.275.i, align 8, !dbg !1120
  %field.276.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.39.i, i64 0, i32 1, !dbg !1120
  store i64 1, i64* %field.276.i, align 8, !dbg !1120
  %field.277.i = getelementptr inbounds %IPST.2, %IPST.2* %tmp.39.i, i64 0, i32 2, !dbg !1120
  store i64 1, i64* %field.277.i, align 8, !dbg !1120
  %call.88.i = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([36 x i8]* @const.224 to i64), i64 35, %IPST.2* byval nonnull %tmp.39.i), !dbg !1120
  %call.88.fca.0.extract.i = extractvalue { i64, i64 } %call.88.i, 0, !dbg !1120
  %call.88.fca.1.extract.i = extractvalue { i64, i64 } %call.88.i, 1, !dbg !1120
  %icmp.113.i = icmp eq i64 %call.88.fca.0.extract.i, 0, !dbg !1120
  br i1 %icmp.113.i, label %fallthrough.100.i, label %else.100.i

else.99.i:                                        ; preds = %then.98.i
  %26 = inttoptr i64 %call.87.fca.0.extract.i to { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, !dbg !1118
  %field.271.i = getelementptr inbounds { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }, { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }* %26, i64 0, i32 0, !dbg !1118
  %.field.ld.36.i = load %_type.0*, %_type.0** %field.271.i, align 8, !dbg !1118
  br label %fallthrough.99.i

fallthrough.100.i:                                ; preds = %else.100.i, %fallthrough.99.i
  %tmpv.331.0.i = phi i64 [ %.field.ld.372.i, %else.100.i ], [ 0, %fallthrough.99.i ]
  call void @runtime.gopanic(i8* nest undef, i64 %tmpv.331.0.i, i64 %call.88.fca.1.extract.i), !dbg !1121
  unreachable

else.100.i:                                       ; preds = %fallthrough.99.i
  %27 = inttoptr i64 %call.88.fca.0.extract.i to i64*, !dbg !1120
  %.field.ld.372.i = load i64, i64* %27, align 8, !dbg !1120
  br label %fallthrough.100.i

then.101.i:                                       ; preds = %else.98.i
  call void @runtime.growslice(%IPST.6* nonnull sret %sret.actual.49.i, i8* nest undef, %_type.0* nonnull @string..d, %IPST.6* byval nonnull %cast.1314.i, i64 %add.5.i), !dbg !1119
  %tmpv.338.sroa.0.0.copyload.i = load { i8*, i64 }*, { i8*, i64 }** %tmpv.338.sroa.0.0.cast.1319.sroa_idx.i, align 8
  %tmpv.338.sroa.3.0.copyload.i = load i64, i64* %15, align 8
  %tmpv.338.sroa.4.0.copyload.i = load i64, i64* %16, align 8
  br label %fallthrough.101.i

fallthrough.101.i:                                ; preds = %else.101.i, %then.101.i
  %tmpv.338.sroa.0.0.i = phi { i8*, i64 }* [ %tmpv.338.sroa.0.0.copyload.i, %then.101.i ], [ %ss.i.sroa.0.0, %else.101.i ]
  %tmpv.338.sroa.3.0.i = phi i64 [ %tmpv.338.sroa.3.0.copyload.i, %then.101.i ], [ %add.5.i, %else.101.i ]
  %tmpv.338.sroa.4.0.i = phi i64 [ %tmpv.338.sroa.4.0.copyload.i, %then.101.i ], [ %ss.i.sroa.7.0, %else.101.i ]
  store { i8*, i64 }* %tmpv.338.sroa.0.0.i, { i8*, i64 }** %tmpv.338.sroa.0.0.cast.1322.sroa_idx.i, align 8, !dbg !1119
  store i64 %tmpv.338.sroa.3.0.i, i64* %field.284.i, align 8, !dbg !1119
  store i64 %tmpv.338.sroa.4.0.i, i64* %field.285.i, align 8, !dbg !1119
  %icmp.122.i = icmp sge i64 %ss.i.sroa.6.0, %tmpv.338.sroa.3.0.i, !dbg !1119
  %28 = icmp slt i64 %ss.i.sroa.6.0, 0, !dbg !1119
  %ior.119.i = or i1 %28, %icmp.122.i, !dbg !1119
  br i1 %ior.119.i, label %then.104.i, label %else.104.i

else.101.i:                                       ; preds = %else.98.i
  %icmp.117.i = icmp sgt i64 %add.5.i, %ss.i.sroa.7.0, !dbg !1119
  %add.5.lobit4.i = or i64 %add.5.i, %ss.i.sroa.7.0, !dbg !1119
  %29 = icmp slt i64 %add.5.lobit4.i, 0, !dbg !1119
  %30 = or i1 %icmp.117.i, %29, !dbg !1119
  br i1 %30, label %then.102.i, label %fallthrough.101.i

then.102.i:                                       ; preds = %else.101.i
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !1119
  unreachable

then.104.i:                                       ; preds = %fallthrough.101.i
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1119
  unreachable

else.104.i:                                       ; preds = %fallthrough.101.i
  %ptroff.10.i = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.338.sroa.0.0.i, i64 %ss.i.sroa.6.0, !dbg !1119
  %runtime.writeBarrier.ld.10.i = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1119
  %icmp.125.i = icmp eq i32 %runtime.writeBarrier.ld.10.i, 0, !dbg !1119
  br i1 %icmp.125.i, label %then.105.i, label %else.105.i

then.105.i:                                       ; preds = %else.104.i
  %icmp.124.i = icmp eq { i8*, i64 }* %ptroff.10.i, null, !dbg !1119
  br i1 %icmp.124.i, label %then.106.i, label %else.106.i

fallthrough.105.i:                                ; preds = %else.106.i, %else.105.i
  %ss.i.sroa.0.0.copyload93 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.338.sroa.0.0.cast.1322.sroa_idx.i, align 8, !dbg !1122
  %ss.i.sroa.6.0.copyload99 = load i64, i64* %field.284.i, align 8, !dbg !1122
  %ss.i.sroa.7.0.copyload105 = load i64, i64* %field.285.i, align 8, !dbg !1122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  %add.7.i = add nuw nsw i64 %tmpv.319.010.i, 1, !dbg !1106
  %icmp.126.i = icmp slt i64 %add.7.i, %vv.sroa.5.0.copyload41.i, !dbg !1106
  br i1 %icmp.126.i, label %else.97.i, label %command_line_arguments.parseStringSlice.exit

else.105.i:                                       ; preds = %else.104.i
  %cast.1327.i = bitcast { i8*, i64 }* %ptroff.10.i to i8*, !dbg !1119
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.1327.i, i8* nonnull %14), !dbg !1119
  br label %fallthrough.105.i

then.106.i:                                       ; preds = %then.105.i
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1119
  unreachable

else.106.i:                                       ; preds = %then.105.i
  %cast.1325.i = bitcast { i8*, i64 }* %ptroff.10.i to i8*, !dbg !1119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1325.i, i8* nonnull align 8 %14, i64 16, i1 false), !dbg !1119
  br label %fallthrough.105.i

command_line_arguments.parseStringSlice.exit:     ; preds = %fallthrough.105.i, %label.0.preheader.i
  %ss.i.sroa.0.1 = phi { i8*, i64 }* [ %ss.i.sroa.0.0.copyload, %label.0.preheader.i ], [ %ss.i.sroa.0.0.copyload93, %fallthrough.105.i ]
  %ss.i.sroa.6.1 = phi i64 [ %ss.i.sroa.6.0.copyload, %label.0.preheader.i ], [ %ss.i.sroa.6.0.copyload99, %fallthrough.105.i ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12), !dbg !1123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13), !dbg !1123
  %icmp.139123 = icmp sgt i64 %ss.i.sroa.6.1, 0, !dbg !1124
  br i1 %icmp.139123, label %else.110, label %label.7

label.4:                                          ; preds = %label.2
  %call.113 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.94.fca.0.extract, i64 %call.94.fca.1.extract, i64 ptrtoint ([11 x i8]* @const.171 to i64), i64 10), !dbg !1125
  %icmp.140 = icmp eq i8 %call.113, 1, !dbg !1125
  br i1 %icmp.140, label %else.119, label %label.7

else.110:                                         ; preds = %command_line_arguments.parseStringSlice.exit, %fallthrough.112
  %tmpv.358.0124 = phi i64 [ %add.8, %fallthrough.112 ], [ 0, %command_line_arguments.parseStringSlice.exit ]
  %ptroff.11 = getelementptr { i8*, i64 }, { i8*, i64 }* %ss.i.sroa.0.1, i64 %tmpv.358.0124, !dbg !1124
  %tmpv.359.sroa.0.0.cast.1401.sroa_cast = bitcast { i8*, i64 }* %ptroff.11 to i64*, !dbg !1124
  %tmpv.359.sroa.0.0.copyload53 = load i64, i64* %tmpv.359.sroa.0.0.cast.1401.sroa_cast, align 8, !dbg !1124
  %tmpv.359.sroa.3.0.cast.1401.sroa_idx54 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %ss.i.sroa.0.1, i64 %tmpv.358.0124, i32 1, !dbg !1124
  %tmpv.359.sroa.3.0.copyload55 = load i64, i64* %tmpv.359.sroa.3.0.cast.1401.sroa_idx54, align 8, !dbg !1124
  call void @llvm.dbg.value(metadata i64 %tmpv.359.sroa.0.0.copyload53, metadata !1126, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1127
  call void @llvm.dbg.value(metadata i64 %tmpv.359.sroa.3.0.copyload55, metadata !1126, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1127
  call void @llvm.dbg.value(metadata i8 0, metadata !1128, metadata !DIExpression()), !dbg !1130
  store i64 %tmpv.359.sroa.0.0.copyload53, i64* %name.sroa.0.0.cast.1408.sroa_cast, align 8
  store i64 %tmpv.359.sroa.3.0.copyload55, i64* %name.sroa.6.0.cast.1408.sroa_idx49, align 8
  br i1 %icmp.133, label %then.111, label %else.111

then.111:                                         ; preds = %else.110
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1131
  unreachable

else.111:                                         ; preds = %else.110
  %.field.ld.45 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.318, align 8, !dbg !1131
  %call.97 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.45, i8* nonnull %cast.1414), !dbg !1132
  %call.97.fca.0.extract = extractvalue { i64, i8 } %call.97, 0, !dbg !1132
  %call.97.fca.1.extract = extractvalue { i64, i8 } %call.97, 1, !dbg !1132
  %cast.1418 = inttoptr i64 %call.97.fca.0.extract to %Entity.0*, !dbg !1132
  %n.sroa.0.0.cast.1420.sroa_idx = getelementptr inbounds %Entity.0, %Entity.0* %cast.1418, i64 0, i32 0, !dbg !1132
  %n.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }** %n.sroa.0.0.cast.1420.sroa_idx, align 8, !dbg !1132
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, metadata !1133, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1130
  %n.sroa.14.0.cast.1420.sroa_idx30 = getelementptr inbounds %Entity.0, %Entity.0* %cast.1418, i64 0, i32 1, !dbg !1132
  %n.sroa.14.0.copyload = load i8*, i8** %n.sroa.14.0.cast.1420.sroa_idx30, align 8, !dbg !1132
  call void @llvm.dbg.value(metadata i8* %n.sroa.14.0.copyload, metadata !1133, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1130
  call void @llvm.dbg.value(metadata i8 %call.97.fca.1.extract, metadata !1128, metadata !DIExpression()), !dbg !1130
  %31 = and i8 %call.97.fca.1.extract, 1, !dbg !1134
  %trunc.119 = icmp eq i8 %31, 0, !dbg !1134
  br i1 %trunc.119, label %fallthrough.112, label %then.112

then.112:                                         ; preds = %else.111
  %field.322 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, i64 0, i32 9, !dbg !1135
  %.field.ld.46 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.322, align 8, !dbg !1135
  %call.98 = call { i64, i64 } %.field.ld.46(i8* nest undef, i8* %n.sroa.14.0.copyload), !dbg !1135
  %call.98.fca.0.extract = extractvalue { i64, i64 } %call.98, 0, !dbg !1135
  %call.98.fca.1.extract = extractvalue { i64, i64 } %call.98, 1, !dbg !1135
  %command_line_arguments.PkgLogger.field.ld.8 = load { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 0), align 8, !dbg !1136
  %field.327 = getelementptr inbounds { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }* %command_line_arguments.PkgLogger.field.ld.8, i64 0, i32 1, !dbg !1136
  %.field.ld.47 = load void (i8*, i8*, i64, i64, %IPST.2*)*, void (i8*, i8*, i64, i64, %IPST.2*)** %field.327, align 8, !dbg !1136
  %command_line_arguments.PkgLogger.field.ld.9 = load i8*, i8** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 1), align 8, !dbg !1136
  %call.99 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7interface.4.5, i64 0, i32 0)), !dbg !1136
  %call.100 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1136
  store i64 %call.98.fca.0.extract, i64* %tmpv.371.sroa.0.0.cast.1427.sroa_cast, align 8
  store i64 %call.98.fca.1.extract, i64* %tmpv.371.sroa.2.0.cast.1427.sroa_idx26, align 8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.100, i8* nonnull %cast.1430), !dbg !1136
  store %_type.0* @string..d, %_type.0** %tmp.44.sroa.0.0.cast.1432.sroa_idx, align 8, !dbg !1136
  store i8* %call.100, i8** %tmp.44.sroa.2.0.cast.1432.sroa_idx85, align 8, !dbg !1136
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7interface.4.5, i64 0, i32 0), i8* %call.99, i8* nonnull %cast.1436), !dbg !1136
  store i8* %call.99, i8** %18, align 8, !dbg !1136
  store i64 1, i64* %field.330, align 8, !dbg !1136
  store i64 1, i64* %field.331, align 8, !dbg !1136
  call void %.field.ld.47(i8* nest undef, i8* %command_line_arguments.PkgLogger.field.ld.9, i64 ptrtoint ([15 x i8]* @const.233 to i64), i64 14, %IPST.2* byval nonnull %tmp.45), !dbg !1136
  %field.333 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, i64 0, i32 11, !dbg !1137
  %.field.ld.48 = load { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.12*)** %field.333, align 8, !dbg !1137
  %call.101 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, i64 0, i32 0)), !dbg !1137
  store i64 %node.chunk0, i64* %node.addr.sroa.0.0.cast.1444.sroa_cast, align 8, !dbg !1137
  store i64 %node.chunk1, i64* %node.addr.sroa.7.0.cast.1444.sroa_cast, align 8, !dbg !1137
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, i64 0, i32 0), i8* %call.101, i8* nonnull %cast.1448), !dbg !1137
  store i8* %call.101, i8** %19, align 8, !dbg !1137
  store i64 1, i64* %field.336, align 8, !dbg !1137
  store i64 1, i64* %field.337, align 8, !dbg !1137
  %call.102 = call { i64, i64 } %.field.ld.48(i8* nest undef, i8* %n.sroa.14.0.copyload, %IPST.12* byval nonnull %tmp.46), !dbg !1137
  %.field.ld.49 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.339, align 8, !dbg !1138
  %call.103 = call { i64, i64 } %.field.ld.49(i8* nest undef, i8* %1), !dbg !1138
  %call.103.fca.0.extract = extractvalue { i64, i64 } %call.103, 0, !dbg !1138
  %call.103.fca.1.extract = extractvalue { i64, i64 } %call.103, 1, !dbg !1138
  %32 = inttoptr i64 %call.103.fca.0.extract to { %_type.0*, void (i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, void ({ %Node.0, i8 }*, i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !1139
  %field.342 = getelementptr inbounds { %_type.0*, void (i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, void ({ %Node.0, i8 }*, i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void (i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, void ({ %Node.0, i8 }*, i8*, i8*, i64, i64)*, void (%IPST.12*, i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %32, i64 0, i32 7, !dbg !1139
  %.field.ld.51 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.342, align 8, !dbg !1139
  %33 = inttoptr i64 %call.103.fca.1.extract to i8*, !dbg !1139
  %icmp.134 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, null, !dbg !1140
  br i1 %icmp.134, label %fallthrough.113, label %else.113

fallthrough.112:                                  ; preds = %else.111, %fallthrough.117
  %add.8 = add nuw nsw i64 %tmpv.358.0124, 1, !dbg !1124
  %icmp.139 = icmp slt i64 %add.8, %ss.i.sroa.6.1, !dbg !1124
  br i1 %icmp.139, label %else.110, label %label.7

fallthrough.113:                                  ; preds = %then.112, %else.113
  %tmpv.379.0 = phi %_type.0* [ %.field.ld.50, %else.113 ], [ null, %then.112 ]
  %call.104 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i64 0, i32 0), %_type.0* %tmpv.379.0), !dbg !1140
  %34 = ptrtoint i8* %call.104 to i64, !dbg !1140
  %35 = ptrtoint i8* %n.sroa.14.0.copyload to i64, !dbg !1140
  call void %.field.ld.51(i8* nest undef, i8* %33, i64 %tmpv.359.sroa.0.0.copyload53, i64 %tmpv.359.sroa.3.0.copyload55, i64 %34, i64 %35), !dbg !1139
  %.field.ld.52 = load { i64, i64 } (i8*, i8*, %IPST.5*)*, { i64, i64 } (i8*, i8*, %IPST.5*)** %field.351, align 8, !dbg !1141
  %call.105 = call { i64, i64 } %.field.ld.52(i8* nest undef, i8* %1, %IPST.5* byval nonnull @const.226), !dbg !1141
  %call.105.fca.0.extract = extractvalue { i64, i64 } %call.105, 0, !dbg !1141
  %call.105.fca.1.extract = extractvalue { i64, i64 } %call.105, 1, !dbg !1141
  %.field.ld.53 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.322, align 8, !dbg !1142
  %call.106 = call { i64, i64 } %.field.ld.53(i8* nest undef, i8* %n.sroa.14.0.copyload), !dbg !1142
  %call.106.fca.0.extract = extractvalue { i64, i64 } %call.106, 0, !dbg !1142
  %call.106.fca.1.extract = extractvalue { i64, i64 } %call.106, 1, !dbg !1142
  store i64 %call.105.fca.0.extract, i64* %tmpv.381.sroa.0.0.cast.1467.sroa_cast, align 8, !dbg !1143
  store i64 %call.105.fca.1.extract, i64* %tmpv.381.sroa.2.0.cast.1467.sroa_idx23, align 8, !dbg !1143
  store i64 %call.106.fca.0.extract, i64* %tmpv.382.sroa.0.0.cast.1469.sroa_cast, align 8, !dbg !1143
  store i64 %call.106.fca.1.extract, i64* %tmpv.382.sroa.2.0.cast.1469.sroa_idx21, align 8, !dbg !1143
  store { i8*, i64 }* %cast.1471, { i8*, i64 }** %field.356, align 8, !dbg !1143
  store i64 2, i64* %field.357, align 8, !dbg !1143
  store i64 2, i64* %field.358, align 8, !dbg !1143
  %call.107 = call { i64, i64 } @path_filepath.Join(i8* nest undef, %IPST.5* byval nonnull %tmp.48), !dbg !1143
  %call.107.fca.0.extract = extractvalue { i64, i64 } %call.107, 0, !dbg !1143
  %call.107.fca.1.extract = extractvalue { i64, i64 } %call.107, 1, !dbg !1143
  %field.360 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, i64 0, i32 12, !dbg !1144
  %.field.ld.54 = load { i64, i64 } (i8*, i8*, %IPST.5*)*, { i64, i64 } (i8*, i8*, %IPST.5*)** %field.360, align 8, !dbg !1144
  %call.108 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7string, i64 0, i32 0)), !dbg !1144
  store i64 %call.107.fca.0.extract, i64* %tmpv.384.sroa.0.0.cast.1479.sroa_cast, align 8, !dbg !1144
  store i64 %call.107.fca.1.extract, i64* %tmpv.384.sroa.2.0.cast.1479.sroa_idx19, align 8, !dbg !1144
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.1, %ArrayType.1* @type...61x.7string, i64 0, i32 0), i8* %call.108, i8* nonnull %cast.1483), !dbg !1144
  store i8* %call.108, i8** %20, align 8, !dbg !1144
  store i64 1, i64* %field.363, align 8, !dbg !1144
  store i64 1, i64* %field.364, align 8, !dbg !1144
  %call.109 = call { i64, i64 } %.field.ld.54(i8* nest undef, i8* %n.sroa.14.0.copyload, %IPST.5* byval nonnull %tmp.49), !dbg !1144
  %.field.ld.55 = load { i64, i64 } (i8*, i8*, %IPST.5*)*, { i64, i64 } (i8*, i8*, %IPST.5*)** %field.360, align 8, !dbg !1145
  %call.110 = call { i64, i64 } %.field.ld.55(i8* nest undef, i8* %n.sroa.14.0.copyload, %IPST.5* byval nonnull @const.226), !dbg !1145
  %call.110.fca.0.extract = extractvalue { i64, i64 } %call.110, 0, !dbg !1145
  %call.110.fca.1.extract = extractvalue { i64, i64 } %call.110, 1, !dbg !1145
  store i64 %call.110.fca.0.extract, i64* %tmpv.390.sroa.0.0.cast.1492.sroa_cast, align 8
  store i64 %call.110.fca.1.extract, i64* %tmpv.390.sroa.2.0.cast.1492.sroa_idx16, align 8
  store { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }** %n.sroa.0.0.cast.1494.sroa_idx, align 8
  store i8* %n.sroa.14.0.copyload, i8** %n.sroa.14.0.cast.1494.sroa_idx32, align 8
  %.field.ld.56 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.368, align 8, !dbg !1146
  %call.111 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7command_line_arguments.Entity, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.56, i8* nonnull %cast.1498), !dbg !1147
  %runtime.writeBarrier.ld.11 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1147
  %icmp.137 = icmp eq i32 %runtime.writeBarrier.ld.11, 0, !dbg !1147
  br i1 %icmp.137, label %then.115, label %else.115

else.113:                                         ; preds = %then.112
  %field.346 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, i64 0, i32 0, !dbg !1140
  %.field.ld.50 = load %_type.0*, %_type.0** %field.346, align 8, !dbg !1140
  br label %fallthrough.113

then.115:                                         ; preds = %fallthrough.113
  %icmp.136 = icmp eq i8* %call.111, null, !dbg !1147
  br i1 %icmp.136, label %then.116, label %else.116

else.115:                                         ; preds = %fallthrough.113
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments.Entity..d, i64 0, i32 0), i8* %call.111, i8* nonnull %cast.1505), !dbg !1147
  br label %fallthrough.117

then.116:                                         ; preds = %then.115
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1147
  unreachable

else.116:                                         ; preds = %then.115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.111, i8* nonnull align 8 %cast.1505, i64 16, i1 false), !dbg !1147
  br label %fallthrough.117

fallthrough.117:                                  ; preds = %else.115, %else.116
  %field.371 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %n.sroa.0.0.copyload, i64 0, i32 0, !dbg !1148
  %.field.ld.57 = load %_type.0*, %_type.0** %field.371, align 8, !dbg !1148
  %call.112 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, i64 0, i32 0), %_type.0* %.field.ld.57), !dbg !1148
  %36 = ptrtoint i8* %call.112 to i64, !dbg !1148
  call void @command_line_arguments.Level.visit(i8* nest undef, %Level.0* nonnull %l, i64 %36, i64 %35), !dbg !1149
  br label %fallthrough.112

label.7:                                          ; preds = %fallthrough.112, %command_line_arguments.parseStringSlice.exit, %label.4, %else.122
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1367), !dbg !1090
  %tmpv.353.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.385, align 8, !dbg !1090
  %icmp.145 = icmp eq { i8*, i64 }* %tmpv.353.field.ld.2, null, !dbg !1090
  br i1 %icmp.145, label %else.123, label %then.123

else.119:                                         ; preds = %label.4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false)
  %call.114 = call fastcc { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.parseAttrs(i64 %tmpv.352.sroa.0.0.copyload69, i64 %tmpv.352.sroa.3.0.copyload71), !dbg !1150
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.1522, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.114, i8* nonnull %cast.1522), !dbg !1152
  %tmpv.401.field.ld.2120 = load { i8*, i64 }*, { i8*, i64 }** %field.384, align 8, !dbg !1152
  %icmp.144121 = icmp eq { i8*, i64 }* %tmpv.401.field.ld.2120, null, !dbg !1152
  br i1 %icmp.144121, label %else.122, label %then.122

else.120:                                         ; preds = %then.122
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.1522), !dbg !1152
  %tmpv.401.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.384, align 8, !dbg !1152
  %icmp.144 = icmp eq { i8*, i64 }* %tmpv.401.field.ld.2, null, !dbg !1152
  br i1 %icmp.144, label %else.122, label %then.122

else.121:                                         ; preds = %then.122
  %call.115.fca.1.extract = extractvalue { i64, i64 } %call.115, 1, !dbg !1153
  call void @llvm.dbg.value(metadata i64 %call.115.fca.1.extract, metadata !1155, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1156
  %37 = inttoptr i64 %call.115.fca.0.extract to i64*, !dbg !1157
  %.field.ld.5887 = load i64, i64* %37, align 8, !dbg !1157
  call void @runtime.gopanic(i8* nest undef, i64 %.field.ld.5887, i64 %call.115.fca.1.extract), !dbg !1158
  unreachable

then.122:                                         ; preds = %else.119, %else.120
  %tmpv.401.field.ld.2122 = phi { i8*, i64 }* [ %tmpv.401.field.ld.2, %else.120 ], [ %tmpv.401.field.ld.2120, %else.119 ]
  %tmpv.399.sroa.0.0.cast.1527.sroa_cast = bitcast { i8*, i64 }* %tmpv.401.field.ld.2122 to i64*, !dbg !1152
  %tmpv.399.sroa.0.0.copyload12 = load i64, i64* %tmpv.399.sroa.0.0.cast.1527.sroa_cast, align 8, !dbg !1152
  %tmpv.399.sroa.3.0.cast.1527.sroa_idx13 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.401.field.ld.2122, i64 0, i32 1, !dbg !1152
  %tmpv.399.sroa.3.0.copyload14 = load i64, i64* %tmpv.399.sroa.3.0.cast.1527.sroa_idx13, align 8, !dbg !1152
  %tmpv.401.field.ld.186 = load i8*, i8** %21, align 8, !dbg !1152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %value146, i8* align 8 %tmpv.401.field.ld.186, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.399.sroa.0.0.copyload12, metadata !1159, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1160
  call void @llvm.dbg.value(metadata i64 %tmpv.399.sroa.3.0.copyload14, metadata !1159, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1160
  call void @llvm.dbg.value(metadata { %_type.0*, i8* }* %value, metadata !1161, metadata !DIExpression(DW_OP_deref)), !dbg !1160
  %call.115 = call { i64, i64 } @command_line_arguments.Level.AddProperty(i8* nest undef, %Level.0* %l, i64 %node.chunk0, i64 %node.chunk1, i64 %tmpv.399.sroa.0.0.copyload12, i64 %tmpv.399.sroa.3.0.copyload14, { %_type.0*, i8* }* byval nonnull %value), !dbg !1153
  %call.115.fca.0.extract = extractvalue { i64, i64 } %call.115, 0, !dbg !1153
  call void @llvm.dbg.value(metadata i64 %call.115.fca.0.extract, metadata !1155, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1156
  %icmp.143 = icmp eq i64 %call.115.fca.0.extract, 0, !dbg !1162
  br i1 %icmp.143, label %else.120, label %else.121

else.122:                                         ; preds = %else.120, %else.119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  br label %label.7

then.123:                                         ; preds = %then.123.lr.ph, %label.7
  %tmpv.353.field.ld.2127 = phi { i8*, i64 }* [ %tmpv.353.field.ld.2125, %then.123.lr.ph ], [ %tmpv.353.field.ld.2, %label.7 ]
  %tmpv.351.sroa.0.0.cast.1372.sroa_cast = bitcast { i8*, i64 }* %tmpv.353.field.ld.2127 to i64*, !dbg !1090
  %tmpv.351.sroa.0.0.copyload78 = load i64, i64* %tmpv.351.sroa.0.0.cast.1372.sroa_cast, align 8, !dbg !1090
  %tmpv.351.sroa.3.0.cast.1372.sroa_idx79 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.353.field.ld.2127, i64 0, i32 1, !dbg !1090
  %tmpv.351.sroa.3.0.copyload80 = load i64, i64* %tmpv.351.sroa.3.0.cast.1372.sroa_idx79, align 8, !dbg !1090
  %tmpv.353.field.ld.1 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.314, align 8, !dbg !1090
  %tmpv.352.sroa.0.0.cast.1374.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.353.field.ld.1 to i64*, !dbg !1090
  %tmpv.352.sroa.0.0.copyload69 = load i64, i64* %tmpv.352.sroa.0.0.cast.1374.sroa_cast, align 8, !dbg !1090
  %tmpv.352.sroa.3.0.cast.1374.sroa_idx70 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.353.field.ld.1, i64 0, i32 1, !dbg !1090
  %tmpv.352.sroa.3.0.cast.1374.sroa_cast = bitcast i8** %tmpv.352.sroa.3.0.cast.1374.sroa_idx70 to i64*, !dbg !1090
  %tmpv.352.sroa.3.0.copyload71 = load i64, i64* %tmpv.352.sroa.3.0.cast.1374.sroa_cast, align 8, !dbg !1090
  call void @llvm.dbg.value(metadata i64 %tmpv.351.sroa.0.0.copyload78, metadata !1163, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1164
  call void @llvm.dbg.value(metadata i64 %tmpv.351.sroa.3.0.copyload80, metadata !1163, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1164
  call void @llvm.dbg.value(metadata i64 %tmpv.352.sroa.0.0.copyload69, metadata !1165, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1164
  call void @llvm.dbg.value(metadata i64 %tmpv.352.sroa.3.0.copyload71, metadata !1165, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1164
  %call.94 = call { i64, i64 } @strings.ToLower(i8* nest undef, i64 %tmpv.351.sroa.0.0.copyload78, i64 %tmpv.351.sroa.3.0.copyload80), !dbg !1166
  %call.94.fca.0.extract = extractvalue { i64, i64 } %call.94, 0, !dbg !1166
  %call.94.fca.1.extract = extractvalue { i64, i64 } %call.94, 1, !dbg !1166
  %call.95 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.94.fca.0.extract, i64 %call.94.fca.1.extract, i64 ptrtoint ([9 x i8]* @const.229 to i64), i64 8), !dbg !1167
  %icmp.127 = icmp eq i8 %call.95, 1, !dbg !1167
  br i1 %icmp.127, label %label.3, label %label.2

else.123:                                         ; preds = %label.7, %entry
  ret void
}

define %Resources.0* @command_line_arguments.New(i8* nest nocapture readnone %nest.7) #0 !dbg !1168 {
entry:
  %tmpv.27 = alloca %Resources.0, align 8
  call void @llvm.dbg.value(metadata %Resources.0* null, metadata !1171, metadata !DIExpression()), !dbg !1172
  %call.7 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !1173
  %call.8 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !1175
  %call.9 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Resources..d, i64 0, i32 0)), !dbg !1176
  %cast.395 = bitcast i8* %call.9 to %Resources.0*, !dbg !1176
  %field.18 = getelementptr inbounds %Resources.0, %Resources.0* %tmpv.27, i64 0, i32 0, !dbg !1177
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.7, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.18, align 8, !dbg !1177
  %field.19 = getelementptr inbounds %Resources.0, %Resources.0* %tmpv.27, i64 0, i32 1, !dbg !1177
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.8, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.19, align 8, !dbg !1177
  %field.20 = getelementptr inbounds %Resources.0, %Resources.0* %tmpv.27, i64 0, i32 2, !dbg !1177
  store %Level.0* null, %Level.0** %field.20, align 8, !dbg !1177
  %cast.398 = bitcast %Resources.0* %tmpv.27 to i8*, !dbg !1176
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Resources..d, i64 0, i32 0), i8* %call.9, i8* nonnull %cast.398), !dbg !1176
  call void @llvm.dbg.value(metadata %Resources.0* %cast.395, metadata !1178, metadata !DIExpression()), !dbg !1179
  call void @llvm.dbg.value(metadata %Resources.0* %cast.395, metadata !1171, metadata !DIExpression()), !dbg !1172
  ret %Resources.0* %cast.395, !dbg !1180
}

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8*) local_unnamed_addr #0

declare void @runtime.typedmemmove(i8*, %_type.0*, i8*, i8*) local_unnamed_addr #0

define void @command_line_arguments.LoadFromFile({ %Directory.0*, %error.0 }* nocapture sret %sret.formal.1, i8* nest nocapture readnone %nest.8, i64 %folder.chunk0, i64 %folder.chunk1) #0 !dbg !1181 {
entry:
  %sret.actual.1 = alloca { %Directory.0*, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %folder.chunk0, metadata !1184, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1185
  call void @llvm.dbg.value(metadata i64 %folder.chunk1, metadata !1184, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1185
  call void @llvm.dbg.value(metadata %Directory.0* null, metadata !1186, metadata !DIExpression()), !dbg !1187
  %call.10 = call %Resources.0* @command_line_arguments.New(i8* nest undef), !dbg !1188
  call void @llvm.dbg.value(metadata %Resources.0* %call.10, metadata !1190, metadata !DIExpression()), !dbg !1191
  call void @command_line_arguments.Resources.LoadDir({ %Directory.0*, %error.0 }* nonnull sret %sret.actual.1, i8* nest undef, %Resources.0* %call.10, i64 %folder.chunk0, i64 %folder.chunk1), !dbg !1192
  %0 = bitcast { %Directory.0*, %error.0 }* %sret.actual.1 to i64*, !dbg !1192
  %tmpv.28.sroa.0.0.copyload29 = load i64, i64* %0, align 8, !dbg !1192
  %tmpv.28.sroa.3.0.cast.403.sroa_idx = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.actual.1, i64 0, i32 1, !dbg !1192
  %tmpv.28.sroa.3.0.cast.403.sroa_cast = bitcast %error.0* %tmpv.28.sroa.3.0.cast.403.sroa_idx to i8*, !dbg !1192
  call void @llvm.dbg.value(metadata { %Directory.0*, %error.0 }* %sret.actual.1, metadata !1186, metadata !DIExpression(DW_OP_deref)), !dbg !1187
  %1 = bitcast { %Directory.0*, %error.0 }* %sret.formal.1 to i64*, !dbg !1193
  store i64 %tmpv.28.sroa.0.0.copyload29, i64* %1, align 8, !dbg !1193
  %tmp.6.sroa.2.0.cast.412.sroa_idx = getelementptr inbounds { %Directory.0*, %error.0 }, { %Directory.0*, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !1193
  %tmp.6.sroa.2.0.cast.412.sroa_cast = bitcast %error.0* %tmp.6.sroa.2.0.cast.412.sroa_idx to i8*, !dbg !1193
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.6.sroa.2.0.cast.412.sroa_cast, i8* nonnull align 8 %tmpv.28.sroa.3.0.cast.403.sroa_cast, i64 16, i1 false), !dbg !1193
  ret void, !dbg !1193
}

define internal fastcc { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.parseAttrs(i64 %a.chunk0, i64 %a.chunk1) unnamed_addr #0 !dbg !1194 {
entry:
  %tmp.8 = alloca %IPST.2, align 8
  %tmpv.41 = alloca { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, align 8
  %tmpv.44 = alloca [1 x { %_type.0*, i8* }], align 8
  %v = alloca { %_type.0*, i8* }, align 8
  %tmpv.50 = alloca %IPST.3, align 8
  %key = alloca { i8*, i64 }, align 8
  %tmpv.53 = alloca { i8*, i64 }, align 8
  %tmpv.56 = alloca { i8*, i64 }, align 8
  %tmpv.57 = alloca { i8*, i64 }, align 8
  %tmpv.58 = alloca { %_type.0*, i8* }, align 8
  call void @llvm.dbg.value(metadata i64 %a.chunk0, metadata !1197, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1198
  call void @llvm.dbg.value(metadata i64 %a.chunk1, metadata !1197, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1198
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1199, metadata !DIExpression()), !dbg !1200
  %call.12 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !1201
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12, metadata !1203, metadata !DIExpression()), !dbg !1204
  %icmp.14 = icmp eq i64 %a.chunk0, 0, !dbg !1205
  br i1 %icmp.14, label %then.11, label %else.11

then.11:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12, metadata !1199, metadata !DIExpression()), !dbg !1200
  ret { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12, !dbg !1206

else.11:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1207, metadata !DIExpression()), !dbg !1208
  call void @llvm.dbg.value(metadata i8 0, metadata !1209, metadata !DIExpression()), !dbg !1208
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %tmpv.41, align 8
  %cast.457 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %tmpv.41 to i8*, !dbg !1210
  %call.13 = call i8 @runtime.ifaceE2T2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6interface.4.5.7interface.4.5, i64 0, i32 0), i64 %a.chunk0, i64 %a.chunk1, i8* nonnull %cast.457), !dbg !1210
  call void @llvm.dbg.value(metadata i8 %call.13, metadata !1209, metadata !DIExpression()), !dbg !1208
  %icmp.17 = icmp eq i8 %call.13, 0, !dbg !1211
  br i1 %icmp.17, label %then.12, label %else.12

then.12:                                          ; preds = %else.11
  %call.14 = call { i64, i64 } @reflect.TypeOf(i8* nest undef, i64 %a.chunk0, i64 %a.chunk1), !dbg !1212
  %call.14.fca.0.extract = extractvalue { i64, i64 } %call.14, 0, !dbg !1212
  %call.14.fca.1.extract = extractvalue { i64, i64 } %call.14, 1, !dbg !1212
  %icmp.15 = icmp eq i64 %call.14.fca.0.extract, 0, !dbg !1212
  br i1 %icmp.15, label %fallthrough.13, label %else.13

else.12:                                          ; preds = %else.11
  %tmpv.41.ld.0 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %tmpv.41, align 8, !dbg !1210
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %tmpv.41.ld.0, metadata !1207, metadata !DIExpression()), !dbg !1208
  %v.0.sroa_cast = bitcast { %_type.0*, i8* }* %v to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %v.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %v.0.sroa_cast, i8 0, i64 16, i1 false)
  %cast.483 = bitcast %IPST.3* %tmpv.50 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.483, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6interface.4.5.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %tmpv.41.ld.0, i8* nonnull %cast.483), !dbg !1213
  %field.48 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.50, i64 0, i32 0, !dbg !1213
  %tmpv.50.field.ld.27 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.48, align 8, !dbg !1213
  %icmp.218 = icmp eq { %_type.0*, i8* }* %tmpv.50.field.ld.27, null, !dbg !1213
  br i1 %icmp.218, label %else.18, label %then.18.lr.ph

then.18.lr.ph:                                    ; preds = %else.12
  %field.45 = getelementptr inbounds %IPST.3, %IPST.3* %tmpv.50, i64 0, i32 1
  %0 = bitcast { %_type.0*, i8* }** %field.45 to i8**
  %key.0.sroa_cast = bitcast { i8*, i64 }* %key to i8*
  %cast.501 = bitcast { i8*, i64 }* %tmpv.53 to i8*
  %cast.514 = bitcast { i8*, i64 }* %tmpv.57 to i8*
  %cast.516 = bitcast { %_type.0*, i8* }* %tmpv.58 to i8*
  %v10 = bitcast { %_type.0*, i8* }* %v to i8*
  br label %then.18

fallthrough.13:                                   ; preds = %then.12, %else.13
  %tmpv.45.0 = phi %_type.0* [ %.field.ld.2, %else.13 ], [ null, %then.12 ]
  %1 = inttoptr i64 %call.14.fca.1.extract to i8*, !dbg !1215
  %tmp.7.sroa.0.0.cast.465.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.44, i64 0, i64 0, i32 0, !dbg !1215
  store %_type.0* %tmpv.45.0, %_type.0** %tmp.7.sroa.0.0.cast.465.sroa_idx, align 8, !dbg !1215
  %tmp.7.sroa.2.0.cast.465.sroa_idx24 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.44, i64 0, i64 0, i32 1, !dbg !1215
  store i8* %1, i8** %tmp.7.sroa.2.0.cast.465.sroa_idx24, align 8, !dbg !1215
  %field.35 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.8, i64 0, i32 0, !dbg !1215
  %cast.468 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.44, i64 0, i64 0, !dbg !1215
  store { %_type.0*, i8* }* %cast.468, { %_type.0*, i8* }** %field.35, align 8, !dbg !1215
  %field.36 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.8, i64 0, i32 1, !dbg !1215
  store i64 1, i64* %field.36, align 8, !dbg !1215
  %field.37 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.8, i64 0, i32 2, !dbg !1215
  store i64 1, i64* %field.37, align 8, !dbg !1215
  %call.15 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([23 x i8]* @const.185 to i64), i64 22, %IPST.2* byval nonnull %tmp.8), !dbg !1215
  %call.15.fca.0.extract = extractvalue { i64, i64 } %call.15, 0, !dbg !1215
  %call.15.fca.1.extract = extractvalue { i64, i64 } %call.15, 1, !dbg !1215
  %icmp.16 = icmp eq i64 %call.15.fca.0.extract, 0, !dbg !1215
  br i1 %icmp.16, label %fallthrough.14, label %else.14

else.13:                                          ; preds = %then.12
  %2 = inttoptr i64 %call.14.fca.0.extract to { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, !dbg !1212
  %field.31 = getelementptr inbounds { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }, { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }* %2, i64 0, i32 0, !dbg !1212
  %.field.ld.2 = load %_type.0*, %_type.0** %field.31, align 8, !dbg !1212
  br label %fallthrough.13

fallthrough.14:                                   ; preds = %fallthrough.13, %else.14
  %tmpv.47.0 = phi i64 [ %.field.ld.32, %else.14 ], [ 0, %fallthrough.13 ]
  call void @runtime.gopanic(i8* nest undef, i64 %tmpv.47.0, i64 %call.15.fca.1.extract), !dbg !1216
  unreachable

else.14:                                          ; preds = %fallthrough.13
  %3 = inttoptr i64 %call.15.fca.0.extract to i64*, !dbg !1215
  %.field.ld.32 = load i64, i64* %3, align 8, !dbg !1215
  br label %fallthrough.14

then.15:                                          ; preds = %then.18
  %call.17 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1217
  %cast.508 = bitcast { i8*, i64 }* %tmpv.56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.508, i8* align 8 bitcast ({ i8*, i64 }* @const.190 to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.17, i8* nonnull %cast.508), !dbg !1217
  %4 = ptrtoint i8* %call.17 to i64, !dbg !1217
  call void @runtime.gopanic(i8* nest undef, i64 ptrtoint (%_type.0* @string..d to i64), i64 %4), !dbg !1217
  unreachable

else.15:                                          ; preds = %then.18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.514, i8* nonnull align 8 %key.0.sroa_cast, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.516, i8* nonnull align 8 %v.0.sroa_cast, i64 16, i1 false)
  %call.18 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.1, %MapType.1* @type..map.6string.7interface.4.5, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12, i8* nonnull %cast.514), !dbg !1219
  %runtime.writeBarrier.ld.1 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1219
  %icmp.20 = icmp eq i32 %runtime.writeBarrier.ld.1, 0, !dbg !1219
  br i1 %icmp.20, label %then.16, label %else.16

then.16:                                          ; preds = %else.15
  %icmp.19 = icmp eq i8* %call.18, null, !dbg !1219
  br i1 %icmp.19, label %then.17, label %else.17

fallthrough.16:                                   ; preds = %else.16, %else.17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %key.0.sroa_cast)
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.483), !dbg !1213
  %tmpv.50.field.ld.2 = load { %_type.0*, i8* }*, { %_type.0*, i8* }** %field.48, align 8, !dbg !1213
  %icmp.21 = icmp eq { %_type.0*, i8* }* %tmpv.50.field.ld.2, null, !dbg !1213
  br i1 %icmp.21, label %else.18, label %then.18

else.16:                                          ; preds = %else.15
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @type..interface.4.5, i64 0, i32 0), i8* %call.18, i8* nonnull %cast.516), !dbg !1219
  br label %fallthrough.16

then.17:                                          ; preds = %then.16
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1219
  unreachable

else.17:                                          ; preds = %then.16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.18, i8* nonnull align 8 %cast.516, i64 16, i1 false), !dbg !1219
  br label %fallthrough.16

then.18:                                          ; preds = %then.18.lr.ph, %fallthrough.16
  %tmpv.50.field.ld.29 = phi { %_type.0*, i8* }* [ %tmpv.50.field.ld.27, %then.18.lr.ph ], [ %tmpv.50.field.ld.2, %fallthrough.16 ]
  %tmpv.48.sroa.0.0.cast.488.sroa_cast = bitcast { %_type.0*, i8* }* %tmpv.50.field.ld.29 to i64*, !dbg !1213
  %tmpv.48.sroa.0.0.copyload11 = load i64, i64* %tmpv.48.sroa.0.0.cast.488.sroa_cast, align 8, !dbg !1213
  %tmpv.48.sroa.3.0.cast.488.sroa_idx12 = getelementptr inbounds { %_type.0*, i8* }, { %_type.0*, i8* }* %tmpv.50.field.ld.29, i64 0, i32 1, !dbg !1213
  %tmpv.48.sroa.3.0.cast.488.sroa_cast = bitcast i8** %tmpv.48.sroa.3.0.cast.488.sroa_idx12 to i64*, !dbg !1213
  %tmpv.48.sroa.3.0.copyload13 = load i64, i64* %tmpv.48.sroa.3.0.cast.488.sroa_cast, align 8, !dbg !1213
  %tmpv.50.field.ld.11 = load i8*, i8** %0, align 8, !dbg !1213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %v10, i8* align 8 %tmpv.50.field.ld.11, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.48.sroa.0.0.copyload11, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1221
  call void @llvm.dbg.value(metadata i64 %tmpv.48.sroa.3.0.copyload13, metadata !1220, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1221
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %key.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %key.0.sroa_cast, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1222, metadata !DIExpression()), !dbg !1223
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.501, i8 0, i64 16, i1 false)
  %call.16 = call i8 @runtime.ifaceE2T2(i8* nest undef, %_type.0* nonnull @string..d, i64 %tmpv.48.sroa.0.0.copyload11, i64 %tmpv.48.sroa.3.0.copyload13, i8* nonnull %cast.501), !dbg !1224
  call void @llvm.dbg.value(metadata i8 %call.16, metadata !1222, metadata !DIExpression()), !dbg !1223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %key.0.sroa_cast, i8* nonnull align 8 %cast.501, i64 16, i1 false), !dbg !1224
  %icmp.18 = icmp eq i8 %call.16, 0, !dbg !1225
  br i1 %icmp.18, label %then.15, label %else.15

else.18:                                          ; preds = %fallthrough.16, %else.12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %v.0.sroa_cast)
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12, metadata !1199, metadata !DIExpression()), !dbg !1200
  ret { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.12, !dbg !1226
}

declare i8 @runtime.ifaceE2T2(i8*, %_type.0*, i64, i64, i8*) local_unnamed_addr #0

declare { i64, i64 } @reflect.TypeOf(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @fmt.Errorf(i8*, i64, i64, %IPST.2*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @runtime.gopanic(i8*, i64, i64) local_unnamed_addr #1

declare void @runtime.mapiterinit(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare i8* @runtime.mapassign(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.mapiternext(i8*, i8*) local_unnamed_addr #0

declare void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @gopkg_in_yaml_v2.Unmarshal(i8*, { i8*, i64, i64 }*, i64, i64) local_unnamed_addr #0

declare void @strings.SplitN(%IPST.5*, i8*, i64, i64, i64, i64, i64) local_unnamed_addr #0

declare void @runtime.makeslice(%IPST.6*, i8*, %_type.0*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @path_filepath.Join(i8*, %IPST.5*) local_unnamed_addr #0

declare void @path_filepath.Glob({ %IPST.5, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare void @runtime.growslice(%IPST.6*, i8*, %_type.0*, %IPST.6*, i64) local_unnamed_addr #0

declare void @runtime.mapdelete(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare %Directory.0* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.NewDirectory(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub(i8*, %Directory.0*) #0

declare { i64, i64 } @strings.ToLower(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Name..stub(i8*, %Directory.0*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Attr(i8*, %Directory.0*, i64, i64, %Attr.0*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Children..stub(i8*, %Directory.0*) #0

declare void @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Content..stub({ i8*, i64, i64 }*, i8*, %Directory.0*) #0

declare i8 @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Delete..stub(i8*, %Directory.0*) #0

declare void @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Entry..stub(%Dirent.0*, i8*, %Directory.0*) #0

declare i8 @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.IsDir..stub(i8*, %Directory.0*) #0

declare i8 @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.IsFile..stub(i8*, %Directory.0*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.New(i8*, %Directory.0*, i64, i64, i64) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Parent..stub(i8*, %Directory.0*, %IPST.12*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Path..stub(i8*, %Directory.0*, %IPST.5*) #0

declare %File.1* @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.NewFile(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub(i8*, %File.1*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Name..stub(i8*, %File.1*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Attr(i8*, %File.1*, i64, i64, %Attr.0*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Children..stub(i8*, %File.1*) #0

declare void @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Content({ i8*, i64, i64 }*, i8*, %File.1*) #0

declare i8 @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Delete..stub(i8*, %File.1*) #0

declare void @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Entry..stub(%Dirent.0*, i8*, %File.1*) #0

declare i8 @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.IsDir..stub(i8*, %File.1*) #0

declare i8 @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.IsFile..stub(i8*, %File.1*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.New(i8*, %File.1*, i64, i64, i64) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Parent..stub(i8*, %File.1*, %IPST.12*) #0

declare { i64, i64 } @github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Path..stub(i8*, %File.1*, %IPST.5*) #0

define %Level.0* @command_line_arguments.NewLevel(i8* nest nocapture readnone %nest.13, i64 %root.chunk0, i64 %root.chunk1, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %objects) #0 !dbg !1227 {
entry:
  %tmpv.308 = alloca %Level.0, align 8
  call void @llvm.dbg.value(metadata i64 %root.chunk0, metadata !1230, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1231
  call void @llvm.dbg.value(metadata i64 %root.chunk1, metadata !1230, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1231
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %objects, metadata !1232, metadata !DIExpression()), !dbg !1233
  call void @llvm.dbg.value(metadata %Level.0* null, metadata !1234, metadata !DIExpression()), !dbg !1235
  %call.80 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !1236
  %call.81 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @runtime.makemap_small(i8* nest undef), !dbg !1237
  %call.82 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Level..d, i64 0, i32 0)), !dbg !1238
  %cast.1233 = bitcast i8* %call.82 to %Level.0*, !dbg !1238
  %root.addr.sroa.0.0.cast.1234.sroa_cast = bitcast %Level.0* %tmpv.308 to i64*, !dbg !1239
  store i64 %root.chunk0, i64* %root.addr.sroa.0.0.cast.1234.sroa_cast, align 8, !dbg !1239
  %root.addr.sroa.2.0.cast.1234.sroa_idx3 = getelementptr inbounds %Level.0, %Level.0* %tmpv.308, i64 0, i32 0, i32 1, !dbg !1239
  %root.addr.sroa.2.0.cast.1234.sroa_cast = bitcast i8** %root.addr.sroa.2.0.cast.1234.sroa_idx3 to i64*, !dbg !1239
  store i64 %root.chunk1, i64* %root.addr.sroa.2.0.cast.1234.sroa_cast, align 8, !dbg !1239
  %field.243 = getelementptr inbounds %Level.0, %Level.0* %tmpv.308, i64 0, i32 1, !dbg !1239
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %objects, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.243, align 8, !dbg !1239
  %field.244 = getelementptr inbounds %Level.0, %Level.0* %tmpv.308, i64 0, i32 2, !dbg !1239
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.80, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.244, align 8, !dbg !1239
  %field.245 = getelementptr inbounds %Level.0, %Level.0* %tmpv.308, i64 0, i32 3, !dbg !1239
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.81, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.245, align 8, !dbg !1239
  %cast.1238 = bitcast %Level.0* %tmpv.308 to i8*, !dbg !1238
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @command_line_arguments.Level..d, i64 0, i32 0), i8* %call.82, i8* nonnull %cast.1238), !dbg !1238
  call void @llvm.dbg.value(metadata %Level.0* %cast.1233, metadata !1234, metadata !DIExpression()), !dbg !1235
  ret %Level.0* %cast.1233, !dbg !1240
}

declare i8* @runtime.requireitab(i8*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare void @runtime.assertI2T(i8*, %_type.0*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare void @github_com_ChrisRx_dungeonfs_pkg_eval.NewContext({ %Context.1*, %error.0 }*, i8*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*) local_unnamed_addr #0

declare { i64, i64 } @strings.Replace(i8*, i64, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @fmt.Sprintf(i8*, i64, i64, %IPST.2*) local_unnamed_addr #0

declare %FileSet.0* @go_token.NewFileSet(i8*) local_unnamed_addr #0

declare void @go_parser.ParseFile({ %File.0*, %error.0 }*, i8*, %FileSet.0*, i64, i64, i64, i64, i64) local_unnamed_addr #0

define internal void @command_line_arguments..1command_line_arguments.Level.AddProperty..func1({ %Value.0*, %error.0 }* nocapture sret %sret.formal.4, i8* nest nocapture readonly %"$closure") #0 !dbg !1241 {
entry:
  %sret.actual.77 = alloca { %Value.0*, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Value.0* null, metadata !1242, metadata !DIExpression()), !dbg !1243
  %field.441 = getelementptr inbounds i8, i8* %"$closure", i64 16, !dbg !1244
  %0 = bitcast i8* %field.441 to %File.0***, !dbg !1244
  %.field.ld.69 = load %File.0**, %File.0*** %0, align 8, !dbg !1244
  %.ld.81 = load %File.0*, %File.0** %.field.ld.69, align 8, !dbg !1244
  %icmp.168 = icmp eq %File.0* %.ld.81, null, !dbg !1245
  br i1 %icmp.168, label %then.146, label %else.146

then.146:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1245
  unreachable

else.146:                                         ; preds = %entry
  %tmpv.479.sroa.0.0.cast.1769.sroa_idx = getelementptr inbounds %File.0, %File.0* %.ld.81, i64 0, i32 3, i32 0
  %tmpv.479.sroa.0.0.copyload = load %Decl.0*, %Decl.0** %tmpv.479.sroa.0.0.cast.1769.sroa_idx, align 8
  %tmpv.479.sroa.2.0.cast.1769.sroa_idx4 = getelementptr inbounds %File.0, %File.0* %.ld.81, i64 0, i32 3, i32 1
  %tmpv.479.sroa.2.0.copyload = load i64, i64* %tmpv.479.sroa.2.0.cast.1769.sroa_idx4, align 8
  %icmp.169 = icmp slt i64 %tmpv.479.sroa.2.0.copyload, 1, !dbg !1246
  br i1 %icmp.169, label %then.147, label %else.147

then.147:                                         ; preds = %else.146
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !1246
  unreachable

else.147:                                         ; preds = %else.146
  %tmpv.482.sroa.0.0.cast.1771.sroa_idx = getelementptr inbounds %Decl.0, %Decl.0* %tmpv.479.sroa.0.0.copyload, i64 0, i32 0
  %tmpv.482.sroa.0.0.copyload = load { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }*, { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }** %tmpv.482.sroa.0.0.cast.1771.sroa_idx, align 8
  %tmpv.482.sroa.3.0.cast.1771.sroa_idx1 = getelementptr inbounds %Decl.0, %Decl.0* %tmpv.479.sroa.0.0.copyload, i64 0, i32 1
  %1 = bitcast i8** %tmpv.482.sroa.3.0.cast.1771.sroa_idx1 to %FuncDecl.0**
  %tmpv.482.sroa.3.0.copyload12 = load %FuncDecl.0*, %FuncDecl.0** %1, align 8
  %icmp.171 = icmp eq { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }* %tmpv.482.sroa.0.0.copyload, null, !dbg !1247
  br i1 %icmp.171, label %fallthrough.148, label %else.148

fallthrough.148:                                  ; preds = %else.147, %else.148
  %tmpv.484.0 = phi %_type.0* [ %.field.ld.71, %else.148 ], [ null, %else.147 ]
  call void @runtime.assertI2T(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1go_ast.FuncDecl, i64 0, i32 0), %_type.0* %tmpv.484.0, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @go_ast.Decl..d, i64 0, i32 0)), !dbg !1247
  %icmp.172 = icmp eq %FuncDecl.0* %tmpv.482.sroa.3.0.copyload12, null, !dbg !1248
  br i1 %icmp.172, label %then.149, label %else.149

else.148:                                         ; preds = %else.147
  %field.448 = getelementptr inbounds { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }, { %_type.0*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (i8*, i8*)* }* %tmpv.482.sroa.0.0.copyload, i64 0, i32 0, !dbg !1247
  %.field.ld.71 = load %_type.0*, %_type.0** %field.448, align 8, !dbg !1247
  br label %fallthrough.148

then.149:                                         ; preds = %fallthrough.148
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1248
  unreachable

else.149:                                         ; preds = %fallthrough.148
  %field.450 = getelementptr inbounds %FuncDecl.0, %FuncDecl.0* %tmpv.482.sroa.3.0.copyload12, i64 0, i32 4, !dbg !1248
  %2 = bitcast %BlockStmt.0** %field.450 to i64*, !dbg !1248
  %.field.ld.721314 = load i64, i64* %2, align 8, !dbg !1248
  %field.451 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !1249
  %3 = bitcast i8* %field.451 to %Context.1***, !dbg !1249
  %.field.ld.73 = load %Context.1**, %Context.1*** %3, align 8, !dbg !1249
  %.ld.85 = load %Context.1*, %Context.1** %.field.ld.73, align 8, !dbg !1249
  call void @github_com_ChrisRx_dungeonfs_pkg_eval.Context.Eval({ %Value.0*, %error.0 }* nonnull sret %sret.actual.77, i8* nest undef, %Context.1* %.ld.85, i64 ptrtoint ({ %_type.0*, i64 (i8*, %BlockStmt.0*)*, i64 (i8*, %BlockStmt.0*)* }* @pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt to i64), i64 %.field.ld.721314), !dbg !1250
  %4 = bitcast { %Value.0*, %error.0 }* %sret.actual.77 to i64*, !dbg !1250
  %tmpv.478.sroa.0.0.copyload615 = load i64, i64* %4, align 8, !dbg !1250
  %tmpv.478.sroa.3.0.cast.1783.sroa_idx = getelementptr inbounds { %Value.0*, %error.0 }, { %Value.0*, %error.0 }* %sret.actual.77, i64 0, i32 1, !dbg !1250
  %tmpv.478.sroa.3.0.cast.1783.sroa_cast = bitcast %error.0* %tmpv.478.sroa.3.0.cast.1783.sroa_idx to i8*, !dbg !1250
  call void @llvm.dbg.value(metadata { %Value.0*, %error.0 }* %sret.actual.77, metadata !1242, metadata !DIExpression(DW_OP_deref)), !dbg !1243
  %5 = bitcast { %Value.0*, %error.0 }* %sret.formal.4 to i64*, !dbg !1251
  store i64 %tmpv.478.sroa.0.0.copyload615, i64* %5, align 8, !dbg !1251
  %tmp.58.sroa.2.0.cast.1792.sroa_idx = getelementptr inbounds { %Value.0*, %error.0 }, { %Value.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, !dbg !1251
  %tmp.58.sroa.2.0.cast.1792.sroa_cast = bitcast %error.0* %tmp.58.sroa.2.0.cast.1792.sroa_idx to i8*, !dbg !1251
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.58.sroa.2.0.cast.1792.sroa_cast, i8* nonnull align 8 %tmpv.478.sroa.3.0.cast.1783.sroa_cast, i64 16, i1 false), !dbg !1251
  ret void, !dbg !1251
}

declare i8* @runtime.mapaccess1(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.SetNodeAttr(i8* nest nocapture readnone %nest.20, i64 %node.chunk0, i64 %node.chunk1, i64 %k.chunk0, i64 %k.chunk1, %Value.0* %v) #0 !dbg !1252 {
entry:
  %tmp.67 = alloca %IPST.2, align 8
  %tmpv.519 = alloca { i8*, i64, i64 }, align 8
  %sret.actual.84 = alloca { i8*, i64, i64 }, align 8
  %tmpv.521 = alloca { i8*, i64, i64 }, align 8
  %tmpv.525 = alloca { i8*, i64 }, align 8
  %tmpv.527 = alloca [1 x { %_type.0*, i8* }], align 8
  call void @llvm.dbg.value(metadata i64 %node.chunk0, metadata !1255, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1256
  call void @llvm.dbg.value(metadata i64 %node.chunk1, metadata !1255, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1256
  call void @llvm.dbg.value(metadata i64 %k.chunk0, metadata !1257, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1258
  call void @llvm.dbg.value(metadata i64 %k.chunk1, metadata !1257, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1258
  call void @llvm.dbg.value(metadata %Value.0* %v, metadata !1259, metadata !DIExpression()), !dbg !1260
  %call.140 = call i8 @reflect.Value.IsValid(i8* nest undef, %Value.0* %v), !dbg !1261
  %icmp.174 = icmp ne i8 %call.140, 0, !dbg !1262
  %xor.14 = xor i1 %icmp.174, true, !dbg !1262
  %zext.174 = zext i1 %xor.14 to i8, !dbg !1262
  br i1 %icmp.174, label %then.152, label %fallthrough.152

then.152:                                         ; preds = %entry
  %call.141 = call i64 @reflect.Value.Kind(i8* nest undef, %Value.0* %v), !dbg !1263
  %icmp.175 = icmp eq i64 %call.141, 22, !dbg !1264
  br i1 %icmp.175, label %then.153, label %else.154

fallthrough.152:                                  ; preds = %then.153, %entry
  %tmpv.503.0 = phi i8 [ %zext.174, %entry ], [ %call.142, %then.153 ]
  %0 = and i8 %tmpv.503.0, 1, !dbg !1265
  %trunc.156 = icmp eq i8 %0, 0, !dbg !1265
  br i1 %trunc.156, label %else.154, label %then.154

then.153:                                         ; preds = %then.152
  %call.142 = call i8 @reflect.Value.IsNil(i8* nest undef, %Value.0* %v), !dbg !1266
  br label %fallthrough.152

then.154:                                         ; preds = %fallthrough.152
  %call.143 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([25 x i8]* @const.254 to i64), i64 24, %IPST.2* byval nonnull @const.200), !dbg !1267
  ret { i64, i64 } %call.143, !dbg !1268

else.154:                                         ; preds = %then.152, %fallthrough.152
  %call.144 = call { i64, i64 } @reflect.Value.Interface(i8* nest undef, %Value.0* %v), !dbg !1269
  %call.144.fca.0.extract = extractvalue { i64, i64 } %call.144, 0, !dbg !1269
  %call.144.fca.1.extract = extractvalue { i64, i64 } %call.144, 1, !dbg !1269
  %call.145 = call %_type.0* @runtime.efacetype(i8* nest undef, i64 %call.144.fca.0.extract, i64 %call.144.fca.1.extract), !dbg !1270
  %call.146 = call i8 @runtime.ifacetypeeq(i8* nest undef, %_type.0* nonnull @int..d, %_type.0* %call.145), !dbg !1271
  %icmp.177 = icmp eq i8 %call.146, 0, !dbg !1271
  br i1 %icmp.177, label %label.0, label %else.155

else.155:                                         ; preds = %else.154
  %1 = inttoptr i64 %node.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, !dbg !1272
  %field.466 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %1, i64 0, i32 8, !dbg !1272
  %.field.ld.75 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.466, align 8, !dbg !1272
  %2 = inttoptr i64 %node.chunk1 to i8*, !dbg !1272
  %call.147 = call { i64, i64 } %.field.ld.75(i8* nest undef, i8* %2), !dbg !1272
  %call.147.fca.0.extract = extractvalue { i64, i64 } %call.147, 0, !dbg !1272
  %call.147.fca.1.extract = extractvalue { i64, i64 } %call.147, 1, !dbg !1272
  %call.148 = call i64 @reflect.Value.Int(i8* nest undef, %Value.0* %v), !dbg !1273
  %3 = inttoptr i64 %call.147.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !1274
  %field.469 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %3, i64 0, i32 6, !dbg !1274
  %.field.ld.76 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.469, align 8, !dbg !1274
  %4 = inttoptr i64 %call.147.fca.1.extract to i8*, !dbg !1274
  %call.149 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @int64..d), !dbg !1273
  %cast.1829 = bitcast i8* %call.149 to i64*, !dbg !1273
  store i64 %call.148, i64* %cast.1829, align 8, !dbg !1273
  %5 = ptrtoint i8* %call.149 to i64, !dbg !1273
  call void %.field.ld.76(i8* nest undef, i8* %4, i64 %k.chunk0, i64 %k.chunk1, i64 ptrtoint (%_type.0* @int64..d to i64), i64 %5), !dbg !1274
  br label %label.1

label.0:                                          ; preds = %else.154
  %call.150 = call i8 @runtime.ifacetypeeq(i8* nest undef, %_type.0* nonnull @bool..d, %_type.0* %call.145), !dbg !1275
  %icmp.178 = icmp eq i8 %call.150, 0, !dbg !1275
  br i1 %icmp.178, label %label.2, label %else.156

label.1:                                          ; preds = %else.158, %else.157, %else.156, %else.155
  call void @llvm.dbg.value(metadata i64 0, metadata !1276, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1277
  call void @llvm.dbg.value(metadata i64 0, metadata !1276, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1277
  ret { i64, i64 } zeroinitializer, !dbg !1278

else.156:                                         ; preds = %label.0
  %6 = inttoptr i64 %node.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, !dbg !1279
  %field.474 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %6, i64 0, i32 8, !dbg !1279
  %.field.ld.77 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.474, align 8, !dbg !1279
  %7 = inttoptr i64 %node.chunk1 to i8*, !dbg !1279
  %call.151 = call { i64, i64 } %.field.ld.77(i8* nest undef, i8* %7), !dbg !1279
  %call.151.fca.0.extract = extractvalue { i64, i64 } %call.151, 0, !dbg !1279
  %call.151.fca.1.extract = extractvalue { i64, i64 } %call.151, 1, !dbg !1279
  %call.152 = call i8 @reflect.Value.Bool(i8* nest undef, %Value.0* %v), !dbg !1280
  %8 = inttoptr i64 %call.151.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !1281
  %field.477 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %8, i64 0, i32 6, !dbg !1281
  %.field.ld.78 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.477, align 8, !dbg !1281
  %9 = inttoptr i64 %call.151.fca.1.extract to i8*, !dbg !1281
  %call.153 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @bool..d), !dbg !1280
  store i8 %call.152, i8* %call.153, align 1, !dbg !1280
  %10 = ptrtoint i8* %call.153 to i64, !dbg !1280
  call void %.field.ld.78(i8* nest undef, i8* %9, i64 %k.chunk0, i64 %k.chunk1, i64 ptrtoint (%_type.0* @bool..d to i64), i64 %10), !dbg !1281
  br label %label.1

label.2:                                          ; preds = %label.0
  %call.154 = call i8 @runtime.ifacetypeeq(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i64 0, i32 0), %_type.0* %call.145), !dbg !1282
  %icmp.179 = icmp eq i8 %call.154, 0, !dbg !1282
  br i1 %icmp.179, label %label.3, label %else.157

else.157:                                         ; preds = %label.2
  %11 = inttoptr i64 %node.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, !dbg !1283
  %field.482 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %11, i64 0, i32 8, !dbg !1283
  %.field.ld.79 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.482, align 8, !dbg !1283
  %12 = inttoptr i64 %node.chunk1 to i8*, !dbg !1283
  %call.155 = call { i64, i64 } %.field.ld.79(i8* nest undef, i8* %12), !dbg !1283
  %call.155.fca.0.extract = extractvalue { i64, i64 } %call.155, 0, !dbg !1283
  %call.155.fca.1.extract = extractvalue { i64, i64 } %call.155, 1, !dbg !1283
  call void @reflect.Value.Bytes({ i8*, i64, i64 }* nonnull sret %sret.actual.84, i8* nest undef, %Value.0* %v), !dbg !1284
  %cast.1842 = bitcast { i8*, i64, i64 }* %tmpv.519 to i8*
  %cast.1843 = bitcast { i8*, i64, i64 }* %sret.actual.84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1842, i8* nonnull align 8 %cast.1843, i64 24, i1 false)
  %13 = inttoptr i64 %call.155.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !1285
  %field.485 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %13, i64 0, i32 6, !dbg !1285
  %.field.ld.80 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.485, align 8, !dbg !1285
  %14 = inttoptr i64 %call.155.fca.1.extract to i8*, !dbg !1285
  %call.156 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i64 0, i32 0)), !dbg !1284
  %cast.1846 = bitcast { i8*, i64, i64 }* %tmpv.521 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1846, i8* nonnull align 8 %cast.1842, i64 24, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i64 0, i32 0), i8* %call.156, i8* nonnull %cast.1846), !dbg !1284
  %15 = ptrtoint i8* %call.156 to i64, !dbg !1284
  call void %.field.ld.80(i8* nest undef, i8* %14, i64 %k.chunk0, i64 %k.chunk1, i64 ptrtoint (%SliceType.0* @type...6.7uint8 to i64), i64 %15), !dbg !1285
  br label %label.1

label.3:                                          ; preds = %label.2
  %call.157 = call i8 @runtime.ifacetypeeq(i8* nest undef, %_type.0* nonnull @string..d, %_type.0* %call.145), !dbg !1286
  %icmp.180 = icmp eq i8 %call.157, 0, !dbg !1286
  br i1 %icmp.180, label %label.4, label %else.158

else.158:                                         ; preds = %label.3
  %16 = inttoptr i64 %node.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }*, !dbg !1287
  %field.490 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64, %Attr.0*)*, { i64, i64 } (i8*, i8*)*, void ({ i8*, i64, i64 }*, i8*, i8*)*, i8 (i8*, i8*)*, void (%Dirent.0*, i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, i64)*, { i64, i64 } (i8*, i8*, %IPST.12*)*, { i64, i64 } (i8*, i8*, %IPST.5*)* }* %16, i64 0, i32 8, !dbg !1287
  %.field.ld.81 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.490, align 8, !dbg !1287
  %17 = inttoptr i64 %node.chunk1 to i8*, !dbg !1287
  %call.158 = call { i64, i64 } %.field.ld.81(i8* nest undef, i8* %17), !dbg !1287
  %call.158.fca.0.extract = extractvalue { i64, i64 } %call.158, 0, !dbg !1287
  %call.158.fca.1.extract = extractvalue { i64, i64 } %call.158, 1, !dbg !1287
  %call.159 = call { i64, i64 } @reflect.Value.String(i8* nest undef, %Value.0* %v), !dbg !1288
  %call.159.fca.0.extract = extractvalue { i64, i64 } %call.159, 0, !dbg !1288
  %call.159.fca.1.extract = extractvalue { i64, i64 } %call.159, 1, !dbg !1288
  %18 = inttoptr i64 %call.158.fca.0.extract to { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }*, !dbg !1289
  %field.493 = getelementptr inbounds { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }, { %_type.0*, void ({ { %_type.0*, i8* }, i8 }*, i8*, i8*, i64, i64)*, i8 (i8*, i8*, i64, i64)*, void ({ i8*, i64, i64 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, i8*)*, void (i8*, i8*, i64, i64, i64, i64)* }* %18, i64 0, i32 6, !dbg !1289
  %.field.ld.82 = load void (i8*, i8*, i64, i64, i64, i64)*, void (i8*, i8*, i64, i64, i64, i64)** %field.493, align 8, !dbg !1289
  %19 = inttoptr i64 %call.158.fca.1.extract to i8*, !dbg !1289
  %call.160 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1288
  %tmpv.523.sroa.0.0.cast.1862.sroa_cast = bitcast { i8*, i64 }* %tmpv.525 to i64*
  store i64 %call.159.fca.0.extract, i64* %tmpv.523.sroa.0.0.cast.1862.sroa_cast, align 8
  %tmpv.523.sroa.2.0.cast.1862.sroa_idx7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.525, i64 0, i32 1
  store i64 %call.159.fca.1.extract, i64* %tmpv.523.sroa.2.0.cast.1862.sroa_idx7, align 8
  %cast.1865 = bitcast { i8*, i64 }* %tmpv.525 to i8*, !dbg !1288
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.160, i8* nonnull %cast.1865), !dbg !1288
  %20 = ptrtoint i8* %call.160 to i64, !dbg !1288
  call void %.field.ld.82(i8* nest undef, i8* %19, i64 %k.chunk0, i64 %k.chunk1, i64 ptrtoint (%_type.0* @string..d to i64), i64 %20), !dbg !1289
  br label %label.1

label.4:                                          ; preds = %label.3
  %21 = ptrtoint %Value.0* %v to i64, !dbg !1290
  %call.161 = call { i64, i64 } @reflect.TypeOf(i8* nest undef, i64 ptrtoint (%PtrType.0* @type...1reflect.Value to i64), i64 %21), !dbg !1291
  %call.161.fca.0.extract = extractvalue { i64, i64 } %call.161, 0, !dbg !1291
  %call.161.fca.1.extract = extractvalue { i64, i64 } %call.161, 1, !dbg !1291
  %icmp.181 = icmp eq i64 %call.161.fca.0.extract, 0, !dbg !1291
  br i1 %icmp.181, label %fallthrough.159, label %else.159

fallthrough.159:                                  ; preds = %label.4, %else.159
  %tmpv.528.0 = phi %_type.0* [ %.field.ld.83, %else.159 ], [ null, %label.4 ]
  %22 = inttoptr i64 %call.161.fca.1.extract to i8*, !dbg !1292
  %tmp.66.sroa.0.0.cast.1877.sroa_idx = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.527, i64 0, i64 0, i32 0, !dbg !1292
  store %_type.0* %tmpv.528.0, %_type.0** %tmp.66.sroa.0.0.cast.1877.sroa_idx, align 8, !dbg !1292
  %tmp.66.sroa.2.0.cast.1877.sroa_idx33 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.527, i64 0, i64 0, i32 1, !dbg !1292
  store i8* %22, i8** %tmp.66.sroa.2.0.cast.1877.sroa_idx33, align 8, !dbg !1292
  %field.505 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.67, i64 0, i32 0, !dbg !1292
  %cast.1880 = getelementptr inbounds [1 x { %_type.0*, i8* }], [1 x { %_type.0*, i8* }]* %tmpv.527, i64 0, i64 0, !dbg !1292
  store { %_type.0*, i8* }* %cast.1880, { %_type.0*, i8* }** %field.505, align 8, !dbg !1292
  %field.506 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.67, i64 0, i32 1, !dbg !1292
  store i64 1, i64* %field.506, align 8, !dbg !1292
  %field.507 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.67, i64 0, i32 2, !dbg !1292
  store i64 1, i64* %field.507, align 8, !dbg !1292
  %call.162 = call { i64, i64 } @fmt.Errorf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.258 to i64), i64 29, %IPST.2* byval nonnull %tmp.67), !dbg !1292
  ret { i64, i64 } %call.162, !dbg !1293

else.159:                                         ; preds = %label.4
  %23 = inttoptr i64 %call.161.fca.0.extract to { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, !dbg !1291
  %field.501 = getelementptr inbounds { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }, { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.19*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.15*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }* %23, i64 0, i32 0, !dbg !1291
  %.field.ld.83 = load %_type.0*, %_type.0** %field.501, align 8, !dbg !1291
  br label %fallthrough.159
}

declare i64 @go_ast.BlockStmt.End(i8*, %BlockStmt.0*) #0

declare i64 @go_ast.BlockStmt.Pos(i8*, %BlockStmt.0*) #0

declare void @github_com_ChrisRx_dungeonfs_pkg_eval.Context.Eval({ %Value.0*, %error.0 }*, i8*, %Context.1*, i64, i64) local_unnamed_addr #0

declare i8 @reflect.Value.IsValid(i8*, %Value.0*) local_unnamed_addr #0

declare i64 @reflect.Value.Kind(i8*, %Value.0*) local_unnamed_addr #0

declare i8 @reflect.Value.IsNil(i8*, %Value.0*) local_unnamed_addr #0

declare { i64, i64 } @reflect.Value.Interface(i8*, %Value.0*) local_unnamed_addr #0

declare %_type.0* @runtime.efacetype(i8*, i64, i64) local_unnamed_addr #0

declare i8 @runtime.ifacetypeeq(i8*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare i64 @reflect.Value.Int(i8*, %Value.0*) local_unnamed_addr #0

declare i8 @reflect.Value.Bool(i8*, %Value.0*) local_unnamed_addr #0

declare void @reflect.Value.Bytes({ i8*, i64, i64 }*, i8*, %Value.0*) local_unnamed_addr #0

declare { i64, i64 } @reflect.Value.String(i8*, %Value.0*) local_unnamed_addr #0

define void @command_line_arguments.command_line_arguments..init0(i8* nest nocapture readnone %nest.21) #0 !dbg !1294 {
entry:
  %tmpv.532 = alloca %.command-line-arguments.logger.0, align 8
  %command_line_arguments.PkgLogger.field.ld.10 = load { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*, { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }** getelementptr inbounds (%.command-line-arguments.logger.0, %.command-line-arguments.logger.0* @command_line_arguments.PkgLogger, i64 0, i32 0), align 8, !dbg !1295
  %icmp.184 = icmp eq { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }* %command_line_arguments.PkgLogger.field.ld.10, null, !dbg !1295
  br i1 %icmp.184, label %then.160, label %fallthrough.160

then.160:                                         ; preds = %entry
  %call.163 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.1, %StructType.1* @github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger..d, i64 0, i32 0)), !dbg !1296
  %field.508 = getelementptr inbounds %.command-line-arguments.logger.0, %.command-line-arguments.logger.0* %tmpv.532, i64 0, i32 0, !dbg !1297
  store { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }* bitcast ({ %_type.0*, void (i8*, %NullLogger.0*, i64, i64, %IPST.2*)* }* @pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger to { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }*), { %_type.0*, void (i8*, i8*, i64, i64, %IPST.2*)* }** %field.508, align 8, !dbg !1297
  %field.509 = getelementptr inbounds %.command-line-arguments.logger.0, %.command-line-arguments.logger.0* %tmpv.532, i64 0, i32 1, !dbg !1297
  store i8* %call.163, i8** %field.509, align 8, !dbg !1297
  %runtime.writeBarrier.ld.17 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1297
  %icmp.183 = icmp eq i32 %runtime.writeBarrier.ld.17, 0, !dbg !1297
  %cast.1908 = bitcast %.command-line-arguments.logger.0* %tmpv.532 to i8*, !dbg !1297
  br i1 %icmp.183, label %else.162, label %else.161

fallthrough.160:                                  ; preds = %else.162, %else.161, %entry
  ret void

else.161:                                         ; preds = %then.160
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.1, %InterfaceType.1* @command_line_arguments..command_line_arguments.logger..d, i64 0, i32 0), i8* bitcast (%.command-line-arguments.logger.0* @command_line_arguments.PkgLogger to i8*), i8* nonnull %cast.1908), !dbg !1297
  br label %fallthrough.160

else.162:                                         ; preds = %then.160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%.command-line-arguments.logger.0* @command_line_arguments.PkgLogger to i8*), i8* nonnull align 8 %cast.1908, i64 16, i1 false), !dbg !1297
  br label %fallthrough.160
}

declare void @github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger.Printf(i8*, %NullLogger.0*, i64, i64, %IPST.2*) #0

declare void @runtime.registerGCRoots(i8*, i8*) local_unnamed_addr #0

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #2

attributes #0 = { "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #1 = { noreturn "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 7, !"PIC Level", i32 0}
!1 = distinct !DICompileUnit(language: DW_LANG_Go, file: !2, producer: "llvm-goc", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, globals: !4)
!2 = !DIFile(filename: "./assets.go", directory: "/home/wangcong/go_path/src/github.com/ChrisRx/dungeonfs/pkg/game/assets")
!3 = !{}
!4 = !{!5, !28, !30, !107}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "command_line_arguments.defaultAttrs", linkageName: "command_line_arguments.defaultAttrs", scope: !1, file: !7, line: 65, type: !8, isLocal: true, isDefinition: true)
!7 = !DIFile(filename: "assets.go", directory: ".")
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "runtime.hmap", file: !10, line: 1, size: 384, align: 8, elements: !11)
!10 = !DIFile(filename: "<built-in>", directory: "")
!11 = !{!12, !14, !16, !17, !19, !21, !24, !25, !27}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "count", file: !10, line: 1, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "flags", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 64)
!15 = !DIBasicType(name: "uint8", size: 8, encoding: DW_ATE_unsigned)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "B", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 72)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "noverflow", file: !10, line: 1, baseType: !18, size: 16, align: 16, offset: 80)
!18 = !DIBasicType(name: "uint16", size: 16, encoding: DW_ATE_unsigned)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "hash0", file: !10, line: 1, baseType: !20, size: 32, align: 32, offset: 96)
!20 = !DIBasicType(name: "uint32", size: 32, encoding: DW_ATE_unsigned)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 128)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIBasicType(name: "void")
!24 = !DIDerivedType(tag: DW_TAG_member, name: "oldbuckets", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 192)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "nevacuate", file: !10, line: 1, baseType: !26, size: 64, align: 64, offset: 256)
!26 = !DIBasicType(name: "uintptr", size: 64, encoding: DW_ATE_unsigned)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "extra", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 320)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "runtime.writeBarrier", linkageName: "runtime.writeBarrier", scope: !1, file: !10, line: 1, type: !20, isLocal: false, isDefinition: true)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "command_line_arguments.PkgLogger", linkageName: "command_line_arguments.PkgLogger", scope: !1, file: !32, line: 11, type: !33, isLocal: false, isDefinition: true)
!32 = !DIFile(filename: "logging.go", directory: ".")
!33 = !DICompositeType(tag: DW_TAG_structure_type, name: ".command-line-arguments.logger", file: !32, line: 7, size: 128, align: 8, elements: !34)
!34 = !{!35, !106}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !32, line: 7, baseType: !36, size: 64, align: 64)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!37 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,string,struct{*Handle,int,int})void}", file: !38, size: 128, align: 8, elements: !39)
!38 = !DIFile(filename: "", directory: "")
!39 = !{!40, !94}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !38, line: 7, baseType: !41, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DICompositeType(tag: DW_TAG_structure_type, name: "_type", file: !10, line: 1, size: 576, align: 8, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49, !50, !58, !67, !69, !75, !93}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !10, line: 1, baseType: !26, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "ptrdata", file: !10, line: 1, baseType: !26, size: 64, align: 64, offset: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "hash", file: !10, line: 1, baseType: !20, size: 32, align: 32, offset: 128)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "kind", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 160)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "align", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 168)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "fieldAlign", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 176)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", file: !10, line: 1, baseType: !51, size: 64, align: 64, offset: 192)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 1, size: 64, align: 8, elements: !53)
!53 = !{!54}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 1, baseType: !55, size: 64, align: 64)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!56 = !DISubroutineType(types: !57)
!57 = !{!26, !22, !26}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "equalfn", file: !10, line: 1, baseType: !59, size: 64, align: 64, offset: 256)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64)
!60 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 1, size: 64, align: 8, elements: !61)
!61 = !{!62}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 1, baseType: !63, size: 64, align: 64)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!64 = !DISubroutineType(types: !65)
!65 = !{!66, !22, !22}
!66 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_unsigned)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "gcdata", file: !10, line: 1, baseType: !68, size: 64, align: 64, offset: 320)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "string", file: !10, line: 1, baseType: !70, size: 64, align: 64, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", file: !10, line: 1, size: 128, align: 8, elements: !72)
!72 = !{!73, !74}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !10, line: 1, baseType: !68, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !10, line: 1, baseType: !13, size: 64, align: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "uncommonType", file: !10, line: 1, baseType: !76, size: 64, align: 64, offset: 448)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncommonType", file: !10, line: 1, size: 320, align: 8, elements: !78)
!78 = !{!79, !80, !81}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !10, line: 1, baseType: !70, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "pkgPath", file: !10, line: 1, baseType: !70, size: 64, align: 64, offset: 64)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "methods", file: !10, line: 1, baseType: !82, size: 192, align: 64, offset: 128)
!82 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*method,int,int}", file: !38, size: 192, align: 8, elements: !83)
!83 = !{!84, !91, !92}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !85, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DICompositeType(tag: DW_TAG_structure_type, name: "method", file: !10, line: 1, size: 320, align: 8, elements: !87)
!87 = !{!79, !80, !88, !89, !90}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 128)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 192)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "tfn", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 256)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !38, line: 1, baseType: !13, size: 64, align: 64, offset: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !38, line: 1, baseType: !13, size: 64, align: 64, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "ptrToThis", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 512)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "Printf", file: !38, line: 7, baseType: !95, size: 64, align: 64, offset: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = !DISubroutineType(types: !97)
!97 = !{!23, !22, !71, !98}
!98 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Handle,int,int}", file: !38, size: 192, align: 8, elements: !99)
!99 = !{!100, !91, !92}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !101, size: 64, align: 64)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = !DICompositeType(tag: DW_TAG_structure_type, name: "Handle", file: !7, line: 13, size: 128, align: 8, elements: !103)
!103 = !{!104, !105}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !7, line: 1, baseType: !41, size: 64, align: 64)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !7, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !32, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!107 = !DIGlobalVariableExpression(var: !108, expr: !DIExpression())
!108 = distinct !DIGlobalVariable(name: "command_line_arguments.srcTmpl", linkageName: "command_line_arguments.srcTmpl", scope: !1, file: !109, line: 82, type: !71, isLocal: true, isDefinition: true)
!109 = !DIFile(filename: "level.go", directory: ".")
!110 = distinct !DISubprogram(name: "assets.Base..1command_line_arguments.Component", linkageName: "command_line_arguments.Component.Base", scope: null, file: !7, line: 35, type: !111, isLocal: false, isDefinition: true, scopeLine: 35, isOptimized: false, unit: !1, retainedNodes: !3)
!111 = !DISubroutineType(types: !112)
!112 = !{!71, !113, !113}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DICompositeType(tag: DW_TAG_structure_type, name: "Component", file: !7, line: 25, size: 576, align: 8, elements: !115)
!115 = !{!116, !117, !119, !120, !121}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 26, baseType: !71, size: 128, align: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "t", file: !7, line: 27, baseType: !118, size: 64, align: 64, offset: 128)
!118 = !DIBasicType(name: "ComponentType", size: 64, encoding: DW_ATE_signed)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", file: !7, line: 28, baseType: !8, size: 64, align: 64, offset: 192)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "base", file: !7, line: 29, baseType: !71, size: 128, align: 64, offset: 256)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "bases", file: !7, line: 30, baseType: !122, size: 192, align: 64, offset: 384)
!122 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**Component,int,int}", file: !38, size: 192, align: 8, elements: !123)
!123 = !{!124, !91, !92}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !22, size: 64, align: 64)
!125 = !DILocalVariable(name: "c", arg: 1, scope: !110, file: !7, line: 35, type: !113)
!126 = !DILocation(line: 35, column: 1, scope: !110)
!127 = !DILocation(line: 35, column: 52, scope: !110)
!128 = !DILocation(line: 35, column: 44, scope: !110)
!129 = !DILocalVariable(name: "$ret2", scope: !110, file: !7, line: 35, type: !71)
!130 = !DILocation(line: 35, column: 28, scope: !110)
!131 = distinct !DISubprogram(name: "assets.Bases..1command_line_arguments.Component", linkageName: "command_line_arguments.Component.Bases", scope: null, file: !7, line: 36, type: !132, isLocal: false, isDefinition: true, scopeLine: 36, isOptimized: false, unit: !1, retainedNodes: !3)
!132 = !DISubroutineType(types: !133)
!133 = !{!122, !113, !113}
!134 = !DILocalVariable(name: "c", arg: 1, scope: !131, file: !7, line: 36, type: !113)
!135 = !DILocation(line: 36, column: 1, scope: !131)
!136 = !DILocation(line: 36, column: 52, scope: !131)
!137 = !DILocation(line: 36, column: 44, scope: !131)
!138 = distinct !DISubprogram(name: "assets.Name..1command_line_arguments.Component", linkageName: "command_line_arguments.Component.Name", scope: null, file: !7, line: 33, type: !111, isLocal: false, isDefinition: true, scopeLine: 33, isOptimized: false, unit: !1, retainedNodes: !3)
!139 = !DILocalVariable(name: "c", arg: 1, scope: !138, file: !7, line: 33, type: !113)
!140 = !DILocation(line: 33, column: 1, scope: !138)
!141 = !DILocation(line: 33, column: 52, scope: !138)
!142 = !DILocation(line: 33, column: 44, scope: !138)
!143 = !DILocalVariable(name: "$ret0", scope: !138, file: !7, line: 33, type: !71)
!144 = !DILocation(line: 33, column: 28, scope: !138)
!145 = distinct !DISubprogram(name: "assets.Type..1command_line_arguments.Component", linkageName: "command_line_arguments.Component.Type", scope: null, file: !7, line: 34, type: !146, isLocal: false, isDefinition: true, scopeLine: 34, isOptimized: false, unit: !1, retainedNodes: !3)
!146 = !DISubroutineType(types: !147)
!147 = !{!118, !113, !113}
!148 = !DILocalVariable(name: "c", arg: 1, scope: !145, file: !7, line: 34, type: !113)
!149 = !DILocation(line: 34, column: 1, scope: !145)
!150 = !DILocalVariable(name: "$ret1", scope: !145, file: !7, line: 34, type: !118)
!151 = !DILocation(line: 34, column: 28, scope: !145)
!152 = !DILocation(line: 34, column: 52, scope: !145)
!153 = !DILocation(line: 34, column: 44, scope: !145)
!154 = distinct !DISubprogram(name: "assets.LookupBaseType.command_line_arguments.Components", linkageName: "command_line_arguments.Components.LookupBaseType", scope: null, file: !7, line: 40, type: !155, isLocal: false, isDefinition: true, scopeLine: 40, isOptimized: false, unit: !1, retainedNodes: !3)
!155 = !DISubroutineType(types: !156)
!156 = !{!157, !161, !161, !71}
!157 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Component,bool}", file: !38, size: 128, align: 8, elements: !158)
!158 = !{!159, !160}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 40, baseType: !113, size: 64, align: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 40, baseType: !66, size: 8, align: 8, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!162 = !DILocalVariable(name: "pointer", arg: 1, scope: !154, file: !7, line: 40, type: !161)
!163 = !DILocation(line: 40, column: 1, scope: !154)
!164 = !DILocalVariable(name: "t", arg: 2, scope: !154, file: !7, line: 40, type: !71)
!165 = !DILocation(line: 40, column: 36, scope: !154)
!166 = !DILocalVariable(name: "c", scope: !154, file: !7, line: 40, type: !8)
!167 = !DILocalVariable(name: "$ret4", scope: !154, file: !7, line: 40, type: !113)
!168 = !DILocation(line: 40, column: 47, scope: !154)
!169 = !DILocalVariable(name: "$ret5", scope: !154, file: !7, line: 40, type: !66)
!170 = !DILocation(line: 40, column: 59, scope: !154)
!171 = !DILocalVariable(name: "val", scope: !172, file: !7, line: 41, type: !113)
!172 = distinct !DILexicalBlock(scope: !154, file: !7, line: 41, column: 2)
!173 = !DILocation(line: 41, column: 5, scope: !154)
!174 = !DILocalVariable(name: "ok", scope: !172, file: !7, line: 41, type: !66)
!175 = !DILocation(line: 41, column: 5, scope: !172)
!176 = !DILocation(line: 41, column: 2, scope: !172)
!177 = !DILocation(line: 42, column: 3, scope: !172)
!178 = !DILocation(line: 44, column: 2, scope: !154)
!179 = distinct !DISubprogram(name: "assets.command_line_arguments..import", linkageName: "command_line_arguments..import", scope: null, file: !7, line: 1, type: !180, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!180 = !DISubroutineType(types: !181)
!181 = !{!23}
!182 = !DILocation(line: 1, column: 1, scope: !183)
!183 = !DILexicalBlockFile(scope: !179, file: !10, discriminator: 0)
!184 = !DILocation(line: 65, column: 20, scope: !185)
!185 = !DILexicalBlockFile(scope: !179, file: !7, discriminator: 0)
!186 = !DILocation(line: 65, column: 5, scope: !185)
!187 = !DILocation(line: 13, column: 1, scope: !188)
!188 = !DILexicalBlockFile(scope: !179, file: !32, discriminator: 0)
!189 = distinct !DISubprogram(name: "assets.AddProperty..stub.command_line_arguments.Resources", linkageName: "command_line_arguments.Resources.AddProperty..stub", scope: null, file: !109, line: 87, type: !190, isLocal: false, isDefinition: true, scopeLine: 87, isOptimized: false, unit: !1, retainedNodes: !3)
!190 = !DISubroutineType(types: !191)
!191 = !{!192, !204, !204, !329, !71, !102}
!192 = !DICompositeType(tag: DW_TAG_structure_type, name: "error", file: !10, line: 1, size: 128, align: 8, elements: !193)
!193 = !{!194, !203}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 1, baseType: !195, size: 64, align: 64)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string}", file: !38, size: 128, align: 8, elements: !197)
!197 = !{!198, !199}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !38, line: 1, baseType: !41, size: 64, align: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "Error", file: !38, line: 1, baseType: !200, size: 64, align: 64, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DISubroutineType(types: !202)
!202 = !{!71, !22}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DICompositeType(tag: DW_TAG_structure_type, name: "Resources", file: !7, line: 70, size: 192, align: 8, elements: !206)
!206 = !{!207, !208, !209}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "components", file: !7, line: 71, baseType: !8, size: 64, align: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "entities", file: !7, line: 72, baseType: !8, size: 64, align: 64, offset: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "Level", file: !7, line: 73, baseType: !210, size: 64, align: 64, offset: 128)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = !DICompositeType(tag: DW_TAG_structure_type, name: "Level", file: !109, line: 17, size: 320, align: 8, elements: !212)
!212 = !{!213, !424, !425, !426}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "root", file: !109, line: 18, baseType: !214, size: 128, align: 64)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entity", file: !7, line: 60, size: 128, align: 8, elements: !215)
!215 = !{!216, !105}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 60, baseType: !217, size: 64, align: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,Context,*Attr)error,*func(*void)Nodes,*func(*void)struct{*uint8,int,int},*func(*void)bool,*func(*void)Dirent,*func(*void)bool,*func(*void)bool,*func(*void)NodeMetaData,*func(*void)string,*func(*void,NodeType,string)Node,*func(*void,struct{*Node,int,int})Node,*func(*void,struct{*string,int,int})string}", file: !38, size: 832, align: 8, elements: !219)
!219 = !{!220, !221, !307, !350, !357, !361, !371, !372, !373, !407, !408, !413, !417}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !38, line: 12, baseType: !41, size: 64, align: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "Attr", file: !38, line: 12, baseType: !222, size: 64, align: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DISubroutineType(types: !224)
!224 = !{!192, !22, !225, !287}
!225 = !DICompositeType(tag: DW_TAG_structure_type, name: "Context", file: !7, line: 12, size: 128, align: 8, elements: !226)
!226 = !{!227, !105}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 12, baseType: !228, size: 64, align: 64)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,Handle)Handle}", file: !38, size: 320, align: 8, elements: !230)
!230 = !{!220, !231, !273, !279, !283}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "Deadline", file: !38, line: 12, baseType: !232, size: 64, align: 64, offset: 64)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = !DISubroutineType(types: !234)
!234 = !{!235, !22}
!235 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Time,bool}", file: !38, size: 256, align: 8, elements: !236)
!236 = !{!237, !272}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", file: !38, line: 12, baseType: !238, size: 192, align: 64)
!238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Time", file: !7, line: 5, size: 192, align: 8, elements: !239)
!239 = !{!240, !242, !244}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "wall", file: !7, line: 5, baseType: !241, size: 64, align: 64)
!241 = !DIBasicType(name: "uint64", size: 64, encoding: DW_ATE_unsigned)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "ext", file: !7, line: 5, baseType: !243, size: 64, align: 64, offset: 64)
!243 = !DIBasicType(name: "int64", size: 64, encoding: DW_ATE_signed)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "loc", file: !7, line: 5, baseType: !245, size: 64, align: 64, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", file: !7, line: 5, size: 704, align: 8, elements: !247)
!247 = !{!248, !249, !258, !269, !270, !271}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 5, baseType: !71, size: 128, align: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "zone", file: !7, line: 5, baseType: !250, size: 192, align: 64, offset: 128)
!250 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zone,int,int}", file: !38, size: 192, align: 8, elements: !251)
!251 = !{!252, !91, !92}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !253, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zone", file: !7, line: 5, size: 256, align: 8, elements: !255)
!255 = !{!248, !256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 128)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "isDST", file: !7, line: 5, baseType: !66, size: 8, align: 8, offset: 192)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "tx", file: !7, line: 5, baseType: !259, size: 192, align: 64, offset: 320)
!259 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zoneTrans,int,int}", file: !38, size: 192, align: 8, elements: !260)
!260 = !{!261, !91, !92}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !262, size: 64, align: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zoneTrans", file: !7, line: 5, size: 128, align: 8, elements: !264)
!264 = !{!265, !266, !267, !268}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "when", file: !7, line: 5, baseType: !243, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "index", file: !7, line: 5, baseType: !15, size: 8, align: 8, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "isstd", file: !7, line: 5, baseType: !66, size: 8, align: 8, offset: 72)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "isutc", file: !7, line: 5, baseType: !66, size: 8, align: 8, offset: 80)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "cacheStart", file: !7, line: 5, baseType: !243, size: 64, align: 64, offset: 512)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "cacheEnd", file: !7, line: 5, baseType: !243, size: 64, align: 64, offset: 576)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "cacheZone", file: !7, line: 5, baseType: !253, size: 64, align: 64, offset: 640)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !38, line: 12, baseType: !66, size: 8, align: 8, offset: 192)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "Done", file: !38, line: 12, baseType: !274, size: 64, align: 64, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{!277, !22}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_channel", file: !10, line: 1, align: 8, elements: !3)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "Err", file: !38, line: 12, baseType: !280, size: 64, align: 64, offset: 192)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!192, !22}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !38, line: 12, baseType: !284, size: 64, align: 64, offset: 256)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{!102, !22, !102}
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DICompositeType(tag: DW_TAG_structure_type, name: "Attr", file: !7, line: 12, size: 1280, align: 8, elements: !289)
!289 = !{!290, !292, !293, !294, !295, !296, !297, !298, !299, !301, !302, !303, !304, !305, !306}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "Valid", file: !7, line: 12, baseType: !291, size: 64, align: 64)
!291 = !DIBasicType(name: "Duration", size: 64, encoding: DW_ATE_signed)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "Inode", file: !7, line: 12, baseType: !241, size: 64, align: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "Size", file: !7, line: 12, baseType: !241, size: 64, align: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "Blocks", file: !7, line: 12, baseType: !241, size: 64, align: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "Atime", file: !7, line: 12, baseType: !238, size: 192, align: 64, offset: 256)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "Mtime", file: !7, line: 12, baseType: !238, size: 192, align: 64, offset: 448)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "Ctime", file: !7, line: 12, baseType: !238, size: 192, align: 64, offset: 640)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "Crtime", file: !7, line: 12, baseType: !238, size: 192, align: 64, offset: 832)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", file: !7, line: 12, baseType: !300, size: 32, align: 32, offset: 1024)
!300 = !DIBasicType(name: "FileMode", size: 32, encoding: DW_ATE_unsigned)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "Nlink", file: !7, line: 12, baseType: !20, size: 32, align: 32, offset: 1056)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "Uid", file: !7, line: 12, baseType: !20, size: 32, align: 32, offset: 1088)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "Gid", file: !7, line: 12, baseType: !20, size: 32, align: 32, offset: 1120)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "Rdev", file: !7, line: 12, baseType: !20, size: 32, align: 32, offset: 1152)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", file: !7, line: 12, baseType: !20, size: 32, align: 32, offset: 1184)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", file: !7, line: 12, baseType: !20, size: 32, align: 32, offset: 1216)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "Children", file: !38, line: 12, baseType: !308, size: 64, align: 64, offset: 128)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{!311, !22}
!311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Nodes", file: !7, line: 12, size: 128, align: 8, elements: !312)
!312 = !{!313, !105}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 12, baseType: !314, size: 64, align: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,string)void,*func(*void)struct{*Node,int,int},*func(*void,string)bool,*func(*void)struct{*Node,int,int},*func(*void,string)struct{Node,bool},*func(*void)struct{*Node,int,int},*func(*void,string,Node)void}", file: !38, size: 512, align: 8, elements: !316)
!316 = !{!220, !317, !321, !332, !336, !337, !345, !346}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "Delete", file: !38, line: 12, baseType: !318, size: 64, align: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DISubroutineType(types: !320)
!320 = !{!23, !22, !71}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "Directories", file: !38, line: 12, baseType: !322, size: 64, align: 64, offset: 128)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!325, !22}
!325 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Node,int,int}", file: !38, size: 192, align: 8, elements: !326)
!326 = !{!327, !91, !92}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !328, size: 64, align: 64)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "Node", file: !7, line: 12, size: 128, align: 8, elements: !330)
!330 = !{!331, !105}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 12, baseType: !22, size: 64, align: 64)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "Exists", file: !38, line: 12, baseType: !333, size: 64, align: 64, offset: 192)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = !DISubroutineType(types: !335)
!335 = !{!66, !22, !71}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "Files", file: !38, line: 12, baseType: !322, size: 64, align: 64, offset: 256)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "Get", file: !38, line: 12, baseType: !338, size: 64, align: 64, offset: 320)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DISubroutineType(types: !340)
!340 = !{!341, !22, !71}
!341 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Node,bool}", file: !38, size: 192, align: 8, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 12, baseType: !329, size: 128, align: 64)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 12, baseType: !66, size: 8, align: 8, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "Iter", file: !38, line: 12, baseType: !322, size: 64, align: 64, offset: 384)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "Set", file: !38, line: 12, baseType: !347, size: 64, align: 64, offset: 448)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = !DISubroutineType(types: !349)
!349 = !{!23, !22, !71, !329}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "Content", file: !38, line: 12, baseType: !351, size: 64, align: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{!354, !22}
!354 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint8,int,int}", file: !38, size: 192, align: 8, elements: !355)
!355 = !{!356, !91, !92}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !68, size: 64, align: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "Delete", file: !38, line: 12, baseType: !358, size: 64, align: 64, offset: 256)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DISubroutineType(types: !360)
!360 = !{!66, !22}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "Entry", file: !38, line: 12, baseType: !362, size: 64, align: 64, offset: 320)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{!365, !22}
!365 = !DICompositeType(tag: DW_TAG_structure_type, name: "Dirent", file: !7, line: 12, size: 256, align: 8, elements: !366)
!366 = !{!367, !368, !370}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "Inode", file: !7, line: 12, baseType: !241, size: 64, align: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "Type", file: !7, line: 12, baseType: !369, size: 32, align: 32, offset: 64)
!369 = !DIBasicType(name: "DirentType", size: 32, encoding: DW_ATE_unsigned)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !7, line: 12, baseType: !71, size: 128, align: 64, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "IsDir", file: !38, line: 12, baseType: !358, size: 64, align: 64, offset: 384)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "IsFile", file: !38, line: 12, baseType: !358, size: 64, align: 64, offset: 448)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "MetaData", file: !38, line: 12, baseType: !374, size: 64, align: 64, offset: 512)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DISubroutineType(types: !376)
!376 = !{!377, !22}
!377 = !DICompositeType(tag: DW_TAG_structure_type, name: "NodeMetaData", file: !7, line: 12, size: 128, align: 8, elements: !378)
!378 = !{!379, !105}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 12, baseType: !380, size: 64, align: 64)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,string)struct{Handle,bool},*func(*void,string)bool,*func(*void,string)struct{*uint8,int,int},*func(*void,string)string,*func(*void)CommentMap,*func(*void,string,Handle)void}", file: !38, size: 448, align: 8, elements: !382)
!382 = !{!220, !383, !390, !391, !395, !399, !403}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "Get", file: !38, line: 12, baseType: !384, size: 64, align: 64, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DISubroutineType(types: !386)
!386 = !{!387, !22, !71}
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Handle,bool}", file: !38, size: 192, align: 8, elements: !388)
!388 = !{!389, !344}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 12, baseType: !102, size: 128, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "GetBool", file: !38, line: 12, baseType: !333, size: 64, align: 64, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "GetBytes", file: !38, line: 12, baseType: !392, size: 64, align: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DISubroutineType(types: !394)
!394 = !{!354, !22, !71}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "GetString", file: !38, line: 12, baseType: !396, size: 64, align: 64, offset: 256)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DISubroutineType(types: !398)
!398 = !{!71, !22, !71}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "Iter", file: !38, line: 12, baseType: !400, size: 64, align: 64, offset: 320)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DISubroutineType(types: !402)
!402 = !{!8, !22}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "Set", file: !38, line: 12, baseType: !404, size: 64, align: 64, offset: 384)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!23, !22, !71, !102}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !38, line: 12, baseType: !200, size: 64, align: 64, offset: 576)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "New", file: !38, line: 12, baseType: !409, size: 64, align: 64, offset: 640)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{!329, !22, !412, !71}
!412 = !DIBasicType(name: "NodeType", size: 64, encoding: DW_ATE_signed)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "Parent", file: !38, line: 12, baseType: !414, size: 64, align: 64, offset: 704)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{!329, !22, !325}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "Path", file: !38, line: 12, baseType: !418, size: 64, align: 64, offset: 768)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{!71, !22, !421}
!421 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*string,int,int}", file: !38, size: 192, align: 8, elements: !422)
!422 = !{!423, !91, !92}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !70, size: 64, align: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "objects", file: !109, line: 19, baseType: !8, size: 64, align: 64, offset: 128)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "paths", file: !109, line: 19, baseType: !8, size: 64, align: 64, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "properties", file: !109, line: 20, baseType: !8, size: 64, align: 64, offset: 256)
!427 = !DILocalVariable(name: "$p10", arg: 4, scope: !189, file: !109, line: 87, type: !102)
!428 = !DILocation(line: 87, column: 60, scope: !189)
!429 = !DILocalVariable(name: "$this7.pointer", arg: 1, scope: !189, file: !109, line: 87, type: !204)
!430 = !DILocation(line: 87, column: 28, scope: !189)
!431 = !DILocalVariable(name: "$p8", arg: 2, scope: !189, file: !109, line: 87, type: !329)
!432 = !DILocation(line: 87, column: 29, scope: !189)
!433 = !DILocalVariable(name: "$p9", arg: 3, scope: !189, file: !109, line: 87, type: !71)
!434 = !DILocation(line: 87, column: 43, scope: !189)
!435 = !DILocalVariable(name: "$this7", scope: !189, file: !109, line: 87, type: !205)
!436 = !DILocation(line: 70, column: 6, scope: !437)
!437 = !DILexicalBlockFile(scope: !189, file: !7, discriminator: 0)
!438 = distinct !DISubprogram(name: "assets.GetProperties..stub.command_line_arguments.Resources", linkageName: "command_line_arguments.Resources.GetProperties..stub", scope: null, file: !109, line: 122, type: !439, isLocal: false, isDefinition: true, scopeLine: 122, isOptimized: false, unit: !1, retainedNodes: !3)
!439 = !DISubroutineType(types: !440)
!440 = !{!441, !204, !204, !71}
!441 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{CommentMap,bool}", file: !38, size: 128, align: 8, elements: !442)
!442 = !{!443, !444}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 122, baseType: !8, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 122, baseType: !66, size: 8, align: 8, offset: 64)
!445 = !DILocalVariable(name: "$this13.pointer", arg: 1, scope: !438, file: !109, line: 122, type: !204)
!446 = !DILocation(line: 122, column: 30, scope: !438)
!447 = !DILocalVariable(name: "$p14", arg: 2, scope: !438, file: !109, line: 122, type: !71)
!448 = !DILocation(line: 122, column: 31, scope: !438)
!449 = !DILocalVariable(name: "$this13", scope: !438, file: !109, line: 122, type: !205)
!450 = !DILocalVariable(name: "$ret25", scope: !438, file: !109, line: 122, type: !8)
!451 = !DILocation(line: 122, column: 44, scope: !438)
!452 = !DILocalVariable(name: "$ret26", scope: !438, file: !109, line: 122, type: !66)
!453 = !DILocation(line: 122, column: 69, scope: !438)
!454 = !DILocation(line: 70, column: 6, scope: !455)
!455 = !DILexicalBlockFile(scope: !438, file: !7, discriminator: 0)
!456 = distinct !DISubprogram(name: "assets.Root..stub.command_line_arguments.Resources", linkageName: "command_line_arguments.Resources.Root..stub", scope: null, file: !109, line: 34, type: !457, isLocal: false, isDefinition: true, scopeLine: 34, isOptimized: false, unit: !1, retainedNodes: !3)
!457 = !DISubroutineType(types: !458)
!458 = !{!459, !204, !204}
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DICompositeType(tag: DW_TAG_structure_type, name: "Directory", file: !7, line: 13, size: 640, align: 8, elements: !461)
!461 = !{!462}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "node", file: !7, line: 13, baseType: !463, size: 640, align: 64)
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: ".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node", file: !7, line: 13, size: 640, align: 8, elements: !464)
!464 = !{!465, !466, !467, !468, !469, !470, !471}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "inode", file: !7, line: 13, baseType: !241, size: 64, align: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 13, baseType: !71, size: 128, align: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "mode", file: !7, line: 13, baseType: !300, size: 32, align: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "path", file: !7, line: 13, baseType: !71, size: 128, align: 64, offset: 256)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", file: !7, line: 13, baseType: !8, size: 64, align: 64, offset: 384)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "parent", file: !7, line: 13, baseType: !329, size: 128, align: 64, offset: 448)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", file: !7, line: 13, baseType: !8, size: 64, align: 64, offset: 576)
!472 = !DILocalVariable(name: "$this15.pointer", arg: 1, scope: !456, file: !109, line: 34, type: !204)
!473 = !DILocation(line: 34, column: 21, scope: !456)
!474 = !DILocalVariable(name: "$this15", scope: !456, file: !109, line: 34, type: !205)
!475 = !DILocalVariable(name: "$ret27", scope: !456, file: !109, line: 34, type: !459)
!476 = !DILocation(line: 34, column: 24, scope: !456)
!477 = !DILocation(line: 70, column: 6, scope: !478)
!478 = !DILexicalBlockFile(scope: !456, file: !7, discriminator: 0)
!479 = distinct !DISubprogram(name: "assets.visit..stub.command_line_arguments.Resources", linkageName: "command_line_arguments.Resources.visit..stub", scope: null, file: !109, line: 54, type: !480, isLocal: false, isDefinition: true, scopeLine: 54, isOptimized: false, unit: !1, retainedNodes: !3)
!480 = !DISubroutineType(types: !481)
!481 = !{!23, !204, !204, !329}
!482 = !DILocalVariable(name: "$this11.pointer", arg: 1, scope: !479, file: !109, line: 54, type: !204)
!483 = !DILocation(line: 54, column: 22, scope: !479)
!484 = !DILocalVariable(name: "$p12", arg: 2, scope: !479, file: !109, line: 54, type: !329)
!485 = !DILocation(line: 54, column: 23, scope: !479)
!486 = !DILocalVariable(name: "$this11", scope: !479, file: !109, line: 54, type: !205)
!487 = !DILocation(line: 70, column: 6, scope: !488)
!488 = !DILexicalBlockFile(scope: !479, file: !7, discriminator: 0)
!489 = distinct !DISubprogram(name: "assets.GetObject..1command_line_arguments.Resources", linkageName: "command_line_arguments.Resources.GetObject", scope: null, file: !7, line: 89, type: !490, isLocal: false, isDefinition: true, scopeLine: 89, isOptimized: false, unit: !1, retainedNodes: !3)
!490 = !DISubroutineType(types: !491)
!491 = !{!214, !204, !204, !71}
!492 = !DILocalVariable(name: "r", arg: 1, scope: !489, file: !7, line: 89, type: !204)
!493 = !DILocation(line: 89, column: 1, scope: !489)
!494 = !DILocalVariable(name: "key", arg: 2, scope: !489, file: !7, line: 89, type: !71)
!495 = !DILocation(line: 89, column: 31, scope: !489)
!496 = !DILocalVariable(name: "ok", scope: !497, file: !7, line: 90, type: !66)
!497 = distinct !DILexicalBlock(scope: !489, file: !7, line: 90, column: 2)
!498 = !DILocation(line: 90, column: 5, scope: !489)
!499 = !DILocation(line: 90, column: 17, scope: !497)
!500 = !DILocation(line: 90, column: 5, scope: !497)
!501 = !DILocation(line: 90, column: 2, scope: !497)
!502 = !DILocalVariable(name: "val", scope: !497, file: !7, line: 90, type: !214)
!503 = !DILocalVariable(name: "$ret10", scope: !489, file: !7, line: 89, type: !214)
!504 = !DILocation(line: 89, column: 43, scope: !489)
!505 = !DILocation(line: 91, column: 3, scope: !497)
!506 = !DILocation(line: 93, column: 2, scope: !489)
!507 = distinct !DISubprogram(name: "assets.LoadDir..1command_line_arguments.Resources", linkageName: "command_line_arguments.Resources.LoadDir", scope: null, file: !7, line: 146, type: !508, isLocal: false, isDefinition: true, scopeLine: 146, isOptimized: false, unit: !1, retainedNodes: !3)
!508 = !DISubroutineType(types: !509)
!509 = !{!510, !204, !204, !71}
!510 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Directory,error}", file: !38, size: 192, align: 8, elements: !511)
!511 = !{!512, !513}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 146, baseType: !459, size: 64, align: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 146, baseType: !192, size: 128, align: 64, offset: 64)
!514 = !DILocalVariable(name: "r", arg: 1, scope: !507, file: !7, line: 146, type: !204)
!515 = !DILocation(line: 146, column: 1, scope: !507)
!516 = !DILocalVariable(name: "folder", arg: 2, scope: !507, file: !7, line: 146, type: !71)
!517 = !DILocation(line: 146, column: 29, scope: !507)
!518 = !DILocalVariable(name: "$ret13", scope: !507, file: !7, line: 146, type: !459)
!519 = !DILocation(line: 146, column: 45, scope: !507)
!520 = !DILocation(line: 147, column: 44, scope: !521)
!521 = distinct !DILexicalBlock(scope: !507, file: !7, line: 146, column: 1)
!522 = !DILocation(line: 147, column: 30, scope: !521)
!523 = !DILocalVariable(name: "assetFiles", scope: !521, file: !7, line: 147, type: !421)
!524 = !DILocation(line: 147, column: 2, scope: !507)
!525 = !DILocalVariable(name: "err", scope: !521, file: !7, line: 147, type: !192)
!526 = !DILocation(line: 148, column: 9, scope: !521)
!527 = !DILocation(line: 151, column: 2, scope: !528)
!528 = distinct !DILexicalBlock(scope: !521, file: !7, line: 151, column: 2)
!529 = !DILocation(line: 149, column: 3, scope: !521)
!530 = !DILocalVariable(name: "$ret14", scope: !507, file: !7, line: 146, type: !192)
!531 = !DILocation(line: 146, column: 62, scope: !507)
!532 = !DILocalVariable(name: "f", scope: !528, file: !7, line: 151, type: !71)
!533 = !DILocation(line: 151, column: 6, scope: !521)
!534 = !DILocation(line: 152, column: 14, scope: !535)
!535 = distinct !DILexicalBlock(scope: !528, file: !7, line: 152, column: 3)
!536 = !DILocalVariable(name: "err", scope: !535, file: !7, line: 152, type: !192)
!537 = !DILocation(line: 152, column: 6, scope: !528)
!538 = !DILocation(line: 152, column: 32, scope: !535)
!539 = !DILocation(line: 153, column: 4, scope: !535)
!540 = !DILocation(line: 156, column: 16, scope: !521)
!541 = !DILocalVariable(name: "unresolved", scope: !521, file: !7, line: 156, type: !8)
!542 = !DILocation(line: 156, column: 2, scope: !507)
!543 = !DILocalVariable(name: "v", scope: !544, file: !7, line: 157, type: !113)
!544 = distinct !DILexicalBlock(scope: !521, file: !7, line: 157, column: 2)
!545 = !DILocation(line: 157, column: 6, scope: !521)
!546 = !DILocation(line: 157, column: 21, scope: !544)
!547 = !DILocation(line: 157, column: 2, scope: !544)
!548 = !DILocation(line: 159, column: 18, scope: !544)
!549 = !DILocation(line: 158, column: 7, scope: !544)
!550 = !DILocation(line: 158, column: 15, scope: !544)
!551 = !DILocation(line: 162, column: 6, scope: !521)
!552 = !DILocation(line: 162, column: 22, scope: !521)
!553 = !DILocation(line: 166, column: 59, scope: !554)
!554 = distinct !DILexicalBlock(scope: !555, file: !7, line: 163, column: 32)
!555 = distinct !DILexicalBlock(scope: !521, file: !7, line: 163, column: 3)
!556 = !DILocation(line: 166, column: 15, scope: !554)
!557 = !DILocalVariable(name: "c", scope: !554, file: !7, line: 168, type: !113)
!558 = !DILocation(line: 168, column: 4, scope: !555)
!559 = !DILocation(line: 168, column: 14, scope: !554)
!560 = !DILocation(line: 168, column: 4, scope: !554)
!561 = !DILocalVariable(name: "ok", scope: !554, file: !7, line: 164, type: !66)
!562 = !DILocation(line: 164, column: 4, scope: !555)
!563 = !DILocation(line: 169, column: 7, scope: !554)
!564 = !DILocation(line: 166, column: 5, scope: !554)
!565 = !DILocation(line: 170, column: 15, scope: !554)
!566 = !DILocation(line: 172, column: 5, scope: !554)
!567 = !DILocation(line: 170, column: 5, scope: !554)
!568 = !DILocation(line: 172, column: 14, scope: !554)
!569 = !DILocation(line: 172, column: 12, scope: !554)
!570 = !DILocation(line: 173, column: 13, scope: !554)
!571 = !DILocation(line: 173, column: 5, scope: !554)
!572 = !DILocation(line: 173, column: 8, scope: !554)
!573 = !DILocation(line: 174, column: 4, scope: !554)
!574 = !DILocation(line: 163, column: 3, scope: !555)
!575 = !DILocalVariable(name: "v", scope: !555, file: !7, line: 163, type: !113)
!576 = !DILocation(line: 163, column: 7, scope: !521)
!577 = !DILocation(line: 164, column: 44, scope: !554)
!578 = !DILocation(line: 164, column: 16, scope: !554)
!579 = !DILocation(line: 164, column: 27, scope: !554)
!580 = !DILocalVariable(name: "val", scope: !554, file: !7, line: 164, type: !113)
!581 = !DILocation(line: 165, column: 7, scope: !554)
!582 = !DILocalVariable(name: "c", scope: !583, file: !7, line: 177, type: !113)
!583 = distinct !DILexicalBlock(scope: !521, file: !7, line: 177, column: 2)
!584 = !DILocation(line: 177, column: 6, scope: !521)
!585 = !DILocation(line: 177, column: 21, scope: !583)
!586 = !DILocation(line: 177, column: 2, scope: !583)
!587 = !DILocation(line: 222, column: 23, scope: !521)
!588 = !DILocation(line: 180, column: 28, scope: !589)
!589 = distinct !DILexicalBlock(scope: !583, file: !7, line: 180, column: 4)
!590 = !DILocation(line: 180, column: 14, scope: !589)
!591 = !DILocalVariable(name: "n", scope: !589, file: !7, line: 180, type: !459)
!592 = !DILocation(line: 180, column: 4, scope: !583)
!593 = !DILocation(line: 181, column: 23, scope: !594)
!594 = distinct !DILexicalBlock(scope: !589, file: !7, line: 181, column: 4)
!595 = !DILocation(line: 199, column: 23, scope: !596)
!596 = distinct !DILexicalBlock(scope: !583, file: !7, line: 199, column: 4)
!597 = !DILocation(line: 199, column: 14, scope: !596)
!598 = !DILocalVariable(name: "n", scope: !596, file: !7, line: 199, type: !599)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", file: !7, line: 13, size: 640, align: 8, elements: !461)
!601 = !DILocation(line: 199, column: 4, scope: !583)
!602 = !DILocation(line: 200, column: 23, scope: !603)
!603 = distinct !DILexicalBlock(scope: !596, file: !7, line: 200, column: 4)
!604 = !DILocation(line: 218, column: 4, scope: !583)
!605 = !DILocation(line: 181, column: 4, scope: !594)
!606 = !DILocalVariable(name: "k", scope: !594, file: !7, line: 181, type: !71)
!607 = !DILocation(line: 181, column: 8, scope: !589)
!608 = !DILocalVariable(name: "v", scope: !594, file: !7, line: 181, type: !102)
!609 = !DILocation(line: 182, column: 6, scope: !594)
!610 = !DILocation(line: 182, column: 30, scope: !594)
!611 = !DILocation(line: 182, column: 17, scope: !594)
!612 = !DILocation(line: 184, column: 4, scope: !613)
!613 = distinct !DILexicalBlock(scope: !589, file: !7, line: 184, column: 4)
!614 = !DILocalVariable(name: "k", scope: !613, file: !7, line: 184, type: !71)
!615 = !DILocation(line: 184, column: 8, scope: !589)
!616 = !DILocalVariable(name: "v", scope: !613, file: !7, line: 184, type: !102)
!617 = !DILocation(line: 185, column: 6, scope: !613)
!618 = !DILocation(line: 185, column: 30, scope: !613)
!619 = !DILocation(line: 185, column: 17, scope: !613)
!620 = !DILocalVariable(name: "base", scope: !621, file: !7, line: 187, type: !113)
!621 = distinct !DILexicalBlock(scope: !589, file: !7, line: 187, column: 4)
!622 = !DILocation(line: 187, column: 8, scope: !589)
!623 = !DILocation(line: 36, column: 1, scope: !131, inlinedAt: !624)
!624 = distinct !DILocation(line: 187, column: 26, scope: !621)
!625 = !DILocation(line: 36, column: 44, scope: !131, inlinedAt: !624)
!626 = !DILocation(line: 187, column: 4, scope: !621)
!627 = !DILocation(line: 189, column: 27, scope: !628)
!628 = distinct !DILexicalBlock(scope: !621, file: !7, line: 189, column: 5)
!629 = !DILocation(line: 189, column: 5, scope: !628)
!630 = !DILocation(line: 193, column: 7, scope: !628)
!631 = !DILocation(line: 193, column: 31, scope: !628)
!632 = !DILocation(line: 193, column: 18, scope: !628)
!633 = !DILocalVariable(name: "k", scope: !628, file: !7, line: 189, type: !71)
!634 = !DILocation(line: 189, column: 9, scope: !621)
!635 = !DILocalVariable(name: "v", scope: !628, file: !7, line: 189, type: !102)
!636 = !DILocation(line: 190, column: 11, scope: !628)
!637 = !DILocation(line: 196, column: 44, scope: !589)
!638 = !DILocation(line: 196, column: 13, scope: !589)
!639 = !DILocation(line: 33, column: 1, scope: !138, inlinedAt: !640)
!640 = distinct !DILocation(line: 197, column: 16, scope: !589)
!641 = !DILocation(line: 33, column: 44, scope: !138, inlinedAt: !640)
!642 = !DILocation(line: 33, column: 28, scope: !138, inlinedAt: !640)
!643 = !DILocation(line: 197, column: 25, scope: !589)
!644 = !DILocation(line: 197, column: 5, scope: !589)
!645 = !DILocation(line: 200, column: 4, scope: !603)
!646 = !DILocalVariable(name: "k", scope: !603, file: !7, line: 200, type: !71)
!647 = !DILocation(line: 200, column: 8, scope: !596)
!648 = !DILocalVariable(name: "v", scope: !603, file: !7, line: 200, type: !102)
!649 = !DILocation(line: 201, column: 6, scope: !603)
!650 = !DILocation(line: 201, column: 30, scope: !603)
!651 = !DILocation(line: 201, column: 17, scope: !603)
!652 = !DILocation(line: 203, column: 4, scope: !653)
!653 = distinct !DILexicalBlock(scope: !596, file: !7, line: 203, column: 4)
!654 = !DILocalVariable(name: "k", scope: !653, file: !7, line: 203, type: !71)
!655 = !DILocation(line: 203, column: 8, scope: !596)
!656 = !DILocalVariable(name: "v", scope: !653, file: !7, line: 203, type: !102)
!657 = !DILocation(line: 204, column: 6, scope: !653)
!658 = !DILocation(line: 204, column: 30, scope: !653)
!659 = !DILocation(line: 204, column: 17, scope: !653)
!660 = !DILocalVariable(name: "base", scope: !661, file: !7, line: 206, type: !113)
!661 = distinct !DILexicalBlock(scope: !596, file: !7, line: 206, column: 4)
!662 = !DILocation(line: 206, column: 8, scope: !596)
!663 = !DILocation(line: 36, column: 1, scope: !131, inlinedAt: !664)
!664 = distinct !DILocation(line: 206, column: 26, scope: !661)
!665 = !DILocation(line: 36, column: 44, scope: !131, inlinedAt: !664)
!666 = !DILocation(line: 206, column: 4, scope: !661)
!667 = !DILocation(line: 208, column: 27, scope: !668)
!668 = distinct !DILexicalBlock(scope: !661, file: !7, line: 208, column: 5)
!669 = !DILocation(line: 208, column: 5, scope: !668)
!670 = !DILocation(line: 212, column: 7, scope: !668)
!671 = !DILocation(line: 212, column: 31, scope: !668)
!672 = !DILocation(line: 212, column: 18, scope: !668)
!673 = !DILocalVariable(name: "k", scope: !668, file: !7, line: 208, type: !71)
!674 = !DILocation(line: 208, column: 9, scope: !661)
!675 = !DILocalVariable(name: "v", scope: !668, file: !7, line: 208, type: !102)
!676 = !DILocation(line: 209, column: 11, scope: !668)
!677 = !DILocation(line: 215, column: 44, scope: !596)
!678 = !DILocation(line: 215, column: 13, scope: !596)
!679 = !DILocation(line: 33, column: 1, scope: !138, inlinedAt: !680)
!680 = distinct !DILocation(line: 216, column: 16, scope: !596)
!681 = !DILocation(line: 33, column: 44, scope: !138, inlinedAt: !680)
!682 = !DILocation(line: 33, column: 28, scope: !138, inlinedAt: !680)
!683 = !DILocation(line: 216, column: 25, scope: !596)
!684 = !DILocation(line: 216, column: 5, scope: !596)
!685 = !DILocation(line: 178, column: 11, scope: !583)
!686 = !DILocation(line: 221, column: 11, scope: !521)
!687 = !DILocalVariable(name: "root", scope: !521, file: !7, line: 221, type: !214)
!688 = !DILocation(line: 221, column: 2, scope: !507)
!689 = !DILocation(line: 222, column: 7, scope: !521)
!690 = !DILocalVariable(name: "l", scope: !521, file: !7, line: 222, type: !210)
!691 = !DILocation(line: 222, column: 2, scope: !507)
!692 = !DILocation(line: 223, column: 3, scope: !521)
!693 = !DILocation(line: 223, column: 10, scope: !521)
!694 = !DILocation(line: 224, column: 10, scope: !521)
!695 = !DILocation(line: 224, column: 3, scope: !521)
!696 = !DILocation(line: 225, column: 10, scope: !521)
!697 = !DILocation(line: 225, column: 2, scope: !521)
!698 = distinct !DISubprogram(name: "assets.LoadFile..1command_line_arguments.Resources", linkageName: "command_line_arguments.Resources.LoadFile", scope: null, file: !7, line: 115, type: !699, isLocal: false, isDefinition: true, scopeLine: 115, isOptimized: false, unit: !1, retainedNodes: !3)
!699 = !DISubroutineType(types: !700)
!700 = !{!192, !204, !204, !71}
!701 = !DILocalVariable(name: "r", arg: 1, scope: !698, file: !7, line: 115, type: !204)
!702 = !DILocation(line: 115, column: 1, scope: !698)
!703 = !DILocalVariable(name: "f", arg: 2, scope: !698, file: !7, line: 115, type: !71)
!704 = !DILocation(line: 115, column: 30, scope: !698)
!705 = !DILocation(line: 116, column: 22, scope: !706)
!706 = distinct !DILexicalBlock(scope: !698, file: !7, line: 115, column: 1)
!707 = !DILocalVariable(name: "err", scope: !706, file: !7, line: 116, type: !192)
!708 = !DILocation(line: 116, column: 2, scope: !698)
!709 = !DILocation(line: 117, column: 9, scope: !706)
!710 = !DILocalVariable(name: "$ret12", scope: !698, file: !7, line: 115, type: !192)
!711 = !DILocation(line: 115, column: 40, scope: !698)
!712 = !DILocation(line: 118, column: 3, scope: !706)
!713 = !DILocation(line: 120, column: 2, scope: !706)
!714 = !DILocalVariable(name: "rs", scope: !706, file: !7, line: 120, type: !161)
!715 = !DILocation(line: 120, column: 2, scope: !698)
!716 = !DILocation(line: 120, column: 8, scope: !706)
!717 = !DILocation(line: 121, column: 37, scope: !706)
!718 = !DILocalVariable(name: "data", scope: !706, file: !7, line: 116, type: !354)
!719 = !DILocation(line: 121, column: 13, scope: !706)
!720 = !DILocation(line: 122, column: 9, scope: !706)
!721 = !DILocation(line: 123, column: 3, scope: !706)
!722 = !DILocation(line: 125, column: 2, scope: !723)
!723 = distinct !DILexicalBlock(scope: !706, file: !7, line: 125, column: 2)
!724 = !DILocation(line: 128, column: 4, scope: !725)
!725 = distinct !DILexicalBlock(scope: !723, file: !7, line: 125, column: 23)
!726 = !DILocation(line: 132, column: 11, scope: !725)
!727 = !DILocalVariable(name: "s", arg: 1, scope: !728, file: !7, line: 47, type: !71)
!728 = distinct !DISubprogram(name: "assets.parseBaseType", scope: null, file: !7, line: 47, type: !729, isLocal: true, isDefinition: true, scopeLine: 47, isOptimized: false, unit: !1, retainedNodes: !3)
!729 = !DISubroutineType(types: !730)
!730 = !{!118, !71}
!731 = !DILocation(line: 47, column: 20, scope: !728, inlinedAt: !732)
!732 = distinct !DILocation(line: 132, column: 11, scope: !725)
!733 = !DILocalVariable(name: "$ret6", scope: !728, file: !7, line: 47, type: !118)
!734 = !DILocation(line: 47, column: 30, scope: !728, inlinedAt: !732)
!735 = !DILocation(line: 49, column: 2, scope: !728, inlinedAt: !732)
!736 = !DILocation(line: 51, column: 2, scope: !728, inlinedAt: !732)
!737 = !DILocation(line: 53, column: 2, scope: !728, inlinedAt: !732)
!738 = !DILocation(line: 133, column: 11, scope: !725)
!739 = !DILocation(line: 135, column: 11, scope: !725)
!740 = !DILocation(line: 131, column: 16, scope: !725)
!741 = !DILocation(line: 130, column: 8, scope: !725)
!742 = !DILocation(line: 130, column: 9, scope: !725)
!743 = !DILocalVariable(name: "c", scope: !725, file: !7, line: 130, type: !113)
!744 = !DILocation(line: 130, column: 3, scope: !723)
!745 = !DILocalVariable(name: "ok", scope: !746, file: !7, line: 137, type: !66)
!746 = distinct !DILexicalBlock(scope: !725, file: !7, line: 137, column: 3)
!747 = !DILocation(line: 137, column: 6, scope: !725)
!748 = !DILocation(line: 137, column: 29, scope: !746)
!749 = !DILocation(line: 137, column: 16, scope: !746)
!750 = !DILocation(line: 137, column: 6, scope: !746)
!751 = !DILocation(line: 137, column: 3, scope: !746)
!752 = !DILocation(line: 138, column: 14, scope: !746)
!753 = !DILocation(line: 140, column: 17, scope: !725)
!754 = !DILocation(line: 140, column: 4, scope: !725)
!755 = !DILocation(line: 140, column: 26, scope: !725)
!756 = !DILocation(line: 138, column: 4, scope: !746)
!757 = !DILocation(line: 141, column: 12, scope: !725)
!758 = !DILocalVariable(name: "k", scope: !723, file: !7, line: 125, type: !71)
!759 = !DILocation(line: 125, column: 6, scope: !706)
!760 = !DILocalVariable(name: "v", scope: !723, file: !7, line: 125, type: !102)
!761 = !DILocation(line: 126, column: 20, scope: !725)
!762 = !DILocalVariable(name: "parts", scope: !725, file: !7, line: 126, type: !421)
!763 = !DILocation(line: 126, column: 3, scope: !723)
!764 = !DILocation(line: 127, column: 17, scope: !725)
!765 = !DILocation(line: 143, column: 2, scope: !706)
!766 = distinct !DISubprogram(name: "assets.AddProperty..1command_line_arguments.Level", linkageName: "command_line_arguments.Level.AddProperty", scope: null, file: !109, line: 87, type: !767, isLocal: false, isDefinition: true, scopeLine: 87, isOptimized: false, unit: !1, retainedNodes: !3)
!767 = !DISubroutineType(types: !768)
!768 = !{!192, !210, !210, !329, !71, !102}
!769 = !DILocalVariable(name: "v", arg: 4, scope: !766, file: !109, line: 87, type: !102)
!770 = !DILocation(line: 87, column: 60, scope: !766)
!771 = !DILocalVariable(name: "l", arg: 1, scope: !766, file: !109, line: 87, type: !210)
!772 = !DILocation(line: 87, column: 1, scope: !766)
!773 = !DILocalVariable(name: "node", arg: 2, scope: !766, file: !109, line: 87, type: !329)
!774 = !DILocation(line: 87, column: 29, scope: !766)
!775 = !DILocalVariable(name: "attrName", arg: 3, scope: !766, file: !109, line: 87, type: !71)
!776 = !DILocation(line: 87, column: 43, scope: !766)
!777 = !DILocalVariable(name: "ok", scope: !778, file: !109, line: 88, type: !66)
!778 = distinct !DILexicalBlock(scope: !766, file: !109, line: 87, column: 1)
!779 = !DILocation(line: 88, column: 2, scope: !766)
!780 = !DILocation(line: 88, column: 2, scope: !778)
!781 = !DILocalVariable(name: "c", scope: !778, file: !109, line: 88, type: !71)
!782 = !DILocation(line: 89, column: 5, scope: !778)
!783 = !DILocation(line: 90, column: 81, scope: !778)
!784 = !DILocation(line: 92, column: 13, scope: !778)
!785 = !DILocalVariable(name: "objects", scope: !778, file: !109, line: 92, type: !8)
!786 = !DILocation(line: 92, column: 2, scope: !766)
!787 = !DILocation(line: 93, column: 21, scope: !788)
!788 = distinct !DILexicalBlock(scope: !778, file: !109, line: 93, column: 2)
!789 = !DILocation(line: 90, column: 14, scope: !778)
!790 = !DILocation(line: 90, column: 3, scope: !778)
!791 = !DILocation(line: 93, column: 2, scope: !788)
!792 = !DILocation(line: 94, column: 14, scope: !788)
!793 = !DILocation(line: 94, column: 16, scope: !788)
!794 = !DILocalVariable(name: "v", scope: !788, file: !109, line: 93, type: !214)
!795 = !DILocation(line: 93, column: 6, scope: !778)
!796 = !DILocation(line: 96, column: 19, scope: !778)
!797 = !DILocation(line: 96, column: 2, scope: !778)
!798 = !DILocalVariable(name: "ctx", scope: !778, file: !109, line: 96, type: !799)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DICompositeType(tag: DW_TAG_structure_type, name: "Context", file: !109, line: 12, size: 256, align: 8, elements: !802)
!802 = !{!803, !849, !850, !851}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "fset", file: !109, line: 12, baseType: !804, size: 64, align: 64)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileSet", file: !109, line: 5, size: 512, align: 8, elements: !806)
!806 = !{!807, !820, !821, !848}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !109, line: 5, baseType: !808, size: 192, align: 32)
!808 = !DICompositeType(tag: DW_TAG_structure_type, name: "RWMutex", file: !7, line: 13, size: 192, align: 8, elements: !809)
!809 = !{!810, !816, !817, !818, !819}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !7, line: 13, baseType: !811, size: 64, align: 32)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex", file: !7, line: 13, size: 64, align: 8, elements: !812)
!812 = !{!813, !815}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !7, line: 13, baseType: !814, size: 32, align: 32)
!814 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "sema", file: !7, line: 13, baseType: !20, size: 32, align: 32, offset: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "writerSem", file: !7, line: 13, baseType: !20, size: 32, align: 32, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "readerSem", file: !7, line: 13, baseType: !20, size: 32, align: 32, offset: 96)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "readerCount", file: !7, line: 13, baseType: !814, size: 32, align: 32, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "readerWait", file: !7, line: 13, baseType: !814, size: 32, align: 32, offset: 160)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "base", file: !109, line: 5, baseType: !13, size: 64, align: 64, offset: 192)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "files", file: !109, line: 5, baseType: !822, size: 192, align: 64, offset: 256)
!822 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**File,int,int}", file: !38, size: 192, align: 8, elements: !823)
!823 = !{!824, !91, !92}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !825, size: 64, align: 64)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", file: !109, line: 5, size: 768, align: 8, elements: !828)
!828 = !{!829, !830, !820, !831, !832, !833, !838}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "set", file: !109, line: 5, baseType: !22, size: 64, align: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !109, line: 5, baseType: !71, size: 128, align: 64, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !109, line: 5, baseType: !13, size: 64, align: 64, offset: 256)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !109, line: 5, baseType: !811, size: 64, align: 32, offset: 320)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "lines", file: !109, line: 5, baseType: !834, size: 192, align: 64, offset: 384)
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*int,int,int}", file: !38, size: 192, align: 8, elements: !835)
!835 = !{!836, !91, !92}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !837, size: 64, align: 64)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "infos", file: !109, line: 5, baseType: !839, size: 192, align: 64, offset: 576)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.go/token.lineInfo,int,int}", file: !38, size: 192, align: 8, elements: !840)
!840 = !{!841, !91, !92}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !842, size: 64, align: 64)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DICompositeType(tag: DW_TAG_structure_type, name: ".go/token.lineInfo", file: !109, line: 5, size: 256, align: 8, elements: !844)
!844 = !{!845, !846, !847}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", file: !109, line: 5, baseType: !13, size: 64, align: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "Filename", file: !109, line: 5, baseType: !71, size: 128, align: 64, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "Line", file: !109, line: 5, baseType: !13, size: 64, align: 64, offset: 192)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "last", file: !109, line: 5, baseType: !826, size: 64, align: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "identifiers", file: !109, line: 12, baseType: !8, size: 64, align: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "returnSet", file: !109, line: 12, baseType: !66, size: 8, align: 8, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "returnValue", file: !109, line: 12, baseType: !852, size: 64, align: 64, offset: 192)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "Value", file: !7, line: 7, size: 192, align: 8, elements: !854)
!854 = !{!855, !896, !897}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !7, line: 7, baseType: !856, size: 64, align: 64)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DICompositeType(tag: DW_TAG_structure_type, name: ".reflect.rtype", file: !7, line: 7, size: 576, align: 8, elements: !858)
!858 = !{!859, !860, !861, !862, !863, !865, !866, !867, !872, !877, !878, !879, !895}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !7, line: 7, baseType: !26, size: 64, align: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ptrdata", file: !7, line: 7, baseType: !26, size: 64, align: 64, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "hash", file: !7, line: 7, baseType: !20, size: 32, align: 32, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "kind", file: !7, line: 7, baseType: !15, size: 8, align: 8, offset: 160)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "align", file: !7, line: 7, baseType: !864, size: 8, align: 8, offset: 168)
!864 = !DIBasicType(name: "int8", size: 8, encoding: DW_ATE_signed)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "fieldAlign", file: !7, line: 7, baseType: !15, size: 8, align: 8, offset: 176)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "_", file: !7, line: 7, baseType: !15, size: 8, align: 8, offset: 184)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", file: !7, line: 7, baseType: !868, size: 64, align: 64, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 7, size: 64, align: 8, elements: !870)
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 7, baseType: !55, size: 64, align: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "equalfn", file: !7, line: 7, baseType: !873, size: 64, align: 64, offset: 256)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 7, size: 64, align: 8, elements: !875)
!875 = !{!876}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 7, baseType: !63, size: 64, align: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "gcdata", file: !7, line: 7, baseType: !68, size: 64, align: 64, offset: 320)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "string", file: !7, line: 7, baseType: !70, size: 64, align: 64, offset: 384)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "uncommonType", file: !7, line: 7, baseType: !880, size: 64, align: 64, offset: 448)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DICompositeType(tag: DW_TAG_structure_type, name: ".reflect.uncommonType", file: !7, line: 7, size: 320, align: 8, elements: !882)
!882 = !{!883, !884, !885}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 7, baseType: !70, size: 64, align: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "pkgPath", file: !7, line: 7, baseType: !70, size: 64, align: 64, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "methods", file: !7, line: 7, baseType: !886, size: 192, align: 64, offset: 128)
!886 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.reflect.method,int,int}", file: !38, size: 192, align: 8, elements: !887)
!887 = !{!888, !91, !92}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !889, size: 64, align: 64)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: ".reflect.method", file: !7, line: 7, size: 320, align: 8, elements: !891)
!891 = !{!883, !884, !892, !893, !894}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", file: !7, line: 7, baseType: !22, size: 64, align: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !7, line: 7, baseType: !22, size: 64, align: 64, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "tfn", file: !7, line: 7, baseType: !22, size: 64, align: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "ptrToThis", file: !7, line: 7, baseType: !22, size: 64, align: 64, offset: 512)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", file: !7, line: 7, baseType: !22, size: 64, align: 64, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flag", file: !7, line: 7, baseType: !898, size: 64, align: 64, offset: 128)
!898 = !DIBasicType(name: ".reflect.flag", size: 64, encoding: DW_ATE_unsigned)
!899 = !DILocation(line: 96, column: 2, scope: !766)
!900 = !DILocalVariable(name: "err", scope: !778, file: !109, line: 96, type: !192)
!901 = !DILocation(line: 97, column: 9, scope: !778)
!902 = !DILocation(line: 98, column: 3, scope: !778)
!903 = !DILocalVariable(name: "$ret18", scope: !766, file: !109, line: 87, type: !192)
!904 = !DILocation(line: 87, column: 75, scope: !766)
!905 = !DILocation(line: 100, column: 40, scope: !778)
!906 = !DILocation(line: 100, column: 17, scope: !778)
!907 = !DILocalVariable(name: "src", scope: !778, file: !109, line: 100, type: !71)
!908 = !DILocation(line: 100, column: 2, scope: !766)
!909 = !DILocation(line: 101, column: 12, scope: !778)
!910 = !DILocation(line: 102, column: 16, scope: !778)
!911 = !DILocalVariable(name: "fset", scope: !778, file: !109, line: 102, type: !804)
!912 = !DILocation(line: 102, column: 2, scope: !766)
!913 = !DILocation(line: 103, column: 39, scope: !778)
!914 = !DILocation(line: 103, column: 19, scope: !778)
!915 = !DILocation(line: 103, column: 2, scope: !778)
!916 = !DILocalVariable(name: "t", scope: !778, file: !109, line: 103, type: !917)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DICompositeType(tag: DW_TAG_structure_type, name: "File", file: !109, line: 5, size: 1024, align: 8, elements: !920)
!920 = !{!921, !936, !937, !952, !974, !980, !999, !1004}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "Doc", file: !109, line: 5, baseType: !922, size: 64, align: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DICompositeType(tag: DW_TAG_structure_type, name: "CommentGroup", file: !109, line: 5, size: 192, align: 8, elements: !924)
!924 = !{!925}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "List", file: !109, line: 5, baseType: !926, size: 192, align: 64)
!926 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**Comment,int,int}", file: !38, size: 192, align: 8, elements: !927)
!927 = !{!928, !91, !92}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !929, size: 64, align: 64)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DICompositeType(tag: DW_TAG_structure_type, name: "Comment", file: !109, line: 5, size: 192, align: 8, elements: !932)
!932 = !{!933, !935}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "Slash", file: !109, line: 5, baseType: !934, size: 64, align: 64)
!934 = !DIBasicType(name: "Pos", size: 64, encoding: DW_ATE_signed)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "Text", file: !109, line: 5, baseType: !71, size: 128, align: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "Package", file: !109, line: 5, baseType: !934, size: 64, align: 64, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !109, line: 5, baseType: !938, size: 64, align: 64, offset: 128)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ident", file: !109, line: 5, size: 256, align: 8, elements: !940)
!940 = !{!941, !942, !943}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "NamePos", file: !109, line: 5, baseType: !934, size: 64, align: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !109, line: 5, baseType: !71, size: 128, align: 64, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "Obj", file: !109, line: 5, baseType: !944, size: 64, align: 64, offset: 192)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !109, line: 5, size: 576, align: 8, elements: !946)
!946 = !{!947, !942, !949, !950, !951}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "Kind", file: !109, line: 5, baseType: !948, size: 64, align: 64)
!948 = !DIBasicType(name: "ObjKind", size: 64, encoding: DW_ATE_signed)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "Decl", file: !109, line: 5, baseType: !102, size: 128, align: 64, offset: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "Data", file: !109, line: 5, baseType: !102, size: 128, align: 64, offset: 320)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "Type", file: !109, line: 5, baseType: !102, size: 128, align: 64, offset: 448)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "Decls", file: !109, line: 5, baseType: !953, size: 192, align: 64, offset: 192)
!953 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Decl,int,int}", file: !38, size: 192, align: 8, elements: !954)
!954 = !{!955, !91, !92}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !956, size: 64, align: 64)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DICompositeType(tag: DW_TAG_structure_type, name: "Decl", file: !109, line: 5, size: 128, align: 8, elements: !958)
!958 = !{!959, !973}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !109, line: 5, baseType: !960, size: 64, align: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)Pos,*func(*void)Pos,*func(*void)void}", file: !38, size: 256, align: 8, elements: !962)
!962 = !{!963, !964, !968, !969}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !38, line: 5, baseType: !41, size: 64, align: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "End", file: !38, line: 5, baseType: !965, size: 64, align: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!934, !22}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "Pos", file: !38, line: 5, baseType: !965, size: 64, align: 64, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "declNode", file: !38, line: 5, baseType: !970, size: 64, align: 64, offset: 192)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!23, !22}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !109, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "Scope", file: !109, line: 5, baseType: !975, size: 64, align: 64, offset: 384)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DICompositeType(tag: DW_TAG_structure_type, name: "Scope", file: !109, line: 5, size: 128, align: 8, elements: !977)
!977 = !{!978, !979}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "Outer", file: !109, line: 5, baseType: !22, size: 64, align: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "Objects", file: !109, line: 5, baseType: !8, size: 64, align: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "Imports", file: !109, line: 5, baseType: !981, size: 192, align: 64, offset: 448)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**ImportSpec,int,int}", file: !38, size: 192, align: 8, elements: !982)
!982 = !{!983, !91, !92}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !984, size: 64, align: 64)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImportSpec", file: !109, line: 5, size: 320, align: 8, elements: !987)
!987 = !{!921, !988, !989, !997, !998}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !109, line: 5, baseType: !938, size: 64, align: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "Path", file: !109, line: 5, baseType: !990, size: 64, align: 64, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DICompositeType(tag: DW_TAG_structure_type, name: "BasicLit", file: !109, line: 5, size: 256, align: 8, elements: !992)
!992 = !{!993, !994, !996}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ValuePos", file: !109, line: 5, baseType: !934, size: 64, align: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "Kind", file: !109, line: 5, baseType: !995, size: 64, align: 64, offset: 64)
!995 = !DIBasicType(name: "Token", size: 64, encoding: DW_ATE_signed)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !109, line: 5, baseType: !71, size: 128, align: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "Comment", file: !109, line: 5, baseType: !922, size: 64, align: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "EndPos", file: !109, line: 5, baseType: !934, size: 64, align: 64, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "Unresolved", file: !109, line: 5, baseType: !1000, size: 192, align: 64, offset: 640)
!1000 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**Ident,int,int}", file: !38, size: 192, align: 8, elements: !1001)
!1001 = !{!1002, !91, !92}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !1003, size: 64, align: 64)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "Comments", file: !109, line: 5, baseType: !1005, size: 192, align: 64, offset: 832)
!1005 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**CommentGroup,int,int}", file: !38, size: 192, align: 8, elements: !1006)
!1006 = !{!1007, !91, !92}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !38, line: 1, baseType: !1008, size: 64, align: 64)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!1009 = !DILocation(line: 103, column: 2, scope: !766)
!1010 = !DILocation(line: 104, column: 9, scope: !778)
!1011 = !DILocation(line: 105, column: 3, scope: !778)
!1012 = !DILocation(line: 107, column: 7, scope: !778)
!1013 = !DILocalVariable(name: "f", scope: !778, file: !109, line: 107, type: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !109, line: 107, size: 64, align: 8, elements: !1016)
!1016 = !{!1017}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !109, line: 107, baseType: !1018, size: 64, align: 64)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!1021}
!1021 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Value,error}", file: !38, size: 192, align: 8, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 23, baseType: !852, size: 64, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !38, line: 23, baseType: !192, size: 128, align: 64, offset: 64)
!1025 = !DILocation(line: 107, column: 2, scope: !766)
!1026 = !DILocalVariable(name: "ok", scope: !1027, file: !109, line: 111, type: !66)
!1027 = distinct !DILexicalBlock(scope: !778, file: !109, line: 111, column: 2)
!1028 = !DILocation(line: 111, column: 5, scope: !778)
!1029 = !DILocation(line: 111, column: 31, scope: !1027)
!1030 = !DILocation(line: 111, column: 15, scope: !1027)
!1031 = !DILocation(line: 111, column: 5, scope: !1027)
!1032 = !DILocation(line: 111, column: 41, scope: !1027)
!1033 = !DILocation(line: 112, column: 20, scope: !1027)
!1034 = !DILocation(line: 112, column: 31, scope: !1027)
!1035 = !DILocation(line: 112, column: 4, scope: !1027)
!1036 = !DILocation(line: 112, column: 29, scope: !1027)
!1037 = !DILocation(line: 114, column: 19, scope: !778)
!1038 = !DILocation(line: 114, column: 3, scope: !778)
!1039 = !DILocation(line: 114, column: 14, scope: !778)
!1040 = !DILocation(line: 114, column: 38, scope: !778)
!1041 = !DILocation(line: 115, column: 14, scope: !778)
!1042 = !DILocation(line: 116, column: 9, scope: !778)
!1043 = !DILocation(line: 117, column: 3, scope: !778)
!1044 = !DILocalVariable(name: "val", scope: !778, file: !109, line: 115, type: !852)
!1045 = !DILocation(line: 115, column: 2, scope: !766)
!1046 = !DILocation(line: 119, column: 9, scope: !778)
!1047 = !DILocation(line: 119, column: 2, scope: !778)
!1048 = distinct !DISubprogram(name: "assets.GetProperties..1command_line_arguments.Level", linkageName: "command_line_arguments.Level.GetProperties", scope: null, file: !109, line: 122, type: !1049, isLocal: false, isDefinition: true, scopeLine: 122, isOptimized: false, unit: !1, retainedNodes: !3)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!441, !210, !210, !71}
!1051 = !DILocalVariable(name: "l", arg: 1, scope: !1048, file: !109, line: 122, type: !210)
!1052 = !DILocation(line: 122, column: 1, scope: !1048)
!1053 = !DILocalVariable(name: "key", arg: 2, scope: !1048, file: !109, line: 122, type: !71)
!1054 = !DILocation(line: 122, column: 31, scope: !1048)
!1055 = !DILocalVariable(name: "$ret21", scope: !1048, file: !109, line: 122, type: !8)
!1056 = !DILocation(line: 122, column: 44, scope: !1048)
!1057 = !DILocalVariable(name: "$ret22", scope: !1048, file: !109, line: 122, type: !66)
!1058 = !DILocation(line: 122, column: 69, scope: !1048)
!1059 = !DILocalVariable(name: "val", scope: !1060, file: !109, line: 123, type: !8)
!1060 = distinct !DILexicalBlock(scope: !1048, file: !109, line: 123, column: 2)
!1061 = !DILocation(line: 123, column: 5, scope: !1048)
!1062 = !DILocalVariable(name: "ok", scope: !1060, file: !109, line: 123, type: !66)
!1063 = !DILocation(line: 123, column: 17, scope: !1060)
!1064 = !DILocation(line: 123, column: 5, scope: !1060)
!1065 = !DILocation(line: 123, column: 2, scope: !1060)
!1066 = !DILocation(line: 124, column: 3, scope: !1060)
!1067 = !DILocation(line: 126, column: 2, scope: !1048)
!1068 = distinct !DISubprogram(name: "assets.Root..1command_line_arguments.Level", linkageName: "command_line_arguments.Level.Root", scope: null, file: !109, line: 34, type: !1069, isLocal: false, isDefinition: true, scopeLine: 34, isOptimized: false, unit: !1, retainedNodes: !3)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!459, !210, !210}
!1071 = !DILocalVariable(name: "l", arg: 1, scope: !1068, file: !109, line: 34, type: !210)
!1072 = !DILocation(line: 34, column: 1, scope: !1068)
!1073 = !DILocalVariable(name: "$ret16", scope: !1068, file: !109, line: 34, type: !459)
!1074 = !DILocation(line: 34, column: 24, scope: !1068)
!1075 = !DILocation(line: 35, column: 10, scope: !1068)
!1076 = !DILocation(line: 35, column: 15, scope: !1068)
!1077 = !DILocation(line: 35, column: 2, scope: !1068)
!1078 = distinct !DISubprogram(name: "assets.visit..1command_line_arguments.Level", linkageName: "command_line_arguments.Level.visit", scope: null, file: !109, line: 54, type: !1079, isLocal: false, isDefinition: true, scopeLine: 54, isOptimized: false, unit: !1, retainedNodes: !3)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!23, !210, !210, !329}
!1081 = !DILocalVariable(name: "l", arg: 1, scope: !1078, file: !109, line: 54, type: !210)
!1082 = !DILocation(line: 54, column: 1, scope: !1078)
!1083 = !DILocalVariable(name: "node", arg: 2, scope: !1078, file: !109, line: 54, type: !329)
!1084 = !DILocation(line: 54, column: 23, scope: !1078)
!1085 = !DILocation(line: 55, column: 43, scope: !1078)
!1086 = !DILocation(line: 55, column: 11, scope: !1078)
!1087 = !DILocation(line: 56, column: 24, scope: !1088)
!1088 = distinct !DILexicalBlock(scope: !1078, file: !109, line: 56, column: 2)
!1089 = !DILocation(line: 56, column: 35, scope: !1088)
!1090 = !DILocation(line: 56, column: 2, scope: !1088)
!1091 = !DILocation(line: 60, column: 3, scope: !1088)
!1092 = !DILocation(line: 38, column: 23, scope: !1093, inlinedAt: !1096)
!1093 = distinct !DISubprogram(name: "assets.parseStringSlice", scope: null, file: !109, line: 38, type: !1094, isLocal: true, isDefinition: true, scopeLine: 38, isOptimized: false, unit: !1, retainedNodes: !3)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!421, !102}
!1096 = distinct !DILocation(line: 61, column: 25, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1088, file: !109, line: 61, column: 4)
!1098 = !DILocalVariable(name: "v", arg: 1, scope: !1093, file: !109, line: 38, type: !102)
!1099 = !DILocation(line: 39, column: 8, scope: !1100, inlinedAt: !1096)
!1100 = distinct !DILexicalBlock(scope: !1093, file: !109, line: 38, column: 1)
!1101 = !DILocalVariable(name: "ok", scope: !1100, file: !109, line: 40, type: !66)
!1102 = !DILocation(line: 40, column: 2, scope: !1093, inlinedAt: !1096)
!1103 = !DILocation(line: 40, column: 2, scope: !1100, inlinedAt: !1096)
!1104 = !DILocalVariable(name: "vv", scope: !1100, file: !109, line: 40, type: !98)
!1105 = !DILocation(line: 41, column: 5, scope: !1100, inlinedAt: !1096)
!1106 = !DILocation(line: 44, column: 2, scope: !1107, inlinedAt: !1096)
!1107 = distinct !DILexicalBlock(scope: !1100, file: !109, line: 44, column: 2)
!1108 = !DILocation(line: 42, column: 74, scope: !1100, inlinedAt: !1096)
!1109 = !DILocation(line: 42, column: 13, scope: !1100, inlinedAt: !1096)
!1110 = !DILocation(line: 42, column: 3, scope: !1100, inlinedAt: !1096)
!1111 = !DILocalVariable(name: "name", scope: !1107, file: !109, line: 44, type: !102)
!1112 = !DILocation(line: 44, column: 6, scope: !1100, inlinedAt: !1096)
!1113 = !DILocalVariable(name: "ok", scope: !1114, file: !109, line: 45, type: !66)
!1114 = distinct !DILexicalBlock(scope: !1107, file: !109, line: 44, column: 26)
!1115 = !DILocation(line: 45, column: 3, scope: !1107, inlinedAt: !1096)
!1116 = !DILocation(line: 45, column: 3, scope: !1114, inlinedAt: !1096)
!1117 = !DILocation(line: 46, column: 6, scope: !1114, inlinedAt: !1096)
!1118 = !DILocation(line: 47, column: 68, scope: !1114, inlinedAt: !1096)
!1119 = !DILocation(line: 49, column: 8, scope: !1114, inlinedAt: !1096)
!1120 = !DILocation(line: 47, column: 14, scope: !1114, inlinedAt: !1096)
!1121 = !DILocation(line: 47, column: 4, scope: !1114, inlinedAt: !1096)
!1122 = !DILocation(line: 49, column: 6, scope: !1114, inlinedAt: !1096)
!1123 = !DILocation(line: 51, column: 2, scope: !1100, inlinedAt: !1096)
!1124 = !DILocation(line: 61, column: 4, scope: !1097)
!1125 = !DILocation(line: 71, column: 3, scope: !1088)
!1126 = !DILocalVariable(name: "name", scope: !1097, file: !109, line: 61, type: !71)
!1127 = !DILocation(line: 61, column: 8, scope: !1088)
!1128 = !DILocalVariable(name: "ok", scope: !1129, file: !109, line: 62, type: !66)
!1129 = distinct !DILexicalBlock(scope: !1097, file: !109, line: 62, column: 5)
!1130 = !DILocation(line: 62, column: 8, scope: !1097)
!1131 = !DILocation(line: 62, column: 18, scope: !1129)
!1132 = !DILocation(line: 62, column: 8, scope: !1129)
!1133 = !DILocalVariable(name: "n", scope: !1129, file: !109, line: 62, type: !214)
!1134 = !DILocation(line: 62, column: 5, scope: !1129)
!1135 = !DILocation(line: 63, column: 43, scope: !1129)
!1136 = !DILocation(line: 63, column: 15, scope: !1129)
!1137 = !DILocation(line: 64, column: 7, scope: !1129)
!1138 = !DILocation(line: 65, column: 10, scope: !1129)
!1139 = !DILocation(line: 65, column: 21, scope: !1129)
!1140 = !DILocation(line: 65, column: 32, scope: !1129)
!1141 = !DILocation(line: 66, column: 31, scope: !1129)
!1142 = !DILocation(line: 66, column: 41, scope: !1129)
!1143 = !DILocation(line: 66, column: 22, scope: !1129)
!1144 = !DILocation(line: 66, column: 7, scope: !1129)
!1145 = !DILocation(line: 67, column: 15, scope: !1129)
!1146 = !DILocation(line: 67, column: 7, scope: !1129)
!1147 = !DILocation(line: 67, column: 24, scope: !1129)
!1148 = !DILocation(line: 68, column: 14, scope: !1129)
!1149 = !DILocation(line: 68, column: 7, scope: !1129)
!1150 = !DILocation(line: 72, column: 29, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1088, file: !109, line: 72, column: 4)
!1152 = !DILocation(line: 72, column: 4, scope: !1151)
!1153 = !DILocation(line: 73, column: 16, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1151, file: !109, line: 73, column: 5)
!1155 = !DILocalVariable(name: "err", scope: !1154, file: !109, line: 73, type: !192)
!1156 = !DILocation(line: 73, column: 8, scope: !1151)
!1157 = !DILocation(line: 74, column: 12, scope: !1154)
!1158 = !DILocation(line: 74, column: 6, scope: !1154)
!1159 = !DILocalVariable(name: "name", scope: !1151, file: !109, line: 72, type: !71)
!1160 = !DILocation(line: 72, column: 8, scope: !1088)
!1161 = !DILocalVariable(name: "value", scope: !1151, file: !109, line: 72, type: !102)
!1162 = !DILocation(line: 73, column: 53, scope: !1154)
!1163 = !DILocalVariable(name: "k", scope: !1088, file: !109, line: 56, type: !71)
!1164 = !DILocation(line: 56, column: 6, scope: !1078)
!1165 = !DILocalVariable(name: "v", scope: !1088, file: !109, line: 56, type: !102)
!1166 = !DILocation(line: 57, column: 18, scope: !1088)
!1167 = !DILocation(line: 58, column: 3, scope: !1088)
!1168 = distinct !DISubprogram(name: "assets.New", linkageName: "command_line_arguments.New", scope: null, file: !7, line: 76, type: !1169, isLocal: false, isDefinition: true, scopeLine: 76, isOptimized: false, unit: !1, retainedNodes: !3)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!204}
!1171 = !DILocalVariable(name: "$ret7", scope: !1168, file: !7, line: 76, type: !204)
!1172 = !DILocation(line: 76, column: 12, scope: !1168)
!1173 = !DILocation(line: 78, column: 15, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1168, file: !7, line: 76, column: 1)
!1175 = !DILocation(line: 79, column: 15, scope: !1174)
!1176 = !DILocation(line: 77, column: 7, scope: !1174)
!1177 = !DILocation(line: 77, column: 8, scope: !1174)
!1178 = !DILocalVariable(name: "a", scope: !1174, file: !7, line: 77, type: !204)
!1179 = !DILocation(line: 77, column: 2, scope: !1168)
!1180 = !DILocation(line: 81, column: 2, scope: !1174)
!1181 = distinct !DISubprogram(name: "assets.LoadFromFile", linkageName: "command_line_arguments.LoadFromFile", scope: null, file: !7, line: 84, type: !1182, isLocal: false, isDefinition: true, scopeLine: 84, isOptimized: false, unit: !1, retainedNodes: !3)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!510, !71}
!1184 = !DILocalVariable(name: "folder", arg: 1, scope: !1181, file: !7, line: 84, type: !71)
!1185 = !DILocation(line: 84, column: 19, scope: !1181)
!1186 = !DILocalVariable(name: "$ret8", scope: !1181, file: !7, line: 84, type: !459)
!1187 = !DILocation(line: 84, column: 35, scope: !1181)
!1188 = !DILocation(line: 85, column: 7, scope: !1189)
!1189 = distinct !DILexicalBlock(scope: !1181, file: !7, line: 84, column: 1)
!1190 = !DILocalVariable(name: "r", scope: !1189, file: !7, line: 85, type: !204)
!1191 = !DILocation(line: 85, column: 2, scope: !1181)
!1192 = !DILocation(line: 86, column: 10, scope: !1189)
!1193 = !DILocation(line: 86, column: 2, scope: !1189)
!1194 = distinct !DISubprogram(name: "assets.parseAttrs", scope: null, file: !7, line: 96, type: !1195, isLocal: true, isDefinition: true, scopeLine: 96, isOptimized: false, unit: !1, retainedNodes: !3)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!8, !102}
!1197 = !DILocalVariable(name: "a", arg: 1, scope: !1194, file: !7, line: 96, type: !102)
!1198 = !DILocation(line: 96, column: 17, scope: !1194)
!1199 = !DILocalVariable(name: "$ret11", scope: !1194, file: !7, line: 96, type: !8)
!1200 = !DILocation(line: 96, column: 32, scope: !1194)
!1201 = !DILocation(line: 97, column: 11, scope: !1202)
!1202 = distinct !DILexicalBlock(scope: !1194, file: !7, line: 96, column: 1)
!1203 = !DILocalVariable(name: "attrs", scope: !1202, file: !7, line: 97, type: !8)
!1204 = !DILocation(line: 97, column: 2, scope: !1194)
!1205 = !DILocation(line: 98, column: 7, scope: !1202)
!1206 = !DILocation(line: 99, column: 3, scope: !1202)
!1207 = !DILocalVariable(name: "aa", scope: !1202, file: !7, line: 101, type: !8)
!1208 = !DILocation(line: 101, column: 2, scope: !1194)
!1209 = !DILocalVariable(name: "ok", scope: !1202, file: !7, line: 101, type: !66)
!1210 = !DILocation(line: 101, column: 2, scope: !1202)
!1211 = !DILocation(line: 102, column: 5, scope: !1202)
!1212 = !DILocation(line: 103, column: 54, scope: !1202)
!1213 = !DILocation(line: 105, column: 2, scope: !1214)
!1214 = distinct !DILexicalBlock(scope: !1202, file: !7, line: 105, column: 2)
!1215 = !DILocation(line: 103, column: 13, scope: !1202)
!1216 = !DILocation(line: 103, column: 3, scope: !1202)
!1217 = !DILocation(line: 108, column: 4, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1214, file: !7, line: 105, column: 23)
!1219 = !DILocation(line: 110, column: 14, scope: !1218)
!1220 = !DILocalVariable(name: "k", scope: !1214, file: !7, line: 105, type: !102)
!1221 = !DILocation(line: 105, column: 6, scope: !1202)
!1222 = !DILocalVariable(name: "ok", scope: !1218, file: !7, line: 106, type: !66)
!1223 = !DILocation(line: 106, column: 3, scope: !1214)
!1224 = !DILocation(line: 106, column: 3, scope: !1218)
!1225 = !DILocation(line: 107, column: 6, scope: !1218)
!1226 = !DILocation(line: 112, column: 2, scope: !1202)
!1227 = distinct !DISubprogram(name: "assets.NewLevel", linkageName: "command_line_arguments.NewLevel", scope: null, file: !109, line: 25, type: !1228, isLocal: false, isDefinition: true, scopeLine: 25, isOptimized: false, unit: !1, retainedNodes: !3)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!210, !214, !8}
!1230 = !DILocalVariable(name: "root", arg: 1, scope: !1227, file: !109, line: 25, type: !214)
!1231 = !DILocation(line: 25, column: 15, scope: !1227)
!1232 = !DILocalVariable(name: "objects", arg: 2, scope: !1227, file: !109, line: 25, type: !8)
!1233 = !DILocation(line: 25, column: 28, scope: !1227)
!1234 = !DILocalVariable(name: "$ret15", scope: !1227, file: !109, line: 25, type: !210)
!1235 = !DILocation(line: 25, column: 55, scope: !1227)
!1236 = !DILocation(line: 29, column: 15, scope: !1227)
!1237 = !DILocation(line: 30, column: 15, scope: !1227)
!1238 = !DILocation(line: 26, column: 9, scope: !1227)
!1239 = !DILocation(line: 26, column: 10, scope: !1227)
!1240 = !DILocation(line: 26, column: 2, scope: !1227)
!1241 = distinct !DISubprogram(name: "assets.func1", scope: null, file: !109, line: 107, type: !1019, isLocal: true, isDefinition: true, scopeLine: 107, isOptimized: false, unit: !1, retainedNodes: !3)
!1242 = !DILocalVariable(name: "$ret19", scope: !1241, file: !109, line: 107, type: !852)
!1243 = !DILocation(line: 107, column: 15, scope: !1241)
!1244 = !DILocation(line: 109, column: 19, scope: !1241)
!1245 = !DILocation(line: 109, column: 20, scope: !1241)
!1246 = !DILocation(line: 109, column: 26, scope: !1241)
!1247 = !DILocation(line: 109, column: 29, scope: !1241)
!1248 = !DILocation(line: 109, column: 45, scope: !1241)
!1249 = !DILocation(line: 109, column: 10, scope: !1241)
!1250 = !DILocation(line: 109, column: 13, scope: !1241)
!1251 = !DILocation(line: 109, column: 3, scope: !1241)
!1252 = distinct !DISubprogram(name: "assets.SetNodeAttr", linkageName: "command_line_arguments.SetNodeAttr", scope: null, file: !109, line: 129, type: !1253, isLocal: false, isDefinition: true, scopeLine: 129, isOptimized: false, unit: !1, retainedNodes: !3)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!192, !329, !71, !852}
!1255 = !DILocalVariable(name: "node", arg: 1, scope: !1252, file: !109, line: 129, type: !329)
!1256 = !DILocation(line: 129, column: 18, scope: !1252)
!1257 = !DILocalVariable(name: "k", arg: 2, scope: !1252, file: !109, line: 129, type: !71)
!1258 = !DILocation(line: 129, column: 32, scope: !1252)
!1259 = !DILocalVariable(name: "v", arg: 3, scope: !1252, file: !109, line: 129, type: !852)
!1260 = !DILocation(line: 129, column: 42, scope: !1252)
!1261 = !DILocation(line: 130, column: 7, scope: !1252)
!1262 = !DILocation(line: 130, column: 5, scope: !1252)
!1263 = !DILocation(line: 130, column: 22, scope: !1252)
!1264 = !DILocation(line: 130, column: 30, scope: !1252)
!1265 = !DILocation(line: 130, column: 2, scope: !1252)
!1266 = !DILocation(line: 130, column: 49, scope: !1252)
!1267 = !DILocation(line: 131, column: 14, scope: !1252)
!1268 = !DILocation(line: 131, column: 3, scope: !1252)
!1269 = !DILocation(line: 133, column: 10, scope: !1252)
!1270 = !DILocation(line: 133, column: 2, scope: !1252)
!1271 = !DILocation(line: 134, column: 2, scope: !1252)
!1272 = !DILocation(line: 135, column: 7, scope: !1252)
!1273 = !DILocation(line: 135, column: 27, scope: !1252)
!1274 = !DILocation(line: 135, column: 18, scope: !1252)
!1275 = !DILocation(line: 136, column: 2, scope: !1252)
!1276 = !DILocalVariable(name: "$ret23", scope: !1252, file: !109, line: 129, type: !192)
!1277 = !DILocation(line: 129, column: 60, scope: !1252)
!1278 = !DILocation(line: 145, column: 2, scope: !1252)
!1279 = !DILocation(line: 137, column: 7, scope: !1252)
!1280 = !DILocation(line: 137, column: 27, scope: !1252)
!1281 = !DILocation(line: 137, column: 18, scope: !1252)
!1282 = !DILocation(line: 138, column: 2, scope: !1252)
!1283 = !DILocation(line: 139, column: 7, scope: !1252)
!1284 = !DILocation(line: 139, column: 27, scope: !1252)
!1285 = !DILocation(line: 139, column: 18, scope: !1252)
!1286 = !DILocation(line: 140, column: 2, scope: !1252)
!1287 = !DILocation(line: 141, column: 7, scope: !1252)
!1288 = !DILocation(line: 141, column: 27, scope: !1252)
!1289 = !DILocation(line: 141, column: 18, scope: !1252)
!1290 = !DILocation(line: 143, column: 69, scope: !1252)
!1291 = !DILocation(line: 143, column: 62, scope: !1252)
!1292 = !DILocation(line: 143, column: 14, scope: !1252)
!1293 = !DILocation(line: 143, column: 3, scope: !1252)
!1294 = distinct !DISubprogram(name: "assets.command_line_arguments..init0", linkageName: "command_line_arguments.command_line_arguments..init0", scope: null, file: !32, line: 13, type: !180, isLocal: false, isDefinition: true, scopeLine: 13, isOptimized: false, unit: !1, retainedNodes: !3)
!1295 = !DILocation(line: 14, column: 15, scope: !1294)
!1296 = !DILocation(line: 15, column: 15, scope: !1294)
!1297 = !DILocation(line: 15, column: 13, scope: !1294)
	.text
	.file	"gomodule"

	.section ".go_export","e",@progbits
	.ascii "v2;\n"
	.ascii "package "
	.ascii "assets"
	.ascii ";\n"
	.ascii "pkgpath "
	.ascii "command-line-arguments"
	.ascii ";\n"
	.ascii "import "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt"
	.ascii " \""
	.ascii "fmt"
	.ascii "\";\n"
	.ascii "import "
	.ascii "eval"
	.ascii " "
	.ascii "github.com/ChrisRx/dungeonfs/pkg/eval"
	.ascii " \""
	.ascii "github.com/ChrisRx/dungeonfs/pkg/eval"
	.ascii "\";\n"
	.ascii "import "
	.ascii "fs"
	.ascii " "
	.ascii "github.com/ChrisRx/dungeonfs/pkg/game/fs"
	.ascii " \""
	.ascii "github.com/ChrisRx/dungeonfs/pkg/game/fs"
	.ascii "\";\n"
	.ascii "import "
	.ascii "core"
	.ascii " "
	.ascii "github.com/ChrisRx/dungeonfs/pkg/game/fs/core"
	.ascii " \""
	.ascii "github.com/ChrisRx/dungeonfs/pkg/game/fs/core"
	.ascii "\";\n"
	.ascii "import "
	.ascii "logging"
	.ascii " "
	.ascii "github.com/ChrisRx/dungeonfs/pkg/logging"
	.ascii " \""
	.ascii "github.com/ChrisRx/dungeonfs/pkg/logging"
	.ascii "\";\n"
	.ascii "import "
	.ascii "ast"
	.ascii " "
	.ascii "go/ast"
	.ascii " \""
	.ascii "go/ast"
	.ascii "\";\n"
	.ascii "import "
	.ascii "parser"
	.ascii " "
	.ascii "go/parser"
	.ascii " \""
	.ascii "go/parser"
	.ascii "\";\n"
	.ascii "import "
	.ascii "token"
	.ascii " "
	.ascii "go/token"
	.ascii " \""
	.ascii "go/token"
	.ascii "\";\n"
	.ascii "import "
	.ascii "yaml"
	.ascii " "
	.ascii "gopkg.in/yaml.v2"
	.ascii " \""
	.ascii "gopkg.in/yaml.v2"
	.ascii "\";\n"
	.ascii "import "
	.ascii "ioutil"
	.ascii " "
	.ascii "io/ioutil"
	.ascii " \""
	.ascii "io/ioutil"
	.ascii "\";\n"
	.ascii "import "
	.ascii "filepath"
	.ascii " "
	.ascii "path/filepath"
	.ascii " \""
	.ascii "path/filepath"
	.ascii "\";\n"
	.ascii "import "
	.ascii "reflect"
	.ascii " "
	.ascii "reflect"
	.ascii " \""
	.ascii "reflect"
	.ascii "\";\n"
	.ascii "import "
	.ascii "strings"
	.ascii " "
	.ascii "strings"
	.ascii " \""
	.ascii "strings"
	.ascii "\";\n"
	.ascii "init"
	.ascii " "
	.ascii "assets"
	.ascii " "
	.ascii "command_line_arguments..import"
	.ascii " "
	.ascii "fuse"
	.ascii " "
	.ascii "bazil_org_fuse..import"
	.ascii " "
	.ascii "fs"
	.ascii " "
	.ascii "bazil_org_fuse_fs..import"
	.ascii " "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio..import"
	.ascii " "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes..import"
	.ascii " "
	.ascii "context"
	.ascii " "
	.ascii "context..import"
	.ascii " "
	.ascii "base64"
	.ascii " "
	.ascii "encoding_base64..import"
	.ascii " "
	.ascii "binary"
	.ascii " "
	.ascii "encoding_binary..import"
	.ascii " "
	.ascii "json"
	.ascii " "
	.ascii "encoding_json..import"
	.ascii " "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt..import"
	.ascii " "
	.ascii "eval"
	.ascii " "
	.ascii "github_com_ChrisRx_dungeonfs_pkg_eval..import"
	.ascii " "
	.ascii "core"
	.ascii " "
	.ascii "github_com_ChrisRx_dungeonfs_pkg_game_fs_core..import"
	.ascii " "
	.ascii "logging"
	.ascii " "
	.ascii "github_com_ChrisRx_dungeonfs_pkg_logging..import"
	.ascii " "
	.ascii "ast"
	.ascii " "
	.ascii "go_ast..import"
	.ascii " "
	.ascii "parser"
	.ascii " "
	.ascii "go_parser..import"
	.ascii " "
	.ascii "scanner"
	.ascii " "
	.ascii "go_scanner..import"
	.ascii " "
	.ascii "token"
	.ascii " "
	.ascii "go_token..import"
	.ascii " "
	.ascii "context"
	.ascii " "
	.ascii "golang_org_x_net_context..import"
	.ascii " "
	.ascii "yaml"
	.ascii " "
	.ascii "gopkg_in_yaml_v2..import"
	.ascii " "
	.ascii "poll"
	.ascii " "
	.ascii "internal_poll..import"
	.ascii " "
	.ascii "testlog"
	.ascii " "
	.ascii "internal_testlog..import"
	.ascii " "
	.ascii "io"
	.ascii " "
	.ascii "io..import"
	.ascii " "
	.ascii "ioutil"
	.ascii " "
	.ascii "io_ioutil..import"
	.ascii " "
	.ascii "log"
	.ascii " "
	.ascii "log..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "math_rand..import"
	.ascii " "
	.ascii "net"
	.ascii " "
	.ascii "net..import"
	.ascii " "
	.ascii "os"
	.ascii " "
	.ascii "os..import"
	.ascii " "
	.ascii "exec"
	.ascii " "
	.ascii "os_exec..import"
	.ascii " "
	.ascii "signal"
	.ascii " "
	.ascii "os_signal..import"
	.ascii " "
	.ascii "path"
	.ascii " "
	.ascii "path..import"
	.ascii " "
	.ascii "filepath"
	.ascii " "
	.ascii "path_filepath..import"
	.ascii " "
	.ascii "reflect"
	.ascii " "
	.ascii "reflect..import"
	.ascii " "
	.ascii "regexp"
	.ascii " "
	.ascii "regexp..import"
	.ascii " "
	.ascii "syntax"
	.ascii " "
	.ascii "regexp_syntax..import"
	.ascii " "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime..import"
	.ascii " "
	.ascii "sys"
	.ascii " "
	.ascii "runtime_internal_sys..import"
	.ascii " "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv..import"
	.ascii " "
	.ascii "sync"
	.ascii " "
	.ascii "sync..import"
	.ascii " "
	.ascii "syscall"
	.ascii " "
	.ascii "syscall..import"
	.ascii " "
	.ascii "time"
	.ascii " "
	.ascii "time..import"
	.ascii " "
	.ascii "unicode"
	.ascii " "
	.ascii "unicode..import"
	.ascii ";\n"
	.ascii "init_graph"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "40"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "39"
	.ascii " "
	.ascii "38"
	.ascii ";\n"
	.ascii "const "
	.ascii "BaseComponent"
	.ascii " "
	.ascii "<type 1 "
	.ascii "\"ComponentType\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii " "
	.ascii "= "
	.ascii "3"
	.ascii " "
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 2 "
	.ascii "\"Component\" "
	.ascii "<type 3 "
	.ascii "struct { "
	.ascii ".command-line-arguments.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.t"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii ".command-line-arguments.attrs"
	.ascii " "
	.ascii "<type 4 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 5 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.base"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.bases"
	.ascii " "
	.ascii "<type 6 "
	.ascii "["
	.ascii "] "
	.ascii "<type 7 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 8 "
	.ascii "*"
	.ascii "<type 2>"
	.ascii ">"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 8>"
	.ascii ") "
	.ascii "Type"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 1>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 8>"
	.ascii ") "
	.ascii "Base"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 8>"
	.ascii ") "
	.ascii "Bases"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 9 "
	.ascii "["
	.ascii "] "
	.ascii "<type 8>"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 1>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 10 "
	.ascii "\"Components\" "
	.ascii "<type 11 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 8>"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 10>"
	.ascii ") "
	.ascii "LookupBaseType"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 8>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii "const "
	.ascii "DirComponent"
	.ascii " "
	.ascii "<type 1>"
	.ascii " "
	.ascii "= "
	.ascii "2"
	.ascii " "
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 12 "
	.ascii "\"Entity\" "
	.ascii "<type 13 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 14 "
	.ascii "\"github.com/ChrisRx/dungeonfs/pkg/game/fs.Node\" "
	.ascii "<type 15 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 16 "
	.ascii "\"bazil.org/fuse/fs.Node\" "
	.ascii "\""
	.ascii "fs"
	.ascii "\" "
	.ascii "<type 17 "
	.ascii "interface { "
	.ascii "Attr"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 18 "
	.ascii "\"golang.org/x/net/context.Context\" "
	.ascii "\""
	.ascii "context"
	.ascii "\" "
	.ascii "= "
	.ascii "<type 19 "
	.ascii "\"context.Context\" "
	.ascii "\""
	.ascii "context"
	.ascii "\" "
	.ascii "<type 20 "
	.ascii "interface { "
	.ascii "Deadline"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "deadline"
	.ascii " "
	.ascii "<type 21 "
	.ascii "\"time.Time\" "
	.ascii "\""
	.ascii "time"
	.ascii "\" "
	.ascii "<type 22 "
	.ascii "struct { "
	.ascii ".time.wall"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".time.ext"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.loc"
	.ascii " "
	.ascii "<type 23 "
	.ascii "*"
	.ascii "<type 24 "
	.ascii "\"time.Location\" "
	.ascii "<type 25 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.zone"
	.ascii " "
	.ascii "<type 26 "
	.ascii "["
	.ascii "] "
	.ascii "<type 27 "
	.ascii "\".time.zone\" "
	.ascii "<type 28 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".time.isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.tx"
	.ascii " "
	.ascii "<type 29 "
	.ascii "["
	.ascii "] "
	.ascii "<type 30 "
	.ascii "\".time.zoneTrans\" "
	.ascii "<type 31 "
	.ascii "struct { "
	.ascii ".time.when"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.index"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".time.isstd"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".time.isutc"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.cacheStart"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheEnd"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheZone"
	.ascii " "
	.ascii "<type 32 "
	.ascii "*"
	.ascii "<type 27>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33 "
	.ascii "*"
	.ascii "<type 24>"
	.ascii ">"
	.ascii ") "
	.ascii ".time.firstZoneUsed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.lookupName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "unix"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.lookup"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "start"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "end"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.get"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 33>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii ".time.lookupFirstZone"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 33>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "YearDay"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "UnixNano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "MarshalBinary"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 34 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Nanosecond"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Minute"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35 "
	.ascii "*"
	.ascii "<type 21>"
	.ascii ">"
	.ascii ") "
	.ascii "GobDecode"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 36 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii ".time.locabs"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "abs"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.stripMono"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii ".time.abs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Zone"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 23>"
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.setMono"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 37 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Weekday"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 38 "
	.ascii "\"time.Weekday\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 38>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Location"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 23>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii "UnmarshalJSON"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 39 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.sec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Sub"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type 40 "
	.ascii "\"time.Duration\" "
	.ascii "<type -4>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ") "
	.ascii "Nanoseconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ") "
	.ascii "Minutes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 40>"
	.ascii ")"
	.ascii " "
	.ascii "<type 40>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ") "
	.ascii "Seconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ") "
	.ascii "Hours"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 40>"
	.ascii ")"
	.ascii " "
	.ascii "<type 40>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Day"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii "UnmarshalBinary"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 41 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Local"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "After"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.addSec"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.setLoc"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 23>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "GobEncode"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 42 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Before"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.unixSec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Date"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 43 "
	.ascii "\"time.Month\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 43>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 44 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 45 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "IsZero"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Format"
	.ascii " ("
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 40>"
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Year"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "UTC"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii ".time.date"
	.ascii " ("
	.ascii "full"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 43>"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "yday"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "ISOWeek"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "week"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "AppendFormat"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 46 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 47 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.nsec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "AddDate"
	.ascii " ("
	.ascii "years"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "months"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "days"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Month"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 43>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Second"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 35>"
	.ascii ") "
	.ascii ".time.mono"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Clock"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "hour"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "min"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "sec"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "Hour"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Done"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 48 "
	.ascii "chan "
	.ascii "<- "
	.ascii "<type 49 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Err"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "Value"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 50 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 51 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "attr"
	.ascii " "
	.ascii "<type 52 "
	.ascii "*"
	.ascii "<type 53 "
	.ascii "\"bazil.org/fuse.Attr\" "
	.ascii "\""
	.ascii "fuse"
	.ascii "\" "
	.ascii "<type 54 "
	.ascii "struct { "
	.ascii "Valid"
	.ascii " "
	.ascii "<type 40>"
	.ascii "; "
	.ascii "Inode"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Blocks"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Atime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Mtime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Ctime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Crtime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type 55 "
	.ascii "\"os.FileMode\" "
	.ascii "\""
	.ascii "os"
	.ascii "\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 55>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 55>"
	.ascii ") "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 55>"
	.ascii ") "
	.ascii "IsRegular"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 55>"
	.ascii ") "
	.ascii "Perm"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 55>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Nlink"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Rdev"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "BlockSize"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 53>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 56 "
	.ascii "*"
	.ascii "<type 53>"
	.ascii ">"
	.ascii ") "
	.ascii ".bazil.org/fuse.attr"
	.ascii " ("
	.ascii "out"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 57 "
	.ascii "*"
	.ascii "<type 58 "
	.ascii "\".bazil.org/fuse.attr\" "
	.ascii "<type 59 "
	.ascii "struct { "
	.ascii "Ino"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Blocks"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Atime"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Mtime"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Ctime"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "AtimeNsec"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "MtimeNsec"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "CtimeNsec"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Nlink"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Rdev"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Blksize"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".bazil.org/fuse.padding"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 60 "
	.ascii "*"
	.ascii "<type 58>"
	.ascii ">"
	.ascii ") "
	.ascii "Crtime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 60>"
	.ascii ") "
	.ascii "SetCrtime"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type -8>"
	.ascii ", "
	.ascii "ns"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 60>"
	.ascii ") "
	.ascii "SetFlags"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "proto"
	.ascii " "
	.ascii "<type 61 "
	.ascii "\"bazil.org/fuse.Protocol\" "
	.ascii "<type 62 "
	.ascii "struct { "
	.ascii "Major"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Minor"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii ".bazil.org/fuse.is710"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii ".bazil.org/fuse.is712"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "GE"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 61>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "HasUmask"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "HasInvalidate"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "LT"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 61>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii ".bazil.org/fuse.is79"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "HasGetattrFlags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "HasAttrBlockSize"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "HasOpenNonSeekable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "HasReadWriteFlags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "p"
	.ascii " "
	.ascii "<type 61>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "New"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 63 "
	.ascii "\"github.com/ChrisRx/dungeonfs/pkg/game/fs.NodeType\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 14>"
	.ascii "; "
	.ascii "MetaData"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 64 "
	.ascii "\"github.com/ChrisRx/dungeonfs/pkg/game/fs.NodeMetaData\" "
	.ascii "<type 65 "
	.ascii "interface { "
	.ascii "Get"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 66 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "GetString"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "GetBool"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "GetBytes"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 67 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Set"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 68 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii "; "
	.ascii "Iter"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 69 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 70 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Path"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "..."
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "IsFile"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Content"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 71 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Parent"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "..."
	.ascii "<type 14>"
	.ascii ")"
	.ascii " "
	.ascii "<type 14>"
	.ascii "; "
	.ascii "Children"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 72 "
	.ascii "\"github.com/ChrisRx/dungeonfs/pkg/game/fs.Nodes\" "
	.ascii "<type 73 "
	.ascii "interface { "
	.ascii "Iter"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 74 "
	.ascii "["
	.ascii "] "
	.ascii "<type 14>"
	.ascii ">"
	.ascii "; "
	.ascii "Directories"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 75 "
	.ascii "["
	.ascii "] "
	.ascii "<type 14>"
	.ascii ">"
	.ascii "; "
	.ascii "Files"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 76 "
	.ascii "["
	.ascii "] "
	.ascii "<type 14>"
	.ascii ">"
	.ascii "; "
	.ascii "Get"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 14>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Delete"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii "; "
	.ascii "Set"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 14>"
	.ascii ")"
	.ascii "; "
	.ascii "Exists"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Delete"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Entry"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 77 "
	.ascii "\"bazil.org/fuse.Dirent\" "
	.ascii "<type 78 "
	.ascii "struct { "
	.ascii "Inode"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 79 "
	.ascii "\"bazil.org/fuse.DirentType\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 79>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "const "
	.ascii "FileComponent"
	.ascii " "
	.ascii "<type 1>"
	.ascii " "
	.ascii "= "
	.ascii "1"
	.ascii " "
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 80 "
	.ascii "\"Level\" "
	.ascii "<type 81 "
	.ascii "struct { "
	.ascii ".command-line-arguments.root"
	.ascii " "
	.ascii "<type 12>"
	.ascii "; "
	.ascii ".command-line-arguments.objects"
	.ascii " "
	.ascii "<type 82 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 12>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.paths"
	.ascii " "
	.ascii "<type 82>"
	.ascii "; "
	.ascii ".command-line-arguments.properties"
	.ascii " "
	.ascii "<type 83 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 84 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 85 "
	.ascii "\"PropertyFunc\" "
	.ascii "<type 86 "
	.ascii "("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 87 "
	.ascii "*"
	.ascii "<type 88 "
	.ascii "\"reflect.Value\" "
	.ascii "<type 89 "
	.ascii "struct { "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 90 "
	.ascii "*"
	.ascii "<type 91 "
	.ascii "\".reflect.rtype\" "
	.ascii "<type 92 "
	.ascii "struct { "
	.ascii ".reflect.size"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.ptrdata"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.hash"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".reflect.kind"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.align"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii ".reflect.fieldAlign"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect._"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.hashfn"
	.ascii " "
	.ascii "<type 93 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 94 "
	.ascii "\"unsafe.Pointer\" "
	.ascii "\""
	.ascii "unsafe"
	.ascii "\" "
	.ascii "<type 95 "
	.ascii "*"
	.ascii "any"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.equalfn"
	.ascii " "
	.ascii "<type 96 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 94>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 94>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.gcdata"
	.ascii " "
	.ascii "<type 97 "
	.ascii "*"
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.string"
	.ascii " "
	.ascii "<type 98 "
	.ascii "*"
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 99 "
	.ascii "*"
	.ascii "<type 100 "
	.ascii "\".reflect.uncommonType\" "
	.ascii "<type 101 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 98>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 98>"
	.ascii "; "
	.ascii ".reflect.methods"
	.ascii " "
	.ascii "<type 102 "
	.ascii "["
	.ascii "] "
	.ascii "<type 103 "
	.ascii "\".reflect.method\" "
	.ascii "<type 104 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 98>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 98>"
	.ascii "; "
	.ascii ".reflect.mtyp"
	.ascii " "
	.ascii "<type 105 "
	.ascii "*"
	.ascii "<type 91>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 105>"
	.ascii "; "
	.ascii ".reflect.tfn"
	.ascii " "
	.ascii "<type 94>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 106 "
	.ascii "*"
	.ascii "<type 100>"
	.ascii ">"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 106>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptrToThis"
	.ascii " "
	.ascii "<type 105>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 107 "
	.ascii "\"reflect.Type\" "
	.ascii "<type 108 "
	.ascii "interface { "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Method"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 109 "
	.ascii "\"reflect.Method\" "
	.ascii "<type 110 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 107>"
	.ascii "; "
	.ascii "Func"
	.ascii " "
	.ascii "<type 88>"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 109>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 111 "
	.ascii "\"reflect.Kind\" "
	.ascii "<type -12>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "k"
	.ascii " "
	.ascii "<type 111>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 107>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 107>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 107>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 112 "
	.ascii "\"reflect.ChanDir\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 112>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii "; "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 113 "
	.ascii "\"reflect.StructField\" "
	.ascii "<type 114 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 107>"
	.ascii "; "
	.ascii "Tag"
	.ascii " "
	.ascii "<type 115 "
	.ascii "\"reflect.StructTag\" "
	.ascii "<type -16>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 115>"
	.ascii ") "
	.ascii "Lookup"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "value"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 115>"
	.ascii ") "
	.ascii "Get"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Offset"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type 116 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii "Anonymous"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<type 117 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 113>"
	.ascii "; "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 113>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<type 118 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 113>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii "; "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii "; "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii "; "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 119 "
	.ascii "*"
	.ascii "<type 91>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 99>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 107>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 107>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 105>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii ".reflect.exportedMethods"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 120 "
	.ascii "["
	.ascii "] "
	.ascii "<type 103>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 111>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii ".reflect.pointers"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 109>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 112>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 113>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 109>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 121 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 113>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii ".reflect.ptrTo"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 105>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x4a>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 113>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 105>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 122 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 113>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptr"
	.ascii " "
	.ascii "<type 94>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 123 "
	.ascii "\".reflect.flag\" "
	.ascii "<type -13>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 123>"
	.ascii ") "
	.ascii ".reflect.mustBeAssignable"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 123>"
	.ascii ") "
	.ascii ".reflect.kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 111>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 123>"
	.ascii ") "
	.ascii ".reflect.ro"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 123>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 123>"
	.ascii ") "
	.ascii ".reflect.mustBe"
	.ascii " ("
	.ascii "expected"
	.ascii " "
	.ascii "<type 111>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 123>"
	.ascii ") "
	.ascii ".reflect.mustBeExported"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Convert"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 107>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Uint"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "TryRecv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 88>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Slice3"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "k"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Slice"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetPointer"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 94>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetString"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "TrySend"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetCap"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii ".reflect.setRunes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 124 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Index"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Cap"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Float"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "CallSlice"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 125 "
	.ascii "["
	.ascii "] "
	.ascii "<type 88>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 126 "
	.ascii "["
	.ascii "] "
	.ascii "<type 88>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "OverflowUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "CanInterface"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Bool"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii ".reflect.assignTo"
	.ascii " ("
	.ascii "context"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "dst"
	.ascii " "
	.ascii "<type 90>"
	.ascii ", "
	.ascii "target"
	.ascii " "
	.ascii "<type 94>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii ".reflect.recv"
	.ascii " ("
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "val"
	.ascii " "
	.ascii "<type 88>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Call"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 127 "
	.ascii "["
	.ascii "] "
	.ascii "<type 88>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 128 "
	.ascii "["
	.ascii "] "
	.ascii "<type 88>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 129 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Addr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Interface"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type 130 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 111>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Int"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii ".reflect.send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 88>"
	.ascii ", "
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "selected"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii ".reflect.pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 94>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "CanSet"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 131 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Complex"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -18>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii ".reflect.runes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 132 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "InterfaceData"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 133 "
	.ascii "["
	.ascii "2"
	.ascii " "
	.ascii "] "
	.ascii "<type -13>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Recv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 88>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "UnsafeAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "IsNil"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii ".reflect.call"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 134 "
	.ascii "["
	.ascii "] "
	.ascii "<type 88>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 135 "
	.ascii "["
	.ascii "] "
	.ascii "<type 88>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "IsValid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 136 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetLen"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "MapKeys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 137 "
	.ascii "["
	.ascii "] "
	.ascii "<type 88>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "OverflowComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Type"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 107>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "OverflowFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "OverflowInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetBool"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetMapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 88>"
	.ascii ", "
	.ascii "val"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "MapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 88>"
	.ascii ")"
	.ascii " "
	.ascii "<type 88>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "CanAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 88>"
	.ascii ") "
	.ascii "SetBytes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 138 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 139 "
	.ascii "*"
	.ascii "<type 80>"
	.ascii ">"
	.ascii ") "
	.ascii "Root"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 140 "
	.ascii "*"
	.ascii "<type 141 "
	.ascii "\"github.com/ChrisRx/dungeonfs/pkg/game/fs/core.Directory\" "
	.ascii "<type 142 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 143 "
	.ascii "\".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node\" "
	.ascii "<type 144 "
	.ascii "struct { "
	.ascii ".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.inode"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.mode"
	.ascii " "
	.ascii "<type 55>"
	.ascii "; "
	.ascii ".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.path"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.metadata"
	.ascii " "
	.ascii "<type 145 "
	.ascii "\".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.nodeMetaData\" "
	.ascii "<type 146 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 147 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 148 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "GetBytes"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 149 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "Iter"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 150 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 151 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "GetString"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "Get"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 152 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 145>"
	.ascii ") "
	.ascii "GetBool"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.parent"
	.ascii " "
	.ascii "<type 14>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 153 "
	.ascii "\".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.nodes\" "
	.ascii "<type 154 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 14>"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 153>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "node"
	.ascii " "
	.ascii "<type 14>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 153>"
	.ascii ") "
	.ascii "Delete"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 153>"
	.ascii ") "
	.ascii "Get"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 14>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 153>"
	.ascii ") "
	.ascii "Iter"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 155 "
	.ascii "["
	.ascii "] "
	.ascii "<type 14>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 153>"
	.ascii ") "
	.ascii "Directories"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 156 "
	.ascii "["
	.ascii "] "
	.ascii "<type 14>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type 153>"
	.ascii ") "
	.ascii "Exists"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 153>"
	.ascii ") "
	.ascii "Files"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 157 "
	.ascii "["
	.ascii "] "
	.ascii "<type 14>"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 158 "
	.ascii "*"
	.ascii "<type 143>"
	.ascii ">"
	.ascii ") "
	.ascii "Entry"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 77>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "MetaData"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 64>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "Children"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 72>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "IsFile"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "Delete"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "Path"
	.ascii " ("
	.ascii "args"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "Content"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 159 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 158>"
	.ascii ") "
	.ascii "Parent"
	.ascii " ("
	.ascii "args"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 14>"
	.ascii ")"
	.ascii " "
	.ascii "<type 14>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 160 "
	.ascii "*"
	.ascii "<type 141>"
	.ascii ">"
	.ascii ") "
	.ascii "ReadAll"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 161 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Attr"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 52>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "NewFile"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 162 "
	.ascii "*"
	.ascii "<type 163 "
	.ascii "\"github.com/ChrisRx/dungeonfs/pkg/game/fs/core.File\" "
	.ascii "<type 164 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 143>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 165 "
	.ascii "*"
	.ascii "<type 163>"
	.ascii ">"
	.ascii ") "
	.ascii "Fsync"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 166 "
	.ascii "*"
	.ascii "<type 167 "
	.ascii "\"bazil.org/fuse.FsyncRequest\" "
	.ascii "<type 168 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169 "
	.ascii "\"bazil.org/fuse.Header\" "
	.ascii "<type 170 "
	.ascii "struct { "
	.ascii "Conn"
	.ascii " "
	.ascii "<type 171 "
	.ascii "*"
	.ascii "<type 172 "
	.ascii "\"bazil.org/fuse.Conn\" "
	.ascii "<type 173 "
	.ascii "struct { "
	.ascii "Ready"
	.ascii " "
	.ascii "<type 174 "
	.ascii "chan "
	.ascii "<- "
	.ascii "<type 175 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MountError"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".bazil.org/fuse.dev"
	.ascii " "
	.ascii "<type 176 "
	.ascii "*"
	.ascii "<type 177 "
	.ascii "\"os.File\" "
	.ascii "<type 178 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 179 "
	.ascii "*"
	.ascii "<type 180 "
	.ascii "\".os.file\" "
	.ascii "<type 181 "
	.ascii "struct { "
	.ascii ".os.pfd"
	.ascii " "
	.ascii "<type 182 "
	.ascii "\"internal/poll.FD\" "
	.ascii "\""
	.ascii "poll"
	.ascii "\" "
	.ascii "<type 183 "
	.ascii "struct { "
	.ascii ".internal/poll.fdmu"
	.ascii " "
	.ascii "<type 184 "
	.ascii "\".internal/poll.fdMutex\" "
	.ascii "<type 185 "
	.ascii "struct { "
	.ascii ".internal/poll.state"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".internal/poll.rsema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".internal/poll.wsema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 186 "
	.ascii "*"
	.ascii "<type 184>"
	.ascii ">"
	.ascii ") "
	.ascii ".internal/poll.rwunlock"
	.ascii " ("
	.ascii "read"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 186>"
	.ascii ") "
	.ascii ".internal/poll.increfAndClose"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 186>"
	.ascii ") "
	.ascii ".internal/poll.rwlock"
	.ascii " ("
	.ascii "read"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 186>"
	.ascii ") "
	.ascii ".internal/poll.decref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "mu"
	.ascii " "
	.ascii "<type 186>"
	.ascii ") "
	.ascii ".internal/poll.incref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Sysfd"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".internal/poll.pd"
	.ascii " "
	.ascii "<type 187 "
	.ascii "\".internal/poll.pollDesc\" "
	.ascii "<type 188 "
	.ascii "struct { "
	.ascii ".internal/poll.runtimeCtx"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189 "
	.ascii "*"
	.ascii "<type 187>"
	.ascii ">"
	.ascii ") "
	.ascii ".internal/poll.prepareWrite"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.evict"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.wait"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.init"
	.ascii " ("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 190 "
	.ascii "*"
	.ascii "<type 182>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.pollable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.prepare"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.waitRead"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.close"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.prepareRead"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.waitWrite"
	.ascii " ("
	.ascii "isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "pd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 189>"
	.ascii ") "
	.ascii ".internal/poll.waitCanceled"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".internal/poll.iovecs"
	.ascii " "
	.ascii "<type 191 "
	.ascii "*"
	.ascii "<type 192 "
	.ascii "["
	.ascii "] "
	.ascii "<type 193 "
	.ascii "\"syscall.Iovec\" "
	.ascii "\""
	.ascii "syscall"
	.ascii "\" "
	.ascii "<type 194 "
	.ascii "struct { "
	.ascii "Base"
	.ascii " "
	.ascii "<type 97>"
	.ascii "; "
	.ascii "Len"
	.ascii " "
	.ascii "<type 195 "
	.ascii "\"syscall.Iovec_len_t\" "
	.ascii "<type -8>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "iov"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 196 "
	.ascii "*"
	.ascii "<type 193>"
	.ascii ">"
	.ascii ") "
	.ascii "SetLen"
	.ascii " ("
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".internal/poll.csema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "IsStream"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "ZeroReadIsEOF"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".internal/poll.isFile"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".internal/poll.isBlocking"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197 "
	.ascii "*"
	.ascii "<type 182>"
	.ascii ">"
	.ascii ") "
	.ascii "Fchmod"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.readLock"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.eofError"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetsockoptInt"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "arg"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "RawWrite"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 198 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Pwrite"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 199 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 200 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 201 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "sa"
	.ascii " "
	.ascii "<type 202 "
	.ascii "\"syscall.Sockaddr\" "
	.ascii "<type 203 "
	.ascii "interface { "
	.ascii ".syscall.sockaddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "ptr"
	.ascii " "
	.ascii "<type 204 "
	.ascii "*"
	.ascii "<type 205 "
	.ascii "\"syscall.RawSockaddrAny\" "
	.ascii "<type 206 "
	.ascii "struct { "
	.ascii "Addr"
	.ascii " "
	.ascii "<type 207 "
	.ascii "\"syscall.RawSockaddr\" "
	.ascii "<type 208 "
	.ascii "struct { "
	.ascii "Family"
	.ascii " "
	.ascii "<type -6>"
	.ascii "; "
	.ascii "Data"
	.ascii " "
	.ascii "<type 209 "
	.ascii "["
	.ascii "14"
	.ascii " "
	.ascii "] "
	.ascii "<type -1>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Pad"
	.ascii " "
	.ascii "<type 210 "
	.ascii "["
	.ascii "96"
	.ascii " "
	.ascii "] "
	.ascii "<type -1>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "len"
	.ascii " "
	.ascii "<type 211 "
	.ascii "\"syscall.Socklen_t\" "
	.ascii "<type 212 "
	.ascii "\".syscall._socklen_t\" "
	.ascii "<type -7>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Seek"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "whence"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "WriteMsg"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 213 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "oob"
	.ascii " "
	.ascii "<type 214 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "sa"
	.ascii " "
	.ascii "<type 202>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetsockoptByte"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "arg"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetsockoptIPMreq"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "mreq"
	.ascii " "
	.ascii "<type 215 "
	.ascii "*"
	.ascii "<type 216 "
	.ascii "\"syscall.IPMreq\" "
	.ascii "<type 217 "
	.ascii "struct { "
	.ascii "Multiaddr"
	.ascii " "
	.ascii "<type 218 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Interface"
	.ascii " "
	.ascii "<type 219 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetsockoptIPMreqn"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "mreq"
	.ascii " "
	.ascii "<type 220 "
	.ascii "*"
	.ascii "<type 221 "
	.ascii "\"syscall.IPMreqn\" "
	.ascii "<type 222 "
	.ascii "struct { "
	.ascii "Multiaddr"
	.ascii " "
	.ascii "<type 223 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Address"
	.ascii " "
	.ascii "<type 224 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Ifindex"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "RawControl"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 225 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetsockoptInet4Addr"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "arg"
	.ascii " "
	.ascii "<type 226 "
	.ascii "["
	.ascii "4"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetsockoptIPv6Mreq"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "mreq"
	.ascii " "
	.ascii "<type 227 "
	.ascii "*"
	.ascii "<type 228 "
	.ascii "\"syscall.IPv6Mreq\" "
	.ascii "<type 229 "
	.ascii "struct { "
	.ascii "Multiaddr"
	.ascii " "
	.ascii "<type 230 "
	.ascii "["
	.ascii "16"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Interface"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "ReadMsg"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 231 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "oob"
	.ascii " "
	.ascii "<type 232 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 202>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Writev"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 233 "
	.ascii "*"
	.ascii "<type 234 "
	.ascii "["
	.ascii "] "
	.ascii "<type 235 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "RawRead"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "WriteOnce"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 237 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Fstat"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<type 238 "
	.ascii "*"
	.ascii "<type 239 "
	.ascii "\"syscall.Stat_t\" "
	.ascii "<type 240 "
	.ascii "struct { "
	.ascii "Dev"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Ino"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Nlink"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".syscall.__pad0"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "Rdev"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Blksize"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Blocks"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Atim"
	.ascii " "
	.ascii "<type 241 "
	.ascii "\"syscall.Timespec\" "
	.ascii "<type 242 "
	.ascii "struct { "
	.ascii "Sec"
	.ascii " "
	.ascii "<type 243 "
	.ascii "\"syscall.Timespec_sec_t\" "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "Nsec"
	.ascii " "
	.ascii "<type 244 "
	.ascii "\"syscall.Timespec_nsec_t\" "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ts"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 245 "
	.ascii "*"
	.ascii "<type 241>"
	.ascii ">"
	.ascii ") "
	.ascii "Nano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ts"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 245>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "nsec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Mtim"
	.ascii " "
	.ascii "<type 241>"
	.ascii "; "
	.ascii "Ctim"
	.ascii " "
	.ascii "<type 241>"
	.ascii "; "
	.ascii ".syscall.__glibc_reserved"
	.ascii " "
	.ascii "<type 246 "
	.ascii "["
	.ascii "3"
	.ascii " "
	.ascii "] "
	.ascii "<type -4>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Accept"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 202>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Fsync"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Pread"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 247 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Init"
	.ascii " ("
	.ascii "net"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "pollable"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "ReadDirent"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 248 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetBlocking"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Shutdown"
	.ascii " ("
	.ascii "how"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "WaitWrite"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "ReadFrom"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 249 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 202>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.writeUnlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 250 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Fchown"
	.ascii " ("
	.ascii "uid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "gid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.destroy"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Ftruncate"
	.ascii " ("
	.ascii "size"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.incref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.writeLock"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.decref"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii ".internal/poll.readUnlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "Fchdir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fd"
	.ascii " "
	.ascii "<type 197>"
	.ascii ") "
	.ascii "SetsockoptLinger"
	.ascii " ("
	.ascii "level"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "l"
	.ascii " "
	.ascii "<type 251 "
	.ascii "*"
	.ascii "<type 252 "
	.ascii "\"syscall.Linger\" "
	.ascii "<type 253 "
	.ascii "struct { "
	.ascii "Onoff"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "Linger"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".os.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".os.dirinfo"
	.ascii " "
	.ascii "<type 254 "
	.ascii "*"
	.ascii "<type 255 "
	.ascii "\".os.dirInfo\" "
	.ascii "<type 256 "
	.ascii "struct { "
	.ascii ".os.buf"
	.ascii " "
	.ascii "<type 257 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".os.dir"
	.ascii " "
	.ascii "<type 258 "
	.ascii "*"
	.ascii "<type 259 "
	.ascii "\"syscall.DIR\" "
	.ascii "<type 260 "
	.ascii "\".syscall._DIR\" "
	.ascii "<type 261 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".os.nonblock"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".os.stdoutOrErr"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "file"
	.ascii " "
	.ascii "<type 262 "
	.ascii "*"
	.ascii "<type 180>"
	.ascii ">"
	.ascii ") "
	.ascii ".os.close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 263 "
	.ascii "*"
	.ascii "<type 177>"
	.ascii ">"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "size"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.wrapErr"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.checkValid"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.chmod"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type 55>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "file"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.readdirnames"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "names"
	.ascii " "
	.ascii "<type 264 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.setDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 265 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Chmod"
	.ascii " ("
	.ascii "mode"
	.ascii " "
	.ascii "<type 55>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Chdir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.setReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Seek"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "whence"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "ret"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "WriteAt"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 266 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.setWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.seek"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "whence"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "ret"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 21>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Stat"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 267 "
	.ascii "\"os.FileInfo\" "
	.ascii "<type 268 "
	.ascii "interface { "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Mode"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 55>"
	.ascii "; "
	.ascii "ModTime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "IsDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Sys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 269 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 270 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 271 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Readdirnames"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "names"
	.ascii " "
	.ascii "<type 272 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.readdir"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "fi"
	.ascii " "
	.ascii "<type 273 "
	.ascii "["
	.ascii "] "
	.ascii "<type 267>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Chown"
	.ascii " ("
	.ascii "uid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "gid"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Fd"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.pread"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 274 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "ReadAt"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 275 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Readdir"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 276 "
	.ascii "["
	.ascii "] "
	.ascii "<type 267>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii ".os.pwrite"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 277 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 278 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 263>"
	.ascii ") "
	.ascii "Sync"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".bazil.org/fuse.wio"
	.ascii " "
	.ascii "<type 279 "
	.ascii "\"sync.RWMutex\" "
	.ascii "\""
	.ascii "sync"
	.ascii "\" "
	.ascii "<type 280 "
	.ascii "struct { "
	.ascii ".sync.w"
	.ascii " "
	.ascii "<type 281 "
	.ascii "\"sync.Mutex\" "
	.ascii "<type 282 "
	.ascii "struct { "
	.ascii ".sync.state"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.sema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 283 "
	.ascii "*"
	.ascii "<type 281>"
	.ascii ">"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 283>"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".sync.writerSem"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.readerSem"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".sync.readerCount"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.readerWait"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 284 "
	.ascii "*"
	.ascii "<type 279>"
	.ascii ">"
	.ascii ") "
	.ascii "RUnlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 284>"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 284>"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 284>"
	.ascii ") "
	.ascii "RLocker"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 285 "
	.ascii "\"sync.Locker\" "
	.ascii "<type 286 "
	.ascii "interface { "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "rw"
	.ascii " "
	.ascii "<type 284>"
	.ascii ") "
	.ascii "RLock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".bazil.org/fuse.rio"
	.ascii " "
	.ascii "<type 279>"
	.ascii "; "
	.ascii ".bazil.org/fuse.proto"
	.ascii " "
	.ascii "<type 61>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 287 "
	.ascii "*"
	.ascii "<type 172>"
	.ascii ">"
	.ascii ") "
	.ascii "ReadRequest"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 288 "
	.ascii "\"bazil.org/fuse.Request\" "
	.ascii "<type 289 "
	.ascii "interface { "
	.ascii "Hdr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 290 "
	.ascii "*"
	.ascii "<type 169>"
	.ascii ">"
	.ascii "; "
	.ascii "RespondError"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii ".bazil.org/fuse.fd"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii "Protocol"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 61>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii ".bazil.org/fuse.writeToKernel"
	.ascii " ("
	.ascii "msg"
	.ascii " "
	.ascii "<type 291 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii "InvalidateEntry"
	.ascii " ("
	.ascii "parent"
	.ascii " "
	.ascii "<type 292 "
	.ascii "\"bazil.org/fuse.NodeID\" "
	.ascii "<type -8>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type 292>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii "InvalidateNode"
	.ascii " ("
	.ascii "nodeID"
	.ascii " "
	.ascii "<type 292>"
	.ascii ", "
	.ascii "off"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii ".bazil.org/fuse.sendInvalidate"
	.ascii " ("
	.ascii "msg"
	.ascii " "
	.ascii "<type 293 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<type 287>"
	.ascii ") "
	.ascii ".bazil.org/fuse.respond"
	.ascii " ("
	.ascii "msg"
	.ascii " "
	.ascii "<type 294 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "ID"
	.ascii " "
	.ascii "<type 295 "
	.ascii "\"bazil.org/fuse.RequestID\" "
	.ascii "<type -8>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 295>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Node"
	.ascii " "
	.ascii "<type 292>"
	.ascii "; "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Pid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".bazil.org/fuse.msg"
	.ascii " "
	.ascii "<type 296 "
	.ascii "*"
	.ascii "<type 297 "
	.ascii "\".bazil.org/fuse.message\" "
	.ascii "<type 298 "
	.ascii "struct { "
	.ascii ".bazil.org/fuse.conn"
	.ascii " "
	.ascii "<type 171>"
	.ascii "; "
	.ascii ".bazil.org/fuse.buf"
	.ascii " "
	.ascii "<type 299 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bazil.org/fuse.hdr"
	.ascii " "
	.ascii "<type 300 "
	.ascii "*"
	.ascii "<type 301 "
	.ascii "\".bazil.org/fuse.inHeader\" "
	.ascii "<type 302 "
	.ascii "struct { "
	.ascii "Len"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Opcode"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Unique"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Nodeid"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Pid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".bazil.org/fuse._"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".bazil.org/fuse.off"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 303 "
	.ascii "*"
	.ascii "<type 297>"
	.ascii ">"
	.ascii ") "
	.ascii ".bazil.org/fuse.len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 303>"
	.ascii ") "
	.ascii ".bazil.org/fuse.data"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 94>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 303>"
	.ascii ") "
	.ascii ".bazil.org/fuse.bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 304 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 303>"
	.ascii ") "
	.ascii "Header"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 169>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 305 "
	.ascii "*"
	.ascii "<type 169>"
	.ascii ">"
	.ascii ") "
	.ascii "RespondError"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 305>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 305>"
	.ascii ") "
	.ascii ".bazil.org/fuse.noResponse"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 305>"
	.ascii ") "
	.ascii ".bazil.org/fuse.respond"
	.ascii " ("
	.ascii "msg"
	.ascii " "
	.ascii "<type 306 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 305>"
	.ascii ") "
	.ascii "Hdr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 305>"
	.ascii ";\n"
	.ascii ">"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Handle"
	.ascii " "
	.ascii "<type 307 "
	.ascii "\"bazil.org/fuse.HandleID\" "
	.ascii "<type -8>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<type 307>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Dir"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 308 "
	.ascii "*"
	.ascii "<type 167>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 308>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 309 "
	.ascii "*"
	.ascii "<type 310 "
	.ascii "\"bazil.org/fuse.WriteRequest\" "
	.ascii "<type 311 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii "; "
	.ascii "Handle"
	.ascii " "
	.ascii "<type 307>"
	.ascii "; "
	.ascii "Offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Data"
	.ascii " "
	.ascii "<type 312 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type 313 "
	.ascii "\"bazil.org/fuse.WriteFlags\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 313>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "LockOwner"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "FileFlags"
	.ascii " "
	.ascii "<type 314 "
	.ascii "\"bazil.org/fuse.OpenFlags\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 314>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 314>"
	.ascii ") "
	.ascii "IsReadOnly"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 314>"
	.ascii ") "
	.ascii "IsWriteOnly"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 314>"
	.ascii ") "
	.ascii "IsReadWrite"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 315 "
	.ascii "*"
	.ascii "<type 310>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 315>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 316 "
	.ascii "*"
	.ascii "<type 317 "
	.ascii "\"bazil.org/fuse.WriteResponse\" "
	.ascii "<type 318 "
	.ascii "struct { "
	.ascii "Size"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 319 "
	.ascii "*"
	.ascii "<type 317>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 315>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 320 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 316>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "Attr"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "a"
	.ascii " "
	.ascii "<type 52>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "Content"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 321 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "ReadAll"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 322 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 323 "
	.ascii "*"
	.ascii "<type 324 "
	.ascii "\"bazil.org/fuse.ReadRequest\" "
	.ascii "<type 325 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Dir"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Handle"
	.ascii " "
	.ascii "<type 307>"
	.ascii "; "
	.ascii "Offset"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type 326 "
	.ascii "\"bazil.org/fuse.ReadFlags\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 326>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "LockOwner"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "FileFlags"
	.ascii " "
	.ascii "<type 314>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 327 "
	.ascii "*"
	.ascii "<type 324>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 327>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 328 "
	.ascii "*"
	.ascii "<type 329 "
	.ascii "\"bazil.org/fuse.ReadResponse\" "
	.ascii "<type 330 "
	.ascii "struct { "
	.ascii "Data"
	.ascii " "
	.ascii "<type 331 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 332 "
	.ascii "*"
	.ascii "<type 329>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 332>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 333 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 328>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "Open"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 334 "
	.ascii "*"
	.ascii "<type 335 "
	.ascii "\"bazil.org/fuse.OpenRequest\" "
	.ascii "<type 336 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Dir"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type 314>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 337 "
	.ascii "*"
	.ascii "<type 335>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 337>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 338 "
	.ascii "*"
	.ascii "<type 339 "
	.ascii "\"bazil.org/fuse.OpenResponse\" "
	.ascii "<type 340 "
	.ascii "struct { "
	.ascii "Handle"
	.ascii " "
	.ascii "<type 307>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type 341 "
	.ascii "\"bazil.org/fuse.OpenResponseFlags\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 341>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 342 "
	.ascii "*"
	.ascii "<type 339>"
	.ascii ">"
	.ascii ") "
	.ascii ".bazil.org/fuse.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 342>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 343 "
	.ascii "\"bazil.org/fuse/fs.Handle\" "
	.ascii "<type 344 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "Setattr"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 345 "
	.ascii "*"
	.ascii "<type 346 "
	.ascii "\"bazil.org/fuse.SetattrRequest\" "
	.ascii "<type 347 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Valid"
	.ascii " "
	.ascii "<type 348 "
	.ascii "\"bazil.org/fuse.SetattrValid\" "
	.ascii "<type -7>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "MtimeNow"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Handle"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Uid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "LockOwner"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Chgtime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Mtime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Atime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Gid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Crtime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Bkuptime"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "AtimeNow"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Flags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "fl"
	.ascii " "
	.ascii "<type 348>"
	.ascii ") "
	.ascii "Mode"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Handle"
	.ascii " "
	.ascii "<type 307>"
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "Atime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Mtime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type 55>"
	.ascii "; "
	.ascii "Uid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Gid"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Bkuptime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Chgtime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Crtime"
	.ascii " "
	.ascii "<type 21>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 349 "
	.ascii "*"
	.ascii "<type 346>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 349>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 350 "
	.ascii "*"
	.ascii "<type 351 "
	.ascii "\"bazil.org/fuse.SetattrResponse\" "
	.ascii "<type 352 "
	.ascii "struct { "
	.ascii "Attr"
	.ascii " "
	.ascii "<type 53>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 353 "
	.ascii "*"
	.ascii "<type 351>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "New"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 63>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 14>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 165>"
	.ascii ") "
	.ascii "Getxattr"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 354 "
	.ascii "*"
	.ascii "<type 355 "
	.ascii "\"bazil.org/fuse.GetxattrRequest\" "
	.ascii "<type 356 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Size"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Position"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 357 "
	.ascii "*"
	.ascii "<type 355>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 357>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 358 "
	.ascii "*"
	.ascii "<type 359 "
	.ascii "\"bazil.org/fuse.GetxattrResponse\" "
	.ascii "<type 360 "
	.ascii "struct { "
	.ascii "Xattr"
	.ascii " "
	.ascii "<type 361 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 362 "
	.ascii "*"
	.ascii "<type 359>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 358>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "NewDirectory"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 160>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Create"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 363 "
	.ascii "*"
	.ascii "<type 364 "
	.ascii "\"bazil.org/fuse.CreateRequest\" "
	.ascii "<type 365 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type 314>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type 55>"
	.ascii "; "
	.ascii "Umask"
	.ascii " "
	.ascii "<type 55>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 366 "
	.ascii "*"
	.ascii "<type 364>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 366>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 367 "
	.ascii "*"
	.ascii "<type 368 "
	.ascii "\"bazil.org/fuse.CreateResponse\" "
	.ascii "<type 369 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 370 "
	.ascii "\"bazil.org/fuse.LookupResponse\" "
	.ascii "<type 371 "
	.ascii "struct { "
	.ascii "Node"
	.ascii " "
	.ascii "<type 292>"
	.ascii "; "
	.ascii "Generation"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "EntryValid"
	.ascii " "
	.ascii "<type 40>"
	.ascii "; "
	.ascii "Attr"
	.ascii " "
	.ascii "<type 53>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 372 "
	.ascii "*"
	.ascii "<type 370>"
	.ascii ">"
	.ascii ") "
	.ascii ".bazil.org/fuse.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 372>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 339>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 373 "
	.ascii "*"
	.ascii "<type 368>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 367>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 343>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Flush"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 374 "
	.ascii "*"
	.ascii "<type 375 "
	.ascii "\"bazil.org/fuse.FlushRequest\" "
	.ascii "<type 376 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Handle"
	.ascii " "
	.ascii "<type 307>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "LockOwner"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 377 "
	.ascii "*"
	.ascii "<type 375>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 377>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "ReadDirAll"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 378 "
	.ascii "["
	.ascii "] "
	.ascii "<type 77>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "New"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 63>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 14>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Remove"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 379 "
	.ascii "*"
	.ascii "<type 380 "
	.ascii "\"bazil.org/fuse.RemoveRequest\" "
	.ascii "<type 381 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Dir"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 382 "
	.ascii "*"
	.ascii "<type 380>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 382>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Access"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 383 "
	.ascii "*"
	.ascii "<type 384 "
	.ascii "\"bazil.org/fuse.AccessRequest\" "
	.ascii "<type 385 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Mask"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 386 "
	.ascii "*"
	.ascii "<type 384>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 386>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Lookup"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 387 "
	.ascii "*"
	.ascii "<type 388 "
	.ascii "\"bazil.org/fuse.LookupRequest\" "
	.ascii "<type 389 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 390 "
	.ascii "*"
	.ascii "<type 388>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 390>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 372>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<type 372>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1a>"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Open"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 334>"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 338>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 343>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ", "
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 328>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 160>"
	.ascii ") "
	.ascii "Mkdir"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 18>"
	.ascii ", "
	.ascii "req"
	.ascii " "
	.ascii "<type 391 "
	.ascii "*"
	.ascii "<type 392 "
	.ascii "\"bazil.org/fuse.MkdirRequest\" "
	.ascii "<type 393 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 169>"
	.ascii " "
	.ascii "\"json:\\\"-\\\"\""
	.ascii "; "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type 55>"
	.ascii "; "
	.ascii "Umask"
	.ascii " "
	.ascii "<type 55>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<type 394 "
	.ascii "*"
	.ascii "<type 392>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 394>"
	.ascii ") "
	.ascii "Respond"
	.ascii " ("
	.ascii "resp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 395 "
	.ascii "*"
	.ascii "<type 396 "
	.ascii "\"bazil.org/fuse.MkdirResponse\" "
	.ascii "<type 397 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 370>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 398 "
	.ascii "*"
	.ascii "<type 396>"
	.ascii ">"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 139>"
	.ascii ") "
	.ascii ".command-line-arguments.visit"
	.ascii " ("
	.ascii "node"
	.ascii " "
	.ascii "<type 14>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 139>"
	.ascii ") "
	.ascii "AddProperty"
	.ascii " ("
	.ascii "node"
	.ascii " "
	.ascii "<type 14>"
	.ascii ", "
	.ascii "attrName"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 399 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 139>"
	.ascii ") "
	.ascii "GetProperties"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 400 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 85>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "LoadFromFile"
	.ascii " ("
	.ascii "folder"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 140>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "New"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 401 "
	.ascii "*"
	.ascii "<type 402 "
	.ascii "\"Resources\" "
	.ascii "<type 403 "
	.ascii "struct { "
	.ascii ".command-line-arguments.components"
	.ascii " "
	.ascii "<type 10>"
	.ascii "; "
	.ascii ".command-line-arguments.entities"
	.ascii " "
	.ascii "<type 404 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 12>"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 405 "
	.ascii "*"
	.ascii "<type 80>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 406 "
	.ascii "*"
	.ascii "<type 402>"
	.ascii ">"
	.ascii ") "
	.ascii "GetObject"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 12>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 406>"
	.ascii ") "
	.ascii "LoadFile"
	.ascii " ("
	.ascii "f"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 406>"
	.ascii ") "
	.ascii "LoadDir"
	.ascii " ("
	.ascii "folder"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 140>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewLevel"
	.ascii " ("
	.ascii "root"
	.ascii " "
	.ascii "<type 12>"
	.ascii ", "
	.ascii "objects"
	.ascii " "
	.ascii "<type 407 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 12>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 139>"
	.ascii ";\n"
	.ascii "var "
	.ascii "PkgLogger"
	.ascii " "
	.ascii "<type 408 "
	.ascii "\".command-line-arguments.logger\" "
	.ascii "<type 409 "
	.ascii "interface { "
	.ascii "Printf"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "..."
	.ascii "<type 410 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 85>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 402>"
	.ascii ";\n"
	.ascii "func "
	.ascii "SetNodeAttr"
	.ascii " ("
	.ascii "node"
	.ascii " "
	.ascii "<type 14>"
	.ascii ", "
	.ascii "k"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 87>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "const "
	.ascii "UnknownComponent"
	.ascii " "
	.ascii "<type 1>"
	.ascii " "
	.ascii "= "
	.ascii "0"
	.ascii " "
	.ascii ";\n"
	.ascii "func "
	.ascii "command_line_arguments..init0"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii "checksum 77E2B1F0FBF25B14D372F880348E3ED43AA18EE2;\n"
	.text


	.file	1 "<built-in>"
	.file	2 "./assets.go"
	.file	3 "<stdin>"
	.file	4 "./logging.go"
	.file	5 "./level.go"
	.section	.text.command_line_arguments.Component.Base,"ax",@progbits
	.globl	command_line_arguments.Component.Base
	.p2align	4, 0x90
	.type	command_line_arguments.Component.Base,@function
command_line_arguments.Component.Base:
.Lfunc_begin0:
	.loc	2 35 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB0_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB0_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp0:
	.loc	2 35 52 prologue_end
	testq	%rdi, %rdi
	je	.LBB0_4
.Ltmp1:
	.loc	2 35 44 is_stmt 0
	movq	32(%rdi), %rax
.Ltmp2:
	movq	40(%rdi), %rdx
.Ltmp3:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp4:
.LBB0_4:
	.cfi_def_cfa_offset 16
	.loc	2 35 52
	movl	$6, %edi
.Ltmp5:
	callq	__go_runtime_error
.Ltmp6:
.Lfunc_end0:
	.size	command_line_arguments.Component.Base, .Lfunc_end0-command_line_arguments.Component.Base
	.cfi_endproc

	.section	.text.command_line_arguments.Component.Bases,"ax",@progbits
	.globl	command_line_arguments.Component.Bases
	.p2align	4, 0x90
	.type	command_line_arguments.Component.Bases,@function
command_line_arguments.Component.Bases:
.Lfunc_begin1:
	.loc	2 36 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB1_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB1_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp7:
	.loc	2 36 52 prologue_end
	testq	%rsi, %rsi
	je	.LBB1_4
.Ltmp8:
	.loc	2 36 44 is_stmt 0
	movups	48(%rsi), %xmm0
	movq	64(%rsi), %rax
	movq	%rax, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp9:
.LBB1_4:
	.cfi_def_cfa_offset 16
	.loc	2 36 52
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp10:
.Lfunc_end1:
	.size	command_line_arguments.Component.Bases, .Lfunc_end1-command_line_arguments.Component.Bases
	.cfi_endproc

	.section	.text.command_line_arguments.Component.Name,"ax",@progbits
	.globl	command_line_arguments.Component.Name
	.p2align	4, 0x90
	.type	command_line_arguments.Component.Name,@function
command_line_arguments.Component.Name:
.Lfunc_begin2:
	.loc	2 33 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB2_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB2_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp11:
	.loc	2 33 52 prologue_end
	testq	%rdi, %rdi
	je	.LBB2_4
.Ltmp12:
	.loc	2 33 44 is_stmt 0
	movq	(%rdi), %rax
.Ltmp13:
	movq	8(%rdi), %rdx
.Ltmp14:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp15:
.LBB2_4:
	.cfi_def_cfa_offset 16
	.loc	2 33 52
	movl	$6, %edi
.Ltmp16:
	callq	__go_runtime_error
.Ltmp17:
.Lfunc_end2:
	.size	command_line_arguments.Component.Name, .Lfunc_end2-command_line_arguments.Component.Name
	.cfi_endproc

	.section	.text.command_line_arguments.Component.Type,"ax",@progbits
	.globl	command_line_arguments.Component.Type
	.p2align	4, 0x90
	.type	command_line_arguments.Component.Type,@function
command_line_arguments.Component.Type:
.Lfunc_begin3:
	.loc	2 34 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB3_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB3_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp18:
	.loc	2 34 52 prologue_end
	testq	%rdi, %rdi
	je	.LBB3_4
.Ltmp19:
	movq	16(%rdi), %rax
.Ltmp20:
	.loc	2 34 44 is_stmt 0
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp21:
.LBB3_4:
	.cfi_def_cfa_offset 16
	.loc	2 34 52
	movl	$6, %edi
.Ltmp22:
	callq	__go_runtime_error
.Ltmp23:
.Lfunc_end3:
	.size	command_line_arguments.Component.Type, .Lfunc_end3-command_line_arguments.Component.Type
	.cfi_endproc

	.section	.text.command_line_arguments.Components.LookupBaseType,"ax",@progbits
	.globl	command_line_arguments.Components.LookupBaseType
	.p2align	4, 0x90
	.type	command_line_arguments.Components.LookupBaseType,@function
command_line_arguments.Components.LookupBaseType:
.Lfunc_begin4:
	.loc	2 40 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB4_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB4_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
.Ltmp24:
	.loc	2 40 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB4_5
.Ltmp25:
	movq	(%rdi), %rax
.Ltmp26:
	.loc	2 0 1 is_stmt 0
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	leaq	8(%rsp), %rdx
.Ltmp27:
	.loc	2 41 5 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
.Ltmp28:
	movq	%rax, %rsi
	callq	runtime.mapaccess2
.Ltmp29:
	.loc	2 41 2 is_stmt 0
	testb	$1, %dl
	jne	.LBB4_6
.Ltmp30:
	.loc	2 44 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp31:
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB4_6:
	.cfi_def_cfa_offset 32
.Ltmp32:
	.loc	2 41 5
	movq	(%rax), %rax
.Ltmp33:
	.loc	2 42 3
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp34:
.LBB4_5:
	.cfi_def_cfa_offset 32
	.loc	2 40 1
	movl	$6, %edi
.Ltmp35:
	callq	__go_runtime_error
.Ltmp36:
.Lfunc_end4:
	.size	command_line_arguments.Components.LookupBaseType, .Lfunc_end4-command_line_arguments.Components.LookupBaseType
	.cfi_endproc

	.section	.text.command_line_arguments..import,"ax",@progbits
	.globl	command_line_arguments..import
	.p2align	4, 0x90
	.type	command_line_arguments..import,@function
command_line_arguments..import:
.Lfunc_begin5:
	.loc	2 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB5_2
	movq	%r10, %rax
	movabsq	$72, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB5_2:
.Ltmp37:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$64, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -16
	.loc	1 1 1 prologue_end
	movl	$go..C0, %edi
	callq	runtime.registerGCRoots
	.loc	2 65 20
	movl	$bool..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movb	$0, (%rax)
	movl	$bool..d, %edi
	callq	runtime.newobject
	movb	$1, (%rax)
	movups	.Lconst.112(%rip), %xmm0
	movaps	%xmm0, (%rsp)
	movq	$bool..d, 16(%rsp)
	movq	%rbx, 24(%rsp)
	movups	.Lconst.113(%rip), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$bool..d, 48(%rsp)
	movq	%rax, 56(%rsp)
	movq	%rsp, %r8
	movl	$type..map.6string.7interface.4.5, %edi
	movl	$2, %esi
	movl	$32, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	.loc	2 65 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB5_5
	movl	$command_line_arguments.defaultAttrs, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB5_4
.LBB5_5:
	movq	%rax, command_line_arguments.defaultAttrs(%rip)
.LBB5_4:
	.loc	4 13 1 is_stmt 1
	callq	command_line_arguments.command_line_arguments..init0
	addq	$64, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp38:
.Lfunc_end5:
	.size	command_line_arguments..import, .Lfunc_end5-command_line_arguments..import
	.cfi_endproc

	.section	.text.command_line_arguments.Resources.AddProperty..stub,"ax",@progbits
	.globl	command_line_arguments.Resources.AddProperty..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Resources.AddProperty..stub,@function
command_line_arguments.Resources.AddProperty..stub:
.Lfunc_begin6:
	.loc	5 87 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB6_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$16, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB6_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
.Ltmp39:
	.loc	5 87 28 prologue_end
	testq	%rdi, %rdi
	je	.LBB6_4
.Ltmp40:
	.loc	5 0 28 is_stmt 0
	leaq	32(%rsp), %rax
	movq	16(%rdi), %rdi
.Ltmp41:
	.loc	2 70 6 is_stmt 1
	movups	(%rax), %xmm0
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.Level.AddProperty
.Ltmp42:
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB6_4:
	.cfi_def_cfa_offset 32
.Ltmp43:
	.loc	5 87 28
	movl	$6, %edi
.Ltmp44:
	callq	__go_runtime_error
.Ltmp45:
.Lfunc_end6:
	.size	command_line_arguments.Resources.AddProperty..stub, .Lfunc_end6-command_line_arguments.Resources.AddProperty..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Resources.GetProperties..stub,"ax",@progbits
	.globl	command_line_arguments.Resources.GetProperties..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Resources.GetProperties..stub,@function
command_line_arguments.Resources.GetProperties..stub:
.Lfunc_begin7:
	.loc	5 122 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB7_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB7_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp46:
	.loc	5 122 30 prologue_end
	testq	%rdi, %rdi
	je	.LBB7_4
.Ltmp47:
	.loc	5 0 30 is_stmt 0
	movq	16(%rdi), %rdi
.Ltmp48:
	.loc	2 70 6 is_stmt 1
	callq	command_line_arguments.Level.GetProperties
.Ltmp49:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB7_4:
	.cfi_def_cfa_offset 16
.Ltmp50:
	.loc	5 122 30
	movl	$6, %edi
.Ltmp51:
	callq	__go_runtime_error
.Ltmp52:
.Lfunc_end7:
	.size	command_line_arguments.Resources.GetProperties..stub, .Lfunc_end7-command_line_arguments.Resources.GetProperties..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Resources.Root..stub,"ax",@progbits
	.globl	command_line_arguments.Resources.Root..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Resources.Root..stub,@function
command_line_arguments.Resources.Root..stub:
.Lfunc_begin8:
	.loc	5 34 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB8_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB8_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp53:
	.loc	5 34 21 prologue_end
	testq	%rdi, %rdi
	je	.LBB8_4
.Ltmp54:
	.loc	5 0 21 is_stmt 0
	movq	16(%rdi), %rdi
.Ltmp55:
	.loc	2 70 6 is_stmt 1
	callq	command_line_arguments.Level.Root
.Ltmp56:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp57:
.LBB8_4:
	.cfi_def_cfa_offset 16
	.loc	5 34 21
	movl	$6, %edi
.Ltmp58:
	callq	__go_runtime_error
.Ltmp59:
.Lfunc_end8:
	.size	command_line_arguments.Resources.Root..stub, .Lfunc_end8-command_line_arguments.Resources.Root..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Resources.visit..stub,"ax",@progbits
	.globl	command_line_arguments.Resources.visit..stub
	.p2align	4, 0x90
	.type	command_line_arguments.Resources.visit..stub,@function
command_line_arguments.Resources.visit..stub:
.Lfunc_begin9:
	.loc	5 54 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB9_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB9_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp60:
	.loc	5 54 22 prologue_end
	testq	%rdi, %rdi
	je	.LBB9_4
.Ltmp61:
	.loc	5 0 22 is_stmt 0
	movq	16(%rdi), %rdi
.Ltmp62:
	.loc	2 70 6 is_stmt 1
	callq	command_line_arguments.Level.visit
.Ltmp63:
	.loc	2 0 6 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB9_4:
	.cfi_def_cfa_offset 16
.Ltmp64:
	.loc	5 54 22 is_stmt 1
	movl	$6, %edi
.Ltmp65:
	callq	__go_runtime_error
.Ltmp66:
.Lfunc_end9:
	.size	command_line_arguments.Resources.visit..stub, .Lfunc_end9-command_line_arguments.Resources.visit..stub
	.cfi_endproc

	.section	.text.command_line_arguments.Resources.GetObject,"ax",@progbits
	.globl	command_line_arguments.Resources.GetObject
	.p2align	4, 0x90
	.type	command_line_arguments.Resources.GetObject,@function
command_line_arguments.Resources.GetObject:
.Lfunc_begin10:
	.loc	2 89 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB10_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB10_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
.Ltmp67:
	.loc	2 90 17 prologue_end
	testq	%rdi, %rdi
	je	.LBB10_5
.Ltmp68:
	movq	8(%rdi), %rsi
	leaq	8(%rsp), %rdx
.Ltmp69:
	.loc	2 90 5 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.Entity, %edi
.Ltmp70:
	callq	runtime.mapaccess2
.Ltmp71:
	.loc	2 90 2
	testb	$1, %dl
	jne	.LBB10_6
.Ltmp72:
	.loc	2 93 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp73:
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB10_6:
	.cfi_def_cfa_offset 32
.Ltmp74:
	.loc	2 90 5
	movq	(%rax), %rcx
.Ltmp75:
	movq	8(%rax), %rdx
.Ltmp76:
	.loc	2 91 3
	movq	%rcx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp77:
.LBB10_5:
	.cfi_def_cfa_offset 32
	.loc	2 90 17
	movl	$6, %edi
.Ltmp78:
	callq	__go_runtime_error
.Ltmp79:
.Lfunc_end10:
	.size	command_line_arguments.Resources.GetObject, .Lfunc_end10-command_line_arguments.Resources.GetObject
	.cfi_endproc

	.section	.text.command_line_arguments.Resources.LoadDir,"ax",@progbits
	.globl	command_line_arguments.Resources.LoadDir
	.p2align	4, 0x90
	.type	command_line_arguments.Resources.LoadDir,@function
command_line_arguments.Resources.LoadDir:
.Lfunc_begin11:
	.loc	2 146 0
	.cfi_startproc
	leaq	-1640(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB11_2
	movq	%r10, %rax
	movabsq	$1640, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB11_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1592, %rsp
	.cfi_def_cfa_offset 1648
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, %rbx
.Ltmp80:
	.loc	2 147 44 prologue_end
	movq	%rdx, 784(%rsp)
	movq	%rcx, 792(%rsp)
	movups	.Lconst.206(%rip), %xmm0
	movups	%xmm0, 800(%rsp)
	leaq	784(%rsp), %rax
	movq	%rax, 208(%rsp)
	movq	$2, 216(%rsp)
	movq	$2, 224(%rsp)
	movq	224(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	208(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
.Ltmp81:
	.loc	2 0 44 is_stmt 0
	leaq	744(%rsp), %rdi
.Ltmp82:
	.loc	2 147 30
	movq	%rax, %rsi
	callq	path_filepath.Glob
	movq	768(%rsp), %rax
.Ltmp83:
	.loc	2 148 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB11_4
.Ltmp84:
	.loc	2 147 30
	movq	776(%rsp), %rcx
.Ltmp85:
	.loc	2 149 3
	movq	$0, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rcx, 16(%rbx)
	movq	%rbx, %rax
.Ltmp86:
	.loc	2 0 3 is_stmt 0
	jmp	.LBB11_94
.Ltmp87:
.LBB11_4:
	movq	%rbp, 56(%rsp)
.Ltmp88:
	movq	%rbx, 128(%rsp)
	movq	752(%rsp), %r14
.Ltmp89:
	.loc	2 151 2 is_stmt 1
	testq	%r14, %r14
	jle	.LBB11_8
.Ltmp90:
	.loc	2 0 2 is_stmt 0
	movq	744(%rsp), %rbp
.Ltmp91:
	.loc	2 151 2
	addq	$8, %rbp
.Ltmp92:
	.loc	2 0 2
	xorl	%ebx, %ebx
.Ltmp93:
	.p2align	4, 0x90
.LBB11_6:
	.loc	2 151 2
	movq	-8(%rbp), %rsi
.Ltmp94:
	movq	(%rbp), %rdx
.Ltmp95:
	.loc	2 152 14 is_stmt 1
	movq	56(%rsp), %rdi
	callq	command_line_arguments.Resources.LoadFile
.Ltmp96:
	.loc	2 152 32 is_stmt 0
	testq	%rax, %rax
	jne	.LBB11_89
.Ltmp97:
	.loc	2 151 2 is_stmt 1
	addq	$1, %rbx
	addq	$16, %rbp
	cmpq	%r14, %rbx
	jl	.LBB11_6
.Ltmp98:
.LBB11_8:
	.loc	2 156 16
	callq	runtime.makemap_small
	movq	%rax, %r12
.Ltmp99:
	.loc	2 0 16 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
	movq	56(%rsp), %rax
.Ltmp100:
	.loc	2 157 21 is_stmt 1
	testq	%rax, %rax
	je	.LBB11_95
.Ltmp101:
	movq	(%rax), %rsi
	movaps	%xmm0, 688(%rsp)
	movaps	%xmm0, 1376(%rsp)
	movaps	%xmm0, 1360(%rsp)
	movaps	%xmm0, 1344(%rsp)
	movaps	%xmm0, 1328(%rsp)
	movaps	%xmm0, 1312(%rsp)
	movaps	%xmm0, 1296(%rsp)
	leaq	1296(%rsp), %rdx
	.loc	2 157 2 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	callq	runtime.mapiterinit
	movq	1296(%rsp), %rax
	testq	%rax, %rax
	je	.LBB11_17
.Ltmp102:
	.loc	2 0 2
	leaq	672(%rsp), %r14
	leaq	1296(%rsp), %r15
.Ltmp103:
	.p2align	4, 0x90
.LBB11_11:
	.loc	2 157 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 688(%rsp)
	movq	1304(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp104:
	.loc	2 0 2
	movaps	%xmm0, 64(%rsp)
	.loc	2 158 7 is_stmt 1
	movq	%rbp, %rdi
	callq	command_line_arguments.Component.Type
	.loc	2 158 15 is_stmt 0
	testq	%rax, %rax
	jne	.LBB11_16
.Ltmp105:
	.loc	2 0 15
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 672(%rsp)
	.loc	2 159 18 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB11_14
.Ltmp106:
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB11_16
.Ltmp107:
.LBB11_14:
	testq	%rax, %rax
	je	.LBB11_95
.Ltmp108:
	movq	%rbp, (%rax)
.Ltmp109:
	.p2align	4, 0x90
.LBB11_16:
	.loc	2 157 2
	movq	%r15, %rdi
	callq	runtime.mapiternext
	movq	1296(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB11_11
.Ltmp110:
.LBB11_17:
	.loc	2 162 6
	testq	%r12, %r12
	movq	56(%rsp), %rbp
	je	.LBB11_40
.Ltmp111:
	.loc	2 162 22 is_stmt 0
	cmpq	$0, (%r12)
	jle	.LBB11_40
.Ltmp112:
	.loc	2 0 22
	leaq	1488(%rsp), %r15
.Ltmp113:
	.p2align	4, 0x90
.LBB11_20:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
	movaps	%xmm0, 656(%rsp)
	movaps	%xmm0, 1568(%rsp)
	movaps	%xmm0, 1552(%rsp)
	movaps	%xmm0, 1536(%rsp)
	movaps	%xmm0, 1520(%rsp)
	movaps	%xmm0, 1504(%rsp)
	movaps	%xmm0, 1488(%rsp)
.Ltmp114:
	.loc	2 163 3 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	runtime.mapiterinit
	movq	1488(%rsp), %rax
	testq	%rax, %rax
	je	.LBB11_39
.Ltmp115:
	.p2align	4, 0x90
.LBB11_21:
	movups	(%rax), %xmm0
	movaps	%xmm0, 656(%rsp)
	movq	1496(%rsp), %rax
	movq	(%rax), %r14
.Ltmp116:
	.loc	2 0 3 is_stmt 0
	movaps	%xmm0, 64(%rsp)
.Ltmp117:
	.loc	2 164 44 is_stmt 1
	movq	%r14, %rdi
	callq	command_line_arguments.Component.Base
	.loc	2 164 16 is_stmt 0
	movq	(%rbp), %rcx
	movq	%rcx, 168(%rsp)
	.loc	2 164 27
	leaq	168(%rsp), %rdi
	movq	%rax, %rsi
	callq	command_line_arguments.Components.LookupBaseType
.Ltmp118:
	.loc	2 165 7 is_stmt 1
	testb	%dl, %dl
	je	.LBB11_98
.Ltmp119:
	.loc	2 0 7 is_stmt 0
	movq	%rax, %r13
.Ltmp120:
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 640(%rsp)
	.loc	2 168 14 is_stmt 1
	movq	(%rbp), %rsi
	.loc	2 168 4 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	leaq	640(%rsp), %rdx
.Ltmp121:
	callq	runtime.mapaccess2
.Ltmp122:
	.loc	2 169 7 is_stmt 1
	testb	%dl, %dl
	je	.LBB11_99
.Ltmp123:
	.loc	2 0 7 is_stmt 0
	movq	(%rax), %rbp
.Ltmp124:
	.loc	2 172 5 is_stmt 1
	testq	%rbp, %rbp
	je	.LBB11_95
.Ltmp125:
	.loc	2 0 5 is_stmt 0
	movups	48(%rbp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	64(%rbp), %rax
	movq	%rax, 112(%rsp)
	.loc	2 172 14
	movq	104(%rsp), %rbx
	leaq	1(%rbx), %rdx
.Ltmp126:
	cmpq	%rax, %rdx
	jbe	.LBB11_26
.Ltmp127:
	movq	112(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$type...1command_line_arguments.Component, %esi
	leaq	408(%rsp), %rdi
	callq	runtime.growslice
	movq	408(%rsp), %rcx
	movq	416(%rsp), %rdx
	movq	424(%rsp), %rax
	jmp	.LBB11_29
.Ltmp128:
	.p2align	4, 0x90
.LBB11_26:
	cmpq	%rax, %rdx
	jg	.LBB11_97
.Ltmp129:
	.loc	2 0 14
	movq	%rdx, %rcx
	orq	%rax, %rcx
	js	.LBB11_97
.Ltmp130:
	.loc	2 172 14
	movq	96(%rsp), %rcx
.Ltmp131:
.LBB11_29:
	movq	%rcx, 96(%rsp)
	movq	%rdx, 104(%rsp)
	movq	%rax, 112(%rsp)
	testq	%rbx, %rbx
	js	.LBB11_96
.Ltmp132:
	.loc	2 0 14
	cmpq	%rdx, %rbx
	jge	.LBB11_96
.Ltmp133:
	.loc	2 172 14
	leaq	(%rcx,%rbx,8), %rdi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB11_33
.Ltmp134:
	movq	%r13, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB11_35
.Ltmp135:
	.p2align	4, 0x90
.LBB11_33:
	testq	%rdi, %rdi
	je	.LBB11_95
.Ltmp136:
	movq	%r13, (%rdi)
.Ltmp137:
.LBB11_35:
	.loc	2 0 14
	leaq	48(%rbp), %rsi
	movq	112(%rsp), %rax
	movq	%rax, 192(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 176(%rsp)
	.loc	2 172 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB11_37
.Ltmp138:
	movl	$type...6.7.1command_line_arguments.Component, %edi
	leaq	176(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB11_38
.Ltmp139:
	.p2align	4, 0x90
.LBB11_37:
	movq	192(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	176(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp140:
.LBB11_38:
	.loc	2 173 13 is_stmt 1
	movq	%r13, %rdi
	callq	command_line_arguments.Component.Type
	.loc	2 173 8 is_stmt 0
	movq	%rax, 16(%rbp)
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 608(%rsp)
	.loc	2 174 4 is_stmt 1
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	movq	%r12, %rsi
	leaq	608(%rsp), %rdx
	callq	runtime.mapdelete
.Ltmp141:
	.loc	2 163 3
	movq	%r15, %rdi
	callq	runtime.mapiternext
	movq	1488(%rsp), %rax
	testq	%rax, %rax
	movq	56(%rsp), %rbp
	jne	.LBB11_21
.Ltmp142:
.LBB11_39:
	.loc	2 162 22
	cmpq	$0, (%r12)
	jg	.LBB11_20
.Ltmp143:
.LBB11_40:
	.loc	2 177 21
	movq	(%rbp), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 1280(%rsp)
	movaps	%xmm0, 1264(%rsp)
	movaps	%xmm0, 1248(%rsp)
	movaps	%xmm0, 1232(%rsp)
	movaps	%xmm0, 1216(%rsp)
	movaps	%xmm0, 1200(%rsp)
	leaq	1200(%rsp), %rdx
	.loc	2 177 2 is_stmt 0
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	callq	runtime.mapiterinit
	cmpq	$0, 1200(%rsp)
	je	.LBB11_86
.Ltmp144:
	.loc	2 0 2
	leaq	496(%rsp), %r14
.Ltmp145:
	.p2align	4, 0x90
.LBB11_42:
	.loc	2 177 2
	movq	1208(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp146:
	.loc	2 178 11 is_stmt 1
	movq	%rbp, %rdi
	callq	command_line_arguments.Component.Type
	cmpq	$1, %rax
	movq	%rbp, 48(%rsp)
	je	.LBB11_61
.Ltmp147:
	.loc	2 0 11 is_stmt 0
	cmpq	$2, %rax
	jne	.LBB11_103
.Ltmp148:
	.loc	2 180 28 is_stmt 1
	movq	%rbp, %rdi
	callq	command_line_arguments.Component.Name
	movq	%rdx, %rsi
	.loc	2 180 14 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.NewDirectory
.Ltmp149:
	.loc	2 181 23 is_stmt 1
	testq	%rbp, %rbp
	leaq	1392(%rsp), %rbx
	je	.LBB11_95
.Ltmp150:
	.loc	2 0 23 is_stmt 0
	movq	%rax, %r14
.Ltmp151:
	.loc	2 181 23
	movq	24(%rbp), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 1472(%rsp)
	movaps	%xmm0, 1456(%rsp)
	movaps	%xmm0, 1440(%rsp)
	movaps	%xmm0, 1424(%rsp)
	movaps	%xmm0, 1408(%rsp)
	movaps	%xmm0, 1392(%rsp)
	.loc	2 181 4
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%rbx, %rdx
	callq	runtime.mapiterinit
	movq	1392(%rsp), %rax
	testq	%rax, %rax
	movq	%rbx, %rbp
	movq	%r14, %rbx
	movq	%r14, 32(%rsp)
	je	.LBB11_47
.Ltmp152:
	.p2align	4, 0x90
.LBB11_46:
	movq	(%rax), %r14
.Ltmp153:
	movq	8(%rax), %r13
.Ltmp154:
	movq	1400(%rsp), %rax
	movq	(%rax), %rcx
.Ltmp155:
	movq	%rcx, 24(%rsp)
	movq	8(%rax), %rax
.Ltmp156:
	.loc	2 182 6 is_stmt 1
	movq	%rax, 40(%rsp)
	movq	%rbx, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub
	movq	%rax, %r15
	movq	%rdx, %r12
.Ltmp157:
	.loc	2 182 30 is_stmt 0
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	strings.ToLower
	.loc	2 182 17
	movq	%r12, %rdi
	movq	32(%rsp), %rbx
	movq	%rax, %rsi
	movq	24(%rsp), %rcx
	movq	40(%rsp), %r8
	callq	*48(%r15)
	.loc	2 181 4 is_stmt 1
	movq	%rbp, %rdi
	callq	runtime.mapiternext
	movq	1392(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB11_46
.Ltmp158:
.LBB11_47:
	.loc	2 0 4 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 1184(%rsp)
	movaps	%xmm0, 1168(%rsp)
	movaps	%xmm0, 1152(%rsp)
	movaps	%xmm0, 1136(%rsp)
	movaps	%xmm0, 1120(%rsp)
	movaps	%xmm0, 1104(%rsp)
.Ltmp159:
	.loc	2 184 4 is_stmt 1
	movq	command_line_arguments.defaultAttrs(%rip), %rsi
	movl	$type..map.6string.7interface.4.5, %edi
	leaq	1104(%rsp), %rax
	movq	%rax, %rdx
	callq	runtime.mapiterinit
	jmp	.LBB11_49
.Ltmp160:
	.p2align	4, 0x90
.LBB11_48:
	movq	(%rax), %r13
.Ltmp161:
	movq	8(%rax), %r14
.Ltmp162:
	movq	1112(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp163:
	movq	8(%rax), %r15
.Ltmp164:
	.loc	2 185 6
	movq	%rbx, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub
	movq	%rax, %r12
	movq	%rdx, %rbx
	.loc	2 185 30 is_stmt 0
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	strings.ToLower
	.loc	2 185 17
	movq	%rbx, %rdi
	movq	%rax, %rsi
	movq	%rbp, %rcx
	leaq	1104(%rsp), %rbp
	movq	%r15, %r8
	callq	*48(%r12)
	movq	32(%rsp), %rbx
	.loc	2 184 4 is_stmt 1
	movq	%rbp, %rdi
	callq	runtime.mapiternext
.Ltmp165:
.LBB11_49:
	movq	1104(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB11_48
.Ltmp166:
	.loc	2 36 44
	movq	48(%rsp), %rax
	movq	56(%rax), %rax
	movq	%rax, 40(%rsp)
.Ltmp167:
	.loc	2 187 4
	testq	%rax, %rax
	leaq	1008(%rsp), %rbp
	movq	%rbx, %r15
	jle	.LBB11_59
.Ltmp168:
	.loc	2 0 4 is_stmt 0
	movq	48(%rsp), %rax
	movq	48(%rax), %rax
	movq	%rax, 88(%rsp)
	xorl	%ecx, %ecx
.Ltmp169:
	.p2align	4, 0x90
.LBB11_52:
	.loc	2 187 4
	movq	88(%rsp), %rax
	movq	%rcx, 24(%rsp)
	movq	(%rax,%rcx,8), %rax
.Ltmp170:
	.loc	2 189 27 is_stmt 1
	testq	%rax, %rax
	je	.LBB11_95
.Ltmp171:
	movq	24(%rax), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 1088(%rsp)
	movaps	%xmm0, 1072(%rsp)
	movaps	%xmm0, 1056(%rsp)
	movaps	%xmm0, 1040(%rsp)
	movaps	%xmm0, 1024(%rsp)
	movaps	%xmm0, 1008(%rsp)
	.loc	2 189 5 is_stmt 0
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%rbp, %rdx
	callq	runtime.mapiterinit
.Ltmp172:
	.loc	2 0 5
	jmp	.LBB11_55
.Ltmp173:
	.p2align	4, 0x90
.LBB11_54:
	.loc	2 189 5
	movq	%rbp, %rdi
	callq	runtime.mapiternext
.Ltmp174:
.LBB11_55:
	movq	1008(%rsp), %rax
	testq	%rax, %rax
	je	.LBB11_58
.Ltmp175:
	movq	(%rax), %rbx
.Ltmp176:
	movq	8(%rax), %r14
.Ltmp177:
	movq	1016(%rsp), %rax
	movq	(%rax), %r13
.Ltmp178:
	movq	8(%rax), %r12
.Ltmp179:
	.loc	2 190 11 is_stmt 1
	movl	$.Lconst.214, %edx
	movl	$3, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB11_54
.Ltmp180:
	.loc	2 193 7
	movq	%r15, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub
	movq	%rax, %r15
	movq	%rdx, %rbp
	.loc	2 193 31 is_stmt 0
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	strings.ToLower
	.loc	2 193 18
	movq	%rbp, %rdi
	leaq	1008(%rsp), %rbp
	movq	%rax, %rsi
	movq	%r13, %rcx
	movq	%r12, %r8
	callq	*48(%r15)
	movq	32(%rsp), %r15
	jmp	.LBB11_54
.Ltmp181:
	.p2align	4, 0x90
.LBB11_58:
	.loc	2 0 18
	movq	24(%rsp), %rcx
	.loc	2 187 4 is_stmt 1
	addq	$1, %rcx
	cmpq	40(%rsp), %rcx
	jl	.LBB11_52
.Ltmp182:
.LBB11_59:
	.loc	2 196 44
	movq	%r15, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Name..stub
	movq	%rax, %r14
	movq	%r15, %r12
	movq	%rdx, %r15
	.loc	2 196 13 is_stmt 0
	movq	command_line_arguments.PkgLogger(%rip), %rax
	movq	8(%rax), %rax
	movq	%rax, 24(%rsp)
	movq	command_line_arguments.PkgLogger+8(%rip), %r13
	movl	$type...62x.7interface.4.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r14, 344(%rsp)
	movq	%r15, 352(%rsp)
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	344(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	$string..d, 464(%rsp)
	movq	%rbp, 472(%rsp)
	movq	$type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, 480(%rsp)
	movq	%r12, 488(%rsp)
	movl	$type...62x.7interface.4.5, %edi
	movq	%rbx, %rsi
	leaq	464(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	%rbx, 280(%rsp)
	movq	$2, 288(%rsp)
	movq	$2, 296(%rsp)
	movq	296(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	280(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.216, %esi
	movl	$17, %edx
	movq	%r13, %rdi
	callq	*24(%rsp)
.Ltmp183:
	.loc	2 33 44 is_stmt 1
	movq	48(%rsp), %rax
	movups	(%rax), %xmm0
	movups	%xmm0, 728(%rsp)
.Ltmp184:
	.loc	2 197 25
	movq	$pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, 152(%rsp)
	movq	%r12, 160(%rsp)
	movq	56(%rsp), %rbp
	.loc	2 197 5 is_stmt 0
	movq	8(%rbp), %rsi
	.loc	2 197 25
	movl	$type..map.6string.7command_line_arguments.Entity, %edi
	leaq	728(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB11_80
.Ltmp185:
	movl	$command_line_arguments.Entity..d, %edi
	movq	%rax, %rsi
	leaq	152(%rsp), %rdx
	jmp	.LBB11_79
.Ltmp186:
	.p2align	4, 0x90
.LBB11_61:
	.loc	2 199 23 is_stmt 1
	movq	%rbp, %rdi
	callq	command_line_arguments.Component.Name
	movq	%rdx, %rsi
	.loc	2 199 14 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.NewFile
.Ltmp187:
	.loc	2 200 23 is_stmt 1
	testq	%rbp, %rbp
	je	.LBB11_95
.Ltmp188:
	.loc	2 0 23 is_stmt 0
	movq	%rax, %rbx
.Ltmp189:
	.loc	2 200 23
	movq	24(%rbp), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 576(%rsp)
	movaps	%xmm0, 560(%rsp)
	movaps	%xmm0, 544(%rsp)
	movaps	%xmm0, 528(%rsp)
	movaps	%xmm0, 512(%rsp)
	movaps	%xmm0, 496(%rsp)
	.loc	2 200 4
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%r14, %rdx
	callq	runtime.mapiterinit
	movq	496(%rsp), %rax
	testq	%rax, %rax
	movq	%rbx, 32(%rsp)
	je	.LBB11_65
.Ltmp190:
	.loc	2 0 4
	movq	%r14, %rbp
.Ltmp191:
	.p2align	4, 0x90
.LBB11_64:
	.loc	2 200 4
	movq	(%rax), %r14
.Ltmp192:
	movq	8(%rax), %r15
.Ltmp193:
	movq	504(%rsp), %rax
	movq	(%rax), %rcx
.Ltmp194:
	movq	%rcx, 24(%rsp)
	movq	8(%rax), %rax
.Ltmp195:
	.loc	2 201 6 is_stmt 1
	movq	%rax, 40(%rsp)
	movq	%rbx, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub
	movq	%rax, %r13
	movq	%rdx, %r12
.Ltmp196:
	.loc	2 201 30 is_stmt 0
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	strings.ToLower
	.loc	2 201 17
	movq	%r12, %rdi
	movq	32(%rsp), %rbx
	movq	%rax, %rsi
	movq	24(%rsp), %rcx
	movq	40(%rsp), %r8
	callq	*48(%r13)
	.loc	2 200 4 is_stmt 1
	movq	%rbp, %rdi
	callq	runtime.mapiternext
	movq	496(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB11_64
.Ltmp197:
.LBB11_65:
	.loc	2 0 4 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 992(%rsp)
	movaps	%xmm0, 976(%rsp)
	movaps	%xmm0, 960(%rsp)
	movaps	%xmm0, 944(%rsp)
	movaps	%xmm0, 928(%rsp)
	movaps	%xmm0, 912(%rsp)
.Ltmp198:
	.loc	2 203 4 is_stmt 1
	movq	command_line_arguments.defaultAttrs(%rip), %rsi
	movl	$type..map.6string.7interface.4.5, %edi
	leaq	912(%rsp), %rax
	movq	%rax, %rdx
	callq	runtime.mapiterinit
	jmp	.LBB11_67
.Ltmp199:
	.p2align	4, 0x90
.LBB11_66:
	movq	(%rax), %r13
.Ltmp200:
	movq	8(%rax), %r14
.Ltmp201:
	movq	920(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp202:
	movq	8(%rax), %r15
.Ltmp203:
	.loc	2 204 6
	movq	%rbx, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub
	movq	%rax, %r12
	movq	%rdx, %rbx
	.loc	2 204 30 is_stmt 0
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	strings.ToLower
	.loc	2 204 17
	movq	%rbx, %rdi
	movq	%rax, %rsi
	movq	%rbp, %rcx
	leaq	912(%rsp), %rbp
	movq	%r15, %r8
	callq	*48(%r12)
	movq	32(%rsp), %rbx
	.loc	2 203 4 is_stmt 1
	movq	%rbp, %rdi
	callq	runtime.mapiternext
.Ltmp204:
.LBB11_67:
	movq	912(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB11_66
.Ltmp205:
	.loc	2 36 44
	movq	48(%rsp), %rax
	movq	56(%rax), %rax
	movq	%rax, 40(%rsp)
.Ltmp206:
	.loc	2 206 4
	testq	%rax, %rax
	leaq	816(%rsp), %r15
	jle	.LBB11_77
.Ltmp207:
	.loc	2 0 4 is_stmt 0
	movq	48(%rsp), %rax
	movq	48(%rax), %rax
	movq	%rax, 88(%rsp)
	xorl	%ecx, %ecx
.Ltmp208:
	.p2align	4, 0x90
.LBB11_70:
	.loc	2 206 4
	movq	88(%rsp), %rax
	movq	%rcx, 24(%rsp)
	movq	(%rax,%rcx,8), %rax
.Ltmp209:
	.loc	2 208 27 is_stmt 1
	testq	%rax, %rax
	je	.LBB11_95
.Ltmp210:
	movq	24(%rax), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 896(%rsp)
	movaps	%xmm0, 880(%rsp)
	movaps	%xmm0, 864(%rsp)
	movaps	%xmm0, 848(%rsp)
	movaps	%xmm0, 832(%rsp)
	movaps	%xmm0, 816(%rsp)
	.loc	2 208 5 is_stmt 0
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%r15, %rdx
	callq	runtime.mapiterinit
.Ltmp211:
	.loc	2 0 5
	jmp	.LBB11_73
.Ltmp212:
	.p2align	4, 0x90
.LBB11_72:
	.loc	2 208 5
	movq	%r15, %rdi
	callq	runtime.mapiternext
.Ltmp213:
.LBB11_73:
	movq	816(%rsp), %rax
	testq	%rax, %rax
	je	.LBB11_76
.Ltmp214:
	movq	(%rax), %rbx
.Ltmp215:
	movq	8(%rax), %rbp
.Ltmp216:
	movq	824(%rsp), %rax
	movq	(%rax), %r14
.Ltmp217:
	movq	8(%rax), %r13
.Ltmp218:
	.loc	2 209 11 is_stmt 1
	movl	$.Lconst.214, %edx
	movl	$3, %ecx
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB11_72
.Ltmp219:
	.loc	2 212 7
	movq	32(%rsp), %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub
	movq	%rax, %r15
	movq	%rdx, %r12
	.loc	2 212 31 is_stmt 0
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	strings.ToLower
	.loc	2 212 18
	movq	%r12, %rdi
	movq	%rax, %rsi
	movq	%r14, %rcx
	movq	%r13, %r8
	callq	*48(%r15)
	leaq	816(%rsp), %r15
	jmp	.LBB11_72
.Ltmp220:
	.p2align	4, 0x90
.LBB11_76:
	.loc	2 0 18
	movq	24(%rsp), %rcx
	.loc	2 206 4 is_stmt 1
	addq	$1, %rcx
	cmpq	40(%rsp), %rcx
	jl	.LBB11_70
.Ltmp221:
.LBB11_77:
	.loc	2 0 4 is_stmt 0
	movq	32(%rsp), %r12
	.loc	2 215 44 is_stmt 1
	movq	%r12, %rdi
	callq	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Name..stub
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	2 215 13 is_stmt 0
	movq	command_line_arguments.PkgLogger(%rip), %rax
	movq	8(%rax), %rax
	movq	%rax, 24(%rsp)
	movq	command_line_arguments.PkgLogger+8(%rip), %r13
	movl	$type...62x.7interface.4.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r14, 328(%rsp)
	movq	%r15, 336(%rsp)
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	328(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	$string..d, 432(%rsp)
	movq	%rbp, 440(%rsp)
	movq	$type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File, 448(%rsp)
	movq	%r12, 456(%rsp)
	movl	$type...62x.7interface.4.5, %edi
	movq	%rbx, %rsi
	leaq	432(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	%rbx, 304(%rsp)
	movq	$2, 312(%rsp)
	movq	$2, 320(%rsp)
	movq	320(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	304(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.216, %esi
	movl	$17, %edx
	movq	%r13, %rdi
	callq	*24(%rsp)
.Ltmp222:
	.loc	2 33 44 is_stmt 1
	movq	48(%rsp), %rax
	movups	(%rax), %xmm0
	movups	%xmm0, 712(%rsp)
.Ltmp223:
	.loc	2 216 25
	movq	$pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File, 136(%rsp)
	movq	%r12, 144(%rsp)
	movq	56(%rsp), %rbp
	.loc	2 216 5 is_stmt 0
	movq	8(%rbp), %rsi
	.loc	2 216 25
	movl	$type..map.6string.7command_line_arguments.Entity, %edi
	leaq	712(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB11_82
.Ltmp224:
	movl	$command_line_arguments.Entity..d, %edi
	movq	%rax, %rsi
	leaq	136(%rsp), %rdx
.Ltmp225:
.LBB11_79:
	.loc	2 0 25
	callq	runtime.typedmemmove
	leaq	496(%rsp), %r14
	jmp	.LBB11_85
.Ltmp226:
.LBB11_80:
	.loc	2 197 25 is_stmt 1
	testq	%rax, %rax
	leaq	496(%rsp), %r14
	je	.LBB11_95
.Ltmp227:
	movups	152(%rsp), %xmm0
	jmp	.LBB11_84
.Ltmp228:
.LBB11_82:
	.loc	2 216 25
	testq	%rax, %rax
	leaq	496(%rsp), %r14
	je	.LBB11_95
.Ltmp229:
	movups	136(%rsp), %xmm0
.Ltmp230:
.LBB11_84:
	.loc	2 0 25 is_stmt 0
	movups	%xmm0, (%rax)
.Ltmp231:
.LBB11_85:
	.loc	2 177 2 is_stmt 1
	leaq	1200(%rsp), %rdi
	callq	runtime.mapiternext
	cmpq	$0, 1200(%rsp)
	jne	.LBB11_42
.Ltmp232:
.LBB11_86:
	.loc	2 221 11
	movl	$.Lconst.131, %esi
	movl	$4, %edx
	movq	%rbp, %rdi
	callq	command_line_arguments.Resources.GetObject
	movq	%rax, %rbx
.Ltmp233:
	movq	%rdx, %r14
.Ltmp234:
	.loc	2 222 23
	movq	8(%rbp), %rdx
	.loc	2 222 7 is_stmt 0
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	command_line_arguments.NewLevel
	movq	%rbp, %rdi
	movq	%rax, %rbp
.Ltmp235:
	.loc	2 223 3 is_stmt 1
	addq	$16, %rdi
	.loc	2 223 10 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB11_90
.Ltmp236:
	movq	%rbp, %rsi
	callq	runtime.writebarrierptr
	.loc	2 224 10 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB11_91
.Ltmp237:
.LBB11_88:
	movq	(%rbx), %rsi
	jmp	.LBB11_92
.Ltmp238:
.LBB11_89:
	.loc	2 0 10 is_stmt 0
	movq	128(%rsp), %rcx
.Ltmp239:
	.loc	2 153 4 is_stmt 1
	movq	$0, (%rcx)
	movq	%rax, 8(%rcx)
	movq	%rdx, 16(%rcx)
	jmp	.LBB11_93
.Ltmp240:
.LBB11_90:
	.loc	2 223 10
	movq	%rbp, (%rdi)
	.loc	2 224 10
	testq	%rbx, %rbx
	jne	.LBB11_88
.Ltmp241:
.LBB11_91:
	.loc	2 0 10 is_stmt 0
	xorl	%esi, %esi
.Ltmp242:
.LBB11_92:
	.loc	2 224 10
	movl	$github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, %edi
	callq	runtime.requireitab
	.loc	2 224 3
	movq	%rbp, %rdi
	movq	%rax, %rsi
	movq	%r14, %rdx
	callq	command_line_arguments.Level.visit
	.loc	2 225 10 is_stmt 1
	movq	%rbp, %rdi
	callq	command_line_arguments.Level.Root
.Ltmp243:
	.loc	2 0 10 is_stmt 0
	movq	128(%rsp), %rcx
	.loc	2 225 2
	movq	%rax, (%rcx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rcx)
.Ltmp244:
.LBB11_93:
	.loc	2 0 2
	movq	%rcx, %rax
.Ltmp245:
.LBB11_94:
	addq	$1592, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB11_95:
	.cfi_def_cfa_offset 1648
.Ltmp246:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp247:
.LBB11_96:
	.loc	2 172 14 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp248:
.LBB11_97:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp249:
.LBB11_98:
	.loc	2 166 59
	movq	%r14, %rdi
	callq	command_line_arguments.Component.Base
.Ltmp250:
	movq	%rax, %r14
.Ltmp251:
	movq	%rdx, %rbp
	.loc	2 166 15 is_stmt 0
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 392(%rsp)
	movq	%rbp, 400(%rsp)
	leaq	392(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 376(%rsp)
	movq	%rbx, 384(%rsp)
	leaq	376(%rsp), %rax
	movq	%rax, 232(%rsp)
	movq	$1, 240(%rsp)
	movq	$1, 248(%rsp)
	movq	248(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	232(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.209, %edi
	movl	$32, %esi
	jmp	.LBB11_100
.Ltmp252:
.LBB11_99:
	.loc	2 170 15 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp253:
	movq	%rax, %rbx
	movaps	64(%rsp), %xmm0
	movaps	%xmm0, 624(%rsp)
	leaq	624(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 360(%rsp)
	movq	%rbx, 368(%rsp)
	leaq	360(%rsp), %rax
	movq	%rax, 256(%rsp)
	movq	$1, 264(%rsp)
	movq	$1, 272(%rsp)
	movq	272(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	256(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.211, %edi
	movl	$29, %esi
.Ltmp254:
.LBB11_100:
	.loc	2 0 15 is_stmt 0
	callq	fmt.Errorf
	testq	%rax, %rax
	jne	.LBB11_102
.Ltmp255:
	xorl	%edi, %edi
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp256:
.LBB11_102:
	movq	(%rax), %rdi
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp257:
.LBB11_103:
	.loc	2 218 4 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	.Lconst.220(%rip), %xmm0
	movaps	%xmm0, 592(%rsp)
	leaq	592(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp258:
.Lfunc_end11:
	.size	command_line_arguments.Resources.LoadDir, .Lfunc_end11-command_line_arguments.Resources.LoadDir
	.cfi_endproc

	.section	.text.command_line_arguments.Resources.LoadFile,"ax",@progbits
	.globl	command_line_arguments.Resources.LoadFile
	.p2align	4, 0x90
	.type	command_line_arguments.Resources.LoadFile,@function
command_line_arguments.Resources.LoadFile:
.Lfunc_begin12:
	.loc	2 115 0
	.cfi_startproc
	leaq	-520(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB12_2
	movq	%r10, %rax
	movabsq	$520, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB12_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$472, %rsp
	.cfi_def_cfa_offset 528
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r13
.Ltmp259:
	leaq	264(%rsp), %rdi
.Ltmp260:
	.loc	2 116 22 prologue_end
	callq	io_ioutil.ReadFile
.Ltmp261:
	movq	288(%rsp), %rax
.Ltmp262:
	movq	296(%rsp), %rdx
.Ltmp263:
	.loc	2 0 22 is_stmt 0
	movups	264(%rsp), %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	280(%rsp), %rcx
	movq	%rcx, 144(%rsp)
	.loc	2 117 9 is_stmt 1
	testq	%rax, %rax
	jne	.LBB12_11
.Ltmp264:
	.loc	2 120 2
	movl	$type..map.6string.7interface.4.5, %edi
	callq	runtime.newobject
.Ltmp265:
	movq	%rax, %rbx
.Ltmp266:
	.loc	2 120 8 is_stmt 0
	callq	runtime.makemap_small
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB12_4
.Ltmp267:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB12_7
.Ltmp268:
.LBB12_4:
	testq	%rbx, %rbx
	je	.LBB12_5
.Ltmp269:
	movq	%rax, (%rbx)
.Ltmp270:
.LBB12_7:
	.loc	2 121 13 is_stmt 1
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$type...1map.6string.7interface.4.5, %edi
	movq	%rbx, %rsi
	callq	gopkg_in_yaml_v2.Unmarshal
.Ltmp271:
	.loc	2 122 9
	testq	%rax, %rax
	jne	.LBB12_11
.Ltmp272:
	.loc	2 0 9 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 384(%rsp)
	movaps	%xmm0, 368(%rsp)
	movaps	%xmm0, 352(%rsp)
	movaps	%xmm0, 336(%rsp)
	movaps	%xmm0, 320(%rsp)
	movaps	%xmm0, 304(%rsp)
.Ltmp273:
	.loc	2 125 2 is_stmt 1
	movq	(%rbx), %rsi
	leaq	304(%rsp), %rdx
	movl	$type..map.6string.7interface.4.5, %edi
	callq	runtime.mapiterinit
.Ltmp274:
	.loc	2 0 2 is_stmt 0
	jmp	.LBB12_9
.Ltmp275:
	.p2align	4, 0x90
.LBB12_27:
	.loc	2 141 12 is_stmt 1
	movq	command_line_arguments.PkgLogger(%rip), %rax
	movq	8(%rax), %r14
	movq	command_line_arguments.PkgLogger+8(%rip), %rbx
	movl	$type...61x.7interface.4.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	$type...1command_line_arguments.Component, 48(%rsp)
	movq	%r12, 56(%rsp)
	movl	$type...61x.7interface.4.5, %edi
	movq	%rax, %rsi
	leaq	48(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	%rbp, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.201, %esi
	movl	$25, %edx
	movq	%rbx, %rdi
	callq	*%r14
.Ltmp276:
	.loc	2 125 2
	leaq	304(%rsp), %rdi
	callq	runtime.mapiternext
.Ltmp277:
.LBB12_9:
	movq	304(%rsp), %rax
	testq	%rax, %rax
	je	.LBB12_10
.Ltmp278:
	movq	(%rax), %rsi
.Ltmp279:
	movq	8(%rax), %rdx
.Ltmp280:
	movq	312(%rsp), %rax
	movq	(%rax), %rbp
.Ltmp281:
	movq	8(%rax), %r12
.Ltmp282:
	.loc	2 126 20
	movl	$.Lconst.194, %ecx
	movl	$1, %r8d
	movl	$2, %r9d
	leaq	240(%rsp), %rdi
	callq	strings.SplitN
.Ltmp283:
	.loc	2 127 17
	cmpq	$2, 248(%rsp)
	jne	.LBB12_29
.Ltmp284:
	.loc	2 0 17 is_stmt 0
	movq	240(%rsp), %r15
.Ltmp285:
	.loc	2 132 11 is_stmt 1
	movq	(%r15), %rbx
.Ltmp286:
	movq	8(%r15), %r14
.Ltmp287:
	.loc	2 49 2
	movl	$.Lconst.78, %edx
	movl	$4, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB12_14
.Ltmp288:
	.loc	2 0 2 is_stmt 0
	movl	$1, %r14d
	jmp	.LBB12_17
.Ltmp289:
	.p2align	4, 0x90
.LBB12_14:
	.loc	2 51 2 is_stmt 1
	movl	$.Lconst.80, %edx
	movl	$3, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB12_16
.Ltmp290:
	.loc	2 0 2 is_stmt 0
	movl	$2, %r14d
	jmp	.LBB12_17
.Ltmp291:
	.p2align	4, 0x90
.LBB12_16:
	.loc	2 53 2 is_stmt 1
	movl	$.Lconst.58, %edx
	movl	$4, %ecx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.eqstring
	xorl	%ecx, %ecx
	cmpb	$1, %al
	sete	%cl
	leaq	(%rcx,%rcx,2), %r14
.Ltmp292:
.LBB12_17:
	.loc	2 133 11
	movq	%rbp, %rdi
	movq	%r12, %rsi
	callq	command_line_arguments.parseAttrs
	movq	%rax, %rbx
	.loc	2 135 11
	movl	$type...1command_line_arguments.Component, %esi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	leaq	216(%rsp), %rdi
	callq	runtime.makeslice
	movq	232(%rsp), %rax
	movq	%rax, 112(%rsp)
	movups	216(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	16(%r15), %xmm0
	movaps	%xmm0, 176(%rsp)
	movups	(%r15), %xmm0
	movaps	%xmm0, 160(%rsp)
	.loc	2 130 8
	movl	$command_line_arguments.Component..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
.Ltmp293:
	.loc	2 130 9 is_stmt 0
	movaps	176(%rsp), %xmm0
	movaps	%xmm0, 400(%rsp)
	movq	%r14, 416(%rsp)
	movq	%rbx, 424(%rsp)
	movaps	160(%rsp), %xmm0
	leaq	432(%rsp), %rax
	movq	%rax, %rcx
	movups	%xmm0, (%rax)
	movq	112(%rsp), %rax
	movq	%rax, 32(%rcx)
	movaps	96(%rsp), %xmm0
	movups	%xmm0, 16(%rcx)
	.loc	2 130 8
	movl	$command_line_arguments.Component..d, %edi
	movq	%r12, %rsi
	leaq	400(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp294:
	.loc	2 137 29 is_stmt 1
	movq	%r12, %rdi
	callq	command_line_arguments.Component.Name
	movq	%rax, 80(%rsp)
	movq	%rdx, 88(%rsp)
	testq	%r13, %r13
	je	.LBB12_5
.Ltmp295:
	.loc	2 137 16 is_stmt 0
	movq	(%r13), %rsi
	.loc	2 137 6
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	leaq	80(%rsp), %rdx
	callq	runtime.mapaccess2
.Ltmp296:
	.loc	2 137 3
	testb	$1, %dl
	jne	.LBB12_19
.Ltmp297:
	.loc	2 140 17 is_stmt 1
	movq	%r12, %rdi
	callq	command_line_arguments.Component.Name
.Ltmp298:
	.loc	2 0 17 is_stmt 0
	movq	%rax, 64(%rsp)
	movq	%rdx, 72(%rsp)
	.loc	2 140 4
	movq	(%r13), %rsi
	.loc	2 140 26
	movl	$type..map.6string.7.1command_line_arguments.Component, %edi
	leaq	64(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB12_24
.Ltmp299:
	movq	%rax, %rdi
	movq	%r12, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB12_27
.Ltmp300:
	.p2align	4, 0x90
.LBB12_24:
	testq	%rax, %rax
	je	.LBB12_5
.Ltmp301:
	movq	%r12, (%rax)
	jmp	.LBB12_27
.Ltmp302:
.LBB12_10:
	.loc	2 143 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp303:
.LBB12_11:
	.loc	2 0 2 is_stmt 0
	addq	$472, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp304:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB12_5:
	.cfi_def_cfa_offset 528
.Ltmp305:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp306:
.LBB12_29:
	.loc	2 128 4 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp307:
	.loc	2 0 4 is_stmt 0
	movups	.Lconst.197(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	leaq	192(%rsp), %rdx
	.loc	2 128 4
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.Ltmp308:
.LBB12_19:
	.loc	2 138 14 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.198, %edi
	movl	$29, %esi
	callq	fmt.Errorf
.Ltmp309:
	testq	%rax, %rax
	jne	.LBB12_22
.Ltmp310:
	.loc	2 0 14 is_stmt 0
	xorl	%edi, %edi
	.loc	2 138 4
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp311:
.LBB12_22:
	.loc	2 138 14
	movq	(%rax), %rdi
	.loc	2 138 4
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp312:
.Lfunc_end12:
	.size	command_line_arguments.Resources.LoadFile, .Lfunc_end12-command_line_arguments.Resources.LoadFile
	.cfi_endproc

	.section	.text.command_line_arguments.Level.AddProperty,"ax",@progbits
	.globl	command_line_arguments.Level.AddProperty
	.p2align	4, 0x90
	.type	command_line_arguments.Level.AddProperty,@function
command_line_arguments.Level.AddProperty:
.Lfunc_begin13:
	.loc	5 87 0 is_stmt 1
	.cfi_startproc
	leaq	-568(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB13_2
	movq	%r10, %rax
	movabsq	$568, %r10
	movabsq	$16, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB13_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$520, %rsp
	.cfi_def_cfa_offset 576
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, %r15
	movq	%rdx, %r12
	movq	%rsi, 32(%rsp)
	movq	%rdi, %r13
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp313:
	.loc	5 88 2 prologue_end
	movq	576(%rsp), %rbx
	movq	584(%rsp), %rbp
	leaq	48(%rsp), %rcx
	movl	$string..d, %edi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	callq	runtime.ifaceE2T2
.Ltmp314:
	.loc	5 89 5
	testb	%al, %al
	je	.LBB13_3
.Ltmp315:
	.loc	5 0 5 is_stmt 0
	movq	%r12, 40(%rsp)
	movq	%r15, 72(%rsp)
.Ltmp316:
	movq	%r14, 80(%rsp)
	movq	48(%rsp), %rax
.Ltmp317:
	movq	%rax, 88(%rsp)
	movq	56(%rsp), %r14
.Ltmp318:
	.loc	5 92 13 is_stmt 1
	callq	runtime.makemap_small
.Ltmp319:
	.loc	5 93 21
	testq	%r13, %r13
	je	.LBB13_44
.Ltmp320:
	.loc	5 0 21 is_stmt 0
	movq	%rax, %rbp
.Ltmp321:
	.loc	5 93 21
	movq	16(%r13), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 400(%rsp)
	movaps	%xmm0, 496(%rsp)
	movaps	%xmm0, 480(%rsp)
	movaps	%xmm0, 464(%rsp)
	movaps	%xmm0, 448(%rsp)
	movaps	%xmm0, 432(%rsp)
	movaps	%xmm0, 416(%rsp)
	leaq	416(%rsp), %rdx
	.loc	5 93 2
	movl	$type..map.6string.7command_line_arguments.Entity, %edi
	callq	runtime.mapiterinit
	movq	416(%rsp), %rax
	testq	%rax, %rax
	je	.LBB13_18
.Ltmp322:
	.loc	5 0 2
	leaq	384(%rsp), %r15
	leaq	416(%rsp), %rbx
	leaq	96(%rsp), %r12
.Ltmp323:
	.p2align	4, 0x90
.LBB13_16:
	.loc	5 93 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 400(%rsp)
	movq	424(%rsp), %rax
	movq	(%rax), %rcx
.Ltmp324:
	movq	8(%rax), %rax
	movaps	%xmm0, 384(%rsp)
	.loc	5 94 16 is_stmt 1
	testq	%rcx, %rcx
	je	.LBB13_17
.Ltmp325:
	movq	(%rcx), %rcx
.Ltmp326:
	.loc	5 0 16 is_stmt 0
	jmp	.LBB13_11
.Ltmp327:
	.p2align	4, 0x90
.LBB13_17:
	xorl	%ecx, %ecx
.Ltmp328:
.LBB13_11:
	.loc	5 94 14
	movq	%rcx, 96(%rsp)
	movq	%rax, 104(%rsp)
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%rbp, %rsi
	movq	%r15, %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_12
.Ltmp329:
	movl	$type..interface.4.5, %edi
	movq	%rax, %rsi
	movq	%r12, %rdx
	callq	runtime.typedmemmove
	jmp	.LBB13_15
.Ltmp330:
	.p2align	4, 0x90
.LBB13_12:
	testq	%rax, %rax
	je	.LBB13_44
.Ltmp331:
	movups	96(%rsp), %xmm0
	movups	%xmm0, (%rax)
.Ltmp332:
.LBB13_15:
	.loc	5 93 2 is_stmt 1
	movq	%rbx, %rdi
	callq	runtime.mapiternext
	movq	416(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB13_16
.Ltmp333:
.LBB13_18:
	.loc	5 0 2 is_stmt 0
	leaq	360(%rsp), %rdi
.Ltmp334:
	.loc	5 96 19 is_stmt 1
	movq	%rbp, %rsi
	callq	github_com_ChrisRx_dungeonfs_pkg_eval.NewContext
.Ltmp335:
	movq	360(%rsp), %rbp
.Ltmp336:
	movq	368(%rsp), %rbx
.Ltmp337:
	movq	376(%rsp), %r12
.Ltmp338:
	.loc	5 96 2 is_stmt 0
	movl	$type...1github_com_ChrisRx_dungeonfs_pkg_eval.Context, %edi
	callq	runtime.newobject
	movq	%rax, %r15
.Ltmp339:
	.loc	5 96 19
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_19
.Ltmp340:
	movq	%r15, %rdi
	movq	%rbp, %rsi
	callq	runtime.writebarrierptr
	.loc	5 97 9 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB13_25
.Ltmp341:
.LBB13_23:
	.loc	5 98 3
	movq	%rbx, %rax
	movq	%r12, %rdx
	jmp	.LBB13_24
.Ltmp342:
.LBB13_3:
	.loc	5 90 81
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	reflect.TypeOf
.Ltmp343:
	testq	%rax, %rax
	je	.LBB13_4
.Ltmp344:
	movq	(%rax), %rax
	jmp	.LBB13_5
.Ltmp345:
.LBB13_19:
	.loc	5 96 19
	testq	%r15, %r15
	je	.LBB13_44
.Ltmp346:
	movq	%rbp, (%r15)
	.loc	5 97 9
	testq	%rbx, %rbx
	jne	.LBB13_23
.Ltmp347:
.LBB13_25:
	.loc	5 100 40
	movq	40(%rsp), %rdi
	movq	32(%rsp), %rax
	callq	*72(%rax)
	movq	%rdx, %rbp
	.loc	5 100 17 is_stmt 0
	movq	$-1, (%rsp)
	movl	$.Lconst.244, %edx
	movl	$4, %ecx
	movq	88(%rsp), %rdi
	movq	%r14, %rsi
	movq	%rax, %r8
	movq	%rbp, %r9
	callq	strings.Replace
	movq	%rax, %r14
.Ltmp348:
	movq	%rdx, %rbp
.Ltmp349:
	.loc	5 101 12 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp350:
	.loc	5 0 12 is_stmt 0
	movq	%r14, 256(%rsp)
	movq	%rbp, 264(%rsp)
	leaq	256(%rsp), %rdx
	.loc	5 101 12
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 240(%rsp)
	movq	%rbx, 248(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$1, 144(%rsp)
	movq	$1, 152(%rsp)
	movq	command_line_arguments.srcTmpl(%rip), %rdi
	movq	command_line_arguments.srcTmpl+8(%rip), %rsi
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	fmt.Sprintf
	movq	%rax, %r12
.Ltmp351:
	movq	%rdx, %rbp
.Ltmp352:
	.loc	5 102 16 is_stmt 1
	callq	go_token.NewFileSet
	movq	%rax, %r14
.Ltmp353:
	.loc	5 103 39
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r12, 224(%rsp)
	movq	%rbp, 232(%rsp)
	leaq	224(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	5 103 19 is_stmt 0
	movq	$32, (%rsp)
	leaq	336(%rsp), %rdi
.Ltmp354:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movl	$string..d, %r8d
	movq	%r14, %rsi
	movq	%rbx, %r9
	callq	go_parser.ParseFile
.Ltmp355:
	movq	336(%rsp), %r12
	movq	344(%rsp), %rbp
.Ltmp356:
	movq	352(%rsp), %r14
.Ltmp357:
	.loc	5 103 2
	movl	$type...1go_ast.File, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp358:
	.loc	5 103 19
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_26
.Ltmp359:
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB13_29
.Ltmp360:
.LBB13_4:
	.loc	5 0 19
	xorl	%eax, %eax
.Ltmp361:
.LBB13_5:
	.loc	5 90 14 is_stmt 1
	movq	%rax, 272(%rsp)
	movq	%rdx, 280(%rsp)
	leaq	272(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	$1, 128(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.240, %edi
	movl	$48, %esi
	callq	fmt.Errorf
	jmp	.LBB13_24
.Ltmp362:
.LBB13_26:
	.loc	5 103 19
	testq	%rbx, %rbx
	je	.LBB13_44
.Ltmp363:
	movq	%r12, (%rbx)
.Ltmp364:
.LBB13_29:
	.loc	5 104 9
	testq	%rbp, %rbp
	movq	40(%rsp), %r12
	je	.LBB13_31
.Ltmp365:
	.loc	5 105 3
	movq	%rbp, %rax
	movq	%r14, %rdx
	jmp	.LBB13_24
.Ltmp366:
.LBB13_31:
	.loc	5 107 7
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp367:
	movq	$command_line_arguments..1command_line_arguments.Level.AddProperty..func1, 312(%rsp)
	movq	%r15, 320(%rsp)
	movq	%rbx, 328(%rsp)
	leaq	312(%rsp), %rdx
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp368:
	.loc	5 111 31
	movq	%r12, %rdi
	movq	32(%rsp), %rbx
.Ltmp369:
	callq	*72(%rbx)
	movq	%rax, 208(%rsp)
	movq	%rdx, 216(%rsp)
	.loc	5 111 15 is_stmt 0
	movq	32(%r13), %rsi
	leaq	208(%rsp), %rdx
	.loc	5 111 5
	movl	$type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, %edi
	callq	runtime.mapaccess2
.Ltmp370:
	.loc	5 111 41
	testb	%dl, %dl
	movq	80(%rsp), %r15
.Ltmp371:
	.loc	5 0 41
	movq	72(%rsp), %r14
.Ltmp372:
	jne	.LBB13_37
.Ltmp373:
	.loc	5 112 20 is_stmt 1
	movq	%r12, %rdi
	callq	*72(%rbx)
.Ltmp374:
	.loc	5 0 20 is_stmt 0
	movq	%rax, 192(%rsp)
	movq	%rdx, 200(%rsp)
	.loc	5 112 31
	callq	runtime.makemap_small
	movq	%rax, %rbx
	.loc	5 112 4
	movq	32(%r13), %rsi
	leaq	192(%rsp), %rdx
	.loc	5 112 29
	movl	$type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_33
.Ltmp375:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB13_36
.Ltmp376:
.LBB13_33:
	testq	%rax, %rax
	je	.LBB13_44
.Ltmp377:
	movq	%rbx, (%rax)
.Ltmp378:
.LBB13_36:
	.loc	5 0 29
	movq	32(%rsp), %rbx
.Ltmp379:
.LBB13_37:
	.loc	5 114 19 is_stmt 1
	movq	%r12, %rdi
	callq	*72(%rbx)
	movq	%rax, 176(%rsp)
	movq	%rdx, 184(%rsp)
	.loc	5 114 3 is_stmt 0
	movq	32(%r13), %rsi
	movq	%r14, 160(%rsp)
	movq	%r15, 168(%rsp)
	leaq	176(%rsp), %rdx
	.loc	5 114 14
	movl	$type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, %edi
	callq	runtime.mapaccess1
	movq	(%rax), %rsi
	leaq	160(%rsp), %rdx
	.loc	5 114 38
	movl	$type..map.6string.7command_line_arguments.PropertyFunc, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB13_38
.Ltmp380:
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB13_41
.Ltmp381:
.LBB13_38:
	testq	%rax, %rax
	je	.LBB13_44
.Ltmp382:
	movq	%rbp, (%rax)
.Ltmp383:
.LBB13_41:
	.loc	5 0 38
	leaq	288(%rsp), %rdi
	.loc	5 115 14 is_stmt 1
	movq	%rbp, %r10
	callq	*(%rbp)
	movq	296(%rsp), %rax
.Ltmp384:
	.loc	5 116 9
	testq	%rax, %rax
	je	.LBB13_43
.Ltmp385:
	.loc	5 115 14
	movq	304(%rsp), %rdx
	jmp	.LBB13_24
.Ltmp386:
.LBB13_43:
	movq	288(%rsp), %r8
.Ltmp387:
	.loc	5 119 9
	movq	%rbx, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%r15, %rcx
	callq	command_line_arguments.SetNodeAttr
.Ltmp388:
.LBB13_24:
	.loc	5 0 9 is_stmt 0
	addq	$520, %rsp
.Ltmp389:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp390:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB13_44:
	.cfi_def_cfa_offset 576
.Ltmp391:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end13:
	.size	command_line_arguments.Level.AddProperty, .Lfunc_end13-command_line_arguments.Level.AddProperty
	.cfi_endproc

	.section	.text.command_line_arguments.Level.GetProperties,"ax",@progbits
	.globl	command_line_arguments.Level.GetProperties
	.p2align	4, 0x90
	.type	command_line_arguments.Level.GetProperties,@function
command_line_arguments.Level.GetProperties:
.Lfunc_begin14:
	.loc	5 122 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB14_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB14_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
.Ltmp392:
	.loc	5 123 17 prologue_end
	testq	%rdi, %rdi
	je	.LBB14_5
.Ltmp393:
	movq	32(%rdi), %rsi
	leaq	8(%rsp), %rdx
.Ltmp394:
	.loc	5 123 5 is_stmt 0
	movl	$type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, %edi
.Ltmp395:
	callq	runtime.mapaccess2
.Ltmp396:
	.loc	5 123 2
	testb	$1, %dl
	jne	.LBB14_6
.Ltmp397:
	.loc	5 126 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp398:
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB14_6:
	.cfi_def_cfa_offset 32
.Ltmp399:
	.loc	5 123 5
	movq	(%rax), %rax
.Ltmp400:
	.loc	5 124 3
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp401:
.LBB14_5:
	.cfi_def_cfa_offset 32
	.loc	5 123 17
	movl	$6, %edi
.Ltmp402:
	callq	__go_runtime_error
.Ltmp403:
.Lfunc_end14:
	.size	command_line_arguments.Level.GetProperties, .Lfunc_end14-command_line_arguments.Level.GetProperties
	.cfi_endproc

	.section	.text.command_line_arguments.Level.Root,"ax",@progbits
	.globl	command_line_arguments.Level.Root
	.p2align	4, 0x90
	.type	command_line_arguments.Level.Root,@function
command_line_arguments.Level.Root:
.Lfunc_begin15:
	.loc	5 34 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB15_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB15_2:
.Ltmp404:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	5 35 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB15_7
.Ltmp405:
	.loc	5 0 10 is_stmt 0
	movq	(%rdi), %rax
	movq	8(%rdi), %rbx
.Ltmp406:
	.loc	5 35 15
	testq	%rax, %rax
	je	.LBB15_4
.Ltmp407:
	movq	(%rax), %rsi
	jmp	.LBB15_5
.Ltmp408:
.LBB15_4:
	.loc	5 0 15
	xorl	%esi, %esi
.Ltmp409:
.LBB15_5:
	.loc	5 35 15
	movl	$type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, %edi
.Ltmp410:
	movl	$command_line_arguments.Entity..d, %edx
	callq	runtime.assertI2T
	.loc	5 35 2
	movq	%rbx, %rax
	popq	%rbx
.Ltmp411:
	.cfi_def_cfa_offset 8
	retq
.LBB15_7:
	.cfi_def_cfa_offset 16
.Ltmp412:
	.loc	5 35 10
	movl	$6, %edi
.Ltmp413:
	callq	__go_runtime_error
.Ltmp414:
.Lfunc_end15:
	.size	command_line_arguments.Level.Root, .Lfunc_end15-command_line_arguments.Level.Root
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI16_0:
	.zero	16
	.section	.text.command_line_arguments.Level.visit,"ax",@progbits
	.globl	command_line_arguments.Level.visit
	.p2align	4, 0x90
	.type	command_line_arguments.Level.visit,@function
command_line_arguments.Level.visit:
.Lfunc_begin16:
	.loc	5 54 0 is_stmt 1
	.cfi_startproc
	leaq	-840(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB16_2
	movq	%r10, %rax
	movabsq	$840, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB16_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$792, %rsp
	.cfi_def_cfa_offset 848
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r13
	movq	%rsi, %r14
	movq	%rdi, 112(%rsp)
.Ltmp415:
	.loc	5 55 43 prologue_end
	movq	%rdx, %rdi
	callq	*72(%rsi)
	movq	%rax, %r15
	movq	%rdx, %r12
	.loc	5 55 11 is_stmt 0
	movq	command_line_arguments.PkgLogger(%rip), %rax
	movq	8(%rax), %rax
	movq	%rax, 32(%rsp)
	movq	command_line_arguments.PkgLogger+8(%rip), %rax
	movq	%rax, 40(%rsp)
	movl	$type...61x.7interface.4.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%r15, 480(%rsp)
	movq	%r12, 488(%rsp)
	leaq	480(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 464(%rsp)
	movq	%rbp, 472(%rsp)
	leaq	464(%rsp), %rdx
	movl	$type...61x.7interface.4.5, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	movq	%rbx, 232(%rsp)
	movq	112(%rsp), %r15
.Ltmp416:
	movq	$1, 240(%rsp)
	movq	$1, 248(%rsp)
	movq	248(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	232(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.227, %esi
	movl	$15, %edx
	movq	40(%rsp), %rdi
	callq	*32(%rsp)
	movq	%r13, 128(%rsp)
.Ltmp417:
	.loc	5 56 24 is_stmt 1
	movq	%r13, %rdi
	movq	%r14, 120(%rsp)
.Ltmp418:
	callq	*64(%r14)
	.loc	5 56 35 is_stmt 0
	movq	%rdx, %rdi
	callq	*40(%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 672(%rsp)
	movaps	%xmm0, 656(%rsp)
	movaps	%xmm0, 640(%rsp)
	movaps	%xmm0, 624(%rsp)
	movaps	%xmm0, 608(%rsp)
	movaps	%xmm0, 592(%rsp)
	leaq	592(%rsp), %rdx
	.loc	5 56 2
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%rax, %rsi
	callq	runtime.mapiterinit
	jmp	.LBB16_3
.Ltmp419:
	.p2align	4, 0x90
.LBB16_45:
	leaq	592(%rsp), %rdi
	callq	runtime.mapiternext
.Ltmp420:
.LBB16_3:
	movq	592(%rsp), %rax
	testq	%rax, %rax
	je	.LBB16_56
.Ltmp421:
	movq	(%rax), %rdi
.Ltmp422:
	movq	8(%rax), %rsi
.Ltmp423:
	movq	600(%rsp), %rax
	movq	(%rax), %rcx
.Ltmp424:
	movq	%rcx, 32(%rsp)
	movq	8(%rax), %r12
.Ltmp425:
	.loc	5 57 18 is_stmt 1
	callq	strings.ToLower
.Ltmp426:
	movq	%rax, %rbx
	movq	%rdx, %rbp
	.loc	5 58 3
	movl	$.Lconst.229, %edx
	movl	$8, %ecx
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	je	.LBB16_6
.Ltmp427:
	.loc	5 60 3
	movl	$.Lconst.231, %edx
	movl	$8, %ecx
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB16_46
.Ltmp428:
.LBB16_6:
	.loc	5 39 8
	movl	$string..d, %esi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	leaq	536(%rsp), %rdi
	callq	runtime.makeslice
	movq	536(%rsp), %r13
	movq	544(%rsp), %rbx
	movq	552(%rsp), %r14
.Ltmp429:
	.loc	5 0 8 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 208(%rsp)
	movq	$0, 224(%rsp)
.Ltmp430:
	.loc	5 40 2 is_stmt 1
	movl	$type...6.7interface.4.5, %edi
	movq	32(%rsp), %rsi
	movq	%r12, 40(%rsp)
.Ltmp431:
	movq	%r12, %rdx
	leaq	208(%rsp), %rcx
	callq	runtime.ifaceE2T2
.Ltmp432:
	.loc	5 41 5
	testb	%al, %al
	je	.LBB16_14
.Ltmp433:
	.loc	5 0 5 is_stmt 0
	movq	216(%rsp), %r12
.Ltmp434:
	.loc	5 44 2 is_stmt 1
	testq	%r12, %r12
	jle	.LBB16_34
.Ltmp435:
	.loc	5 0 2 is_stmt 0
	movq	208(%rsp), %rbp
.Ltmp436:
	.loc	5 44 2
	addq	$8, %rbp
.Ltmp437:
	.loc	5 0 2
	xorl	%r15d, %r15d
.Ltmp438:
	.p2align	4, 0x90
.LBB16_9:
	.loc	5 44 2
	movq	-8(%rbp), %rsi
.Ltmp439:
	movq	(%rbp), %rdx
.Ltmp440:
	.loc	5 0 2
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 144(%rsp)
.Ltmp441:
	movaps	%xmm0, 352(%rsp)
.Ltmp442:
	.loc	5 45 3 is_stmt 1
	movl	$string..d, %edi
	leaq	352(%rsp), %rcx
	callq	runtime.ifaceE2T2
.Ltmp443:
	movaps	352(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	.loc	5 46 6
	testb	%al, %al
	je	.LBB16_10
.Ltmp444:
	.loc	5 0 6 is_stmt 0
	movq	%r13, 56(%rsp)
	movq	%rbx, 64(%rsp)
	movq	%r14, 72(%rsp)
	.loc	5 49 8 is_stmt 1
	leaq	1(%rbx), %rdx
	cmpq	%r14, %rdx
	jbe	.LBB16_26
.Ltmp445:
	movq	72(%rsp), %rax
.Ltmp446:
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	512(%rsp), %rdi
	callq	runtime.growslice
	movq	512(%rsp), %r13
	movq	520(%rsp), %rdx
	movq	528(%rsp), %r14
	jmp	.LBB16_23
.Ltmp447:
	.p2align	4, 0x90
.LBB16_26:
	cmpq	%r14, %rdx
	jg	.LBB16_28
.Ltmp448:
	.loc	5 0 8 is_stmt 0
	movq	%rdx, %rax
	orq	%r14, %rax
	js	.LBB16_28
.Ltmp449:
.LBB16_23:
	.loc	5 49 8
	movq	%r13, 56(%rsp)
	movq	%rdx, 64(%rsp)
	movq	%r14, 72(%rsp)
	testq	%rbx, %rbx
	js	.LBB16_25
.Ltmp450:
	.loc	5 0 8
	cmpq	%rdx, %rbx
	jge	.LBB16_25
.Ltmp451:
	.loc	5 49 8
	shlq	$4, %rbx
	addq	%rbx, %r13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB16_30
.Ltmp452:
	movl	$string..d, %edi
	movq	%r13, %rsi
	leaq	144(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB16_33
.Ltmp453:
	.p2align	4, 0x90
.LBB16_30:
	testq	%r13, %r13
	je	.LBB16_31
.Ltmp454:
	movaps	144(%rsp), %xmm0
	movups	%xmm0, (%r13)
.Ltmp455:
.LBB16_33:
	.loc	5 49 6
	movq	56(%rsp), %r13
	movq	64(%rsp), %rbx
	movq	72(%rsp), %r14
.Ltmp456:
	.loc	5 44 2 is_stmt 1
	addq	$1, %r15
	addq	$16, %rbp
	cmpq	%r12, %r15
	jl	.LBB16_9
.Ltmp457:
.LBB16_34:
	.loc	5 61 4
	testq	%rbx, %rbx
	movq	112(%rsp), %r15
	jle	.LBB16_45
.Ltmp458:
	addq	$8, %r13
	xorl	%ebp, %ebp
	movq	%rbx, 160(%rsp)
.Ltmp459:
	.p2align	4, 0x90
.LBB16_36:
	movq	-8(%r13), %r12
.Ltmp460:
	movq	(%r13), %r14
.Ltmp461:
	.loc	5 0 4 is_stmt 0
	movq	%r12, 448(%rsp)
	movq	%r14, 456(%rsp)
	testq	%r15, %r15
	je	.LBB16_31
.Ltmp462:
	.loc	5 62 18 is_stmt 1
	movq	16(%r15), %rsi
	.loc	5 62 8 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.Entity, %edi
	leaq	448(%rsp), %rdx
	callq	runtime.mapaccess2
.Ltmp463:
	.loc	5 62 5
	testb	$1, %dl
	je	.LBB16_44
.Ltmp464:
	.loc	5 0 5
	movq	%rbp, 136(%rsp)
	movq	(%rax), %rbx
.Ltmp465:
	movq	8(%rax), %rdi
.Ltmp466:
	.loc	5 63 43 is_stmt 1
	movq	%rdi, 32(%rsp)
.Ltmp467:
	callq	*72(%rbx)
.Ltmp468:
	.loc	5 0 43 is_stmt 0
	movq	%rbx, %r15
.Ltmp469:
	.loc	5 63 43
	movq	%rbx, 40(%rsp)
	movq	%rax, 176(%rsp)
	movq	%rdx, 168(%rsp)
	.loc	5 63 15
	movq	command_line_arguments.PkgLogger(%rip), %rax
	movq	8(%rax), %rax
	movq	%rax, 48(%rsp)
	movq	command_line_arguments.PkgLogger+8(%rip), %rax
	movq	%rax, 184(%rsp)
	movl	$type...61x.7interface.4.5, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	176(%rsp), %rax
	movq	%rax, 432(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 440(%rsp)
	movl	$string..d, %edi
	movq	%rbx, %rsi
	leaq	432(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	$string..d, 416(%rsp)
	movq	%rbx, 424(%rsp)
	movl	$type...61x.7interface.4.5, %edi
	movq	%rbp, %rsi
	leaq	416(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	%rbp, 256(%rsp)
	movq	$1, 264(%rsp)
	movq	$1, 272(%rsp)
	movq	272(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	256(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.233, %esi
	movl	$14, %edx
	movq	184(%rsp), %rdi
	callq	*48(%rsp)
	.loc	5 64 7 is_stmt 1
	movq	88(%r15), %rax
	movq	%rax, 48(%rsp)
.Ltmp470:
	movl	$type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	120(%rsp), %r15
	movq	%r15, 400(%rsp)
	movq	128(%rsp), %rbp
	movq	%rbp, 408(%rsp)
	movl	$type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, %edi
	movq	%rax, %rsi
	leaq	400(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	%rbx, 280(%rsp)
	movq	$1, 288(%rsp)
	movq	$1, 296(%rsp)
	movq	296(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	280(%rsp), %xmm0
	movups	%xmm0, (%rsp)
.Ltmp471:
	movq	32(%rsp), %rdi
	callq	*48(%rsp)
	.loc	5 65 10
	movq	%rbp, %rdi
	callq	*16(%r15)
	movq	%rdx, %rbx
	.loc	5 65 21 is_stmt 0
	movq	56(%rax), %r15
	movq	40(%rsp), %rax
.Ltmp472:
	.loc	5 65 32
	testq	%rax, %rax
	je	.LBB16_39
.Ltmp473:
	movq	(%rax), %rsi
	jmp	.LBB16_40
.Ltmp474:
.LBB16_39:
	.loc	5 0 32
	xorl	%esi, %esi
.Ltmp475:
.LBB16_40:
	.loc	5 65 32
	movl	$github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, %edi
	callq	runtime.requireitab
	.loc	5 65 21
	movq	%rbx, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%rax, %rcx
	movq	32(%rsp), %rbp
	movq	%rbp, %r8
	callq	*%r15
	xorps	%xmm0, %xmm0
	.loc	5 66 31 is_stmt 1
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movq	128(%rsp), %rdi
	movq	120(%rsp), %rax
	callq	*96(%rax)
	movq	%rax, %rbx
	movq	%rdx, %r14
	.loc	5 66 41 is_stmt 0
	movq	%rbp, %rdi
	movq	40(%rsp), %r12
	callq	*72(%r12)
	.loc	5 66 22
	movq	%rbx, 560(%rsp)
	movq	%r14, 568(%rsp)
	movq	%rax, 576(%rsp)
	movq	%rdx, 584(%rsp)
	leaq	560(%rsp), %rax
	movq	%rax, 304(%rsp)
	movq	$2, 312(%rsp)
	movq	$2, 320(%rsp)
	movq	320(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	304(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path_filepath.Join
	movq	%rax, %r14
	movq	%rdx, %r15
	.loc	5 66 7
	movq	96(%r12), %rax
	movq	%rax, 48(%rsp)
	movl	$type...61x.7string, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r14, 384(%rsp)
	movq	%r15, 392(%rsp)
	movl	$type...61x.7string, %edi
	movq	%rax, %rsi
	leaq	384(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	%rbx, 328(%rsp)
	movq	$1, 336(%rsp)
	movq	$1, 344(%rsp)
	movq	344(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	328(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movq	%rbp, %rdi
	callq	*48(%rsp)
	.loc	5 67 15 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movq	%rbp, %rdi
	callq	*96(%r12)
	movq	%rax, 368(%rsp)
	movq	%rdx, 376(%rsp)
	movq	%r12, 192(%rsp)
	movq	%rbp, 200(%rsp)
	movq	112(%rsp), %r15
	.loc	5 67 7 is_stmt 0
	movq	24(%r15), %rsi
	.loc	5 67 24
	movl	$type..map.6string.7command_line_arguments.Entity, %edi
	leaq	368(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	movq	160(%rsp), %rbx
	je	.LBB16_41
.Ltmp476:
	movl	$command_line_arguments.Entity..d, %edi
	movq	%rax, %rsi
	leaq	192(%rsp), %rdx
	callq	runtime.typedmemmove
	movq	136(%rsp), %rbp
	jmp	.LBB16_43
.Ltmp477:
.LBB16_41:
	testq	%rax, %rax
	movq	136(%rsp), %rbp
	je	.LBB16_31
.Ltmp478:
	movups	192(%rsp), %xmm0
	movups	%xmm0, (%rax)
.Ltmp479:
.LBB16_43:
	.loc	5 68 14 is_stmt 1
	movq	(%r12), %rsi
	movl	$github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d, %edi
	callq	runtime.requireitab
	.loc	5 68 7 is_stmt 0
	movq	%r15, %rdi
	movq	%rax, %rsi
	movq	32(%rsp), %rdx
	callq	command_line_arguments.Level.visit
.Ltmp480:
.LBB16_44:
	.loc	5 61 4 is_stmt 1
	addq	$1, %rbp
	addq	$16, %r13
	cmpq	%rbx, %rbp
	jl	.LBB16_36
	jmp	.LBB16_45
.Ltmp481:
	.p2align	4, 0x90
.LBB16_46:
	.loc	5 71 3
	movl	$.Lconst.171, %edx
	movl	$10, %ecx
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB16_45
.Ltmp482:
	.loc	5 0 3 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 80(%rsp)
.Ltmp483:
	.loc	5 72 29 is_stmt 1
	movq	32(%rsp), %rdi
	movq	%r12, %rsi
	callq	command_line_arguments.parseAttrs
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 768(%rsp)
	movaps	%xmm0, 752(%rsp)
	movaps	%xmm0, 736(%rsp)
	movaps	%xmm0, 720(%rsp)
	movaps	%xmm0, 704(%rsp)
	movaps	%xmm0, 688(%rsp)
	.loc	5 72 4 is_stmt 0
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%rax, %rsi
	leaq	688(%rsp), %rbp
	movq	%rbp, %rdx
	callq	runtime.mapiterinit
	jmp	.LBB16_49
.Ltmp484:
	.p2align	4, 0x90
.LBB16_48:
	movq	%rbp, %rdi
	callq	runtime.mapiternext
.Ltmp485:
.LBB16_49:
	movq	688(%rsp), %rax
	testq	%rax, %rax
	je	.LBB16_45
.Ltmp486:
	movq	(%rax), %rcx
.Ltmp487:
	movq	8(%rax), %r8
.Ltmp488:
	movq	696(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 80(%rsp)
.Ltmp489:
	.loc	5 73 16 is_stmt 1
	movaps	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movq	%r15, %rdi
	movq	120(%rsp), %rsi
	movq	128(%rsp), %rdx
	callq	command_line_arguments.Level.AddProperty
.Ltmp490:
	.loc	5 73 53 is_stmt 0
	testq	%rax, %rax
	je	.LBB16_48
.Ltmp491:
	.loc	5 74 12 is_stmt 1
	movq	(%rax), %rdi
	.loc	5 74 6 is_stmt 0
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp492:
.LBB16_56:
	.loc	5 0 6
	addq	$792, %rsp
.Ltmp493:
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp494:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB16_25:
	.cfi_def_cfa_offset 848
.Ltmp495:
	.loc	5 49 8 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp496:
.LBB16_31:
	.loc	5 0 8 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp497:
.LBB16_10:
	.loc	5 47 68 is_stmt 1
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rsi
	callq	reflect.TypeOf
.Ltmp498:
	testq	%rax, %rax
	jne	.LBB16_20
.Ltmp499:
	.loc	5 0 68 is_stmt 0
	xorl	%eax, %eax
	jmp	.LBB16_12
.Ltmp500:
.LBB16_28:
	.loc	5 49 8 is_stmt 1
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp501:
.LBB16_20:
	.loc	5 47 68
	movq	(%rax), %rax
.Ltmp502:
.LBB16_12:
	.loc	5 47 14 is_stmt 0
	movq	%rax, 496(%rsp)
	movq	%rdx, 504(%rsp)
	leaq	496(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.224, %edi
	movl	$35, %esi
	callq	fmt.Errorf
	testq	%rax, %rax
	jne	.LBB16_13
.Ltmp503:
.LBB16_17:
	.loc	5 0 14
	xorl	%edi, %edi
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp504:
.LBB16_13:
	.loc	5 47 14
	movq	(%rax), %rdi
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp505:
.LBB16_14:
	.loc	5 42 74 is_stmt 1
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rsi
	callq	reflect.TypeOf
.Ltmp506:
	testq	%rax, %rax
	jne	.LBB16_52
.Ltmp507:
	.loc	5 0 74 is_stmt 0
	xorl	%eax, %eax
	jmp	.LBB16_16
.Ltmp508:
.LBB16_52:
	.loc	5 42 74
	movq	(%rax), %rax
.Ltmp509:
.LBB16_16:
	.loc	5 42 13
	movq	%rax, 56(%rsp)
	movq	%rdx, 64(%rsp)
	leaq	56(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.222, %edi
	movl	$42, %esi
	callq	fmt.Errorf
	testq	%rax, %rax
	je	.LBB16_17
.Ltmp510:
	movq	(%rax), %rdi
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp511:
.Lfunc_end16:
	.size	command_line_arguments.Level.visit, .Lfunc_end16-command_line_arguments.Level.visit
	.cfi_endproc

	.section	.text.command_line_arguments.New,"ax",@progbits
	.globl	command_line_arguments.New
	.p2align	4, 0x90
	.type	command_line_arguments.New,@function
command_line_arguments.New:
.Lfunc_begin17:
	.loc	2 76 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB17_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB17_2:
.Ltmp512:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	2 78 15 prologue_end
	callq	runtime.makemap_small
	movq	%rax, %r14
	.loc	2 79 15
	callq	runtime.makemap_small
	movq	%rax, %r15
	.loc	2 77 7
	movl	$command_line_arguments.Resources..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp513:
	.loc	2 77 8 is_stmt 0
	movq	%r14, 8(%rsp)
	movq	%r15, 16(%rsp)
	movq	$0, 24(%rsp)
	leaq	8(%rsp), %rdx
	.loc	2 77 7
	movl	$command_line_arguments.Resources..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	2 81 2 is_stmt 1
	movq	%rbx, %rax
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp514:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp515:
.Lfunc_end17:
	.size	command_line_arguments.New, .Lfunc_end17-command_line_arguments.New
	.cfi_endproc

	.section	.text.command_line_arguments.LoadFromFile,"ax",@progbits
	.globl	command_line_arguments.LoadFromFile
	.p2align	4, 0x90
	.type	command_line_arguments.LoadFromFile,@function
command_line_arguments.LoadFromFile:
.Lfunc_begin18:
	.loc	2 84 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB18_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB18_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp516:
	.loc	2 85 7 prologue_end
	callq	command_line_arguments.New
.Ltmp517:
	.loc	2 0 7 is_stmt 0
	leaq	8(%rsp), %rdi
.Ltmp518:
	.loc	2 86 10 is_stmt 1
	movq	%rax, %rsi
	movq	%r15, %rdx
.Ltmp519:
	movq	%r14, %rcx
.Ltmp520:
	callq	command_line_arguments.Resources.LoadDir
.Ltmp521:
	movq	8(%rsp), %rax
	.loc	2 86 2 is_stmt 0
	movq	%rax, (%rbx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
	movq	%rbx, %rax
	addq	$32, %rsp
.Ltmp522:
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp523:
.Lfunc_end18:
	.size	command_line_arguments.LoadFromFile, .Lfunc_end18-command_line_arguments.LoadFromFile
	.cfi_endproc

	.section	.text.command_line_arguments.parseAttrs,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.parseAttrs,@function
command_line_arguments.parseAttrs:
.Lfunc_begin19:
	.loc	2 96 0 is_stmt 1
	.cfi_startproc
	leaq	-312(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB19_2
	movabsq	$312, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
.LBB19_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$272, %rsp
	.cfi_def_cfa_offset 320
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
.Ltmp524:
	.loc	2 97 11 prologue_end
	callq	runtime.makemap_small
	movq	%rax, %rbx
.Ltmp525:
	.loc	2 98 7
	testq	%r15, %r15
	je	.LBB19_20
.Ltmp526:
	.loc	2 0 7 is_stmt 0
	movq	$0, 32(%rsp)
	leaq	32(%rsp), %rcx
	.loc	2 101 2 is_stmt 1
	movl	$type..map.6interface.4.5.7interface.4.5, %edi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	runtime.ifaceE2T2
.Ltmp527:
	.loc	2 102 5
	testb	%al, %al
	je	.LBB19_4
.Ltmp528:
	.loc	2 101 2
	movq	32(%rsp), %rsi
.Ltmp529:
	.loc	2 0 2 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 256(%rsp)
	movaps	%xmm0, 240(%rsp)
	movaps	%xmm0, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	movaps	%xmm0, 192(%rsp)
	movaps	%xmm0, 176(%rsp)
	leaq	176(%rsp), %rdx
.Ltmp530:
	.loc	2 105 2 is_stmt 1
	movl	$type..map.6interface.4.5.7interface.4.5, %edi
	callq	runtime.mapiterinit
.Ltmp531:
	movq	176(%rsp), %rax
	testq	%rax, %rax
	je	.LBB19_20
.Ltmp532:
	.loc	2 0 2 is_stmt 0
	leaq	80(%rsp), %r14
	leaq	144(%rsp), %r15
.Ltmp533:
	leaq	176(%rsp), %r12
	leaq	64(%rsp), %r13
.Ltmp534:
	.p2align	4, 0x90
.LBB19_18:
	.loc	2 105 2
	movq	(%rax), %rsi
.Ltmp535:
	movq	8(%rax), %rdx
.Ltmp536:
	movq	184(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 112(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
.Ltmp537:
	.loc	2 0 2
	movaps	%xmm0, 80(%rsp)
.Ltmp538:
	.loc	2 106 3 is_stmt 1
	movl	$string..d, %edi
	movq	%r14, %rcx
	callq	runtime.ifaceE2T2
.Ltmp539:
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	.loc	2 107 6
	testb	%al, %al
	je	.LBB19_19
.Ltmp540:
	.loc	2 0 6 is_stmt 0
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 144(%rsp)
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	2 110 14 is_stmt 1
	movl	$type..map.6string.7interface.4.5, %edi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	runtime.mapassign
.Ltmp541:
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB19_14
.Ltmp542:
	movl	$type..interface.4.5, %edi
	movq	%rax, %rsi
	movq	%r13, %rdx
	callq	runtime.typedmemmove
	jmp	.LBB19_17
.Ltmp543:
	.p2align	4, 0x90
.LBB19_14:
	testq	%rax, %rax
	je	.LBB19_15
.Ltmp544:
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rax)
.Ltmp545:
.LBB19_17:
	.loc	2 105 2
	movq	%r12, %rdi
	callq	runtime.mapiternext
	movq	176(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB19_18
.Ltmp546:
.LBB19_20:
	.loc	2 0 2 is_stmt 0
	movq	%rbx, %rax
	addq	$272, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp547:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB19_19:
	.cfi_def_cfa_offset 320
.Ltmp548:
	.loc	2 108 4 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp549:
	movq	%rax, %rbx
.Ltmp550:
	.loc	2 0 4 is_stmt 0
	movups	.Lconst.190(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	leaq	160(%rsp), %rdx
	.loc	2 108 4
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.gopanic
.LBB19_15:
.Ltmp551:
	.loc	2 110 14 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp552:
.LBB19_4:
	.loc	2 103 54
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	reflect.TypeOf
.Ltmp553:
	testq	%rax, %rax
	jne	.LBB19_10
.Ltmp554:
	.loc	2 0 54 is_stmt 0
	xorl	%eax, %eax
	jmp	.LBB19_6
.Ltmp555:
.LBB19_10:
	.loc	2 103 54
	movq	(%rax), %rax
.Ltmp556:
.LBB19_6:
	.loc	2 103 13
	movq	%rax, 128(%rsp)
	movq	%rdx, 136(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.185, %edi
	movl	$22, %esi
	callq	fmt.Errorf
	testq	%rax, %rax
	jne	.LBB19_11
.Ltmp557:
	.loc	2 0 13
	xorl	%edi, %edi
	.loc	2 103 3
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp558:
.LBB19_11:
	.loc	2 103 13
	movq	(%rax), %rdi
	.loc	2 103 3
	movq	%rdx, %rsi
	callq	runtime.gopanic
.Ltmp559:
.Lfunc_end19:
	.size	command_line_arguments.parseAttrs, .Lfunc_end19-command_line_arguments.parseAttrs
	.cfi_endproc

	.section	.text.command_line_arguments.NewLevel,"ax",@progbits
	.globl	command_line_arguments.NewLevel
	.p2align	4, 0x90
	.type	command_line_arguments.NewLevel,@function
command_line_arguments.NewLevel:
.Lfunc_begin20:
	.loc	5 25 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB20_2
	movq	%r10, %rax
	movabsq	$88, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB20_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %r12
.Ltmp560:
	.loc	5 29 15 prologue_end
	callq	runtime.makemap_small
	movq	%rax, %r13
	.loc	5 30 15
	callq	runtime.makemap_small
	movq	%rax, %rbx
	.loc	5 26 9
	movl	$command_line_arguments.Level..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp561:
	.loc	5 26 10 is_stmt 0
	movq	%r12, (%rsp)
	movq	%r15, 8(%rsp)
	movq	%r14, 16(%rsp)
	movq	%r13, 24(%rsp)
	movq	%rbx, 32(%rsp)
	movq	%rsp, %rdx
	.loc	5 26 9
	movl	$command_line_arguments.Level..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	5 26 2
	movq	%rbp, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp562:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp563:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp564:
	.cfi_def_cfa_offset 8
	retq
.Ltmp565:
.Lfunc_end20:
	.size	command_line_arguments.NewLevel, .Lfunc_end20-command_line_arguments.NewLevel
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Level.AddProperty..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Level.AddProperty..func1,@function
command_line_arguments..1command_line_arguments.Level.AddProperty..func1:
.Lfunc_begin21:
	.loc	5 107 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB21_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB21_2:
.Ltmp566:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	5 109 19 prologue_end
	movq	16(%r10), %rax
	movq	(%rax), %rax
	.loc	5 109 20 is_stmt 0
	testq	%rax, %rax
	je	.LBB21_7
	.loc	5 109 26
	cmpq	$0, 32(%rax)
	jle	.LBB21_8
	.loc	5 0 26
	movq	%r10, %r14
	movq	%rdi, %r15
	movq	24(%rax), %rcx
	movq	(%rcx), %rax
	movq	8(%rcx), %rbx
	.loc	5 109 29
	testq	%rax, %rax
	je	.LBB21_5
	movq	(%rax), %rsi
	jmp	.LBB21_6
.LBB21_5:
	.loc	5 0 29
	xorl	%esi, %esi
.LBB21_6:
	.loc	5 109 29
	movl	$type...1go_ast.FuncDecl, %edi
	movl	$go_ast.Decl..d, %edx
	callq	runtime.assertI2T
	.loc	5 109 45
	testq	%rbx, %rbx
	je	.LBB21_7
	movq	32(%rbx), %rcx
	.loc	5 109 10
	movq	8(%r14), %rax
	movq	(%rax), %rsi
	leaq	8(%rsp), %rdi
.Ltmp567:
	.loc	5 109 13
	movl	$pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt, %edx
	callq	github_com_ChrisRx_dungeonfs_pkg_eval.Context.Eval
	movq	8(%rsp), %rax
	.loc	5 109 3
	movq	%rax, (%r15)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%r15)
	movq	%r15, %rax
	addq	$32, %rsp
.Ltmp568:
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB21_7:
	.cfi_def_cfa_offset 64
	.loc	5 0 3
	movl	$6, %edi
	callq	__go_runtime_error
.LBB21_8:
	.loc	5 109 26
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp569:
.Lfunc_end21:
	.size	command_line_arguments..1command_line_arguments.Level.AddProperty..func1, .Lfunc_end21-command_line_arguments..1command_line_arguments.Level.AddProperty..func1
	.cfi_endproc

	.section	.text.command_line_arguments.SetNodeAttr,"ax",@progbits
	.globl	command_line_arguments.SetNodeAttr
	.p2align	4, 0x90
	.type	command_line_arguments.SetNodeAttr,@function
command_line_arguments.SetNodeAttr:
.Lfunc_begin22:
	.loc	5 129 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB22_2
	movq	%r10, %rax
	movabsq	$232, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB22_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$184, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %rbx
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r13
	movq	%rdi, %r12
.Ltmp570:
	.loc	5 130 7 prologue_end
	movq	%r8, %rdi
	callq	reflect.Value.IsValid
	.loc	5 130 5 is_stmt 0
	testb	%al, %al
	sete	%al
	je	.LBB22_5
.Ltmp571:
	.loc	5 130 22
	movq	%rbx, %rdi
	callq	reflect.Value.Kind
	.loc	5 130 30
	cmpq	$22, %rax
	jne	.LBB22_8
.Ltmp572:
	.loc	5 130 49
	movq	%rbx, %rdi
	callq	reflect.Value.IsNil
.Ltmp573:
.LBB22_5:
	.loc	5 130 2
	testb	$1, %al
	jne	.LBB22_6
.Ltmp574:
.LBB22_8:
	.loc	5 133 10 is_stmt 1
	movq	%rbx, %rdi
	callq	reflect.Value.Interface
	.loc	5 133 2 is_stmt 0
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	runtime.efacetype
	movq	%rax, %rbp
	.loc	5 134 2 is_stmt 1
	movl	$int..d, %edi
	movq	%rax, %rsi
	callq	runtime.ifacetypeeq
	testb	%al, %al
	je	.LBB22_15
.Ltmp575:
	.loc	5 135 7
	movq	%r13, %rdi
	callq	*64(%r12)
	movq	%rax, %rbp
	movq	%rdx, %r12
.Ltmp576:
	.loc	5 135 27 is_stmt 0
	movq	%rbx, %rdi
	callq	reflect.Value.Int
	movq	%rax, %rbx
.Ltmp577:
	.loc	5 135 18
	movq	48(%rbp), %rbp
	.loc	5 135 27
	movl	$int64..d, %edi
	callq	runtime.newobject
	movq	%rbx, (%rax)
	.loc	5 135 18
	movl	$int64..d, %ecx
	jmp	.LBB22_10
.Ltmp578:
.LBB22_6:
	.loc	5 131 14 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.254, %edi
	movl	$24, %esi
	callq	fmt.Errorf
	jmp	.LBB22_13
.Ltmp579:
.LBB22_15:
	.loc	5 136 2
	movl	$bool..d, %edi
	movq	%rbp, %rsi
	callq	runtime.ifacetypeeq
	testb	%al, %al
	je	.LBB22_16
.Ltmp580:
	.loc	5 137 7
	movq	%r13, %rdi
	callq	*64(%r12)
	movq	%rax, %rbp
	movq	%rdx, %r12
.Ltmp581:
	.loc	5 137 27 is_stmt 0
	movq	%rbx, %rdi
	callq	reflect.Value.Bool
	movl	%eax, %ebx
.Ltmp582:
	.loc	5 137 18
	movq	48(%rbp), %rbp
	.loc	5 137 27
	movl	$bool..d, %edi
	callq	runtime.newobject
	movb	%bl, (%rax)
	.loc	5 137 18
	movl	$bool..d, %ecx
.Ltmp583:
.LBB22_10:
	.loc	5 0 18
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	movq	%rax, %r8
.Ltmp584:
.LBB22_11:
	callq	*%rbp
.Ltmp585:
.LBB22_12:
	.loc	5 145 2 is_stmt 1
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp586:
.LBB22_13:
	.loc	5 0 2 is_stmt 0
	addq	$184, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp587:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB22_16:
	.cfi_def_cfa_offset 240
.Ltmp588:
	.loc	5 138 2 is_stmt 1
	movl	$type...6.7uint8, %edi
	movq	%rbp, %rsi
	callq	runtime.ifacetypeeq
	testb	%al, %al
	je	.LBB22_18
.Ltmp589:
	.loc	5 139 7
	movq	%r13, %rdi
	callq	*64(%r12)
	movq	%rax, %rbp
	movq	%rdx, %r12
.Ltmp590:
	.loc	5 0 7 is_stmt 0
	leaq	160(%rsp), %rdi
	.loc	5 139 27
	movq	%rbx, %rsi
	callq	reflect.Value.Bytes
	movq	176(%rsp), %rax
	movq	%rax, 112(%rsp)
	movups	160(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	.loc	5 139 18
	movq	48(%rbp), %rbp
	.loc	5 139 27
	movl	$type...6.7uint8, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp591:
	.loc	5 0 27
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 128(%rsp)
	movq	112(%rsp), %rax
	movq	%rax, 144(%rsp)
	leaq	128(%rsp), %rdx
	.loc	5 139 27
	movl	$type...6.7uint8, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	.loc	5 139 18
	movl	$type...6.7uint8, %ecx
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	movq	%rbx, %r8
	jmp	.LBB22_11
.Ltmp592:
.LBB22_18:
	.loc	5 140 2 is_stmt 1
	movl	$string..d, %edi
	movq	%rbp, %rsi
	callq	runtime.ifacetypeeq
	testb	%al, %al
	je	.LBB22_20
.Ltmp593:
	.loc	5 141 7
	movq	%r13, %rdi
	callq	*64(%r12)
	movq	%rax, %rbp
	movq	%rdx, 32(%rsp)
	.loc	5 141 27 is_stmt 0
	movq	%rbx, %rdi
	callq	reflect.Value.String
	movq	%rax, %rbx
.Ltmp594:
	movq	%rdx, %r13
	.loc	5 141 18
	movq	48(%rbp), %r12
.Ltmp595:
	.loc	5 141 27
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
	movq	%rbx, 80(%rsp)
	movq	%r13, 88(%rsp)
	leaq	80(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	5 141 18
	movl	$string..d, %ecx
	movq	32(%rsp), %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	movq	%rbp, %r8
	callq	*%r12
	jmp	.LBB22_12
.Ltmp596:
.LBB22_20:
	.loc	5 143 62 is_stmt 1
	movl	$type...1reflect.Value, %edi
	movq	%rbx, %rsi
	callq	reflect.TypeOf
	testq	%rax, %rax
	je	.LBB22_21
.Ltmp597:
	movq	(%rax), %rax
	jmp	.LBB22_22
.Ltmp598:
.LBB22_21:
	.loc	5 0 62 is_stmt 0
	xorl	%eax, %eax
.Ltmp599:
.LBB22_22:
	.loc	5 143 14
	movq	%rax, 64(%rsp)
	movq	%rdx, 72(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.258, %edi
	movl	$29, %esi
	callq	fmt.Errorf
	jmp	.LBB22_13
.Ltmp600:
.Lfunc_end22:
	.size	command_line_arguments.SetNodeAttr, .Lfunc_end22-command_line_arguments.SetNodeAttr
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..init0,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments..init0
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..init0,@function
command_line_arguments.command_line_arguments..init0:
.Lfunc_begin23:
	.loc	4 13 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB23_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB23_2:
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
.Ltmp601:
	.loc	4 14 15 prologue_end
	cmpq	$0, command_line_arguments.PkgLogger(%rip)
	je	.LBB23_3
	.loc	4 0 15 is_stmt 0
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB23_3:
	.cfi_def_cfa_offset 32
	.loc	4 15 15 is_stmt 1
	movl	$github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger..d, %edi
	callq	runtime.newobject
	.loc	4 15 13 is_stmt 0
	movq	$pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger, 8(%rsp)
	movq	%rax, 16(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB23_6
	.loc	4 0 13
	leaq	8(%rsp), %rdx
	.loc	4 15 13
	movl	$command_line_arguments..command_line_arguments.logger..d, %edi
	movl	$command_line_arguments.PkgLogger, %esi
	callq	runtime.typedmemmove
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.LBB23_6:
	.cfi_def_cfa_offset 32
	movups	8(%rsp), %xmm0
	movups	%xmm0, command_line_arguments.PkgLogger(%rip)
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp602:
.Lfunc_end23:
	.size	command_line_arguments.command_line_arguments..init0, .Lfunc_end23-command_line_arguments.command_line_arguments..init0
	.cfi_endproc

	.type	command_line_arguments.ComponentType..d,@object
	.section	.rodata.command_line_arguments.ComponentType..d,"a",@progbits
	.globl	command_line_arguments.ComponentType..d
	.p2align	4
command_line_arguments.ComponentType..d:
	.quad	8
	.quad	0
	.long	2877983649
	.byte	130
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C1
	.quad	go..C5
	.quad	type...1command_line_arguments.ComponentType
	.size	command_line_arguments.ComponentType..d, 72

	.type	.Lconst.0,@object
	.section	.rodata..Lconst.0,"a",@progbits
.Lconst.0:
	.asciz	"\tcommand_line_arguments\tassets.ComponentType"
	.size	.Lconst.0, 45

	.type	go..C1,@object
	.section	.rodata.go..C1,"a",@progbits
	.p2align	3
go..C1:
	.quad	.Lconst.0
	.quad	44
	.size	go..C1, 16

	.type	.Lconst.1,@object
	.section	.rodata..Lconst.1,"a",@progbits
.Lconst.1:
	.asciz	"ComponentType"
	.size	.Lconst.1, 14

	.type	go..C2,@object
	.section	.rodata.go..C2,"a",@progbits
	.p2align	3
go..C2:
	.quad	.Lconst.1
	.quad	13
	.size	go..C2, 16

	.type	.Lconst.2,@object
	.section	.rodata..Lconst.2,"a",@progbits
.Lconst.2:
	.asciz	"command-line-arguments"
	.size	.Lconst.2, 23

	.type	go..C3,@object
	.section	.rodata.go..C3,"a",@progbits
	.p2align	3
go..C3:
	.quad	.Lconst.2
	.quad	22
	.size	go..C3, 16

	.type	go..C4,@object
	.section	.bss.go..C4,"aw",@nobits
	.p2align	4
go..C4:
	.zero	40
	.size	go..C4, 40

	.type	go..C5,@object
	.section	.rodata.go..C5,"a",@progbits
	.p2align	4
go..C5:
	.quad	go..C2
	.quad	go..C3
	.quad	go..C4
	.quad	0
	.quad	0
	.size	go..C5, 40

	.type	type...1command_line_arguments.ComponentType,@object
	.section	.rodata.type...1command_line_arguments.ComponentType,"aG",@progbits,type...1command_line_arguments.ComponentType,comdat
	.weak	type...1command_line_arguments.ComponentType
	.p2align	4
type...1command_line_arguments.ComponentType:
	.quad	8
	.quad	8
	.long	3098065433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C6
	.quad	0
	.quad	0
	.quad	command_line_arguments.ComponentType..d
	.size	type...1command_line_arguments.ComponentType, 80

	.type	gcbits..ba,@object
	.section	.rodata.gcbits..ba,"aG",@progbits,gcbits..ba,comdat
	.weak	gcbits..ba
gcbits..ba:
	.byte	1
	.size	gcbits..ba, 1

	.type	.Lconst.3,@object
	.section	.rodata..Lconst.3,"a",@progbits
.Lconst.3:
	.asciz	"*\tcommand_line_arguments\tassets.ComponentType"
	.size	.Lconst.3, 46

	.type	go..C6,@object
	.section	.rodata.go..C6,"a",@progbits
	.p2align	3
go..C6:
	.quad	.Lconst.3
	.quad	45
	.size	go..C6, 16

	.type	command_line_arguments.Component..d,@object
	.section	.rodata.command_line_arguments.Component..d,"a",@progbits
	.globl	command_line_arguments.Component..d
	.p2align	4
command_line_arguments.Component..d:
	.quad	72
	.quad	56
	.long	821328841
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Ac
	.quad	go..C7
	.quad	go..C11
	.quad	type...1command_line_arguments.Component
	.quad	go..C106
	.quad	5
	.quad	5
	.size	command_line_arguments.Component..d, 96

	.type	gcbits..Ac,@object
	.section	.rodata.gcbits..Ac,"aG",@progbits,gcbits..Ac,comdat
	.weak	gcbits..Ac
gcbits..Ac:
	.byte	89
	.size	gcbits..Ac, 1

	.type	.Lconst.4,@object
	.section	.rodata..Lconst.4,"a",@progbits
.Lconst.4:
	.asciz	"\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.4, 41

	.type	go..C7,@object
	.section	.rodata.go..C7,"a",@progbits
	.p2align	3
go..C7:
	.quad	.Lconst.4
	.quad	40
	.size	go..C7, 16

	.type	.Lconst.5,@object
	.section	.rodata..Lconst.5,"a",@progbits
.Lconst.5:
	.asciz	"Component"
	.size	.Lconst.5, 10

	.type	go..C8,@object
	.section	.rodata.go..C8,"a",@progbits
	.p2align	3
go..C8:
	.quad	.Lconst.5
	.quad	9
	.size	go..C8, 16

	.type	go..C9,@object
	.section	.rodata.go..C9,"a",@progbits
	.p2align	3
go..C9:
	.quad	.Lconst.2
	.quad	22
	.size	go..C9, 16

	.type	go..C10,@object
	.section	.bss.go..C10,"aw",@nobits
	.p2align	4
go..C10:
	.zero	40
	.size	go..C10, 40

	.type	go..C11,@object
	.section	.rodata.go..C11,"a",@progbits
	.p2align	4
go..C11:
	.quad	go..C8
	.quad	go..C9
	.quad	go..C10
	.quad	0
	.quad	0
	.size	go..C11, 40

	.type	type...1command_line_arguments.Component,@object
	.section	.rodata.type...1command_line_arguments.Component,"aG",@progbits,type...1command_line_arguments.Component,comdat
	.weak	type...1command_line_arguments.Component
	.p2align	4
type...1command_line_arguments.Component:
	.quad	8
	.quad	8
	.long	256359577
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C12
	.quad	go..C42
	.quad	type...1.1command_line_arguments.Component
	.quad	command_line_arguments.Component..d
	.size	type...1command_line_arguments.Component, 80

	.type	.Lconst.6,@object
	.section	.rodata..Lconst.6,"a",@progbits
.Lconst.6:
	.asciz	"*\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.6, 42

	.type	go..C12,@object
	.section	.rodata.go..C12,"a",@progbits
	.p2align	3
go..C12:
	.quad	.Lconst.6
	.quad	41
	.size	go..C12, 16

	.type	.Lconst.7,@object
	.section	.rodata..Lconst.7,"a",@progbits
.Lconst.7:
	.asciz	"Base"
	.size	.Lconst.7, 5

	.type	go..C13,@object
	.section	.rodata.go..C13,"a",@progbits
	.p2align	3
go..C13:
	.quad	.Lconst.7
	.quad	4
	.size	go..C13, 16

	.type	type..func.8.9.8string.9,@object
	.section	.rodata.type..func.8.9.8string.9,"aG",@progbits,type..func.8.9.8string.9,comdat
	.weak	type..func.8.9.8string.9
	.p2align	4
type..func.8.9.8string.9:
	.quad	8
	.quad	8
	.long	916039304
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C14
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C15
	.quad	0
	.quad	0
	.quad	go..C21
	.quad	1
	.quad	1
	.size	type..func.8.9.8string.9, 128

	.type	.Lconst.8,@object
	.section	.rodata..Lconst.8,"a",@progbits
.Lconst.8:
	.asciz	"func() string"
	.size	.Lconst.8, 14

	.type	go..C14,@object
	.section	.rodata.go..C14,"a",@progbits
	.p2align	3
go..C14:
	.quad	.Lconst.8
	.quad	13
	.size	go..C14, 16

	.type	go..C15,@object
	.section	.bss.go..C15,"aw",@nobits
	.p2align	3
go..C15:
	.zero	8
	.size	go..C15, 8

	.type	string..d,@object
	.section	.rodata.string..d,"aG",@progbits,string..d,comdat
	.weak	string..d
	.p2align	4
string..d:
	.quad	16
	.quad	8
	.long	2296014490
	.byte	24
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.strhash..f
	.quad	runtime.strequal..f
	.quad	gcbits..ba
	.quad	go..C16
	.quad	go..C19
	.quad	type...1string
	.size	string..d, 72

	.type	.Lconst.9,@object
	.section	.rodata..Lconst.9,"a",@progbits
.Lconst.9:
	.asciz	"string"
	.size	.Lconst.9, 7

	.type	go..C16,@object
	.section	.rodata.go..C16,"a",@progbits
	.p2align	3
go..C16:
	.quad	.Lconst.9
	.quad	6
	.size	go..C16, 16

	.type	go..C17,@object
	.section	.rodata.go..C17,"a",@progbits
	.p2align	3
go..C17:
	.quad	.Lconst.9
	.quad	6
	.size	go..C17, 16

	.type	go..C18,@object
	.section	.bss.go..C18,"aw",@nobits
	.p2align	4
go..C18:
	.zero	40
	.size	go..C18, 40

	.type	go..C19,@object
	.section	.rodata.go..C19,"a",@progbits
	.p2align	4
go..C19:
	.quad	go..C17
	.quad	0
	.quad	go..C18
	.quad	0
	.quad	0
	.size	go..C19, 40

	.type	type...1string,@object
	.section	.rodata.type...1string,"aG",@progbits,type...1string,comdat
	.weak	type...1string
	.p2align	4
type...1string:
	.quad	8
	.quad	8
	.long	2376493481
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C20
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...1string, 80

	.type	.Lconst.10,@object
	.section	.rodata..Lconst.10,"a",@progbits
.Lconst.10:
	.asciz	"*string"
	.size	.Lconst.10, 8

	.type	go..C20,@object
	.section	.rodata.go..C20,"a",@progbits
	.p2align	3
go..C20:
	.quad	.Lconst.10
	.quad	7
	.size	go..C20, 16

	.type	go..C21,@object
	.section	.data.go..C21,"aw",@progbits
	.p2align	3
go..C21:
	.quad	string..d
	.size	go..C21, 8

	.type	type..func.8.1command_line_arguments.Component.9.8string.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Component.9.8string.9,"aG",@progbits,type..func.8.1command_line_arguments.Component.9.8string.9,comdat
	.weak	type..func.8.1command_line_arguments.Component.9.8string.9
	.p2align	4
type..func.8.1command_line_arguments.Component.9.8string.9:
	.quad	8
	.quad	8
	.long	529611176
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C22
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C23
	.quad	1
	.quad	1
	.quad	go..C24
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Component.9.8string.9, 128

	.type	.Lconst.11,@object
	.section	.rodata..Lconst.11,"a",@progbits
.Lconst.11:
	.asciz	"func(*\tcommand_line_arguments\tassets.Component) string"
	.size	.Lconst.11, 55

	.type	go..C22,@object
	.section	.rodata.go..C22,"a",@progbits
	.p2align	3
go..C22:
	.quad	.Lconst.11
	.quad	54
	.size	go..C22, 16

	.type	go..C23,@object
	.section	.data.go..C23,"aw",@progbits
	.p2align	3
go..C23:
	.quad	type...1command_line_arguments.Component
	.size	go..C23, 8

	.type	go..C24,@object
	.section	.data.go..C24,"aw",@progbits
	.p2align	3
go..C24:
	.quad	string..d
	.size	go..C24, 8

	.type	.Lconst.12,@object
	.section	.rodata..Lconst.12,"a",@progbits
.Lconst.12:
	.asciz	"Bases"
	.size	.Lconst.12, 6

	.type	go..C25,@object
	.section	.rodata.go..C25,"a",@progbits
	.p2align	3
go..C25:
	.quad	.Lconst.12
	.quad	5
	.size	go..C25, 16

	.type	type..func.8.9.8.6.7.1command_line_arguments.Component.9,@object
	.section	.rodata.type..func.8.9.8.6.7.1command_line_arguments.Component.9,"aG",@progbits,type..func.8.9.8.6.7.1command_line_arguments.Component.9,comdat
	.weak	type..func.8.9.8.6.7.1command_line_arguments.Component.9
	.p2align	4
type..func.8.9.8.6.7.1command_line_arguments.Component.9:
	.quad	8
	.quad	8
	.long	3522111944
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C26
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C27
	.quad	0
	.quad	0
	.quad	go..C29
	.quad	1
	.quad	1
	.size	type..func.8.9.8.6.7.1command_line_arguments.Component.9, 128

	.type	.Lconst.13,@object
	.section	.rodata..Lconst.13,"a",@progbits
.Lconst.13:
	.asciz	"func() []*\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.13, 51

	.type	go..C26,@object
	.section	.rodata.go..C26,"a",@progbits
	.p2align	3
go..C26:
	.quad	.Lconst.13
	.quad	50
	.size	go..C26, 16

	.type	go..C27,@object
	.section	.bss.go..C27,"aw",@nobits
	.p2align	3
go..C27:
	.zero	8
	.size	go..C27, 8

	.type	type...6.7.1command_line_arguments.Component,@object
	.section	.rodata.type...6.7.1command_line_arguments.Component,"aG",@progbits,type...6.7.1command_line_arguments.Component,comdat
	.weak	type...6.7.1command_line_arguments.Component
	.p2align	4
type...6.7.1command_line_arguments.Component:
	.quad	24
	.quad	8
	.long	256359591
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C28
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Component
	.size	type...6.7.1command_line_arguments.Component, 80

	.type	.Lconst.14,@object
	.section	.rodata..Lconst.14,"a",@progbits
.Lconst.14:
	.asciz	"[]*\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.14, 44

	.type	go..C28,@object
	.section	.rodata.go..C28,"a",@progbits
	.p2align	3
go..C28:
	.quad	.Lconst.14
	.quad	43
	.size	go..C28, 16

	.type	go..C29,@object
	.section	.data.go..C29,"aw",@progbits
	.p2align	3
go..C29:
	.quad	type...6.7.1command_line_arguments.Component
	.size	go..C29, 8

	.type	type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9,"aG",@progbits,type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9,comdat
	.weak	type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9
	.p2align	4
type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9:
	.quad	8
	.quad	8
	.long	3135683816
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C30
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C31
	.quad	1
	.quad	1
	.quad	go..C32
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9, 128

	.type	.Lconst.15,@object
	.section	.rodata..Lconst.15,"a",@progbits
.Lconst.15:
	.asciz	"func(*\tcommand_line_arguments\tassets.Component) []*\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.15, 92

	.type	go..C30,@object
	.section	.rodata.go..C30,"a",@progbits
	.p2align	3
go..C30:
	.quad	.Lconst.15
	.quad	91
	.size	go..C30, 16

	.type	go..C31,@object
	.section	.data.go..C31,"aw",@progbits
	.p2align	3
go..C31:
	.quad	type...1command_line_arguments.Component
	.size	go..C31, 8

	.type	go..C32,@object
	.section	.data.go..C32,"aw",@progbits
	.p2align	3
go..C32:
	.quad	type...6.7.1command_line_arguments.Component
	.size	go..C32, 8

	.type	.Lconst.16,@object
	.section	.rodata..Lconst.16,"a",@progbits
.Lconst.16:
	.asciz	"Name"
	.size	.Lconst.16, 5

	.type	go..C33,@object
	.section	.rodata.go..C33,"a",@progbits
	.p2align	3
go..C33:
	.quad	.Lconst.16
	.quad	4
	.size	go..C33, 16

	.type	.Lconst.17,@object
	.section	.rodata..Lconst.17,"a",@progbits
.Lconst.17:
	.asciz	"Type"
	.size	.Lconst.17, 5

	.type	go..C34,@object
	.section	.rodata.go..C34,"a",@progbits
	.p2align	3
go..C34:
	.quad	.Lconst.17
	.quad	4
	.size	go..C34, 16

	.type	type..func.8.9.8command_line_arguments.ComponentType.9,@object
	.section	.rodata.type..func.8.9.8command_line_arguments.ComponentType.9,"aG",@progbits,type..func.8.9.8command_line_arguments.ComponentType.9,comdat
	.weak	type..func.8.9.8command_line_arguments.ComponentType.9
	.p2align	4
type..func.8.9.8command_line_arguments.ComponentType.9:
	.quad	8
	.quad	8
	.long	3802327112
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C35
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C36
	.quad	0
	.quad	0
	.quad	go..C37
	.quad	1
	.quad	1
	.size	type..func.8.9.8command_line_arguments.ComponentType.9, 128

	.type	.Lconst.18,@object
	.section	.rodata..Lconst.18,"a",@progbits
.Lconst.18:
	.asciz	"func() \tcommand_line_arguments\tassets.ComponentType"
	.size	.Lconst.18, 52

	.type	go..C35,@object
	.section	.rodata.go..C35,"a",@progbits
	.p2align	3
go..C35:
	.quad	.Lconst.18
	.quad	51
	.size	go..C35, 16

	.type	go..C36,@object
	.section	.bss.go..C36,"aw",@nobits
	.p2align	3
go..C36:
	.zero	8
	.size	go..C36, 8

	.type	go..C37,@object
	.section	.data.go..C37,"aw",@progbits
	.p2align	3
go..C37:
	.quad	command_line_arguments.ComponentType..d
	.size	go..C37, 8

	.type	type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9,"aG",@progbits,type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9,comdat
	.weak	type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9
	.p2align	4
type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9:
	.quad	8
	.quad	8
	.long	3415898984
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C38
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C39
	.quad	1
	.quad	1
	.quad	go..C40
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9, 128

	.type	.Lconst.19,@object
	.section	.rodata..Lconst.19,"a",@progbits
.Lconst.19:
	.asciz	"func(*\tcommand_line_arguments\tassets.Component) \tcommand_line_arguments\tassets.ComponentType"
	.size	.Lconst.19, 93

	.type	go..C38,@object
	.section	.rodata.go..C38,"a",@progbits
	.p2align	3
go..C38:
	.quad	.Lconst.19
	.quad	92
	.size	go..C38, 16

	.type	go..C39,@object
	.section	.data.go..C39,"aw",@progbits
	.p2align	3
go..C39:
	.quad	type...1command_line_arguments.Component
	.size	go..C39, 8

	.type	go..C40,@object
	.section	.data.go..C40,"aw",@progbits
	.p2align	3
go..C40:
	.quad	command_line_arguments.ComponentType..d
	.size	go..C40, 8

	.type	go..C41,@object
	.section	.data.go..C41,"aw",@progbits
	.p2align	4
go..C41:
	.quad	go..C13
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.Component.9.8string.9
	.quad	command_line_arguments.Component.Base
	.quad	go..C25
	.quad	0
	.quad	type..func.8.9.8.6.7.1command_line_arguments.Component.9
	.quad	type..func.8.1command_line_arguments.Component.9.8.6.7.1command_line_arguments.Component.9
	.quad	command_line_arguments.Component.Bases
	.quad	go..C33
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.Component.9.8string.9
	.quad	command_line_arguments.Component.Name
	.quad	go..C34
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.ComponentType.9
	.quad	type..func.8.1command_line_arguments.Component.9.8command_line_arguments.ComponentType.9
	.quad	command_line_arguments.Component.Type
	.size	go..C41, 160

	.type	go..C42,@object
	.section	.rodata.go..C42,"a",@progbits
	.p2align	4
go..C42:
	.quad	0
	.quad	0
	.quad	go..C41
	.quad	4
	.quad	4
	.size	go..C42, 40

	.type	type...1.1command_line_arguments.Component,@object
	.section	.rodata.type...1.1command_line_arguments.Component,"aG",@progbits,type...1.1command_line_arguments.Component,comdat
	.weak	type...1.1command_line_arguments.Component
	.p2align	4
type...1.1command_line_arguments.Component:
	.quad	8
	.quad	8
	.long	4101753241
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C43
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Component
	.size	type...1.1command_line_arguments.Component, 80

	.type	.Lconst.20,@object
	.section	.rodata..Lconst.20,"a",@progbits
.Lconst.20:
	.asciz	"**\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.20, 43

	.type	go..C43,@object
	.section	.rodata.go..C43,"a",@progbits
	.p2align	3
go..C43:
	.quad	.Lconst.20
	.quad	42
	.size	go..C43, 16

	.type	.Lconst.21,@object
	.section	.rodata..Lconst.21,"a",@progbits
.Lconst.21:
	.asciz	"name"
	.size	.Lconst.21, 5

	.type	go..C44,@object
	.section	.rodata.go..C44,"a",@progbits
	.p2align	3
go..C44:
	.quad	.Lconst.21
	.quad	4
	.size	go..C44, 16

	.type	go..C45,@object
	.section	.rodata.go..C45,"a",@progbits
	.p2align	3
go..C45:
	.quad	.Lconst.2
	.quad	22
	.size	go..C45, 16

	.type	.Lconst.22,@object
	.section	.rodata..Lconst.22,"a",@progbits
.Lconst.22:
	.asciz	"t"
	.size	.Lconst.22, 2

	.type	go..C46,@object
	.section	.rodata.go..C46,"a",@progbits
	.p2align	3
go..C46:
	.quad	.Lconst.22
	.quad	1
	.size	go..C46, 16

	.type	go..C47,@object
	.section	.rodata.go..C47,"a",@progbits
	.p2align	3
go..C47:
	.quad	.Lconst.2
	.quad	22
	.size	go..C47, 16

	.type	.Lconst.23,@object
	.section	.rodata..Lconst.23,"a",@progbits
.Lconst.23:
	.asciz	"attrs"
	.size	.Lconst.23, 6

	.type	go..C48,@object
	.section	.rodata.go..C48,"a",@progbits
	.p2align	3
go..C48:
	.quad	.Lconst.23
	.quad	5
	.size	go..C48, 16

	.type	go..C49,@object
	.section	.rodata.go..C49,"a",@progbits
	.p2align	3
go..C49:
	.quad	.Lconst.2
	.quad	22
	.size	go..C49, 16

	.type	type..map.6string.7interface.4.5,@object
	.section	.rodata.type..map.6string.7interface.4.5,"aG",@progbits,type..map.6string.7interface.4.5,comdat
	.weak	type..map.6string.7interface.4.5
	.p2align	4
type..map.6string.7interface.4.5:
	.quad	8
	.quad	8
	.long	2296014522
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C50
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type..interface.4.5
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	16
	.byte	0
	.short	272
	.byte	1
	.byte	1
	.size	type..map.6string.7interface.4.5, 112

	.type	.Lconst.24,@object
	.section	.rodata..Lconst.24,"a",@progbits
.Lconst.24:
	.asciz	"map[string]interface {}"
	.size	.Lconst.24, 24

	.type	go..C50,@object
	.section	.rodata.go..C50,"a",@progbits
	.p2align	3
go..C50:
	.quad	.Lconst.24
	.quad	23
	.size	go..C50, 16

	.type	type..interface.4.5,@object
	.section	.rodata.type..interface.4.5,"aG",@progbits,type..interface.4.5,comdat
	.weak	type..interface.4.5
	.p2align	4
type..interface.4.5:
	.quad	16
	.quad	16
	.long	16
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.nilinterhash..f
	.quad	runtime.nilinterequal..f
	.quad	gcbits..da
	.quad	go..C51
	.quad	0
	.quad	0
	.quad	go..C52
	.quad	0
	.quad	0
	.size	type..interface.4.5, 96

	.type	gcbits..da,@object
	.section	.rodata.gcbits..da,"aG",@progbits,gcbits..da,comdat
	.weak	gcbits..da
gcbits..da:
	.byte	3
	.size	gcbits..da, 1

	.type	.Lconst.25,@object
	.section	.rodata..Lconst.25,"a",@progbits
.Lconst.25:
	.asciz	"interface {}"
	.size	.Lconst.25, 13

	.type	go..C51,@object
	.section	.rodata.go..C51,"a",@progbits
	.p2align	3
go..C51:
	.quad	.Lconst.25
	.quad	12
	.size	go..C51, 16

	.type	go..C52,@object
	.section	.bss.go..C52,"aw",@nobits
	.p2align	4
go..C52:
	.zero	24
	.size	go..C52, 24

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5:
	.quad	272
	.quad	272
	.long	429210724
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGGpa
	.quad	go..C53
	.quad	0
	.quad	0
	.quad	go..C69
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkEGGpa,@object
	.section	.rodata.gcbits..kwkEGGpa,"aG",@progbits,gcbits..kwkEGGpa,comdat
	.weak	gcbits..kwkEGGpa
gcbits..kwkEGGpa:
	.ascii	"\252\252\376\377\003"
	.size	gcbits..kwkEGGpa, 5

	.type	.Lconst.26,@object
	.section	.rodata..Lconst.26,"a",@progbits
.Lconst.26:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }"
	.size	.Lconst.26, 80

	.type	go..C53,@object
	.section	.rodata.go..C53,"a",@progbits
	.p2align	3
go..C53:
	.quad	.Lconst.26
	.quad	79
	.size	go..C53, 16

	.type	.Lconst.27,@object
	.section	.rodata..Lconst.27,"a",@progbits
.Lconst.27:
	.asciz	"topbits"
	.size	.Lconst.27, 8

	.type	go..C54,@object
	.section	.rodata.go..C54,"a",@progbits
	.p2align	3
go..C54:
	.quad	.Lconst.27
	.quad	7
	.size	go..C54, 16

	.type	type...68x.7uint8,@object
	.section	.rodata.type...68x.7uint8,"aG",@progbits,type...68x.7uint8,comdat
	.weak	type...68x.7uint8
	.p2align	4
type...68x.7uint8:
	.quad	8
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C55
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	8
	.size	type...68x.7uint8, 96

	.type	.Lconst.28,@object
	.section	.rodata..Lconst.28,"a",@progbits
.Lconst.28:
	.asciz	"[8]uint8"
	.size	.Lconst.28, 9

	.type	go..C55,@object
	.section	.rodata.go..C55,"a",@progbits
	.p2align	3
go..C55:
	.quad	.Lconst.28
	.quad	8
	.size	go..C55, 16

	.type	uint8..d,@object
	.section	.rodata.uint8..d,"aG",@progbits,uint8..d,comdat
	.weak	uint8..d
	.p2align	4
uint8..d:
	.quad	1
	.quad	0
	.long	264632089
	.byte	136
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C56
	.quad	go..C59
	.quad	type...1uint8
	.size	uint8..d, 72

	.type	.Lconst.29,@object
	.section	.rodata..Lconst.29,"a",@progbits
.Lconst.29:
	.asciz	"uint8"
	.size	.Lconst.29, 6

	.type	go..C56,@object
	.section	.rodata.go..C56,"a",@progbits
	.p2align	3
go..C56:
	.quad	.Lconst.29
	.quad	5
	.size	go..C56, 16

	.type	go..C57,@object
	.section	.rodata.go..C57,"a",@progbits
	.p2align	3
go..C57:
	.quad	.Lconst.29
	.quad	5
	.size	go..C57, 16

	.type	go..C58,@object
	.section	.bss.go..C58,"aw",@nobits
	.p2align	4
go..C58:
	.zero	40
	.size	go..C58, 40

	.type	go..C59,@object
	.section	.rodata.go..C59,"a",@progbits
	.p2align	4
go..C59:
	.quad	go..C57
	.quad	0
	.quad	go..C58
	.quad	0
	.quad	0
	.size	go..C59, 40

	.type	type...1uint8,@object
	.section	.rodata.type...1uint8,"aG",@progbits,type...1uint8,comdat
	.weak	type...1uint8
	.p2align	4
type...1uint8:
	.quad	8
	.quad	8
	.long	4234113433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C60
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...1uint8, 80

	.type	.Lconst.30,@object
	.section	.rodata..Lconst.30,"a",@progbits
.Lconst.30:
	.asciz	"*uint8"
	.size	.Lconst.30, 7

	.type	go..C60,@object
	.section	.rodata.go..C60,"a",@progbits
	.p2align	3
go..C60:
	.quad	.Lconst.30
	.quad	6
	.size	go..C60, 16

	.type	type...6.7uint8,@object
	.section	.rodata.type...6.7uint8,"aG",@progbits,type...6.7uint8,comdat
	.weak	type...6.7uint8
	.p2align	4
type...6.7uint8:
	.quad	24
	.quad	8
	.long	264632103
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C61
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...6.7uint8, 80

	.type	.Lconst.31,@object
	.section	.rodata..Lconst.31,"a",@progbits
.Lconst.31:
	.asciz	"[]uint8"
	.size	.Lconst.31, 8

	.type	go..C61,@object
	.section	.rodata.go..C61,"a",@progbits
	.p2align	3
go..C61:
	.quad	.Lconst.31
	.quad	7
	.size	go..C61, 16

	.type	.Lconst.32,@object
	.section	.rodata..Lconst.32,"a",@progbits
.Lconst.32:
	.asciz	"keys"
	.size	.Lconst.32, 5

	.type	go..C62,@object
	.section	.rodata.go..C62,"a",@progbits
	.p2align	3
go..C62:
	.quad	.Lconst.32
	.quad	4
	.size	go..C62, 16

	.type	type...68x.7string,@object
	.section	.rodata.type...68x.7string,"aG",@progbits,type...68x.7string,comdat
	.weak	type...68x.7string
	.p2align	4
type...68x.7string:
	.quad	128
	.quad	120
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkwa
	.quad	go..C63
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	8
	.size	type...68x.7string, 96

	.type	gcbits..wkwa,@object
	.section	.rodata.gcbits..wkwa,"aG",@progbits,gcbits..wkwa,comdat
	.weak	gcbits..wkwa
gcbits..wkwa:
	.zero	2,85
	.size	gcbits..wkwa, 2

	.type	.Lconst.33,@object
	.section	.rodata..Lconst.33,"a",@progbits
.Lconst.33:
	.asciz	"[8]string"
	.size	.Lconst.33, 10

	.type	go..C63,@object
	.section	.rodata.go..C63,"a",@progbits
	.p2align	3
go..C63:
	.quad	.Lconst.33
	.quad	9
	.size	go..C63, 16

	.type	type...6.7string,@object
	.section	.rodata.type...6.7string,"aG",@progbits,type...6.7string,comdat
	.weak	type...6.7string
	.p2align	4
type...6.7string:
	.quad	24
	.quad	8
	.long	2296014504
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C64
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...6.7string, 80

	.type	.Lconst.34,@object
	.section	.rodata..Lconst.34,"a",@progbits
.Lconst.34:
	.asciz	"[]string"
	.size	.Lconst.34, 9

	.type	go..C64,@object
	.section	.rodata.go..C64,"a",@progbits
	.p2align	3
go..C64:
	.quad	.Lconst.34
	.quad	8
	.size	go..C64, 16

	.type	.Lconst.35,@object
	.section	.rodata..Lconst.35,"a",@progbits
.Lconst.35:
	.asciz	"values"
	.size	.Lconst.35, 7

	.type	go..C65,@object
	.section	.rodata.go..C65,"a",@progbits
	.p2align	3
go..C65:
	.quad	.Lconst.35
	.quad	6
	.size	go..C65, 16

	.type	type...68x.7interface.4.5,@object
	.section	.rodata.type...68x.7interface.4.5,"aG",@progbits,type...68x.7interface.4.5,comdat
	.weak	type...68x.7interface.4.5
	.p2align	4
type...68x.7interface.4.5:
	.quad	128
	.quad	128
	.long	47
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..GGGb
	.quad	go..C66
	.quad	0
	.quad	0
	.quad	type..interface.4.5
	.quad	type...6.7interface.4.5
	.quad	8
	.size	type...68x.7interface.4.5, 96

	.type	gcbits..GGGb,@object
	.section	.rodata.gcbits..GGGb,"aG",@progbits,gcbits..GGGb,comdat
	.weak	gcbits..GGGb
gcbits..GGGb:
	.zero	2,255
	.size	gcbits..GGGb, 2

	.type	.Lconst.36,@object
	.section	.rodata..Lconst.36,"a",@progbits
.Lconst.36:
	.asciz	"[8]interface {}"
	.size	.Lconst.36, 16

	.type	go..C66,@object
	.section	.rodata.go..C66,"a",@progbits
	.p2align	3
go..C66:
	.quad	.Lconst.36
	.quad	15
	.size	go..C66, 16

	.type	type...6.7interface.4.5,@object
	.section	.rodata.type...6.7interface.4.5,"aG",@progbits,type...6.7interface.4.5,comdat
	.weak	type...6.7interface.4.5
	.p2align	4
type...6.7interface.4.5:
	.quad	24
	.quad	8
	.long	30
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C67
	.quad	0
	.quad	0
	.quad	type..interface.4.5
	.size	type...6.7interface.4.5, 80

	.type	.Lconst.37,@object
	.section	.rodata..Lconst.37,"a",@progbits
.Lconst.37:
	.asciz	"[]interface {}"
	.size	.Lconst.37, 15

	.type	go..C67,@object
	.section	.rodata.go..C67,"a",@progbits
	.p2align	3
go..C67:
	.quad	.Lconst.37
	.quad	14
	.size	go..C67, 16

	.type	.Lconst.38,@object
	.section	.rodata..Lconst.38,"a",@progbits
.Lconst.38:
	.asciz	"overflow"
	.size	.Lconst.38, 9

	.type	go..C68,@object
	.section	.rodata.go..C68,"a",@progbits
	.p2align	3
go..C68:
	.quad	.Lconst.38
	.quad	8
	.size	go..C68, 16

	.type	go..C69,@object
	.section	.data.go..C69,"aw",@progbits
	.p2align	4
go..C69:
	.quad	go..C54
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C62
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C65
	.quad	0
	.quad	type...68x.7interface.4.5
	.quad	0
	.quad	272
	.quad	go..C68
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	528
	.size	go..C69, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	2181618148
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C70
	.quad	0
	.quad	0
	.quad	go..C101
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	gcbits..mb,@object
	.section	.rodata.gcbits..mb,"aG",@progbits,gcbits..mb,comdat
	.weak	gcbits..mb
gcbits..mb:
	.byte	44
	.size	gcbits..mb, 1

	.type	.Lconst.39,@object
	.section	.rodata..Lconst.39,"a",@progbits
.Lconst.39:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.39, 286

	.type	go..C70,@object
	.section	.rodata.go..C70,"a",@progbits
	.p2align	3
go..C70:
	.quad	.Lconst.39
	.quad	285
	.size	go..C70, 16

	.type	.Lconst.40,@object
	.section	.rodata..Lconst.40,"a",@progbits
.Lconst.40:
	.asciz	"count"
	.size	.Lconst.40, 6

	.type	go..C71,@object
	.section	.rodata.go..C71,"a",@progbits
	.p2align	3
go..C71:
	.quad	.Lconst.40
	.quad	5
	.size	go..C71, 16

	.type	int..d,@object
	.section	.rodata.int..d,"aG",@progbits,int..d,comdat
	.weak	int..d
	.p2align	4
int..d:
	.quad	8
	.quad	0
	.long	876704034
	.byte	130
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C72
	.quad	go..C75
	.quad	type...1int
	.size	int..d, 72

	.type	.Lconst.41,@object
	.section	.rodata..Lconst.41,"a",@progbits
.Lconst.41:
	.asciz	"int"
	.size	.Lconst.41, 4

	.type	go..C72,@object
	.section	.rodata.go..C72,"a",@progbits
	.p2align	3
go..C72:
	.quad	.Lconst.41
	.quad	3
	.size	go..C72, 16

	.type	go..C73,@object
	.section	.rodata.go..C73,"a",@progbits
	.p2align	3
go..C73:
	.quad	.Lconst.41
	.quad	3
	.size	go..C73, 16

	.type	go..C74,@object
	.section	.bss.go..C74,"aw",@nobits
	.p2align	4
go..C74:
	.zero	40
	.size	go..C74, 40

	.type	go..C75,@object
	.section	.rodata.go..C75,"a",@progbits
	.p2align	4
go..C75:
	.quad	go..C73
	.quad	0
	.quad	go..C74
	.quad	0
	.quad	0
	.size	go..C75, 40

	.type	type...1int,@object
	.section	.rodata.type...1int,"aG",@progbits,type...1int,comdat
	.weak	type...1int
	.p2align	4
type...1int:
	.quad	8
	.quad	8
	.long	1142362665
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C76
	.quad	0
	.quad	0
	.quad	int..d
	.size	type...1int, 80

	.type	.Lconst.42,@object
	.section	.rodata..Lconst.42,"a",@progbits
.Lconst.42:
	.asciz	"*int"
	.size	.Lconst.42, 5

	.type	go..C76,@object
	.section	.rodata.go..C76,"a",@progbits
	.p2align	3
go..C76:
	.quad	.Lconst.42
	.quad	4
	.size	go..C76, 16

	.type	.Lconst.43,@object
	.section	.rodata..Lconst.43,"a",@progbits
.Lconst.43:
	.asciz	"flags"
	.size	.Lconst.43, 6

	.type	go..C77,@object
	.section	.rodata.go..C77,"a",@progbits
	.p2align	3
go..C77:
	.quad	.Lconst.43
	.quad	5
	.size	go..C77, 16

	.type	.Lconst.44,@object
	.section	.rodata..Lconst.44,"a",@progbits
.Lconst.44:
	.asciz	"B"
	.size	.Lconst.44, 2

	.type	go..C78,@object
	.section	.rodata.go..C78,"a",@progbits
	.p2align	3
go..C78:
	.quad	.Lconst.44
	.quad	1
	.size	go..C78, 16

	.type	.Lconst.45,@object
	.section	.rodata..Lconst.45,"a",@progbits
.Lconst.45:
	.asciz	"noverflow"
	.size	.Lconst.45, 10

	.type	go..C79,@object
	.section	.rodata.go..C79,"a",@progbits
	.p2align	3
go..C79:
	.quad	.Lconst.45
	.quad	9
	.size	go..C79, 16

	.type	uint16..d,@object
	.section	.rodata.uint16..d,"aG",@progbits,uint16..d,comdat
	.weak	uint16..d
	.p2align	4
uint16..d:
	.quad	2
	.quad	0
	.long	76732288
	.byte	137
	.byte	2
	.byte	2
	.zero	1
	.quad	runtime.memhash16..f
	.quad	runtime.memequal16..f
	.quad	0
	.quad	go..C80
	.quad	go..C83
	.quad	type...1uint16
	.size	uint16..d, 72

	.type	.Lconst.46,@object
	.section	.rodata..Lconst.46,"a",@progbits
.Lconst.46:
	.asciz	"uint16"
	.size	.Lconst.46, 7

	.type	go..C80,@object
	.section	.rodata.go..C80,"a",@progbits
	.p2align	3
go..C80:
	.quad	.Lconst.46
	.quad	6
	.size	go..C80, 16

	.type	go..C81,@object
	.section	.rodata.go..C81,"a",@progbits
	.p2align	3
go..C81:
	.quad	.Lconst.46
	.quad	6
	.size	go..C81, 16

	.type	go..C82,@object
	.section	.bss.go..C82,"aw",@nobits
	.p2align	4
go..C82:
	.zero	40
	.size	go..C82, 40

	.type	go..C83,@object
	.section	.rodata.go..C83,"a",@progbits
	.p2align	4
go..C83:
	.quad	go..C81
	.quad	0
	.quad	go..C82
	.quad	0
	.quad	0
	.size	go..C83, 40

	.type	type...1uint16,@object
	.section	.rodata.type...1uint16,"aG",@progbits,type...1uint16,comdat
	.weak	type...1uint16
	.p2align	4
type...1uint16:
	.quad	8
	.quad	8
	.long	1227716617
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C84
	.quad	0
	.quad	0
	.quad	uint16..d
	.size	type...1uint16, 80

	.type	.Lconst.47,@object
	.section	.rodata..Lconst.47,"a",@progbits
.Lconst.47:
	.asciz	"*uint16"
	.size	.Lconst.47, 8

	.type	go..C84,@object
	.section	.rodata.go..C84,"a",@progbits
	.p2align	3
go..C84:
	.quad	.Lconst.47
	.quad	7
	.size	go..C84, 16

	.type	.Lconst.48,@object
	.section	.rodata..Lconst.48,"a",@progbits
.Lconst.48:
	.asciz	"hash0"
	.size	.Lconst.48, 6

	.type	go..C85,@object
	.section	.rodata.go..C85,"a",@progbits
	.p2align	3
go..C85:
	.quad	.Lconst.48
	.quad	5
	.size	go..C85, 16

	.type	uint32..d,@object
	.section	.rodata.uint32..d,"aG",@progbits,uint32..d,comdat
	.weak	uint32..d
	.p2align	4
uint32..d:
	.quad	4
	.quad	0
	.long	278357906
	.byte	138
	.byte	4
	.byte	4
	.zero	1
	.quad	runtime.memhash32..f
	.quad	runtime.memequal32..f
	.quad	0
	.quad	go..C86
	.quad	go..C89
	.quad	type...1uint32
	.size	uint32..d, 72

	.type	.Lconst.49,@object
	.section	.rodata..Lconst.49,"a",@progbits
.Lconst.49:
	.asciz	"uint32"
	.size	.Lconst.49, 7

	.type	go..C86,@object
	.section	.rodata.go..C86,"a",@progbits
	.p2align	3
go..C86:
	.quad	.Lconst.49
	.quad	6
	.size	go..C86, 16

	.type	go..C87,@object
	.section	.rodata.go..C87,"a",@progbits
	.p2align	3
go..C87:
	.quad	.Lconst.49
	.quad	6
	.size	go..C87, 16

	.type	go..C88,@object
	.section	.bss.go..C88,"aw",@nobits
	.p2align	4
go..C88:
	.zero	40
	.size	go..C88, 40

	.type	go..C89,@object
	.section	.rodata.go..C89,"a",@progbits
	.p2align	4
go..C89:
	.quad	go..C87
	.quad	0
	.quad	go..C88
	.quad	0
	.quad	0
	.size	go..C89, 40

	.type	type...1uint32,@object
	.section	.rodata.type...1uint32,"aG",@progbits,type...1uint32,comdat
	.weak	type...1uint32
	.p2align	4
type...1uint32:
	.quad	8
	.quad	8
	.long	158759209
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C90
	.quad	0
	.quad	0
	.quad	uint32..d
	.size	type...1uint32, 80

	.type	.Lconst.50,@object
	.section	.rodata..Lconst.50,"a",@progbits
.Lconst.50:
	.asciz	"*uint32"
	.size	.Lconst.50, 8

	.type	go..C90,@object
	.section	.rodata.go..C90,"a",@progbits
	.p2align	3
go..C90:
	.quad	.Lconst.50
	.quad	7
	.size	go..C90, 16

	.type	.Lconst.51,@object
	.section	.rodata..Lconst.51,"a",@progbits
.Lconst.51:
	.asciz	"buckets"
	.size	.Lconst.51, 8

	.type	go..C91,@object
	.section	.rodata.go..C91,"a",@progbits
	.p2align	3
go..C91:
	.quad	.Lconst.51
	.quad	7
	.size	go..C91, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	2572404297
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C92
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.52,@object
	.section	.rodata..Lconst.52,"a",@progbits
.Lconst.52:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]interface {}; overflow * }"
	.size	.Lconst.52, 81

	.type	go..C92,@object
	.section	.rodata.go..C92,"a",@progbits
	.p2align	3
go..C92:
	.quad	.Lconst.52
	.quad	80
	.size	go..C92, 16

	.type	.Lconst.53,@object
	.section	.rodata..Lconst.53,"a",@progbits
.Lconst.53:
	.asciz	"oldbuckets"
	.size	.Lconst.53, 11

	.type	go..C93,@object
	.section	.rodata.go..C93,"a",@progbits
	.p2align	3
go..C93:
	.quad	.Lconst.53
	.quad	10
	.size	go..C93, 16

	.type	.Lconst.54,@object
	.section	.rodata..Lconst.54,"a",@progbits
.Lconst.54:
	.asciz	"nevacuate"
	.size	.Lconst.54, 10

	.type	go..C94,@object
	.section	.rodata.go..C94,"a",@progbits
	.p2align	3
go..C94:
	.quad	.Lconst.54
	.quad	9
	.size	go..C94, 16

	.type	uintptr..d,@object
	.section	.rodata.uintptr..d,"aG",@progbits,uintptr..d,comdat
	.weak	uintptr..d
	.p2align	4
uintptr..d:
	.quad	8
	.quad	0
	.long	2806773995
	.byte	140
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C95
	.quad	go..C98
	.quad	type...1uintptr
	.size	uintptr..d, 72

	.type	.Lconst.55,@object
	.section	.rodata..Lconst.55,"a",@progbits
.Lconst.55:
	.asciz	"uintptr"
	.size	.Lconst.55, 8

	.type	go..C95,@object
	.section	.rodata.go..C95,"a",@progbits
	.p2align	3
go..C95:
	.quad	.Lconst.55
	.quad	7
	.size	go..C95, 16

	.type	go..C96,@object
	.section	.rodata.go..C96,"a",@progbits
	.p2align	3
go..C96:
	.quad	.Lconst.55
	.quad	7
	.size	go..C96, 16

	.type	go..C97,@object
	.section	.bss.go..C97,"aw",@nobits
	.p2align	4
go..C97:
	.zero	40
	.size	go..C97, 40

	.type	go..C98,@object
	.section	.rodata.go..C98,"a",@progbits
	.p2align	4
go..C98:
	.quad	go..C96
	.quad	0
	.quad	go..C97
	.quad	0
	.quad	0
	.size	go..C98, 40

	.type	type...1uintptr,@object
	.section	.rodata.type...1uintptr,"aG",@progbits,type...1uintptr,comdat
	.weak	type...1uintptr
	.p2align	4
type...1uintptr:
	.quad	8
	.quad	8
	.long	1958710969
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C99
	.quad	0
	.quad	0
	.quad	uintptr..d
	.size	type...1uintptr, 80

	.type	.Lconst.56,@object
	.section	.rodata..Lconst.56,"a",@progbits
.Lconst.56:
	.asciz	"*uintptr"
	.size	.Lconst.56, 9

	.type	go..C99,@object
	.section	.rodata.go..C99,"a",@progbits
	.p2align	3
go..C99:
	.quad	.Lconst.56
	.quad	8
	.size	go..C99, 16

	.type	.Lconst.57,@object
	.section	.rodata..Lconst.57,"a",@progbits
.Lconst.57:
	.asciz	"extra"
	.size	.Lconst.57, 6

	.type	go..C100,@object
	.section	.rodata.go..C100,"a",@progbits
	.p2align	3
go..C100:
	.quad	.Lconst.57
	.quad	5
	.size	go..C100, 16

	.type	go..C101,@object
	.section	.data.go..C101,"aw",@progbits
	.p2align	4
go..C101:
	.quad	go..C71
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C77
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C78
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C79
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C85
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C91
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C93
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C94
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C100
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C101, 360

	.type	.Lconst.58,@object
	.section	.rodata..Lconst.58,"a",@progbits
.Lconst.58:
	.asciz	"base"
	.size	.Lconst.58, 5

	.type	go..C102,@object
	.section	.rodata.go..C102,"a",@progbits
	.p2align	3
go..C102:
	.quad	.Lconst.58
	.quad	4
	.size	go..C102, 16

	.type	go..C103,@object
	.section	.rodata.go..C103,"a",@progbits
	.p2align	3
go..C103:
	.quad	.Lconst.2
	.quad	22
	.size	go..C103, 16

	.type	.Lconst.59,@object
	.section	.rodata..Lconst.59,"a",@progbits
.Lconst.59:
	.asciz	"bases"
	.size	.Lconst.59, 6

	.type	go..C104,@object
	.section	.rodata.go..C104,"a",@progbits
	.p2align	3
go..C104:
	.quad	.Lconst.59
	.quad	5
	.size	go..C104, 16

	.type	go..C105,@object
	.section	.rodata.go..C105,"a",@progbits
	.p2align	3
go..C105:
	.quad	.Lconst.2
	.quad	22
	.size	go..C105, 16

	.type	go..C106,@object
	.section	.data.go..C106,"aw",@progbits
	.p2align	4
go..C106:
	.quad	go..C44
	.quad	go..C45
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C46
	.quad	go..C47
	.quad	command_line_arguments.ComponentType..d
	.quad	0
	.quad	32
	.quad	go..C48
	.quad	go..C49
	.quad	type..map.6string.7interface.4.5
	.quad	0
	.quad	48
	.quad	go..C102
	.quad	go..C103
	.quad	string..d
	.quad	0
	.quad	64
	.quad	go..C104
	.quad	go..C105
	.quad	type...6.7.1command_line_arguments.Component
	.quad	0
	.quad	96
	.size	go..C106, 200

	.type	command_line_arguments.Components..d,@object
	.section	.rodata.command_line_arguments.Components..d,"a",@progbits
	.globl	command_line_arguments.Components..d
	.p2align	4
command_line_arguments.Components..d:
	.quad	8
	.quad	8
	.long	1733811696
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C107
	.quad	go..C123
	.quad	type...1command_line_arguments.Components
	.quad	string..d
	.quad	type...1command_line_arguments.Component
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	command_line_arguments.Components..d, 112

	.type	.Lconst.62,@object
	.section	.rodata..Lconst.62,"a",@progbits
.Lconst.62:
	.asciz	"\tcommand_line_arguments\tassets.Components"
	.size	.Lconst.62, 42

	.type	go..C107,@object
	.section	.rodata.go..C107,"a",@progbits
	.p2align	3
go..C107:
	.quad	.Lconst.62
	.quad	41
	.size	go..C107, 16

	.type	.Lconst.63,@object
	.section	.rodata..Lconst.63,"a",@progbits
.Lconst.63:
	.asciz	"Components"
	.size	.Lconst.63, 11

	.type	go..C108,@object
	.section	.rodata.go..C108,"a",@progbits
	.p2align	3
go..C108:
	.quad	.Lconst.63
	.quad	10
	.size	go..C108, 16

	.type	go..C109,@object
	.section	.rodata.go..C109,"a",@progbits
	.p2align	3
go..C109:
	.quad	.Lconst.2
	.quad	22
	.size	go..C109, 16

	.type	.Lconst.64,@object
	.section	.rodata..Lconst.64,"a",@progbits
.Lconst.64:
	.asciz	"LookupBaseType"
	.size	.Lconst.64, 15

	.type	go..C110,@object
	.section	.rodata.go..C110,"a",@progbits
	.p2align	3
go..C110:
	.quad	.Lconst.64
	.quad	14
	.size	go..C110, 16

	.type	type..func.8string.9.8.1command_line_arguments.Component.3bool.9,@object
	.section	.rodata.type..func.8string.9.8.1command_line_arguments.Component.3bool.9,"aG",@progbits,type..func.8string.9.8.1command_line_arguments.Component.3bool.9,comdat
	.weak	type..func.8string.9.8.1command_line_arguments.Component.3bool.9
	.p2align	4
type..func.8string.9.8.1command_line_arguments.Component.3bool.9:
	.quad	8
	.quad	8
	.long	3256402440
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C111
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C112
	.quad	1
	.quad	1
	.quad	go..C118
	.quad	2
	.quad	2
	.size	type..func.8string.9.8.1command_line_arguments.Component.3bool.9, 128

	.type	.Lconst.65,@object
	.section	.rodata..Lconst.65,"a",@progbits
.Lconst.65:
	.asciz	"func(string) (*\tcommand_line_arguments\tassets.Component, bool)"
	.size	.Lconst.65, 63

	.type	go..C111,@object
	.section	.rodata.go..C111,"a",@progbits
	.p2align	3
go..C111:
	.quad	.Lconst.65
	.quad	62
	.size	go..C111, 16

	.type	go..C112,@object
	.section	.data.go..C112,"aw",@progbits
	.p2align	3
go..C112:
	.quad	string..d
	.size	go..C112, 8

	.type	bool..d,@object
	.section	.rodata.bool..d,"aG",@progbits,bool..d,comdat
	.weak	bool..d
	.p2align	4
bool..d:
	.quad	1
	.quad	0
	.long	1537849745
	.byte	129
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C113
	.quad	go..C116
	.quad	type...1bool
	.size	bool..d, 72

	.type	.Lconst.66,@object
	.section	.rodata..Lconst.66,"a",@progbits
.Lconst.66:
	.asciz	"bool"
	.size	.Lconst.66, 5

	.type	go..C113,@object
	.section	.rodata.go..C113,"a",@progbits
	.p2align	3
go..C113:
	.quad	.Lconst.66
	.quad	4
	.size	go..C113, 16

	.type	go..C114,@object
	.section	.rodata.go..C114,"a",@progbits
	.p2align	3
go..C114:
	.quad	.Lconst.66
	.quad	4
	.size	go..C114, 16

	.type	go..C115,@object
	.section	.bss.go..C115,"aw",@nobits
	.p2align	4
go..C115:
	.zero	40
	.size	go..C115, 40

	.type	go..C116,@object
	.section	.rodata.go..C116,"a",@progbits
	.p2align	4
go..C116:
	.quad	go..C114
	.quad	0
	.quad	go..C115
	.quad	0
	.quad	0
	.size	go..C116, 40

	.type	type...1bool,@object
	.section	.rodata.type...1bool,"aG",@progbits,type...1bool,comdat
	.weak	type...1bool
	.p2align	4
type...1bool:
	.quad	8
	.quad	8
	.long	3130759449
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C117
	.quad	0
	.quad	0
	.quad	bool..d
	.size	type...1bool, 80

	.type	.Lconst.67,@object
	.section	.rodata..Lconst.67,"a",@progbits
.Lconst.67:
	.asciz	"*bool"
	.size	.Lconst.67, 6

	.type	go..C117,@object
	.section	.rodata.go..C117,"a",@progbits
	.p2align	3
go..C117:
	.quad	.Lconst.67
	.quad	5
	.size	go..C117, 16

	.type	go..C118,@object
	.section	.data.go..C118,"aw",@progbits
	.p2align	3
go..C118:
	.quad	type...1command_line_arguments.Component
	.quad	bool..d
	.size	go..C118, 16

	.type	type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9,@object
	.section	.rodata.type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9,"aG",@progbits,type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9,comdat
	.weak	type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9
	.p2align	4
type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9:
	.quad	8
	.quad	8
	.long	3361821512
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C119
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C120
	.quad	2
	.quad	2
	.quad	go..C121
	.quad	2
	.quad	2
	.size	type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9, 128

	.type	.Lconst.68,@object
	.section	.rodata..Lconst.68,"a",@progbits
.Lconst.68:
	.asciz	"func(\tcommand_line_arguments\tassets.Components, string) (*\tcommand_line_arguments\tassets.Component, bool)"
	.size	.Lconst.68, 106

	.type	go..C119,@object
	.section	.rodata.go..C119,"a",@progbits
	.p2align	3
go..C119:
	.quad	.Lconst.68
	.quad	105
	.size	go..C119, 16

	.type	go..C120,@object
	.section	.data.go..C120,"aw",@progbits
	.p2align	3
go..C120:
	.quad	command_line_arguments.Components..d
	.quad	string..d
	.size	go..C120, 16

	.type	go..C121,@object
	.section	.data.go..C121,"aw",@progbits
	.p2align	3
go..C121:
	.quad	type...1command_line_arguments.Component
	.quad	bool..d
	.size	go..C121, 16

	.type	go..C122,@object
	.section	.data.go..C122,"aw",@progbits
	.p2align	4
go..C122:
	.quad	go..C110
	.quad	0
	.quad	type..func.8string.9.8.1command_line_arguments.Component.3bool.9
	.quad	type..func.8command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9
	.quad	command_line_arguments.Components.LookupBaseType
	.size	go..C122, 40

	.type	go..C123,@object
	.section	.rodata.go..C123,"a",@progbits
	.p2align	4
go..C123:
	.quad	go..C108
	.quad	go..C109
	.quad	go..C122
	.quad	1
	.quad	1
	.size	go..C123, 40

	.type	type...1command_line_arguments.Components,@object
	.section	.rodata.type...1command_line_arguments.Components,"aG",@progbits,type...1command_line_arguments.Components,comdat
	.weak	type...1command_line_arguments.Components
	.p2align	4
type...1command_line_arguments.Components:
	.quad	8
	.quad	8
	.long	1971183369
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C124
	.quad	go..C130
	.quad	type...1.1command_line_arguments.Components
	.quad	command_line_arguments.Components..d
	.size	type...1command_line_arguments.Components, 80

	.type	.Lconst.69,@object
	.section	.rodata..Lconst.69,"a",@progbits
.Lconst.69:
	.asciz	"*\tcommand_line_arguments\tassets.Components"
	.size	.Lconst.69, 43

	.type	go..C124,@object
	.section	.rodata.go..C124,"a",@progbits
	.p2align	3
go..C124:
	.quad	.Lconst.69
	.quad	42
	.size	go..C124, 16

	.type	go..C125,@object
	.section	.rodata.go..C125,"a",@progbits
	.p2align	3
go..C125:
	.quad	.Lconst.64
	.quad	14
	.size	go..C125, 16

	.type	type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9,"aG",@progbits,type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9,comdat
	.weak	type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9
	.p2align	4
type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9:
	.quad	8
	.quad	8
	.long	2367780456
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C126
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C127
	.quad	2
	.quad	2
	.quad	go..C128
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9, 128

	.type	.Lconst.70,@object
	.section	.rodata..Lconst.70,"a",@progbits
.Lconst.70:
	.asciz	"func(*\tcommand_line_arguments\tassets.Components, string) (*\tcommand_line_arguments\tassets.Component, bool)"
	.size	.Lconst.70, 107

	.type	go..C126,@object
	.section	.rodata.go..C126,"a",@progbits
	.p2align	3
go..C126:
	.quad	.Lconst.70
	.quad	106
	.size	go..C126, 16

	.type	go..C127,@object
	.section	.data.go..C127,"aw",@progbits
	.p2align	3
go..C127:
	.quad	type...1command_line_arguments.Components
	.quad	string..d
	.size	go..C127, 16

	.type	go..C128,@object
	.section	.data.go..C128,"aw",@progbits
	.p2align	3
go..C128:
	.quad	type...1command_line_arguments.Component
	.quad	bool..d
	.size	go..C128, 16

	.type	go..C129,@object
	.section	.data.go..C129,"aw",@progbits
	.p2align	4
go..C129:
	.quad	go..C125
	.quad	0
	.quad	type..func.8string.9.8.1command_line_arguments.Component.3bool.9
	.quad	type..func.8.1command_line_arguments.Components.3string.9.8.1command_line_arguments.Component.3bool.9
	.quad	command_line_arguments.Components.LookupBaseType
	.size	go..C129, 40

	.type	go..C130,@object
	.section	.rodata.go..C130,"a",@progbits
	.p2align	4
go..C130:
	.quad	0
	.quad	0
	.quad	go..C129
	.quad	1
	.quad	1
	.size	go..C130, 40

	.type	type...1.1command_line_arguments.Components,@object
	.section	.rodata.type...1.1command_line_arguments.Components,"aG",@progbits,type...1.1command_line_arguments.Components,comdat
	.weak	type...1.1command_line_arguments.Components
	.p2align	4
type...1.1command_line_arguments.Components:
	.quad	8
	.quad	8
	.long	1474162841
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C131
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Components
	.size	type...1.1command_line_arguments.Components, 80

	.type	.Lconst.71,@object
	.section	.rodata..Lconst.71,"a",@progbits
.Lconst.71:
	.asciz	"**\tcommand_line_arguments\tassets.Components"
	.size	.Lconst.71, 44

	.type	go..C131,@object
	.section	.rodata.go..C131,"a",@progbits
	.p2align	3
go..C131:
	.quad	.Lconst.71
	.quad	43
	.size	go..C131, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	42782084
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C132
	.quad	0
	.quad	0
	.quad	go..C138
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkEGba,@object
	.section	.rodata.gcbits..kwkEGba,"aG",@progbits,gcbits..kwkEGba,comdat
	.weak	gcbits..kwkEGba
gcbits..kwkEGba:
	.ascii	"\252\252\376\003"
	.size	gcbits..kwkEGba, 4

	.type	.Lconst.72,@object
	.section	.rodata..Lconst.72,"a",@progbits
.Lconst.72:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tassets.Component; overflow * }"
	.size	.Lconst.72, 109

	.type	go..C132,@object
	.section	.rodata.go..C132,"a",@progbits
	.p2align	3
go..C132:
	.quad	.Lconst.72
	.quad	108
	.size	go..C132, 16

	.type	go..C133,@object
	.section	.rodata.go..C133,"a",@progbits
	.p2align	3
go..C133:
	.quad	.Lconst.27
	.quad	7
	.size	go..C133, 16

	.type	go..C134,@object
	.section	.rodata.go..C134,"a",@progbits
	.p2align	3
go..C134:
	.quad	.Lconst.32
	.quad	4
	.size	go..C134, 16

	.type	go..C135,@object
	.section	.rodata.go..C135,"a",@progbits
	.p2align	3
go..C135:
	.quad	.Lconst.35
	.quad	6
	.size	go..C135, 16

	.type	type...68x.7.1command_line_arguments.Component,@object
	.section	.rodata.type...68x.7.1command_line_arguments.Component,"aG",@progbits,type...68x.7.1command_line_arguments.Component,comdat
	.weak	type...68x.7.1command_line_arguments.Component
	.p2align	4
type...68x.7.1command_line_arguments.Component:
	.quad	64
	.quad	64
	.long	512719169
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C136
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Component
	.quad	type...6.7.1command_line_arguments.Component
	.quad	8
	.size	type...68x.7.1command_line_arguments.Component, 96

	.type	gcbits..Gh,@object
	.section	.rodata.gcbits..Gh,"aG",@progbits,gcbits..Gh,comdat
	.weak	gcbits..Gh
gcbits..Gh:
	.byte	255
	.size	gcbits..Gh, 1

	.type	.Lconst.73,@object
	.section	.rodata..Lconst.73,"a",@progbits
.Lconst.73:
	.asciz	"[8]*\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.73, 45

	.type	go..C136,@object
	.section	.rodata.go..C136,"a",@progbits
	.p2align	3
go..C136:
	.quad	.Lconst.73
	.quad	44
	.size	go..C136, 16

	.type	go..C137,@object
	.section	.rodata.go..C137,"a",@progbits
	.p2align	3
go..C137:
	.quad	.Lconst.38
	.quad	8
	.size	go..C137, 16

	.type	go..C138,@object
	.section	.data.go..C138,"aw",@progbits
	.p2align	4
go..C138:
	.quad	go..C133
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C134
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C135
	.quad	0
	.quad	type...68x.7.1command_line_arguments.Component
	.quad	0
	.quad	272
	.quad	go..C137
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C138, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1332713956
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C139
	.quad	0
	.quad	0
	.quad	go..C150
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.74,@object
	.section	.rodata..Lconst.74,"a",@progbits
.Lconst.74:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tassets.Component; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tassets.Component; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.74, 344

	.type	go..C139,@object
	.section	.rodata.go..C139,"a",@progbits
	.p2align	3
go..C139:
	.quad	.Lconst.74
	.quad	343
	.size	go..C139, 16

	.type	go..C140,@object
	.section	.rodata.go..C140,"a",@progbits
	.p2align	3
go..C140:
	.quad	.Lconst.40
	.quad	5
	.size	go..C140, 16

	.type	go..C141,@object
	.section	.rodata.go..C141,"a",@progbits
	.p2align	3
go..C141:
	.quad	.Lconst.43
	.quad	5
	.size	go..C141, 16

	.type	go..C142,@object
	.section	.rodata.go..C142,"a",@progbits
	.p2align	3
go..C142:
	.quad	.Lconst.44
	.quad	1
	.size	go..C142, 16

	.type	go..C143,@object
	.section	.rodata.go..C143,"a",@progbits
	.p2align	3
go..C143:
	.quad	.Lconst.45
	.quad	9
	.size	go..C143, 16

	.type	go..C144,@object
	.section	.rodata.go..C144,"a",@progbits
	.p2align	3
go..C144:
	.quad	.Lconst.48
	.quad	5
	.size	go..C144, 16

	.type	go..C145,@object
	.section	.rodata.go..C145,"a",@progbits
	.p2align	3
go..C145:
	.quad	.Lconst.51
	.quad	7
	.size	go..C145, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	684513353
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C146
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.75,@object
	.section	.rodata..Lconst.75,"a",@progbits
.Lconst.75:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]*\tcommand_line_arguments\tassets.Component; overflow * }"
	.size	.Lconst.75, 110

	.type	go..C146,@object
	.section	.rodata.go..C146,"a",@progbits
	.p2align	3
go..C146:
	.quad	.Lconst.75
	.quad	109
	.size	go..C146, 16

	.type	go..C147,@object
	.section	.rodata.go..C147,"a",@progbits
	.p2align	3
go..C147:
	.quad	.Lconst.53
	.quad	10
	.size	go..C147, 16

	.type	go..C148,@object
	.section	.rodata.go..C148,"a",@progbits
	.p2align	3
go..C148:
	.quad	.Lconst.54
	.quad	9
	.size	go..C148, 16

	.type	go..C149,@object
	.section	.rodata.go..C149,"a",@progbits
	.p2align	3
go..C149:
	.quad	.Lconst.57
	.quad	5
	.size	go..C149, 16

	.type	go..C150,@object
	.section	.data.go..C150,"aw",@progbits
	.p2align	4
go..C150:
	.quad	go..C140
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C141
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C142
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C143
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C144
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C145
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C147
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C148
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C149
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C150, 360

	.type	type..map.6string.7.1command_line_arguments.Component,@object
	.section	.rodata.type..map.6string.7.1command_line_arguments.Component,"aG",@progbits,type..map.6string.7.1command_line_arguments.Component,comdat
	.weak	type..map.6string.7.1command_line_arguments.Component
	.p2align	4
type..map.6string.7.1command_line_arguments.Component:
	.quad	8
	.quad	8
	.long	2552374083
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C151
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...1command_line_arguments.Component
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7.1command_line_arguments.Component.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7.1command_line_arguments.Component, 112

	.type	.Lconst.77,@object
	.section	.rodata..Lconst.77,"a",@progbits
.Lconst.77:
	.asciz	"map[string]*\tcommand_line_arguments\tassets.Component"
	.size	.Lconst.77, 53

	.type	go..C151,@object
	.section	.rodata.go..C151,"a",@progbits
	.p2align	3
go..C151:
	.quad	.Lconst.77
	.quad	52
	.size	go..C151, 16

	.type	.Lconst.78,@object
	.section	.rodata..Lconst.78,"a",@progbits
.Lconst.78:
	.asciz	"file"
	.size	.Lconst.78, 5

	.type	.Lconst.80,@object
	.section	.rodata..Lconst.80,"a",@progbits
.Lconst.80:
	.asciz	"dir"
	.size	.Lconst.80, 4

	.type	command_line_arguments.Entity..d,@object
	.section	.rodata.command_line_arguments.Entity..d,"a",@progbits
	.globl	command_line_arguments.Entity..d
	.p2align	4
command_line_arguments.Entity..d:
	.quad	16
	.quad	16
	.long	1998870213
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C152
	.quad	go..C156
	.quad	type...1command_line_arguments.Entity
	.quad	go..C205
	.quad	12
	.quad	12
	.size	command_line_arguments.Entity..d, 96

	.type	.Lconst.83,@object
	.section	.rodata..Lconst.83,"a",@progbits
.Lconst.83:
	.asciz	"\tcommand_line_arguments\tassets.Entity"
	.size	.Lconst.83, 38

	.type	go..C152,@object
	.section	.rodata.go..C152,"a",@progbits
	.p2align	3
go..C152:
	.quad	.Lconst.83
	.quad	37
	.size	go..C152, 16

	.type	.Lconst.84,@object
	.section	.rodata..Lconst.84,"a",@progbits
.Lconst.84:
	.asciz	"Entity"
	.size	.Lconst.84, 7

	.type	go..C153,@object
	.section	.rodata.go..C153,"a",@progbits
	.p2align	3
go..C153:
	.quad	.Lconst.84
	.quad	6
	.size	go..C153, 16

	.type	go..C154,@object
	.section	.rodata.go..C154,"a",@progbits
	.p2align	3
go..C154:
	.quad	.Lconst.2
	.quad	22
	.size	go..C154, 16

	.type	go..C155,@object
	.section	.bss.go..C155,"aw",@nobits
	.p2align	4
go..C155:
	.zero	40
	.size	go..C155, 40

	.type	go..C156,@object
	.section	.rodata.go..C156,"a",@progbits
	.p2align	4
go..C156:
	.quad	go..C153
	.quad	go..C154
	.quad	go..C155
	.quad	0
	.quad	0
	.size	go..C156, 40

	.type	type...1command_line_arguments.Entity,@object
	.section	.rodata.type...1command_line_arguments.Entity,"aG",@progbits,type...1command_line_arguments.Entity,comdat
	.weak	type...1command_line_arguments.Entity
	.p2align	4
type...1command_line_arguments.Entity:
	.quad	8
	.quad	8
	.long	1917152345
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C157
	.quad	0
	.quad	0
	.quad	command_line_arguments.Entity..d
	.size	type...1command_line_arguments.Entity, 80

	.type	.Lconst.85,@object
	.section	.rodata..Lconst.85,"a",@progbits
.Lconst.85:
	.asciz	"*\tcommand_line_arguments\tassets.Entity"
	.size	.Lconst.85, 39

	.type	go..C157,@object
	.section	.rodata.go..C157,"a",@progbits
	.p2align	3
go..C157:
	.quad	.Lconst.85
	.quad	38
	.size	go..C157, 16

	.type	.Lconst.86,@object
	.section	.rodata..Lconst.86,"a",@progbits
.Lconst.86:
	.asciz	"Attr"
	.size	.Lconst.86, 5

	.type	go..C158,@object
	.section	.rodata.go..C158,"a",@progbits
	.p2align	3
go..C158:
	.quad	.Lconst.86
	.quad	4
	.size	go..C158, 16

	.type	type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9,"aG",@progbits,type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9,comdat
	.weak	type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9
	.p2align	4
type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9:
	.quad	8
	.quad	8
	.long	984497512
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C159
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C160
	.quad	2
	.quad	2
	.quad	go..C168
	.quad	1
	.quad	1
	.size	type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9, 128

	.type	.Lconst.87,@object
	.section	.rodata..Lconst.87,"a",@progbits
.Lconst.87:
	.asciz	"func(\tcontext\tcontext.Context, *\tbazil_org_fuse\tfuse.Attr) error"
	.size	.Lconst.87, 65

	.type	go..C159,@object
	.section	.rodata.go..C159,"a",@progbits
	.p2align	3
go..C159:
	.quad	.Lconst.87
	.quad	64
	.size	go..C159, 16

	.type	go..C160,@object
	.section	.data.go..C160,"aw",@progbits
	.p2align	3
go..C160:
	.quad	context.Context..d
	.quad	type...1bazil_org_fuse.Attr
	.size	go..C160, 16

	.type	error..d,@object
	.section	.rodata.error..d,"aG",@progbits,error..d,comdat
	.weak	error..d
	.p2align	4
error..d:
	.quad	16
	.quad	16
	.long	2166057687
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C161
	.quad	go..C164
	.quad	type...1error
	.quad	go..C167
	.quad	1
	.quad	1
	.size	error..d, 96

	.type	.Lconst.88,@object
	.section	.rodata..Lconst.88,"a",@progbits
.Lconst.88:
	.asciz	"error"
	.size	.Lconst.88, 6

	.type	go..C161,@object
	.section	.rodata.go..C161,"a",@progbits
	.p2align	3
go..C161:
	.quad	.Lconst.88
	.quad	5
	.size	go..C161, 16

	.type	go..C162,@object
	.section	.rodata.go..C162,"a",@progbits
	.p2align	3
go..C162:
	.quad	.Lconst.88
	.quad	5
	.size	go..C162, 16

	.type	go..C163,@object
	.section	.bss.go..C163,"aw",@nobits
	.p2align	4
go..C163:
	.zero	40
	.size	go..C163, 40

	.type	go..C164,@object
	.section	.rodata.go..C164,"a",@progbits
	.p2align	4
go..C164:
	.quad	go..C162
	.quad	0
	.quad	go..C163
	.quad	0
	.quad	0
	.size	go..C164, 40

	.type	type...1error,@object
	.section	.rodata.type...1error,"aG",@progbits,type...1error,comdat
	.weak	type...1error
	.p2align	4
type...1error:
	.quad	8
	.quad	8
	.long	297184633
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C165
	.quad	0
	.quad	0
	.quad	error..d
	.size	type...1error, 80

	.type	.Lconst.89,@object
	.section	.rodata..Lconst.89,"a",@progbits
.Lconst.89:
	.asciz	"*error"
	.size	.Lconst.89, 7

	.type	go..C165,@object
	.section	.rodata.go..C165,"a",@progbits
	.p2align	3
go..C165:
	.quad	.Lconst.89
	.quad	6
	.size	go..C165, 16

	.type	.Lconst.90,@object
	.section	.rodata..Lconst.90,"a",@progbits
.Lconst.90:
	.asciz	"Error"
	.size	.Lconst.90, 6

	.type	go..C166,@object
	.section	.rodata.go..C166,"a",@progbits
	.p2align	3
go..C166:
	.quad	.Lconst.90
	.quad	5
	.size	go..C166, 16

	.type	go..C167,@object
	.section	.data.go..C167,"aw",@progbits
	.p2align	4
go..C167:
	.quad	go..C166
	.quad	0
	.quad	type..func.8.9.8string.9
	.size	go..C167, 24

	.type	go..C168,@object
	.section	.data.go..C168,"aw",@progbits
	.p2align	3
go..C168:
	.quad	error..d
	.size	go..C168, 8

	.type	.Lconst.91,@object
	.section	.rodata..Lconst.91,"a",@progbits
.Lconst.91:
	.asciz	"Children"
	.size	.Lconst.91, 9

	.type	go..C169,@object
	.section	.rodata.go..C169,"a",@progbits
	.p2align	3
go..C169:
	.quad	.Lconst.91
	.quad	8
	.size	go..C169, 16

	.type	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9,@object
	.section	.rodata.type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9,"aG",@progbits,type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9,comdat
	.weak	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9
	.p2align	4
type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9:
	.quad	8
	.quad	8
	.long	631440648
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C170
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C171
	.quad	0
	.quad	0
	.quad	go..C172
	.quad	1
	.quad	1
	.size	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9, 128

	.type	.Lconst.92,@object
	.section	.rodata..Lconst.92,"a",@progbits
.Lconst.92:
	.asciz	"func() \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Nodes"
	.size	.Lconst.92, 58

	.type	go..C170,@object
	.section	.rodata.go..C170,"a",@progbits
	.p2align	3
go..C170:
	.quad	.Lconst.92
	.quad	57
	.size	go..C170, 16

	.type	go..C171,@object
	.section	.bss.go..C171,"aw",@nobits
	.p2align	3
go..C171:
	.zero	8
	.size	go..C171, 8

	.type	go..C172,@object
	.section	.data.go..C172,"aw",@progbits
	.p2align	3
go..C172:
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes..d
	.size	go..C172, 8

	.type	.Lconst.93,@object
	.section	.rodata..Lconst.93,"a",@progbits
.Lconst.93:
	.asciz	"Content"
	.size	.Lconst.93, 8

	.type	go..C173,@object
	.section	.rodata.go..C173,"a",@progbits
	.p2align	3
go..C173:
	.quad	.Lconst.93
	.quad	7
	.size	go..C173, 16

	.type	type..func.8.9.8.6.7uint8.9,@object
	.section	.rodata.type..func.8.9.8.6.7uint8.9,"aG",@progbits,type..func.8.9.8.6.7uint8.9,comdat
	.weak	type..func.8.9.8.6.7uint8.9
	.p2align	4
type..func.8.9.8.6.7uint8.9:
	.quad	8
	.quad	8
	.long	4051552712
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C174
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C175
	.quad	0
	.quad	0
	.quad	go..C176
	.quad	1
	.quad	1
	.size	type..func.8.9.8.6.7uint8.9, 128

	.type	.Lconst.94,@object
	.section	.rodata..Lconst.94,"a",@progbits
.Lconst.94:
	.asciz	"func() []uint8"
	.size	.Lconst.94, 15

	.type	go..C174,@object
	.section	.rodata.go..C174,"a",@progbits
	.p2align	3
go..C174:
	.quad	.Lconst.94
	.quad	14
	.size	go..C174, 16

	.type	go..C175,@object
	.section	.bss.go..C175,"aw",@nobits
	.p2align	3
go..C175:
	.zero	8
	.size	go..C175, 8

	.type	go..C176,@object
	.section	.data.go..C176,"aw",@progbits
	.p2align	3
go..C176:
	.quad	type...6.7uint8
	.size	go..C176, 8

	.type	.Lconst.95,@object
	.section	.rodata..Lconst.95,"a",@progbits
.Lconst.95:
	.asciz	"Delete"
	.size	.Lconst.95, 7

	.type	go..C177,@object
	.section	.rodata.go..C177,"a",@progbits
	.p2align	3
go..C177:
	.quad	.Lconst.95
	.quad	6
	.size	go..C177, 16

	.type	type..func.8.9.8bool.9,@object
	.section	.rodata.type..func.8.9.8bool.9,"aG",@progbits,type..func.8.9.8bool.9,comdat
	.weak	type..func.8.9.8bool.9
	.p2align	4
type..func.8.9.8bool.9:
	.quad	8
	.quad	8
	.long	3933103176
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C178
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C179
	.quad	0
	.quad	0
	.quad	go..C180
	.quad	1
	.quad	1
	.size	type..func.8.9.8bool.9, 128

	.type	.Lconst.96,@object
	.section	.rodata..Lconst.96,"a",@progbits
.Lconst.96:
	.asciz	"func() bool"
	.size	.Lconst.96, 12

	.type	go..C178,@object
	.section	.rodata.go..C178,"a",@progbits
	.p2align	3
go..C178:
	.quad	.Lconst.96
	.quad	11
	.size	go..C178, 16

	.type	go..C179,@object
	.section	.bss.go..C179,"aw",@nobits
	.p2align	3
go..C179:
	.zero	8
	.size	go..C179, 8

	.type	go..C180,@object
	.section	.data.go..C180,"aw",@progbits
	.p2align	3
go..C180:
	.quad	bool..d
	.size	go..C180, 8

	.type	.Lconst.97,@object
	.section	.rodata..Lconst.97,"a",@progbits
.Lconst.97:
	.asciz	"Entry"
	.size	.Lconst.97, 6

	.type	go..C181,@object
	.section	.rodata.go..C181,"a",@progbits
	.p2align	3
go..C181:
	.quad	.Lconst.97
	.quad	5
	.size	go..C181, 16

	.type	type..func.8.9.8bazil_org_fuse.Dirent.9,@object
	.section	.rodata.type..func.8.9.8bazil_org_fuse.Dirent.9,"aG",@progbits,type..func.8.9.8bazil_org_fuse.Dirent.9,comdat
	.weak	type..func.8.9.8bazil_org_fuse.Dirent.9
	.p2align	4
type..func.8.9.8bazil_org_fuse.Dirent.9:
	.quad	8
	.quad	8
	.long	4126858056
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C182
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C183
	.quad	0
	.quad	0
	.quad	go..C184
	.quad	1
	.quad	1
	.size	type..func.8.9.8bazil_org_fuse.Dirent.9, 128

	.type	.Lconst.98,@object
	.section	.rodata..Lconst.98,"a",@progbits
.Lconst.98:
	.asciz	"func() \tbazil_org_fuse\tfuse.Dirent"
	.size	.Lconst.98, 35

	.type	go..C182,@object
	.section	.rodata.go..C182,"a",@progbits
	.p2align	3
go..C182:
	.quad	.Lconst.98
	.quad	34
	.size	go..C182, 16

	.type	go..C183,@object
	.section	.bss.go..C183,"aw",@nobits
	.p2align	3
go..C183:
	.zero	8
	.size	go..C183, 8

	.type	go..C184,@object
	.section	.data.go..C184,"aw",@progbits
	.p2align	3
go..C184:
	.quad	bazil_org_fuse.Dirent..d
	.size	go..C184, 8

	.type	.Lconst.99,@object
	.section	.rodata..Lconst.99,"a",@progbits
.Lconst.99:
	.asciz	"IsDir"
	.size	.Lconst.99, 6

	.type	go..C185,@object
	.section	.rodata.go..C185,"a",@progbits
	.p2align	3
go..C185:
	.quad	.Lconst.99
	.quad	5
	.size	go..C185, 16

	.type	.Lconst.100,@object
	.section	.rodata..Lconst.100,"a",@progbits
.Lconst.100:
	.asciz	"IsFile"
	.size	.Lconst.100, 7

	.type	go..C186,@object
	.section	.rodata.go..C186,"a",@progbits
	.p2align	3
go..C186:
	.quad	.Lconst.100
	.quad	6
	.size	go..C186, 16

	.type	.Lconst.101,@object
	.section	.rodata..Lconst.101,"a",@progbits
.Lconst.101:
	.asciz	"MetaData"
	.size	.Lconst.101, 9

	.type	go..C187,@object
	.section	.rodata.go..C187,"a",@progbits
	.p2align	3
go..C187:
	.quad	.Lconst.101
	.quad	8
	.size	go..C187, 16

	.type	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9,@object
	.section	.rodata.type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9,"aG",@progbits,type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9,comdat
	.weak	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9
	.p2align	4
type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9:
	.quad	8
	.quad	8
	.long	617414664
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C188
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C189
	.quad	0
	.quad	0
	.quad	go..C190
	.quad	1
	.quad	1
	.size	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9, 128

	.type	.Lconst.102,@object
	.section	.rodata..Lconst.102,"a",@progbits
.Lconst.102:
	.asciz	"func() \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.NodeMetaData"
	.size	.Lconst.102, 65

	.type	go..C188,@object
	.section	.rodata.go..C188,"a",@progbits
	.p2align	3
go..C188:
	.quad	.Lconst.102
	.quad	64
	.size	go..C188, 16

	.type	go..C189,@object
	.section	.bss.go..C189,"aw",@nobits
	.p2align	3
go..C189:
	.zero	8
	.size	go..C189, 8

	.type	go..C190,@object
	.section	.data.go..C190,"aw",@progbits
	.p2align	3
go..C190:
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData..d
	.size	go..C190, 8

	.type	go..C191,@object
	.section	.rodata.go..C191,"a",@progbits
	.p2align	3
go..C191:
	.quad	.Lconst.16
	.quad	4
	.size	go..C191, 16

	.type	.Lconst.103,@object
	.section	.rodata..Lconst.103,"a",@progbits
.Lconst.103:
	.asciz	"New"
	.size	.Lconst.103, 4

	.type	go..C192,@object
	.section	.rodata.go..C192,"a",@progbits
	.p2align	3
go..C192:
	.quad	.Lconst.103
	.quad	3
	.size	go..C192, 16

	.type	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9,@object
	.section	.rodata.type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9,"aG",@progbits,type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9,comdat
	.weak	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9
	.p2align	4
type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9:
	.quad	8
	.quad	8
	.long	3266784168
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C193
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C194
	.quad	2
	.quad	2
	.quad	go..C195
	.quad	1
	.quad	1
	.size	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9, 128

	.type	.Lconst.104,@object
	.section	.rodata..Lconst.104,"a",@progbits
.Lconst.104:
	.asciz	"func(\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.NodeType, string) \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node"
	.size	.Lconst.104, 118

	.type	go..C193,@object
	.section	.rodata.go..C193,"a",@progbits
	.p2align	3
go..C193:
	.quad	.Lconst.104
	.quad	117
	.size	go..C193, 16

	.type	go..C194,@object
	.section	.data.go..C194,"aw",@progbits
	.p2align	3
go..C194:
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType..d
	.quad	string..d
	.size	go..C194, 16

	.type	go..C195,@object
	.section	.data.go..C195,"aw",@progbits
	.p2align	3
go..C195:
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.size	go..C195, 8

	.type	.Lconst.105,@object
	.section	.rodata..Lconst.105,"a",@progbits
.Lconst.105:
	.asciz	"Parent"
	.size	.Lconst.105, 7

	.type	go..C196,@object
	.section	.rodata.go..C196,"a",@progbits
	.p2align	3
go..C196:
	.quad	.Lconst.105
	.quad	6
	.size	go..C196, 16

	.type	type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9,@object
	.section	.rodata.type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9,"aG",@progbits,type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9,comdat
	.weak	type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9
	.p2align	4
type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9:
	.quad	8
	.quad	8
	.long	1845083128
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C197
	.quad	0
	.quad	0
	.byte	1
	.zero	7
	.quad	go..C199
	.quad	1
	.quad	1
	.quad	go..C200
	.quad	1
	.quad	1
	.size	type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9, 128

	.type	.Lconst.106,@object
	.section	.rodata..Lconst.106,"a",@progbits
.Lconst.106:
	.asciz	"func(...\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node) \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node"
	.size	.Lconst.106, 109

	.type	go..C197,@object
	.section	.rodata.go..C197,"a",@progbits
	.p2align	3
go..C197:
	.quad	.Lconst.106
	.quad	108
	.size	go..C197, 16

	.type	type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node,@object
	.section	.rodata.type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node,"aG",@progbits,type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node,comdat
	.weak	type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node
	.p2align	4
type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node:
	.quad	24
	.quad	8
	.long	2032485545
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C198
	.quad	0
	.quad	0
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.size	type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, 80

	.type	.Lconst.107,@object
	.section	.rodata..Lconst.107,"a",@progbits
.Lconst.107:
	.asciz	"[]\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node"
	.size	.Lconst.107, 52

	.type	go..C198,@object
	.section	.rodata.go..C198,"a",@progbits
	.p2align	3
go..C198:
	.quad	.Lconst.107
	.quad	51
	.size	go..C198, 16

	.type	go..C199,@object
	.section	.data.go..C199,"aw",@progbits
	.p2align	3
go..C199:
	.quad	type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node
	.size	go..C199, 8

	.type	go..C200,@object
	.section	.data.go..C200,"aw",@progbits
	.p2align	3
go..C200:
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.size	go..C200, 8

	.type	.Lconst.108,@object
	.section	.rodata..Lconst.108,"a",@progbits
.Lconst.108:
	.asciz	"Path"
	.size	.Lconst.108, 5

	.type	go..C201,@object
	.section	.rodata.go..C201,"a",@progbits
	.p2align	3
go..C201:
	.quad	.Lconst.108
	.quad	4
	.size	go..C201, 16

	.type	type..func.8.3.3.3.6.7string.9.8string.9,@object
	.section	.rodata.type..func.8.3.3.3.6.7string.9.8string.9,"aG",@progbits,type..func.8.3.3.3.6.7string.9.8string.9,comdat
	.weak	type..func.8.3.3.3.6.7string.9.8string.9
	.p2align	4
type..func.8.3.3.3.6.7string.9.8string.9:
	.quad	8
	.quad	8
	.long	1374059416
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C202
	.quad	0
	.quad	0
	.byte	1
	.zero	7
	.quad	go..C203
	.quad	1
	.quad	1
	.quad	go..C204
	.quad	1
	.quad	1
	.size	type..func.8.3.3.3.6.7string.9.8string.9, 128

	.type	.Lconst.109,@object
	.section	.rodata..Lconst.109,"a",@progbits
.Lconst.109:
	.asciz	"func(...string) string"
	.size	.Lconst.109, 23

	.type	go..C202,@object
	.section	.rodata.go..C202,"a",@progbits
	.p2align	3
go..C202:
	.quad	.Lconst.109
	.quad	22
	.size	go..C202, 16

	.type	go..C203,@object
	.section	.data.go..C203,"aw",@progbits
	.p2align	3
go..C203:
	.quad	type...6.7string
	.size	go..C203, 8

	.type	go..C204,@object
	.section	.data.go..C204,"aw",@progbits
	.p2align	3
go..C204:
	.quad	string..d
	.size	go..C204, 8

	.type	go..C205,@object
	.section	.data.go..C205,"aw",@progbits
	.p2align	4
go..C205:
	.quad	go..C158
	.quad	0
	.quad	type..func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9
	.quad	go..C169
	.quad	0
	.quad	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9
	.quad	go..C173
	.quad	0
	.quad	type..func.8.9.8.6.7uint8.9
	.quad	go..C177
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	go..C181
	.quad	0
	.quad	type..func.8.9.8bazil_org_fuse.Dirent.9
	.quad	go..C185
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	go..C186
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	go..C187
	.quad	0
	.quad	type..func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9
	.quad	go..C191
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	go..C192
	.quad	0
	.quad	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9
	.quad	go..C196
	.quad	0
	.quad	type..func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9
	.quad	go..C201
	.quad	0
	.quad	type..func.8.3.3.3.6.7string.9.8string.9
	.size	go..C205, 288

	.type	command_line_arguments.defaultAttrs,@object
	.section	.bss.command_line_arguments.defaultAttrs,"aw",@nobits
	.p2align	3
command_line_arguments.defaultAttrs:
	.quad	0
	.size	command_line_arguments.defaultAttrs, 8

	.type	.Lconst.110,@object
	.section	.rodata..Lconst.110,"a",@progbits
.Lconst.110:
	.asciz	"hidden"
	.size	.Lconst.110, 7

	.type	.Lconst.111,@object
	.section	.rodata..Lconst.111,"a",@progbits
.Lconst.111:
	.asciz	"permitted"
	.size	.Lconst.111, 10

	.type	.Lconst.112,@object
	.section	.rodata..Lconst.112,"a",@progbits
	.p2align	3
.Lconst.112:
	.quad	.Lconst.110
	.quad	6
	.size	.Lconst.112, 16

	.type	.Lconst.113,@object
	.section	.rodata..Lconst.113,"a",@progbits
	.p2align	3
.Lconst.113:
	.quad	.Lconst.111
	.quad	9
	.size	.Lconst.113, 16

	.type	command_line_arguments.Resources..d,@object
	.section	.rodata.command_line_arguments.Resources..d,"a",@progbits
	.globl	command_line_arguments.Resources..d
	.p2align	4
command_line_arguments.Resources..d:
	.quad	24
	.quad	24
	.long	1384816727
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ha
	.quad	go..C206
	.quad	go..C268
	.quad	type...1command_line_arguments.Resources
	.quad	go..C393
	.quad	3
	.quad	3
	.size	command_line_arguments.Resources..d, 96

	.type	gcbits..ha,@object
	.section	.rodata.gcbits..ha,"aG",@progbits,gcbits..ha,comdat
	.weak	gcbits..ha
gcbits..ha:
	.byte	7
	.size	gcbits..ha, 1

	.type	.Lconst.114,@object
	.section	.rodata..Lconst.114,"a",@progbits
.Lconst.114:
	.asciz	"\tcommand_line_arguments\tassets.Resources"
	.size	.Lconst.114, 41

	.type	go..C206,@object
	.section	.rodata.go..C206,"a",@progbits
	.p2align	3
go..C206:
	.quad	.Lconst.114
	.quad	40
	.size	go..C206, 16

	.type	.Lconst.115,@object
	.section	.rodata..Lconst.115,"a",@progbits
.Lconst.115:
	.asciz	"Resources"
	.size	.Lconst.115, 10

	.type	go..C207,@object
	.section	.rodata.go..C207,"a",@progbits
	.p2align	3
go..C207:
	.quad	.Lconst.115
	.quad	9
	.size	go..C207, 16

	.type	go..C208,@object
	.section	.rodata.go..C208,"a",@progbits
	.p2align	3
go..C208:
	.quad	.Lconst.2
	.quad	22
	.size	go..C208, 16

	.type	.Lconst.116,@object
	.section	.rodata..Lconst.116,"a",@progbits
.Lconst.116:
	.asciz	"AddProperty"
	.size	.Lconst.116, 12

	.type	go..C209,@object
	.section	.rodata.go..C209,"a",@progbits
	.p2align	3
go..C209:
	.quad	.Lconst.116
	.quad	11
	.size	go..C209, 16

	.type	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,@object
	.section	.rodata.type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,"aG",@progbits,type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,comdat
	.weak	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.p2align	4
type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9:
	.quad	8
	.quad	8
	.long	2719807400
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C210
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C211
	.quad	3
	.quad	3
	.quad	go..C212
	.quad	1
	.quad	1
	.size	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, 128

	.type	.Lconst.117,@object
	.section	.rodata..Lconst.117,"a",@progbits
.Lconst.117:
	.asciz	"func(\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node, string, interface {}) error"
	.size	.Lconst.117, 84

	.type	go..C210,@object
	.section	.rodata.go..C210,"a",@progbits
	.p2align	3
go..C210:
	.quad	.Lconst.117
	.quad	83
	.size	go..C210, 16

	.type	go..C211,@object
	.section	.data.go..C211,"aw",@progbits
	.p2align	4
go..C211:
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.quad	string..d
	.quad	type..interface.4.5
	.size	go..C211, 24

	.type	go..C212,@object
	.section	.data.go..C212,"aw",@progbits
	.p2align	3
go..C212:
	.quad	error..d
	.size	go..C212, 8

	.type	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,@object
	.section	.rodata.type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,"aG",@progbits,type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,comdat
	.weak	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.p2align	4
type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9:
	.quad	8
	.quad	8
	.long	1320371304
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C213
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C214
	.quad	4
	.quad	4
	.quad	go..C215
	.quad	1
	.quad	1
	.size	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, 128

	.type	.Lconst.118,@object
	.section	.rodata..Lconst.118,"a",@progbits
.Lconst.118:
	.asciz	"func(\tcommand_line_arguments\tassets.Resources, \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node, string, interface {}) error"
	.size	.Lconst.118, 126

	.type	go..C213,@object
	.section	.rodata.go..C213,"a",@progbits
	.p2align	3
go..C213:
	.quad	.Lconst.118
	.quad	125
	.size	go..C213, 16

	.type	go..C214,@object
	.section	.data.go..C214,"aw",@progbits
	.p2align	4
go..C214:
	.quad	command_line_arguments.Resources..d
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.quad	string..d
	.quad	type..interface.4.5
	.size	go..C214, 32

	.type	go..C215,@object
	.section	.data.go..C215,"aw",@progbits
	.p2align	3
go..C215:
	.quad	error..d
	.size	go..C215, 8

	.type	.Lconst.119,@object
	.section	.rodata..Lconst.119,"a",@progbits
.Lconst.119:
	.asciz	"GetProperties"
	.size	.Lconst.119, 14

	.type	go..C216,@object
	.section	.rodata.go..C216,"a",@progbits
	.p2align	3
go..C216:
	.quad	.Lconst.119
	.quad	13
	.size	go..C216, 16

	.type	type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,@object
	.section	.rodata.type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,"aG",@progbits,type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,comdat
	.weak	type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.p2align	4
type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9:
	.quad	8
	.quad	8
	.long	2407606664
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C217
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C218
	.quad	1
	.quad	1
	.quad	go..C248
	.quad	2
	.quad	2
	.size	type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, 128

	.type	.Lconst.120,@object
	.section	.rodata..Lconst.120,"a",@progbits
.Lconst.120:
	.asciz	"func(string) (map[string]\tcommand_line_arguments\tassets.PropertyFunc, bool)"
	.size	.Lconst.120, 76

	.type	go..C217,@object
	.section	.rodata.go..C217,"a",@progbits
	.p2align	3
go..C217:
	.quad	.Lconst.120
	.quad	75
	.size	go..C217, 16

	.type	go..C218,@object
	.section	.data.go..C218,"aw",@progbits
	.p2align	3
go..C218:
	.quad	string..d
	.size	go..C218, 8

	.type	type..map.6string.7command_line_arguments.PropertyFunc,@object
	.section	.rodata.type..map.6string.7command_line_arguments.PropertyFunc,"aG",@progbits,type..map.6string.7command_line_arguments.PropertyFunc,comdat
	.weak	type..map.6string.7command_line_arguments.PropertyFunc
	.p2align	4
type..map.6string.7command_line_arguments.PropertyFunc:
	.quad	8
	.quad	8
	.long	914185783
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C219
	.quad	0
	.quad	0
	.quad	string..d
	.quad	command_line_arguments.PropertyFunc..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7command_line_arguments.PropertyFunc, 112

	.type	.Lconst.121,@object
	.section	.rodata..Lconst.121,"a",@progbits
.Lconst.121:
	.asciz	"map[string]\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.121, 55

	.type	go..C219,@object
	.section	.rodata.go..C219,"a",@progbits
	.p2align	3
go..C219:
	.quad	.Lconst.121
	.quad	54
	.size	go..C219, 16

	.type	command_line_arguments.PropertyFunc..d,@object
	.section	.rodata.command_line_arguments.PropertyFunc..d,"a",@progbits
	.globl	command_line_arguments.PropertyFunc..d
	.p2align	4
command_line_arguments.PropertyFunc..d:
	.quad	8
	.quad	8
	.long	2913138573
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C220
	.quad	go..C224
	.quad	type...1command_line_arguments.PropertyFunc
	.byte	0
	.zero	7
	.quad	go..C226
	.quad	0
	.quad	0
	.quad	go..C227
	.quad	2
	.quad	2
	.size	command_line_arguments.PropertyFunc..d, 128

	.type	.Lconst.122,@object
	.section	.rodata..Lconst.122,"a",@progbits
.Lconst.122:
	.asciz	"\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.122, 44

	.type	go..C220,@object
	.section	.rodata.go..C220,"a",@progbits
	.p2align	3
go..C220:
	.quad	.Lconst.122
	.quad	43
	.size	go..C220, 16

	.type	.Lconst.123,@object
	.section	.rodata..Lconst.123,"a",@progbits
.Lconst.123:
	.asciz	"PropertyFunc"
	.size	.Lconst.123, 13

	.type	go..C221,@object
	.section	.rodata.go..C221,"a",@progbits
	.p2align	3
go..C221:
	.quad	.Lconst.123
	.quad	12
	.size	go..C221, 16

	.type	go..C222,@object
	.section	.rodata.go..C222,"a",@progbits
	.p2align	3
go..C222:
	.quad	.Lconst.2
	.quad	22
	.size	go..C222, 16

	.type	go..C223,@object
	.section	.bss.go..C223,"aw",@nobits
	.p2align	4
go..C223:
	.zero	40
	.size	go..C223, 40

	.type	go..C224,@object
	.section	.rodata.go..C224,"a",@progbits
	.p2align	4
go..C224:
	.quad	go..C221
	.quad	go..C222
	.quad	go..C223
	.quad	0
	.quad	0
	.size	go..C224, 40

	.type	type...1command_line_arguments.PropertyFunc,@object
	.section	.rodata.type...1command_line_arguments.PropertyFunc,"aG",@progbits,type...1command_line_arguments.PropertyFunc,comdat
	.weak	type...1command_line_arguments.PropertyFunc
	.p2align	4
type...1command_line_arguments.PropertyFunc:
	.quad	8
	.quad	8
	.long	3660544217
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C225
	.quad	0
	.quad	0
	.quad	command_line_arguments.PropertyFunc..d
	.size	type...1command_line_arguments.PropertyFunc, 80

	.type	.Lconst.124,@object
	.section	.rodata..Lconst.124,"a",@progbits
.Lconst.124:
	.asciz	"*\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.124, 45

	.type	go..C225,@object
	.section	.rodata.go..C225,"a",@progbits
	.p2align	3
go..C225:
	.quad	.Lconst.124
	.quad	44
	.size	go..C225, 16

	.type	go..C226,@object
	.section	.bss.go..C226,"aw",@nobits
	.p2align	3
go..C226:
	.zero	8
	.size	go..C226, 8

	.type	go..C227,@object
	.section	.data.go..C227,"aw",@progbits
	.p2align	3
go..C227:
	.quad	type...1reflect.Value
	.quad	error..d
	.size	go..C227, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	3455331332
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C228
	.quad	0
	.quad	0
	.quad	go..C235
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, 96

	.type	.Lconst.125,@object
	.section	.rodata..Lconst.125,"a",@progbits
.Lconst.125:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }"
	.size	.Lconst.125, 111

	.type	go..C228,@object
	.section	.rodata.go..C228,"a",@progbits
	.p2align	3
go..C228:
	.quad	.Lconst.125
	.quad	110
	.size	go..C228, 16

	.type	go..C229,@object
	.section	.rodata.go..C229,"a",@progbits
	.p2align	3
go..C229:
	.quad	.Lconst.27
	.quad	7
	.size	go..C229, 16

	.type	go..C230,@object
	.section	.rodata.go..C230,"a",@progbits
	.p2align	3
go..C230:
	.quad	.Lconst.32
	.quad	4
	.size	go..C230, 16

	.type	go..C231,@object
	.section	.rodata.go..C231,"a",@progbits
	.p2align	3
go..C231:
	.quad	.Lconst.35
	.quad	6
	.size	go..C231, 16

	.type	type...68x.7command_line_arguments.PropertyFunc,@object
	.section	.rodata.type...68x.7command_line_arguments.PropertyFunc,"aG",@progbits,type...68x.7command_line_arguments.PropertyFunc,comdat
	.weak	type...68x.7command_line_arguments.PropertyFunc
	.p2align	4
type...68x.7command_line_arguments.PropertyFunc:
	.quad	64
	.quad	64
	.long	1531309865
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C232
	.quad	0
	.quad	0
	.quad	command_line_arguments.PropertyFunc..d
	.quad	type...6.7command_line_arguments.PropertyFunc
	.quad	8
	.size	type...68x.7command_line_arguments.PropertyFunc, 96

	.type	.Lconst.126,@object
	.section	.rodata..Lconst.126,"a",@progbits
.Lconst.126:
	.asciz	"[8]\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.126, 47

	.type	go..C232,@object
	.section	.rodata.go..C232,"a",@progbits
	.p2align	3
go..C232:
	.quad	.Lconst.126
	.quad	46
	.size	go..C232, 16

	.type	type...6.7command_line_arguments.PropertyFunc,@object
	.section	.rodata.type...6.7command_line_arguments.PropertyFunc,"aG",@progbits,type...6.7command_line_arguments.PropertyFunc,comdat
	.weak	type...6.7command_line_arguments.PropertyFunc
	.p2align	4
type...6.7command_line_arguments.PropertyFunc:
	.quad	24
	.quad	8
	.long	2913138587
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C233
	.quad	0
	.quad	0
	.quad	command_line_arguments.PropertyFunc..d
	.size	type...6.7command_line_arguments.PropertyFunc, 80

	.type	.Lconst.127,@object
	.section	.rodata..Lconst.127,"a",@progbits
.Lconst.127:
	.asciz	"[]\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.127, 46

	.type	go..C233,@object
	.section	.rodata.go..C233,"a",@progbits
	.p2align	3
go..C233:
	.quad	.Lconst.127
	.quad	45
	.size	go..C233, 16

	.type	go..C234,@object
	.section	.rodata.go..C234,"a",@progbits
	.p2align	3
go..C234:
	.quad	.Lconst.38
	.quad	8
	.size	go..C234, 16

	.type	go..C235,@object
	.section	.data.go..C235,"aw",@progbits
	.p2align	4
go..C235:
	.quad	go..C229
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C230
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C231
	.quad	0
	.quad	type...68x.7command_line_arguments.PropertyFunc
	.quad	0
	.quad	272
	.quad	go..C234
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C235, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	3148257764
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C236
	.quad	0
	.quad	0
	.quad	go..C247
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.128,@object
	.section	.rodata..Lconst.128,"a",@progbits
.Lconst.128:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.128, 348

	.type	go..C236,@object
	.section	.rodata.go..C236,"a",@progbits
	.p2align	3
go..C236:
	.quad	.Lconst.128
	.quad	347
	.size	go..C236, 16

	.type	go..C237,@object
	.section	.rodata.go..C237,"a",@progbits
	.p2align	3
go..C237:
	.quad	.Lconst.40
	.quad	5
	.size	go..C237, 16

	.type	go..C238,@object
	.section	.rodata.go..C238,"a",@progbits
	.p2align	3
go..C238:
	.quad	.Lconst.43
	.quad	5
	.size	go..C238, 16

	.type	go..C239,@object
	.section	.rodata.go..C239,"a",@progbits
	.p2align	3
go..C239:
	.quad	.Lconst.44
	.quad	1
	.size	go..C239, 16

	.type	go..C240,@object
	.section	.rodata.go..C240,"a",@progbits
	.p2align	3
go..C240:
	.quad	.Lconst.45
	.quad	9
	.size	go..C240, 16

	.type	go..C241,@object
	.section	.rodata.go..C241,"a",@progbits
	.p2align	3
go..C241:
	.quad	.Lconst.48
	.quad	5
	.size	go..C241, 16

	.type	go..C242,@object
	.section	.rodata.go..C242,"a",@progbits
	.p2align	3
go..C242:
	.quad	.Lconst.51
	.quad	7
	.size	go..C242, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	3745693769
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C243
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.129,@object
	.section	.rodata..Lconst.129,"a",@progbits
.Lconst.129:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }"
	.size	.Lconst.129, 112

	.type	go..C243,@object
	.section	.rodata.go..C243,"a",@progbits
	.p2align	3
go..C243:
	.quad	.Lconst.129
	.quad	111
	.size	go..C243, 16

	.type	go..C244,@object
	.section	.rodata.go..C244,"a",@progbits
	.p2align	3
go..C244:
	.quad	.Lconst.53
	.quad	10
	.size	go..C244, 16

	.type	go..C245,@object
	.section	.rodata.go..C245,"a",@progbits
	.p2align	3
go..C245:
	.quad	.Lconst.54
	.quad	9
	.size	go..C245, 16

	.type	go..C246,@object
	.section	.rodata.go..C246,"a",@progbits
	.p2align	3
go..C246:
	.quad	.Lconst.57
	.quad	5
	.size	go..C246, 16

	.type	go..C247,@object
	.section	.data.go..C247,"aw",@progbits
	.p2align	4
go..C247:
	.quad	go..C237
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C238
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C239
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C240
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C241
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C242
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C244
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C245
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C246
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C247, 360

	.type	go..C248,@object
	.section	.data.go..C248,"aw",@progbits
	.p2align	3
go..C248:
	.quad	type..map.6string.7command_line_arguments.PropertyFunc
	.quad	bool..d
	.size	go..C248, 16

	.type	type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,@object
	.section	.rodata.type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,"aG",@progbits,type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,comdat
	.weak	type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.p2align	4
type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9:
	.quad	8
	.quad	8
	.long	4230088616
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C249
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C250
	.quad	2
	.quad	2
	.quad	go..C251
	.quad	2
	.quad	2
	.size	type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, 128

	.type	.Lconst.130,@object
	.section	.rodata..Lconst.130,"a",@progbits
.Lconst.130:
	.asciz	"func(\tcommand_line_arguments\tassets.Resources, string) (map[string]\tcommand_line_arguments\tassets.PropertyFunc, bool)"
	.size	.Lconst.130, 118

	.type	go..C249,@object
	.section	.rodata.go..C249,"a",@progbits
	.p2align	3
go..C249:
	.quad	.Lconst.130
	.quad	117
	.size	go..C249, 16

	.type	go..C250,@object
	.section	.data.go..C250,"aw",@progbits
	.p2align	3
go..C250:
	.quad	command_line_arguments.Resources..d
	.quad	string..d
	.size	go..C250, 16

	.type	go..C251,@object
	.section	.data.go..C251,"aw",@progbits
	.p2align	3
go..C251:
	.quad	type..map.6string.7command_line_arguments.PropertyFunc
	.quad	bool..d
	.size	go..C251, 16

	.type	.Lconst.131,@object
	.section	.rodata..Lconst.131,"a",@progbits
.Lconst.131:
	.asciz	"Root"
	.size	.Lconst.131, 5

	.type	go..C252,@object
	.section	.rodata.go..C252,"a",@progbits
	.p2align	3
go..C252:
	.quad	.Lconst.131
	.quad	4
	.size	go..C252, 16

	.type	type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,@object
	.section	.rodata.type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,"aG",@progbits,type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,comdat
	.weak	type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.p2align	4
type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9:
	.quad	8
	.quad	8
	.long	4105087560
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C253
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C254
	.quad	0
	.quad	0
	.quad	go..C255
	.quad	1
	.quad	1
	.size	type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, 128

	.type	.Lconst.132,@object
	.section	.rodata..Lconst.132,"a",@progbits
.Lconst.132:
	.asciz	"func() *\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs_core\tcore.Directory"
	.size	.Lconst.132, 70

	.type	go..C253,@object
	.section	.rodata.go..C253,"a",@progbits
	.p2align	3
go..C253:
	.quad	.Lconst.132
	.quad	69
	.size	go..C253, 16

	.type	go..C254,@object
	.section	.bss.go..C254,"aw",@nobits
	.p2align	3
go..C254:
	.zero	8
	.size	go..C254, 8

	.type	go..C255,@object
	.section	.data.go..C255,"aw",@progbits
	.p2align	3
go..C255:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.size	go..C255, 8

	.type	type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,@object
	.section	.rodata.type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,"aG",@progbits,type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,comdat
	.weak	type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.p2align	4
type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9:
	.quad	8
	.quad	8
	.long	1174582568
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C256
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C257
	.quad	1
	.quad	1
	.quad	go..C258
	.quad	1
	.quad	1
	.size	type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, 128

	.type	.Lconst.133,@object
	.section	.rodata..Lconst.133,"a",@progbits
.Lconst.133:
	.asciz	"func(\tcommand_line_arguments\tassets.Resources) *\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs_core\tcore.Directory"
	.size	.Lconst.133, 110

	.type	go..C256,@object
	.section	.rodata.go..C256,"a",@progbits
	.p2align	3
go..C256:
	.quad	.Lconst.133
	.quad	109
	.size	go..C256, 16

	.type	go..C257,@object
	.section	.data.go..C257,"aw",@progbits
	.p2align	3
go..C257:
	.quad	command_line_arguments.Resources..d
	.size	go..C257, 8

	.type	go..C258,@object
	.section	.data.go..C258,"aw",@progbits
	.p2align	3
go..C258:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.size	go..C258, 8

	.type	.Lconst.134,@object
	.section	.rodata..Lconst.134,"a",@progbits
.Lconst.134:
	.asciz	"visit"
	.size	.Lconst.134, 6

	.type	go..C259,@object
	.section	.rodata.go..C259,"a",@progbits
	.p2align	3
go..C259:
	.quad	.Lconst.134
	.quad	5
	.size	go..C259, 16

	.type	go..C260,@object
	.section	.rodata.go..C260,"a",@progbits
	.p2align	3
go..C260:
	.quad	.Lconst.2
	.quad	22
	.size	go..C260, 16

	.type	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,@object
	.section	.rodata.type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,"aG",@progbits,type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,comdat
	.weak	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.p2align	4
type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9:
	.quad	8
	.quad	8
	.long	615027560
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C261
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C262
	.quad	1
	.quad	1
	.quad	go..C263
	.quad	0
	.quad	0
	.size	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, 128

	.type	.Lconst.135,@object
	.section	.rodata..Lconst.135,"a",@progbits
.Lconst.135:
	.asciz	"func(\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node)"
	.size	.Lconst.135, 56

	.type	go..C261,@object
	.section	.rodata.go..C261,"a",@progbits
	.p2align	3
go..C261:
	.quad	.Lconst.135
	.quad	55
	.size	go..C261, 16

	.type	go..C262,@object
	.section	.data.go..C262,"aw",@progbits
	.p2align	3
go..C262:
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.size	go..C262, 8

	.type	go..C263,@object
	.section	.bss.go..C263,"aw",@nobits
	.p2align	3
go..C263:
	.zero	8
	.size	go..C263, 8

	.type	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,@object
	.section	.rodata.type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,"aG",@progbits,type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,comdat
	.weak	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.p2align	4
type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9:
	.quad	8
	.quad	8
	.long	2594517416
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C264
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C265
	.quad	2
	.quad	2
	.quad	go..C266
	.quad	0
	.quad	0
	.size	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, 128

	.type	.Lconst.136,@object
	.section	.rodata..Lconst.136,"a",@progbits
.Lconst.136:
	.asciz	"func(\tcommand_line_arguments\tassets.Resources, \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node)"
	.size	.Lconst.136, 98

	.type	go..C264,@object
	.section	.rodata.go..C264,"a",@progbits
	.p2align	3
go..C264:
	.quad	.Lconst.136
	.quad	97
	.size	go..C264, 16

	.type	go..C265,@object
	.section	.data.go..C265,"aw",@progbits
	.p2align	3
go..C265:
	.quad	command_line_arguments.Resources..d
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.size	go..C265, 16

	.type	go..C266,@object
	.section	.bss.go..C266,"aw",@nobits
	.p2align	3
go..C266:
	.zero	8
	.size	go..C266, 8

	.type	go..C267,@object
	.section	.data.go..C267,"aw",@progbits
	.p2align	4
go..C267:
	.quad	go..C209
	.quad	0
	.quad	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.quad	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.quad	command_line_arguments.Resources.AddProperty..stub
	.quad	go..C216
	.quad	0
	.quad	type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.quad	type..func.8command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.quad	command_line_arguments.Resources.GetProperties..stub
	.quad	go..C252
	.quad	0
	.quad	type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.quad	type..func.8command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.quad	command_line_arguments.Resources.Root..stub
	.quad	go..C259
	.quad	go..C260
	.quad	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.quad	type..func.8command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.quad	command_line_arguments.Resources.visit..stub
	.size	go..C267, 160

	.type	go..C268,@object
	.section	.rodata.go..C268,"a",@progbits
	.p2align	4
go..C268:
	.quad	go..C207
	.quad	go..C208
	.quad	go..C267
	.quad	4
	.quad	4
	.size	go..C268, 40

	.type	type...1command_line_arguments.Resources,@object
	.section	.rodata.type...1command_line_arguments.Resources,"aG",@progbits,type...1command_line_arguments.Resources,comdat
	.weak	type...1command_line_arguments.Resources
	.p2align	4
type...1command_line_arguments.Resources:
	.quad	8
	.quad	8
	.long	682231161
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C269
	.quad	go..C309
	.quad	type...1.1command_line_arguments.Resources
	.quad	command_line_arguments.Resources..d
	.size	type...1command_line_arguments.Resources, 80

	.type	.Lconst.137,@object
	.section	.rodata..Lconst.137,"a",@progbits
.Lconst.137:
	.asciz	"*\tcommand_line_arguments\tassets.Resources"
	.size	.Lconst.137, 42

	.type	go..C269,@object
	.section	.rodata.go..C269,"a",@progbits
	.p2align	3
go..C269:
	.quad	.Lconst.137
	.quad	41
	.size	go..C269, 16

	.type	go..C270,@object
	.section	.rodata.go..C270,"a",@progbits
	.p2align	3
go..C270:
	.quad	.Lconst.116
	.quad	11
	.size	go..C270, 16

	.type	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9:
	.quad	8
	.quad	8
	.long	312469672
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C271
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C272
	.quad	4
	.quad	4
	.quad	go..C273
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, 128

	.type	.Lconst.138,@object
	.section	.rodata..Lconst.138,"a",@progbits
.Lconst.138:
	.asciz	"func(*\tcommand_line_arguments\tassets.Resources, \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node, string, interface {}) error"
	.size	.Lconst.138, 127

	.type	go..C271,@object
	.section	.rodata.go..C271,"a",@progbits
	.p2align	3
go..C271:
	.quad	.Lconst.138
	.quad	126
	.size	go..C271, 16

	.type	go..C272,@object
	.section	.data.go..C272,"aw",@progbits
	.p2align	4
go..C272:
	.quad	type...1command_line_arguments.Resources
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.quad	string..d
	.quad	type..interface.4.5
	.size	go..C272, 32

	.type	go..C273,@object
	.section	.data.go..C273,"aw",@progbits
	.p2align	3
go..C273:
	.quad	error..d
	.size	go..C273, 8

	.type	.Lconst.139,@object
	.section	.rodata..Lconst.139,"a",@progbits
.Lconst.139:
	.asciz	"GetObject"
	.size	.Lconst.139, 10

	.type	go..C274,@object
	.section	.rodata.go..C274,"a",@progbits
	.p2align	3
go..C274:
	.quad	.Lconst.139
	.quad	9
	.size	go..C274, 16

	.type	type..func.8string.9.8command_line_arguments.Entity.9,@object
	.section	.rodata.type..func.8string.9.8command_line_arguments.Entity.9,"aG",@progbits,type..func.8string.9.8command_line_arguments.Entity.9,comdat
	.weak	type..func.8string.9.8command_line_arguments.Entity.9
	.p2align	4
type..func.8string.9.8command_line_arguments.Entity.9:
	.quad	8
	.quad	8
	.long	3831661704
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C275
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C276
	.quad	1
	.quad	1
	.quad	go..C277
	.quad	1
	.quad	1
	.size	type..func.8string.9.8command_line_arguments.Entity.9, 128

	.type	.Lconst.140,@object
	.section	.rodata..Lconst.140,"a",@progbits
.Lconst.140:
	.asciz	"func(string) \tcommand_line_arguments\tassets.Entity"
	.size	.Lconst.140, 51

	.type	go..C275,@object
	.section	.rodata.go..C275,"a",@progbits
	.p2align	3
go..C275:
	.quad	.Lconst.140
	.quad	50
	.size	go..C275, 16

	.type	go..C276,@object
	.section	.data.go..C276,"aw",@progbits
	.p2align	3
go..C276:
	.quad	string..d
	.size	go..C276, 8

	.type	go..C277,@object
	.section	.data.go..C277,"aw",@progbits
	.p2align	3
go..C277:
	.quad	command_line_arguments.Entity..d
	.size	go..C277, 8

	.type	type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9,"aG",@progbits,type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9,comdat
	.weak	type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9
	.p2align	4
type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9:
	.quad	8
	.quad	8
	.long	351274728
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C278
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C279
	.quad	2
	.quad	2
	.quad	go..C280
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9, 128

	.type	.Lconst.141,@object
	.section	.rodata..Lconst.141,"a",@progbits
.Lconst.141:
	.asciz	"func(*\tcommand_line_arguments\tassets.Resources, string) \tcommand_line_arguments\tassets.Entity"
	.size	.Lconst.141, 94

	.type	go..C278,@object
	.section	.rodata.go..C278,"a",@progbits
	.p2align	3
go..C278:
	.quad	.Lconst.141
	.quad	93
	.size	go..C278, 16

	.type	go..C279,@object
	.section	.data.go..C279,"aw",@progbits
	.p2align	3
go..C279:
	.quad	type...1command_line_arguments.Resources
	.quad	string..d
	.size	go..C279, 16

	.type	go..C280,@object
	.section	.data.go..C280,"aw",@progbits
	.p2align	3
go..C280:
	.quad	command_line_arguments.Entity..d
	.size	go..C280, 8

	.type	go..C281,@object
	.section	.rodata.go..C281,"a",@progbits
	.p2align	3
go..C281:
	.quad	.Lconst.119
	.quad	13
	.size	go..C281, 16

	.type	type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,"aG",@progbits,type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,comdat
	.weak	type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.p2align	4
type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9:
	.quad	8
	.quad	8
	.long	3222186984
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C282
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C283
	.quad	2
	.quad	2
	.quad	go..C284
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, 128

	.type	.Lconst.142,@object
	.section	.rodata..Lconst.142,"a",@progbits
.Lconst.142:
	.asciz	"func(*\tcommand_line_arguments\tassets.Resources, string) (map[string]\tcommand_line_arguments\tassets.PropertyFunc, bool)"
	.size	.Lconst.142, 119

	.type	go..C282,@object
	.section	.rodata.go..C282,"a",@progbits
	.p2align	3
go..C282:
	.quad	.Lconst.142
	.quad	118
	.size	go..C282, 16

	.type	go..C283,@object
	.section	.data.go..C283,"aw",@progbits
	.p2align	3
go..C283:
	.quad	type...1command_line_arguments.Resources
	.quad	string..d
	.size	go..C283, 16

	.type	go..C284,@object
	.section	.data.go..C284,"aw",@progbits
	.p2align	3
go..C284:
	.quad	type..map.6string.7command_line_arguments.PropertyFunc
	.quad	bool..d
	.size	go..C284, 16

	.type	.Lconst.143,@object
	.section	.rodata..Lconst.143,"a",@progbits
.Lconst.143:
	.asciz	"LoadDir"
	.size	.Lconst.143, 8

	.type	go..C285,@object
	.section	.rodata.go..C285,"a",@progbits
	.p2align	3
go..C285:
	.quad	.Lconst.143
	.quad	7
	.size	go..C285, 16

	.type	type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9,@object
	.section	.rodata.type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9,"aG",@progbits,type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9,comdat
	.weak	type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9
	.p2align	4
type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9:
	.quad	8
	.quad	8
	.long	2645616904
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C286
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C287
	.quad	1
	.quad	1
	.quad	go..C288
	.quad	2
	.quad	2
	.size	type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9, 128

	.type	.Lconst.144,@object
	.section	.rodata..Lconst.144,"a",@progbits
.Lconst.144:
	.asciz	"func(string) (*\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs_core\tcore.Directory, error)"
	.size	.Lconst.144, 85

	.type	go..C286,@object
	.section	.rodata.go..C286,"a",@progbits
	.p2align	3
go..C286:
	.quad	.Lconst.144
	.quad	84
	.size	go..C286, 16

	.type	go..C287,@object
	.section	.data.go..C287,"aw",@progbits
	.p2align	3
go..C287:
	.quad	string..d
	.size	go..C287, 8

	.type	go..C288,@object
	.section	.data.go..C288,"aw",@progbits
	.p2align	3
go..C288:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.quad	error..d
	.size	go..C288, 16

	.type	type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9,"aG",@progbits,type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9,comdat
	.weak	type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9
	.p2align	4
type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9:
	.quad	8
	.quad	8
	.long	3460197224
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C289
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C290
	.quad	2
	.quad	2
	.quad	go..C291
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9, 128

	.type	.Lconst.145,@object
	.section	.rodata..Lconst.145,"a",@progbits
.Lconst.145:
	.asciz	"func(*\tcommand_line_arguments\tassets.Resources, string) (*\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs_core\tcore.Directory, error)"
	.size	.Lconst.145, 128

	.type	go..C289,@object
	.section	.rodata.go..C289,"a",@progbits
	.p2align	3
go..C289:
	.quad	.Lconst.145
	.quad	127
	.size	go..C289, 16

	.type	go..C290,@object
	.section	.data.go..C290,"aw",@progbits
	.p2align	3
go..C290:
	.quad	type...1command_line_arguments.Resources
	.quad	string..d
	.size	go..C290, 16

	.type	go..C291,@object
	.section	.data.go..C291,"aw",@progbits
	.p2align	3
go..C291:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.quad	error..d
	.size	go..C291, 16

	.type	.Lconst.146,@object
	.section	.rodata..Lconst.146,"a",@progbits
.Lconst.146:
	.asciz	"LoadFile"
	.size	.Lconst.146, 9

	.type	go..C292,@object
	.section	.rodata.go..C292,"a",@progbits
	.p2align	3
go..C292:
	.quad	.Lconst.146
	.quad	8
	.size	go..C292, 16

	.type	type..func.8string.9.8error.9,@object
	.section	.rodata.type..func.8string.9.8error.9,"aG",@progbits,type..func.8string.9.8error.9,comdat
	.weak	type..func.8string.9.8error.9
	.p2align	4
type..func.8string.9.8error.9:
	.quad	8
	.quad	8
	.long	1646758152
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C293
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C294
	.quad	1
	.quad	1
	.quad	go..C295
	.quad	1
	.quad	1
	.size	type..func.8string.9.8error.9, 128

	.type	.Lconst.147,@object
	.section	.rodata..Lconst.147,"a",@progbits
.Lconst.147:
	.asciz	"func(string) error"
	.size	.Lconst.147, 19

	.type	go..C293,@object
	.section	.rodata.go..C293,"a",@progbits
	.p2align	3
go..C293:
	.quad	.Lconst.147
	.quad	18
	.size	go..C293, 16

	.type	go..C294,@object
	.section	.data.go..C294,"aw",@progbits
	.p2align	3
go..C294:
	.quad	string..d
	.size	go..C294, 8

	.type	go..C295,@object
	.section	.data.go..C295,"aw",@progbits
	.p2align	3
go..C295:
	.quad	error..d
	.size	go..C295, 8

	.type	type..func.8.1command_line_arguments.Resources.3string.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Resources.3string.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Resources.3string.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Resources.3string.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Resources.3string.9.8error.9:
	.quad	8
	.quad	8
	.long	2461338472
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C296
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C297
	.quad	2
	.quad	2
	.quad	go..C298
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Resources.3string.9.8error.9, 128

	.type	.Lconst.148,@object
	.section	.rodata..Lconst.148,"a",@progbits
.Lconst.148:
	.asciz	"func(*\tcommand_line_arguments\tassets.Resources, string) error"
	.size	.Lconst.148, 62

	.type	go..C296,@object
	.section	.rodata.go..C296,"a",@progbits
	.p2align	3
go..C296:
	.quad	.Lconst.148
	.quad	61
	.size	go..C296, 16

	.type	go..C297,@object
	.section	.data.go..C297,"aw",@progbits
	.p2align	3
go..C297:
	.quad	type...1command_line_arguments.Resources
	.quad	string..d
	.size	go..C297, 16

	.type	go..C298,@object
	.section	.data.go..C298,"aw",@progbits
	.p2align	3
go..C298:
	.quad	error..d
	.size	go..C298, 8

	.type	go..C299,@object
	.section	.rodata.go..C299,"a",@progbits
	.p2align	3
go..C299:
	.quad	.Lconst.131
	.quad	4
	.size	go..C299, 16

	.type	type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,"aG",@progbits,type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,comdat
	.weak	type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.p2align	4
type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9:
	.quad	8
	.quad	8
	.long	166680936
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C300
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C301
	.quad	1
	.quad	1
	.quad	go..C302
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, 128

	.type	.Lconst.149,@object
	.section	.rodata..Lconst.149,"a",@progbits
.Lconst.149:
	.asciz	"func(*\tcommand_line_arguments\tassets.Resources) *\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs_core\tcore.Directory"
	.size	.Lconst.149, 111

	.type	go..C300,@object
	.section	.rodata.go..C300,"a",@progbits
	.p2align	3
go..C300:
	.quad	.Lconst.149
	.quad	110
	.size	go..C300, 16

	.type	go..C301,@object
	.section	.data.go..C301,"aw",@progbits
	.p2align	3
go..C301:
	.quad	type...1command_line_arguments.Resources
	.size	go..C301, 8

	.type	go..C302,@object
	.section	.data.go..C302,"aw",@progbits
	.p2align	3
go..C302:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.size	go..C302, 8

	.type	go..C303,@object
	.section	.rodata.go..C303,"a",@progbits
	.p2align	3
go..C303:
	.quad	.Lconst.134
	.quad	5
	.size	go..C303, 16

	.type	go..C304,@object
	.section	.rodata.go..C304,"a",@progbits
	.p2align	3
go..C304:
	.quad	.Lconst.2
	.quad	22
	.size	go..C304, 16

	.type	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9:
	.quad	8
	.quad	8
	.long	1586615784
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C305
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C306
	.quad	2
	.quad	2
	.quad	go..C307
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, 128

	.type	.Lconst.150,@object
	.section	.rodata..Lconst.150,"a",@progbits
.Lconst.150:
	.asciz	"func(*\tcommand_line_arguments\tassets.Resources, \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node)"
	.size	.Lconst.150, 99

	.type	go..C305,@object
	.section	.rodata.go..C305,"a",@progbits
	.p2align	3
go..C305:
	.quad	.Lconst.150
	.quad	98
	.size	go..C305, 16

	.type	go..C306,@object
	.section	.data.go..C306,"aw",@progbits
	.p2align	3
go..C306:
	.quad	type...1command_line_arguments.Resources
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.size	go..C306, 16

	.type	go..C307,@object
	.section	.bss.go..C307,"aw",@nobits
	.p2align	3
go..C307:
	.zero	8
	.size	go..C307, 8

	.type	go..C308,@object
	.section	.data.go..C308,"aw",@progbits
	.p2align	4
go..C308:
	.quad	go..C270
	.quad	0
	.quad	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.quad	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.quad	command_line_arguments.Resources.AddProperty..stub
	.quad	go..C274
	.quad	0
	.quad	type..func.8string.9.8command_line_arguments.Entity.9
	.quad	type..func.8.1command_line_arguments.Resources.3string.9.8command_line_arguments.Entity.9
	.quad	command_line_arguments.Resources.GetObject
	.quad	go..C281
	.quad	0
	.quad	type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.quad	type..func.8.1command_line_arguments.Resources.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.quad	command_line_arguments.Resources.GetProperties..stub
	.quad	go..C285
	.quad	0
	.quad	type..func.8string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9
	.quad	type..func.8.1command_line_arguments.Resources.3string.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.3error.9
	.quad	command_line_arguments.Resources.LoadDir
	.quad	go..C292
	.quad	0
	.quad	type..func.8string.9.8error.9
	.quad	type..func.8.1command_line_arguments.Resources.3string.9.8error.9
	.quad	command_line_arguments.Resources.LoadFile
	.quad	go..C299
	.quad	0
	.quad	type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.quad	type..func.8.1command_line_arguments.Resources.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.quad	command_line_arguments.Resources.Root..stub
	.quad	go..C303
	.quad	go..C304
	.quad	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.quad	type..func.8.1command_line_arguments.Resources.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.quad	command_line_arguments.Resources.visit..stub
	.size	go..C308, 280

	.type	go..C309,@object
	.section	.rodata.go..C309,"a",@progbits
	.p2align	4
go..C309:
	.quad	0
	.quad	0
	.quad	go..C308
	.quad	7
	.quad	7
	.size	go..C309, 40

	.type	type...1.1command_line_arguments.Resources,@object
	.section	.rodata.type...1.1command_line_arguments.Resources,"aG",@progbits,type...1.1command_line_arguments.Resources,comdat
	.weak	type...1.1command_line_arguments.Resources
	.p2align	4
type...1.1command_line_arguments.Resources:
	.quad	8
	.quad	8
	.long	2325763993
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C310
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Resources
	.size	type...1.1command_line_arguments.Resources, 80

	.type	.Lconst.151,@object
	.section	.rodata..Lconst.151,"a",@progbits
.Lconst.151:
	.asciz	"**\tcommand_line_arguments\tassets.Resources"
	.size	.Lconst.151, 43

	.type	go..C310,@object
	.section	.rodata.go..C310,"a",@progbits
	.p2align	3
go..C310:
	.quad	.Lconst.151
	.quad	42
	.size	go..C310, 16

	.type	.Lconst.152,@object
	.section	.rodata..Lconst.152,"a",@progbits
.Lconst.152:
	.asciz	"components"
	.size	.Lconst.152, 11

	.type	go..C311,@object
	.section	.rodata.go..C311,"a",@progbits
	.p2align	3
go..C311:
	.quad	.Lconst.152
	.quad	10
	.size	go..C311, 16

	.type	go..C312,@object
	.section	.rodata.go..C312,"a",@progbits
	.p2align	3
go..C312:
	.quad	.Lconst.2
	.quad	22
	.size	go..C312, 16

	.type	.Lconst.153,@object
	.section	.rodata..Lconst.153,"a",@progbits
.Lconst.153:
	.asciz	"entities"
	.size	.Lconst.153, 9

	.type	go..C313,@object
	.section	.rodata.go..C313,"a",@progbits
	.p2align	3
go..C313:
	.quad	.Lconst.153
	.quad	8
	.size	go..C313, 16

	.type	go..C314,@object
	.section	.rodata.go..C314,"a",@progbits
	.p2align	3
go..C314:
	.quad	.Lconst.2
	.quad	22
	.size	go..C314, 16

	.type	type..map.6string.7command_line_arguments.Entity,@object
	.section	.rodata.type..map.6string.7command_line_arguments.Entity,"aG",@progbits,type..map.6string.7command_line_arguments.Entity,comdat
	.weak	type..map.6string.7command_line_arguments.Entity
	.p2align	4
type..map.6string.7command_line_arguments.Entity:
	.quad	8
	.quad	8
	.long	4294884719
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C315
	.quad	0
	.quad	0
	.quad	string..d
	.quad	command_line_arguments.Entity..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	16
	.byte	0
	.short	272
	.byte	1
	.byte	1
	.size	type..map.6string.7command_line_arguments.Entity, 112

	.type	.Lconst.154,@object
	.section	.rodata..Lconst.154,"a",@progbits
.Lconst.154:
	.asciz	"map[string]\tcommand_line_arguments\tassets.Entity"
	.size	.Lconst.154, 49

	.type	go..C315,@object
	.section	.rodata.go..C315,"a",@progbits
	.p2align	3
go..C315:
	.quad	.Lconst.154
	.quad	48
	.size	go..C315, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5:
	.quad	272
	.quad	272
	.long	4263514884
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGGpa
	.quad	go..C316
	.quad	0
	.quad	0
	.quad	go..C323
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5, 96

	.type	.Lconst.155,@object
	.section	.rodata..Lconst.155,"a",@progbits
.Lconst.155:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.Entity; overflow * }"
	.size	.Lconst.155, 105

	.type	go..C316,@object
	.section	.rodata.go..C316,"a",@progbits
	.p2align	3
go..C316:
	.quad	.Lconst.155
	.quad	104
	.size	go..C316, 16

	.type	go..C317,@object
	.section	.rodata.go..C317,"a",@progbits
	.p2align	3
go..C317:
	.quad	.Lconst.27
	.quad	7
	.size	go..C317, 16

	.type	go..C318,@object
	.section	.rodata.go..C318,"a",@progbits
	.p2align	3
go..C318:
	.quad	.Lconst.32
	.quad	4
	.size	go..C318, 16

	.type	go..C319,@object
	.section	.rodata.go..C319,"a",@progbits
	.p2align	3
go..C319:
	.quad	.Lconst.35
	.quad	6
	.size	go..C319, 16

	.type	type...68x.7command_line_arguments.Entity,@object
	.section	.rodata.type...68x.7command_line_arguments.Entity,"aG",@progbits,type...68x.7command_line_arguments.Entity,comdat
	.weak	type...68x.7command_line_arguments.Entity
	.p2align	4
type...68x.7command_line_arguments.Entity:
	.quad	128
	.quad	128
	.long	3997740441
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..GGGb
	.quad	go..C320
	.quad	0
	.quad	0
	.quad	command_line_arguments.Entity..d
	.quad	type...6.7command_line_arguments.Entity
	.quad	8
	.size	type...68x.7command_line_arguments.Entity, 96

	.type	.Lconst.156,@object
	.section	.rodata..Lconst.156,"a",@progbits
.Lconst.156:
	.asciz	"[8]\tcommand_line_arguments\tassets.Entity"
	.size	.Lconst.156, 41

	.type	go..C320,@object
	.section	.rodata.go..C320,"a",@progbits
	.p2align	3
go..C320:
	.quad	.Lconst.156
	.quad	40
	.size	go..C320, 16

	.type	type...6.7command_line_arguments.Entity,@object
	.section	.rodata.type...6.7command_line_arguments.Entity,"aG",@progbits,type...6.7command_line_arguments.Entity,comdat
	.weak	type...6.7command_line_arguments.Entity
	.p2align	4
type...6.7command_line_arguments.Entity:
	.quad	24
	.quad	8
	.long	1998870227
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C321
	.quad	0
	.quad	0
	.quad	command_line_arguments.Entity..d
	.size	type...6.7command_line_arguments.Entity, 80

	.type	.Lconst.157,@object
	.section	.rodata..Lconst.157,"a",@progbits
.Lconst.157:
	.asciz	"[]\tcommand_line_arguments\tassets.Entity"
	.size	.Lconst.157, 40

	.type	go..C321,@object
	.section	.rodata.go..C321,"a",@progbits
	.p2align	3
go..C321:
	.quad	.Lconst.157
	.quad	39
	.size	go..C321, 16

	.type	go..C322,@object
	.section	.rodata.go..C322,"a",@progbits
	.p2align	3
go..C322:
	.quad	.Lconst.38
	.quad	8
	.size	go..C322, 16

	.type	go..C323,@object
	.section	.data.go..C323,"aw",@progbits
	.p2align	4
go..C323:
	.quad	go..C317
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C318
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C319
	.quad	0
	.quad	type...68x.7command_line_arguments.Entity
	.quad	0
	.quad	272
	.quad	go..C322
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	528
	.size	go..C323, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	3272645092
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C324
	.quad	0
	.quad	0
	.quad	go..C335
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.158,@object
	.section	.rodata..Lconst.158,"a",@progbits
.Lconst.158:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.Entity; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.Entity; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.158, 336

	.type	go..C324,@object
	.section	.rodata.go..C324,"a",@progbits
	.p2align	3
go..C324:
	.quad	.Lconst.158
	.quad	335
	.size	go..C324, 16

	.type	go..C325,@object
	.section	.rodata.go..C325,"a",@progbits
	.p2align	3
go..C325:
	.quad	.Lconst.40
	.quad	5
	.size	go..C325, 16

	.type	go..C326,@object
	.section	.rodata.go..C326,"a",@progbits
	.p2align	3
go..C326:
	.quad	.Lconst.43
	.quad	5
	.size	go..C326, 16

	.type	go..C327,@object
	.section	.rodata.go..C327,"a",@progbits
	.p2align	3
go..C327:
	.quad	.Lconst.44
	.quad	1
	.size	go..C327, 16

	.type	go..C328,@object
	.section	.rodata.go..C328,"a",@progbits
	.p2align	3
go..C328:
	.quad	.Lconst.45
	.quad	9
	.size	go..C328, 16

	.type	go..C329,@object
	.section	.rodata.go..C329,"a",@progbits
	.p2align	3
go..C329:
	.quad	.Lconst.48
	.quad	5
	.size	go..C329, 16

	.type	go..C330,@object
	.section	.rodata.go..C330,"a",@progbits
	.p2align	3
go..C330:
	.quad	.Lconst.51
	.quad	7
	.size	go..C330, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	3791728713
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C331
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.159,@object
	.section	.rodata..Lconst.159,"a",@progbits
.Lconst.159:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tassets.Entity; overflow * }"
	.size	.Lconst.159, 106

	.type	go..C331,@object
	.section	.rodata.go..C331,"a",@progbits
	.p2align	3
go..C331:
	.quad	.Lconst.159
	.quad	105
	.size	go..C331, 16

	.type	go..C332,@object
	.section	.rodata.go..C332,"a",@progbits
	.p2align	3
go..C332:
	.quad	.Lconst.53
	.quad	10
	.size	go..C332, 16

	.type	go..C333,@object
	.section	.rodata.go..C333,"a",@progbits
	.p2align	3
go..C333:
	.quad	.Lconst.54
	.quad	9
	.size	go..C333, 16

	.type	go..C334,@object
	.section	.rodata.go..C334,"a",@progbits
	.p2align	3
go..C334:
	.quad	.Lconst.57
	.quad	5
	.size	go..C334, 16

	.type	go..C335,@object
	.section	.data.go..C335,"aw",@progbits
	.p2align	4
go..C335:
	.quad	go..C325
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C326
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C327
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C328
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C329
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C330
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C332
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.Entity.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C333
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C334
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C335, 360

	.type	.Lconst.160,@object
	.section	.rodata..Lconst.160,"a",@progbits
.Lconst.160:
	.asciz	"Level"
	.size	.Lconst.160, 6

	.type	go..C336,@object
	.section	.rodata.go..C336,"a",@progbits
	.p2align	3
go..C336:
	.quad	.Lconst.160
	.quad	5
	.size	go..C336, 16

	.type	type...1command_line_arguments.Level,@object
	.section	.rodata.type...1command_line_arguments.Level,"aG",@progbits,type...1command_line_arguments.Level,comdat
	.weak	type...1command_line_arguments.Level
	.p2align	4
type...1command_line_arguments.Level:
	.quad	8
	.quad	8
	.long	1401864745
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C337
	.quad	go..C356
	.quad	type...1.1command_line_arguments.Level
	.quad	command_line_arguments.Level..d
	.size	type...1command_line_arguments.Level, 80

	.type	.Lconst.161,@object
	.section	.rodata..Lconst.161,"a",@progbits
.Lconst.161:
	.asciz	"*\tcommand_line_arguments\tassets.Level"
	.size	.Lconst.161, 38

	.type	go..C337,@object
	.section	.rodata.go..C337,"a",@progbits
	.p2align	3
go..C337:
	.quad	.Lconst.161
	.quad	37
	.size	go..C337, 16

	.type	go..C338,@object
	.section	.rodata.go..C338,"a",@progbits
	.p2align	3
go..C338:
	.quad	.Lconst.116
	.quad	11
	.size	go..C338, 16

	.type	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9:
	.quad	8
	.quad	8
	.long	1865907880
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C339
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C340
	.quad	4
	.quad	4
	.quad	go..C341
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9, 128

	.type	.Lconst.162,@object
	.section	.rodata..Lconst.162,"a",@progbits
.Lconst.162:
	.asciz	"func(*\tcommand_line_arguments\tassets.Level, \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node, string, interface {}) error"
	.size	.Lconst.162, 123

	.type	go..C339,@object
	.section	.rodata.go..C339,"a",@progbits
	.p2align	3
go..C339:
	.quad	.Lconst.162
	.quad	122
	.size	go..C339, 16

	.type	go..C340,@object
	.section	.data.go..C340,"aw",@progbits
	.p2align	4
go..C340:
	.quad	type...1command_line_arguments.Level
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.quad	string..d
	.quad	type..interface.4.5
	.size	go..C340, 32

	.type	go..C341,@object
	.section	.data.go..C341,"aw",@progbits
	.p2align	3
go..C341:
	.quad	error..d
	.size	go..C341, 8

	.type	go..C342,@object
	.section	.rodata.go..C342,"a",@progbits
	.p2align	3
go..C342:
	.quad	.Lconst.119
	.quad	13
	.size	go..C342, 16

	.type	type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,"aG",@progbits,type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9,comdat
	.weak	type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.p2align	4
type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9:
	.quad	8
	.quad	8
	.long	480657896
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C343
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C344
	.quad	2
	.quad	2
	.quad	go..C345
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9, 128

	.type	.Lconst.163,@object
	.section	.rodata..Lconst.163,"a",@progbits
.Lconst.163:
	.asciz	"func(*\tcommand_line_arguments\tassets.Level, string) (map[string]\tcommand_line_arguments\tassets.PropertyFunc, bool)"
	.size	.Lconst.163, 115

	.type	go..C343,@object
	.section	.rodata.go..C343,"a",@progbits
	.p2align	3
go..C343:
	.quad	.Lconst.163
	.quad	114
	.size	go..C343, 16

	.type	go..C344,@object
	.section	.data.go..C344,"aw",@progbits
	.p2align	3
go..C344:
	.quad	type...1command_line_arguments.Level
	.quad	string..d
	.size	go..C344, 16

	.type	go..C345,@object
	.section	.data.go..C345,"aw",@progbits
	.p2align	3
go..C345:
	.quad	type..map.6string.7command_line_arguments.PropertyFunc
	.quad	bool..d
	.size	go..C345, 16

	.type	go..C346,@object
	.section	.rodata.go..C346,"a",@progbits
	.p2align	3
go..C346:
	.quad	.Lconst.131
	.quad	4
	.size	go..C346, 16

	.type	type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,"aG",@progbits,type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9,comdat
	.weak	type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.p2align	4
type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9:
	.quad	8
	.quad	8
	.long	1720119144
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C347
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C348
	.quad	1
	.quad	1
	.quad	go..C349
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9, 128

	.type	.Lconst.164,@object
	.section	.rodata..Lconst.164,"a",@progbits
.Lconst.164:
	.asciz	"func(*\tcommand_line_arguments\tassets.Level) *\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs_core\tcore.Directory"
	.size	.Lconst.164, 107

	.type	go..C347,@object
	.section	.rodata.go..C347,"a",@progbits
	.p2align	3
go..C347:
	.quad	.Lconst.164
	.quad	106
	.size	go..C347, 16

	.type	go..C348,@object
	.section	.data.go..C348,"aw",@progbits
	.p2align	3
go..C348:
	.quad	type...1command_line_arguments.Level
	.size	go..C348, 8

	.type	go..C349,@object
	.section	.data.go..C349,"aw",@progbits
	.p2align	3
go..C349:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.size	go..C349, 8

	.type	go..C350,@object
	.section	.rodata.go..C350,"a",@progbits
	.p2align	3
go..C350:
	.quad	.Lconst.134
	.quad	5
	.size	go..C350, 16

	.type	go..C351,@object
	.section	.rodata.go..C351,"a",@progbits
	.p2align	3
go..C351:
	.quad	.Lconst.2
	.quad	22
	.size	go..C351, 16

	.type	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9:
	.quad	8
	.quad	8
	.long	3140053992
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C352
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C353
	.quad	2
	.quad	2
	.quad	go..C354
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9, 128

	.type	.Lconst.165,@object
	.section	.rodata..Lconst.165,"a",@progbits
.Lconst.165:
	.asciz	"func(*\tcommand_line_arguments\tassets.Level, \tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node)"
	.size	.Lconst.165, 95

	.type	go..C352,@object
	.section	.rodata.go..C352,"a",@progbits
	.p2align	3
go..C352:
	.quad	.Lconst.165
	.quad	94
	.size	go..C352, 16

	.type	go..C353,@object
	.section	.data.go..C353,"aw",@progbits
	.p2align	3
go..C353:
	.quad	type...1command_line_arguments.Level
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.size	go..C353, 16

	.type	go..C354,@object
	.section	.bss.go..C354,"aw",@nobits
	.p2align	3
go..C354:
	.zero	8
	.size	go..C354, 8

	.type	go..C355,@object
	.section	.data.go..C355,"aw",@progbits
	.p2align	4
go..C355:
	.quad	go..C338
	.quad	0
	.quad	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.quad	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.3string.3interface.4.5.9.8error.9
	.quad	command_line_arguments.Level.AddProperty
	.quad	go..C342
	.quad	0
	.quad	type..func.8string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.quad	type..func.8.1command_line_arguments.Level.3string.9.8map.6string.7command_line_arguments.PropertyFunc.3bool.9
	.quad	command_line_arguments.Level.GetProperties
	.quad	go..C346
	.quad	0
	.quad	type..func.8.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.quad	type..func.8.1command_line_arguments.Level.9.8.1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.9
	.quad	command_line_arguments.Level.Root
	.quad	go..C350
	.quad	go..C351
	.quad	type..func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.quad	type..func.8.1command_line_arguments.Level.3github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8.9
	.quad	command_line_arguments.Level.visit
	.size	go..C355, 160

	.type	go..C356,@object
	.section	.rodata.go..C356,"a",@progbits
	.p2align	4
go..C356:
	.quad	0
	.quad	0
	.quad	go..C355
	.quad	4
	.quad	4
	.size	go..C356, 40

	.type	type...1.1command_line_arguments.Level,@object
	.section	.rodata.type...1.1command_line_arguments.Level,"aG",@progbits,type...1.1command_line_arguments.Level,comdat
	.weak	type...1.1command_line_arguments.Level
	.p2align	4
type...1.1command_line_arguments.Level:
	.quad	8
	.quad	8
	.long	954999449
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C357
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Level
	.size	type...1.1command_line_arguments.Level, 80

	.type	.Lconst.166,@object
	.section	.rodata..Lconst.166,"a",@progbits
.Lconst.166:
	.asciz	"**\tcommand_line_arguments\tassets.Level"
	.size	.Lconst.166, 39

	.type	go..C357,@object
	.section	.rodata.go..C357,"a",@progbits
	.p2align	3
go..C357:
	.quad	.Lconst.166
	.quad	38
	.size	go..C357, 16

	.type	command_line_arguments.Level..d,@object
	.section	.rodata.command_line_arguments.Level..d,"a",@progbits
	.globl	command_line_arguments.Level..d
	.p2align	4
command_line_arguments.Level..d:
	.quad	40
	.quad	40
	.long	624487458
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Ga
	.quad	go..C358
	.quad	go..C362
	.quad	type...1command_line_arguments.Level
	.quad	go..C392
	.quad	4
	.quad	4
	.size	command_line_arguments.Level..d, 96

	.type	gcbits..Ga,@object
	.section	.rodata.gcbits..Ga,"aG",@progbits,gcbits..Ga,comdat
	.weak	gcbits..Ga
gcbits..Ga:
	.byte	31
	.size	gcbits..Ga, 1

	.type	.Lconst.167,@object
	.section	.rodata..Lconst.167,"a",@progbits
.Lconst.167:
	.asciz	"\tcommand_line_arguments\tassets.Level"
	.size	.Lconst.167, 37

	.type	go..C358,@object
	.section	.rodata.go..C358,"a",@progbits
	.p2align	3
go..C358:
	.quad	.Lconst.167
	.quad	36
	.size	go..C358, 16

	.type	go..C359,@object
	.section	.rodata.go..C359,"a",@progbits
	.p2align	3
go..C359:
	.quad	.Lconst.160
	.quad	5
	.size	go..C359, 16

	.type	go..C360,@object
	.section	.rodata.go..C360,"a",@progbits
	.p2align	3
go..C360:
	.quad	.Lconst.2
	.quad	22
	.size	go..C360, 16

	.type	go..C361,@object
	.section	.bss.go..C361,"aw",@nobits
	.p2align	4
go..C361:
	.zero	40
	.size	go..C361, 40

	.type	go..C362,@object
	.section	.rodata.go..C362,"a",@progbits
	.p2align	4
go..C362:
	.quad	go..C359
	.quad	go..C360
	.quad	go..C361
	.quad	0
	.quad	0
	.size	go..C362, 40

	.type	.Lconst.168,@object
	.section	.rodata..Lconst.168,"a",@progbits
.Lconst.168:
	.asciz	"root"
	.size	.Lconst.168, 5

	.type	go..C363,@object
	.section	.rodata.go..C363,"a",@progbits
	.p2align	3
go..C363:
	.quad	.Lconst.168
	.quad	4
	.size	go..C363, 16

	.type	go..C364,@object
	.section	.rodata.go..C364,"a",@progbits
	.p2align	3
go..C364:
	.quad	.Lconst.2
	.quad	22
	.size	go..C364, 16

	.type	.Lconst.169,@object
	.section	.rodata..Lconst.169,"a",@progbits
.Lconst.169:
	.asciz	"objects"
	.size	.Lconst.169, 8

	.type	go..C365,@object
	.section	.rodata.go..C365,"a",@progbits
	.p2align	3
go..C365:
	.quad	.Lconst.169
	.quad	7
	.size	go..C365, 16

	.type	go..C366,@object
	.section	.rodata.go..C366,"a",@progbits
	.p2align	3
go..C366:
	.quad	.Lconst.2
	.quad	22
	.size	go..C366, 16

	.type	.Lconst.170,@object
	.section	.rodata..Lconst.170,"a",@progbits
.Lconst.170:
	.asciz	"paths"
	.size	.Lconst.170, 6

	.type	go..C367,@object
	.section	.rodata.go..C367,"a",@progbits
	.p2align	3
go..C367:
	.quad	.Lconst.170
	.quad	5
	.size	go..C367, 16

	.type	go..C368,@object
	.section	.rodata.go..C368,"a",@progbits
	.p2align	3
go..C368:
	.quad	.Lconst.2
	.quad	22
	.size	go..C368, 16

	.type	.Lconst.171,@object
	.section	.rodata..Lconst.171,"a",@progbits
.Lconst.171:
	.asciz	"properties"
	.size	.Lconst.171, 11

	.type	go..C369,@object
	.section	.rodata.go..C369,"a",@progbits
	.p2align	3
go..C369:
	.quad	.Lconst.171
	.quad	10
	.size	go..C369, 16

	.type	go..C370,@object
	.section	.rodata.go..C370,"a",@progbits
	.p2align	3
go..C370:
	.quad	.Lconst.2
	.quad	22
	.size	go..C370, 16

	.type	type..map.6string.7map.6string.7command_line_arguments.PropertyFunc,@object
	.section	.rodata.type..map.6string.7map.6string.7command_line_arguments.PropertyFunc,"aG",@progbits,type..map.6string.7map.6string.7command_line_arguments.PropertyFunc,comdat
	.weak	type..map.6string.7map.6string.7command_line_arguments.PropertyFunc
	.p2align	4
type..map.6string.7map.6string.7command_line_arguments.PropertyFunc:
	.quad	8
	.quad	8
	.long	3210200289
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C371
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type..map.6string.7command_line_arguments.PropertyFunc
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7map.6string.7command_line_arguments.PropertyFunc, 112

	.type	.Lconst.172,@object
	.section	.rodata..Lconst.172,"a",@progbits
.Lconst.172:
	.asciz	"map[string]map[string]\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.172, 66

	.type	go..C371,@object
	.section	.rodata.go..C371,"a",@progbits
	.p2align	3
go..C371:
	.quad	.Lconst.172
	.quad	65
	.size	go..C371, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	3913351492
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C372
	.quad	0
	.quad	0
	.quad	go..C379
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, 96

	.type	.Lconst.173,@object
	.section	.rodata..Lconst.173,"a",@progbits
.Lconst.173:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]map[string]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }"
	.size	.Lconst.173, 122

	.type	go..C372,@object
	.section	.rodata.go..C372,"a",@progbits
	.p2align	3
go..C372:
	.quad	.Lconst.173
	.quad	121
	.size	go..C372, 16

	.type	go..C373,@object
	.section	.rodata.go..C373,"a",@progbits
	.p2align	3
go..C373:
	.quad	.Lconst.27
	.quad	7
	.size	go..C373, 16

	.type	go..C374,@object
	.section	.rodata.go..C374,"a",@progbits
	.p2align	3
go..C374:
	.quad	.Lconst.32
	.quad	4
	.size	go..C374, 16

	.type	go..C375,@object
	.section	.rodata.go..C375,"a",@progbits
	.p2align	3
go..C375:
	.quad	.Lconst.35
	.quad	6
	.size	go..C375, 16

	.type	type...68x.7map.6string.7command_line_arguments.PropertyFunc,@object
	.section	.rodata.type...68x.7map.6string.7command_line_arguments.PropertyFunc,"aG",@progbits,type...68x.7map.6string.7command_line_arguments.PropertyFunc,comdat
	.weak	type...68x.7map.6string.7command_line_arguments.PropertyFunc
	.p2align	4
type...68x.7map.6string.7command_line_arguments.PropertyFunc:
	.quad	64
	.quad	64
	.long	1828371581
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C376
	.quad	0
	.quad	0
	.quad	type..map.6string.7command_line_arguments.PropertyFunc
	.quad	type...6.7map.6string.7command_line_arguments.PropertyFunc
	.quad	8
	.size	type...68x.7map.6string.7command_line_arguments.PropertyFunc, 96

	.type	.Lconst.174,@object
	.section	.rodata..Lconst.174,"a",@progbits
.Lconst.174:
	.asciz	"[8]map[string]\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.174, 58

	.type	go..C376,@object
	.section	.rodata.go..C376,"a",@progbits
	.p2align	3
go..C376:
	.quad	.Lconst.174
	.quad	57
	.size	go..C376, 16

	.type	type...6.7map.6string.7command_line_arguments.PropertyFunc,@object
	.section	.rodata.type...6.7map.6string.7command_line_arguments.PropertyFunc,"aG",@progbits,type...6.7map.6string.7command_line_arguments.PropertyFunc,comdat
	.weak	type...6.7map.6string.7command_line_arguments.PropertyFunc
	.p2align	4
type...6.7map.6string.7command_line_arguments.PropertyFunc:
	.quad	24
	.quad	8
	.long	914185797
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C377
	.quad	0
	.quad	0
	.quad	type..map.6string.7command_line_arguments.PropertyFunc
	.size	type...6.7map.6string.7command_line_arguments.PropertyFunc, 80

	.type	.Lconst.175,@object
	.section	.rodata..Lconst.175,"a",@progbits
.Lconst.175:
	.asciz	"[]map[string]\tcommand_line_arguments\tassets.PropertyFunc"
	.size	.Lconst.175, 57

	.type	go..C377,@object
	.section	.rodata.go..C377,"a",@progbits
	.p2align	3
go..C377:
	.quad	.Lconst.175
	.quad	56
	.size	go..C377, 16

	.type	go..C378,@object
	.section	.rodata.go..C378,"a",@progbits
	.p2align	3
go..C378:
	.quad	.Lconst.38
	.quad	8
	.size	go..C378, 16

	.type	go..C379,@object
	.section	.data.go..C379,"aw",@progbits
	.p2align	4
go..C379:
	.quad	go..C373
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C374
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C375
	.quad	0
	.quad	type...68x.7map.6string.7command_line_arguments.PropertyFunc
	.quad	0
	.quad	272
	.quad	go..C378
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C379, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	2292586980
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C380
	.quad	0
	.quad	0
	.quad	go..C391
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.176,@object
	.section	.rodata..Lconst.176,"a",@progbits
.Lconst.176:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]map[string]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]map[string]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.176, 370

	.type	go..C380,@object
	.section	.rodata.go..C380,"a",@progbits
	.p2align	3
go..C380:
	.quad	.Lconst.176
	.quad	369
	.size	go..C380, 16

	.type	go..C381,@object
	.section	.rodata.go..C381,"a",@progbits
	.p2align	3
go..C381:
	.quad	.Lconst.40
	.quad	5
	.size	go..C381, 16

	.type	go..C382,@object
	.section	.rodata.go..C382,"a",@progbits
	.p2align	3
go..C382:
	.quad	.Lconst.43
	.quad	5
	.size	go..C382, 16

	.type	go..C383,@object
	.section	.rodata.go..C383,"a",@progbits
	.p2align	3
go..C383:
	.quad	.Lconst.44
	.quad	1
	.size	go..C383, 16

	.type	go..C384,@object
	.section	.rodata.go..C384,"a",@progbits
	.p2align	3
go..C384:
	.quad	.Lconst.45
	.quad	9
	.size	go..C384, 16

	.type	go..C385,@object
	.section	.rodata.go..C385,"a",@progbits
	.p2align	3
go..C385:
	.quad	.Lconst.48
	.quad	5
	.size	go..C385, 16

	.type	go..C386,@object
	.section	.rodata.go..C386,"a",@progbits
	.p2align	3
go..C386:
	.quad	.Lconst.51
	.quad	7
	.size	go..C386, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	2484081737
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C387
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.177,@object
	.section	.rodata..Lconst.177,"a",@progbits
.Lconst.177:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]map[string]\tcommand_line_arguments\tassets.PropertyFunc; overflow * }"
	.size	.Lconst.177, 123

	.type	go..C387,@object
	.section	.rodata.go..C387,"a",@progbits
	.p2align	3
go..C387:
	.quad	.Lconst.177
	.quad	122
	.size	go..C387, 16

	.type	go..C388,@object
	.section	.rodata.go..C388,"a",@progbits
	.p2align	3
go..C388:
	.quad	.Lconst.53
	.quad	10
	.size	go..C388, 16

	.type	go..C389,@object
	.section	.rodata.go..C389,"a",@progbits
	.p2align	3
go..C389:
	.quad	.Lconst.54
	.quad	9
	.size	go..C389, 16

	.type	go..C390,@object
	.section	.rodata.go..C390,"a",@progbits
	.p2align	3
go..C390:
	.quad	.Lconst.57
	.quad	5
	.size	go..C390, 16

	.type	go..C391,@object
	.section	.data.go..C391,"aw",@progbits
	.p2align	4
go..C391:
	.quad	go..C381
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C382
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C383
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C384
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C385
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C386
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C388
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7map.6string.7command_line_arguments.PropertyFunc.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C389
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C390
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C391, 360

	.type	go..C392,@object
	.section	.data.go..C392,"aw",@progbits
	.p2align	4
go..C392:
	.quad	go..C363
	.quad	go..C364
	.quad	command_line_arguments.Entity..d
	.quad	0
	.quad	0
	.quad	go..C365
	.quad	go..C366
	.quad	type..map.6string.7command_line_arguments.Entity
	.quad	0
	.quad	32
	.quad	go..C367
	.quad	go..C368
	.quad	type..map.6string.7command_line_arguments.Entity
	.quad	0
	.quad	48
	.quad	go..C369
	.quad	go..C370
	.quad	type..map.6string.7map.6string.7command_line_arguments.PropertyFunc
	.quad	0
	.quad	64
	.size	go..C392, 160

	.type	go..C393,@object
	.section	.data.go..C393,"aw",@progbits
	.p2align	4
go..C393:
	.quad	go..C311
	.quad	go..C312
	.quad	command_line_arguments.Components..d
	.quad	0
	.quad	0
	.quad	go..C313
	.quad	go..C314
	.quad	type..map.6string.7command_line_arguments.Entity
	.quad	0
	.quad	16
	.quad	go..C336
	.quad	0
	.quad	type...1command_line_arguments.Level
	.quad	0
	.quad	33
	.size	go..C393, 120

	.type	command_line_arguments.New..f,@object
	.section	.rodata.command_line_arguments.New..f,"a",@progbits
	.globl	command_line_arguments.New..f
	.p2align	3
command_line_arguments.New..f:
	.quad	command_line_arguments.New
	.size	command_line_arguments.New..f, 8

	.type	command_line_arguments.LoadFromFile..f,@object
	.section	.rodata.command_line_arguments.LoadFromFile..f,"a",@progbits
	.globl	command_line_arguments.LoadFromFile..f
	.p2align	3
command_line_arguments.LoadFromFile..f:
	.quad	command_line_arguments.LoadFromFile
	.size	command_line_arguments.LoadFromFile..f, 8

	.type	type..map.6interface.4.5.7interface.4.5,@object
	.section	.rodata.type..map.6interface.4.5.7interface.4.5,"aG",@progbits,type..map.6interface.4.5.7interface.4.5,comdat
	.weak	type..map.6interface.4.5.7interface.4.5
	.p2align	4
type..map.6interface.4.5.7interface.4.5:
	.quad	8
	.quad	8
	.long	48
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C394
	.quad	0
	.quad	0
	.quad	type..interface.4.5
	.quad	type..interface.4.5
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	16
	.byte	0
	.short	272
	.byte	0
	.byte	1
	.size	type..map.6interface.4.5.7interface.4.5, 112

	.type	.Lconst.181,@object
	.section	.rodata..Lconst.181,"a",@progbits
.Lconst.181:
	.asciz	"map[interface {}]interface {}"
	.size	.Lconst.181, 30

	.type	go..C394,@object
	.section	.rodata.go..C394,"a",@progbits
	.p2align	3
go..C394:
	.quad	.Lconst.181
	.quad	29
	.size	go..C394, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5:
	.quad	272
	.quad	272
	.long	3808139748
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..FGGGGGpa
	.quad	go..C395
	.quad	0
	.quad	0
	.quad	go..C400
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, 96

	.type	gcbits..FGGGGGpa,@object
	.section	.rodata.gcbits..FGGGGGpa,"aG",@progbits,gcbits..FGGGGGpa,comdat
	.weak	gcbits..FGGGGGpa
gcbits..FGGGGGpa:
	.ascii	"\376\377\377\377\003"
	.size	gcbits..FGGGGGpa, 5

	.type	.Lconst.182,@object
	.section	.rodata..Lconst.182,"a",@progbits
.Lconst.182:
	.asciz	"struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }"
	.size	.Lconst.182, 86

	.type	go..C395,@object
	.section	.rodata.go..C395,"a",@progbits
	.p2align	3
go..C395:
	.quad	.Lconst.182
	.quad	85
	.size	go..C395, 16

	.type	go..C396,@object
	.section	.rodata.go..C396,"a",@progbits
	.p2align	3
go..C396:
	.quad	.Lconst.27
	.quad	7
	.size	go..C396, 16

	.type	go..C397,@object
	.section	.rodata.go..C397,"a",@progbits
	.p2align	3
go..C397:
	.quad	.Lconst.32
	.quad	4
	.size	go..C397, 16

	.type	go..C398,@object
	.section	.rodata.go..C398,"a",@progbits
	.p2align	3
go..C398:
	.quad	.Lconst.35
	.quad	6
	.size	go..C398, 16

	.type	go..C399,@object
	.section	.rodata.go..C399,"a",@progbits
	.p2align	3
go..C399:
	.quad	.Lconst.38
	.quad	8
	.size	go..C399, 16

	.type	go..C400,@object
	.section	.data.go..C400,"aw",@progbits
	.p2align	4
go..C400:
	.quad	go..C396
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C397
	.quad	0
	.quad	type...68x.7interface.4.5
	.quad	0
	.quad	16
	.quad	go..C398
	.quad	0
	.quad	type...68x.7interface.4.5
	.quad	0
	.quad	272
	.quad	go..C399
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	528
	.size	go..C400, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	3896105444
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C401
	.quad	0
	.quad	0
	.quad	go..C412
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.183,@object
	.section	.rodata..Lconst.183,"a",@progbits
.Lconst.183:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.183, 298

	.type	go..C401,@object
	.section	.rodata.go..C401,"a",@progbits
	.p2align	3
go..C401:
	.quad	.Lconst.183
	.quad	297
	.size	go..C401, 16

	.type	go..C402,@object
	.section	.rodata.go..C402,"a",@progbits
	.p2align	3
go..C402:
	.quad	.Lconst.40
	.quad	5
	.size	go..C402, 16

	.type	go..C403,@object
	.section	.rodata.go..C403,"a",@progbits
	.p2align	3
go..C403:
	.quad	.Lconst.43
	.quad	5
	.size	go..C403, 16

	.type	go..C404,@object
	.section	.rodata.go..C404,"a",@progbits
	.p2align	3
go..C404:
	.quad	.Lconst.44
	.quad	1
	.size	go..C404, 16

	.type	go..C405,@object
	.section	.rodata.go..C405,"a",@progbits
	.p2align	3
go..C405:
	.quad	.Lconst.45
	.quad	9
	.size	go..C405, 16

	.type	go..C406,@object
	.section	.rodata.go..C406,"a",@progbits
	.p2align	3
go..C406:
	.quad	.Lconst.48
	.quad	5
	.size	go..C406, 16

	.type	go..C407,@object
	.section	.rodata.go..C407,"a",@progbits
	.p2align	3
go..C407:
	.quad	.Lconst.51
	.quad	7
	.size	go..C407, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	800693833
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C408
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.184,@object
	.section	.rodata..Lconst.184,"a",@progbits
.Lconst.184:
	.asciz	"*struct { topbits [8]uint8; keys [8]interface {}; values [8]interface {}; overflow * }"
	.size	.Lconst.184, 87

	.type	go..C408,@object
	.section	.rodata.go..C408,"a",@progbits
	.p2align	3
go..C408:
	.quad	.Lconst.184
	.quad	86
	.size	go..C408, 16

	.type	go..C409,@object
	.section	.rodata.go..C409,"a",@progbits
	.p2align	3
go..C409:
	.quad	.Lconst.53
	.quad	10
	.size	go..C409, 16

	.type	go..C410,@object
	.section	.rodata.go..C410,"a",@progbits
	.p2align	3
go..C410:
	.quad	.Lconst.54
	.quad	9
	.size	go..C410, 16

	.type	go..C411,@object
	.section	.rodata.go..C411,"a",@progbits
	.p2align	3
go..C411:
	.quad	.Lconst.57
	.quad	5
	.size	go..C411, 16

	.type	go..C412,@object
	.section	.data.go..C412,"aw",@progbits
	.p2align	4
go..C412:
	.quad	go..C402
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C403
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C404
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C405
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C406
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C407
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C409
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7interface.4.5.2values.0.68x.7interface.4.5.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C410
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C411
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C412, 360

	.type	.Lconst.185,@object
	.section	.rodata..Lconst.185,"a",@progbits
.Lconst.185:
	.asciz	"attrs wrong type: '%v'"
	.size	.Lconst.185, 23

	.type	.Lconst.189,@object
	.section	.rodata..Lconst.189,"a",@progbits
.Lconst.189:
	.asciz	"key is not string"
	.size	.Lconst.189, 18

	.type	.Lconst.190,@object
	.section	.rodata..Lconst.190,"a",@progbits
	.p2align	3
.Lconst.190:
	.quad	.Lconst.189
	.quad	17
	.size	.Lconst.190, 16

	.type	type...1map.6string.7interface.4.5,@object
	.section	.rodata.type...1map.6string.7interface.4.5,"aG",@progbits,type...1map.6string.7interface.4.5,comdat
	.weak	type...1map.6string.7interface.4.5
	.p2align	4
type...1map.6string.7interface.4.5:
	.quad	8
	.quad	8
	.long	2376493993
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C413
	.quad	0
	.quad	0
	.quad	type..map.6string.7interface.4.5
	.size	type...1map.6string.7interface.4.5, 80

	.type	.Lconst.192,@object
	.section	.rodata..Lconst.192,"a",@progbits
.Lconst.192:
	.asciz	"*map[string]interface {}"
	.size	.Lconst.192, 25

	.type	go..C413,@object
	.section	.rodata.go..C413,"a",@progbits
	.p2align	3
go..C413:
	.quad	.Lconst.192
	.quad	24
	.size	go..C413, 16

	.type	.Lconst.194,@object
	.section	.rodata..Lconst.194,"a",@progbits
.Lconst.194:
	.asciz	":"
	.size	.Lconst.194, 2

	.type	.Lconst.196,@object
	.section	.rodata..Lconst.196,"a",@progbits
.Lconst.196:
	.asciz	"missing base type"
	.size	.Lconst.196, 18

	.type	.Lconst.197,@object
	.section	.rodata..Lconst.197,"a",@progbits
	.p2align	3
.Lconst.197:
	.quad	.Lconst.196
	.quad	17
	.size	.Lconst.197, 16

	.type	.Lconst.198,@object
	.section	.rodata..Lconst.198,"a",@progbits
.Lconst.198:
	.asciz	"component '%s' already exists"
	.size	.Lconst.198, 30

	.type	.Lconst.200,@object
	.section	.rodata..Lconst.200,"a",@progbits
	.p2align	4
.Lconst.200:
	.zero	24
	.size	.Lconst.200, 24

	.type	.Lconst.201,@object
	.section	.rodata..Lconst.201,"a",@progbits
.Lconst.201:
	.asciz	"RegisteredComponent: %#v\n"
	.size	.Lconst.201, 26

	.type	type...61x.7interface.4.5,@object
	.section	.rodata.type...61x.7interface.4.5,"aG",@progbits,type...61x.7interface.4.5,comdat
	.weak	type...61x.7interface.4.5
	.p2align	4
type...61x.7interface.4.5:
	.quad	16
	.quad	16
	.long	47
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..da
	.quad	go..C414
	.quad	0
	.quad	0
	.quad	type..interface.4.5
	.quad	type...6.7interface.4.5
	.quad	1
	.size	type...61x.7interface.4.5, 96

	.type	.Lconst.202,@object
	.section	.rodata..Lconst.202,"a",@progbits
.Lconst.202:
	.asciz	"[1]interface {}"
	.size	.Lconst.202, 16

	.type	go..C414,@object
	.section	.rodata.go..C414,"a",@progbits
	.p2align	3
go..C414:
	.quad	.Lconst.202
	.quad	15
	.size	go..C414, 16

	.type	command_line_arguments.PkgLogger,@object
	.section	.bss.command_line_arguments.PkgLogger,"aw",@nobits
	.globl	command_line_arguments.PkgLogger
	.p2align	3
command_line_arguments.PkgLogger:
	.zero	16
	.size	command_line_arguments.PkgLogger, 16

	.type	.Lconst.205,@object
	.section	.rodata..Lconst.205,"a",@progbits
.Lconst.205:
	.asciz	"*.yaml"
	.size	.Lconst.205, 7

	.type	.Lconst.206,@object
	.section	.rodata..Lconst.206,"a",@progbits
	.p2align	3
.Lconst.206:
	.quad	.Lconst.205
	.quad	6
	.size	.Lconst.206, 16

	.type	.Lconst.209,@object
	.section	.rodata..Lconst.209,"a",@progbits
.Lconst.209:
	.asciz	"missing base component type '%s'"
	.size	.Lconst.209, 33

	.type	.Lconst.211,@object
	.section	.rodata..Lconst.211,"a",@progbits
.Lconst.211:
	.asciz	"unable to find component '%s'"
	.size	.Lconst.211, 30

	.type	.Lconst.214,@object
	.section	.rodata..Lconst.214,"a",@progbits
.Lconst.214:
	.asciz	"doc"
	.size	.Lconst.214, 4

	.type	.Lconst.216,@object
	.section	.rodata..Lconst.216,"a",@progbits
.Lconst.216:
	.asciz	"Entity[%s]: %##v\n"
	.size	.Lconst.216, 18

	.type	type...62x.7interface.4.5,@object
	.section	.rodata.type...62x.7interface.4.5,"aG",@progbits,type...62x.7interface.4.5,comdat
	.weak	type...62x.7interface.4.5
	.p2align	4
type...62x.7interface.4.5:
	.quad	32
	.quad	32
	.long	47
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C415
	.quad	0
	.quad	0
	.quad	type..interface.4.5
	.quad	type...6.7interface.4.5
	.quad	2
	.size	type...62x.7interface.4.5, 96

	.type	gcbits..pa,@object
	.section	.rodata.gcbits..pa,"aG",@progbits,gcbits..pa,comdat
	.weak	gcbits..pa
gcbits..pa:
	.byte	15
	.size	gcbits..pa, 1

	.type	.Lconst.217,@object
	.section	.rodata..Lconst.217,"a",@progbits
.Lconst.217:
	.asciz	"[2]interface {}"
	.size	.Lconst.217, 16

	.type	go..C415,@object
	.section	.rodata.go..C415,"a",@progbits
	.p2align	3
go..C415:
	.quad	.Lconst.217
	.quad	15
	.size	go..C415, 16

	.type	pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory,@object
	.section	.rodata.pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory,"aG",@progbits,pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory,comdat
	.weak	pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.p2align	4
pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Attr
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Children..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Content..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Delete..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Entry..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.IsDir..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.IsFile..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.MetaData..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Name..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.New
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Parent..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory.Path..stub
	.size	pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.Directory, 104

	.type	pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File,@object
	.section	.rodata.pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File,"aG",@progbits,pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File,comdat
	.weak	pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File
	.p2align	4
pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Attr
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Children..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Content
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Delete..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Entry..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.IsDir..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.IsFile..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.MetaData..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Name..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.New
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Parent..stub
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File.Path..stub
	.size	pimt..interface.4Attr.0func.8context.Context.3.1bazil_org_fuse.Attr.9.8error.9.2Children.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Nodes.9.2Content.0func.8.9.8.6.7uint8.9.2Delete.0func.8.9.8bool.9.2Entry.0func.8.9.8bazil_org_fuse.Dirent.9.2IsDir.0func.8.9.8bool.9.2IsFile.0func.8.9.8bool.9.2MetaData.0func.8.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeMetaData.9.2Name.0func.8.9.8string.9.2New.0func.8github_com_ChrisRx_dungeonfs_pkg_game_fs.NodeType.3string.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Parent.0func.8.3.3.3.6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.8github_com_ChrisRx_dungeonfs_pkg_game_fs.Node.9.2Path.0func.8.3.3.3.6.7string.9.8string.9.5..github_com_ChrisRx_dungeonfs_pkg_game_fs_core.File, 104

	.type	.Lconst.219,@object
	.section	.rodata..Lconst.219,"a",@progbits
.Lconst.219:
	.asciz	"something very wrong"
	.size	.Lconst.219, 21

	.type	.Lconst.220,@object
	.section	.rodata..Lconst.220,"a",@progbits
	.p2align	3
.Lconst.220:
	.quad	.Lconst.219
	.quad	20
	.size	.Lconst.220, 16

	.type	command_line_arguments.NewLevel..f,@object
	.section	.rodata.command_line_arguments.NewLevel..f,"a",@progbits
	.globl	command_line_arguments.NewLevel..f
	.p2align	3
command_line_arguments.NewLevel..f:
	.quad	command_line_arguments.NewLevel
	.size	command_line_arguments.NewLevel..f, 8

	.type	.Lconst.222,@object
	.section	.rodata..Lconst.222,"a",@progbits
.Lconst.222:
	.asciz	"expected type '[]interface{}', received %v"
	.size	.Lconst.222, 43

	.type	.Lconst.224,@object
	.section	.rodata..Lconst.224,"a",@progbits
.Lconst.224:
	.asciz	"expected type 'string', received %v"
	.size	.Lconst.224, 36

	.type	.Lconst.226,@object
	.section	.rodata..Lconst.226,"a",@progbits
	.p2align	4
.Lconst.226:
	.zero	24
	.size	.Lconst.226, 24

	.type	.Lconst.227,@object
	.section	.rodata..Lconst.227,"a",@progbits
.Lconst.227:
	.asciz	"NodeParent: %s\n"
	.size	.Lconst.227, 16

	.type	.Lconst.229,@object
	.section	.rodata..Lconst.229,"a",@progbits
.Lconst.229:
	.asciz	"adjacent"
	.size	.Lconst.229, 9

	.type	.Lconst.231,@object
	.section	.rodata..Lconst.231,"a",@progbits
.Lconst.231:
	.asciz	"contains"
	.size	.Lconst.231, 9

	.type	.Lconst.233,@object
	.section	.rodata..Lconst.233,"a",@progbits
.Lconst.233:
	.asciz	"NodeChild: %s\n"
	.size	.Lconst.233, 15

	.type	type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node,@object
	.section	.rodata.type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node,"aG",@progbits,type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node,comdat
	.weak	type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node
	.p2align	4
type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node:
	.quad	16
	.quad	16
	.long	4064971077
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..da
	.quad	go..C416
	.quad	0
	.quad	0
	.quad	github_com_ChrisRx_dungeonfs_pkg_game_fs.Node..d
	.quad	type...6.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node
	.quad	1
	.size	type...61x.7github_com_ChrisRx_dungeonfs_pkg_game_fs.Node, 96

	.type	.Lconst.235,@object
	.section	.rodata..Lconst.235,"a",@progbits
.Lconst.235:
	.asciz	"[1]\tgithub_com_ChrisRx_dungeonfs_pkg_game_fs\tfs.Node"
	.size	.Lconst.235, 53

	.type	go..C416,@object
	.section	.rodata.go..C416,"a",@progbits
	.p2align	3
go..C416:
	.quad	.Lconst.235
	.quad	52
	.size	go..C416, 16

	.type	type...61x.7string,@object
	.section	.rodata.type...61x.7string,"aG",@progbits,type...61x.7string,comdat
	.weak	type...61x.7string
	.p2align	4
type...61x.7string:
	.quad	16
	.quad	8
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C417
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	1
	.size	type...61x.7string, 96

	.type	.Lconst.236,@object
	.section	.rodata..Lconst.236,"a",@progbits
.Lconst.236:
	.asciz	"[1]string"
	.size	.Lconst.236, 10

	.type	go..C417,@object
	.section	.rodata.go..C417,"a",@progbits
	.p2align	3
go..C417:
	.quad	.Lconst.236
	.quad	9
	.size	go..C417, 16

	.type	command_line_arguments.srcTmpl,@object
	.section	.data.command_line_arguments.srcTmpl,"aw",@progbits
	.p2align	3
command_line_arguments.srcTmpl:
	.quad	.Lconst.238
	.quad	32
	.size	command_line_arguments.srcTmpl, 16

	.type	.Lconst.238,@object
	.section	.rodata..Lconst.238,"a",@progbits
.Lconst.238:
	.asciz	"package main\nfunc main() {\n\t%s\n}"
	.size	.Lconst.238, 33

	.type	.Lconst.240,@object
	.section	.rodata..Lconst.240,"a",@progbits
.Lconst.240:
	.asciz	"Condition is %v, expected map[string]interface{}"
	.size	.Lconst.240, 49

	.type	.Lconst.244,@object
	.section	.rodata..Lconst.244,"a",@progbits
.Lconst.244:
	.asciz	"node"
	.size	.Lconst.244, 5

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5:
	.quad	24
	.quad	24
	.long	387117444
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ha
	.quad	go..C418
	.quad	0
	.quad	0
	.quad	go..C427
	.quad	3
	.quad	3
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.ctx1.0.1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context.2.command_line_arguments.t2.0.1.1go_ast.File.5, 96

	.type	.Lconst.247,@object
	.section	.rodata..Lconst.247,"a",@progbits
.Lconst.247:
	.asciz	"struct { f *; ctx1 **\tgithub_com_ChrisRx_dungeonfs_pkg_eval\teval.Context; t2 **\tgo_ast\tast.File }"
	.size	.Lconst.247, 98

	.type	go..C418,@object
	.section	.rodata.go..C418,"a",@progbits
	.p2align	3
go..C418:
	.quad	.Lconst.247
	.quad	97
	.size	go..C418, 16

	.type	.Lconst.248,@object
	.section	.rodata..Lconst.248,"a",@progbits
.Lconst.248:
	.asciz	"f"
	.size	.Lconst.248, 2

	.type	go..C419,@object
	.section	.rodata.go..C419,"a",@progbits
	.p2align	3
go..C419:
	.quad	.Lconst.248
	.quad	1
	.size	go..C419, 16

	.type	go..C420,@object
	.section	.rodata.go..C420,"a",@progbits
	.p2align	3
go..C420:
	.quad	.Lconst.248
	.quad	1
	.size	go..C420, 16

	.type	.Lconst.249,@object
	.section	.rodata..Lconst.249,"a",@progbits
.Lconst.249:
	.asciz	"ctx1"
	.size	.Lconst.249, 5

	.type	go..C421,@object
	.section	.rodata.go..C421,"a",@progbits
	.p2align	3
go..C421:
	.quad	.Lconst.249
	.quad	4
	.size	go..C421, 16

	.type	go..C422,@object
	.section	.rodata.go..C422,"a",@progbits
	.p2align	3
go..C422:
	.quad	.Lconst.2
	.quad	22
	.size	go..C422, 16

	.type	type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context,@object
	.section	.rodata.type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context,"aG",@progbits,type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context,comdat
	.weak	type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context
	.p2align	4
type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context:
	.quad	8
	.quad	8
	.long	560728729
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C423
	.quad	0
	.quad	0
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_eval.Context
	.size	type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context, 80

	.type	.Lconst.250,@object
	.section	.rodata..Lconst.250,"a",@progbits
.Lconst.250:
	.asciz	"**\tgithub_com_ChrisRx_dungeonfs_pkg_eval\teval.Context"
	.size	.Lconst.250, 54

	.type	go..C423,@object
	.section	.rodata.go..C423,"a",@progbits
	.p2align	3
go..C423:
	.quad	.Lconst.250
	.quad	53
	.size	go..C423, 16

	.type	.Lconst.251,@object
	.section	.rodata..Lconst.251,"a",@progbits
.Lconst.251:
	.asciz	"t2"
	.size	.Lconst.251, 3

	.type	go..C424,@object
	.section	.rodata.go..C424,"a",@progbits
	.p2align	3
go..C424:
	.quad	.Lconst.251
	.quad	2
	.size	go..C424, 16

	.type	go..C425,@object
	.section	.rodata.go..C425,"a",@progbits
	.p2align	3
go..C425:
	.quad	.Lconst.2
	.quad	22
	.size	go..C425, 16

	.type	type...1.1go_ast.File,@object
	.section	.rodata.type...1.1go_ast.File,"aG",@progbits,type...1.1go_ast.File,comdat
	.weak	type...1.1go_ast.File
	.p2align	4
type...1.1go_ast.File:
	.quad	8
	.quad	8
	.long	537544857
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C426
	.quad	0
	.quad	0
	.quad	type...1go_ast.File
	.size	type...1.1go_ast.File, 80

	.type	.Lconst.252,@object
	.section	.rodata..Lconst.252,"a",@progbits
.Lconst.252:
	.asciz	"**\tgo_ast\tast.File"
	.size	.Lconst.252, 19

	.type	go..C426,@object
	.section	.rodata.go..C426,"a",@progbits
	.p2align	3
go..C426:
	.quad	.Lconst.252
	.quad	18
	.size	go..C426, 16

	.type	go..C427,@object
	.section	.data.go..C427,"aw",@progbits
	.p2align	4
go..C427:
	.quad	go..C419
	.quad	go..C420
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C421
	.quad	go..C422
	.quad	type...1.1github_com_ChrisRx_dungeonfs_pkg_eval.Context
	.quad	0
	.quad	16
	.quad	go..C424
	.quad	go..C425
	.quad	type...1.1go_ast.File
	.quad	0
	.quad	32
	.size	go..C427, 120

	.type	pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt,@object
	.section	.rodata.pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt,"aG",@progbits,pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt,comdat
	.weak	pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt
	.p2align	4
pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt:
	.quad	type...1go_ast.BlockStmt
	.quad	go_ast.BlockStmt.End
	.quad	go_ast.BlockStmt.Pos
	.size	pimt..interface.4End.0func.8.9.8go_token.Pos.9.2Pos.0func.8.9.8go_token.Pos.9.5..go_ast.BlockStmt, 24

	.type	.Lconst.254,@object
	.section	.rodata..Lconst.254,"a",@progbits
.Lconst.254:
	.asciz	"reflect.Value is invalid"
	.size	.Lconst.254, 25

	.type	int64..d,@object
	.section	.rodata.int64..d,"aG",@progbits,int64..d,comdat
	.weak	int64..d
	.p2align	4
int64..d:
	.quad	8
	.quad	0
	.long	923918228
	.byte	134
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C428
	.quad	go..C431
	.quad	type...1int64
	.size	int64..d, 72

	.type	.Lconst.256,@object
	.section	.rodata..Lconst.256,"a",@progbits
.Lconst.256:
	.asciz	"int64"
	.size	.Lconst.256, 6

	.type	go..C428,@object
	.section	.rodata.go..C428,"a",@progbits
	.p2align	3
go..C428:
	.quad	.Lconst.256
	.quad	5
	.size	go..C428, 16

	.type	go..C429,@object
	.section	.rodata.go..C429,"a",@progbits
	.p2align	3
go..C429:
	.quad	.Lconst.256
	.quad	5
	.size	go..C429, 16

	.type	go..C430,@object
	.section	.bss.go..C430,"aw",@nobits
	.p2align	4
go..C430:
	.zero	40
	.size	go..C430, 40

	.type	go..C431,@object
	.section	.rodata.go..C431,"a",@progbits
	.p2align	4
go..C431:
	.quad	go..C429
	.quad	0
	.quad	go..C430
	.quad	0
	.quad	0
	.size	go..C431, 40

	.type	type...1int64,@object
	.section	.rodata.type...1int64,"aG",@progbits,type...1int64,comdat
	.weak	type...1int64
	.p2align	4
type...1int64:
	.quad	8
	.quad	8
	.long	1897789769
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C432
	.quad	0
	.quad	0
	.quad	int64..d
	.size	type...1int64, 80

	.type	.Lconst.257,@object
	.section	.rodata..Lconst.257,"a",@progbits
.Lconst.257:
	.asciz	"*int64"
	.size	.Lconst.257, 7

	.type	go..C432,@object
	.section	.rodata.go..C432,"a",@progbits
	.p2align	3
go..C432:
	.quad	.Lconst.257
	.quad	6
	.size	go..C432, 16

	.type	.Lconst.258,@object
	.section	.rodata..Lconst.258,"a",@progbits
.Lconst.258:
	.asciz	"unhandled condition type '%v'"
	.size	.Lconst.258, 30

	.type	command_line_arguments.SetNodeAttr..f,@object
	.section	.rodata.command_line_arguments.SetNodeAttr..f,"a",@progbits
	.globl	command_line_arguments.SetNodeAttr..f
	.p2align	3
command_line_arguments.SetNodeAttr..f:
	.quad	command_line_arguments.SetNodeAttr
	.size	command_line_arguments.SetNodeAttr..f, 8

	.type	command_line_arguments..command_line_arguments.logger..d,@object
	.section	.rodata.command_line_arguments..command_line_arguments.logger..d,"a",@progbits
	.globl	command_line_arguments..command_line_arguments.logger..d
	.p2align	4
command_line_arguments..command_line_arguments.logger..d:
	.quad	16
	.quad	16
	.long	3748037226
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C433
	.quad	go..C437
	.quad	type...1command_line_arguments.logger
	.quad	go..C443
	.quad	1
	.quad	1
	.size	command_line_arguments..command_line_arguments.logger..d, 96

	.type	.Lconst.260,@object
	.section	.rodata..Lconst.260,"a",@progbits
.Lconst.260:
	.asciz	"\tcommand_line_arguments\tassets.logger"
	.size	.Lconst.260, 38

	.type	go..C433,@object
	.section	.rodata.go..C433,"a",@progbits
	.p2align	3
go..C433:
	.quad	.Lconst.260
	.quad	37
	.size	go..C433, 16

	.type	.Lconst.261,@object
	.section	.rodata..Lconst.261,"a",@progbits
.Lconst.261:
	.asciz	"logger"
	.size	.Lconst.261, 7

	.type	go..C434,@object
	.section	.rodata.go..C434,"a",@progbits
	.p2align	3
go..C434:
	.quad	.Lconst.261
	.quad	6
	.size	go..C434, 16

	.type	go..C435,@object
	.section	.rodata.go..C435,"a",@progbits
	.p2align	3
go..C435:
	.quad	.Lconst.2
	.quad	22
	.size	go..C435, 16

	.type	go..C436,@object
	.section	.bss.go..C436,"aw",@nobits
	.p2align	4
go..C436:
	.zero	40
	.size	go..C436, 40

	.type	go..C437,@object
	.section	.rodata.go..C437,"a",@progbits
	.p2align	4
go..C437:
	.quad	go..C434
	.quad	go..C435
	.quad	go..C436
	.quad	0
	.quad	0
	.size	go..C437, 40

	.type	type...1command_line_arguments.logger,@object
	.section	.rodata.type...1command_line_arguments.logger,"aG",@progbits,type...1command_line_arguments.logger,comdat
	.weak	type...1command_line_arguments.logger
	.p2align	4
type...1command_line_arguments.logger:
	.quad	8
	.quad	8
	.long	4134020777
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C438
	.quad	0
	.quad	0
	.quad	command_line_arguments..command_line_arguments.logger..d
	.size	type...1command_line_arguments.logger, 80

	.type	.Lconst.262,@object
	.section	.rodata..Lconst.262,"a",@progbits
.Lconst.262:
	.asciz	"*\tcommand_line_arguments\tassets.logger"
	.size	.Lconst.262, 39

	.type	go..C438,@object
	.section	.rodata.go..C438,"a",@progbits
	.p2align	3
go..C438:
	.quad	.Lconst.262
	.quad	38
	.size	go..C438, 16

	.type	.Lconst.263,@object
	.section	.rodata..Lconst.263,"a",@progbits
.Lconst.263:
	.asciz	"Printf"
	.size	.Lconst.263, 7

	.type	go..C439,@object
	.section	.rodata.go..C439,"a",@progbits
	.p2align	3
go..C439:
	.quad	.Lconst.263
	.quad	6
	.size	go..C439, 16

	.type	type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9,@object
	.section	.rodata.type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9,"aG",@progbits,type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9,comdat
	.weak	type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9
	.p2align	4
type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9:
	.quad	8
	.quad	8
	.long	458021592
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C440
	.quad	0
	.quad	0
	.byte	1
	.zero	7
	.quad	go..C441
	.quad	2
	.quad	2
	.quad	go..C442
	.quad	0
	.quad	0
	.size	type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9, 128

	.type	.Lconst.264,@object
	.section	.rodata..Lconst.264,"a",@progbits
.Lconst.264:
	.asciz	"func(string, ...interface {})"
	.size	.Lconst.264, 30

	.type	go..C440,@object
	.section	.rodata.go..C440,"a",@progbits
	.p2align	3
go..C440:
	.quad	.Lconst.264
	.quad	29
	.size	go..C440, 16

	.type	go..C441,@object
	.section	.data.go..C441,"aw",@progbits
	.p2align	3
go..C441:
	.quad	string..d
	.quad	type...6.7interface.4.5
	.size	go..C441, 16

	.type	go..C442,@object
	.section	.bss.go..C442,"aw",@nobits
	.p2align	3
go..C442:
	.zero	8
	.size	go..C442, 8

	.type	go..C443,@object
	.section	.data.go..C443,"aw",@progbits
	.p2align	4
go..C443:
	.quad	go..C439
	.quad	0
	.quad	type..func.8string.3.3.3.3.6.7interface.4.5.9.8.9
	.size	go..C443, 24

	.type	pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger,@object
	.section	.rodata.pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger,"aG",@progbits,pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger,comdat
	.weak	pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger
	.p2align	3
pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger:
	.quad	type...1github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger
	.quad	github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger.Printf
	.size	pimt..interface.4Printf.0func.8string.3.3.3.3.6.7interface.4.5.9.8.9.5..github_com_ChrisRx_dungeonfs_pkg_logging.NullLogger, 16

	.type	command_line_arguments.command_line_arguments..init0..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments..init0..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments..init0..f
	.p2align	3
command_line_arguments.command_line_arguments..init0..f:
	.quad	command_line_arguments.command_line_arguments..init0
	.size	command_line_arguments.command_line_arguments..init0..f, 8

	.type	gcbits..GGGGa,@object
	.section	.rodata.gcbits..GGGGa,"aG",@progbits,gcbits..GGGGa,comdat
	.weak	gcbits..GGGGa
gcbits..GGGGa:
	.ascii	"\377\377\017"
	.size	gcbits..GGGGa, 3

	.type	gcbits..ppppa,@object
	.section	.rodata.gcbits..ppppa,"aG",@progbits,gcbits..ppppa,comdat
	.weak	gcbits..ppppa
gcbits..ppppa:
	.ascii	"\357\275\007"
	.size	gcbits..ppppa, 3

	.type	gcbits..pppppppppa,@object
	.section	.rodata.gcbits..pppppppppa,"aG",@progbits,gcbits..pppppppppa,comdat
	.weak	gcbits..pppppppppa
gcbits..pppppppppa:
	.ascii	"\357\275\367\336{\017"
	.size	gcbits..pppppppppa, 6

	.type	gcbits..ppppp,@object
	.section	.rodata.gcbits..ppppp,"aG",@progbits,gcbits..ppppp,comdat
	.weak	gcbits..ppppp
gcbits..ppppp:
	.ascii	"\357\275\367"
	.size	gcbits..ppppp, 3

	.type	gcbits..GGGGGGGb,@object
	.section	.rodata.gcbits..GGGGGGGb,"aG",@progbits,gcbits..GGGGGGGb,comdat
	.weak	gcbits..GGGGGGGb
gcbits..GGGGGGGb:
	.ascii	"\377\377\377\377\017"
	.size	gcbits..GGGGGGGb, 5

	.type	gcbits..GGGGGGGa,@object
	.section	.rodata.gcbits..GGGGGGGa,"aG",@progbits,gcbits..GGGGGGGa,comdat
	.weak	gcbits..GGGGGGGa
gcbits..GGGGGGGa:
	.ascii	"\377\377\377\377\007"
	.size	gcbits..GGGGGGGa, 5

	.type	gcbits..pppa,@object
	.section	.rodata.gcbits..pppa,"aG",@progbits,gcbits..pppa,comdat
	.weak	gcbits..pppa
gcbits..pppa:
	.ascii	"\357="
	.size	gcbits..pppa, 2

	.type	go..C0,@object
	.section	.data.go..C0,"aw",@progbits
	.p2align	4
go..C0:
	.quad	0
	.quad	97
	.quad	command_line_arguments.defaultAttrs
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.srcTmpl
	.quad	16
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.PkgLogger
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C21
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C23
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C24
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C29
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C31
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C32
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C37
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C39
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C40
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C41
	.quad	160
	.quad	160
	.quad	gcbits..GGGGa
	.quad	go..C69
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C101
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C106
	.quad	200
	.quad	192
	.quad	gcbits..ppppp
	.quad	go..C112
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C118
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C120
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C121
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C122
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C127
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C128
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C129
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C138
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C150
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C160
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C167
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C168
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C172
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C176
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C180
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C184
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C190
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C194
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C195
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C199
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C200
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C203
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C204
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C205
	.quad	288
	.quad	288
	.quad	gcbits..GGGGGGGb
	.quad	go..C211
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C212
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C214
	.quad	32
	.quad	32
	.quad	gcbits..pa
	.quad	go..C215
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C218
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C227
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C235
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C247
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C248
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C250
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C251
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C255
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C257
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C258
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C262
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C265
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C267
	.quad	160
	.quad	160
	.quad	gcbits..GGGGa
	.quad	go..C272
	.quad	32
	.quad	32
	.quad	gcbits..pa
	.quad	go..C273
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C276
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C277
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C279
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C280
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C283
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C284
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C287
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C288
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C290
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C291
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C294
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C295
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C297
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C298
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C301
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C302
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C306
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C308
	.quad	280
	.quad	280
	.quad	gcbits..GGGGGGGa
	.quad	go..C323
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C335
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C340
	.quad	32
	.quad	32
	.quad	gcbits..pa
	.quad	go..C341
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C344
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C345
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C348
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C349
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C353
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C355
	.quad	160
	.quad	160
	.quad	gcbits..GGGGa
	.quad	go..C379
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C391
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C392
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C393
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C400
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C412
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C427
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C441
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C443
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.size	go..C0, 3120

	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"llvm-goc"
.Linfo_string1:
	.asciz	"./assets.go"
.Linfo_string2:
	.asciz	"/home/wangcong/go_path/src/github.com/ChrisRx/dungeonfs/pkg/game/assets"
.Linfo_string3:
	.asciz	"command_line_arguments.defaultAttrs"
.Linfo_string4:
	.asciz	"count"
.Linfo_string5:
	.asciz	"int"
.Linfo_string6:
	.asciz	"flags"
.Linfo_string7:
	.asciz	"uint8"
.Linfo_string8:
	.asciz	"B"
.Linfo_string9:
	.asciz	"noverflow"
.Linfo_string10:
	.asciz	"uint16"
.Linfo_string11:
	.asciz	"hash0"
.Linfo_string12:
	.asciz	"uint32"
.Linfo_string13:
	.asciz	"buckets"
.Linfo_string14:
	.asciz	"void"
.Linfo_string15:
	.asciz	"oldbuckets"
.Linfo_string16:
	.asciz	"nevacuate"
.Linfo_string17:
	.asciz	"uintptr"
.Linfo_string18:
	.asciz	"extra"
.Linfo_string19:
	.asciz	"runtime.hmap"
.Linfo_string20:
	.asciz	"runtime.writeBarrier"
.Linfo_string21:
	.asciz	"command_line_arguments.PkgLogger"
.Linfo_string22:
	.asciz	"__methods"
.Linfo_string23:
	.asciz	"__type_descriptor"
.Linfo_string24:
	.asciz	"size"
.Linfo_string25:
	.asciz	"ptrdata"
.Linfo_string26:
	.asciz	"hash"
.Linfo_string27:
	.asciz	"kind"
.Linfo_string28:
	.asciz	"align"
.Linfo_string29:
	.asciz	"fieldAlign"
.Linfo_string30:
	.asciz	"hashfn"
.Linfo_string31:
	.asciz	"code"
.Linfo_string32:
	.asciz	"__go_descriptor"
.Linfo_string33:
	.asciz	"equalfn"
.Linfo_string34:
	.asciz	"bool"
.Linfo_string35:
	.asciz	"gcdata"
.Linfo_string36:
	.asciz	"string"
.Linfo_string37:
	.asciz	"__data"
.Linfo_string38:
	.asciz	"__length"
.Linfo_string39:
	.asciz	"uncommonType"
.Linfo_string40:
	.asciz	"name"
.Linfo_string41:
	.asciz	"pkgPath"
.Linfo_string42:
	.asciz	"methods"
.Linfo_string43:
	.asciz	"__values"
.Linfo_string44:
	.asciz	"mtyp"
.Linfo_string45:
	.asciz	"typ"
.Linfo_string46:
	.asciz	"tfn"
.Linfo_string47:
	.asciz	"method"
.Linfo_string48:
	.asciz	"__count"
.Linfo_string49:
	.asciz	"__capacity"
.Linfo_string50:
	.asciz	"struct{*method,int,int}"
.Linfo_string51:
	.asciz	"ptrToThis"
.Linfo_string52:
	.asciz	"_type"
.Linfo_string53:
	.asciz	"Printf"
.Linfo_string54:
	.asciz	"__object"
.Linfo_string55:
	.asciz	"Handle"
.Linfo_string56:
	.asciz	"struct{*Handle,int,int}"
.Linfo_string57:
	.asciz	"struct{*_type,*func(*void,string,struct{*Handle,int,int})void}"
.Linfo_string58:
	.asciz	".command-line-arguments.logger"
.Linfo_string59:
	.asciz	"command_line_arguments.srcTmpl"
.Linfo_string60:
	.asciz	"command_line_arguments.Component.Bases"
.Linfo_string61:
	.asciz	"assets.Bases..1command_line_arguments.Component"
.Linfo_string62:
	.asciz	"struct{**Component,int,int}"
.Linfo_string63:
	.asciz	"c"
.Linfo_string64:
	.asciz	"t"
.Linfo_string65:
	.asciz	"ComponentType"
.Linfo_string66:
	.asciz	"attrs"
.Linfo_string67:
	.asciz	"base"
.Linfo_string68:
	.asciz	"bases"
.Linfo_string69:
	.asciz	"Component"
.Linfo_string70:
	.asciz	"command_line_arguments.Component.Name"
.Linfo_string71:
	.asciz	"assets.Name..1command_line_arguments.Component"
.Linfo_string72:
	.asciz	"assets.parseBaseType"
.Linfo_string73:
	.asciz	"s"
.Linfo_string74:
	.asciz	"$ret6"
.Linfo_string75:
	.asciz	"assets.parseStringSlice"
.Linfo_string76:
	.asciz	"struct{*string,int,int}"
.Linfo_string77:
	.asciz	"v"
.Linfo_string78:
	.asciz	"ok"
.Linfo_string79:
	.asciz	"vv"
.Linfo_string80:
	.asciz	"command_line_arguments.Component.Base"
.Linfo_string81:
	.asciz	"assets.Base..1command_line_arguments.Component"
.Linfo_string82:
	.asciz	"command_line_arguments.Component.Type"
.Linfo_string83:
	.asciz	"assets.Type..1command_line_arguments.Component"
.Linfo_string84:
	.asciz	"command_line_arguments.Components.LookupBaseType"
.Linfo_string85:
	.asciz	"assets.LookupBaseType.command_line_arguments.Components"
.Linfo_string86:
	.asciz	"UNNAMED"
.Linfo_string87:
	.asciz	"struct{*Component,bool}"
.Linfo_string88:
	.asciz	"command_line_arguments..import"
.Linfo_string89:
	.asciz	"assets.command_line_arguments..import"
.Linfo_string90:
	.asciz	"command_line_arguments.Resources.AddProperty..stub"
.Linfo_string91:
	.asciz	"assets.AddProperty..stub.command_line_arguments.Resources"
.Linfo_string92:
	.asciz	"Error"
.Linfo_string93:
	.asciz	"struct{*_type,*func(*void)string}"
.Linfo_string94:
	.asciz	"error"
.Linfo_string95:
	.asciz	"command_line_arguments.Resources.GetProperties..stub"
.Linfo_string96:
	.asciz	"assets.GetProperties..stub.command_line_arguments.Resources"
.Linfo_string97:
	.asciz	"struct{CommentMap,bool}"
.Linfo_string98:
	.asciz	"command_line_arguments.Resources.Root..stub"
.Linfo_string99:
	.asciz	"assets.Root..stub.command_line_arguments.Resources"
.Linfo_string100:
	.asciz	"node"
.Linfo_string101:
	.asciz	"inode"
.Linfo_string102:
	.asciz	"uint64"
.Linfo_string103:
	.asciz	"mode"
.Linfo_string104:
	.asciz	"FileMode"
.Linfo_string105:
	.asciz	"path"
.Linfo_string106:
	.asciz	"metadata"
.Linfo_string107:
	.asciz	"parent"
.Linfo_string108:
	.asciz	"Node"
.Linfo_string109:
	.asciz	"nodes"
.Linfo_string110:
	.asciz	".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node"
.Linfo_string111:
	.asciz	"Directory"
.Linfo_string112:
	.asciz	"command_line_arguments.Resources.visit..stub"
.Linfo_string113:
	.asciz	"assets.visit..stub.command_line_arguments.Resources"
.Linfo_string114:
	.asciz	"command_line_arguments.Resources.GetObject"
.Linfo_string115:
	.asciz	"assets.GetObject..1command_line_arguments.Resources"
.Linfo_string116:
	.asciz	"Attr"
.Linfo_string117:
	.asciz	"Deadline"
.Linfo_string118:
	.asciz	"deadline"
.Linfo_string119:
	.asciz	"wall"
.Linfo_string120:
	.asciz	"ext"
.Linfo_string121:
	.asciz	"int64"
.Linfo_string122:
	.asciz	"loc"
.Linfo_string123:
	.asciz	"zone"
.Linfo_string124:
	.asciz	"offset"
.Linfo_string125:
	.asciz	"isDST"
.Linfo_string126:
	.asciz	".time.zone"
.Linfo_string127:
	.asciz	"struct{*.time.zone,int,int}"
.Linfo_string128:
	.asciz	"tx"
.Linfo_string129:
	.asciz	"when"
.Linfo_string130:
	.asciz	"index"
.Linfo_string131:
	.asciz	"isstd"
.Linfo_string132:
	.asciz	"isutc"
.Linfo_string133:
	.asciz	".time.zoneTrans"
.Linfo_string134:
	.asciz	"struct{*.time.zoneTrans,int,int}"
.Linfo_string135:
	.asciz	"cacheStart"
.Linfo_string136:
	.asciz	"cacheEnd"
.Linfo_string137:
	.asciz	"cacheZone"
.Linfo_string138:
	.asciz	"Location"
.Linfo_string139:
	.asciz	"Time"
.Linfo_string140:
	.asciz	"struct{Time,bool}"
.Linfo_string141:
	.asciz	"Done"
.Linfo_string142:
	.asciz	"__go_channel"
.Linfo_string143:
	.asciz	"Err"
.Linfo_string144:
	.asciz	"Value"
.Linfo_string145:
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,Handle)Handle}"
.Linfo_string146:
	.asciz	"Context"
.Linfo_string147:
	.asciz	"Valid"
.Linfo_string148:
	.asciz	"Duration"
.Linfo_string149:
	.asciz	"Inode"
.Linfo_string150:
	.asciz	"Size"
.Linfo_string151:
	.asciz	"Blocks"
.Linfo_string152:
	.asciz	"Atime"
.Linfo_string153:
	.asciz	"Mtime"
.Linfo_string154:
	.asciz	"Ctime"
.Linfo_string155:
	.asciz	"Crtime"
.Linfo_string156:
	.asciz	"Mode"
.Linfo_string157:
	.asciz	"Nlink"
.Linfo_string158:
	.asciz	"Uid"
.Linfo_string159:
	.asciz	"Gid"
.Linfo_string160:
	.asciz	"Rdev"
.Linfo_string161:
	.asciz	"Flags"
.Linfo_string162:
	.asciz	"BlockSize"
.Linfo_string163:
	.asciz	"Children"
.Linfo_string164:
	.asciz	"Delete"
.Linfo_string165:
	.asciz	"Directories"
.Linfo_string166:
	.asciz	"struct{*Node,int,int}"
.Linfo_string167:
	.asciz	"Exists"
.Linfo_string168:
	.asciz	"Files"
.Linfo_string169:
	.asciz	"Get"
.Linfo_string170:
	.asciz	"struct{Node,bool}"
.Linfo_string171:
	.asciz	"Iter"
.Linfo_string172:
	.asciz	"Set"
.Linfo_string173:
	.asciz	"struct{*_type,*func(*void,string)void,*func(*void)struct{*Node,int,int},*func(*void,string)bool,*func(*void)struct{*Node,int,int},*func(*void,string)struct{Node,bool},*func(*void)struct{*Node,int,int},*func(*void,string,Node)void}"
.Linfo_string174:
	.asciz	"Nodes"
.Linfo_string175:
	.asciz	"Content"
.Linfo_string176:
	.asciz	"struct{*uint8,int,int}"
.Linfo_string177:
	.asciz	"Entry"
.Linfo_string178:
	.asciz	"Type"
.Linfo_string179:
	.asciz	"DirentType"
.Linfo_string180:
	.asciz	"Name"
.Linfo_string181:
	.asciz	"Dirent"
.Linfo_string182:
	.asciz	"IsDir"
.Linfo_string183:
	.asciz	"IsFile"
.Linfo_string184:
	.asciz	"MetaData"
.Linfo_string185:
	.asciz	"struct{Handle,bool}"
.Linfo_string186:
	.asciz	"GetBool"
.Linfo_string187:
	.asciz	"GetBytes"
.Linfo_string188:
	.asciz	"GetString"
.Linfo_string189:
	.asciz	"struct{*_type,*func(*void,string)struct{Handle,bool},*func(*void,string)bool,*func(*void,string)struct{*uint8,int,int},*func(*void,string)string,*func(*void)CommentMap,*func(*void,string,Handle)void}"
.Linfo_string190:
	.asciz	"NodeMetaData"
.Linfo_string191:
	.asciz	"New"
.Linfo_string192:
	.asciz	"NodeType"
.Linfo_string193:
	.asciz	"Parent"
.Linfo_string194:
	.asciz	"Path"
.Linfo_string195:
	.asciz	"struct{*_type,*func(*void,Context,*Attr)error,*func(*void)Nodes,*func(*void)struct{*uint8,int,int},*func(*void)bool,*func(*void)Dirent,*func(*void)bool,*func(*void)bool,*func(*void)NodeMetaData,*func(*void)string,*func(*void,NodeType,string)Node,*func(*void,struct{*Node,int,int})Node,*func(*void,struct{*string,int,int})string}"
.Linfo_string196:
	.asciz	"Entity"
.Linfo_string197:
	.asciz	"command_line_arguments.Resources.LoadDir"
.Linfo_string198:
	.asciz	"assets.LoadDir..1command_line_arguments.Resources"
.Linfo_string199:
	.asciz	"struct{*Directory,error}"
.Linfo_string200:
	.asciz	"command_line_arguments.Resources.LoadFile"
.Linfo_string201:
	.asciz	"assets.LoadFile..1command_line_arguments.Resources"
.Linfo_string202:
	.asciz	"command_line_arguments.Level.AddProperty"
.Linfo_string203:
	.asciz	"assets.AddProperty..1command_line_arguments.Level"
.Linfo_string204:
	.asciz	"command_line_arguments.Level.GetProperties"
.Linfo_string205:
	.asciz	"assets.GetProperties..1command_line_arguments.Level"
.Linfo_string206:
	.asciz	"command_line_arguments.Level.Root"
.Linfo_string207:
	.asciz	"assets.Root..1command_line_arguments.Level"
.Linfo_string208:
	.asciz	"command_line_arguments.Level.visit"
.Linfo_string209:
	.asciz	"assets.visit..1command_line_arguments.Level"
.Linfo_string210:
	.asciz	"command_line_arguments.New"
.Linfo_string211:
	.asciz	"assets.New"
.Linfo_string212:
	.asciz	"components"
.Linfo_string213:
	.asciz	"entities"
.Linfo_string214:
	.asciz	"Level"
.Linfo_string215:
	.asciz	"root"
.Linfo_string216:
	.asciz	"objects"
.Linfo_string217:
	.asciz	"paths"
.Linfo_string218:
	.asciz	"properties"
.Linfo_string219:
	.asciz	"Resources"
.Linfo_string220:
	.asciz	"command_line_arguments.LoadFromFile"
.Linfo_string221:
	.asciz	"assets.LoadFromFile"
.Linfo_string222:
	.asciz	"assets.parseAttrs"
.Linfo_string223:
	.asciz	"command_line_arguments.NewLevel"
.Linfo_string224:
	.asciz	"assets.NewLevel"
.Linfo_string225:
	.asciz	"assets.func1"
.Linfo_string226:
	.asciz	"int8"
.Linfo_string227:
	.asciz	"_"
.Linfo_string228:
	.asciz	".reflect.method"
.Linfo_string229:
	.asciz	"struct{*.reflect.method,int,int}"
.Linfo_string230:
	.asciz	".reflect.uncommonType"
.Linfo_string231:
	.asciz	".reflect.rtype"
.Linfo_string232:
	.asciz	"ptr"
.Linfo_string233:
	.asciz	"flag"
.Linfo_string234:
	.asciz	".reflect.flag"
.Linfo_string235:
	.asciz	"struct{*Value,error}"
.Linfo_string236:
	.asciz	"command_line_arguments.SetNodeAttr"
.Linfo_string237:
	.asciz	"assets.SetNodeAttr"
.Linfo_string238:
	.asciz	"command_line_arguments.command_line_arguments..init0"
.Linfo_string239:
	.asciz	"assets.command_line_arguments..init0"
.Linfo_string240:
	.asciz	"$ret2"
.Linfo_string241:
	.asciz	"$ret0"
.Linfo_string242:
	.asciz	"$ret1"
.Linfo_string243:
	.asciz	"pointer"
.Linfo_string244:
	.asciz	"$ret5"
.Linfo_string245:
	.asciz	"$ret4"
.Linfo_string246:
	.asciz	"val"
.Linfo_string247:
	.asciz	"$p10"
.Linfo_string248:
	.asciz	"$this7.pointer"
.Linfo_string249:
	.asciz	"$p8"
.Linfo_string250:
	.asciz	"$p9"
.Linfo_string251:
	.asciz	"$this7"
.Linfo_string252:
	.asciz	"$this13.pointer"
.Linfo_string253:
	.asciz	"$p14"
.Linfo_string254:
	.asciz	"$ret26"
.Linfo_string255:
	.asciz	"$this13"
.Linfo_string256:
	.asciz	"$this15.pointer"
.Linfo_string257:
	.asciz	"$this15"
.Linfo_string258:
	.asciz	"$ret27"
.Linfo_string259:
	.asciz	"$this11.pointer"
.Linfo_string260:
	.asciz	"$p12"
.Linfo_string261:
	.asciz	"$this11"
.Linfo_string262:
	.asciz	"r"
.Linfo_string263:
	.asciz	"key"
.Linfo_string264:
	.asciz	"$ret10"
.Linfo_string265:
	.asciz	"folder"
.Linfo_string266:
	.asciz	"assetFiles"
.Linfo_string267:
	.asciz	"err"
.Linfo_string268:
	.asciz	"$ret14"
.Linfo_string269:
	.asciz	"f"
.Linfo_string270:
	.asciz	"unresolved"
.Linfo_string271:
	.asciz	"n"
.Linfo_string272:
	.asciz	"k"
.Linfo_string273:
	.asciz	"File"
.Linfo_string274:
	.asciz	"l"
.Linfo_string275:
	.asciz	"$ret13"
.Linfo_string276:
	.asciz	"$ret12"
.Linfo_string277:
	.asciz	"rs"
.Linfo_string278:
	.asciz	"parts"
.Linfo_string279:
	.asciz	"attrName"
.Linfo_string280:
	.asciz	"$ret18"
.Linfo_string281:
	.asciz	"ctx"
.Linfo_string282:
	.asciz	"fset"
.Linfo_string283:
	.asciz	"mutex"
.Linfo_string284:
	.asciz	"w"
.Linfo_string285:
	.asciz	"state"
.Linfo_string286:
	.asciz	"int32"
.Linfo_string287:
	.asciz	"sema"
.Linfo_string288:
	.asciz	"Mutex"
.Linfo_string289:
	.asciz	"writerSem"
.Linfo_string290:
	.asciz	"readerSem"
.Linfo_string291:
	.asciz	"readerCount"
.Linfo_string292:
	.asciz	"readerWait"
.Linfo_string293:
	.asciz	"RWMutex"
.Linfo_string294:
	.asciz	"files"
.Linfo_string295:
	.asciz	"set"
.Linfo_string296:
	.asciz	"lines"
.Linfo_string297:
	.asciz	"struct{*int,int,int}"
.Linfo_string298:
	.asciz	"infos"
.Linfo_string299:
	.asciz	"Offset"
.Linfo_string300:
	.asciz	"Filename"
.Linfo_string301:
	.asciz	"Line"
.Linfo_string302:
	.asciz	".go/token.lineInfo"
.Linfo_string303:
	.asciz	"struct{*.go/token.lineInfo,int,int}"
.Linfo_string304:
	.asciz	"struct{**File,int,int}"
.Linfo_string305:
	.asciz	"last"
.Linfo_string306:
	.asciz	"FileSet"
.Linfo_string307:
	.asciz	"identifiers"
.Linfo_string308:
	.asciz	"returnSet"
.Linfo_string309:
	.asciz	"returnValue"
.Linfo_string310:
	.asciz	"src"
.Linfo_string311:
	.asciz	"Doc"
.Linfo_string312:
	.asciz	"List"
.Linfo_string313:
	.asciz	"Slash"
.Linfo_string314:
	.asciz	"Pos"
.Linfo_string315:
	.asciz	"Text"
.Linfo_string316:
	.asciz	"Comment"
.Linfo_string317:
	.asciz	"struct{**Comment,int,int}"
.Linfo_string318:
	.asciz	"CommentGroup"
.Linfo_string319:
	.asciz	"Package"
.Linfo_string320:
	.asciz	"NamePos"
.Linfo_string321:
	.asciz	"Obj"
.Linfo_string322:
	.asciz	"Kind"
.Linfo_string323:
	.asciz	"ObjKind"
.Linfo_string324:
	.asciz	"Decl"
.Linfo_string325:
	.asciz	"Data"
.Linfo_string326:
	.asciz	"Object"
.Linfo_string327:
	.asciz	"Ident"
.Linfo_string328:
	.asciz	"Decls"
.Linfo_string329:
	.asciz	"End"
.Linfo_string330:
	.asciz	"declNode"
.Linfo_string331:
	.asciz	"struct{*_type,*func(*void)Pos,*func(*void)Pos,*func(*void)void}"
.Linfo_string332:
	.asciz	"struct{*Decl,int,int}"
.Linfo_string333:
	.asciz	"Scope"
.Linfo_string334:
	.asciz	"Outer"
.Linfo_string335:
	.asciz	"Objects"
.Linfo_string336:
	.asciz	"Imports"
.Linfo_string337:
	.asciz	"ValuePos"
.Linfo_string338:
	.asciz	"Token"
.Linfo_string339:
	.asciz	"BasicLit"
.Linfo_string340:
	.asciz	"EndPos"
.Linfo_string341:
	.asciz	"ImportSpec"
.Linfo_string342:
	.asciz	"struct{**ImportSpec,int,int}"
.Linfo_string343:
	.asciz	"Unresolved"
.Linfo_string344:
	.asciz	"struct{**Ident,int,int}"
.Linfo_string345:
	.asciz	"Comments"
.Linfo_string346:
	.asciz	"struct{**CommentGroup,int,int}"
.Linfo_string347:
	.asciz	"$ret22"
.Linfo_string348:
	.asciz	"$ret21"
.Linfo_string349:
	.asciz	"$ret16"
.Linfo_string350:
	.asciz	"a"
.Linfo_string351:
	.asciz	"$ret7"
.Linfo_string352:
	.asciz	"$ret8"
.Linfo_string353:
	.asciz	"$ret11"
.Linfo_string354:
	.asciz	"aa"
.Linfo_string355:
	.asciz	"$ret15"
.Linfo_string356:
	.asciz	"$ret19"
.Linfo_string357:
	.asciz	"$ret23"
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0
	.quad	.Ltmp5
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Ltmp2
	.quad	.Ltmp3
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp3
	.quad	.Ltmp4
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin1
	.quad	.Ltmp10
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Lfunc_begin2
	.quad	.Ltmp16
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp13
	.quad	.Ltmp14
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp14
	.quad	.Ltmp15
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Lfunc_begin3
	.quad	.Ltmp22
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp18
	.quad	.Ltmp20
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp20
	.quad	.Ltmp21
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Lfunc_begin4
	.quad	.Ltmp28
	.short	1
	.byte	85
	.quad	.Ltmp34
	.quad	.Ltmp35
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Lfunc_begin4
	.quad	.Ltmp27
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp34
	.quad	.Ltmp36
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp26
	.quad	.Ltmp29
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp26
	.quad	.Ltmp29
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp29
	.quad	.Ltmp31
	.short	1
	.byte	81
	.quad	.Ltmp32
	.quad	.Ltmp34
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp26
	.quad	.Ltmp29
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp29
	.quad	.Ltmp30
	.short	1
	.byte	81
	.quad	.Ltmp30
	.quad	.Ltmp32
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp32
	.quad	.Ltmp34
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp32
	.quad	.Ltmp33
	.short	2
	.byte	112
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp32
	.quad	.Ltmp33
	.short	2
	.byte	112
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Lfunc_begin6
	.quad	.Ltmp41
	.short	1
	.byte	85
	.quad	.Ltmp43
	.quad	.Ltmp44
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Lfunc_begin6
	.quad	.Ltmp42
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp43
	.quad	.Ltmp45
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Lfunc_begin6
	.quad	.Ltmp42
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp43
	.quad	.Ltmp45
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp41
	.quad	.Ltmp42
	.short	5
	.byte	147
	.byte	16
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Lfunc_begin7
	.quad	.Ltmp48
	.short	1
	.byte	85
	.quad	.Ltmp50
	.quad	.Ltmp51
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Lfunc_begin7
	.quad	.Ltmp49
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp50
	.quad	.Ltmp52
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp48
	.quad	.Lfunc_end7
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp48
	.quad	.Ltmp49
	.short	5
	.byte	147
	.byte	16
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Lfunc_begin8
	.quad	.Ltmp55
	.short	1
	.byte	85
	.quad	.Ltmp57
	.quad	.Ltmp58
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp55
	.quad	.Ltmp56
	.short	5
	.byte	147
	.byte	16
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp56
	.quad	.Ltmp57
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Lfunc_begin9
	.quad	.Ltmp62
	.short	1
	.byte	85
	.quad	.Ltmp64
	.quad	.Ltmp65
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Lfunc_begin9
	.quad	.Ltmp63
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp64
	.quad	.Ltmp66
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp62
	.quad	.Ltmp63
	.short	5
	.byte	147
	.byte	16
	.byte	85
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Lfunc_begin10
	.quad	.Ltmp70
	.short	1
	.byte	85
	.quad	.Ltmp77
	.quad	.Ltmp78
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Lfunc_begin10
	.quad	.Ltmp69
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp77
	.quad	.Ltmp79
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp67
	.quad	.Ltmp71
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp71
	.quad	.Ltmp73
	.short	1
	.byte	81
	.quad	.Ltmp74
	.quad	.Ltmp76
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp72
	.quad	.Ltmp75
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp75
	.quad	.Ltmp76
	.short	8
	.byte	82
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp76
	.quad	.Ltmp77
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp75
	.quad	.Ltmp76
	.short	3
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp76
	.quad	.Ltmp77
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Lfunc_begin11
	.quad	.Ltmp80
	.short	1
	.byte	84
	.quad	.Ltmp80
	.quad	.Ltmp88
	.short	1
	.byte	86
	.quad	.Ltmp88
	.quad	.Ltmp245
	.short	2
	.byte	119
	.byte	56
	.quad	.Ltmp246
	.quad	.Lfunc_end11
	.short	2
	.byte	119
	.byte	56
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Lfunc_begin11
	.quad	.Ltmp81
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp82
	.quad	.Ltmp89
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	232
	.byte	5
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp89
	.quad	.Ltmp91
	.short	14
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	5
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp91
	.quad	.Ltmp92
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	232
	.byte	5
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp83
	.quad	.Ltmp86
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp87
	.quad	.Ltmp96
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp85
	.quad	.Ltmp87
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp96
	.quad	.Ltmp98
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp238
	.quad	.Ltmp238
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp238
	.quad	.Ltmp240
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp243
	.quad	.Ltmp243
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp243
	.quad	.Lfunc_end11
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp94
	.quad	.Ltmp95
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp95
	.quad	.Ltmp96
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp96
	.quad	.Ltmp98
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp238
	.quad	.Ltmp240
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp99
	.quad	.Ltmp157
	.short	1
	.byte	92
	.quad	.Ltmp186
	.quad	.Ltmp196
	.short	1
	.byte	92
	.quad	.Ltmp247
	.quad	.Lfunc_end11
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp104
	.quad	.Ltmp110
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp116
	.quad	.Ltmp129
	.short	1
	.byte	94
	.quad	.Ltmp249
	.quad	.Ltmp251
	.short	1
	.byte	94
	.quad	.Ltmp252
	.quad	.Ltmp254
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp118
	.quad	.Ltmp121
	.short	1
	.byte	81
	.quad	.Ltmp122
	.quad	.Ltmp126
	.short	1
	.byte	81
	.quad	.Ltmp249
	.quad	.Ltmp250
	.short	1
	.byte	81
	.quad	.Ltmp252
	.quad	.Ltmp253
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp120
	.quad	.Ltmp129
	.short	1
	.byte	93
	.quad	.Ltmp252
	.quad	.Ltmp254
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp124
	.quad	.Ltmp129
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp146
	.quad	.Ltmp147
	.short	1
	.byte	86
	.quad	.Ltmp186
	.quad	.Ltmp190
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp146
	.quad	.Ltmp147
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp146
	.quad	.Ltmp147
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp146
	.quad	.Ltmp147
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp146
	.quad	.Ltmp147
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp151
	.quad	.Ltmp153
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp153
	.quad	.Ltmp154
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp154
	.quad	.Ltmp158
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp155
	.quad	.Ltmp156
	.short	4
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.quad	.Ltmp156
	.quad	.Ltmp158
	.short	8
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp161
	.quad	.Ltmp162
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp162
	.quad	.Ltmp165
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp163
	.quad	.Ltmp164
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp164
	.quad	.Ltmp165
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp170
	.quad	.Ltmp172
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp173
	.quad	.Ltmp174
	.short	5
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp178
	.quad	.Ltmp181
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp173
	.quad	.Ltmp174
	.short	5
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp176
	.quad	.Ltmp181
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp189
	.quad	.Ltmp190
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp192
	.quad	.Ltmp193
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp193
	.quad	.Ltmp197
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp194
	.quad	.Ltmp195
	.short	4
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.quad	.Ltmp195
	.quad	.Ltmp197
	.short	8
	.byte	119
	.byte	24
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp200
	.quad	.Ltmp201
	.short	3
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp201
	.quad	.Ltmp204
	.short	6
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Ltmp202
	.quad	.Ltmp203
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp203
	.quad	.Ltmp204
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp209
	.quad	.Ltmp211
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp212
	.quad	.Ltmp213
	.short	5
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp217
	.quad	.Ltmp220
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp212
	.quad	.Ltmp213
	.short	5
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp215
	.quad	.Ltmp220
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp233
	.quad	.Ltmp234
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp234
	.quad	.Ltmp238
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp240
	.quad	.Ltmp244
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp235
	.quad	.Ltmp238
	.short	1
	.byte	86
	.quad	.Ltmp240
	.quad	.Ltmp244
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp243
	.quad	.Ltmp244
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Lfunc_begin12
	.quad	.Ltmp259
	.short	1
	.byte	85
	.quad	.Ltmp259
	.quad	.Ltmp304
	.short	1
	.byte	93
	.quad	.Ltmp305
	.quad	.Lfunc_end12
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Lfunc_begin12
	.quad	.Ltmp261
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp262
	.quad	.Ltmp263
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp263
	.quad	.Ltmp265
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp271
	.quad	.Ltmp274
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp262
	.quad	.Ltmp263
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp263
	.quad	.Ltmp265
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp271
	.quad	.Ltmp274
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp302
	.quad	.Ltmp302
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp302
	.quad	.Lfunc_end12
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Ltmp266
	.quad	.Ltmp275
	.short	1
	.byte	83
	.quad	.Ltmp277
	.quad	.Ltmp286
	.short	1
	.byte	83
	.quad	.Ltmp302
	.quad	.Ltmp303
	.short	1
	.byte	83
	.quad	.Ltmp306
	.quad	.Ltmp307
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp275
	.quad	.Ltmp277
	.short	1
	.byte	92
	.quad	.Ltmp293
	.quad	.Ltmp302
	.short	1
	.byte	92
	.quad	.Ltmp308
	.quad	.Lfunc_end12
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp279
	.quad	.Ltmp280
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp280
	.quad	.Ltmp283
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp281
	.quad	.Ltmp282
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp282
	.quad	.Ltmp288
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Ltmp290
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp291
	.quad	.Ltmp292
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp306
	.quad	.Ltmp308
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Ltmp282
	.quad	.Ltmp283
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	240
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp285
	.quad	.Ltmp288
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Ltmp290
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp291
	.quad	.Ltmp292
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp287
	.quad	.Ltmp288
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp289
	.quad	.Ltmp290
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp291
	.quad	.Ltmp292
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp287
	.quad	.Ltmp292
	.short	3
	.byte	17
	.byte	0
	.byte	159
	.quad	.Ltmp292
	.quad	.Lfunc_end12
	.short	3
	.byte	17
	.byte	1
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Ltmp294
	.quad	.Ltmp296
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp296
	.quad	.Ltmp298
	.short	1
	.byte	81
	.quad	.Ltmp308
	.quad	.Ltmp309
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Lfunc_begin13
	.quad	.Ltmp313
	.short	1
	.byte	85
	.quad	.Ltmp313
	.quad	.Ltmp390
	.short	1
	.byte	93
	.quad	.Ltmp391
	.quad	.Lfunc_end13
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Lfunc_begin13
	.quad	.Ltmp313
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp313
	.quad	.Ltmp313
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp313
	.quad	.Ltmp389
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp391
	.quad	.Lfunc_end13
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Lfunc_begin13
	.quad	.Ltmp313
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp313
	.quad	.Ltmp313
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp313
	.quad	.Ltmp316
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp316
	.quad	.Ltmp342
	.short	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp342
	.quad	.Ltmp345
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp345
	.quad	.Ltmp360
	.short	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp360
	.quad	.Ltmp362
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp362
	.quad	.Ltmp388
	.short	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp391
	.quad	.Lfunc_end13
	.short	8
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Ltmp313
	.quad	.Ltmp314
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp314
	.quad	.Ltmp317
	.short	1
	.byte	80
	.quad	.Ltmp342
	.quad	.Ltmp343
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Ltmp317
	.quad	.Ltmp318
	.short	5
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp318
	.quad	.Ltmp342
	.short	8
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp345
	.quad	.Ltmp348
	.short	8
	.byte	119
	.byte	216
	.byte	0
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp321
	.quad	.Ltmp336
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp324
	.quad	.Ltmp326
	.short	9
	.byte	82
	.byte	147
	.byte	8
	.byte	112
	.byte	8
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Ltmp334
	.quad	.Ltmp335
	.short	8
	.byte	147
	.byte	8
	.byte	117
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp337
	.quad	.Ltmp342
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	117
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp345
	.quad	.Ltmp350
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	117
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp354
	.quad	.Ltmp355
	.short	9
	.byte	83
	.byte	147
	.byte	8
	.byte	117
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp356
	.quad	.Ltmp360
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp362
	.quad	.Ltmp367
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp384
	.quad	.Ltmp388
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Ltmp338
	.quad	.Ltmp341
	.short	5
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp341
	.quad	.Ltmp342
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp345
	.quad	.Ltmp351
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp357
	.quad	.Ltmp360
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp362
	.quad	.Ltmp365
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp365
	.quad	.Ltmp372
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp339
	.quad	.Ltmp342
	.short	1
	.byte	95
	.quad	.Ltmp345
	.quad	.Ltmp360
	.short	1
	.byte	95
	.quad	.Ltmp362
	.quad	.Ltmp371
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp348
	.quad	.Ltmp349
	.short	3
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp349
	.quad	.Ltmp351
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp351
	.quad	.Ltmp356
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp353
	.quad	.Ltmp357
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp358
	.quad	.Ltmp360
	.short	1
	.byte	83
	.quad	.Ltmp362
	.quad	.Ltmp369
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp367
	.quad	.Ltmp388
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Ltmp368
	.quad	.Ltmp370
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp370
	.quad	.Ltmp374
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp387
	.quad	.Ltmp388
	.short	1
	.byte	88
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Lfunc_begin14
	.quad	.Ltmp395
	.short	1
	.byte	85
	.quad	.Ltmp401
	.quad	.Ltmp402
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Lfunc_begin14
	.quad	.Ltmp394
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp401
	.quad	.Ltmp403
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp392
	.quad	.Ltmp396
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp396
	.quad	.Ltmp398
	.short	1
	.byte	81
	.quad	.Ltmp399
	.quad	.Ltmp401
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp392
	.quad	.Ltmp396
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp396
	.quad	.Ltmp397
	.short	1
	.byte	81
	.quad	.Ltmp397
	.quad	.Ltmp399
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp399
	.quad	.Ltmp401
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp399
	.quad	.Ltmp400
	.short	2
	.byte	112
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Ltmp399
	.quad	.Ltmp400
	.short	2
	.byte	112
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Lfunc_begin15
	.quad	.Ltmp410
	.short	1
	.byte	85
	.quad	.Ltmp412
	.quad	.Ltmp413
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp406
	.quad	.Ltmp411
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Lfunc_begin16
	.quad	.Ltmp415
	.short	1
	.byte	85
	.quad	.Ltmp415
	.quad	.Ltmp416
	.short	3
	.byte	119
	.byte	240
	.byte	0
	.quad	.Ltmp416
	.quad	.Ltmp419
	.short	1
	.byte	95
	.quad	.Ltmp420
	.quad	.Ltmp438
	.short	1
	.byte	95
	.quad	.Ltmp481
	.quad	.Ltmp494
	.short	1
	.byte	95
	.quad	.Ltmp505
	.quad	.Lfunc_end16
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Lfunc_begin16
	.quad	.Ltmp415
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp415
	.quad	.Ltmp415
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp415
	.quad	.Ltmp417
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp417
	.quad	.Ltmp418
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp418
	.quad	.Ltmp493
	.short	10
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.quad	.Ltmp495
	.quad	.Lfunc_end16
	.short	10
	.byte	119
	.byte	248
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	1
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp422
	.quad	.Ltmp423
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp423
	.quad	.Ltmp426
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp424
	.quad	.Ltmp425
	.short	4
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp425
	.quad	.Ltmp427
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp424
	.quad	.Ltmp425
	.short	4
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp425
	.quad	.Ltmp431
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp431
	.quad	.Ltmp481
	.short	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.quad	.Ltmp481
	.quad	.Ltmp492
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp495
	.quad	.Lfunc_end16
	.short	7
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp429
	.quad	.Ltmp432
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp432
	.quad	.Ltmp443
	.short	1
	.byte	80
	.quad	.Ltmp505
	.quad	.Ltmp506
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Ltmp430
	.quad	.Ltmp434
	.short	11
	.byte	147
	.byte	16
	.byte	119
	.byte	208
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp434
	.quad	.Ltmp436
	.short	14
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp436
	.quad	.Ltmp437
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp505
	.quad	.Ltmp507
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp508
	.quad	.Ltmp509
	.short	15
	.byte	86
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.byte	119
	.byte	208
	.byte	1
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp439
	.quad	.Ltmp440
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp440
	.quad	.Ltmp443
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Ltmp441
	.quad	.Ltmp443
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp443
	.quad	.Ltmp446
	.short	1
	.byte	80
	.quad	.Ltmp447
	.quad	.Ltmp448
	.short	1
	.byte	80
	.quad	.Ltmp497
	.quad	.Ltmp498
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Ltmp460
	.quad	.Ltmp461
	.short	3
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp461
	.quad	.Ltmp474
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp461
	.quad	.Ltmp463
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp463
	.quad	.Ltmp468
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp465
	.quad	.Ltmp466
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp466
	.quad	.Ltmp467
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp467
	.quad	.Ltmp469
	.short	7
	.byte	83
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp469
	.quad	.Ltmp470
	.short	7
	.byte	95
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp470
	.quad	.Ltmp471
	.short	8
	.byte	119
	.byte	40
	.byte	147
	.byte	8
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.quad	.Ltmp472
	.quad	.Ltmp474
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp484
	.quad	.Ltmp485
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp490
	.quad	.Ltmp491
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp491
	.quad	.Ltmp492
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp487
	.quad	.Ltmp488
	.short	3
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp488
	.quad	.Ltmp490
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Ltmp513
	.quad	.Ltmp514
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Ltmp513
	.quad	.Ltmp514
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Lfunc_begin18
	.quad	.Ltmp516
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp516
	.quad	.Ltmp516
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp516
	.quad	.Ltmp519
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp519
	.quad	.Ltmp520
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp520
	.quad	.Ltmp521
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Ltmp517
	.quad	.Ltmp521
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Ltmp518
	.quad	.Ltmp522
	.short	2
	.byte	119
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Lfunc_begin19
	.quad	.Ltmp524
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp524
	.quad	.Ltmp524
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp524
	.quad	.Ltmp533
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp552
	.quad	.Lfunc_end19
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp525
	.quad	.Ltmp547
	.short	1
	.byte	83
	.quad	.Ltmp548
	.quad	.Ltmp550
	.short	1
	.byte	83
	.quad	.Ltmp551
	.quad	.Lfunc_end19
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp525
	.quad	.Ltmp547
	.short	1
	.byte	83
	.quad	.Ltmp548
	.quad	.Ltmp550
	.short	1
	.byte	83
	.quad	.Ltmp551
	.quad	.Lfunc_end19
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Ltmp526
	.quad	.Ltmp527
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp527
	.quad	.Ltmp531
	.short	1
	.byte	80
	.quad	.Ltmp552
	.quad	.Ltmp553
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp529
	.quad	.Ltmp531
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp535
	.quad	.Ltmp536
	.short	3
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp536
	.quad	.Ltmp539
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Ltmp537
	.quad	.Ltmp539
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp539
	.quad	.Ltmp541
	.short	1
	.byte	80
	.quad	.Ltmp548
	.quad	.Ltmp549
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Lfunc_begin20
	.quad	.Ltmp560
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp560
	.quad	.Ltmp560
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp560
	.quad	.Ltmp562
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Lfunc_begin20
	.quad	.Ltmp560
	.short	1
	.byte	81
	.quad	.Ltmp560
	.quad	.Ltmp563
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Ltmp561
	.quad	.Ltmp564
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Ltmp567
	.quad	.Ltmp568
	.short	2
	.byte	119
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Lfunc_begin22
	.quad	.Ltmp570
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp570
	.quad	.Ltmp570
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp570
	.quad	.Ltmp576
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp578
	.quad	.Ltmp581
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp588
	.quad	.Ltmp590
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp592
	.quad	.Ltmp595
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp596
	.quad	.Lfunc_end22
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Lfunc_begin22
	.quad	.Ltmp570
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp570
	.quad	.Ltmp570
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp570
	.quad	.Ltmp587
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp588
	.quad	.Lfunc_end22
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Lfunc_begin22
	.quad	.Ltmp570
	.short	1
	.byte	88
	.quad	.Ltmp570
	.quad	.Ltmp577
	.short	1
	.byte	83
	.quad	.Ltmp578
	.quad	.Ltmp582
	.short	1
	.byte	83
	.quad	.Ltmp588
	.quad	.Ltmp591
	.short	1
	.byte	83
	.quad	.Ltmp592
	.quad	.Ltmp594
	.short	1
	.byte	83
	.quad	.Ltmp596
	.quad	.Lfunc_end22
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Ltmp585
	.quad	.Lfunc_end22
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.ascii	"\264B"
	.byte	25
	.byte	17
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	2
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	3
	.byte	15
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	4
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	5
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	6
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	62
	.byte	11
	.byte	11
	.byte	11
	.byte	0
	.byte	0
	.byte	7
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	8
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	9
	.byte	21
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	10
	.byte	5
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	11
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	12
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	13
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	14
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	15
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	16
	.byte	11
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	17
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	18
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	19
	.byte	46
	.byte	1
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	20
	.byte	5
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	21
	.byte	11
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	22
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	23
	.byte	46
	.byte	1
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	24
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	25
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	26
	.byte	11
	.byte	1
	.byte	0
	.byte	0
	.byte	27
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	28
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	29
	.byte	19
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	30
	.byte	21
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	9093
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	22
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2

	.quad	0
	.long	.Ldebug_ranges19
	.byte	2
	.long	.Linfo_string3
	.long	57
	.byte	2
	.byte	65
	.long	.Linfo_string3
	.byte	3
	.long	62
	.byte	4
	.long	.Linfo_string19
	.byte	48
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string4
	.long	189
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string6
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string8
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	9
	.byte	5
	.long	.Linfo_string9
	.long	203
	.byte	1
	.byte	1
	.byte	2
	.byte	10
	.byte	5
	.long	.Linfo_string11
	.long	210
	.byte	1
	.byte	1
	.byte	4
	.byte	12
	.byte	5
	.long	.Linfo_string13
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string15
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string16
	.long	229
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string18
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	0
	.byte	6
	.long	.Linfo_string5
	.byte	5
	.byte	8
	.byte	6
	.long	.Linfo_string7
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string10
	.byte	7
	.byte	2
	.byte	6
	.long	.Linfo_string12
	.byte	7
	.byte	4
	.byte	3
	.long	222
	.byte	6
	.long	.Linfo_string14
	.byte	0
	.byte	0
	.byte	6
	.long	.Linfo_string17
	.byte	7
	.byte	8
	.byte	7
	.long	.Linfo_string20
	.long	210

	.byte	1
	.byte	1
	.long	.Linfo_string20
	.byte	7
	.long	.Linfo_string21
	.long	266

	.byte	4
	.byte	11
	.long	.Linfo_string21
	.byte	4
	.long	.Linfo_string58
	.byte	16
	.byte	4
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	302
	.byte	4
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	4
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	307
	.byte	8
	.long	.Linfo_string57
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	3
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string53
	.long	844
	.byte	3
	.byte	7
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	346
	.byte	4
	.long	.Linfo_string52
	.byte	72
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string24
	.long	229
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string25
	.long	229
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string26
	.long	210
	.byte	1
	.byte	1
	.byte	4
	.byte	16
	.byte	5
	.long	.Linfo_string27
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	20
	.byte	5
	.long	.Linfo_string28
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	21
	.byte	5
	.long	.Linfo_string29
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.byte	5
	.long	.Linfo_string30
	.long	512
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string33
	.long	561
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string35
	.long	617
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string36
	.long	622
	.byte	1
	.byte	1
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string39
	.long	663
	.byte	1
	.byte	1
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string51
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	64
	.byte	0
	.byte	3
	.long	517
	.byte	4
	.long	.Linfo_string32
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	540
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	545
	.byte	9
	.long	229
	.byte	10
	.long	217
	.byte	10
	.long	229
	.byte	0
	.byte	3
	.long	566
	.byte	4
	.long	.Linfo_string32
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	589
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	594
	.byte	9
	.long	610
	.byte	10
	.long	217
	.byte	10
	.long	217
	.byte	0
	.byte	6
	.long	.Linfo_string34
	.byte	7
	.byte	1
	.byte	3
	.long	196
	.byte	3
	.long	627
	.byte	4
	.long	.Linfo_string36
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string37
	.long	617
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string38
	.long	189
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	668
	.byte	4
	.long	.Linfo_string39
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string40
	.long	622
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string41
	.long	622
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string42
	.long	717
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	8
	.long	.Linfo_string50
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	764
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	769
	.byte	4
	.long	.Linfo_string47
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string40
	.long	622
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string41
	.long	622
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string44
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string45
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string46
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	0
	.byte	3
	.long	849
	.byte	9
	.long	222
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	10
	.long	870
	.byte	0
	.byte	8
	.long	.Linfo_string56
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	917
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	922
	.byte	4
	.long	.Linfo_string55
	.byte	16
	.byte	2
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	2
	.long	.Linfo_string59
	.long	627
	.byte	5
	.byte	82
	.long	.Linfo_string59
	.byte	11
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	1
	.byte	87
	.long	.Linfo_string80
	.long	.Linfo_string81
	.byte	2
	.byte	35
	.long	627

	.byte	12
	.long	.Ldebug_loc0
	.long	.Linfo_string63
	.byte	2
	.byte	35
	.long	1866
	.byte	13
	.long	.Ldebug_loc1
	.long	.Linfo_string240
	.byte	2
	.byte	35
	.long	627
	.byte	0
	.byte	14
	.quad	.Lfunc_begin1
	.long	.Lfunc_end1-.Lfunc_begin1
	.byte	1
	.byte	87
	.long	1791
	.byte	15
	.long	.Ldebug_loc2
	.long	1807
	.byte	0
	.byte	14
	.quad	.Lfunc_begin2
	.long	.Lfunc_end2-.Lfunc_begin2
	.byte	1
	.byte	87
	.long	1953
	.byte	15
	.long	.Ldebug_loc3
	.long	1969
	.byte	13
	.long	.Ldebug_loc4
	.long	.Linfo_string241
	.byte	2
	.byte	33
	.long	627
	.byte	0
	.byte	11
	.quad	.Lfunc_begin3
	.long	.Lfunc_end3-.Lfunc_begin3
	.byte	1
	.byte	87
	.long	.Linfo_string82
	.long	.Linfo_string83
	.byte	2
	.byte	34
	.long	1946

	.byte	12
	.long	.Ldebug_loc5
	.long	.Linfo_string63
	.byte	2
	.byte	34
	.long	1866
	.byte	13
	.long	.Ldebug_loc6
	.long	.Linfo_string242
	.byte	2
	.byte	34
	.long	1946
	.byte	0
	.byte	11
	.quad	.Lfunc_begin4
	.long	.Lfunc_end4-.Lfunc_begin4
	.byte	1
	.byte	87
	.long	.Linfo_string84
	.long	.Linfo_string85
	.byte	2
	.byte	40
	.long	4588

	.byte	12
	.long	.Ldebug_loc7
	.long	.Linfo_string243
	.byte	2
	.byte	40
	.long	7541
	.byte	12
	.long	.Ldebug_loc8
	.long	.Linfo_string64
	.byte	2
	.byte	40
	.long	627
	.byte	13
	.long	.Ldebug_loc9
	.long	.Linfo_string63
	.byte	2
	.byte	40
	.long	57
	.byte	13
	.long	.Ldebug_loc11
	.long	.Linfo_string244
	.byte	2
	.byte	40
	.long	610
	.byte	13
	.long	.Ldebug_loc12
	.long	.Linfo_string245
	.byte	2
	.byte	40
	.long	1866
	.byte	16
	.long	.Ldebug_ranges0
	.byte	13
	.long	.Ldebug_loc10
	.long	.Linfo_string78
	.byte	2
	.byte	41
	.long	610
	.byte	13
	.long	.Ldebug_loc13
	.long	.Linfo_string246
	.byte	2
	.byte	41
	.long	1866
	.byte	0
	.byte	0
	.byte	17
	.quad	.Lfunc_begin5
	.long	.Lfunc_end5-.Lfunc_begin5
	.byte	1
	.byte	87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.byte	2
	.byte	1
	.long	222

	.byte	11
	.quad	.Lfunc_begin6
	.long	.Lfunc_end6-.Lfunc_begin6
	.byte	1
	.byte	87
	.long	.Linfo_string90
	.long	.Linfo_string91
	.byte	5
	.byte	87
	.long	4622

	.byte	12
	.long	.Ldebug_loc14
	.long	.Linfo_string248
	.byte	5
	.byte	87
	.long	6897
	.byte	12
	.long	.Ldebug_loc15
	.long	.Linfo_string249
	.byte	5
	.byte	87
	.long	4890
	.byte	12
	.long	.Ldebug_loc16
	.long	.Linfo_string250
	.byte	5
	.byte	87
	.long	627
	.byte	18
	.byte	2
	.byte	145
	.byte	32
	.long	.Linfo_string247
	.byte	5
	.byte	87
	.long	922
	.byte	13
	.long	.Ldebug_loc17
	.long	.Linfo_string251
	.byte	5
	.byte	87
	.long	6902
	.byte	0
	.byte	11
	.quad	.Lfunc_begin7
	.long	.Lfunc_end7-.Lfunc_begin7
	.byte	1
	.byte	87
	.long	.Linfo_string95
	.long	.Linfo_string96
	.byte	5
	.byte	122
	.long	4713

	.byte	12
	.long	.Ldebug_loc18
	.long	.Linfo_string252
	.byte	5
	.byte	122
	.long	6897
	.byte	12
	.long	.Ldebug_loc19
	.long	.Linfo_string253
	.byte	5
	.byte	122
	.long	627
	.byte	13
	.long	.Ldebug_loc20
	.long	.Linfo_string254
	.byte	5
	.byte	122
	.long	610
	.byte	13
	.long	.Ldebug_loc21
	.long	.Linfo_string255
	.byte	5
	.byte	122
	.long	6902
	.byte	0
	.byte	11
	.quad	.Lfunc_begin8
	.long	.Lfunc_end8-.Lfunc_begin8
	.byte	1
	.byte	87
	.long	.Linfo_string98
	.long	.Linfo_string99
	.byte	5
	.byte	34
	.long	4747

	.byte	12
	.long	.Ldebug_loc22
	.long	.Linfo_string256
	.byte	5
	.byte	34
	.long	6897
	.byte	13
	.long	.Ldebug_loc23
	.long	.Linfo_string257
	.byte	5
	.byte	34
	.long	6902
	.byte	13
	.long	.Ldebug_loc24
	.long	.Linfo_string258
	.byte	5
	.byte	34
	.long	4747
	.byte	0
	.byte	11
	.quad	.Lfunc_begin9
	.long	.Lfunc_end9-.Lfunc_begin9
	.byte	1
	.byte	87
	.long	.Linfo_string112
	.long	.Linfo_string113
	.byte	5
	.byte	54
	.long	222

	.byte	12
	.long	.Ldebug_loc25
	.long	.Linfo_string259
	.byte	5
	.byte	54
	.long	6897
	.byte	12
	.long	.Ldebug_loc26
	.long	.Linfo_string260
	.byte	5
	.byte	54
	.long	4890
	.byte	13
	.long	.Ldebug_loc27
	.long	.Linfo_string261
	.byte	5
	.byte	54
	.long	6902
	.byte	0
	.byte	11
	.quad	.Lfunc_begin10
	.long	.Lfunc_end10-.Lfunc_begin10
	.byte	1
	.byte	87
	.long	.Linfo_string114
	.long	.Linfo_string115
	.byte	2
	.byte	89
	.long	4926

	.byte	12
	.long	.Ldebug_loc28
	.long	.Linfo_string262
	.byte	2
	.byte	89
	.long	6897
	.byte	12
	.long	.Ldebug_loc29
	.long	.Linfo_string263
	.byte	2
	.byte	89
	.long	627
	.byte	13
	.long	.Ldebug_loc31
	.long	.Linfo_string264
	.byte	2
	.byte	89
	.long	4926
	.byte	16
	.long	.Ldebug_ranges1
	.byte	13
	.long	.Ldebug_loc30
	.long	.Linfo_string78
	.byte	2
	.byte	90
	.long	610
	.byte	13
	.long	.Ldebug_loc32
	.long	.Linfo_string246
	.byte	2
	.byte	90
	.long	4926
	.byte	0
	.byte	0
	.byte	19
	.long	.Linfo_string60
	.long	.Linfo_string61
	.byte	2
	.byte	36
	.long	1819

	.byte	1
	.byte	20
	.long	.Linfo_string63
	.byte	2
	.byte	36
	.long	1866
	.byte	0
	.byte	8
	.long	.Linfo_string62
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	217
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	1871
	.byte	4
	.long	.Linfo_string69
	.byte	72
	.byte	2
	.byte	25
	.byte	1
	.byte	5
	.long	.Linfo_string40
	.long	627
	.byte	2
	.byte	26
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string64
	.long	1946
	.byte	2
	.byte	27
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string66
	.long	57
	.byte	2
	.byte	28
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string67
	.long	627
	.byte	2
	.byte	29
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string68
	.long	1819
	.byte	2
	.byte	30
	.byte	8
	.byte	48
	.byte	0
	.byte	6
	.long	.Linfo_string65
	.byte	5
	.byte	8
	.byte	19
	.long	.Linfo_string70
	.long	.Linfo_string71
	.byte	2
	.byte	33
	.long	627

	.byte	1
	.byte	20
	.long	.Linfo_string63
	.byte	2
	.byte	33
	.long	1866
	.byte	0
	.byte	11
	.quad	.Lfunc_begin11
	.long	.Lfunc_end11-.Lfunc_begin11
	.byte	1
	.byte	87
	.long	.Linfo_string197
	.long	.Linfo_string198
	.byte	2
	.byte	146
	.long	6863

	.byte	12
	.long	.Ldebug_loc33
	.long	.Linfo_string262
	.byte	2
	.byte	146
	.long	6897
	.byte	12
	.long	.Ldebug_loc34
	.long	.Linfo_string265
	.byte	2
	.byte	146
	.long	627
	.byte	13
	.long	.Ldebug_loc37
	.long	.Linfo_string268
	.byte	2
	.byte	146
	.long	4622
	.byte	13
	.long	.Ldebug_loc69
	.long	.Linfo_string275
	.byte	2
	.byte	146
	.long	4747
	.byte	21
	.quad	.Ltmp80
	.long	.Ltmp258-.Ltmp80
	.byte	13
	.long	.Ldebug_loc35
	.long	.Linfo_string266
	.byte	2
	.byte	147
	.long	3676
	.byte	13
	.long	.Ldebug_loc36
	.long	.Linfo_string267
	.byte	2
	.byte	147
	.long	4622
	.byte	13
	.long	.Ldebug_loc40
	.long	.Linfo_string270
	.byte	2
	.byte	156
	.long	57
	.byte	13
	.long	.Ldebug_loc67
	.long	.Linfo_string215
	.byte	2
	.byte	221
	.long	4926
	.byte	13
	.long	.Ldebug_loc68
	.long	.Linfo_string274
	.byte	2
	.byte	222
	.long	6951
	.byte	16
	.long	.Ldebug_ranges3
	.byte	13
	.long	.Ldebug_loc38
	.long	.Linfo_string269
	.byte	2
	.byte	151
	.long	627
	.byte	16
	.long	.Ldebug_ranges2
	.byte	13
	.long	.Ldebug_loc39
	.long	.Linfo_string267
	.byte	2
	.byte	152
	.long	4622
	.byte	0
	.byte	0
	.byte	21
	.quad	.Ltmp100
	.long	.Ltmp110-.Ltmp100
	.byte	13
	.long	.Ldebug_loc41
	.long	.Linfo_string77
	.byte	2
	.byte	157
	.long	1866
	.byte	0
	.byte	16
	.long	.Ldebug_ranges5
	.byte	13
	.long	.Ldebug_loc42
	.long	.Linfo_string77
	.byte	2
	.byte	163
	.long	1866
	.byte	16
	.long	.Ldebug_ranges4
	.byte	13
	.long	.Ldebug_loc43
	.long	.Linfo_string78
	.byte	2
	.byte	164
	.long	610
	.byte	13
	.long	.Ldebug_loc44
	.long	.Linfo_string246
	.byte	2
	.byte	164
	.long	1866
	.byte	13
	.long	.Ldebug_loc45
	.long	.Linfo_string63
	.byte	2
	.byte	168
	.long	1866
	.byte	0
	.byte	0
	.byte	16
	.long	.Ldebug_ranges8
	.byte	13
	.long	.Ldebug_loc46
	.long	.Linfo_string63
	.byte	2
	.byte	177
	.long	1866
	.byte	16
	.long	.Ldebug_ranges6
	.byte	13
	.long	.Ldebug_loc51
	.long	.Linfo_string271
	.byte	2
	.byte	180
	.long	4747
	.byte	21
	.quad	.Ltmp149
	.long	.Ltmp158-.Ltmp149
	.byte	13
	.long	.Ldebug_loc52
	.long	.Linfo_string272
	.byte	2
	.byte	181
	.long	627
	.byte	13
	.long	.Ldebug_loc53
	.long	.Linfo_string77
	.byte	2
	.byte	181
	.long	922
	.byte	0
	.byte	21
	.quad	.Ltmp159
	.long	.Ltmp166-.Ltmp159
	.byte	13
	.long	.Ldebug_loc54
	.long	.Linfo_string272
	.byte	2
	.byte	184
	.long	627
	.byte	13
	.long	.Ldebug_loc55
	.long	.Linfo_string77
	.byte	2
	.byte	184
	.long	922
	.byte	0
	.byte	21
	.quad	.Ltmp166
	.long	.Ltmp182-.Ltmp166
	.byte	13
	.long	.Ldebug_loc56
	.long	.Linfo_string67
	.byte	2
	.byte	187
	.long	1866
	.byte	22
	.long	1791
	.quad	.Ltmp166
	.long	.Ltmp167-.Ltmp166
	.byte	2
	.byte	187
	.byte	15
	.long	.Ldebug_loc47
	.long	1807
	.byte	0
	.byte	21
	.quad	.Ltmp170
	.long	.Ltmp181-.Ltmp170
	.byte	13
	.long	.Ldebug_loc57
	.long	.Linfo_string77
	.byte	2
	.byte	189
	.long	922
	.byte	13
	.long	.Ldebug_loc58
	.long	.Linfo_string272
	.byte	2
	.byte	189
	.long	627
	.byte	0
	.byte	0
	.byte	22
	.long	1953
	.quad	.Ltmp183
	.long	.Ltmp184-.Ltmp183
	.byte	2
	.byte	197
	.byte	15
	.long	.Ldebug_loc48
	.long	1969
	.byte	0
	.byte	0
	.byte	16
	.long	.Ldebug_ranges7
	.byte	13
	.long	.Ldebug_loc59
	.long	.Linfo_string271
	.byte	2
	.byte	199
	.long	7546
	.byte	21
	.quad	.Ltmp187
	.long	.Ltmp197-.Ltmp187
	.byte	13
	.long	.Ldebug_loc60
	.long	.Linfo_string272
	.byte	2
	.byte	200
	.long	627
	.byte	13
	.long	.Ldebug_loc61
	.long	.Linfo_string77
	.byte	2
	.byte	200
	.long	922
	.byte	0
	.byte	21
	.quad	.Ltmp198
	.long	.Ltmp205-.Ltmp198
	.byte	13
	.long	.Ldebug_loc62
	.long	.Linfo_string272
	.byte	2
	.byte	203
	.long	627
	.byte	13
	.long	.Ldebug_loc63
	.long	.Linfo_string77
	.byte	2
	.byte	203
	.long	922
	.byte	0
	.byte	21
	.quad	.Ltmp205
	.long	.Ltmp221-.Ltmp205
	.byte	13
	.long	.Ldebug_loc64
	.long	.Linfo_string67
	.byte	2
	.byte	206
	.long	1866
	.byte	22
	.long	1791
	.quad	.Ltmp205
	.long	.Ltmp206-.Ltmp205
	.byte	2
	.byte	206
	.byte	15
	.long	.Ldebug_loc49
	.long	1807
	.byte	0
	.byte	21
	.quad	.Ltmp209
	.long	.Ltmp220-.Ltmp209
	.byte	13
	.long	.Ldebug_loc65
	.long	.Linfo_string77
	.byte	2
	.byte	208
	.long	922
	.byte	13
	.long	.Ldebug_loc66
	.long	.Linfo_string272
	.byte	2
	.byte	208
	.long	627
	.byte	0
	.byte	0
	.byte	22
	.long	1953
	.quad	.Ltmp222
	.long	.Ltmp223-.Ltmp222
	.byte	2
	.byte	216
	.byte	15
	.long	.Ldebug_loc50
	.long	1969
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	23
	.long	.Linfo_string72
	.byte	2
	.byte	47
	.long	1946
	.byte	1
	.byte	20
	.long	.Linfo_string73
	.byte	2
	.byte	47
	.long	627
	.byte	24
	.long	.Linfo_string74
	.byte	2
	.byte	47
	.long	1946
	.byte	0
	.byte	11
	.quad	.Lfunc_begin12
	.long	.Lfunc_end12-.Lfunc_begin12
	.byte	1
	.byte	87
	.long	.Linfo_string200
	.long	.Linfo_string201
	.byte	2
	.byte	115
	.long	4622

	.byte	12
	.long	.Ldebug_loc70
	.long	.Linfo_string262
	.byte	2
	.byte	115
	.long	6897
	.byte	12
	.long	.Ldebug_loc71
	.long	.Linfo_string269
	.byte	2
	.byte	115
	.long	627
	.byte	13
	.long	.Ldebug_loc73
	.long	.Linfo_string276
	.byte	2
	.byte	115
	.long	4622
	.byte	21
	.quad	.Ltmp260
	.long	.Ltmp312-.Ltmp260
	.byte	13
	.long	.Ldebug_loc72
	.long	.Linfo_string267
	.byte	2
	.byte	116
	.long	4622
	.byte	13
	.long	.Ldebug_loc74
	.long	.Linfo_string277
	.byte	2
	.byte	120
	.long	7541
	.byte	16
	.long	.Ldebug_ranges11
	.byte	13
	.long	.Ldebug_loc76
	.long	.Linfo_string272
	.byte	2
	.byte	125
	.long	627
	.byte	13
	.long	.Ldebug_loc77
	.long	.Linfo_string77
	.byte	2
	.byte	125
	.long	922
	.byte	16
	.long	.Ldebug_ranges10
	.byte	13
	.long	.Ldebug_loc75
	.long	.Linfo_string63
	.byte	2
	.byte	130
	.long	1866
	.byte	13
	.long	.Ldebug_loc78
	.long	.Linfo_string278
	.byte	2
	.byte	126
	.long	3676
	.byte	22
	.long	2804
	.quad	.Ltmp287
	.long	.Ltmp292-.Ltmp287
	.byte	2
	.byte	132
	.byte	15
	.long	.Ldebug_loc79
	.long	2816
	.byte	25
	.long	.Ldebug_loc80
	.long	2827
	.byte	0
	.byte	16
	.long	.Ldebug_ranges9
	.byte	13
	.long	.Ldebug_loc81
	.long	.Linfo_string78
	.byte	2
	.byte	137
	.long	610
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.quad	.Lfunc_begin13
	.long	.Lfunc_end13-.Lfunc_begin13
	.byte	1
	.byte	87
	.long	.Linfo_string202
	.long	.Linfo_string203
	.byte	5
	.byte	87
	.long	4622

	.byte	12
	.long	.Ldebug_loc82
	.long	.Linfo_string274
	.byte	5
	.byte	87
	.long	6951
	.byte	12
	.long	.Ldebug_loc83
	.long	.Linfo_string100
	.byte	5
	.byte	87
	.long	4890
	.byte	12
	.long	.Ldebug_loc84
	.long	.Linfo_string279
	.byte	5
	.byte	87
	.long	627
	.byte	18
	.byte	3
	.byte	145
	.ascii	"\300\004"
	.long	.Linfo_string77
	.byte	5
	.byte	87
	.long	922
	.byte	13
	.long	.Ldebug_loc90
	.long	.Linfo_string280
	.byte	5
	.byte	87
	.long	4622
	.byte	21
	.quad	.Ltmp313
	.long	.Ltmp388-.Ltmp313
	.byte	13
	.long	.Ldebug_loc85
	.long	.Linfo_string78
	.byte	5
	.byte	88
	.long	610
	.byte	13
	.long	.Ldebug_loc86
	.long	.Linfo_string63
	.byte	5
	.byte	88
	.long	627
	.byte	13
	.long	.Ldebug_loc87
	.long	.Linfo_string216
	.byte	5
	.byte	92
	.long	57
	.byte	13
	.long	.Ldebug_loc89
	.long	.Linfo_string267
	.byte	5
	.byte	96
	.long	4622
	.byte	13
	.long	.Ldebug_loc91
	.long	.Linfo_string281
	.byte	5
	.byte	96
	.long	7574
	.byte	13
	.long	.Ldebug_loc92
	.long	.Linfo_string310
	.byte	5
	.byte	100
	.long	627
	.byte	13
	.long	.Ldebug_loc93
	.long	.Linfo_string282
	.byte	5
	.byte	102
	.long	7646
	.byte	13
	.long	.Ldebug_loc94
	.long	.Linfo_string64
	.byte	5
	.byte	103
	.long	8142
	.byte	13
	.long	.Ldebug_loc95
	.long	.Linfo_string269
	.byte	5
	.byte	107
	.long	9058
	.byte	13
	.long	.Ldebug_loc97
	.long	.Linfo_string246
	.byte	5
	.byte	115
	.long	7052
	.byte	21
	.quad	.Ltmp319
	.long	.Ltmp333-.Ltmp319
	.byte	13
	.long	.Ldebug_loc88
	.long	.Linfo_string77
	.byte	5
	.byte	93
	.long	4926
	.byte	0
	.byte	21
	.quad	.Ltmp368
	.long	.Ltmp378-.Ltmp368
	.byte	13
	.long	.Ldebug_loc96
	.long	.Linfo_string78
	.byte	5
	.byte	111
	.long	610
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.quad	.Lfunc_begin14
	.long	.Lfunc_end14-.Lfunc_begin14
	.byte	1
	.byte	87
	.long	.Linfo_string204
	.long	.Linfo_string205
	.byte	5
	.byte	122
	.long	4713

	.byte	12
	.long	.Ldebug_loc98
	.long	.Linfo_string274
	.byte	5
	.byte	122
	.long	6951
	.byte	12
	.long	.Ldebug_loc99
	.long	.Linfo_string263
	.byte	5
	.byte	122
	.long	627
	.byte	13
	.long	.Ldebug_loc101
	.long	.Linfo_string347
	.byte	5
	.byte	122
	.long	610
	.byte	13
	.long	.Ldebug_loc102
	.long	.Linfo_string348
	.byte	5
	.byte	122
	.long	57
	.byte	16
	.long	.Ldebug_ranges12
	.byte	13
	.long	.Ldebug_loc100
	.long	.Linfo_string78
	.byte	5
	.byte	123
	.long	610
	.byte	13
	.long	.Ldebug_loc103
	.long	.Linfo_string246
	.byte	5
	.byte	123
	.long	57
	.byte	0
	.byte	0
	.byte	11
	.quad	.Lfunc_begin15
	.long	.Lfunc_end15-.Lfunc_begin15
	.byte	1
	.byte	87
	.long	.Linfo_string206
	.long	.Linfo_string207
	.byte	5
	.byte	34
	.long	4747

	.byte	12
	.long	.Ldebug_loc104
	.long	.Linfo_string274
	.byte	5
	.byte	34
	.long	6951
	.byte	13
	.long	.Ldebug_loc105
	.long	.Linfo_string349
	.byte	5
	.byte	34
	.long	4747
	.byte	0
	.byte	23
	.long	.Linfo_string75
	.byte	5
	.byte	38
	.long	3676
	.byte	1
	.byte	20
	.long	.Linfo_string77
	.byte	5
	.byte	38
	.long	922
	.byte	26
	.byte	24
	.long	.Linfo_string78
	.byte	5
	.byte	40
	.long	610
	.byte	24
	.long	.Linfo_string79
	.byte	5
	.byte	40
	.long	870
	.byte	26
	.byte	24
	.long	.Linfo_string40
	.byte	5
	.byte	44
	.long	922
	.byte	26
	.byte	24
	.long	.Linfo_string78
	.byte	5
	.byte	45
	.long	610
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.long	.Linfo_string76
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	622
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	11
	.quad	.Lfunc_begin16
	.long	.Lfunc_end16-.Lfunc_begin16
	.byte	1
	.byte	87
	.long	.Linfo_string208
	.long	.Linfo_string209
	.byte	5
	.byte	54
	.long	222

	.byte	12
	.long	.Ldebug_loc106
	.long	.Linfo_string274
	.byte	5
	.byte	54
	.long	6951
	.byte	12
	.long	.Ldebug_loc107
	.long	.Linfo_string100
	.byte	5
	.byte	54
	.long	4890
	.byte	21
	.quad	.Ltmp417
	.long	.Ltmp511-.Ltmp417
	.byte	13
	.long	.Ldebug_loc108
	.long	.Linfo_string272
	.byte	5
	.byte	56
	.long	627
	.byte	13
	.long	.Ldebug_loc110
	.long	.Linfo_string77
	.byte	5
	.byte	56
	.long	922
	.byte	16
	.long	.Ldebug_ranges17
	.byte	13
	.long	.Ldebug_loc115
	.long	.Linfo_string40
	.byte	5
	.byte	61
	.long	627
	.byte	27
	.long	3602
	.long	.Ldebug_ranges13
	.byte	5
	.byte	61
	.byte	15
	.long	.Ldebug_loc109
	.long	3614
	.byte	16
	.long	.Ldebug_ranges16
	.byte	25
	.long	.Ldebug_loc111
	.long	3626
	.byte	25
	.long	.Ldebug_loc112
	.long	3637
	.byte	16
	.long	.Ldebug_ranges15
	.byte	25
	.long	.Ldebug_loc113
	.long	3649
	.byte	16
	.long	.Ldebug_ranges14
	.byte	25
	.long	.Ldebug_loc114
	.long	3661
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	21
	.quad	.Ltmp462
	.long	.Ltmp480-.Ltmp462
	.byte	13
	.long	.Ldebug_loc116
	.long	.Linfo_string78
	.byte	5
	.byte	62
	.long	610
	.byte	13
	.long	.Ldebug_loc117
	.long	.Linfo_string271
	.byte	5
	.byte	62
	.long	4926
	.byte	0
	.byte	0
	.byte	21
	.quad	.Ltmp483
	.long	.Ltmp492-.Ltmp483
	.byte	13
	.long	.Ldebug_loc119
	.long	.Linfo_string40
	.byte	5
	.byte	72
	.long	627
	.byte	21
	.quad	.Ltmp489
	.long	.Ltmp492-.Ltmp489
	.byte	13
	.long	.Ldebug_loc118
	.long	.Linfo_string267
	.byte	5
	.byte	73
	.long	4622
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.quad	.Lfunc_begin17
	.long	.Lfunc_end17-.Lfunc_begin17
	.byte	1
	.byte	87
	.long	.Linfo_string210
	.long	.Linfo_string211
	.byte	2
	.byte	76
	.long	6897

	.byte	13
	.long	.Ldebug_loc121
	.long	.Linfo_string351
	.byte	2
	.byte	76
	.long	6897
	.byte	21
	.quad	.Ltmp512
	.long	.Ltmp515-.Ltmp512
	.byte	13
	.long	.Ldebug_loc120
	.long	.Linfo_string350
	.byte	2
	.byte	77
	.long	6897
	.byte	0
	.byte	0
	.byte	11
	.quad	.Lfunc_begin18
	.long	.Lfunc_end18-.Lfunc_begin18
	.byte	1
	.byte	87
	.long	.Linfo_string220
	.long	.Linfo_string221
	.byte	2
	.byte	84
	.long	6863

	.byte	12
	.long	.Ldebug_loc122
	.long	.Linfo_string265
	.byte	2
	.byte	84
	.long	627
	.byte	13
	.long	.Ldebug_loc124
	.long	.Linfo_string352
	.byte	2
	.byte	84
	.long	4747
	.byte	21
	.quad	.Ltmp516
	.long	.Ltmp523-.Ltmp516
	.byte	13
	.long	.Ldebug_loc123
	.long	.Linfo_string262
	.byte	2
	.byte	85
	.long	6897
	.byte	0
	.byte	0
	.byte	28
	.quad	.Lfunc_begin19
	.long	.Lfunc_end19-.Lfunc_begin19
	.byte	1
	.byte	87
	.long	.Linfo_string222
	.byte	2
	.byte	96
	.long	57
	.byte	12
	.long	.Ldebug_loc125
	.long	.Linfo_string350
	.byte	2
	.byte	96
	.long	922
	.byte	13
	.long	.Ldebug_loc127
	.long	.Linfo_string353
	.byte	2
	.byte	96
	.long	57
	.byte	21
	.quad	.Ltmp524
	.long	.Ltmp559-.Ltmp524
	.byte	13
	.long	.Ldebug_loc126
	.long	.Linfo_string66
	.byte	2
	.byte	97
	.long	57
	.byte	13
	.long	.Ldebug_loc128
	.long	.Linfo_string78
	.byte	2
	.byte	101
	.long	610
	.byte	13
	.long	.Ldebug_loc129
	.long	.Linfo_string354
	.byte	2
	.byte	101
	.long	57
	.byte	21
	.quad	.Ltmp530
	.long	.Ltmp552-.Ltmp530
	.byte	13
	.long	.Ldebug_loc130
	.long	.Linfo_string272
	.byte	2
	.byte	105
	.long	922
	.byte	16
	.long	.Ldebug_ranges18
	.byte	13
	.long	.Ldebug_loc131
	.long	.Linfo_string78
	.byte	2
	.byte	106
	.long	610
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.quad	.Lfunc_begin20
	.long	.Lfunc_end20-.Lfunc_begin20
	.byte	1
	.byte	87
	.long	.Linfo_string223
	.long	.Linfo_string224
	.byte	5
	.byte	25
	.long	6951

	.byte	12
	.long	.Ldebug_loc132
	.long	.Linfo_string215
	.byte	5
	.byte	25
	.long	4926
	.byte	12
	.long	.Ldebug_loc133
	.long	.Linfo_string216
	.byte	5
	.byte	25
	.long	57
	.byte	13
	.long	.Ldebug_loc134
	.long	.Linfo_string355
	.byte	5
	.byte	25
	.long	6951
	.byte	0
	.byte	28
	.quad	.Lfunc_begin21
	.long	.Lfunc_end21-.Lfunc_begin21
	.byte	1
	.byte	87
	.long	.Linfo_string225
	.byte	5
	.byte	107
	.long	7018
	.byte	13
	.long	.Ldebug_loc135
	.long	.Linfo_string356
	.byte	5
	.byte	107
	.long	7052
	.byte	0
	.byte	11
	.quad	.Lfunc_begin22
	.long	.Lfunc_end22-.Lfunc_begin22
	.byte	1
	.byte	87
	.long	.Linfo_string236
	.long	.Linfo_string237
	.byte	5
	.byte	129
	.long	4622

	.byte	12
	.long	.Ldebug_loc136
	.long	.Linfo_string100
	.byte	5
	.byte	129
	.long	4890
	.byte	12
	.long	.Ldebug_loc137
	.long	.Linfo_string272
	.byte	5
	.byte	129
	.long	627
	.byte	12
	.long	.Ldebug_loc138
	.long	.Linfo_string77
	.byte	5
	.byte	129
	.long	7052
	.byte	13
	.long	.Ldebug_loc139
	.long	.Linfo_string357
	.byte	5
	.byte	129
	.long	4622
	.byte	0
	.byte	17
	.quad	.Lfunc_begin23
	.long	.Lfunc_end23-.Lfunc_begin23
	.byte	1
	.byte	87
	.long	.Linfo_string238
	.long	.Linfo_string239
	.byte	4
	.byte	13
	.long	222

	.byte	8
	.long	.Linfo_string87
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string86
	.long	1866
	.byte	3
	.byte	40
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string86
	.long	610
	.byte	3
	.byte	40
	.byte	1
	.byte	8
	.byte	0
	.byte	4
	.long	.Linfo_string94
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	4658
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	4663
	.byte	8
	.long	.Linfo_string93
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string92
	.long	4697
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	4702
	.byte	9
	.long	627
	.byte	10
	.long	217
	.byte	0
	.byte	8
	.long	.Linfo_string97
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string86
	.long	57
	.byte	3
	.byte	122
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string86
	.long	610
	.byte	3
	.byte	122
	.byte	1
	.byte	8
	.byte	0
	.byte	3
	.long	4752
	.byte	4
	.long	.Linfo_string111
	.byte	80
	.byte	2
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string100
	.long	4775
	.byte	2
	.byte	13
	.byte	8
	.byte	0
	.byte	0
	.byte	4
	.long	.Linfo_string110
	.byte	80
	.byte	2
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string101
	.long	4876
	.byte	2
	.byte	13
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string40
	.long	627
	.byte	2
	.byte	13
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string103
	.long	4883
	.byte	2
	.byte	13
	.byte	4
	.byte	24
	.byte	5
	.long	.Linfo_string105
	.long	627
	.byte	2
	.byte	13
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string106
	.long	57
	.byte	2
	.byte	13
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string107
	.long	4890
	.byte	2
	.byte	13
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string109
	.long	57
	.byte	2
	.byte	13
	.byte	8
	.byte	72
	.byte	0
	.byte	6
	.long	.Linfo_string102
	.byte	7
	.byte	8
	.byte	6
	.long	.Linfo_string104
	.byte	7
	.byte	4
	.byte	4
	.long	.Linfo_string108
	.byte	16
	.byte	2
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	217
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	4
	.long	.Linfo_string196
	.byte	16
	.byte	2
	.byte	60
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	4962
	.byte	2
	.byte	60
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	4967
	.byte	8
	.long	.Linfo_string195
	.byte	104
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	3
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string116
	.long	5144
	.byte	3
	.byte	12
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string163
	.long	5982
	.byte	3
	.byte	12
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string175
	.long	6342
	.byte	3
	.byte	12
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string164
	.long	6405
	.byte	3
	.byte	12
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string177
	.long	6421
	.byte	3
	.byte	12
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string182
	.long	6405
	.byte	3
	.byte	12
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string183
	.long	6405
	.byte	3
	.byte	12
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string184
	.long	6493
	.byte	3
	.byte	12
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string180
	.long	4697
	.byte	3
	.byte	12
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string191
	.long	6788
	.byte	3
	.byte	12
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string193
	.long	6821
	.byte	3
	.byte	12
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string194
	.long	6842
	.byte	3
	.byte	12
	.byte	8
	.byte	96
	.byte	0
	.byte	3
	.long	5149
	.byte	9
	.long	4622
	.byte	10
	.long	217
	.byte	10
	.long	5170
	.byte	10
	.long	5765
	.byte	0
	.byte	4
	.long	.Linfo_string146
	.byte	16
	.byte	2
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	5206
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	5211
	.byte	8
	.long	.Linfo_string145
	.byte	40
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	3
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string117
	.long	5284
	.byte	3
	.byte	12
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string141
	.long	5698
	.byte	3
	.byte	12
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string143
	.long	5728
	.byte	3
	.byte	12
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string144
	.long	5744
	.byte	3
	.byte	12
	.byte	8
	.byte	32
	.byte	0
	.byte	3
	.long	5289
	.byte	9
	.long	5300
	.byte	10
	.long	217
	.byte	0
	.byte	8
	.long	.Linfo_string140
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string118
	.long	5334
	.byte	3
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string78
	.long	610
	.byte	3
	.byte	12
	.byte	1
	.byte	24
	.byte	0
	.byte	4
	.long	.Linfo_string139
	.byte	24
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string119
	.long	4876
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string120
	.long	5383
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string122
	.long	5390
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	.Linfo_string121
	.byte	5
	.byte	8
	.byte	3
	.long	5395
	.byte	4
	.long	.Linfo_string138
	.byte	88
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string40
	.long	627
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string123
	.long	5483
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string128
	.long	5584
	.byte	2
	.byte	5
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string135
	.long	5383
	.byte	2
	.byte	5
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string136
	.long	5383
	.byte	2
	.byte	5
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string137
	.long	5530
	.byte	2
	.byte	5
	.byte	8
	.byte	80
	.byte	0
	.byte	8
	.long	.Linfo_string127
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	5530
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	5535
	.byte	4
	.long	.Linfo_string126
	.byte	32
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string40
	.long	627
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string124
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string125
	.long	610
	.byte	2
	.byte	5
	.byte	1
	.byte	24
	.byte	0
	.byte	8
	.long	.Linfo_string134
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	5631
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	5636
	.byte	4
	.long	.Linfo_string133
	.byte	16
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string129
	.long	5383
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string130
	.long	196
	.byte	2
	.byte	5
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string131
	.long	610
	.byte	2
	.byte	5
	.byte	1
	.byte	9
	.byte	5
	.long	.Linfo_string132
	.long	610
	.byte	2
	.byte	5
	.byte	1
	.byte	10
	.byte	0
	.byte	3
	.long	5703
	.byte	9
	.long	5714
	.byte	10
	.long	217
	.byte	0
	.byte	3
	.long	5719
	.byte	29
	.long	.Linfo_string142
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	3
	.long	5733
	.byte	9
	.long	4622
	.byte	10
	.long	217
	.byte	0
	.byte	3
	.long	5749
	.byte	9
	.long	922
	.byte	10
	.long	217
	.byte	10
	.long	922
	.byte	0
	.byte	3
	.long	5770
	.byte	4
	.long	.Linfo_string116
	.byte	160
	.byte	2
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string147
	.long	5975
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string149
	.long	4876
	.byte	2
	.byte	12
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string150
	.long	4876
	.byte	2
	.byte	12
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string151
	.long	4876
	.byte	2
	.byte	12
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string152
	.long	5334
	.byte	2
	.byte	12
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string153
	.long	5334
	.byte	2
	.byte	12
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string154
	.long	5334
	.byte	2
	.byte	12
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string155
	.long	5334
	.byte	2
	.byte	12
	.byte	8
	.byte	104
	.byte	5
	.long	.Linfo_string156
	.long	4883
	.byte	2
	.byte	12
	.byte	4
	.byte	128
	.byte	5
	.long	.Linfo_string157
	.long	210
	.byte	2
	.byte	12
	.byte	4
	.byte	132
	.byte	5
	.long	.Linfo_string158
	.long	210
	.byte	2
	.byte	12
	.byte	4
	.byte	136
	.byte	5
	.long	.Linfo_string159
	.long	210
	.byte	2
	.byte	12
	.byte	4
	.byte	140
	.byte	5
	.long	.Linfo_string160
	.long	210
	.byte	2
	.byte	12
	.byte	4
	.byte	144
	.byte	5
	.long	.Linfo_string161
	.long	210
	.byte	2
	.byte	12
	.byte	4
	.byte	148
	.byte	5
	.long	.Linfo_string162
	.long	210
	.byte	2
	.byte	12
	.byte	4
	.byte	152
	.byte	0
	.byte	6
	.long	.Linfo_string148
	.byte	5
	.byte	8
	.byte	3
	.long	5987
	.byte	9
	.long	5998
	.byte	10
	.long	217
	.byte	0
	.byte	4
	.long	.Linfo_string174
	.byte	16
	.byte	2
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	6034
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	6039
	.byte	8
	.long	.Linfo_string173
	.byte	64
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	3
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string164
	.long	6151
	.byte	3
	.byte	12
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string165
	.long	6172
	.byte	3
	.byte	12
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string167
	.long	6240
	.byte	3
	.byte	12
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string168
	.long	6172
	.byte	3
	.byte	12
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string169
	.long	6261
	.byte	3
	.byte	12
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string171
	.long	6172
	.byte	3
	.byte	12
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string172
	.long	6316
	.byte	3
	.byte	12
	.byte	8
	.byte	56
	.byte	0
	.byte	3
	.long	6156
	.byte	9
	.long	222
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	0
	.byte	3
	.long	6177
	.byte	9
	.long	6188
	.byte	10
	.long	217
	.byte	0
	.byte	8
	.long	.Linfo_string166
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	6235
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	4890
	.byte	3
	.long	6245
	.byte	9
	.long	610
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	0
	.byte	3
	.long	6266
	.byte	9
	.long	6282
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	0
	.byte	8
	.long	.Linfo_string170
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string86
	.long	4890
	.byte	3
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string86
	.long	610
	.byte	3
	.byte	12
	.byte	1
	.byte	16
	.byte	0
	.byte	3
	.long	6321
	.byte	9
	.long	222
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	10
	.long	4890
	.byte	0
	.byte	3
	.long	6347
	.byte	9
	.long	6358
	.byte	10
	.long	217
	.byte	0
	.byte	8
	.long	.Linfo_string176
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	617
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	6410
	.byte	9
	.long	610
	.byte	10
	.long	217
	.byte	0
	.byte	3
	.long	6426
	.byte	9
	.long	6437
	.byte	10
	.long	217
	.byte	0
	.byte	4
	.long	.Linfo_string181
	.byte	32
	.byte	2
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string149
	.long	4876
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string178
	.long	6486
	.byte	2
	.byte	12
	.byte	4
	.byte	8
	.byte	5
	.long	.Linfo_string180
	.long	627
	.byte	2
	.byte	12
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	.Linfo_string179
	.byte	7
	.byte	4
	.byte	3
	.long	6498
	.byte	9
	.long	6509
	.byte	10
	.long	217
	.byte	0
	.byte	4
	.long	.Linfo_string190
	.byte	16
	.byte	2
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	6545
	.byte	2
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	6550
	.byte	8
	.long	.Linfo_string189
	.byte	56
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	3
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string169
	.long	6649
	.byte	3
	.byte	12
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string186
	.long	6240
	.byte	3
	.byte	12
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string187
	.long	6704
	.byte	3
	.byte	12
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string188
	.long	6725
	.byte	3
	.byte	12
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string171
	.long	6746
	.byte	3
	.byte	12
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string172
	.long	6762
	.byte	3
	.byte	12
	.byte	8
	.byte	48
	.byte	0
	.byte	3
	.long	6654
	.byte	9
	.long	6670
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	0
	.byte	8
	.long	.Linfo_string185
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string86
	.long	922
	.byte	3
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string86
	.long	610
	.byte	3
	.byte	12
	.byte	1
	.byte	16
	.byte	0
	.byte	3
	.long	6709
	.byte	9
	.long	6358
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	0
	.byte	3
	.long	6730
	.byte	9
	.long	627
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	0
	.byte	3
	.long	6751
	.byte	9
	.long	57
	.byte	10
	.long	217
	.byte	0
	.byte	3
	.long	6767
	.byte	9
	.long	222
	.byte	10
	.long	217
	.byte	10
	.long	627
	.byte	10
	.long	922
	.byte	0
	.byte	3
	.long	6793
	.byte	9
	.long	4890
	.byte	10
	.long	217
	.byte	10
	.long	6814
	.byte	10
	.long	627
	.byte	0
	.byte	6
	.long	.Linfo_string192
	.byte	5
	.byte	8
	.byte	3
	.long	6826
	.byte	9
	.long	4890
	.byte	10
	.long	217
	.byte	10
	.long	6188
	.byte	0
	.byte	3
	.long	6847
	.byte	9
	.long	627
	.byte	10
	.long	217
	.byte	10
	.long	3676
	.byte	0
	.byte	8
	.long	.Linfo_string199
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string86
	.long	4747
	.byte	3
	.byte	146
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string86
	.long	4622
	.byte	3
	.byte	146
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	6902
	.byte	4
	.long	.Linfo_string219
	.byte	24
	.byte	2
	.byte	70
	.byte	1
	.byte	5
	.long	.Linfo_string212
	.long	57
	.byte	2
	.byte	71
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string213
	.long	57
	.byte	2
	.byte	72
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string214
	.long	6951
	.byte	2
	.byte	73
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	6956
	.byte	4
	.long	.Linfo_string214
	.byte	40
	.byte	5
	.byte	17
	.byte	1
	.byte	5
	.long	.Linfo_string215
	.long	4926
	.byte	5
	.byte	18
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string216
	.long	57
	.byte	5
	.byte	19
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string217
	.long	57
	.byte	5
	.byte	19
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string218
	.long	57
	.byte	5
	.byte	20
	.byte	8
	.byte	32
	.byte	0
	.byte	8
	.long	.Linfo_string235
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string86
	.long	7052
	.byte	3
	.byte	23
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string86
	.long	4622
	.byte	3
	.byte	23
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	7057
	.byte	4
	.long	.Linfo_string144
	.byte	24
	.byte	2
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string45
	.long	7106
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string232
	.long	217
	.byte	2
	.byte	7
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string233
	.long	7534
	.byte	2
	.byte	7
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	7111
	.byte	4
	.long	.Linfo_string231
	.byte	72
	.byte	2
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string24
	.long	229
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string25
	.long	229
	.byte	2
	.byte	7
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string26
	.long	210
	.byte	2
	.byte	7
	.byte	4
	.byte	16
	.byte	5
	.long	.Linfo_string27
	.long	196
	.byte	2
	.byte	7
	.byte	1
	.byte	20
	.byte	5
	.long	.Linfo_string28
	.long	7290
	.byte	2
	.byte	7
	.byte	1
	.byte	21
	.byte	5
	.long	.Linfo_string29
	.long	196
	.byte	2
	.byte	7
	.byte	1
	.byte	22
	.byte	5
	.long	.Linfo_string227
	.long	196
	.byte	2
	.byte	7
	.byte	1
	.byte	23
	.byte	5
	.long	.Linfo_string30
	.long	7297
	.byte	2
	.byte	7
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string33
	.long	7325
	.byte	2
	.byte	7
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string35
	.long	617
	.byte	2
	.byte	7
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string36
	.long	622
	.byte	2
	.byte	7
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string39
	.long	7353
	.byte	2
	.byte	7
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string51
	.long	217
	.byte	2
	.byte	7
	.byte	8
	.byte	64
	.byte	0
	.byte	6
	.long	.Linfo_string226
	.byte	5
	.byte	1
	.byte	3
	.long	7302
	.byte	4
	.long	.Linfo_string32
	.byte	8
	.byte	2
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	540
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	7330
	.byte	4
	.long	.Linfo_string32
	.byte	8
	.byte	2
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	589
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	7358
	.byte	4
	.long	.Linfo_string230
	.byte	40
	.byte	2
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string40
	.long	622
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string41
	.long	622
	.byte	2
	.byte	7
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string42
	.long	7407
	.byte	2
	.byte	7
	.byte	8
	.byte	16
	.byte	0
	.byte	8
	.long	.Linfo_string229
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	7454
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	7459
	.byte	4
	.long	.Linfo_string228
	.byte	40
	.byte	2
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string40
	.long	622
	.byte	2
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string41
	.long	622
	.byte	2
	.byte	7
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string44
	.long	217
	.byte	2
	.byte	7
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string45
	.long	217
	.byte	2
	.byte	7
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string46
	.long	217
	.byte	2
	.byte	7
	.byte	8
	.byte	32
	.byte	0
	.byte	6
	.long	.Linfo_string234
	.byte	7
	.byte	8
	.byte	3
	.long	57
	.byte	3
	.long	7551
	.byte	4
	.long	.Linfo_string273
	.byte	80
	.byte	2
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string100
	.long	4775
	.byte	2
	.byte	13
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	7579
	.byte	3
	.long	7584
	.byte	4
	.long	.Linfo_string146
	.byte	32
	.byte	5
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string282
	.long	7646
	.byte	5
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string307
	.long	57
	.byte	5
	.byte	12
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string308
	.long	610
	.byte	5
	.byte	12
	.byte	1
	.byte	16
	.byte	5
	.long	.Linfo_string309
	.long	7052
	.byte	5
	.byte	12
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	7651
	.byte	4
	.long	.Linfo_string306
	.byte	64
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string283
	.long	7713
	.byte	5
	.byte	5
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string67
	.long	189
	.byte	5
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string294
	.long	7831
	.byte	5
	.byte	5
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string305
	.long	7883
	.byte	5
	.byte	5
	.byte	8
	.byte	56
	.byte	0
	.byte	4
	.long	.Linfo_string293
	.byte	24
	.byte	2
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string284
	.long	7788
	.byte	2
	.byte	13
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string289
	.long	210
	.byte	2
	.byte	13
	.byte	4
	.byte	8
	.byte	5
	.long	.Linfo_string290
	.long	210
	.byte	2
	.byte	13
	.byte	4
	.byte	12
	.byte	5
	.long	.Linfo_string291
	.long	7824
	.byte	2
	.byte	13
	.byte	4
	.byte	16
	.byte	5
	.long	.Linfo_string292
	.long	7824
	.byte	2
	.byte	13
	.byte	4
	.byte	20
	.byte	0
	.byte	4
	.long	.Linfo_string288
	.byte	8
	.byte	2
	.byte	13
	.byte	1
	.byte	5
	.long	.Linfo_string285
	.long	7824
	.byte	2
	.byte	13
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string287
	.long	210
	.byte	2
	.byte	13
	.byte	4
	.byte	4
	.byte	0
	.byte	6
	.long	.Linfo_string286
	.byte	5
	.byte	4
	.byte	8
	.long	.Linfo_string304
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	7878
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	7883
	.byte	3
	.long	7888
	.byte	4
	.long	.Linfo_string273
	.byte	96
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string295
	.long	217
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string40
	.long	627
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string67
	.long	189
	.byte	5
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string24
	.long	189
	.byte	5
	.byte	5
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string283
	.long	7788
	.byte	5
	.byte	5
	.byte	4
	.byte	40
	.byte	5
	.long	.Linfo_string296
	.long	7989
	.byte	5
	.byte	5
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string298
	.long	8041
	.byte	5
	.byte	5
	.byte	8
	.byte	72
	.byte	0
	.byte	8
	.long	.Linfo_string297
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	8036
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	189
	.byte	8
	.long	.Linfo_string303
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	8088
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8093
	.byte	4
	.long	.Linfo_string302
	.byte	32
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string299
	.long	189
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string300
	.long	627
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string301
	.long	189
	.byte	5
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	8147
	.byte	3
	.long	8152
	.byte	4
	.long	.Linfo_string273
	.byte	128
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string311
	.long	8266
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string319
	.long	8387
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string180
	.long	8394
	.byte	5
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string328
	.long	8535
	.byte	5
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string333
	.long	8720
	.byte	5
	.byte	5
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string336
	.long	8761
	.byte	5
	.byte	5
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string343
	.long	8954
	.byte	5
	.byte	5
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string345
	.long	9006
	.byte	5
	.byte	5
	.byte	8
	.byte	104
	.byte	0
	.byte	3
	.long	8271
	.byte	4
	.long	.Linfo_string318
	.byte	24
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string312
	.long	8294
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	8
	.long	.Linfo_string317
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	8341
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8346
	.byte	3
	.long	8351
	.byte	4
	.long	.Linfo_string316
	.byte	24
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string313
	.long	8387
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string315
	.long	627
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	6
	.long	.Linfo_string314
	.byte	5
	.byte	8
	.byte	3
	.long	8399
	.byte	4
	.long	.Linfo_string327
	.byte	32
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string320
	.long	8387
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string180
	.long	627
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string321
	.long	8448
	.byte	5
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	8453
	.byte	4
	.long	.Linfo_string326
	.byte	72
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string322
	.long	8528
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string180
	.long	627
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string324
	.long	922
	.byte	5
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string325
	.long	922
	.byte	5
	.byte	5
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string178
	.long	922
	.byte	5
	.byte	5
	.byte	8
	.byte	56
	.byte	0
	.byte	6
	.long	.Linfo_string323
	.byte	5
	.byte	8
	.byte	8
	.long	.Linfo_string332
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	8582
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8587
	.byte	4
	.long	.Linfo_string324
	.byte	16
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	8623
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string54
	.long	217
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	8628
	.byte	8
	.long	.Linfo_string331
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	341
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string329
	.long	8688
	.byte	3
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string314
	.long	8688
	.byte	3
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string330
	.long	8704
	.byte	3
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	8693
	.byte	9
	.long	8387
	.byte	10
	.long	217
	.byte	0
	.byte	3
	.long	8709
	.byte	9
	.long	222
	.byte	10
	.long	217
	.byte	0
	.byte	3
	.long	8725
	.byte	4
	.long	.Linfo_string333
	.byte	16
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string334
	.long	217
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string335
	.long	57
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	8
	.long	.Linfo_string342
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	8808
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8813
	.byte	3
	.long	8818
	.byte	4
	.long	.Linfo_string341
	.byte	40
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string311
	.long	8266
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string180
	.long	8394
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string194
	.long	8893
	.byte	5
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string316
	.long	8266
	.byte	5
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string340
	.long	8387
	.byte	5
	.byte	5
	.byte	8
	.byte	32
	.byte	0
	.byte	3
	.long	8898
	.byte	4
	.long	.Linfo_string339
	.byte	32
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string337
	.long	8387
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string322
	.long	8947
	.byte	5
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string144
	.long	627
	.byte	5
	.byte	5
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	.Linfo_string338
	.byte	5
	.byte	8
	.byte	8
	.long	.Linfo_string344
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	9001
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8394
	.byte	8
	.long	.Linfo_string346
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string43
	.long	9053
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string48
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string49
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8266
	.byte	3
	.long	9063
	.byte	4
	.long	.Linfo_string32
	.byte	8
	.byte	5
	.byte	107
	.byte	1
	.byte	5
	.long	.Linfo_string31
	.long	9086
	.byte	5
	.byte	107
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	9091
	.byte	30
	.long	7018
	.byte	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp27
	.quad	.Ltmp30
	.quad	.Ltmp32
	.quad	.Ltmp34
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp67
	.quad	.Ltmp72
	.quad	.Ltmp74
	.quad	.Ltmp79
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp95
	.quad	.Ltmp97
	.quad	.Ltmp239
	.quad	.Ltmp240
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp89
	.quad	.Ltmp98
	.quad	.Ltmp239
	.quad	.Ltmp240
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp117
	.quad	.Ltmp141
	.quad	.Ltmp247
	.quad	.Ltmp254
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp114
	.quad	.Ltmp142
	.quad	.Ltmp247
	.quad	.Ltmp254
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp148
	.quad	.Ltmp186
	.quad	.Ltmp226
	.quad	.Ltmp228
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp186
	.quad	.Ltmp225
	.quad	.Ltmp228
	.quad	.Ltmp230
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp143
	.quad	.Ltmp232
	.quad	.Ltmp257
	.quad	.Ltmp258
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp294
	.quad	.Ltmp297
	.quad	.Ltmp308
	.quad	.Ltmp312
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp275
	.quad	.Ltmp276
	.quad	.Ltmp282
	.quad	.Ltmp302
	.quad	.Ltmp306
	.quad	.Ltmp312
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp273
	.quad	.Ltmp302
	.quad	.Ltmp306
	.quad	.Ltmp312
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Ltmp392
	.quad	.Ltmp397
	.quad	.Ltmp399
	.quad	.Ltmp403
	.quad	0
	.quad	0
.Ldebug_ranges13:
	.quad	.Ltmp428
	.quad	.Ltmp457
	.quad	.Ltmp495
	.quad	.Ltmp511
	.quad	0
	.quad	0
.Ldebug_ranges14:
	.quad	.Ltmp442
	.quad	.Ltmp456
	.quad	.Ltmp495
	.quad	.Ltmp505
	.quad	0
	.quad	0
.Ldebug_ranges15:
	.quad	.Ltmp434
	.quad	.Ltmp457
	.quad	.Ltmp495
	.quad	.Ltmp505
	.quad	0
	.quad	0
.Ldebug_ranges16:
	.quad	.Ltmp428
	.quad	.Ltmp457
	.quad	.Ltmp495
	.quad	.Ltmp511
	.quad	0
	.quad	0
.Ldebug_ranges17:
	.quad	.Ltmp428
	.quad	.Ltmp481
	.quad	.Ltmp495
	.quad	.Ltmp511
	.quad	0
	.quad	0
.Ldebug_ranges18:
	.quad	.Ltmp538
	.quad	.Ltmp545
	.quad	.Ltmp548
	.quad	.Ltmp552
	.quad	0
	.quad	0
.Ldebug_ranges19:
	.quad	.Lfunc_begin0
	.quad	.Lfunc_end0
	.quad	.Lfunc_begin1
	.quad	.Lfunc_end1
	.quad	.Lfunc_begin2
	.quad	.Lfunc_end2
	.quad	.Lfunc_begin3
	.quad	.Lfunc_end3
	.quad	.Lfunc_begin4
	.quad	.Lfunc_end4
	.quad	.Lfunc_begin5
	.quad	.Lfunc_end5
	.quad	.Lfunc_begin6
	.quad	.Lfunc_end6
	.quad	.Lfunc_begin7
	.quad	.Lfunc_end7
	.quad	.Lfunc_begin8
	.quad	.Lfunc_end8
	.quad	.Lfunc_begin9
	.quad	.Lfunc_end9
	.quad	.Lfunc_begin10
	.quad	.Lfunc_end10
	.quad	.Lfunc_begin11
	.quad	.Lfunc_end11
	.quad	.Lfunc_begin12
	.quad	.Lfunc_end12
	.quad	.Lfunc_begin13
	.quad	.Lfunc_end13
	.quad	.Lfunc_begin14
	.quad	.Lfunc_end14
	.quad	.Lfunc_begin15
	.quad	.Lfunc_end15
	.quad	.Lfunc_begin16
	.quad	.Lfunc_end16
	.quad	.Lfunc_begin17
	.quad	.Lfunc_end17
	.quad	.Lfunc_begin18
	.quad	.Lfunc_end18
	.quad	.Lfunc_begin19
	.quad	.Lfunc_end19
	.quad	.Lfunc_begin20
	.quad	.Lfunc_end20
	.quad	.Lfunc_begin21
	.quad	.Lfunc_end21
	.quad	.Lfunc_begin22
	.quad	.Lfunc_end22
	.quad	.Lfunc_begin23
	.quad	.Lfunc_end23
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.byte	0
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0
.LpubNames_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	9097
	.long	236
	.asciz	"runtime.writeBarrier"
	.long	1680
	.asciz	"assets.GetObject..1command_line_arguments.Resources"
	.long	4025
	.asciz	"assets.New"
	.long	1106
	.asciz	"assets.Type..1command_line_arguments.Component"
	.long	4469
	.asciz	"assets.SetNodeAttr"
	.long	1981
	.asciz	"assets.LoadDir..1command_line_arguments.Resources"
	.long	2839
	.asciz	"assets.LoadFile..1command_line_arguments.Resources"
	.long	1307
	.asciz	"assets.command_line_arguments..import"
	.long	3542
	.asciz	"assets.Root..1command_line_arguments.Level"
	.long	1166
	.asciz	"assets.LookupBaseType.command_line_arguments.Components"
	.long	2804
	.asciz	"assets.parseBaseType"
	.long	1605
	.asciz	"assets.visit..stub.command_line_arguments.Resources"
	.long	3089
	.asciz	"assets.AddProperty..1command_line_arguments.Level"
	.long	4428
	.asciz	"assets.func1"
	.long	3416
	.asciz	"assets.GetProperties..1command_line_arguments.Level"
	.long	3602
	.asciz	"assets.parseStringSlice"
	.long	4353
	.asciz	"assets.NewLevel"
	.long	973
	.asciz	"assets.Base..1command_line_arguments.Component"
	.long	4188
	.asciz	"assets.parseAttrs"
	.long	1953
	.asciz	"assets.Name..1command_line_arguments.Component"
	.long	251
	.asciz	"command_line_arguments.PkgLogger"
	.long	958
	.asciz	"command_line_arguments.srcTmpl"
	.long	1530
	.asciz	"assets.Root..stub.command_line_arguments.Resources"
	.long	4099
	.asciz	"assets.LoadFromFile"
	.long	1791
	.asciz	"assets.Bases..1command_line_arguments.Component"
	.long	1440
	.asciz	"assets.GetProperties..stub.command_line_arguments.Resources"
	.long	1336
	.asciz	"assets.AddProperty..stub.command_line_arguments.Resources"
	.long	42
	.asciz	"command_line_arguments.defaultAttrs"
	.long	4559
	.asciz	"assets.command_line_arguments..init0"
	.long	3723
	.asciz	"assets.visit..1command_line_arguments.Level"
	.long	0
.LpubNames_end0:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0
.LpubTypes_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	9097
	.long	8152
	.asciz	"File"
	.long	769
	.asciz	"method"
	.long	8818
	.asciz	"ImportSpec"
	.long	7989
	.asciz	"struct{*int,int,int}"
	.long	8947
	.asciz	"Token"
	.long	4890
	.asciz	"Node"
	.long	5535
	.asciz	".time.zone"
	.long	6486
	.asciz	"DirentType"
	.long	610
	.asciz	"bool"
	.long	922
	.asciz	"Handle"
	.long	668
	.asciz	"uncommonType"
	.long	7651
	.asciz	"FileSet"
	.long	8387
	.asciz	"Pos"
	.long	7788
	.asciz	"Mutex"
	.long	4775
	.asciz	".github.com/ChrisRx/dungeonfs/pkg/game/fs/core.node"
	.long	8093
	.asciz	".go/token.lineInfo"
	.long	8453
	.asciz	"Object"
	.long	8587
	.asciz	"Decl"
	.long	7534
	.asciz	".reflect.flag"
	.long	7713
	.asciz	"RWMutex"
	.long	6550
	.asciz	"struct{*_type,*func(*void,string)struct{Handle,bool},*func(*void,string)bool,*func(*void,string)struct{*uint8,int,int},*func(*void,string)string,*func(*void)CommentMap,*func(*void,string,Handle)void}"
	.long	8294
	.asciz	"struct{**Comment,int,int}"
	.long	9006
	.asciz	"struct{**CommentGroup,int,int}"
	.long	870
	.asciz	"struct{*Handle,int,int}"
	.long	4883
	.asciz	"FileMode"
	.long	6437
	.asciz	"Dirent"
	.long	203
	.asciz	"uint16"
	.long	8898
	.asciz	"BasicLit"
	.long	3676
	.asciz	"struct{*string,int,int}"
	.long	6358
	.asciz	"struct{*uint8,int,int}"
	.long	8535
	.asciz	"struct{*Decl,int,int}"
	.long	5636
	.asciz	".time.zoneTrans"
	.long	7358
	.asciz	".reflect.uncommonType"
	.long	4588
	.asciz	"struct{*Component,bool}"
	.long	9063
	.asciz	"__go_descriptor"
	.long	8954
	.asciz	"struct{**Ident,int,int}"
	.long	5383
	.asciz	"int64"
	.long	717
	.asciz	"struct{*method,int,int}"
	.long	627
	.asciz	"string"
	.long	62
	.asciz	"runtime.hmap"
	.long	5998
	.asciz	"Nodes"
	.long	7018
	.asciz	"struct{*Value,error}"
	.long	1946
	.asciz	"ComponentType"
	.long	6282
	.asciz	"struct{Node,bool}"
	.long	4752
	.asciz	"Directory"
	.long	7831
	.asciz	"struct{**File,int,int}"
	.long	6670
	.asciz	"struct{Handle,bool}"
	.long	8528
	.asciz	"ObjKind"
	.long	7111
	.asciz	".reflect.rtype"
	.long	7584
	.asciz	"Context"
	.long	4622
	.asciz	"error"
	.long	189
	.asciz	"int"
	.long	6039
	.asciz	"struct{*_type,*func(*void,string)void,*func(*void)struct{*Node,int,int},*func(*void,string)bool,*func(*void)struct{*Node,int,int},*func(*void,string)struct{Node,bool},*func(*void)struct{*Node,int,int},*func(*void,string,Node)void}"
	.long	4876
	.asciz	"uint64"
	.long	4663
	.asciz	"struct{*_type,*func(*void)string}"
	.long	5719
	.asciz	"__go_channel"
	.long	7824
	.asciz	"int32"
	.long	8628
	.asciz	"struct{*_type,*func(*void)Pos,*func(*void)Pos,*func(*void)void}"
	.long	222
	.asciz	"void"
	.long	1871
	.asciz	"Component"
	.long	8351
	.asciz	"Comment"
	.long	196
	.asciz	"uint8"
	.long	307
	.asciz	"struct{*_type,*func(*void,string,struct{*Handle,int,int})void}"
	.long	8725
	.asciz	"Scope"
	.long	6188
	.asciz	"struct{*Node,int,int}"
	.long	6902
	.asciz	"Resources"
	.long	4926
	.asciz	"Entity"
	.long	8271
	.asciz	"CommentGroup"
	.long	346
	.asciz	"_type"
	.long	7459
	.asciz	".reflect.method"
	.long	7290
	.asciz	"int8"
	.long	5300
	.asciz	"struct{Time,bool}"
	.long	210
	.asciz	"uint32"
	.long	4713
	.asciz	"struct{CommentMap,bool}"
	.long	5975
	.asciz	"Duration"
	.long	6509
	.asciz	"NodeMetaData"
	.long	6814
	.asciz	"NodeType"
	.long	5584
	.asciz	"struct{*.time.zoneTrans,int,int}"
	.long	8041
	.asciz	"struct{*.go/token.lineInfo,int,int}"
	.long	5211
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,Handle)Handle}"
	.long	4967
	.asciz	"struct{*_type,*func(*void,Context,*Attr)error,*func(*void)Nodes,*func(*void)struct{*uint8,int,int},*func(*void)bool,*func(*void)Dirent,*func(*void)bool,*func(*void)bool,*func(*void)NodeMetaData,*func(*void)string,*func(*void,NodeType,string)Node,*func(*void,struct{*Node,int,int})Node,*func(*void,struct{*string,int,int})string}"
	.long	5334
	.asciz	"Time"
	.long	1819
	.asciz	"struct{**Component,int,int}"
	.long	266
	.asciz	".command-line-arguments.logger"
	.long	8399
	.asciz	"Ident"
	.long	6863
	.asciz	"struct{*Directory,error}"
	.long	229
	.asciz	"uintptr"
	.long	7407
	.asciz	"struct{*.reflect.method,int,int}"
	.long	6956
	.asciz	"Level"
	.long	5395
	.asciz	"Location"
	.long	8761
	.asciz	"struct{**ImportSpec,int,int}"
	.long	5770
	.asciz	"Attr"
	.long	5483
	.asciz	"struct{*.time.zone,int,int}"
	.long	7057
	.asciz	"Value"
	.long	0
.LpubTypes_end0:

	.section	".note.GNU-split-stack","",@progbits
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
