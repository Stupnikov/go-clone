; ModuleID = 'gomodule'
source_filename = "gomodule"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.section \22.go_export\22,\22e\22,@progbits"
module asm "\09.ascii \22v2;\5Cn\22"
module asm "\09.ascii \22package \22"
module asm "\09.ascii \22cli\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22pkgpath \22"
module asm "\09.ascii \22command-line-arguments\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22gob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding/gob\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22encoding/gob\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22json\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding/json\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22encoding/json\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22yamux\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/vendor/github.com/hashicorp/yamux\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/hashicorp/yamux\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22homedir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/vendor/github.com/mitchellh/go-homedir\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/mitchellh/go-homedir\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22errors\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/lib/errors\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp/lib/errors\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22out\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/lib/out\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp/lib/out\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github.com/spolu/warp/lib/token\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22github.com/spolu/warp/lib/token\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22io/ioutil\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22path/filepath\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22strings\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22import \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \5C\22\22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22\5C\22;\5Cn\22"
module asm "\09.ascii \22init\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cli\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22command_line_arguments..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bufio..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22bytes..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22context..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22cipher\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_cipher..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22crypto_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22base64\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_base64..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22binary\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_binary..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22gob\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_gob..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22json\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22encoding_json..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22fmt..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22out\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp_lib_out..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp_lib_token..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22color\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp_vendor_github_com_fatih_color..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22yamux\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp_vendor_github_com_hashicorp_yamux..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22homedir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22github_com_spolu_warp_vendor_github_com_mitchellh_go_homedir..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22poll\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_poll..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22testlog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22internal_testlog..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22ioutil\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22io_ioutil..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22log..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22big\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_big..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22rand\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22math_rand..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22net..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22exec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22os_exec..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22filepath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22path_filepath..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22reflect..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syntax\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22regexp_syntax..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sys\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22runtime_internal_sys..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22strconv..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22sync..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22syscall..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22time..import\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22unicode..import\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22init_graph\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2211\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2212\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2213\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2214\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2215\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2216\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2220\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2221\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2224\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \223\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2210\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2226\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2227\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2217\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2218\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2225\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2228\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2230\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2219\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2231\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2238\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2234\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2232\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2233\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2235\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2237\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \2236\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22CheckEnvWarp\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1 \22"
module asm "\09.ascii \22\5C\22context.Context\5C\22 \22"
module asm "\09.ascii \22<type 2 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Deadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22deadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3 \22"
module asm "\09.ascii \22\5C\22time.Time\5C\22 \22"
module asm "\09.ascii \22<type 4 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.wall\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.ext\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 6 \22"
module asm "\09.ascii \22\5C\22time.Location\5C\22 \22"
module asm "\09.ascii \22<type 7 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.zone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 8 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 9 \22"
module asm "\09.ascii \22\5C\22.time.zone\5C\22 \22"
module asm "\09.ascii \22<type 10 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.tx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 11 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 12 \22"
module asm "\09.ascii \22\5C\22.time.zoneTrans\5C\22 \22"
module asm "\09.ascii \22<type 13 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.time.when\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isstd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.isutc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheStart\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheEnd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.time.cacheZone\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 14 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 9>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 6>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupFirstZone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookupName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22unix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.firstZoneUsed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 15>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isDST\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22start\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22end\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 17 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobEncode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 18 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setLoc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.addSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.unixSec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Before\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Equal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.abs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.stripMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GobDecode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 19 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22After\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Day\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.sec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 20 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Weekday\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21 \22"
module asm "\09.ascii \22\5C\22time.Weekday\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 21>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22loc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Zone\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.setMono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.locabs\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22abs\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22 \22"
module asm "\09.ascii \22\5C\22time.Duration\5C\22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Minutes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Round\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Seconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hours\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanoseconds\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23 \22"
module asm "\09.ascii \22\5C\22time.Month\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalJSON\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 24 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalText\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 25 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsZero\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Format\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Year\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UTC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.date\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22full\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22month\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22day\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22yday\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.nsec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AddDate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22years\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22months\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22days\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Month\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 23>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Second\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.time.mono\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AppendFormat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 26 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22layout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 27 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ISOWeek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22year\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22week\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Clock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hour\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22min\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Hour\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Nanosecond\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 28 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnixNano\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22YearDay\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 16>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnmarshalBinary\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 29 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Add\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Sub\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Local\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Location\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 5>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Done\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 30 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<- \22"
module asm "\09.ascii \22<type 31 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Err\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Value\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 32 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 33 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 34 \22"
module asm "\09.ascii \22\5C\22Cli\5C\22 \22"
module asm "\09.ascii \22<type 35 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 36 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 37 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 34>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Run\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 39 \22"
module asm "\09.ascii \22\5C\22CmdName\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 40 \22"
module asm "\09.ascii \22\5C\22Command\5C\22 \22"
module asm "\09.ascii \22<type 41 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Help\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Parse\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 42 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 43 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Execute\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 44 \22"
module asm "\09.ascii \22\5C\22Config\5C\22 \22"
module asm "\09.ascii \22<type 45 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Credentials\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 46 \22"
module asm "\09.ascii \22\5C\22Credentials\5C\22 \22"
module asm "\09.ascii \22<type 47 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22User\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22user\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Secret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22secret\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22\5C\22json:\5C\5C\5C\22credentials\5C\5C\5C\22\5C\22\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22ConfigPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 48 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 46>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22DetectShell\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 49 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 50 \22"
module asm "\09.ascii \22\5C\22Shell\5C\22 \22"
module asm "\09.ascii \22<type 51 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Command\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22GenerateConfig\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 44>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22New\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22argv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 53 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 38>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewSession\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Session\5C\22 \22"
module asm "\09.ascii \22<type 55 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22User\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Secret\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22sessionType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 56 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.SessionType\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cancel\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 57 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58 \22"
module asm "\09.ascii \22\5C\22net.Conn\5C\22 \22"
module asm "\09.ascii \22<type 59 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 60 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 61 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62 \22"
module asm "\09.ascii \22\5C\22net.Addr\5C\22 \22"
module asm "\09.ascii \22<type 63 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Network\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 64 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 65 \22"
module asm "\09.ascii \22\5C\22Session\5C\22 \22"
module asm "\09.ascii \22<type 66 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.sessionType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 56>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mux\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 67 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 68 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Session\5C\22 \22"
module asm "\09.ascii \22<type 69 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.remoteGoAway\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.localGoAway\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.nextStreamID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.config\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 70 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 71 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Config\5C\22 \22"
module asm "\09.ascii \22<type 72 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22AcceptBacklog\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22EnableKeepAlive\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22KeepAliveInterval\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ConnectionWriteTimeout\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MaxStreamWindowSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22LogOutput\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73 \22"
module asm "\09.ascii \22\5C\22io.Writer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22io\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 74 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 75 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.logger\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 76 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 77 \22"
module asm "\09.ascii \22\5C\22log.Logger\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22log\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 78 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.log.mu\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79 \22"
module asm "\09.ascii \22\5C\22sync.Mutex\5C\22 \22"
module asm "\09.ascii \22<type 80 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.sync.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.sync.sema\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Unlock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lock\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.prefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.flag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.out\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.log.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 82 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 77>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatalf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 84 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatal\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 85 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panicln\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 86 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Println\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 87 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Fatalln\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 88 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panicf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 89 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22flag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetPrefix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22prefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetOutput\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Panic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 90 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Printf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22format\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 91 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Prefix\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.log.formatHeader\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 92 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 93 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22file\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Print\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22...\22"
module asm "\09.ascii \22<type 94 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22l\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 83>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Output\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22calldepth\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 95 \22"
module asm "\09.ascii \22\5C\22io.ReadWriteCloser\5C\22 \22"
module asm "\09.ascii \22<type 96 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 97 \22"
module asm "\09.ascii \22\5C\22io.Reader\5C\22 \22"
module asm "\09.ascii \22<type 98 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 99 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 100 \22"
module asm "\09.ascii \22\5C\22io.Closer\5C\22 \22"
module asm "\09.ascii \22<type 101 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.bufRead\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 102 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 103 \22"
module asm "\09.ascii \22\5C\22bufio.Reader\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22bufio\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 104 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.bufio.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 105 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.rd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.lastByte\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bufio.lastRuneSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 103>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 107 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.fill\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.writeBuf\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Discard\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22discarded\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 108 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Peek\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 109 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x80a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Buffered\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x82a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadLine\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 110 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22isPrefix\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x10a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 111 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.readErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bufio.reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 112 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 106>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pings\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 113 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 114 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 115 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streams\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 116 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 117 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 118 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Stream\5C\22 \22"
module asm "\09.ascii \22<type 119 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvWindow\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindow\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 121 \22"
module asm "\09.ascii \22\5C\22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamState\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.stateLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 122 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 123 \22"
module asm "\09.ascii \22\5C\22bytes.Buffer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22bytes\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 124 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.bytes.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 125 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.off\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.bootstrap\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 126 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2264\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.bytes.lastRead\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 127 \22"
module asm "\09.ascii \22\5C\22.bytes.readOp\5C\22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 123>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.empty\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 129 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadFrom\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.tryGrowByReslice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 130 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Grow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Truncate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Next\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 131 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 132 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.readSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22delim\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22line\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 133 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnreadRune\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.bytes.grow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 128>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 134 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135 \22"
module asm "\09.ascii \22\5C\22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.header\5C\22 \22"
module asm "\09.ascii \22<type 136 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22msgType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22streamID\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Length\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Version\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Flags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MsgType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22h\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StreamID\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 137 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdrLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendHdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 138 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvNotifyCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 139 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 140 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNotifyCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 141 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 142 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readDeadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.writeDeadline\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 118>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Shrink\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.notifyWaiting\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetReadDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.processFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22StreamID\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 144 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendFlags\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendClose\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Session\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.forceClose\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 145 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incrSendWindow\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22flags\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -6>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindowUpdate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetWriteDeadline\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 3>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 143>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 146 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.inflight\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 147 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 148 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.synCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 149 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 150 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.acceptCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 151 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 117>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 152 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 153 \22"
module asm "\09.ascii \22\5C\22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendReady\5C\22 \22"
module asm "\09.ascii \22<type 154 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 155 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Body\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 156 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvDoneCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 157 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 158 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownErr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 159 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type 160 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownLock\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.closeStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incomingStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleGoAway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x102>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AcceptStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 117>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLoop\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OpenStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 117>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumStreams\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Open\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 68>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22LocalAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsClosed\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 161>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22RemoteAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 62>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNoWait\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x102>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Accept\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.keepalive\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.exitErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GoAway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.establishStream\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSendErr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22body\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22errCh\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 162 \22"
module asm "\09.ascii \22chan \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSend\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22body\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.goAway\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22reason\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Ping\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handlePing\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 120>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleStreamMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hdr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 135>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.stateC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.stateR\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 163 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 164 \22"
module asm "\09.ascii \22\5C\22encoding/gob.Decoder\5C\22 \22"
module asm "\09.ascii \22<type 165 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.r\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 97>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 166 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decBuffer\5C\22 \22"
module asm "\09.ascii \22<type 167 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 168 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 166>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Read\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 170 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ReadByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 171 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Drop\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.wireType\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 172 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.typeId\5C\22 \22"
module asm "\09.ascii \22<type -3>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.gobType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.gobType\5C\22 \22"
module asm "\09.ascii \22<type 175 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22.encoding/gob.id\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.setId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 176 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 177 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 178 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.wireType\5C\22 \22"
module asm "\09.ascii \22<type 179 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22ArrayT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 180 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 181 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.arrayType\5C\22 \22"
module asm "\09.ascii \22<type 182 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 183 \22"
module asm "\09.ascii \22\5C\22encoding/gob.CommonType\5C\22 \22"
module asm "\09.ascii \22<type 184 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 185 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 183>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 185>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.setId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 185>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 185>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.id\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 185>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 186 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 187 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 181>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 187>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 188 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22a\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 187>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22len\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SliceT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 189 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 190 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.sliceType\5C\22 \22"
module asm "\09.ascii \22<type 191 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 183>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 190>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 193 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 192>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22StructT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 194 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 195 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.structType\5C\22 \22"
module asm "\09.ascii \22<type 196 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 183>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 197 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 198 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 199 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.fieldType\5C\22 \22"
module asm "\09.ascii \22<type 200 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 195>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 201>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 202 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MapT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 203 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 204 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.mapType\5C\22 \22"
module asm "\09.ascii \22<type 205 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 183>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 206 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 204>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 206>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 207 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 206>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.init\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elem\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 174>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22GobEncoderT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 209 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.gobEncoderType\5C\22 \22"
module asm "\09.ascii \22<type 210 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 183>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 209>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22g\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 211>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.safeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22seen\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 212 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22BinaryMarshalerT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22TextMarshalerT\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 208>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 213 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 178>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.string\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.decoderCache\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 214 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 215 \22"
module asm "\09.ascii \22\5C\22reflect.Type\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22reflect\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 216 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217 \22"
module asm "\09.ascii \22\5C\22reflect.Method\5C\22 \22"
module asm "\09.ascii \22<type 218 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Func\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219 \22"
module asm "\09.ascii \22\5C\22reflect.Value\5C\22 \22"
module asm "\09.ascii \22<type 220 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 221 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 222 \22"
module asm "\09.ascii \22\5C\22.reflect.rtype\5C\22 \22"
module asm "\09.ascii \22<type 223 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.size\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hash\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -7>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.align\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.fieldAlign\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect._\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -5>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.hashfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 224 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225 \22"
module asm "\09.ascii \22\5C\22unsafe.Pointer\5C\22 \22"
module asm "\09.ascii \22\5C\22\22"
module asm "\09.ascii \22unsafe\22"
module asm "\09.ascii \22\5C\22 \22"
module asm "\09.ascii \22<type 226 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22any\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.equalfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 227 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.gcdata\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 228 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.string\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 229 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 230 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 231 \22"
module asm "\09.ascii \22\5C\22.reflect.uncommonType\5C\22 \22"
module asm "\09.ascii \22<type 232 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 229>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 229>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.methods\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 233 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 234 \22"
module asm "\09.ascii \22\5C\22.reflect.method\5C\22 \22"
module asm "\09.ascii \22<type 235 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.reflect.name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 229>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.pkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 229>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.mtyp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 222>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.typ\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.tfn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 237 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 231>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 237>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 237>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 237>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptrToThis\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 238 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239 \22"
module asm "\09.ascii \22\5C\22reflect.StructField\5C\22 \22"
module asm "\09.ascii \22<type 240 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241 \22"
module asm "\09.ascii \22\5C\22reflect.StructTag\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Get\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22tag\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 241>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Lookup\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Offset\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 242 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Anonymous\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x4a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ptrTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 243 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244 \22"
module asm "\09.ascii \22\5C\22reflect.Kind\5C\22 \22"
module asm "\09.ascii \22<type -12>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.exportedMethods\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 245 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 234>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x42>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointers\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22m\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Align\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 246 \22"
module asm "\09.ascii \22\5C\22reflect.ChanDir\5C\22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 246>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldAlign\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 236>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.ptr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22? \22"
module asm "\09.ascii \22<type 247 \22"
module asm "\09.ascii \22\5C\22.reflect.flag\5C\22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeExported\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBeAssignable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.ro\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22f\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 247>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.mustBe\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22expected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 248 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetMapIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22key\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetBool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Set\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Method\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowFloat\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MapKeys\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 249 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetLen\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 250 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetPointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22OverflowUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CallSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 251 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 252 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Float\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -10>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TrySend\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetCap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22n\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Cap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.setRunes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 253 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetComplex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.runes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 254 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -21>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22InterfaceData\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 255 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \222\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TryRecv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Uint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Convert\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22t\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bool\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22val\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.assignTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22context\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22dst\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 221>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22target\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Slice3\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22j\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22k\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Recv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ok\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Close\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 256 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 257 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 258 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Addr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Interface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 259 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Int\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.send\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22nb\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22selected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 225>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22CanSet\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Pointer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 260 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Complex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -18>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsValid\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.reflect.call\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22in\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 261 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 262 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x12>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UnsafeAddr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22IsNil\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22MethodByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 217>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumMethod\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Name\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22PkgPath\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Size\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -13>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22String\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.rawString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Kind\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 244>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Implements\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22AssignableTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ConvertibleTo\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Comparable\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Bits\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22ChanDir\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 246>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22IsVariadic\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Elem\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Field\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByIndex\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 263 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByName\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22FieldByNameFunc\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22match\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 264 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 239>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22In\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Key\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumField\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumIn\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22NumOut\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Out\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.common\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 221>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.reflect.uncommon\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 230>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 265 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 266 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 267 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 268 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decEngine\5C\22 \22"
module asm "\09.ascii \22<type 269 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 270 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 271 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decInstr\5C\22 \22"
module asm "\09.ascii \22<type 272 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decOp\5C\22 \22"
module asm "\09.ascii \22<type 274 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 275 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 271>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 277 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decoderState\5C\22 \22"
module asm "\09.ascii \22<type 278 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 279 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 164>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.fieldnum\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.next\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 280 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 277>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 281 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 277>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.getLength\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 281>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 281>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.field\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 282 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.numInstr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.ignorerCache\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 283 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 266>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.freeList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.countBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 284 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 164>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Decode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 286 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.nextUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.readMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22nbytes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.recvMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeIgnoredValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.nextInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.getIgnoreEnginePtr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22enginePtr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 266>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.getDecEnginePtr\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 288 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.userTypeInfo\5C\22 \22"
module asm "\09.ascii \22<type 289 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.user\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.base\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.indir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.externalEnc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.externalDec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.encIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.decIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -1>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22enginePtr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 266>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeTypeSequence\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22isInterface\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compileDec\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22DecodeValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compileIgnoreSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compileSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x52>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.typeString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22remoteId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeMap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22mtyp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.recvType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22id\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreMap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeArray\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.decHelper\5C\22 \22"
module asm "\09.ascii \22<type 291 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreStruct\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeGobDecoder\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreArrayHelper\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeStruct\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.newDecoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 169>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.freeDecoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22d\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decIgnoreOpFor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22inProgress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 292 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 293 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreArray\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.gobDecodeOpFor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeSlice\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeArrayHelper\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 273>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ovfl\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 290>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ityp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decodeSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 267>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreGobDecoder\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.compatibleType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22fr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22fw\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22inProgress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 294 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.ignoreInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 276>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22dec\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 285>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.decOpFor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22wireId\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22rt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22name\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22inProgress\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 295 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 293>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.updateC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.updateW\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 296 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 297 \22"
module asm "\09.ascii \22\5C\22encoding/gob.Encoder\5C\22 \22"
module asm "\09.ascii \22<type 298 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 79>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 299 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 300 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 173>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.countState\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 302 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encoderState\5C\22 \22"
module asm "\09.ascii \22<type 303 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 304 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 297>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 306 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encBuffer\5C\22 \22"
module asm "\09.ascii \22<type 307 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 308 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.scratch\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 309 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \2264\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 306>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Reset\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Bytes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 311 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteByte\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22c\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Write\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22p\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 312 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Len\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 310>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteString\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.sendZero\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.fieldnum\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.buf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 313 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \229\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.next\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 314 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 302>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.update\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 316 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 317 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encInstr\5C\22 \22"
module asm "\09.ascii \22<type 318 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encOp\5C\22 \22"
module asm "\09.ascii \22<type 320 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 321 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 317>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.field\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.index\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 322 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.indir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeInt\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22i\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -4>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 315>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeUint\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22x\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.freeList\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.byteBuf\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 306>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.encoding/gob.err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 297>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22EncodeValue\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendTypeId\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendTypeDescriptor\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 324 \22"
module asm "\09.ascii \22interface { \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendActualType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22actual\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.pushWriter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeSingle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 326 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encEngine\5C\22 \22"
module asm "\09.ascii \22<type 327 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.encoding/gob.instr\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 328 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 317>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.freeEncoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22e\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeStruct\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22engine\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 325>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.newEncoderState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeMap\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemOp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22keyIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.popWriter\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeArray\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22op\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 319>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22elemIndir\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22length\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22helper\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 329 \22"
module asm "\09.ascii \22\5C\22.encoding/gob.encHelper\5C\22 \22"
module asm "\09.ascii \22<type 330 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22value\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x32>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.writer\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.writeMessage\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeInterface\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22iv\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.sendType\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 73>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 301>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22origt\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 215>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22sent\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.setError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22err\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22enc\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 323>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.encoding/gob.encodeGobEncoder\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22b\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 305>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22ut\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 287>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22v\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 219>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.errorC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.errorR\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 163>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.dataC\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 331 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 332 \22"
module asm "\09.ascii \22\5C\22WarpState\5C\22 \22"
module asm "\09.ascii \22<type 333 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.windowSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Size\5C\22 \22"
module asm "\09.ascii \22<type 335 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Rows\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Cols\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -11>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.users\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 336 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 337 \22"
module asm "\09.ascii \22\5C\22UserState\5C\22 \22"
module asm "\09.ascii \22<type 338 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 339 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Mode\5C\22 \22"
module asm "\09.ascii \22<type -8>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.hosting\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22u\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 340 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ProtocolUser\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 341 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.User\5C\22 \22"
module asm "\09.ascii \22<type 342 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Token\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Hosting\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 332>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Update\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.State\5C\22 \22"
module asm "\09.ascii \22<type 345 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22WindowSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Users\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 346 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 341>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22hosting\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GetMode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22user\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 347 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetMode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22user\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HostCanReceiveWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ProtocolState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WindowSize\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22w\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Modes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 348 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.tornDown\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.cancel\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 349 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 65>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22DataC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WriteDataC\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22data\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 351 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -20>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Warp\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x2a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Session\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x3a>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22ProtocolState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22GetMode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22user\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 347>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetMode\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22user\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22mode\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22UpdateState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22state\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22hosting\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22HostCanReceiveWrite\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22WindowSize\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Modes\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 352 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TornDown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22TearDown\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SendHostUpdate\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22update\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 353 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.HostUpdate\5C\22 \22"
module asm "\09.ascii \22<type 354 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22From\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22WindowSize\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 334>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Modes\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 355 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 339>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22DecodeError\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 356 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 357 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Error\5C\22 \22"
module asm "\09.ascii \22<type 358 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Code\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Message\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22ss\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 350>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22DecodeState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 359 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewSrv\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 360 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 361 \22"
module asm "\09.ascii \22\5C\22Srv\5C\22 \22"
module asm "\09.ascii \22<type 362 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22.command-line-arguments.warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 64>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.path\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22.command-line-arguments.mutex\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 81>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x22>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 361>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Path\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22SetSession\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22session\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 64>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22Run\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.handle\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22conn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 58>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.executeState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 364 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.Command\5C\22 \22"
module asm "\09.ascii \22<type 365 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 366 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.CommandType\5C\22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Args\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 367 \22"
module asm "\09.ascii \22[\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 368 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.CommandResult\5C\22 \22"
module asm "\09.ascii \22<type 369 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 366>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Disconnected\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -15>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22SessionState\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 344>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Error\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 357>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.executeAuthorize\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 364>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 368>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22s\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 363>\22"
module asm "\09.ascii \22) \22"
module asm "\09.ascii \22.command-line-arguments.executeRevoke\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x9>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 364>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 368>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22NewWarpState\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22hello\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 370 \22"
module asm "\09.ascii \22\5C\22github.com/spolu/warp.SessionHello\5C\22 \22"
module asm "\09.ascii \22<type 371 \22"
module asm "\09.ascii \22struct { \22"
module asm "\09.ascii \22Warp\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22From\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 54>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Version\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Type\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 56>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22Username\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -16>\22"
module asm "\09.ascii \22; \22"
module asm "\09.ascii \22}\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 343>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22var \22"
module asm "\09.ascii \22Registrar\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 372 \22"
module asm "\09.ascii \22map [\22"
module asm "\09.ascii \22<type 39>\22"
module asm "\09.ascii \22] \22"
module asm "\09.ascii \22<type 373 \22"
module asm "\09.ascii \22(\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 40>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22RetrieveConfig\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22RetrieveOrGenerateConfig\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 52>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22func \22"
module asm "\09.ascii \22RunLocalCommand\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22ctx\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<esc:0x1>\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 1>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22cmd\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 364>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22 (\22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type 374 \22"
module asm "\09.ascii \22*\22"
module asm "\09.ascii \22<type 368>\22"
module asm "\09.ascii \22>\22"
module asm "\09.ascii \22, \22"
module asm "\09.ascii \22?\22"
module asm "\09.ascii \22 \22"
module asm "\09.ascii \22<type -19>\22"
module asm "\09.ascii \22)\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 65>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 50>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 361>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 337>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22type \22"
module asm "\09.ascii \22<type 332>\22"
module asm "\09.ascii \22;\5Cn\22"
module asm "\09.ascii \22checksum 66B7B372EF28A6BFCC5E9ADB5F7604FB381508B9;\5Cn\22"
module asm "\09.text"

%StructType.0 = type { %_type.0, %IPST.30 }
%_type.0 = type { i64, i64, i32, i8, i8, i8, %__go_descriptor.2*, %__go_descriptor.3*, i8*, { i8*, i64 }*, %uncommonType.0*, %_type.0* }
%__go_descriptor.2 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.3 = type { i8 (i8*, i8*, i8*)* }
%uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.28 }
%IPST.28 = type { %method.0*, i64, i64 }
%method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, %_type.0*, i8* }
%IPST.30 = type { %structField.0*, i64, i64 }
%structField.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0*, { i8*, i64 }*, i64 }
%StructField.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, { i8*, i64 }, i64, %IPST.7, i8 }
%Type.0 = type { { %_type.0*, i64 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, void (%StructField.0*, i8*, i8*, i64)*, i64 (i8*, i8*)*, void (%StructField.0*, i8*, i8*, %IPST.7*)*, void ({ %StructField.0, i8 }*, i8*, i8*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, i8*, %__go_descriptor.34*)*, i8 (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64)*, i8 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, void (%Method.0*, i8*, i8*, i64)*, void ({ %Method.0, i8 }*, i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.rtype.0* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, %.reflect.uncommonType.0* (i8*, i8*)* }*, i8* }
%__go_descriptor.34 = type { i8 (i8*, i64, i64)* }
%Method.0 = type { { i8*, i64 }, { i8*, i64 }, %Type.0, %Value.0, i64 }
%Value.0 = type { %.reflect.rtype.0*, i8*, i64 }
%.reflect.uncommonType.0 = type { { i8*, i64 }*, { i8*, i64 }*, %IPST.15 }
%IPST.15 = type { %.reflect.method.0*, i64, i64 }
%.reflect.method.0 = type { { i8*, i64 }*, { i8*, i64 }*, %.reflect.rtype.0*, %.reflect.rtype.0*, i8* }
%IPST.7 = type { i64*, i64, i64 }
%.reflect.rtype.0 = type { i64, i64, i32, i8, i8, i8, i8, %__go_descriptor.18*, %__go_descriptor.19*, i8*, { i8*, i64 }*, %.reflect.uncommonType.0*, %.reflect.rtype.0* }
%__go_descriptor.18 = type { i64 (i8*, i8*, i64)* }
%__go_descriptor.19 = type { i8 (i8*, i8*, i8*)* }
%PtrType.0 = type { %_type.0, %_type.0* }
%RawSockaddrAny.0 = type { %RawSockaddr.0, [96 x i8] }
%RawSockaddr.0 = type { i16, [14 x i8] }
%error.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)* }*, i8* }
%SockaddrInet4.0 = type { i64, [4 x i8], %RawSockaddrInet4.0 }
%RawSockaddrInet4.0 = type { i16, i16, [4 x i8], [8 x i8] }
%SockaddrInet6.0 = type { i64, i32, [16 x i8], %RawSockaddrInet6.0 }
%RawSockaddrInet6.0 = type { i16, i16, i32, [16 x i8], i32 }
%SockaddrLinklayer.0 = type { i16, i64, i16, i8, i8, [8 x i8], %RawSockaddrLinklayer.0 }
%RawSockaddrLinklayer.0 = type { i16, i16, i32, i16, i8, i8, [8 x i8] }
%SockaddrNetlink.0 = type { i16, i16, i32, i32, %RawSockaddrNetlink.0 }
%RawSockaddrNetlink.0 = type { i16, i16, i32, i32 }
%SockaddrUnix.0 = type { { i8*, i64 }, %RawSockaddrUnix.0 }
%RawSockaddrUnix.0 = type { i16, [108 x i8] }
%functionDescriptor.0 = type { i64 }
%InterfaceType.0 = type { %_type.0, %IPST.31 }
%IPST.31 = type { %imethod.0*, i64, i64 }
%imethod.0 = type { { i8*, i64 }*, { i8*, i64 }*, %_type.0* }
%FuncType.0 = type { %_type.0, i8, %IPST.29, %IPST.29 }
%IPST.29 = type { %_type.0**, i64, i64 }
%SliceType.0 = type { %_type.0, %_type.0* }
%MapType.0 = type { %_type.0, %_type.0*, %_type.0*, %_type.0*, %_type.0*, i8, i8, i8, i8, i16, i8, i8 }
%ArrayType.0 = type { %_type.0, %_type.0*, %_type.0*, i64 }
%Regexp.0 = type { %.regexp.regexpRO.0, %Mutex.0, %IPST.22 }
%.regexp.regexpRO.0 = type { { i8*, i64 }, %Prog.0*, %.regexp.onePassProg.0*, { i8*, i64 }, { i8*, i64, i64 }, i8, i32, i32, i8, i64, %IPST.2, i8 }
%Prog.0 = type { %IPST.23, i64, i64 }
%IPST.23 = type { %Inst.0*, i64, i64 }
%Inst.0 = type { i8, i32, i32, %IPST.16 }
%IPST.16 = type { i32*, i64, i64 }
%.regexp.onePassProg.0 = type { %IPST.18, i64, i64 }
%IPST.18 = type { %.regexp.onePassInst.0*, i64, i64 }
%.regexp.onePassInst.0 = type { %Inst.0, %IPST.17 }
%IPST.17 = type { i32*, i64, i64 }
%IPST.2 = type { { i8*, i64 }*, i64, i64 }
%Mutex.0 = type { i32, i32 }
%IPST.22 = type { %.regexp.machine.0**, i64, i64 }
%.regexp.machine.0 = type { %Regexp.0*, %Prog.0*, %.regexp.onePassProg.0*, i64, %.regexp.bitState.0*, %.regexp.queue.0, %.regexp.queue.0, %IPST.21, i8, %IPST.7, %.regexp.inputBytes.0, %.regexp.inputString.0, %.regexp.inputReader.0 }
%.regexp.bitState.0 = type { %Prog.0*, i64, %IPST.7, %IPST.19, %IPST.17 }
%IPST.19 = type { %.regexp.job.0*, i64, i64 }
%.regexp.job.0 = type { i32, i8, i64 }
%.regexp.queue.0 = type { %IPST.17, %IPST.20 }
%IPST.20 = type { %.regexp.entry.0*, i64, i64 }
%.regexp.entry.0 = type { i32, %.regexp.thread.0* }
%.regexp.thread.0 = type { %Inst.0*, %IPST.7 }
%IPST.21 = type { %.regexp.thread.0**, i64, i64 }
%.regexp.inputBytes.0 = type { { i8*, i64, i64 } }
%.regexp.inputString.0 = type { { i8*, i64 } }
%.regexp.inputReader.0 = type { %RuneReader.0, i8, i64 }
%RuneReader.0 = type { { %_type.0*, void ({ i32, i64, %error.0 }*, i8*, i8*)* }*, i8* }
%IPST.3 = type { %IPST.11*, i64, i64 }
%IPST.11 = type { %_type.0*, i8* }
%Writer.0 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%CommandResult.0 = type { { i8*, i64 }, i8, %State.0, %Error.0 }
%State.0 = type { { i8*, i64 }, %Size.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%Size.0 = type { i64, i64 }
%Error.0 = type { { i8*, i64 }, { i8*, i64 } }
%User.0 = type { { i8*, i64 }, { i8*, i64 }, i64, i8 }
%Cli.0 = type { %Context.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %IPST.2 }
%Context.0 = type { { %_type.0*, void ({ %Time.0, i8 }*, i8*, i8*)*, {}* (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64)* }*, i8* }
%Time.0 = type { i64, i64, %Location.0* }
%Location.0 = type { { i8*, i64 }, %IPST.26, %IPST.27, i64, i64, %.time.zone.0* }
%IPST.26 = type { %.time.zone.0*, i64, i64 }
%IPST.27 = type { %.time.zoneTrans.0*, i64, i64 }
%.time.zoneTrans.0 = type { i64, i8, i8, i8 }
%.time.zone.0 = type { { i8*, i64 }, i64, i8 }
%__go_descriptor.8 = type { { i64, i64 } (i8*)* }
%Config.0 = type { %Credentials.0 }
%Credentials.0 = type { { i8*, i64 }, { i8*, i64 } }
%FileInfo.0 = type { { %_type.0*, i8 (i8*, i8*)*, void (%Time.0*, i8*, i8*)*, i32 (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, i64 (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, i8* }
%Command.1 = type { { i8*, i64 }, %IPST.2 }
%Conn.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%__go_descriptor.47 = type { void (i8*, i8*)* }
%Decoder.0 = type { %Mutex.0, %Reader.1, %".encoding/gob.decBuffer.0", { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %".encoding/gob.decoderState.0"*, { i8*, i64, i64 }, %error.0 }
%Reader.1 = type { { %_type.0*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%".encoding/gob.decBuffer.0" = type { { i8*, i64, i64 }, i64 }
%".encoding/gob.decoderState.0" = type { %Decoder.0*, %".encoding/gob.decBuffer.0"*, i64, %".encoding/gob.decoderState.0"* }
%Encoder.0 = type { %Mutex.0, %IPST.9, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %".encoding/gob.encoderState.0"*, %".encoding/gob.encoderState.0"*, %".encoding/gob.encBuffer.0", %error.0 }
%IPST.9 = type { %Writer.0*, i64, i64 }
%".encoding/gob.encoderState.0" = type { %Encoder.0*, %".encoding/gob.encBuffer.0"*, i8, i64, [9 x i8], %".encoding/gob.encoderState.0"* }
%".encoding/gob.encBuffer.0" = type { { i8*, i64, i64 }, [64 x i8] }
%Session.0 = type { %Session.1, { i8*, i64 }, { i8*, i64 }, { i8*, i64 }, %Conn.0, %Session.2*, %Conn.0, %Decoder.0*, %Conn.0, %Encoder.0*, %Conn.0, %Decoder.0*, %Conn.0, %WarpState.0*, i8, %__go_descriptor.16*, %Mutex.0* }
%Session.1 = type { { i8*, i64 }, { i8*, i64 }, { i8*, i64 } }
%Session.2 = type { i32, i32, i32, %Config.1*, %Logger.0*, %ReadWriteCloser.0, %Reader.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i32, %Mutex.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, %Mutex.0, {}*, {}*, {}*, {}*, i8, %error.0, {}*, %Mutex.0 }
%Config.1 = type { i64, i8, i64, i64, i32, %Writer.0 }
%Logger.0 = type { %Mutex.0, { i8*, i64 }, i64, %Writer.0, { i8*, i64, i64 } }
%ReadWriteCloser.0 = type { { %_type.0*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, i8* }
%Reader.0 = type { { i8*, i64, i64 }, %Reader.1, i64, i64, %error.0, i64, i64 }
%WarpState.0 = type { { i8*, i64 }, %Size.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%__go_descriptor.16 = type { void (i8*)* }
%HostUpdate.0 = type { { i8*, i64 }, %Session.1, %Size.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* }
%UserState.0 = type { { i8*, i64 }, { i8*, i64 }, i64, i8 }
%IPST.4 = type { { i8*, i64 }*, %UserState.0*, i8*, { i64, i8, i8, i16, i32, %IPST.1*, %IPST.1*, i64, i8* }*, %IPST.1*, %IPST.1*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.1 = type { [8 x i8], [8 x { i8*, i64 }], [8 x %UserState.0], i8* }
%IPST.5 = type { { i8*, i64 }*, %User.0*, i8*, { i64, i8, i8, i16, i32, %IPST.0*, %IPST.0*, i64, i8* }*, %IPST.0*, %IPST.0*, i8*, i8*, i64, i8, i8, i8, i8, i64, i64 }
%IPST.0 = type { [8 x i8], [8 x { i8*, i64 }], [8 x %User.0], i8* }
%SessionHello.0 = type { { i8*, i64 }, %Session.1, { i8*, i64 }, { i8*, i64 }, { i8*, i64 } }
%Shell.0 = type { { i8*, i64 } }
%Srv.0 = type { { i8*, i64 }, %Session.0*, { i8*, i64 }, %Mutex.0* }
%Listener.0 = type { { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, i8* }

$imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = comdat any

$pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = comdat any

$imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4 = comdat any

$pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4 = comdat any

$imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6 = comdat any

$pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6 = comdat any

$imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer = comdat any

$pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer = comdat any

$imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink = comdat any

$pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink = comdat any

$imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix = comdat any

$pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix = comdat any

$gcbits..ba = comdat any

$type...1command_line_arguments.CmdName = comdat any

$gcbits..da = comdat any

$type...1command_line_arguments.Command = comdat any

$type..func.8context.Context.9.8error.9 = comdat any

$error..d = comdat any

$type...1error = comdat any

$type..func.8.9.8string.9 = comdat any

$string..d = comdat any

$type...1string = comdat any

$type..func.8context.Context.9.8.9 = comdat any

$type..func.8.9.8command_line_arguments.CmdName.9 = comdat any

$type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9 = comdat any

$type...6.7string = comdat any

$type..map.6string.7string = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkwkwka = comdat any

$type...68x.7uint8 = comdat any

$uint8..d = comdat any

$type...1uint8 = comdat any

$type...6.7uint8 = comdat any

$type...68x.7string = comdat any

$gcbits..wkwa = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$gcbits..mb = comdat any

$int..d = comdat any

$type...1int = comdat any

$uint16..d = comdat any

$type...1uint16 = comdat any

$uint32..d = comdat any

$type...1uint32 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = comdat any

$uintptr..d = comdat any

$type...1uintptr = comdat any

$type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9 = comdat any

$type..func.8.9.8command_line_arguments.Command.9 = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkEGba = comdat any

$type...68x.7command_line_arguments.CmdName = comdat any

$type...6.7command_line_arguments.CmdName = comdat any

$type...68x.7func.8.9.8command_line_arguments.Command.9 = comdat any

$gcbits..Gh = comdat any

$type...6.7func.8.9.8command_line_arguments.Command.9 = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5 = comdat any

$gcbits..pa = comdat any

$type...1command_line_arguments.Cli = comdat any

$type..func.8.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Cli.9.8error.9 = comdat any

$type...1.1command_line_arguments.Cli = comdat any

$type...60x.7string = comdat any

$gcbits..fa = comdat any

$type...1command_line_arguments.Credentials = comdat any

$type...1command_line_arguments.Config = comdat any

$gcbits..wkEGGCa = comdat any

$type...1command_line_arguments.Session = comdat any

$type..func.8.9.8net.Conn.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8net.Conn.9 = comdat any

$type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9 = comdat any

$type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9 = comdat any

$type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9 = comdat any

$type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9 = comdat any

$type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9 = comdat any

$type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9 = comdat any

$type..func.8.9.8bool.9 = comdat any

$bool..d = comdat any

$type...1bool = comdat any

$type..func.8.1command_line_arguments.Session.9.8bool.9 = comdat any

$type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9 = comdat any

$type..map.6string.7github_com_spolu_warp.Mode = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkbaba = comdat any

$type...68x.7github_com_spolu_warp.Mode = comdat any

$type...6.7github_com_spolu_warp.Mode = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = comdat any

$type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9 = comdat any

$type..func.8.9.8github_com_spolu_warp.State.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9 = comdat any

$type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9 = comdat any

$type..func.8.9.8github_com_spolu_warp.Session.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9 = comdat any

$type..func.8string.3github_com_spolu_warp.Mode.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9 = comdat any

$type..func.8.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8.9 = comdat any

$type..func.8github_com_spolu_warp.State.3bool.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8string.9 = comdat any

$type..func.8.9.8github_com_spolu_warp.Size.9 = comdat any

$type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9 = comdat any

$type..func.8.6.7uint8.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9 = comdat any

$type...1.1command_line_arguments.Session = comdat any

$type...1command_line_arguments.WarpState = comdat any

$type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9 = comdat any

$type..func.8.1command_line_arguments.WarpState.9.8bool.9 = comdat any

$type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9 = comdat any

$type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9 = comdat any

$type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9 = comdat any

$type...1.1command_line_arguments.WarpState = comdat any

$gcbits..ra = comdat any

$type..map.6string.7command_line_arguments.UserState = comdat any

$type...1command_line_arguments.UserState = comdat any

$type..func.8.9.8github_com_spolu_warp.User.9 = comdat any

$type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9 = comdat any

$type...1.1command_line_arguments.UserState = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5 = comdat any

$gcbits..kwkwircfkvircba = comdat any

$type...68x.7command_line_arguments.UserState = comdat any

$gcbits..fkvircfkva = comdat any

$type...6.7command_line_arguments.UserState = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5 = comdat any

$type...1command_line_arguments.Shell = comdat any

$gcbits..nb = comdat any

$type...1command_line_arguments.Srv = comdat any

$type..func.8.1command_line_arguments.Srv.9.8string.9 = comdat any

$type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9 = comdat any

$type..func.8context.Context.3.1command_line_arguments.Session.9.8.9 = comdat any

$type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9 = comdat any

$type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9 = comdat any

$type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9 = comdat any

$type..func.8context.Context.3net.Conn.9.8error.9 = comdat any

$type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9 = comdat any

$type...1.1command_line_arguments.Srv = comdat any

$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5 = comdat any

$type..struct.4.4x.5fn.0func.8.9.8.9.5 = comdat any

$type..map.6string.7github_com_spolu_warp.User = comdat any

$type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = comdat any

$type...68x.7github_com_spolu_warp.User = comdat any

$type...6.7github_com_spolu_warp.User = comdat any

$type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = comdat any

$type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = comdat any

$gcbits..ha = comdat any

$gcbits..ppppa = comdat any

$gcbits..pppppppppa = comdat any

$gcbits..GGda = comdat any

$gcbits..Ga = comdat any

$gcbits..pppa = comdat any

$gcbits..ppaa = comdat any

$gcbits..GGGGGGGGGGGGGGGG = comdat any

$gcbits..GGGGGGGa = comdat any

$gcbits..pppppppppppppppppa = comdat any

@reflect..reflect.rtype..d = external constant %StructType.0
@imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = weak local_unnamed_addr constant { %_type.0*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)*, i64 (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.7*)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.34*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, i8 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)*, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @reflect..reflect.rtype..d, i32 0, i32 0), i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Align, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.AssignableTo, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Bits, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.ChanDir, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Comparable, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.ConvertibleTo, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Elem, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Field, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.FieldAlign, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.7*)* @reflect.rtype.FieldByIndex, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.FieldByName, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.34*)* @reflect.rtype.FieldByNameFunc, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.Implements, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.In, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.IsVariadic, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Key, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Kind, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Len, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Method, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.MethodByName, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Name, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumField, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumIn, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumMethod, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumOut, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Out, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.PkgPath, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Size, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.String, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.common, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.rawString, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* bitcast (%.reflect.uncommonType.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.uncommon..stub to %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)*) }, comdat
@type...1reflect.rtype = external constant %PtrType.0
@pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype = weak local_unnamed_addr constant { %_type.0*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)*, i64 (i8*, %.reflect.rtype.0*)*, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.7*)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.34*)*, i8 (i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, i8 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)*, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, i64 (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)*, { i64, i64 } (i8*, %.reflect.rtype.0*)*, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1reflect.rtype, i32 0, i32 0), i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Align, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.AssignableTo, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Bits, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.ChanDir, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Comparable, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.ConvertibleTo, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Elem, void (%StructField.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Field, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.FieldAlign, void (%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.7*)* @reflect.rtype.FieldByIndex, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.FieldByName, void ({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.34*)* @reflect.rtype.FieldByNameFunc, i8 (i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.Implements, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.In, i8 (i8*, %.reflect.rtype.0*)* @reflect.rtype.IsVariadic, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Key, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Kind, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Len, void (%Method.0*, i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Method, void ({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64)* @reflect.rtype.MethodByName, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.Name, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumField, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumIn, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumMethod, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.NumOut, { i64, i64 } (i8*, %.reflect.rtype.0*, i64)* @reflect.rtype.Out, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.PkgPath, i64 (i8*, %.reflect.rtype.0*)* @reflect.rtype.Size, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.String, %.reflect.rtype.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.common, { i64, i64 } (i8*, %.reflect.rtype.0*)* @reflect.rtype.rawString, %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)* bitcast (%.reflect.uncommonType.0* (i8*, %.reflect.rtype.0*)* @reflect.rtype.uncommon..stub to %.reflect.uncommonType.0* (i8*, %.reflect.uncommonType.0*)*) }, comdat
@syscall.SockaddrInet4..d = external constant %StructType.0
@imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4 = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet4.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @syscall.SockaddrInet4..d, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet4.0*)* @syscall.SockaddrInet4.sockaddr }, comdat
@type...1syscall.SockaddrInet4 = external constant %PtrType.0
@pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4 = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet4.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1syscall.SockaddrInet4, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet4.0*)* @syscall.SockaddrInet4.sockaddr }, comdat
@syscall.SockaddrInet6..d = external constant %StructType.0
@imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6 = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet6.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @syscall.SockaddrInet6..d, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet6.0*)* @syscall.SockaddrInet6.sockaddr }, comdat
@type...1syscall.SockaddrInet6 = external constant %PtrType.0
@pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6 = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet6.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1syscall.SockaddrInet6, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet6.0*)* @syscall.SockaddrInet6.sockaddr }, comdat
@syscall.SockaddrLinklayer..d = external constant %StructType.0
@imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrLinklayer.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @syscall.SockaddrLinklayer..d, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrLinklayer.0*)* @syscall.SockaddrLinklayer.sockaddr }, comdat
@type...1syscall.SockaddrLinklayer = external constant %PtrType.0
@pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrLinklayer.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1syscall.SockaddrLinklayer, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrLinklayer.0*)* @syscall.SockaddrLinklayer.sockaddr }, comdat
@syscall.SockaddrNetlink..d = external constant %StructType.0
@imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrNetlink.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @syscall.SockaddrNetlink..d, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrNetlink.0*)* @syscall.SockaddrNetlink.sockaddr }, comdat
@type...1syscall.SockaddrNetlink = external constant %PtrType.0
@pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrNetlink.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1syscall.SockaddrNetlink, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrNetlink.0*)* @syscall.SockaddrNetlink.sockaddr }, comdat
@syscall.SockaddrUnix..d = external constant %StructType.0
@imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrUnix.0*)* } { %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @syscall.SockaddrUnix..d, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrUnix.0*)* @syscall.SockaddrUnix.sockaddr }, comdat
@type...1syscall.SockaddrUnix = external constant %PtrType.0
@pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix = weak local_unnamed_addr constant { %_type.0*, void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrUnix.0*)* } { %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1syscall.SockaddrUnix, i32 0, i32 0), void ({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrUnix.0*)* @syscall.SockaddrUnix.sockaddr }, comdat
@command_line_arguments.CmdName..d = constant %_type.0 { i64 16, i64 8, i32 -1756910347, i8 24, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.strhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.strequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C1, %uncommonType.0* @go..C5, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.CmdName, i32 0, i32 0) }
@runtime.strhash..f = external constant %functionDescriptor.0
@runtime.strequal..f = external constant %functionDescriptor.0
@gcbits..ba = weak constant [1 x i8] c"\01", comdat
@const.0 = private constant [36 x i8] c"\09command_line_arguments\09cli.CmdName\00", align 1
@go..C1 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.0, i32 0, i32 0), i64 35 }
@const.1 = private constant [8 x i8] c"CmdName\00", align 1
@go..C2 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.1, i32 0, i32 0), i64 7 }
@const.2 = private constant [23 x i8] c"command-line-arguments\00", align 1
@go..C3 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C4 = internal global [1 x %method.0] zeroinitializer
@go..C5 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C2, { i8*, i64 }* @go..C3, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C4, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.CmdName = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1954205529, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C6, %uncommonType.0* null, %_type.0* null }, %_type.0* @command_line_arguments.CmdName..d }, comdat
@runtime.memhash64..f = external constant %functionDescriptor.0
@runtime.memequal64..f = external constant %functionDescriptor.0
@const.3 = private constant [37 x i8] c"*\09command_line_arguments\09cli.CmdName\00", align 1
@go..C6 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.3, i32 0, i32 0), i64 36 }
@command_line_arguments.Command..d = constant %InterfaceType.0 { %_type.0 { i64 16, i64 16, i32 2092728491, i8 20, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C7, %uncommonType.0* @go..C11, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Command, i32 0, i32 0) }, %IPST.31 { %imethod.0* getelementptr inbounds ([4 x %imethod.0], [4 x %imethod.0]* @go..C92, i32 0, i32 0), i64 4, i64 4 } }
@runtime.interhash..f = external constant %functionDescriptor.0
@runtime.interequal..f = external constant %functionDescriptor.0
@gcbits..da = weak constant [1 x i8] c"\03", comdat
@const.4 = private constant [36 x i8] c"\09command_line_arguments\09cli.Command\00", align 1
@go..C7 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.4, i32 0, i32 0), i64 35 }
@const.5 = private constant [8 x i8] c"Command\00", align 1
@go..C8 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.5, i32 0, i32 0), i64 7 }
@go..C9 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C10 = internal global [1 x %method.0] zeroinitializer
@go..C11 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C8, { i8*, i64 }* @go..C9, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C10, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Command = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -876082503, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C12, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Command..d, i32 0, i32 0) }, comdat
@const.6 = private constant [37 x i8] c"*\09command_line_arguments\09cli.Command\00", align 1
@go..C12 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.6, i32 0, i32 0), i64 36 }
@const.7 = private constant [8 x i8] c"Execute\00", align 1
@go..C13 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.7, i32 0, i32 0), i64 7 }
@type..func.8context.Context.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1790346456, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C14, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C15, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C31, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.8 = private constant [37 x i8] c"func(\09context\09context.Context) error\00", align 1
@go..C14 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.8, i32 0, i32 0), i64 36 }
@context.Context..d = external constant %InterfaceType.0
@go..C15 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@error..d = weak constant %InterfaceType.0 { %_type.0 { i64 16, i64 16, i32 -2128909609, i8 20, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.interhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.interequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0), { i8*, i64 }* @go..C16, %uncommonType.0* @go..C19, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1error, i32 0, i32 0) }, %IPST.31 { %imethod.0* getelementptr inbounds ([1 x %imethod.0], [1 x %imethod.0]* @go..C30, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.9 = private constant [6 x i8] c"error\00", align 1
@go..C16 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.9, i32 0, i32 0), i64 5 }
@go..C17 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.9, i32 0, i32 0), i64 5 }
@go..C18 = internal global [1 x %method.0] zeroinitializer
@go..C19 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C17, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C18, i32 0, i32 0), i64 0, i64 0 } }
@type...1error = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 297184633, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C20, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0) }, comdat
@const.10 = private constant [7 x i8] c"*error\00", align 1
@go..C20 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.10, i32 0, i32 0), i64 6 }
@const.11 = private constant [6 x i8] c"Error\00", align 1
@go..C21 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.11, i32 0, i32 0), i64 5 }
@type..func.8.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 916039304, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C22, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C23, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C29, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.12 = private constant [14 x i8] c"func() string\00", align 1
@go..C22 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.12, i32 0, i32 0), i64 13 }
@go..C23 = internal global [1 x %_type.0*] zeroinitializer
@string..d = weak constant %_type.0 { i64 16, i64 8, i32 -1998952806, i8 24, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.strhash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.strequal..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C24, %uncommonType.0* @go..C27, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1string, i32 0, i32 0) }, comdat
@const.13 = private constant [7 x i8] c"string\00", align 1
@go..C24 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.13, i32 0, i32 0), i64 6 }
@go..C25 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.13, i32 0, i32 0), i64 6 }
@go..C26 = internal global [1 x %method.0] zeroinitializer
@go..C27 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C25, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C26, i32 0, i32 0), i64 0, i64 0 } }
@type...1string = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1918473815, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C28, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.14 = private constant [8 x i8] c"*string\00", align 1
@go..C28 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.14, i32 0, i32 0), i64 7 }
@go..C29 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C30 = internal global [1 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C21, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0) }]
@go..C31 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.15 = private constant [5 x i8] c"Help\00", align 1
@go..C32 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.15, i32 0, i32 0), i64 4 }
@type..func.8context.Context.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1315882344, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C33, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C34, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C35, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.16 = private constant [31 x i8] c"func(\09context\09context.Context)\00", align 1
@go..C33 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @const.16, i32 0, i32 0), i64 30 }
@go..C34 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C35 = internal global [1 x %_type.0*] zeroinitializer
@const.17 = private constant [5 x i8] c"Name\00", align 1
@go..C36 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.17, i32 0, i32 0), i64 4 }
@type..func.8.9.8command_line_arguments.CmdName.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -773112504, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C37, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C38, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C39, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.18 = private constant [43 x i8] c"func() \09command_line_arguments\09cli.CmdName\00", align 1
@go..C37 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.18, i32 0, i32 0), i64 42 }
@go..C38 = internal global [1 x %_type.0*] zeroinitializer
@go..C39 = internal global [1 x %_type.0*] [%_type.0* @command_line_arguments.CmdName..d]
@const.19 = private constant [6 x i8] c"Parse\00", align 1
@go..C40 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.19, i32 0, i32 0), i64 5 }
@type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1505114328, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C41, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C90, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C91, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.20 = private constant [66 x i8] c"func(\09context\09context.Context, []string, map[string]string) error\00", align 1
@go..C41 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([66 x i8], [66 x i8]* @const.20, i32 0, i32 0), i64 65 }
@type...6.7string = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1998952792, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C42, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d }, comdat
@const.21 = private constant [9 x i8] c"[]string\00", align 1
@go..C42 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.21, i32 0, i32 0), i64 8 }
@type..map.6string.7string = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 297061700, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C43, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* @string..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 16, i8 0, i16 272, i8 1, i8 1 }, comdat
@const.22 = private constant [18 x i8] c"map[string]string\00", align 1
@go..C43 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @const.22, i32 0, i32 0), i64 17 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 272, i64 272, i32 887229860, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..kwkwkwka, i32 0, i32 0), { i8*, i64 }* @go..C44, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C57, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkwkwka = weak constant [5 x i8] c"\AA\AA\AA\AA\02", comdat
@const.23 = private constant [74 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }\00", align 1
@go..C44 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([74 x i8], [74 x i8]* @const.23, i32 0, i32 0), i64 73 }
@const.24 = private constant [8 x i8] c"topbits\00", align 1
@go..C45 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.24, i32 0, i32 0), i64 7 }
@type...68x.7uint8 = weak constant %ArrayType.0 { %_type.0 { i64 8, i64 0, i32 529264193, i8 -111, i8 1, i8 1, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C46, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0), i64 8 }, comdat
@const.25 = private constant [9 x i8] c"[8]uint8\00", align 1
@go..C46 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.25, i32 0, i32 0), i64 8 }
@uint8..d = weak constant %_type.0 { i64 1, i64 0, i32 264632089, i8 -120, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C47, %uncommonType.0* @go..C50, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint8, i32 0, i32 0) }, comdat
@runtime.memhash8..f = external constant %functionDescriptor.0
@runtime.memequal8..f = external constant %functionDescriptor.0
@const.26 = private constant [6 x i8] c"uint8\00", align 1
@go..C47 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.26, i32 0, i32 0), i64 5 }
@go..C48 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.26, i32 0, i32 0), i64 5 }
@go..C49 = internal global [1 x %method.0] zeroinitializer
@go..C50 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C48, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C49, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint8 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -60853863, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C51, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.27 = private constant [7 x i8] c"*uint8\00", align 1
@go..C51 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.27, i32 0, i32 0), i64 6 }
@type...6.7uint8 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 264632103, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C52, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint8..d }, comdat
@const.28 = private constant [8 x i8] c"[]uint8\00", align 1
@go..C52 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.28, i32 0, i32 0), i64 7 }
@const.29 = private constant [5 x i8] c"keys\00", align 1
@go..C53 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.29, i32 0, i32 0), i64 4 }
@type...68x.7string = weak constant %ArrayType.0 { %_type.0 { i64 128, i64 120, i32 297061699, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkwa, i32 0, i32 0), { i8*, i64 }* @go..C54, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 8 }, comdat
@gcbits..wkwa = weak constant [2 x i8] c"UU", comdat
@const.30 = private constant [10 x i8] c"[8]string\00", align 1
@go..C54 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.30, i32 0, i32 0), i64 9 }
@const.31 = private constant [7 x i8] c"values\00", align 1
@go..C55 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.31, i32 0, i32 0), i64 6 }
@const.32 = private constant [9 x i8] c"overflow\00", align 1
@go..C56 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.32, i32 0, i32 0), i64 8 }
@unsafe.Pointer..d = external constant %_type.0
@go..C57 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C45, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C53, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C55, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C56, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 528 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1324374500, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C58, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C89, i32 0, i32 0), i64 9, i64 9 } }, comdat
@gcbits..mb = weak constant [1 x i8] c",", comdat
@const.33 = private constant [274 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C58 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([274 x i8], [274 x i8]* @const.33, i32 0, i32 0), i64 273 }
@const.34 = private constant [6 x i8] c"count\00", align 1
@go..C59 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@int..d = weak constant %_type.0 { i64 8, i64 0, i32 876704034, i8 -126, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C60, %uncommonType.0* @go..C63, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1int, i32 0, i32 0) }, comdat
@const.35 = private constant [4 x i8] c"int\00", align 1
@go..C60 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.35, i32 0, i32 0), i64 3 }
@go..C61 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.35, i32 0, i32 0), i64 3 }
@go..C62 = internal global [1 x %method.0] zeroinitializer
@go..C63 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C61, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C62, i32 0, i32 0), i64 0, i64 0 } }
@type...1int = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1142362665, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C64, %uncommonType.0* null, %_type.0* null }, %_type.0* @int..d }, comdat
@const.36 = private constant [5 x i8] c"*int\00", align 1
@go..C64 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.36, i32 0, i32 0), i64 4 }
@const.37 = private constant [6 x i8] c"flags\00", align 1
@go..C65 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@const.38 = private constant [2 x i8] c"B\00", align 1
@go..C66 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.38, i32 0, i32 0), i64 1 }
@const.39 = private constant [10 x i8] c"noverflow\00", align 1
@go..C67 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.39, i32 0, i32 0), i64 9 }
@uint16..d = weak constant %_type.0 { i64 2, i64 0, i32 76732288, i8 -119, i8 2, i8 2, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash16..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal16..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C68, %uncommonType.0* @go..C71, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint16, i32 0, i32 0) }, comdat
@runtime.memhash16..f = external constant %functionDescriptor.0
@runtime.memequal16..f = external constant %functionDescriptor.0
@const.40 = private constant [7 x i8] c"uint16\00", align 1
@go..C68 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.40, i32 0, i32 0), i64 6 }
@go..C69 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.40, i32 0, i32 0), i64 6 }
@go..C70 = internal global [1 x %method.0] zeroinitializer
@go..C71 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C69, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C70, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint16 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1227716617, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C72, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint16..d }, comdat
@const.41 = private constant [8 x i8] c"*uint16\00", align 1
@go..C72 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.41, i32 0, i32 0), i64 7 }
@const.42 = private constant [6 x i8] c"hash0\00", align 1
@go..C73 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.42, i32 0, i32 0), i64 5 }
@uint32..d = weak constant %_type.0 { i64 4, i64 0, i32 278357906, i8 -118, i8 4, i8 4, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash32..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal32..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C74, %uncommonType.0* @go..C77, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uint32, i32 0, i32 0) }, comdat
@runtime.memhash32..f = external constant %functionDescriptor.0
@runtime.memequal32..f = external constant %functionDescriptor.0
@const.43 = private constant [7 x i8] c"uint32\00", align 1
@go..C74 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.43, i32 0, i32 0), i64 6 }
@go..C75 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.43, i32 0, i32 0), i64 6 }
@go..C76 = internal global [1 x %method.0] zeroinitializer
@go..C77 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C75, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C76, i32 0, i32 0), i64 0, i64 0 } }
@type...1uint32 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 158759209, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C78, %uncommonType.0* null, %_type.0* null }, %_type.0* @uint32..d }, comdat
@const.44 = private constant [8 x i8] c"*uint32\00", align 1
@go..C78 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.44, i32 0, i32 0), i64 7 }
@const.45 = private constant [8 x i8] c"buckets\00", align 1
@go..C79 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.45, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1310775881, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C80, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.46 = private constant [75 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }\00", align 1
@go..C80 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([75 x i8], [75 x i8]* @const.46, i32 0, i32 0), i64 74 }
@const.47 = private constant [11 x i8] c"oldbuckets\00", align 1
@go..C81 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.47, i32 0, i32 0), i64 10 }
@const.48 = private constant [10 x i8] c"nevacuate\00", align 1
@go..C82 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.48, i32 0, i32 0), i64 9 }
@uintptr..d = weak constant %_type.0 { i64 8, i64 0, i32 -1488193301, i8 -116, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C83, %uncommonType.0* @go..C86, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1uintptr, i32 0, i32 0) }, comdat
@const.49 = private constant [8 x i8] c"uintptr\00", align 1
@go..C83 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.49, i32 0, i32 0), i64 7 }
@go..C84 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.49, i32 0, i32 0), i64 7 }
@go..C85 = internal global [1 x %method.0] zeroinitializer
@go..C86 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C84, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C85, i32 0, i32 0), i64 0, i64 0 } }
@type...1uintptr = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1958710969, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C87, %uncommonType.0* null, %_type.0* null }, %_type.0* @uintptr..d }, comdat
@const.50 = private constant [9 x i8] c"*uintptr\00", align 1
@go..C87 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.50, i32 0, i32 0), i64 8 }
@const.51 = private constant [6 x i8] c"extra\00", align 1
@go..C88 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.51, i32 0, i32 0), i64 5 }
@go..C89 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C59, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C65, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C66, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C67, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C73, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C79, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C81, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C82, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C88, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@go..C90 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i32 0, i32 0)]
@go..C91 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C92 = internal global [4 x %imethod.0] [%imethod.0 { { i8*, i64 }* @go..C13, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8error.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C32, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C36, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.CmdName.9, i32 0, i32 0) }, %imethod.0 { { i8*, i64 }* @go..C40, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9, i32 0, i32 0) }]
@command_line_arguments.Registrar = global { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null
@type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9 = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 -966273075, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C93, %uncommonType.0* null, %_type.0* null }, %_type.0* @command_line_arguments.CmdName..d, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.Command.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.52 = private constant [83 x i8] c"map[\09command_line_arguments\09cli.CmdName]func() \09command_line_arguments\09cli.Command\00", align 1
@go..C93 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([83 x i8], [83 x i8]* @const.52, i32 0, i32 0), i64 82 }
@type..func.8.9.8command_line_arguments.Command.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 790637256, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C94, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C95, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C96, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.53 = private constant [43 x i8] c"func() \09command_line_arguments\09cli.Command\00", align 1
@go..C94 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.53, i32 0, i32 0), i64 42 }
@go..C95 = internal global [1 x %_type.0*] zeroinitializer
@go..C96 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @command_line_arguments.Command..d, i32 0, i32 0)]
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 -1729353180, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkEGba, i32 0, i32 0), { i8*, i64 }* @go..C97, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C106, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkEGba = weak constant [4 x i8] c"\AA\AA\FE\03", comdat
@const.54 = private constant [139 x i8] c"struct { topbits [8]uint8; keys [8]\09command_line_arguments\09cli.CmdName; values [8]func() \09command_line_arguments\09cli.Command; overflow * }\00", align 1
@go..C97 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([139 x i8], [139 x i8]* @const.54, i32 0, i32 0), i64 138 }
@go..C98 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.24, i32 0, i32 0), i64 7 }
@go..C99 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.29, i32 0, i32 0), i64 4 }
@type...68x.7command_line_arguments.CmdName = weak constant %ArrayType.0 { %_type.0 { i64 128, i64 120, i32 781146617, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..wkwa, i32 0, i32 0), { i8*, i64 }* @go..C100, %uncommonType.0* null, %_type.0* null }, %_type.0* @command_line_arguments.CmdName..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.CmdName, i32 0, i32 0), i64 8 }, comdat
@const.55 = private constant [39 x i8] c"[8]\09command_line_arguments\09cli.CmdName\00", align 1
@go..C100 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.55, i32 0, i32 0), i64 38 }
@type...6.7command_line_arguments.CmdName = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1756910333, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C101, %uncommonType.0* null, %_type.0* null }, %_type.0* @command_line_arguments.CmdName..d }, comdat
@const.56 = private constant [38 x i8] c"[]\09command_line_arguments\09cli.CmdName\00", align 1
@go..C101 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.56, i32 0, i32 0), i64 37 }
@go..C102 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.31, i32 0, i32 0), i64 6 }
@type...68x.7func.8.9.8command_line_arguments.Command.9 = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 64, i32 1581274527, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Gh, i32 0, i32 0), { i8*, i64 }* @go..C103, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.Command.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7func.8.9.8command_line_arguments.Command.9, i32 0, i32 0), i64 8 }, comdat
@gcbits..Gh = weak constant [1 x i8] c"\FF", comdat
@const.57 = private constant [46 x i8] c"[8]func() \09command_line_arguments\09cli.Command\00", align 1
@go..C103 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.57, i32 0, i32 0), i64 45 }
@type...6.7func.8.9.8command_line_arguments.Command.9 = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 790637270, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C104, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8command_line_arguments.Command.9, i32 0, i32 0) }, comdat
@const.58 = private constant [45 x i8] c"[]func() \09command_line_arguments\09cli.Command\00", align 1
@go..C104 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.58, i32 0, i32 0), i64 44 }
@go..C105 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.32, i32 0, i32 0), i64 8 }
@go..C106 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C98, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C99, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7command_line_arguments.CmdName, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C102, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7func.8.9.8command_line_arguments.Command.9, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C105, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 -1952753180, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C107, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C118, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.59 = private constant [404 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]\09command_line_arguments\09cli.CmdName; values [8]func() \09command_line_arguments\09cli.Command; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]\09command_line_arguments\09cli.CmdName; values [8]func() \09command_line_arguments\09cli.Command; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C107 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([404 x i8], [404 x i8]* @const.59, i32 0, i32 0), i64 403 }
@go..C108 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@go..C109 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@go..C110 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.38, i32 0, i32 0), i64 1 }
@go..C111 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.39, i32 0, i32 0), i64 9 }
@go..C112 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.42, i32 0, i32 0), i64 5 }
@go..C113 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.45, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1899847095, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C114, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.60 = private constant [140 x i8] c"*struct { topbits [8]uint8; keys [8]\09command_line_arguments\09cli.CmdName; values [8]func() \09command_line_arguments\09cli.Command; overflow * }\00", align 1
@go..C114 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([140 x i8], [140 x i8]* @const.60, i32 0, i32 0), i64 139 }
@go..C115 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.47, i32 0, i32 0), i64 10 }
@go..C116 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.48, i32 0, i32 0), i64 9 }
@go..C117 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.51, i32 0, i32 0), i64 5 }
@go..C118 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C108, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C109, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C110, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C111, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C112, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C113, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C115, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C116, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C117, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@runtime.writeBarrier = external local_unnamed_addr externally_initialized global i32
@command_line_arguments.Cli..d = constant %StructType.0 { %_type.0 { i64 48, i64 32, i32 690576926, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C119, %uncommonType.0* @go..C123, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Cli, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C138, i32 0, i32 0), i64 3, i64 3 } }
@gcbits..pa = weak constant [1 x i8] c"\0F", comdat
@const.61 = private constant [32 x i8] c"\09command_line_arguments\09cli.Cli\00", align 1
@go..C119 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @const.61, i32 0, i32 0), i64 31 }
@const.62 = private constant [4 x i8] c"Cli\00", align 1
@go..C120 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.62, i32 0, i32 0), i64 3 }
@go..C121 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C122 = internal global [1 x %method.0] zeroinitializer
@go..C123 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C120, { i8*, i64 }* @go..C121, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C122, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Cli = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1835671063, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C124, %uncommonType.0* @go..C133, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Cli, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Cli..d, i32 0, i32 0) }, comdat
@const.63 = private constant [33 x i8] c"*\09command_line_arguments\09cli.Cli\00", align 1
@go..C124 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @const.63, i32 0, i32 0), i64 32 }
@const.64 = private constant [4 x i8] c"Run\00", align 1
@go..C125 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.64, i32 0, i32 0), i64 3 }
@type..func.8.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1188738504, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C126, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C127, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C128, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.65 = private constant [13 x i8] c"func() error\00", align 1
@go..C126 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.65, i32 0, i32 0), i64 12 }
@go..C127 = internal global [1 x %_type.0*] zeroinitializer
@go..C128 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Cli.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1718160664, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C129, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C130, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C131, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.66 = private constant [45 x i8] c"func(*\09command_line_arguments\09cli.Cli) error\00", align 1
@go..C129 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([45 x i8], [45 x i8]* @const.66, i32 0, i32 0), i64 44 }
@go..C130 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Cli, i32 0, i32 0)]
@go..C131 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C132 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C125, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Cli.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Cli.0*)* @command_line_arguments.Cli.Run to i8*) }]
@go..C133 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C132, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.Cli = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 694034073, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C134, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Cli, i32 0, i32 0) }, comdat
@const.67 = private constant [34 x i8] c"**\09command_line_arguments\09cli.Cli\00", align 1
@go..C134 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @const.67, i32 0, i32 0), i64 33 }
@const.68 = private constant [4 x i8] c"Ctx\00", align 1
@go..C135 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.68, i32 0, i32 0), i64 3 }
@const.69 = private constant [6 x i8] c"Flags\00", align 1
@go..C136 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.69, i32 0, i32 0), i64 5 }
@const.70 = private constant [5 x i8] c"Args\00", align 1
@go..C137 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.70, i32 0, i32 0), i64 4 }
@go..C138 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C135, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C136, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C137, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@command_line_arguments.flagFilterRegexp = internal global %Regexp.0* null
@const.71 = private constant [4 x i8] c"^-+\00", align 1
@type...60x.7string = weak constant %ArrayType.0 { %_type.0 { i64 0, i64 0, i32 297061699, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C139, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i32 0, i32 0), i64 0 }, comdat
@const.73 = private constant [10 x i8] c"[0]string\00", align 1
@go..C139 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.73, i32 0, i32 0), i64 9 }
@const.75 = private constant [2 x i8] c"-\00", align 1
@const.77 = private constant [2 x i8] c"=\00", align 1
@const.79 = private constant [5 x i8] c"true\00", align 1
@const.80 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.79, i32 0, i32 0), i64 4 }
@command_line_arguments.New..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Cli.0*, %error.0 }*, i8*, %IPST.2*)* @command_line_arguments.New to i64) }
@const.82 = private constant [5 x i8] c"help\00", align 1
@const.83 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.82, i32 0, i32 0), i64 4 }
@command_line_arguments.Credentials..d = constant %StructType.0 { %_type.0 { i64 32, i64 24, i32 -1204410814, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Credentials..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Credentials..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..fa, i32 0, i32 0), { i8*, i64 }* @go..C140, %uncommonType.0* @go..C144, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Credentials, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([2 x %structField.0], [2 x %structField.0]* @go..C150, i32 0, i32 0), i64 2, i64 2 } }
@command_line_arguments.command_line_arguments.Credentials..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Credentials..hash to i64) }
@command_line_arguments.command_line_arguments.Credentials..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Credentials..eq to i64) }
@gcbits..fa = weak constant [1 x i8] c"\05", comdat
@const.86 = private constant [40 x i8] c"\09command_line_arguments\09cli.Credentials\00", align 1
@go..C140 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.86, i32 0, i32 0), i64 39 }
@const.87 = private constant [12 x i8] c"Credentials\00", align 1
@go..C141 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.87, i32 0, i32 0), i64 11 }
@go..C142 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C143 = internal global [1 x %method.0] zeroinitializer
@go..C144 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C141, { i8*, i64 }* @go..C142, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C143, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Credentials = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -2090703831, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C145, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Credentials..d, i32 0, i32 0) }, comdat
@const.88 = private constant [41 x i8] c"*\09command_line_arguments\09cli.Credentials\00", align 1
@go..C145 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.88, i32 0, i32 0), i64 40 }
@const.89 = private constant [5 x i8] c"User\00", align 1
@go..C146 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.89, i32 0, i32 0), i64 4 }
@const.90 = private constant [12 x i8] c"json:\22user\22\00", align 1
@go..C147 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.90, i32 0, i32 0), i64 11 }
@const.91 = private constant [7 x i8] c"Secret\00", align 1
@go..C148 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.91, i32 0, i32 0), i64 6 }
@const.92 = private constant [14 x i8] c"json:\22secret\22\00", align 1
@go..C149 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.92, i32 0, i32 0), i64 13 }
@go..C150 = internal global [2 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C146, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* @go..C147, i64 0 }, %structField.0 { { i8*, i64 }* @go..C148, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* @go..C149, i64 32 }]
@command_line_arguments.Config..d = constant %StructType.0 { %_type.0 { i64 32, i64 24, i32 -1524019526, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Config..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Config..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..fa, i32 0, i32 0), { i8*, i64 }* @go..C151, %uncommonType.0* @go..C155, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Config, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C159, i32 0, i32 0), i64 1, i64 1 } }
@command_line_arguments.command_line_arguments.Config..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Config..hash to i64) }
@command_line_arguments.command_line_arguments.Config..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Config..eq to i64) }
@const.93 = private constant [35 x i8] c"\09command_line_arguments\09cli.Config\00", align 1
@go..C151 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.93, i32 0, i32 0), i64 34 }
@const.94 = private constant [7 x i8] c"Config\00", align 1
@go..C152 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.94, i32 0, i32 0), i64 6 }
@go..C153 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C154 = internal global [1 x %method.0] zeroinitializer
@go..C155 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C152, { i8*, i64 }* @go..C153, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C154, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Config = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1385491369, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C156, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Config..d, i32 0, i32 0) }, comdat
@const.95 = private constant [36 x i8] c"*\09command_line_arguments\09cli.Config\00", align 1
@go..C156 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.95, i32 0, i32 0), i64 35 }
@go..C157 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.87, i32 0, i32 0), i64 11 }
@const.96 = private constant [19 x i8] c"json:\22credentials\22\00", align 1
@go..C158 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @const.96, i32 0, i32 0), i64 18 }
@go..C159 = internal global [1 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C157, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Credentials..d, i32 0, i32 0), { i8*, i64 }* @go..C158, i64 0 }]
@const.98 = private constant [20 x i8] c"~/.warp/config.json\00", align 1
@command_line_arguments.ConfigPath..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ { i8*, i64 }*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.ConfigPath to i64) }
@command_line_arguments.RetrieveConfig..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Config.0*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.RetrieveConfig to i64) }
@const.103 = private constant [6 x i8] c"guest\00", align 1
@const.105 = private constant [3 x i8] c"  \00", align 1
@const.106 = private constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.105, i32 0, i32 0), i64 2 }
@command_line_arguments.GenerateConfig..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Config.0*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.GenerateConfig to i64) }
@command_line_arguments.RetrieveOrGenerateConfig..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Config.0*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.RetrieveOrGenerateConfig to i64) }
@github_com_spolu_warp.EnvWarp = external local_unnamed_addr externally_initialized global { i8*, i64 }
@const.108 = private constant [14 x i8] c"_warp_%s.sock\00", align 1
@const.111 = private constant [5 x i8] c"unix\00", align 1
@const.113 = private constant [31 x i8] c"Failed to connect to warpd: %v\00", align 1
@io.Reader..d = external constant %InterfaceType.0
@io.Writer..d = external constant %InterfaceType.0
@github_com_spolu_warp.Command..d = external constant %StructType.0
@const.116 = private constant [27 x i8] c"Failed to send command: %v\00", align 1
@github_com_spolu_warp.CommandResult..d = external constant %StructType.0
@type...1github_com_spolu_warp.CommandResult = external constant %PtrType.0
@const.118 = private constant [16 x i8] c"Received %s: %s\00", align 1
@command_line_arguments.RunLocalCommand..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %CommandResult.0*, %error.0 }*, i8*, i64, i64, %Command.1*)* @command_line_arguments.RunLocalCommand to i64) }
@const.120 = private constant [2 x i8] c"\0A\00", align 1
@const.122 = private constant %IPST.3 zeroinitializer
@const.123 = private constant [77 x i8] c"`warp` uses the environment variable `%s` to detect that it is running from\0A\00", align 1
@const.125 = private constant [72 x i8] c"inside a warp (for in-warp commands). `%s` not being currently set, it\0A\00", align 1
@const.127 = private constant [63 x i8] c"indicates that you are not executing this from inside a warp.\0A\00", align 1
@const.129 = private constant [77 x i8] c"Expert only: if you connected to a pre-existing tmux or screen session from\0A\00", align 1
@const.131 = private constant [75 x i8] c"your current warp, `%s` will not be propagated automatically. You can fix\0A\00", align 1
@const.133 = private constant [73 x i8] c"this by setting `%s` to the ID of your current warp in your environment\0A\00", align 1
@const.135 = private constant [33 x i8] c"(running `export __WARP=<id>`).\0A\00", align 1
@const.137 = private constant [51 x i8] c"This command is only available from inside a warp.\00", align 1
@command_line_arguments.CheckEnvWarp..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint ({ i64, i64 } (i8*, i64, i64)* @command_line_arguments.CheckEnvWarp to i64) }
@command_line_arguments.Session..d = constant %StructType.0 { %_type.0 { i64 240, i64 240, i32 1808299448, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..wkEGGCa, i32 0, i32 0), { i8*, i64 }* @go..C160, %uncommonType.0* @go..C164, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([17 x %structField.0], [17 x %structField.0]* @go..C422, i32 0, i32 0), i64 17, i64 17 } }
@gcbits..wkEGGCa = weak constant [4 x i8] c"U\F5\FF7", comdat
@const.139 = private constant [36 x i8] c"\09command_line_arguments\09cli.Session\00", align 1
@go..C160 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.139, i32 0, i32 0), i64 35 }
@const.140 = private constant [8 x i8] c"Session\00", align 1
@go..C161 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.140, i32 0, i32 0), i64 7 }
@go..C162 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C163 = internal global [1 x %method.0] zeroinitializer
@go..C164 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C161, { i8*, i64 }* @go..C162, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C163, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Session = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1131979895, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C165, %uncommonType.0* @go..C296, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Session, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Session..d, i32 0, i32 0) }, comdat
@const.141 = private constant [37 x i8] c"*\09command_line_arguments\09cli.Session\00", align 1
@go..C165 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.141, i32 0, i32 0), i64 36 }
@const.142 = private constant [6 x i8] c"DataC\00", align 1
@go..C166 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.142, i32 0, i32 0), i64 5 }
@type..func.8.9.8net.Conn.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1786340216, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C167, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C168, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C169, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.143 = private constant [21 x i8] c"func() \09net\09net.Conn\00", align 1
@go..C167 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.143, i32 0, i32 0), i64 20 }
@go..C168 = internal global [1 x %_type.0*] zeroinitializer
@net.Conn..d = external constant %InterfaceType.0
@go..C169 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.9.8net.Conn.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 645008808, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C170, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C171, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C172, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.144 = private constant [57 x i8] c"func(*\09command_line_arguments\09cli.Session) \09net\09net.Conn\00", align 1
@go..C170 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([57 x i8], [57 x i8]* @const.144, i32 0, i32 0), i64 56 }
@go..C171 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C172 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@const.145 = private constant [12 x i8] c"DecodeError\00", align 1
@go..C173 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.145, i32 0, i32 0), i64 11 }
@type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 941214504, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C174, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C175, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C176, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.146 = private constant [75 x i8] c"func(\09context\09context.Context) (*\09github_com_spolu_warp\09warp.Error, error)\00", align 1
@go..C174 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([75 x i8], [75 x i8]* @const.146, i32 0, i32 0), i64 74 }
@go..C175 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@type...1github_com_spolu_warp.Error = external constant %PtrType.0
@go..C176 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp.Error, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 393478568, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C177, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C178, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C179, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.147 = private constant [113 x i8] c"func(*\09command_line_arguments\09cli.Session, \09context\09context.Context) (*\09github_com_spolu_warp\09warp.Error, error)\00", align 1
@go..C177 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([113 x i8], [113 x i8]* @const.147, i32 0, i32 0), i64 112 }
@go..C178 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C179 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp.Error, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.148 = private constant [12 x i8] c"DecodeState\00", align 1
@go..C180 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.148, i32 0, i32 0), i64 11 }
@type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 153061160, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C181, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C182, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C183, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.149 = private constant [75 x i8] c"func(\09context\09context.Context) (*\09github_com_spolu_warp\09warp.State, error)\00", align 1
@go..C181 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([75 x i8], [75 x i8]* @const.149, i32 0, i32 0), i64 74 }
@go..C182 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@type...1github_com_spolu_warp.State = external constant %PtrType.0
@go..C183 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp.State, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -394674776, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C184, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C185, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C186, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.150 = private constant [113 x i8] c"func(*\09command_line_arguments\09cli.Session, \09context\09context.Context) (*\09github_com_spolu_warp\09warp.State, error)\00", align 1
@go..C184 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([113 x i8], [113 x i8]* @const.150, i32 0, i32 0), i64 112 }
@go..C185 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C186 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp.State, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.151 = private constant [8 x i8] c"GetMode\00", align 1
@go..C187 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.151, i32 0, i32 0), i64 7 }
@type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -849294072, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C188, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C189, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C190, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.152 = private constant [56 x i8] c"func(string) (*\09github_com_spolu_warp\09warp.Mode, error)\00", align 1
@go..C188 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([56 x i8], [56 x i8]* @const.152, i32 0, i32 0), i64 55 }
@go..C189 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@type...1github_com_spolu_warp.Mode = external constant %PtrType.0
@go..C190 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp.Mode, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 2040074600, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C191, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C192, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C193, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.153 = private constant [94 x i8] c"func(*\09command_line_arguments\09cli.Session, string) (*\09github_com_spolu_warp\09warp.Mode, error)\00", align 1
@go..C191 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([94 x i8], [94 x i8]* @const.153, i32 0, i32 0), i64 93 }
@go..C192 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* @string..d]
@go..C193 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp.Mode, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.154 = private constant [20 x i8] c"HostCanReceiveWrite\00", align 1
@go..C194 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @const.154, i32 0, i32 0), i64 19 }
@type..func.8.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -361864120, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C195, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C196, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C202, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.155 = private constant [12 x i8] c"func() bool\00", align 1
@go..C195 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.155, i32 0, i32 0), i64 11 }
@go..C196 = internal global [1 x %_type.0*] zeroinitializer
@bool..d = weak constant %_type.0 { i64 1, i64 0, i32 1537849745, i8 -127, i8 1, i8 1, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash8..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal8..f to %__go_descriptor.3*), i8* null, { i8*, i64 }* @go..C197, %uncommonType.0* @go..C200, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1bool, i32 0, i32 0) }, comdat
@const.156 = private constant [5 x i8] c"bool\00", align 1
@go..C197 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.156, i32 0, i32 0), i64 4 }
@go..C198 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.156, i32 0, i32 0), i64 4 }
@go..C199 = internal global [1 x %method.0] zeroinitializer
@go..C200 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C198, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C199, i32 0, i32 0), i64 0, i64 0 } }
@type...1bool = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1164207847, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C201, %uncommonType.0* null, %_type.0* null }, %_type.0* @bool..d }, comdat
@const.157 = private constant [6 x i8] c"*bool\00", align 1
@go..C201 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.157, i32 0, i32 0), i64 5 }
@go..C202 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@type..func.8.1command_line_arguments.Session.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 2069484904, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C203, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C204, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C205, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.158 = private constant [48 x i8] c"func(*\09command_line_arguments\09cli.Session) bool\00", align 1
@go..C203 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([48 x i8], [48 x i8]* @const.158, i32 0, i32 0), i64 47 }
@go..C204 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C205 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@const.159 = private constant [6 x i8] c"Modes\00", align 1
@go..C206 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.159, i32 0, i32 0), i64 5 }
@type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -924871864, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C207, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C208, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C230, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.160 = private constant [51 x i8] c"func() map[string]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C207 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([51 x i8], [51 x i8]* @const.160, i32 0, i32 0), i64 50 }
@go..C208 = internal global [1 x %_type.0*] zeroinitializer
@type..map.6string.7github_com_spolu_warp.Mode = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 1260617293, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C209, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* @github_com_spolu_warp.Mode..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 8, i8 0, i16 208, i8 1, i8 1 }, comdat
@const.161 = private constant [44 x i8] c"map[string]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C209 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.161, i32 0, i32 0), i64 43 }
@github_com_spolu_warp.Mode..d = external constant %_type.0
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 208, i64 208, i32 1656237764, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @gcbits..kwkbaba, i32 0, i32 0), { i8*, i64 }* @go..C210, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C217, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkbaba = weak constant [4 x i8] c"\AA\AA\00\02", comdat
@const.162 = private constant [100 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }\00", align 1
@go..C210 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([100 x i8], [100 x i8]* @const.162, i32 0, i32 0), i64 99 }
@go..C211 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.24, i32 0, i32 0), i64 7 }
@go..C212 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.29, i32 0, i32 0), i64 4 }
@go..C213 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.31, i32 0, i32 0), i64 6 }
@type...68x.7github_com_spolu_warp.Mode = weak constant %ArrayType.0 { %_type.0 { i64 64, i64 0, i32 -2070794411, i8 -111, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* null, { i8*, i64 }* @go..C214, %uncommonType.0* null, %_type.0* null }, %_type.0* @github_com_spolu_warp.Mode..d, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7github_com_spolu_warp.Mode, i32 0, i32 0), i64 8 }, comdat
@const.163 = private constant [36 x i8] c"[8]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C214 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.163, i32 0, i32 0), i64 35 }
@type...6.7github_com_spolu_warp.Mode = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1035397199, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C215, %uncommonType.0* null, %_type.0* null }, %_type.0* @github_com_spolu_warp.Mode..d }, comdat
@const.164 = private constant [35 x i8] c"[]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C215 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.164, i32 0, i32 0), i64 34 }
@go..C216 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.32, i32 0, i32 0), i64 8 }
@go..C217 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C211, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C212, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C213, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7github_com_spolu_warp.Mode, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C216, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 400 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1404508644, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C218, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C229, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.165 = private constant [326 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C218 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([326 x i8], [326 x i8]* @const.165, i32 0, i32 0), i64 325 }
@go..C219 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@go..C220 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@go..C221 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.38, i32 0, i32 0), i64 1 }
@go..C222 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.39, i32 0, i32 0), i64 9 }
@go..C223 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.42, i32 0, i32 0), i64 5 }
@go..C224 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.45, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 730000457, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C225, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.166 = private constant [101 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.Mode; overflow * }\00", align 1
@go..C225 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([101 x i8], [101 x i8]* @const.166, i32 0, i32 0), i64 100 }
@go..C226 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.47, i32 0, i32 0), i64 10 }
@go..C227 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.48, i32 0, i32 0), i64 9 }
@go..C228 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.51, i32 0, i32 0), i64 5 }
@go..C229 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C219, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C220, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C221, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C222, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C223, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C224, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C226, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C227, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C228, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@go..C230 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.Mode, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1506477160, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C231, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C232, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C233, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.167 = private constant [87 x i8] c"func(*\09command_line_arguments\09cli.Session) map[string]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C231 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([87 x i8], [87 x i8]* @const.167, i32 0, i32 0), i64 86 }
@go..C232 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C233 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.Mode, i32 0, i32 0)]
@const.168 = private constant [14 x i8] c"ProtocolState\00", align 1
@go..C234 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.168, i32 0, i32 0), i64 13 }
@type..func.8.9.8github_com_spolu_warp.State.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1831881400, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C235, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C236, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C237, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.169 = private constant [41 x i8] c"func() \09github_com_spolu_warp\09warp.State\00", align 1
@go..C235 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.169, i32 0, i32 0), i64 40 }
@go..C236 = internal global [1 x %_type.0*] zeroinitializer
@github_com_spolu_warp.State..d = external constant %StructType.0
@go..C237 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 599467624, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C238, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C239, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C240, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.170 = private constant [77 x i8] c"func(*\09command_line_arguments\09cli.Session) \09github_com_spolu_warp\09warp.State\00", align 1
@go..C238 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([77 x i8], [77 x i8]* @const.170, i32 0, i32 0), i64 76 }
@go..C239 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C240 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0)]
@const.171 = private constant [15 x i8] c"SendHostUpdate\00", align 1
@go..C241 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @const.171, i32 0, i32 0), i64 14 }
@type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -437351960, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C242, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C243, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C244, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.172 = private constant [77 x i8] c"func(\09context\09context.Context, \09github_com_spolu_warp\09warp.HostUpdate) error\00", align 1
@go..C242 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([77 x i8], [77 x i8]* @const.172, i32 0, i32 0), i64 76 }
@github_com_spolu_warp.HostUpdate..d = external constant %StructType.0
@go..C243 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.HostUpdate..d, i32 0, i32 0)]
@go..C244 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 367906600, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C245, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C246, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C247, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.173 = private constant [115 x i8] c"func(*\09command_line_arguments\09cli.Session, \09context\09context.Context, \09github_com_spolu_warp\09warp.HostUpdate) error\00", align 1
@go..C245 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([115 x i8], [115 x i8]* @const.173, i32 0, i32 0), i64 114 }
@go..C246 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.HostUpdate..d, i32 0, i32 0)]
@go..C247 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C248 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.140, i32 0, i32 0), i64 7 }
@type..func.8.9.8github_com_spolu_warp.Session.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1392517384, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C249, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C250, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C251, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.174 = private constant [43 x i8] c"func() \09github_com_spolu_warp\09warp.Session\00", align 1
@go..C249 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.174, i32 0, i32 0), i64 42 }
@go..C250 = internal global [1 x %_type.0*] zeroinitializer
@github_com_spolu_warp.Session..d = external constant %StructType.0
@go..C251 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Session..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -471100888, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C252, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C253, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C254, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.175 = private constant [79 x i8] c"func(*\09command_line_arguments\09cli.Session) \09github_com_spolu_warp\09warp.Session\00", align 1
@go..C252 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([79 x i8], [79 x i8]* @const.175, i32 0, i32 0), i64 78 }
@go..C253 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C254 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Session..d, i32 0, i32 0)]
@const.176 = private constant [8 x i8] c"SetMode\00", align 1
@go..C255 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.176, i32 0, i32 0), i64 7 }
@type..func.8string.3github_com_spolu_warp.Mode.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -194154040, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C256, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C257, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C258, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.177 = private constant [53 x i8] c"func(string, \09github_com_spolu_warp\09warp.Mode) error\00", align 1
@go..C256 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([53 x i8], [53 x i8]* @const.177, i32 0, i32 0), i64 52 }
@go..C257 = internal global [2 x %_type.0*] [%_type.0* @string..d, %_type.0* @github_com_spolu_warp.Mode..d]
@go..C258 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 854302440, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C259, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C260, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C261, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.178 = private constant [91 x i8] c"func(*\09command_line_arguments\09cli.Session, string, \09github_com_spolu_warp\09warp.Mode) error\00", align 1
@go..C259 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([91 x i8], [91 x i8]* @const.178, i32 0, i32 0), i64 90 }
@go..C260 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* @string..d, %_type.0* @github_com_spolu_warp.Mode..d]
@go..C261 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.179 = private constant [9 x i8] c"TearDown\00", align 1
@go..C262 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.179, i32 0, i32 0), i64 8 }
@type..func.8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 8, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C263, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C264, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C265, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.180 = private constant [7 x i8] c"func()\00", align 1
@go..C263 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.180, i32 0, i32 0), i64 6 }
@go..C264 = internal global [1 x %_type.0*] zeroinitializer
@go..C265 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Session.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1863618264, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C266, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C267, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C268, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.181 = private constant [43 x i8] c"func(*\09command_line_arguments\09cli.Session)\00", align 1
@go..C266 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([43 x i8], [43 x i8]* @const.181, i32 0, i32 0), i64 42 }
@go..C267 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C268 = internal global [1 x %_type.0*] zeroinitializer
@const.182 = private constant [9 x i8] c"TornDown\00", align 1
@go..C269 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.182, i32 0, i32 0), i64 8 }
@const.183 = private constant [12 x i8] c"UpdateState\00", align 1
@go..C270 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.183, i32 0, i32 0), i64 11 }
@type..func.8github_com_spolu_warp.State.3bool.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -89066328, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C271, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C272, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C273, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.184 = private constant [52 x i8] c"func(\09github_com_spolu_warp\09warp.State, bool) error\00", align 1
@go..C271 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @const.184, i32 0, i32 0), i64 51 }
@go..C272 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0), %_type.0* @bool..d]
@go..C273 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1064477864, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C274, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C275, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C276, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.185 = private constant [90 x i8] c"func(*\09command_line_arguments\09cli.Session, \09github_com_spolu_warp\09warp.State, bool) error\00", align 1
@go..C274 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([90 x i8], [90 x i8]* @const.185, i32 0, i32 0), i64 89 }
@go..C275 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0), %_type.0* @bool..d]
@go..C276 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.186 = private constant [5 x i8] c"Warp\00", align 1
@go..C277 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.186, i32 0, i32 0), i64 4 }
@type..func.8.1command_line_arguments.Session.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -947578968, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C278, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C279, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C280, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.187 = private constant [50 x i8] c"func(*\09command_line_arguments\09cli.Session) string\00", align 1
@go..C278 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([50 x i8], [50 x i8]* @const.187, i32 0, i32 0), i64 49 }
@go..C279 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C280 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@const.188 = private constant [11 x i8] c"WindowSize\00", align 1
@go..C281 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.188, i32 0, i32 0), i64 10 }
@type..func.8.9.8github_com_spolu_warp.Size.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -659487160, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C282, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C283, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C284, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.189 = private constant [40 x i8] c"func() \09github_com_spolu_warp\09warp.Size\00", align 1
@go..C282 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.189, i32 0, i32 0), i64 39 }
@go..C283 = internal global [1 x %_type.0*] zeroinitializer
@github_com_spolu_warp.Size..d = external constant %StructType.0
@go..C284 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Size..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1771861864, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C285, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C286, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C287, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.190 = private constant [76 x i8] c"func(*\09command_line_arguments\09cli.Session) \09github_com_spolu_warp\09warp.Size\00", align 1
@go..C285 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([76 x i8], [76 x i8]* @const.190, i32 0, i32 0), i64 75 }
@go..C286 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C287 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Size..d, i32 0, i32 0)]
@const.191 = private constant [11 x i8] c"WriteDataC\00", align 1
@go..C288 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.191, i32 0, i32 0), i64 10 }
@type..func.8.6.7uint8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -121707288, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C289, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C290, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C291, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.192 = private constant [14 x i8] c"func([]uint8)\00", align 1
@go..C289 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.192, i32 0, i32 0), i64 13 }
@go..C290 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0)]
@go..C291 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -2107032856, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C292, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C293, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C294, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.193 = private constant [52 x i8] c"func(*\09command_line_arguments\09cli.Session, []uint8)\00", align 1
@go..C292 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @const.193, i32 0, i32 0), i64 51 }
@go..C293 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7uint8, i32 0, i32 0)]
@go..C294 = internal global [1 x %_type.0*] zeroinitializer
@go..C295 = internal global [16 x %method.0] [%method.0 { { i8*, i64 }* @go..C166, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8net.Conn.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8net.Conn.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Session.0*)* @command_line_arguments.Session.DataC to i8*) }, %method.0 { { i8*, i64 }* @go..C173, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9, i32 0, i32 0), i8* bitcast (void ({ %Error.0*, %error.0 }*, i8*, %Session.0*, i64, i64)* @command_line_arguments.Session.DecodeError to i8*) }, %method.0 { { i8*, i64 }* @go..C180, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9, i32 0, i32 0), i8* bitcast (void ({ %State.0*, %error.0 }*, i8*, %Session.0*, i64, i64)* @command_line_arguments.Session.DecodeState to i8*) }, %method.0 { { i8*, i64 }* @go..C187, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9, i32 0, i32 0), i8* bitcast (void ({ i64*, %error.0 }*, i8*, %Session.0*, i64, i64)* @command_line_arguments.Session.GetMode to i8*) }, %method.0 { { i8*, i64 }* @go..C194, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %Session.0*)* @command_line_arguments.Session.HostCanReceiveWrite to i8*) }, %method.0 { { i8*, i64 }* @go..C206, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9, i32 0, i32 0), i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, %Session.0*)* @command_line_arguments.Session.Modes to i8*) }, %method.0 { { i8*, i64 }* @go..C234, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8github_com_spolu_warp.State.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9, i32 0, i32 0), i8* bitcast (void (%State.0*, i8*, %Session.0*)* @command_line_arguments.Session.ProtocolState to i8*) }, %method.0 { { i8*, i64 }* @go..C241, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Session.0*, i64, i64, %HostUpdate.0*)* @command_line_arguments.Session.SendHostUpdate to i8*) }, %method.0 { { i8*, i64 }* @go..C248, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8github_com_spolu_warp.Session.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9, i32 0, i32 0), i8* bitcast (void (%Session.1*, i8*, %Session.0*)* @command_line_arguments.Session.Session to i8*) }, %method.0 { { i8*, i64 }* @go..C255, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.3github_com_spolu_warp.Mode.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Session.0*, i64, i64, i64)* @command_line_arguments.Session.SetMode to i8*) }, %method.0 { { i8*, i64 }* @go..C262, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Session.0*)* @command_line_arguments.Session.TearDown to i8*) }, %method.0 { { i8*, i64 }* @go..C269, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %Session.0*)* @command_line_arguments.Session.TornDown to i8*) }, %method.0 { { i8*, i64 }* @go..C270, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8github_com_spolu_warp.State.3bool.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Session.0*, %State.0*, i8)* @command_line_arguments.Session.UpdateState to i8*) }, %method.0 { { i8*, i64 }* @go..C277, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Session.0*)* @command_line_arguments.Session.Warp to i8*) }, %method.0 { { i8*, i64 }* @go..C281, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8github_com_spolu_warp.Size.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Session.0*)* @command_line_arguments.Session.WindowSize to i8*) }, %method.0 { { i8*, i64 }* @go..C288, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.6.7uint8.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Session.0*, { i8*, i64, i64 }*)* @command_line_arguments.Session.WriteDataC to i8*) }]
@go..C296 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([16 x %method.0], [16 x %method.0]* @go..C295, i32 0, i32 0), i64 16, i64 16 } }
@type...1.1command_line_arguments.Session = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -931809127, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C297, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0) }, comdat
@const.194 = private constant [38 x i8] c"**\09command_line_arguments\09cli.Session\00", align 1
@go..C297 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.194, i32 0, i32 0), i64 37 }
@const.195 = private constant [8 x i8] c"session\00", align 1
@go..C298 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.195, i32 0, i32 0), i64 7 }
@go..C299 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.196 = private constant [5 x i8] c"warp\00", align 1
@go..C300 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.196, i32 0, i32 0), i64 4 }
@go..C301 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.197 = private constant [12 x i8] c"sessionType\00", align 1
@go..C302 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @const.197, i32 0, i32 0), i64 11 }
@go..C303 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@github_com_spolu_warp.SessionType..d = external constant %_type.0
@const.198 = private constant [9 x i8] c"username\00", align 1
@go..C304 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.198, i32 0, i32 0), i64 8 }
@go..C305 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.199 = private constant [5 x i8] c"conn\00", align 1
@go..C306 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.199, i32 0, i32 0), i64 4 }
@go..C307 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.200 = private constant [4 x i8] c"mux\00", align 1
@go..C308 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.200, i32 0, i32 0), i64 3 }
@go..C309 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session = external constant %PtrType.0
@const.201 = private constant [7 x i8] c"stateC\00", align 1
@go..C310 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.201, i32 0, i32 0), i64 6 }
@go..C311 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.202 = private constant [7 x i8] c"stateR\00", align 1
@go..C312 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.202, i32 0, i32 0), i64 6 }
@go..C313 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1encoding_gob.Decoder = external constant %PtrType.0
@const.203 = private constant [8 x i8] c"updateC\00", align 1
@go..C314 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.203, i32 0, i32 0), i64 7 }
@go..C315 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.204 = private constant [8 x i8] c"updateW\00", align 1
@go..C316 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.204, i32 0, i32 0), i64 7 }
@go..C317 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1encoding_gob.Encoder = external constant %PtrType.0
@const.205 = private constant [7 x i8] c"errorC\00", align 1
@go..C318 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.205, i32 0, i32 0), i64 6 }
@go..C319 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.206 = private constant [7 x i8] c"errorR\00", align 1
@go..C320 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.206, i32 0, i32 0), i64 6 }
@go..C321 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.207 = private constant [6 x i8] c"dataC\00", align 1
@go..C322 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.207, i32 0, i32 0), i64 5 }
@go..C323 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.208 = private constant [6 x i8] c"state\00", align 1
@go..C324 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.208, i32 0, i32 0), i64 5 }
@go..C325 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1command_line_arguments.WarpState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1423009063, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C326, %uncommonType.0* @go..C356, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.WarpState, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.WarpState..d, i32 0, i32 0) }, comdat
@const.209 = private constant [39 x i8] c"*\09command_line_arguments\09cli.WarpState\00", align 1
@go..C326 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.209, i32 0, i32 0), i64 38 }
@go..C327 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.151, i32 0, i32 0), i64 7 }
@type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1317075816, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C328, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C329, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C330, i32 0, i32 0), i64 2, i64 2 } }, comdat
@const.210 = private constant [96 x i8] c"func(*\09command_line_arguments\09cli.WarpState, string) (*\09github_com_spolu_warp\09warp.Mode, error)\00", align 1
@go..C328 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([96 x i8], [96 x i8]* @const.210, i32 0, i32 0), i64 95 }
@go..C329 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0), %_type.0* @string..d]
@go..C330 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp.Mode, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C331 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @const.154, i32 0, i32 0), i64 19 }
@type..func.8.1command_line_arguments.WarpState.9.8bool.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1346486120, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C332, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C333, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C334, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.211 = private constant [50 x i8] c"func(*\09command_line_arguments\09cli.WarpState) bool\00", align 1
@go..C332 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([50 x i8], [50 x i8]* @const.211, i32 0, i32 0), i64 49 }
@go..C333 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0)]
@go..C334 = internal global [1 x %_type.0*] [%_type.0* @bool..d]
@go..C335 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.159, i32 0, i32 0), i64 5 }
@type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 783478376, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C336, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C337, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C338, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.212 = private constant [89 x i8] c"func(*\09command_line_arguments\09cli.WarpState) map[string]\09github_com_spolu_warp\09warp.Mode\00", align 1
@go..C336 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([89 x i8], [89 x i8]* @const.212, i32 0, i32 0), i64 88 }
@go..C337 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0)]
@go..C338 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.Mode, i32 0, i32 0)]
@go..C339 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.168, i32 0, i32 0), i64 13 }
@type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -123531160, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C340, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C341, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C342, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.213 = private constant [79 x i8] c"func(*\09command_line_arguments\09cli.WarpState) \09github_com_spolu_warp\09warp.State\00", align 1
@go..C340 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([79 x i8], [79 x i8]* @const.213, i32 0, i32 0), i64 78 }
@go..C341 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0)]
@go..C342 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0)]
@go..C343 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.176, i32 0, i32 0), i64 7 }
@type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 131303656, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C344, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C345, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C346, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.214 = private constant [93 x i8] c"func(*\09command_line_arguments\09cli.WarpState, string, \09github_com_spolu_warp\09warp.Mode) error\00", align 1
@go..C344 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([93 x i8], [93 x i8]* @const.214, i32 0, i32 0), i64 92 }
@go..C345 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0), %_type.0* @string..d, %_type.0* @github_com_spolu_warp.Mode..d]
@go..C346 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.215 = private constant [7 x i8] c"Update\00", align 1
@go..C347 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.215, i32 0, i32 0), i64 6 }
@type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 341479080, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C348, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C349, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C350, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.216 = private constant [92 x i8] c"func(*\09command_line_arguments\09cli.WarpState, \09github_com_spolu_warp\09warp.State, bool) error\00", align 1
@go..C348 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([92 x i8], [92 x i8]* @const.216, i32 0, i32 0), i64 91 }
@go..C349 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i32 0, i32 0), %_type.0* @bool..d]
@go..C350 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C351 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.188, i32 0, i32 0), i64 10 }
@type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1048863080, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C352, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C353, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C354, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.217 = private constant [78 x i8] c"func(*\09command_line_arguments\09cli.WarpState) \09github_com_spolu_warp\09warp.Size\00", align 1
@go..C352 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([78 x i8], [78 x i8]* @const.217, i32 0, i32 0), i64 77 }
@go..C353 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0)]
@go..C354 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Size..d, i32 0, i32 0)]
@go..C355 = internal global [7 x %method.0] [%method.0 { { i8*, i64 }* @go..C327, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9, i32 0, i32 0), i8* bitcast (void ({ i64*, %error.0 }*, i8*, %WarpState.0*, i64, i64)* @command_line_arguments.WarpState.GetMode to i8*) }, %method.0 { { i8*, i64 }* @go..C331, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8bool.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.WarpState.9.8bool.9, i32 0, i32 0), i8* bitcast (i8 (i8*, %WarpState.0*)* @command_line_arguments.WarpState.HostCanReceiveWrite to i8*) }, %method.0 { { i8*, i64 }* @go..C335, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9, i32 0, i32 0), i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* (i8*, %WarpState.0*)* @command_line_arguments.WarpState.Modes to i8*) }, %method.0 { { i8*, i64 }* @go..C339, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8github_com_spolu_warp.State.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9, i32 0, i32 0), i8* bitcast (void (%State.0*, i8*, %WarpState.0*)* @command_line_arguments.WarpState.ProtocolState to i8*) }, %method.0 { { i8*, i64 }* @go..C343, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8string.3github_com_spolu_warp.Mode.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %WarpState.0*, i64, i64, i64)* @command_line_arguments.WarpState.SetMode to i8*) }, %method.0 { { i8*, i64 }* @go..C347, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8github_com_spolu_warp.State.3bool.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %WarpState.0*, %State.0*, i8)* @command_line_arguments.WarpState.Update to i8*) }, %method.0 { { i8*, i64 }* @go..C351, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8github_com_spolu_warp.Size.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %WarpState.0*)* @command_line_arguments.WarpState.WindowSize to i8*) }]
@go..C356 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([7 x %method.0], [7 x %method.0]* @go..C355, i32 0, i32 0), i64 7, i64 7 } }
@type...1.1command_line_arguments.WarpState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1293308519, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C357, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0) }, comdat
@const.218 = private constant [40 x i8] c"**\09command_line_arguments\09cli.WarpState\00", align 1
@go..C357 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.218, i32 0, i32 0), i64 39 }
@command_line_arguments.WarpState..d = constant %StructType.0 { %_type.0 { i64 40, i64 40, i32 1521674669, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ra, i32 0, i32 0), { i8*, i64 }* @go..C358, %uncommonType.0* @go..C362, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([3 x %structField.0], [3 x %structField.0]* @go..C415, i32 0, i32 0), i64 3, i64 3 } }
@gcbits..ra = weak constant [1 x i8] c"\11", comdat
@const.219 = private constant [38 x i8] c"\09command_line_arguments\09cli.WarpState\00", align 1
@go..C358 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.219, i32 0, i32 0), i64 37 }
@const.220 = private constant [10 x i8] c"WarpState\00", align 1
@go..C359 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.220, i32 0, i32 0), i64 9 }
@go..C360 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C361 = internal global [1 x %method.0] zeroinitializer
@go..C362 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C359, { i8*, i64 }* @go..C360, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C361, i32 0, i32 0), i64 0, i64 0 } }
@const.221 = private constant [6 x i8] c"token\00", align 1
@go..C363 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.221, i32 0, i32 0), i64 5 }
@go..C364 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.222 = private constant [11 x i8] c"windowSize\00", align 1
@go..C365 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.222, i32 0, i32 0), i64 10 }
@go..C366 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.223 = private constant [6 x i8] c"users\00", align 1
@go..C367 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.223, i32 0, i32 0), i64 5 }
@go..C368 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..map.6string.7command_line_arguments.UserState = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 859928154, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C369, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 48, i8 0, i16 528, i8 1, i8 1 }, comdat
@const.224 = private constant [49 x i8] c"map[string]\09command_line_arguments\09cli.UserState\00", align 1
@go..C369 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([49 x i8], [49 x i8]* @const.224, i32 0, i32 0), i64 48 }
@command_line_arguments.UserState..d = constant %StructType.0 { %_type.0 { i64 48, i64 24, i32 -1436086352, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.UserState..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.UserState..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..fa, i32 0, i32 0), { i8*, i64 }* @go..C370, %uncommonType.0* @go..C374, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C394, i32 0, i32 0), i64 4, i64 4 } }
@command_line_arguments.command_line_arguments.UserState..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.UserState..hash to i64) }
@command_line_arguments.command_line_arguments.UserState..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.UserState..eq to i64) }
@const.225 = private constant [38 x i8] c"\09command_line_arguments\09cli.UserState\00", align 1
@go..C370 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([38 x i8], [38 x i8]* @const.225, i32 0, i32 0), i64 37 }
@const.226 = private constant [10 x i8] c"UserState\00", align 1
@go..C371 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.226, i32 0, i32 0), i64 9 }
@go..C372 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C373 = internal global [1 x %method.0] zeroinitializer
@go..C374 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C371, { i8*, i64 }* @go..C372, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C373, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.UserState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1502545143, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C375, %uncommonType.0* @go..C384, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.UserState, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i32 0, i32 0) }, comdat
@const.227 = private constant [39 x i8] c"*\09command_line_arguments\09cli.UserState\00", align 1
@go..C375 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([39 x i8], [39 x i8]* @const.227, i32 0, i32 0), i64 38 }
@const.228 = private constant [13 x i8] c"ProtocolUser\00", align 1
@go..C376 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.228, i32 0, i32 0), i64 12 }
@type..func.8.9.8github_com_spolu_warp.User.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -279995192, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C377, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C378, i32 0, i32 0), i64 0, i64 0 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C379, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.229 = private constant [40 x i8] c"func() \09github_com_spolu_warp\09warp.User\00", align 1
@go..C377 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.229, i32 0, i32 0), i64 39 }
@go..C378 = internal global [1 x %_type.0*] zeroinitializer
@github_com_spolu_warp.User..d = external constant %StructType.0
@go..C379 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1116799512, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C380, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C381, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C382, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.230 = private constant [78 x i8] c"func(*\09command_line_arguments\09cli.UserState) \09github_com_spolu_warp\09warp.User\00", align 1
@go..C380 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([78 x i8], [78 x i8]* @const.230, i32 0, i32 0), i64 77 }
@go..C381 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0)]
@go..C382 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0)]
@go..C383 = internal global [1 x %method.0] [%method.0 { { i8*, i64 }* @go..C376, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8github_com_spolu_warp.User.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9, i32 0, i32 0), i8* bitcast (void (%User.0*, i8*, %UserState.0*)* @command_line_arguments.UserState.ProtocolUser to i8*) }]
@go..C384 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C383, i32 0, i32 0), i64 1, i64 1 } }
@type...1.1command_line_arguments.UserState = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1729081497, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C385, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.UserState, i32 0, i32 0) }, comdat
@const.231 = private constant [40 x i8] c"**\09command_line_arguments\09cli.UserState\00", align 1
@go..C385 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.231, i32 0, i32 0), i64 39 }
@go..C386 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.221, i32 0, i32 0), i64 5 }
@go..C387 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C388 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.198, i32 0, i32 0), i64 8 }
@go..C389 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.232 = private constant [5 x i8] c"mode\00", align 1
@go..C390 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.232, i32 0, i32 0), i64 4 }
@go..C391 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.233 = private constant [8 x i8] c"hosting\00", align 1
@go..C392 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.233, i32 0, i32 0), i64 7 }
@go..C393 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C394 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C386, { i8*, i64 }* @go..C387, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C388, { i8*, i64 }* @go..C389, %_type.0* @string..d, { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C390, { i8*, i64 }* @go..C391, %_type.0* @github_com_spolu_warp.Mode..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C392, { i8*, i64 }* @go..C393, %_type.0* @bool..d, { i8*, i64 }* null, i64 80 }]
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 528, i64 528, i32 1719087204, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @gcbits..kwkwircfkvircba, i32 0, i32 0), { i8*, i64 }* @go..C395, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C402, i32 0, i32 0), i64 4, i64 4 } }, comdat
@gcbits..kwkwircfkvircba = weak constant [9 x i8] c"\AA\AA\8A\A2(\8A\A2(\02", comdat
@const.234 = private constant [105 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09cli.UserState; overflow * }\00", align 1
@go..C395 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([105 x i8], [105 x i8]* @const.234, i32 0, i32 0), i64 104 }
@go..C396 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.24, i32 0, i32 0), i64 7 }
@go..C397 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.29, i32 0, i32 0), i64 4 }
@go..C398 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.31, i32 0, i32 0), i64 6 }
@type...68x.7command_line_arguments.UserState = weak constant %ArrayType.0 { %_type.0 { i64 384, i64 360, i32 1422794607, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..fkvircfkva, i32 0, i32 0), { i8*, i64 }* @go..C399, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7command_line_arguments.UserState, i32 0, i32 0), i64 8 }, comdat
@gcbits..fkvircfkva = weak constant [6 x i8] c"EQ\14EQ\14", comdat
@const.235 = private constant [41 x i8] c"[8]\09command_line_arguments\09cli.UserState\00", align 1
@go..C399 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([41 x i8], [41 x i8]* @const.235, i32 0, i32 0), i64 40 }
@type...6.7command_line_arguments.UserState = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1436086338, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C400, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i32 0, i32 0) }, comdat
@const.236 = private constant [40 x i8] c"[]\09command_line_arguments\09cli.UserState\00", align 1
@go..C400 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([40 x i8], [40 x i8]* @const.236, i32 0, i32 0), i64 39 }
@go..C401 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.32, i32 0, i32 0), i64 8 }
@go..C402 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C396, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C397, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C398, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7command_line_arguments.UserState, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C401, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 1040 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 -842999324, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C403, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C414, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.237 = private constant [336 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09cli.UserState; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09cli.UserState; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C403 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([336 x i8], [336 x i8]* @const.237, i32 0, i32 0), i64 335 }
@go..C404 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@go..C405 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@go..C406 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.38, i32 0, i32 0), i64 1 }
@go..C407 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.39, i32 0, i32 0), i64 9 }
@go..C408 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.42, i32 0, i32 0), i64 5 }
@go..C409 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.45, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1735591497, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C410, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.238 = private constant [106 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]\09command_line_arguments\09cli.UserState; overflow * }\00", align 1
@go..C410 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([106 x i8], [106 x i8]* @const.238, i32 0, i32 0), i64 105 }
@go..C411 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.47, i32 0, i32 0), i64 10 }
@go..C412 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.48, i32 0, i32 0), i64 9 }
@go..C413 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.51, i32 0, i32 0), i64 5 }
@go..C414 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C404, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C405, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C406, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C407, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C408, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C409, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C411, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C412, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C413, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@go..C415 = internal global [3 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C363, { i8*, i64 }* @go..C364, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C365, { i8*, i64 }* @go..C366, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Size..d, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C367, { i8*, i64 }* @go..C368, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i32 0, i32 0), { i8*, i64 }* null, i64 64 }]
@const.239 = private constant [9 x i8] c"tornDown\00", align 1
@go..C416 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.239, i32 0, i32 0), i64 8 }
@go..C417 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.240 = private constant [7 x i8] c"cancel\00", align 1
@go..C418 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.240, i32 0, i32 0), i64 6 }
@go..C419 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.241 = private constant [6 x i8] c"mutex\00", align 1
@go..C420 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.241, i32 0, i32 0), i64 5 }
@go..C421 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1sync.Mutex = external constant %PtrType.0
@go..C422 = internal global [17 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C298, { i8*, i64 }* @go..C299, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Session..d, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C300, { i8*, i64 }* @go..C301, %_type.0* @string..d, { i8*, i64 }* null, i64 96 }, %structField.0 { { i8*, i64 }* @go..C302, { i8*, i64 }* @go..C303, %_type.0* @github_com_spolu_warp.SessionType..d, { i8*, i64 }* null, i64 128 }, %structField.0 { { i8*, i64 }* @go..C304, { i8*, i64 }* @go..C305, %_type.0* @string..d, { i8*, i64 }* null, i64 160 }, %structField.0 { { i8*, i64 }* @go..C306, { i8*, i64 }* @go..C307, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 192 }, %structField.0 { { i8*, i64 }* @go..C308, { i8*, i64 }* @go..C309, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session, i32 0, i32 0), { i8*, i64 }* null, i64 224 }, %structField.0 { { i8*, i64 }* @go..C310, { i8*, i64 }* @go..C311, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 240 }, %structField.0 { { i8*, i64 }* @go..C312, { i8*, i64 }* @go..C313, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Decoder, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C314, { i8*, i64 }* @go..C315, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 288 }, %structField.0 { { i8*, i64 }* @go..C316, { i8*, i64 }* @go..C317, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Encoder, i32 0, i32 0), { i8*, i64 }* null, i64 320 }, %structField.0 { { i8*, i64 }* @go..C318, { i8*, i64 }* @go..C319, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 336 }, %structField.0 { { i8*, i64 }* @go..C320, { i8*, i64 }* @go..C321, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1encoding_gob.Decoder, i32 0, i32 0), { i8*, i64 }* null, i64 368 }, %structField.0 { { i8*, i64 }* @go..C322, { i8*, i64 }* @go..C323, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0), { i8*, i64 }* null, i64 384 }, %structField.0 { { i8*, i64 }* @go..C324, { i8*, i64 }* @go..C325, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.WarpState, i32 0, i32 0), { i8*, i64 }* null, i64 416 }, %structField.0 { { i8*, i64 }* @go..C416, { i8*, i64 }* @go..C417, %_type.0* @bool..d, { i8*, i64 }* null, i64 432 }, %structField.0 { { i8*, i64 }* @go..C418, { i8*, i64 }* @go..C419, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), { i8*, i64 }* null, i64 448 }, %structField.0 { { i8*, i64 }* @go..C420, { i8*, i64 }* @go..C421, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1sync.Mutex, i32 0, i32 0), { i8*, i64 }* null, i64 464 }]
@io.ReadWriteCloser..d = external constant %InterfaceType.0
@github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Config..d = external constant %StructType.0
@io_ioutil.Discard = external local_unnamed_addr externally_initialized global %Writer.0
@const.243 = private constant [36 x i8] c"Failed to open session to warpd: %v\00", align 1
@sync.Mutex..d = external constant %StructType.0
@const.247 = private constant [29 x i8] c"State channel open error: %v\00", align 1
@const.249 = private constant [30 x i8] c"Update channel open error: %v\00", align 1
@github_com_spolu_warp.Version = external local_unnamed_addr externally_initialized global { i8*, i64 }
@github_com_spolu_warp.SessionHello..d = external constant %StructType.0
@const.251 = private constant [21 x i8] c"Send hello error: %v\00", align 1
@const.253 = private constant [29 x i8] c"Error channel open error: %v\00", align 1
@const.255 = private constant [28 x i8] c"Data channel open error: %v\00", align 1
@command_line_arguments.NewSession..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Session.0*, %error.0 }*, i8*, i64, i64, %Session.1*, i64, i64, { i8*, i64 }*, { i8*, i64 }*, %__go_descriptor.16*, %Conn.0*)* @command_line_arguments.NewSession to i64) }
@github_com_spolu_warp.Error..d = external constant %StructType.0
@command_line_arguments.Shell..d = constant %StructType.0 { %_type.0 { i64 16, i64 8, i32 1170961854, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Shell..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Shell..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C423, %uncommonType.0* @go..C427, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Shell, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C430, i32 0, i32 0), i64 1, i64 1 } }
@command_line_arguments.command_line_arguments.Shell..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Shell..hash to i64) }
@command_line_arguments.command_line_arguments.Shell..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Shell..eq to i64) }
@const.263 = private constant [34 x i8] c"\09command_line_arguments\09cli.Shell\00", align 1
@go..C423 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @const.263, i32 0, i32 0), i64 33 }
@const.264 = private constant [6 x i8] c"Shell\00", align 1
@go..C424 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.264, i32 0, i32 0), i64 5 }
@go..C425 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C426 = internal global [1 x %method.0] zeroinitializer
@go..C427 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C424, { i8*, i64 }* @go..C425, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C426, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Shell = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 1555520489, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C428, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Shell..d, i32 0, i32 0) }, comdat
@const.265 = private constant [35 x i8] c"*\09command_line_arguments\09cli.Shell\00", align 1
@go..C428 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.265, i32 0, i32 0), i64 34 }
@go..C429 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.5, i32 0, i32 0), i64 7 }
@go..C430 = internal global [1 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C429, { i8*, i64 }* null, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }]
@const.266 = private constant [6 x i8] c"SHELL\00", align 1
@const.268 = private constant [10 x i8] c"/bin/bash\00", align 1
@command_line_arguments.DetectShell..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (void ({ %Shell.0*, %error.0 }*, i8*, i64, i64)* @command_line_arguments.DetectShell to i64) }
@command_line_arguments.Srv..d = constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1386503207, i8 25, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Srv..hash..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @command_line_arguments.command_line_arguments.Srv..eq..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..nb, i32 0, i32 0), { i8*, i64 }* @go..C431, %uncommonType.0* @go..C435, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0) }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C483, i32 0, i32 0), i64 4, i64 4 } }
@command_line_arguments.command_line_arguments.Srv..hash..f = constant %functionDescriptor.0 { i64 ptrtoint (i64 (i8*, i8*, i64)* @command_line_arguments.command_line_arguments.Srv..hash to i64) }
@command_line_arguments.command_line_arguments.Srv..eq..f = constant %functionDescriptor.0 { i64 ptrtoint (i8 (i8*, i8*, i8*)* @command_line_arguments.command_line_arguments.Srv..eq to i64) }
@gcbits..nb = weak constant [1 x i8] c"-", comdat
@const.270 = private constant [32 x i8] c"\09command_line_arguments\09cli.Srv\00", align 1
@go..C431 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @const.270, i32 0, i32 0), i64 31 }
@const.271 = private constant [4 x i8] c"Srv\00", align 1
@go..C432 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.271, i32 0, i32 0), i64 3 }
@go..C433 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C434 = internal global [1 x %method.0] zeroinitializer
@go..C435 = internal constant %uncommonType.0 { { i8*, i64 }* @go..C432, { i8*, i64 }* @go..C433, %IPST.28 { %method.0* getelementptr inbounds ([1 x %method.0], [1 x %method.0]* @go..C434, i32 0, i32 0), i64 0, i64 0 } }
@type...1command_line_arguments.Srv = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 709214841, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C436, %uncommonType.0* @go..C473, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Srv, i32 0, i32 0) }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Srv..d, i32 0, i32 0) }, comdat
@const.272 = private constant [33 x i8] c"*\09command_line_arguments\09cli.Srv\00", align 1
@go..C436 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @const.272, i32 0, i32 0), i64 32 }
@const.273 = private constant [5 x i8] c"Path\00", align 1
@go..C437 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.273, i32 0, i32 0), i64 4 }
@type..func.8.1command_line_arguments.Srv.9.8string.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 2136077736, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C438, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C439, i32 0, i32 0), i64 1, i64 1 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C440, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.274 = private constant [46 x i8] c"func(*\09command_line_arguments\09cli.Srv) string\00", align 1
@go..C438 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([46 x i8], [46 x i8]* @const.274, i32 0, i32 0), i64 45 }
@go..C439 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0)]
@go..C440 = internal global [1 x %_type.0*] [%_type.0* @string..d]
@go..C441 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @const.64, i32 0, i32 0), i64 3 }
@type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 745574312, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C442, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C443, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C444, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.275 = private constant [71 x i8] c"func(*\09command_line_arguments\09cli.Srv, \09context\09context.Context) error\00", align 1
@go..C442 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([71 x i8], [71 x i8]* @const.275, i32 0, i32 0), i64 70 }
@go..C443 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0)]
@go..C444 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@const.276 = private constant [11 x i8] c"SetSession\00", align 1
@go..C445 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.276, i32 0, i32 0), i64 10 }
@type..func.8context.Context.3.1command_line_arguments.Session.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1883613096, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C446, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C447, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C448, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.277 = private constant [69 x i8] c"func(\09context\09context.Context, *\09command_line_arguments\09cli.Session)\00", align 1
@go..C446 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([69 x i8], [69 x i8]* @const.277, i32 0, i32 0), i64 68 }
@go..C447 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C448 = internal global [1 x %_type.0*] zeroinitializer
@type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 692297320, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C449, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C450, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C451, i32 0, i32 0), i64 0, i64 0 } }, comdat
@const.278 = private constant [103 x i8] c"func(*\09command_line_arguments\09cli.Srv, \09context\09context.Context, *\09command_line_arguments\09cli.Session)\00", align 1
@go..C449 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([103 x i8], [103 x i8]* @const.278, i32 0, i32 0), i64 102 }
@go..C450 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0)]
@go..C451 = internal global [1 x %_type.0*] zeroinitializer
@const.279 = private constant [17 x i8] c"executeAuthorize\00", align 1
@go..C452 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @const.279, i32 0, i32 0), i64 16 }
@go..C453 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -1862633560, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C454, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C455, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C456, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.280 = private constant [110 x i8] c"func(\09context\09context.Context, \09github_com_spolu_warp\09warp.Command) \09github_com_spolu_warp\09warp.CommandResult\00", align 1
@go..C454 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([110 x i8], [110 x i8]* @const.280, i32 0, i32 0), i64 109 }
@go..C455 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Command..d, i32 0, i32 0)]
@go..C456 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.CommandResult..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 -75229080, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C457, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C458, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C459, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.281 = private constant [144 x i8] c"func(*\09command_line_arguments\09cli.Srv, \09context\09context.Context, \09github_com_spolu_warp\09warp.Command) \09github_com_spolu_warp\09warp.CommandResult\00", align 1
@go..C457 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([144 x i8], [144 x i8]* @const.281, i32 0, i32 0), i64 143 }
@go..C458 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Command..d, i32 0, i32 0)]
@go..C459 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.CommandResult..d, i32 0, i32 0)]
@const.282 = private constant [14 x i8] c"executeRevoke\00", align 1
@go..C460 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.282, i32 0, i32 0), i64 13 }
@go..C461 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.283 = private constant [13 x i8] c"executeState\00", align 1
@go..C462 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.283, i32 0, i32 0), i64 12 }
@go..C463 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.284 = private constant [7 x i8] c"handle\00", align 1
@go..C464 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.284, i32 0, i32 0), i64 6 }
@go..C465 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type..func.8context.Context.3net.Conn.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 718280616, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C466, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([2 x %_type.0*], [2 x %_type.0*]* @go..C467, i32 0, i32 0), i64 2, i64 2 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C468, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.285 = private constant [52 x i8] c"func(\09context\09context.Context, \09net\09net.Conn) error\00", align 1
@go..C466 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([52 x i8], [52 x i8]* @const.285, i32 0, i32 0), i64 51 }
@go..C467 = internal global [2 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@go..C468 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9 = weak constant %FuncType.0 { %_type.0 { i64 8, i64 8, i32 1467861160, i8 19, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C469, %uncommonType.0* null, %_type.0* null }, i8 0, %IPST.29 { %_type.0** getelementptr inbounds ([3 x %_type.0*], [3 x %_type.0*]* @go..C470, i32 0, i32 0), i64 3, i64 3 }, %IPST.29 { %_type.0** getelementptr inbounds ([1 x %_type.0*], [1 x %_type.0*]* @go..C471, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.286 = private constant [86 x i8] c"func(*\09command_line_arguments\09cli.Srv, \09context\09context.Context, \09net\09net.Conn) error\00", align 1
@go..C469 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([86 x i8], [86 x i8]* @const.286, i32 0, i32 0), i64 85 }
@go..C470 = internal global [3 x %_type.0*] [%_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i32 0, i32 0)]
@go..C471 = internal global [1 x %_type.0*] [%_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @error..d, i32 0, i32 0)]
@go..C472 = internal global [7 x %method.0] [%method.0 { { i8*, i64 }* @go..C437, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8string.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.9.8string.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Srv.0*)* @command_line_arguments.Srv.Path to i8*) }, %method.0 { { i8*, i64 }* @go..C441, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Srv.0*, i64, i64)* @command_line_arguments.Srv.Run to i8*) }, %method.0 { { i8*, i64 }* @go..C445, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3.1command_line_arguments.Session.9.8.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9, i32 0, i32 0), i8* bitcast (void (i8*, %Srv.0*, i64, i64, %Session.0*)* @command_line_arguments.Srv.SetSession to i8*) }, %method.0 { { i8*, i64 }* @go..C452, { i8*, i64 }* @go..C453, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, i32 0, i32 0), i8* bitcast (void (%CommandResult.0*, i8*, %Srv.0*, i64, i64, %Command.1*)* @command_line_arguments.Srv.executeAuthorize to i8*) }, %method.0 { { i8*, i64 }* @go..C460, { i8*, i64 }* @go..C461, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, i32 0, i32 0), i8* bitcast (void (%CommandResult.0*, i8*, %Srv.0*, i64, i64, %Command.1*)* @command_line_arguments.Srv.executeRevoke to i8*) }, %method.0 { { i8*, i64 }* @go..C462, { i8*, i64 }* @go..C463, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, i32 0, i32 0), i8* bitcast (void (%CommandResult.0*, i8*, %Srv.0*, i64, i64, %Command.1*)* @command_line_arguments.Srv.executeState to i8*) }, %method.0 { { i8*, i64 }* @go..C464, { i8*, i64 }* @go..C465, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8context.Context.3net.Conn.9.8error.9, i32 0, i32 0), %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9, i32 0, i32 0), i8* bitcast ({ i64, i64 } (i8*, %Srv.0*, i64, i64, i64, i64)* @command_line_arguments.Srv.handle to i8*) }]
@go..C473 = internal constant %uncommonType.0 { { i8*, i64 }* null, { i8*, i64 }* null, %IPST.28 { %method.0* getelementptr inbounds ([7 x %method.0], [7 x %method.0]* @go..C472, i32 0, i32 0), i64 7, i64 7 } }
@type...1.1command_line_arguments.Srv = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 -1537464423, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C474, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i32 0, i32 0) }, comdat
@const.287 = private constant [34 x i8] c"**\09command_line_arguments\09cli.Srv\00", align 1
@go..C474 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @const.287, i32 0, i32 0), i64 33 }
@go..C475 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.196, i32 0, i32 0), i64 4 }
@go..C476 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C477 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.195, i32 0, i32 0), i64 7 }
@go..C478 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.288 = private constant [5 x i8] c"path\00", align 1
@go..C479 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.288, i32 0, i32 0), i64 4 }
@go..C480 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C481 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.241, i32 0, i32 0), i64 5 }
@go..C482 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@go..C483 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C475, { i8*, i64 }* @go..C476, %_type.0* @string..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C477, { i8*, i64 }* @go..C478, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Session, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C479, { i8*, i64 }* @go..C480, %_type.0* @string..d, { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C481, { i8*, i64 }* @go..C482, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1sync.Mutex, i32 0, i32 0), { i8*, i64 }* null, i64 80 }]
@command_line_arguments.NewSrv..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (%Srv.0* (i8*, i64, i64, i64, i64)* @command_line_arguments.NewSrv to i64) }
@type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5 = weak constant %StructType.0 { %_type.0 { i64 32, i64 32, i32 705191492, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0), { i8*, i64 }* @go..C484, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C493, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.291 = private constant [107 x i8] c"struct { f *; s1 **\09command_line_arguments\09cli.Srv; ctx2 *\09context\09context.Context; conn3 *\09net\09net.Conn }\00", align 1
@go..C484 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([107 x i8], [107 x i8]* @const.291, i32 0, i32 0), i64 106 }
@const.292 = private constant [2 x i8] c"f\00", align 1
@go..C485 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.292, i32 0, i32 0), i64 1 }
@go..C486 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.292, i32 0, i32 0), i64 1 }
@const.293 = private constant [3 x i8] c"s1\00", align 1
@go..C487 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.293, i32 0, i32 0), i64 2 }
@go..C488 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@const.294 = private constant [5 x i8] c"ctx2\00", align 1
@go..C489 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.294, i32 0, i32 0), i64 4 }
@go..C490 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1context.Context = external constant %PtrType.0
@const.295 = private constant [6 x i8] c"conn3\00", align 1
@go..C491 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.295, i32 0, i32 0), i64 5 }
@go..C492 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @const.2, i32 0, i32 0), i64 22 }
@type...1net.Conn = external constant %PtrType.0
@go..C493 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C485, { i8*, i64 }* @go..C486, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C487, { i8*, i64 }* @go..C488, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1.1command_line_arguments.Srv, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C489, { i8*, i64 }* @go..C490, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1context.Context, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C491, { i8*, i64 }* @go..C492, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1net.Conn, i32 0, i32 0), { i8*, i64 }* null, i64 48 }]
@type..struct.4.4x.5fn.0func.8.9.8.9.5 = weak constant %StructType.0 { %_type.0 { i64 8, i64 8, i32 76, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C494, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([1 x %structField.0], [1 x %structField.0]* @go..C496, i32 0, i32 0), i64 1, i64 1 } }, comdat
@const.296 = private constant [21 x i8] c"struct { fn func() }\00", align 1
@go..C494 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @const.296, i32 0, i32 0), i64 20 }
@const.297 = private constant [3 x i8] c"fn\00", align 1
@go..C495 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @const.297, i32 0, i32 0), i64 2 }
@go..C496 = internal global [1 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C495, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%FuncType.0, %FuncType.0* @type..func.8.9.8.9, i32 0, i32 0), { i8*, i64 }* null, i64 0 }]
@type...1github_com_spolu_warp.Command = external constant %PtrType.0
@const.298 = private constant [30 x i8] c"Failed to receive command: %v\00", align 1
@const.300 = private unnamed_addr constant %CommandResult.0 zeroinitializer
@const.302 = private constant [10 x i8] c"authorize\00", align 1
@const.303 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.302, i32 0, i32 0), i64 9 }
@const.304 = private constant [7 x i8] c"revoke\00", align 1
@const.305 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.304, i32 0, i32 0), i64 6 }
@const.306 = private constant [16 x i8] c"command_unknown\00", align 1
@const.307 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @const.306, i32 0, i32 0), i64 15 }
@github_com_spolu_warp.CommandType..d = external constant %_type.0
@const.308 = private constant [20 x i8] c"Invalid command %s.\00", align 1
@const.310 = private constant [34 x i8] c"Failed to send command result: %v\00", align 1
@const.312 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.208, i32 0, i32 0), i64 5 }, i8 0, %State.0 zeroinitializer, %Error.0 zeroinitializer }
@const.313 = private constant [13 x i8] c"disconnected\00", align 1
@const.314 = private constant [36 x i8] c"The warp is currently disconnected.\00", align 1
@const.315 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.302, i32 0, i32 0), i64 9 }, i8 0, %State.0 zeroinitializer, %Error.0 { { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.313, i32 0, i32 0), i64 12 }, { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.314, i32 0, i32 0), i64 35 } } }
@const.316 = private constant [20 x i8] c"user_token_required\00", align 1
@const.317 = private constant [37 x i8] c"User token to authorize is required.\00", align 1
@const.318 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.302, i32 0, i32 0), i64 9 }, i8 0, %State.0 zeroinitializer, %Error.0 { { i8*, i64 } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @const.316, i32 0, i32 0), i64 19 }, { i8*, i64 } { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @const.317, i32 0, i32 0), i64 36 } } }
@const.319 = private constant [2 x i8] c".\00", align 1
@const.320 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.319, i32 0, i32 0), i64 1 }
@const.321 = private constant [13 x i8] c"user_unknown\00", align 1
@const.322 = private unnamed_addr constant { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.321, i32 0, i32 0), i64 12 }
@const.323 = private constant [14 x i8] c"update_failed\00", align 1
@const.324 = private constant [32 x i8] c"Failed to apply update to warp.\00", align 1
@const.325 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.302, i32 0, i32 0), i64 9 }, i8 0, %State.0 zeroinitializer, %Error.0 { { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.323, i32 0, i32 0), i64 13 }, { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @const.324, i32 0, i32 0), i64 31 } } }
@const.326 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.302, i32 0, i32 0), i64 9 }, i8 0, %State.0 zeroinitializer, %Error.0 zeroinitializer }
@const.327 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.304, i32 0, i32 0), i64 6 }, i8 0, %State.0 zeroinitializer, %Error.0 { { i8*, i64 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @const.313, i32 0, i32 0), i64 12 }, { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.314, i32 0, i32 0), i64 35 } } }
@const.328 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.304, i32 0, i32 0), i64 6 }, i8 0, %State.0 zeroinitializer, %Error.0 { { i8*, i64 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @const.323, i32 0, i32 0), i64 13 }, { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @const.324, i32 0, i32 0), i64 31 } } }
@const.329 = private unnamed_addr constant %CommandResult.0 { { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.304, i32 0, i32 0), i64 6 }, i8 0, %State.0 zeroinitializer, %Error.0 zeroinitializer }
@const.330 = private unnamed_addr constant %User.0 zeroinitializer
@const.331 = private constant [5 x i8] c"host\00", align 1
@command_line_arguments.NewWarpState..f = local_unnamed_addr constant %functionDescriptor.0 { i64 ptrtoint (%WarpState.0* (i8*, %SessionHello.0*)* @command_line_arguments.NewWarpState to i64) }
@const.333 = private constant [24 x i8] c"Warp token mismatch: %s\00", align 1
@type..map.6string.7github_com_spolu_warp.User = weak constant %MapType.0 { %_type.0 { i64 8, i64 8, i32 479700253, i8 21, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C497, %uncommonType.0* null, %_type.0* null }, %_type.0* @string..d, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0), %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, i32 0, i32 0), i8 16, i8 0, i8 48, i8 0, i16 528, i8 1, i8 1 }, comdat
@const.336 = private constant [44 x i8] c"map[string]\09github_com_spolu_warp\09warp.User\00", align 1
@go..C497 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([44 x i8], [44 x i8]* @const.336, i32 0, i32 0), i64 43 }
@type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 528, i64 528, i32 -1858271036, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @gcbits..kwkwircfkvircba, i32 0, i32 0), { i8*, i64 }* @go..C498, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([4 x %structField.0], [4 x %structField.0]* @go..C505, i32 0, i32 0), i64 4, i64 4 } }, comdat
@const.337 = private constant [100 x i8] c"struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }\00", align 1
@go..C498 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([100 x i8], [100 x i8]* @const.337, i32 0, i32 0), i64 99 }
@go..C499 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.24, i32 0, i32 0), i64 7 }
@go..C500 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @const.29, i32 0, i32 0), i64 4 }
@go..C501 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @const.31, i32 0, i32 0), i64 6 }
@type...68x.7github_com_spolu_warp.User = weak constant %ArrayType.0 { %_type.0 { i64 384, i64 360, i32 662338805, i8 17, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..fkvircfkva, i32 0, i32 0), { i8*, i64 }* @go..C502, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0), %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7github_com_spolu_warp.User, i32 0, i32 0), i64 8 }, comdat
@const.338 = private constant [36 x i8] c"[8]\09github_com_spolu_warp\09warp.User\00", align 1
@go..C502 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([36 x i8], [36 x i8]* @const.338, i32 0, i32 0), i64 35 }
@type...6.7github_com_spolu_warp.User = weak constant %SliceType.0 { %_type.0 { i64 24, i64 8, i32 -1816314239, i8 23, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C503, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i32 0, i32 0) }, comdat
@const.339 = private constant [35 x i8] c"[]\09github_com_spolu_warp\09warp.User\00", align 1
@go..C503 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([35 x i8], [35 x i8]* @const.339, i32 0, i32 0), i64 34 }
@go..C504 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @const.32, i32 0, i32 0), i64 8 }
@go..C505 = internal global [4 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C499, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7uint8, i32 0, i32 0), { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C500, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7string, i32 0, i32 0), { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C501, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...68x.7github_com_spolu_warp.User, i32 0, i32 0), { i8*, i64 }* null, i64 272 }, %structField.0 { { i8*, i64 }* @go..C504, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 1040 }]
@type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5 = weak constant %StructType.0 { %_type.0 { i64 48, i64 48, i32 1892882916, i8 25, i8 8, i8 8, %__go_descriptor.2* null, %__go_descriptor.3* null, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..mb, i32 0, i32 0), { i8*, i64 }* @go..C506, %uncommonType.0* null, %_type.0* null }, %IPST.30 { %structField.0* getelementptr inbounds ([9 x %structField.0], [9 x %structField.0]* @go..C517, i32 0, i32 0), i64 9, i64 9 } }, comdat
@const.340 = private constant [326 x i8] c"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }; nevacuate uintptr; extra * }\00", align 1
@go..C506 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([326 x i8], [326 x i8]* @const.340, i32 0, i32 0), i64 325 }
@go..C507 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.34, i32 0, i32 0), i64 5 }
@go..C508 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.37, i32 0, i32 0), i64 5 }
@go..C509 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @const.38, i32 0, i32 0), i64 1 }
@go..C510 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.39, i32 0, i32 0), i64 9 }
@go..C511 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.42, i32 0, i32 0), i64 5 }
@go..C512 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @const.45, i32 0, i32 0), i64 7 }
@type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5 = weak constant %PtrType.0 { %_type.0 { i64 8, i64 8, i32 332434505, i8 54, i8 8, i8 8, %__go_descriptor.2* bitcast (%functionDescriptor.0* @runtime.memhash64..f to %__go_descriptor.2*), %__go_descriptor.3* bitcast (%functionDescriptor.0* @runtime.memequal64..f to %__go_descriptor.3*), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0), { i8*, i64 }* @go..C513, %uncommonType.0* null, %_type.0* null }, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0) }, comdat
@const.341 = private constant [101 x i8] c"*struct { topbits [8]uint8; keys [8]string; values [8]\09github_com_spolu_warp\09warp.User; overflow * }\00", align 1
@go..C513 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([101 x i8], [101 x i8]* @const.341, i32 0, i32 0), i64 100 }
@go..C514 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @const.47, i32 0, i32 0), i64 10 }
@go..C515 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @const.48, i32 0, i32 0), i64 9 }
@go..C516 = internal constant { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @const.51, i32 0, i32 0), i64 5 }
@go..C517 = internal global [9 x %structField.0] [%structField.0 { { i8*, i64 }* @go..C507, { i8*, i64 }* null, %_type.0* @int..d, { i8*, i64 }* null, i64 0 }, %structField.0 { { i8*, i64 }* @go..C508, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 16 }, %structField.0 { { i8*, i64 }* @go..C509, { i8*, i64 }* null, %_type.0* @uint8..d, { i8*, i64 }* null, i64 18 }, %structField.0 { { i8*, i64 }* @go..C510, { i8*, i64 }* null, %_type.0* @uint16..d, { i8*, i64 }* null, i64 20 }, %structField.0 { { i8*, i64 }* @go..C511, { i8*, i64 }* null, %_type.0* @uint32..d, { i8*, i64 }* null, i64 24 }, %structField.0 { { i8*, i64 }* @go..C512, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 32 }, %structField.0 { { i8*, i64 }* @go..C514, { i8*, i64 }* null, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, i32 0, i32 0), { i8*, i64 }* null, i64 48 }, %structField.0 { { i8*, i64 }* @go..C515, { i8*, i64 }* null, %_type.0* @uintptr..d, { i8*, i64 }* null, i64 64 }, %structField.0 { { i8*, i64 }* @go..C516, { i8*, i64 }* null, %_type.0* @unsafe.Pointer..d, { i8*, i64 }* null, i64 80 }]
@const.342 = private constant [30 x i8] c"User token mismatch: %s <> %s\00", align 1
@const.344 = private constant [36 x i8] c"Unexptected hosting user update: %s\00", align 1
@const.346 = private constant [36 x i8] c"Unexptected user update mode: %s %d\00", align 1
@const.349 = private constant [17 x i8] c"Unknown user: %s\00", align 1
@gcbits..ha = weak constant [1 x i8] c"\07", comdat
@gcbits..ppppa = weak constant [3 x i8] c"\EF\BD\07", comdat
@gcbits..pppppppppa = weak constant [6 x i8] c"\EF\BD\F7\DE{\0F", comdat
@gcbits..GGda = weak constant [2 x i8] c"\FF\0F", comdat
@gcbits..Ga = weak constant [1 x i8] c"\1F", comdat
@gcbits..pppa = weak constant [2 x i8] c"\EF=", comdat
@gcbits..ppaa = weak constant [2 x i8] c"\EF\01", comdat
@gcbits..GGGGGGGGGGGGGGGG = weak constant [10 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF", comdat
@gcbits..GGGGGGGa = weak constant [5 x i8] c"\FF\FF\FF\FF\07", comdat
@gcbits..pppppppppppppppppa = weak constant [11 x i8] c"\EF\BD\F7\DE{\EF\BD\F7\DE{\0F", comdat
@go..C0 = internal global { i8*, i64, [118 x { i8*, i64, i64, i8* }] } { i8* null, i64 118, [118 x { i8*, i64, i64, i8* }] [{ i8*, i64, i64, i8* } { i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.Registrar to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast (%Regexp.0** @command_line_arguments.flagFilterRegexp to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C15 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C29 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %imethod.0]* @go..C30 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C31 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C34 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C39 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C57 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C89 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C90 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C91 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %imethod.0]* @go..C92 to i8*), i64 96, i64 96, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..GGda, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C96 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C106 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C118 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C128 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C130 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C131 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C132 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C138 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %structField.0]* @go..C150 to i8*), i64 80, i64 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..ppaa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %structField.0]* @go..C159 to i8*), i64 40, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C169 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C171 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C172 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C175 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C176 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C178 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C179 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C182 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C183 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C185 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C186 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C189 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C190 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C192 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C193 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C202 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C204 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C205 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C217 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C229 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C230 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C232 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C233 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C237 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C239 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C240 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C243 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C244 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C246 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C247 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C251 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C253 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C254 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C257 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C258 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C260 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C261 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C267 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C272 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C273 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C275 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C276 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C279 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C280 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C284 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C286 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C287 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C290 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C293 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([16 x %method.0]* @go..C295 to i8*), i64 640, i64 640, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @gcbits..GGGGGGGGGGGGGGGG, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C329 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C330 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C333 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C334 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C337 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C338 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C341 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C342 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C345 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C346 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C349 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C350 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C353 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C354 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %method.0]* @go..C355 to i8*), i64 280, i64 280, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..GGGGGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C379 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C381 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C382 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %method.0]* @go..C383 to i8*), i64 40, i64 40, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..Ga, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C394 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C402 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C414 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %structField.0]* @go..C415 to i8*), i64 120, i64 112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @gcbits..pppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([17 x %structField.0]* @go..C422 to i8*), i64 680, i64 672, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @gcbits..pppppppppppppppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %structField.0]* @go..C430 to i8*), i64 40, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C439 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C440 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C443 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C444 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C447 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C450 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C455 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C456 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C458 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C459 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([2 x %_type.0*]* @go..C467 to i8*), i64 16, i64 16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..da, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C468 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([3 x %_type.0*]* @go..C470 to i8*), i64 24, i64 24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ha, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %_type.0*]* @go..C471 to i8*), i64 8, i64 8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..ba, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([7 x %method.0]* @go..C472 to i8*), i64 280, i64 280, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @gcbits..GGGGGGGa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C483 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C493 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([1 x %structField.0]* @go..C496 to i8*), i64 40, i64 32, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @gcbits..pa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([4 x %structField.0]* @go..C505 to i8*), i64 160, i64 152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @gcbits..ppppa, i32 0, i32 0) }, { i8*, i64, i64, i8* } { i8* bitcast ([9 x %structField.0]* @go..C517 to i8*), i64 360, i64 352, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @gcbits..pppppppppa, i32 0, i32 0) }] }

declare i64 @reflect.rtype.Align(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.AssignableTo(i8*, %.reflect.rtype.0*, i64, i64) #0

declare i64 @reflect.rtype.Bits(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.ChanDir(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.Comparable(i8*, %.reflect.rtype.0*) #0

declare i8 @reflect.rtype.ConvertibleTo(i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.Elem(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.Field(%StructField.0*, i8*, %.reflect.rtype.0*, i64) #0

declare i64 @reflect.rtype.FieldAlign(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.FieldByIndex(%StructField.0*, i8*, %.reflect.rtype.0*, %IPST.7*) #0

declare void @reflect.rtype.FieldByName({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64) #0

declare void @reflect.rtype.FieldByNameFunc({ %StructField.0, i8 }*, i8*, %.reflect.rtype.0*, %__go_descriptor.34*) #0

declare i8 @reflect.rtype.Implements(i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.In(i8*, %.reflect.rtype.0*, i64) #0

declare i8 @reflect.rtype.IsVariadic(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.Key(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Kind(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Len(i8*, %.reflect.rtype.0*) #0

declare void @reflect.rtype.Method(%Method.0*, i8*, %.reflect.rtype.0*, i64) #0

declare void @reflect.rtype.MethodByName({ %Method.0, i8 }*, i8*, %.reflect.rtype.0*, i64, i64) #0

declare { i64, i64 } @reflect.rtype.Name(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumField(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumIn(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumMethod(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.NumOut(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.Out(i8*, %.reflect.rtype.0*, i64) #0

declare { i64, i64 } @reflect.rtype.PkgPath(i8*, %.reflect.rtype.0*) #0

declare i64 @reflect.rtype.Size(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.String(i8*, %.reflect.rtype.0*) #0

declare %.reflect.rtype.0* @reflect.rtype.common(i8*, %.reflect.rtype.0*) #0

declare { i64, i64 } @reflect.rtype.rawString(i8*, %.reflect.rtype.0*) #0

declare %.reflect.uncommonType.0* @reflect.rtype.uncommon..stub(i8*, %.reflect.rtype.0*) #0

declare void @syscall.SockaddrInet4.sockaddr({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet4.0*) #0

declare void @syscall.SockaddrInet6.sockaddr({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrInet6.0*) #0

declare void @syscall.SockaddrLinklayer.sockaddr({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrLinklayer.0*) #0

declare void @syscall.SockaddrNetlink.sockaddr({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrNetlink.0*) #0

declare void @syscall.SockaddrUnix.sockaddr({ %RawSockaddrAny.0*, i32, %error.0 }*, i8*, %SockaddrUnix.0*) #0

define void @command_line_arguments..import(i8* nest nocapture readnone %nest.0) local_unnamed_addr #0 !dbg !279 {
entry:
  call void @runtime.registerGCRoots(i8* nest undef, i8* bitcast ({ i8*, i64, [118 x { i8*, i64, i64, i8* }] }* @go..C0 to i8*)), !dbg !282
  %call.0 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9 to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !284
  %runtime.writeBarrier.ld.0 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !286
  %icmp.1 = icmp eq i32 %runtime.writeBarrier.ld.0, 0, !dbg !286
  br i1 %icmp.1, label %else.352, label %else.351

fallthrough.351:                                  ; preds = %else.351, %else.352
  %call.1 = call %Regexp.0* @regexp.MustCompile(i8* nest undef, i64 ptrtoint ([4 x i8]* @const.71 to i64), i64 3), !dbg !287
  %runtime.writeBarrier.ld.1 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !288
  %icmp.3 = icmp eq i32 %runtime.writeBarrier.ld.1, 0, !dbg !288
  br i1 %icmp.3, label %else.354, label %else.353

else.351:                                         ; preds = %entry
  %cast.98 = bitcast { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.0 to i8*, !dbg !286
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast ({ i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.Registrar to i8*), i8* %cast.98), !dbg !286
  br label %fallthrough.351

else.352:                                         ; preds = %entry
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.0, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.Registrar, align 8, !dbg !286
  br label %fallthrough.351

fallthrough.353:                                  ; preds = %else.353, %else.354
  ret void

else.353:                                         ; preds = %fallthrough.351
  %cast.119 = bitcast %Regexp.0* %call.1 to i8*, !dbg !288
  call void @runtime.writebarrierptr(i8* nest undef, i8* bitcast (%Regexp.0** @command_line_arguments.flagFilterRegexp to i8*), i8* %cast.119), !dbg !288
  br label %fallthrough.353

else.354:                                         ; preds = %fallthrough.351
  store %Regexp.0* %call.1, %Regexp.0** @command_line_arguments.flagFilterRegexp, align 8, !dbg !288
  br label %fallthrough.353
}

declare { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8*, i8*, i64, i64, i64, i8*) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @__go_runtime_error(i8*, i32) local_unnamed_addr #1

declare void @runtime.writebarrierptr(i8*, i8*, i8*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Cli.Run(i8* nest nocapture readnone %nest.2, %Cli.0* %c) #0 !dbg !289 {
entry:
  %cmd = alloca { i8*, i64 }, align 8
  %args = alloca %IPST.2, align 8
  %tmpv.50 = alloca %IPST.2, align 8
  %tmpv.53 = alloca { i8*, i64 }, align 8
  %sret.actual.5 = alloca { i8**, i64, i64 }, align 8
  %tmpv.63 = alloca %IPST.2, align 8
  %tmpv.75 = alloca { i8*, i64 }, align 8
  %tmpv.81 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %Cli.0* %c, metadata !365, metadata !DIExpression()), !dbg !366
  %cmd.0.sroa_cast = bitcast { i8*, i64 }* %cmd to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %cmd.0.sroa_cast)
  %0 = bitcast %IPST.2* %args to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %icmp.45 = icmp eq %Cli.0* %c, null, !dbg !367
  br i1 %icmp.45, label %then.18, label %else.18

then.18:                                          ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !367
  unreachable

else.18:                                          ; preds = %entry
  %field.46 = getelementptr inbounds %Cli.0, %Cli.0* %c, i64 0, i32 2, i32 1, !dbg !367
  %.field.field.ld.0 = load i64, i64* %field.46, align 8, !dbg !367
  %icmp.46 = icmp eq i64 %.field.field.ld.0, 0, !dbg !369
  br i1 %icmp.46, label %else.21, label %else.30

else.21:                                          ; preds = %else.18
  %field.45 = getelementptr inbounds %Cli.0, %Cli.0* %c, i64 0, i32 2, !dbg !367
  %cast.226 = bitcast %IPST.2* %tmpv.50 to i8*
  %cast.227 = bitcast %IPST.2* %field.45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.226, i8* nonnull align 8 %cast.227, i64 24, i1 false)
  %field.33 = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.50, i64 0, i32 1, !dbg !370
  %tmpv.50.field.ld.0 = load i64, i64* %field.33, align 8, !dbg !370
  %cast.228 = bitcast { i8*, i64 }* %tmpv.53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.228, i8* align 8 bitcast ({ i8*, i64 }* @const.83 to i8*), i64 16, i1 false)
  %add.3 = add i64 %tmpv.50.field.ld.0, 1, !dbg !370
  %field.34 = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.50, i64 0, i32 2, !dbg !370
  %tmpv.50.field.ld.1 = load i64, i64* %field.34, align 8, !dbg !370
  %icmp.32 = icmp ugt i64 %add.3, %tmpv.50.field.ld.1, !dbg !370
  br i1 %icmp.32, label %then.22, label %else.22

then.22:                                          ; preds = %else.21
  %cast.230 = bitcast %IPST.2* %tmpv.50 to { i8**, i64, i64 }*, !dbg !370
  call void @runtime.growslice({ i8**, i64, i64 }* nonnull sret %sret.actual.5, i8* nest undef, %_type.0* nonnull @string..d, { i8**, i64, i64 }* byval nonnull %cast.230, i64 %add.3), !dbg !370
  %tmpv.58.sroa.0.0.cast.235.sroa_idx = bitcast { i8**, i64, i64 }* %sret.actual.5 to { i8*, i64 }**
  %tmpv.58.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.58.sroa.0.0.cast.235.sroa_idx, align 8
  %1 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.5, i64 0, i32 1
  %tmpv.58.sroa.3.0.copyload = load i64, i64* %1, align 8
  %2 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.5, i64 0, i32 2
  %tmpv.58.sroa.4.0.copyload = load i64, i64* %2, align 8
  %.pre = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.50, i64 0, i32 0, !dbg !370
  br label %fallthrough.22

fallthrough.22:                                   ; preds = %else.23, %then.22
  %tmpv.58.sroa.0.0.cast.238.sroa_idx.pre-phi = phi { i8*, i64 }** [ %field.37, %else.23 ], [ %.pre, %then.22 ], !dbg !370
  %tmpv.58.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.50.field.ld.3, %else.23 ], [ %tmpv.58.sroa.0.0.copyload, %then.22 ]
  %tmpv.58.sroa.3.0 = phi i64 [ %add.3, %else.23 ], [ %tmpv.58.sroa.3.0.copyload, %then.22 ]
  %tmpv.58.sroa.4.0 = phi i64 [ %tmpv.50.field.ld.1, %else.23 ], [ %tmpv.58.sroa.4.0.copyload, %then.22 ]
  store { i8*, i64 }* %tmpv.58.sroa.0.0, { i8*, i64 }** %tmpv.58.sroa.0.0.cast.238.sroa_idx.pre-phi, align 8, !dbg !370
  store i64 %tmpv.58.sroa.3.0, i64* %field.33, align 8, !dbg !370
  store i64 %tmpv.58.sroa.4.0, i64* %field.34, align 8, !dbg !370
  %icmp.39 = icmp sge i64 %tmpv.50.field.ld.0, %tmpv.58.sroa.3.0, !dbg !370
  %3 = icmp slt i64 %tmpv.50.field.ld.0, 0, !dbg !370
  %ior.52 = or i1 %3, %icmp.39, !dbg !370
  br i1 %ior.52, label %then.25, label %else.25

else.22:                                          ; preds = %else.21
  %icmp.34 = icmp sgt i64 %add.3, %tmpv.50.field.ld.1, !dbg !370
  %add.3.lobit85 = or i64 %tmpv.50.field.ld.1, %add.3, !dbg !370
  %4 = icmp slt i64 %add.3.lobit85, 0, !dbg !370
  %5 = or i1 %icmp.34, %4, !dbg !370
  br i1 %5, label %then.23, label %else.23

then.23:                                          ; preds = %else.22
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !370
  unreachable

else.23:                                          ; preds = %else.22
  %field.37 = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.50, i64 0, i32 0, !dbg !370
  %tmpv.50.field.ld.3 = load { i8*, i64 }*, { i8*, i64 }** %field.37, align 8, !dbg !370
  br label %fallthrough.22

then.25:                                          ; preds = %fallthrough.22
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !370
  unreachable

else.25:                                          ; preds = %fallthrough.22
  %ptroff.7 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.58.sroa.0.0, i64 %tmpv.50.field.ld.0, !dbg !370
  %runtime.writeBarrier.ld.5 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !370
  %icmp.42 = icmp eq i32 %runtime.writeBarrier.ld.5, 0, !dbg !370
  br i1 %icmp.42, label %then.26, label %else.26

then.26:                                          ; preds = %else.25
  %icmp.41 = icmp eq { i8*, i64 }* %ptroff.7, null, !dbg !370
  br i1 %icmp.41, label %then.27, label %else.27

fallthrough.26:                                   ; preds = %else.26, %else.27
  %cast.245 = bitcast %IPST.2* %tmpv.63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.245, i8* nonnull align 8 %cast.226, i64 24, i1 false)
  %runtime.writeBarrier.ld.6 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !371
  %icmp.44 = icmp eq i32 %runtime.writeBarrier.ld.6, 0, !dbg !371
  br i1 %icmp.44, label %else.29, label %else.28

else.26:                                          ; preds = %else.25
  %cast.243 = bitcast { i8*, i64 }* %ptroff.7 to i8*, !dbg !370
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.243, i8* nonnull %cast.228), !dbg !370
  br label %fallthrough.26

then.27:                                          ; preds = %then.26
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !370
  unreachable

else.27:                                          ; preds = %then.26
  %cast.241 = bitcast { i8*, i64 }* %ptroff.7 to i8*, !dbg !370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.241, i8* nonnull align 8 %cast.228, i64 16, i1 false), !dbg !370
  br label %fallthrough.26

else.28:                                          ; preds = %fallthrough.26
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%SliceType.0, %SliceType.0* @type...6.7string, i64 0, i32 0), i8* nonnull %cast.227, i8* nonnull %cast.245), !dbg !371
  br label %else.30thread-pre-split

else.29:                                          ; preds = %fallthrough.26
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.227, i8* nonnull align 8 %cast.245, i64 24, i1 false), !dbg !371
  br label %else.30thread-pre-split

else.30thread-pre-split:                          ; preds = %else.29, %else.28
  %tmpv.66.sroa.2.0.copyload.pr = load i64, i64* %field.46, align 8
  br label %else.30

else.30:                                          ; preds = %else.30thread-pre-split, %else.18
  %tmpv.66.sroa.2.0.copyload = phi i64 [ %tmpv.66.sroa.2.0.copyload.pr, %else.30thread-pre-split ], [ %.field.field.ld.0, %else.18 ]
  %icmp.48 = icmp slt i64 %tmpv.66.sroa.2.0.copyload, 1, !dbg !372
  br i1 %icmp.48, label %then.31, label %else.31

then.31:                                          ; preds = %else.30
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !372
  unreachable

else.31:                                          ; preds = %else.30
  %tmpv.66.sroa.0.0.cast.258.sroa_idx = getelementptr inbounds %Cli.0, %Cli.0* %c, i64 0, i32 2, i32 0
  %tmpv.66.sroa.3.0.cast.258.sroa_idx25 = getelementptr inbounds %Cli.0, %Cli.0* %c, i64 0, i32 2, i32 2
  %6 = bitcast { i8*, i64 }** %tmpv.66.sroa.0.0.cast.258.sroa_idx to i8**
  %tmpv.66.sroa.0.0.copyload81 = load i8*, i8** %6, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cmd.0.sroa_cast, i8* align 8 %tmpv.66.sroa.0.0.copyload81, i64 16, i1 false)
  %tmpv.70.sroa.3.0.copyload = load i64, i64* %tmpv.66.sroa.3.0.cast.258.sroa_idx25, align 8
  %icmp.51 = icmp slt i64 %tmpv.70.sroa.3.0.copyload, 1, !dbg !373
  br i1 %icmp.51, label %then.33, label %else.33

then.33:                                          ; preds = %else.31
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !373
  unreachable

else.33:                                          ; preds = %else.31
  %7 = bitcast i8* %tmpv.66.sroa.0.0.copyload81 to { i8*, i64 }*
  %sub.6 = add i64 %tmpv.70.sroa.3.0.copyload, -1, !dbg !373
  %icmp.53 = icmp ne i64 %sub.6, 0, !dbg !373
  %. = zext i1 %icmp.53 to i64
  %ptroff.9 = getelementptr { i8*, i64 }, { i8*, i64 }* %7, i64 %., !dbg !373
  %sub.7 = add i64 %tmpv.66.sroa.2.0.copyload, -1, !dbg !373
  %tmpv.74.sroa.0.0.cast.266.sroa_idx = getelementptr inbounds %IPST.2, %IPST.2* %args, i64 0, i32 0
  store { i8*, i64 }* %ptroff.9, { i8*, i64 }** %tmpv.74.sroa.0.0.cast.266.sroa_idx, align 8
  %tmpv.74.sroa.2.0.cast.266.sroa_idx79 = getelementptr inbounds %IPST.2, %IPST.2* %args, i64 0, i32 1
  store i64 %sub.7, i64* %tmpv.74.sroa.2.0.cast.266.sroa_idx79, align 8
  %tmpv.74.sroa.3.0.cast.266.sroa_idx80 = getelementptr inbounds %IPST.2, %IPST.2* %args, i64 0, i32 2
  store i64 %sub.6, i64* %tmpv.74.sroa.3.0.cast.266.sroa_idx80, align 8
  call void @llvm.dbg.value(metadata %__go_descriptor.8* null, metadata !374, metadata !DIExpression()), !dbg !410
  call void @llvm.dbg.value(metadata i8 0, metadata !411, metadata !DIExpression()), !dbg !410
  %cast.268 = bitcast { i8*, i64 }* %tmpv.75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.268, i8* nonnull align 8 %cmd.0.sroa_cast, i64 16, i1 false)
  %command_line_arguments.Registrar.ld.0 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.Registrar, align 8, !dbg !412
  %call.11 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %command_line_arguments.Registrar.ld.0, i8* nonnull %cast.268), !dbg !413
  %call.11.fca.0.extract = extractvalue { i64, i8 } %call.11, 0, !dbg !413
  %call.11.fca.1.extract = extractvalue { i64, i8 } %call.11, 1, !dbg !413
  %cast.277 = inttoptr i64 %call.11.fca.0.extract to %__go_descriptor.8**, !dbg !413
  %.ld.37 = load %__go_descriptor.8*, %__go_descriptor.8** %cast.277, align 8, !dbg !413
  call void @llvm.dbg.value(metadata %__go_descriptor.8* %.ld.37, metadata !374, metadata !DIExpression()), !dbg !410
  call void @llvm.dbg.value(metadata i8 %call.11.fca.1.extract, metadata !411, metadata !DIExpression()), !dbg !410
  %icmp.54 = icmp eq i8 %call.11.fca.1.extract, 0, !dbg !414
  br i1 %icmp.54, label %then.35, label %else.35

then.35:                                          ; preds = %else.33
  %cast.278 = bitcast { i8*, i64 }* %tmpv.81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.278, i8* align 8 bitcast ({ i8*, i64 }* @const.83 to i8*), i64 16, i1 false)
  %command_line_arguments.Registrar.ld.1 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** @command_line_arguments.Registrar, align 8, !dbg !415
  %call.12 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %command_line_arguments.Registrar.ld.1, i8* nonnull %cast.278), !dbg !416
  %cast.282 = bitcast i8* %call.12 to %__go_descriptor.8**, !dbg !416
  %.ld.38 = load %__go_descriptor.8*, %__go_descriptor.8** %cast.282, align 8, !dbg !416
  %8 = getelementptr inbounds %__go_descriptor.8, %__go_descriptor.8* %.ld.38, i64 0, i32 0, !dbg !416
  %deref.ld.083 = load { i64, i64 } (i8*)*, { i64, i64 } (i8*)** %8, align 8, !dbg !416
  %cast.285 = bitcast %__go_descriptor.8* %.ld.38 to i8*, !dbg !416
  %call.13 = call { i64, i64 } %deref.ld.083(i8* nest %cast.285), !dbg !416
  br label %fallthrough.35

fallthrough.35:                                   ; preds = %else.35, %then.35
  %call.14.sink90 = phi { i64, i64 } [ %call.14, %else.35 ], [ %call.13, %then.35 ]
  %call.14.fca.0.extract = extractvalue { i64, i64 } %call.14.sink90, 0, !dbg !417
  %call.14.fca.1.extract = extractvalue { i64, i64 } %call.14.sink90, 1, !dbg !417
  call void @llvm.dbg.value(metadata i64 %call.14.fca.1.extract, metadata !418, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !419
  call void @llvm.dbg.value(metadata i64 %call.14.fca.0.extract, metadata !418, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !419
  %9 = inttoptr i64 %call.14.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* }*, !dbg !420
  %field.62 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* }* %9, i64 0, i32 4, !dbg !420
  %.field.ld.8 = load { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)** %field.62, align 8, !dbg !420
  %10 = inttoptr i64 %call.14.fca.1.extract to i8*, !dbg !420
  %field.65 = getelementptr inbounds %Cli.0, %Cli.0* %c, i64 0, i32 1, !dbg !421
  %.field.ld.9 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.65, align 8, !dbg !421
  %field0.7 = bitcast %Cli.0* %c to i64*, !dbg !420
  %ld.14 = load i64, i64* %field0.7, align 8, !dbg !420
  %field1.7 = getelementptr inbounds %Cli.0, %Cli.0* %c, i64 0, i32 0, i32 1, !dbg !420
  %11 = bitcast i8** %field1.7 to i64*, !dbg !420
  %ld.15 = load i64, i64* %11, align 8, !dbg !420
  call void @llvm.dbg.value(metadata %IPST.2* %args, metadata !422, metadata !DIExpression(DW_OP_deref)), !dbg !423
  %call.15 = call { i64, i64 } %.field.ld.8(i8* nest undef, i8* %10, i64 %ld.14, i64 %ld.15, %IPST.2* byval nonnull %args, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.9), !dbg !420
  %call.15.fca.0.extract = extractvalue { i64, i64 } %call.15, 0, !dbg !420
  call void @llvm.dbg.value(metadata i64 %call.15.fca.0.extract, metadata !424, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !425
  %icmp.58 = icmp eq i64 %call.15.fca.0.extract, 0, !dbg !426
  br i1 %icmp.58, label %else.40, label %else.39

else.35:                                          ; preds = %else.33
  %12 = getelementptr inbounds %__go_descriptor.8, %__go_descriptor.8* %.ld.37, i64 0, i32 0, !dbg !427
  %deref.ld.182 = load { i64, i64 } (i8*)*, { i64, i64 } (i8*)** %12, align 8, !dbg !427
  %cast.293 = bitcast %__go_descriptor.8* %.ld.37 to i8*, !dbg !427
  %call.14 = call { i64, i64 } %deref.ld.182(i8* nest %cast.293), !dbg !427
  call void @llvm.dbg.value(metadata i64 %call.14.fca.0.extract, metadata !418, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !419
  call void @llvm.dbg.value(metadata i64 %call.14.fca.1.extract, metadata !418, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !419
  br label %fallthrough.35

else.39:                                          ; preds = %fallthrough.35
  %call.15.fca.1.extract = extractvalue { i64, i64 } %call.15, 1, !dbg !420
  call void @llvm.dbg.value(metadata i64 %call.15.fca.1.extract, metadata !424, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !425
  %field.67 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* }* %9, i64 0, i32 2, !dbg !428
  %.field.ld.10 = load void (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)** %field.67, align 8, !dbg !428
  %ld.16 = load i64, i64* %field0.7, align 8, !dbg !428
  %ld.17 = load i64, i64* %11, align 8, !dbg !428
  call void %.field.ld.10(i8* nest undef, i8* %10, i64 %ld.16, i64 %ld.17), !dbg !428
  %call.16 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.15.fca.0.extract, i64 %call.15.fca.1.extract), !dbg !429
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cmd.0.sroa_cast), !dbg !430
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !430
  ret { i64, i64 } %call.16, !dbg !430

else.40:                                          ; preds = %fallthrough.35
  %field.72 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*, i64, i64)*, void (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, i64, i64, %IPST.2*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*)* }* %9, i64 0, i32 1, !dbg !431
  %.field.ld.11 = load { i64, i64 } (i8*, i8*, i64, i64)*, { i64, i64 } (i8*, i8*, i64, i64)** %field.72, align 8, !dbg !431
  %ld.21 = load i64, i64* %field0.7, align 8, !dbg !431
  %ld.22 = load i64, i64* %11, align 8, !dbg !431
  %call.17 = call { i64, i64 } %.field.ld.11(i8* nest undef, i8* %10, i64 %ld.21, i64 %ld.22), !dbg !431
  %call.17.fca.0.extract = extractvalue { i64, i64 } %call.17, 0, !dbg !431
  call void @llvm.dbg.value(metadata i64 %call.17.fca.0.extract, metadata !424, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !425
  %icmp.60 = icmp eq i64 %call.17.fca.0.extract, 0, !dbg !432
  br i1 %icmp.60, label %else.41, label %then.41

then.41:                                          ; preds = %else.40
  %call.17.fca.1.extract = extractvalue { i64, i64 } %call.17, 1, !dbg !431
  call void @llvm.dbg.value(metadata i64 %call.17.fca.1.extract, metadata !424, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !425
  %call.18 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.17.fca.0.extract, i64 %call.17.fca.1.extract), !dbg !433
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cmd.0.sroa_cast), !dbg !434
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !434
  ret { i64, i64 } %call.18, !dbg !434

else.41:                                          ; preds = %else.40
  call void @llvm.dbg.value(metadata i64 0, metadata !435, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !436
  call void @llvm.dbg.value(metadata i64 0, metadata !435, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !436
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %cmd.0.sroa_cast), !dbg !437
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !437
  ret { i64, i64 } zeroinitializer, !dbg !437
}

declare %Regexp.0* @regexp.MustCompile(i8*, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.New({ %Cli.0*, %error.0 }* nocapture sret %sret.formal.0, i8* nest nocapture readnone %nest.1, %IPST.2* byval nocapture readonly %argv) #0 !dbg !438 {
entry:
  call void @llvm.dbg.declare(metadata %IPST.2* %argv, metadata !445, metadata !DIExpression()), !dbg !446
  %sret.actual.2 = alloca %IPST.2, align 8
  %tmpv.16 = alloca { i8*, i64 }, align 8
  %tmpv.19 = alloca { i8*, i64 }, align 8
  %tmpv.26 = alloca { i8*, i64 }, align 8
  %tmpv.28 = alloca { i8*, i64 }, align 8
  %tmpv.32 = alloca { i8*, i64 }, align 8
  %tmpv.33 = alloca %IPST.2, align 8
  %sret.actual.4 = alloca { i8**, i64, i64 }, align 8
  %tmpv.45 = alloca %Cli.0, align 8
  call void @llvm.dbg.value(metadata %Cli.0* null, metadata !447, metadata !DIExpression()), !dbg !448
  %call.2 = call { i64, i64 } @context.Background(i8* nest undef), !dbg !449
  %call.2.fca.0.extract = extractvalue { i64, i64 } %call.2, 0, !dbg !449
  %call.2.fca.1.extract = extractvalue { i64, i64 } %call.2, 1, !dbg !449
  call void @llvm.dbg.value(metadata i64 %call.2.fca.0.extract, metadata !451, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !452
  call void @llvm.dbg.value(metadata i64 %call.2.fca.1.extract, metadata !451, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !452
  %call.3 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%ArrayType.0, %ArrayType.0* @type...60x.7string, i64 0, i32 0)), !dbg !453
  %cast.126 = bitcast i8* %call.3 to { i8*, i64 }*, !dbg !453
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.126, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !455
  call void @llvm.dbg.value(metadata i64 0, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !455
  call void @llvm.dbg.value(metadata i64 0, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !455
  %call.4 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7string to i8*), i64 0, i64 32, i64 16, i8* null), !dbg !456
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.4, metadata !457, metadata !DIExpression()), !dbg !458
  %tmpv.9.sroa.0.0.cast.135.sroa_idx = getelementptr inbounds %IPST.2, %IPST.2* %argv, i64 0, i32 0
  %tmpv.9.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.9.sroa.0.0.cast.135.sroa_idx, align 8
  %tmpv.9.sroa.2.0.cast.135.sroa_idx34 = getelementptr inbounds %IPST.2, %IPST.2* %argv, i64 0, i32 1
  %tmpv.9.sroa.2.0.copyload = load i64, i64* %tmpv.9.sroa.2.0.cast.135.sroa_idx34, align 8
  call void @llvm.dbg.value(metadata i64 0, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !455
  call void @llvm.dbg.value(metadata i64 0, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !455
  call void @llvm.dbg.value(metadata { i8*, i64 }* %cast.126, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !455
  %icmp.29106 = icmp sgt i64 %tmpv.9.sroa.2.0.copyload, 0, !dbg !459
  br i1 %icmp.29106, label %else.0.lr.ph, label %else.17

else.0.lr.ph:                                     ; preds = %entry
  %sret.actual.3.sroa.0.0.cast.183.sroa_cast = bitcast { i8*, i64 }* %tmpv.32 to i64*
  %sret.actual.3.sroa.2.0.cast.183.sroa_idx15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.32, i64 0, i32 1
  %args.sroa.0.0.cast.185.sroa_idx = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.33, i64 0, i32 0
  %args.sroa.6.0.cast.185.sroa_idx58 = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.33, i64 0, i32 1
  %args.sroa.7.0.cast.185.sroa_idx64 = getelementptr inbounds %IPST.2, %IPST.2* %tmpv.33, i64 0, i32 2
  %s.sroa.0.0.cast.152.sroa_idx = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.2, i64 0, i32 0
  %s.sroa.6.0.cast.152.sroa_idx29 = getelementptr inbounds %IPST.2, %IPST.2* %sret.actual.2, i64 0, i32 1
  %cast.187 = bitcast %IPST.2* %tmpv.33 to { i8**, i64, i64 }*
  %tmpv.39.sroa.0.0.cast.192.sroa_idx = bitcast { i8**, i64, i64 }* %sret.actual.4 to { i8*, i64 }**
  %0 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.4, i64 0, i32 1
  %1 = getelementptr inbounds { i8**, i64, i64 }, { i8**, i64, i64 }* %sret.actual.4, i64 0, i32 2
  %cast.155 = bitcast { i8*, i64 }* %tmpv.16 to i8*
  %cast.157 = bitcast { i8*, i64 }* %tmpv.19 to i8*
  %cast.169 = bitcast { i8*, i64 }* %tmpv.26 to i8*
  %cast.171 = bitcast { i8*, i64 }* %tmpv.28 to i8*
  %cast.201 = bitcast { i8*, i64 }* %tmpv.32 to i8*
  br label %else.0

else.0:                                           ; preds = %else.0.lr.ph, %fallthrough.1
  %args.sroa.7.0110 = phi i64 [ 0, %else.0.lr.ph ], [ %args.sroa.7.1, %fallthrough.1 ]
  %args.sroa.6.0109 = phi i64 [ 0, %else.0.lr.ph ], [ %args.sroa.6.1, %fallthrough.1 ]
  %args.sroa.0.0108 = phi { i8*, i64 }* [ %cast.126, %else.0.lr.ph ], [ %args.sroa.0.1, %fallthrough.1 ]
  %tmpv.7.0107 = phi i64 [ 0, %else.0.lr.ph ], [ %add.2, %fallthrough.1 ]
  call void @llvm.dbg.value(metadata i64 %args.sroa.7.0110, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !455
  call void @llvm.dbg.value(metadata i64 %args.sroa.6.0109, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !455
  call void @llvm.dbg.value(metadata { i8*, i64 }* %args.sroa.0.0108, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !455
  %ptroff.0 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.9.sroa.0.0.copyload, i64 %tmpv.7.0107, !dbg !459
  %tmpv.8.sroa.0.0.cast.137.sroa_cast = bitcast { i8*, i64 }* %ptroff.0 to i64*, !dbg !459
  %tmpv.8.sroa.0.0.copyload50 = load i64, i64* %tmpv.8.sroa.0.0.cast.137.sroa_cast, align 8, !dbg !459
  %tmpv.8.sroa.3.0.cast.137.sroa_idx51 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.9.sroa.0.0.copyload, i64 %tmpv.7.0107, i32 1, !dbg !459
  %tmpv.8.sroa.3.0.copyload52 = load i64, i64* %tmpv.8.sroa.3.0.cast.137.sroa_idx51, align 8, !dbg !459
  call void @llvm.dbg.value(metadata i64 %tmpv.8.sroa.0.0.copyload50, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !462
  call void @llvm.dbg.value(metadata i64 %tmpv.8.sroa.3.0.copyload52, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !462
  %command_line_arguments.flagFilterRegexp.ld.0 = load %Regexp.0*, %Regexp.0** @command_line_arguments.flagFilterRegexp, align 8, !dbg !463
  %call.9 = call i8 @regexp.Regexp.MatchString(i8* nest undef, %Regexp.0* %command_line_arguments.flagFilterRegexp.ld.0, i64 %tmpv.8.sroa.0.0.copyload50, i64 %tmpv.8.sroa.3.0.copyload52), !dbg !464
  %2 = and i8 %call.9, 1, !dbg !465
  %trunc.20 = icmp eq i8 %2, 0, !dbg !465
  br i1 %trunc.20, label %else.1, label %then.1

then.1:                                           ; preds = %else.0
  %call.5 = call { i64, i64 } @strings.Trim(i8* nest undef, i64 %tmpv.8.sroa.0.0.copyload50, i64 %tmpv.8.sroa.3.0.copyload52, i64 ptrtoint ([2 x i8]* @const.75 to i64), i64 1), !dbg !466
  %call.5.fca.0.extract = extractvalue { i64, i64 } %call.5, 0, !dbg !466
  %call.5.fca.1.extract = extractvalue { i64, i64 } %call.5, 1, !dbg !466
  call void @llvm.dbg.value(metadata i64 %call.5.fca.0.extract, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !462
  call void @llvm.dbg.value(metadata i64 %call.5.fca.1.extract, metadata !461, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !462
  call void @strings.Split(%IPST.2* nonnull sret %sret.actual.2, i8* nest undef, i64 %call.5.fca.0.extract, i64 %call.5.fca.1.extract, i64 ptrtoint ([2 x i8]* @const.77 to i64), i64 1), !dbg !468
  %s.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %s.sroa.0.0.cast.152.sroa_idx, align 8
  call void @llvm.dbg.value(metadata { i8*, i64 }* %s.sroa.0.0.copyload, metadata !469, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !470
  %s.sroa.6.0.copyload = load i64, i64* %s.sroa.6.0.cast.152.sroa_idx29, align 8
  call void @llvm.dbg.value(metadata i64 %s.sroa.6.0.copyload, metadata !469, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !470
  call void @llvm.dbg.value(metadata %IPST.2* %sret.actual.2, metadata !469, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 128, 64)), !dbg !470
  switch i64 %s.sroa.6.0.copyload, label %fallthrough.1 [
    i64 2, label %else.4
    i64 1, label %else.8
  ]

fallthrough.1:                                    ; preds = %then.1, %else.5, %else.6, %else.9, %else.10, %fallthrough.15
  %args.sroa.0.1 = phi { i8*, i64 }* [ %args.sroa.0.0.copyload55, %fallthrough.15 ], [ %args.sroa.0.0108, %else.10 ], [ %args.sroa.0.0108, %else.9 ], [ %args.sroa.0.0108, %else.6 ], [ %args.sroa.0.0108, %else.5 ], [ %args.sroa.0.0108, %then.1 ], !dbg !471
  %args.sroa.6.1 = phi i64 [ %args.sroa.6.0.copyload60, %fallthrough.15 ], [ %args.sroa.6.0109, %else.10 ], [ %args.sroa.6.0109, %else.9 ], [ %args.sroa.6.0109, %else.6 ], [ %args.sroa.6.0109, %else.5 ], [ %args.sroa.6.0109, %then.1 ], !dbg !471
  %args.sroa.7.1 = phi i64 [ %args.sroa.7.0.copyload66, %fallthrough.15 ], [ %args.sroa.7.0110, %else.10 ], [ %args.sroa.7.0110, %else.9 ], [ %args.sroa.7.0110, %else.6 ], [ %args.sroa.7.0110, %else.5 ], [ %args.sroa.7.0110, %then.1 ], !dbg !471
  %add.2 = add nuw nsw i64 %tmpv.7.0107, 1, !dbg !459
  call void @llvm.dbg.value(metadata i64 %args.sroa.7.1, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !455
  call void @llvm.dbg.value(metadata i64 %args.sroa.6.1, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !455
  call void @llvm.dbg.value(metadata { i8*, i64 }* %args.sroa.0.1, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !455
  %icmp.29 = icmp slt i64 %add.2, %tmpv.9.sroa.2.0.copyload, !dbg !459
  br i1 %icmp.29, label %else.0, label %else.17

else.1:                                           ; preds = %else.0
  %call.8 = call { i64, i64 } @strings.TrimSpace(i8* nest undef, i64 %tmpv.8.sroa.0.0.copyload50, i64 %tmpv.8.sroa.3.0.copyload52), !dbg !472
  %call.8.fca.0.extract = extractvalue { i64, i64 } %call.8, 0, !dbg !472
  %call.8.fca.1.extract = extractvalue { i64, i64 } %call.8, 1, !dbg !472
  store i64 %call.8.fca.0.extract, i64* %sret.actual.3.sroa.0.0.cast.183.sroa_cast, align 8
  store i64 %call.8.fca.1.extract, i64* %sret.actual.3.sroa.2.0.cast.183.sroa_idx15, align 8
  store { i8*, i64 }* %args.sroa.0.0108, { i8*, i64 }** %args.sroa.0.0.cast.185.sroa_idx, align 8
  store i64 %args.sroa.6.0109, i64* %args.sroa.6.0.cast.185.sroa_idx58, align 8
  store i64 %args.sroa.7.0110, i64* %args.sroa.7.0.cast.185.sroa_idx64, align 8
  %add.0 = add i64 %args.sroa.6.0109, 1, !dbg !473
  %icmp.18 = icmp ugt i64 %add.0, %args.sroa.7.0110, !dbg !473
  br i1 %icmp.18, label %then.11, label %else.11

else.4:                                           ; preds = %then.1
  %cast.156 = bitcast { i8*, i64 }* %s.sroa.0.0.copyload to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.155, i8* align 8 %cast.156, i64 16, i1 false)
  %ptroff.2 = getelementptr { i8*, i64 }, { i8*, i64 }* %s.sroa.0.0.copyload, i64 1, !dbg !474
  %cast.158 = bitcast { i8*, i64 }* %ptroff.2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.157, i8* align 8 %cast.158, i64 16, i1 false)
  %call.6 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.4, i8* nonnull %cast.155), !dbg !475
  %runtime.writeBarrier.ld.2 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !475
  %icmp.11 = icmp eq i32 %runtime.writeBarrier.ld.2, 0, !dbg !475
  br i1 %icmp.11, label %then.5, label %else.5

then.5:                                           ; preds = %else.4
  %icmp.10 = icmp eq i8* %call.6, null, !dbg !475
  br i1 %icmp.10, label %then.6, label %else.6

else.5:                                           ; preds = %else.4
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.6, i8* nonnull %cast.157), !dbg !475
  br label %fallthrough.1

then.6:                                           ; preds = %then.5
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !475
  unreachable

else.6:                                           ; preds = %then.5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.6, i8* nonnull align 8 %cast.157, i64 16, i1 false), !dbg !475
  br label %fallthrough.1

else.8:                                           ; preds = %then.1
  %cast.170 = bitcast { i8*, i64 }* %s.sroa.0.0.copyload to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.169, i8* align 8 %cast.170, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.171, i8* align 8 bitcast ({ i8*, i64 }* @const.80 to i8*), i64 16, i1 false)
  %call.7 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7string, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.4, i8* nonnull %cast.169), !dbg !476
  %runtime.writeBarrier.ld.3 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !476
  %icmp.15 = icmp eq i32 %runtime.writeBarrier.ld.3, 0, !dbg !476
  br i1 %icmp.15, label %then.9, label %else.9

then.9:                                           ; preds = %else.8
  %icmp.14 = icmp eq i8* %call.7, null, !dbg !476
  br i1 %icmp.14, label %then.10, label %else.10

else.9:                                           ; preds = %else.8
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.7, i8* nonnull %cast.171), !dbg !476
  br label %fallthrough.1

then.10:                                          ; preds = %then.9
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !476
  unreachable

else.10:                                          ; preds = %then.9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.7, i8* nonnull align 8 %cast.171, i64 16, i1 false), !dbg !476
  br label %fallthrough.1

then.11:                                          ; preds = %else.1
  call void @runtime.growslice({ i8**, i64, i64 }* nonnull sret %sret.actual.4, i8* nest undef, %_type.0* nonnull @string..d, { i8**, i64, i64 }* byval nonnull %cast.187, i64 %add.0), !dbg !473
  %tmpv.39.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.39.sroa.0.0.cast.192.sroa_idx, align 8
  %tmpv.39.sroa.3.0.copyload = load i64, i64* %0, align 8
  %tmpv.39.sroa.4.0.copyload = load i64, i64* %1, align 8
  br label %fallthrough.11

fallthrough.11:                                   ; preds = %else.11, %then.11
  %tmpv.39.sroa.0.0 = phi { i8*, i64 }* [ %tmpv.39.sroa.0.0.copyload, %then.11 ], [ %args.sroa.0.0108, %else.11 ]
  %tmpv.39.sroa.3.0 = phi i64 [ %tmpv.39.sroa.3.0.copyload, %then.11 ], [ %add.0, %else.11 ]
  %tmpv.39.sroa.4.0 = phi i64 [ %tmpv.39.sroa.4.0.copyload, %then.11 ], [ %args.sroa.7.0110, %else.11 ]
  store { i8*, i64 }* %tmpv.39.sroa.0.0, { i8*, i64 }** %args.sroa.0.0.cast.185.sroa_idx, align 8, !dbg !473
  store i64 %tmpv.39.sroa.3.0, i64* %args.sroa.6.0.cast.185.sroa_idx58, align 8, !dbg !473
  store i64 %tmpv.39.sroa.4.0, i64* %args.sroa.7.0.cast.185.sroa_idx64, align 8, !dbg !473
  %icmp.25 = icmp sge i64 %args.sroa.6.0109, %tmpv.39.sroa.3.0, !dbg !473
  %3 = icmp slt i64 %args.sroa.6.0109, 0, !dbg !473
  %ior.44 = or i1 %3, %icmp.25, !dbg !473
  br i1 %ior.44, label %then.14, label %else.14

else.11:                                          ; preds = %else.1
  %icmp.20 = icmp sgt i64 %add.0, %args.sroa.7.0110, !dbg !473
  %add.0.lobit89 = or i64 %add.0, %args.sroa.7.0110, !dbg !473
  %4 = icmp slt i64 %add.0.lobit89, 0, !dbg !473
  %5 = or i1 %icmp.20, %4, !dbg !473
  br i1 %5, label %then.12, label %fallthrough.11

then.12:                                          ; preds = %else.11
  call void @__go_runtime_error(i8* nest undef, i32 3), !dbg !473
  unreachable

then.14:                                          ; preds = %fallthrough.11
  call void @__go_runtime_error(i8* nest undef, i32 0), !dbg !473
  unreachable

else.14:                                          ; preds = %fallthrough.11
  %ptroff.5 = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.39.sroa.0.0, i64 %args.sroa.6.0109, !dbg !473
  %runtime.writeBarrier.ld.4 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !473
  %icmp.28 = icmp eq i32 %runtime.writeBarrier.ld.4, 0, !dbg !473
  br i1 %icmp.28, label %then.15, label %else.15

then.15:                                          ; preds = %else.14
  %icmp.27 = icmp eq { i8*, i64 }* %ptroff.5, null, !dbg !473
  br i1 %icmp.27, label %then.16, label %else.16

fallthrough.15:                                   ; preds = %else.15, %else.16
  %args.sroa.0.0.copyload55 = load { i8*, i64 }*, { i8*, i64 }** %args.sroa.0.0.cast.185.sroa_idx, align 8, !dbg !477
  call void @llvm.dbg.value(metadata { i8*, i64 }* %args.sroa.0.0.copyload55, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !455
  %args.sroa.6.0.copyload60 = load i64, i64* %args.sroa.6.0.cast.185.sroa_idx58, align 8, !dbg !477
  call void @llvm.dbg.value(metadata i64 %args.sroa.6.0.copyload60, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !455
  %args.sroa.7.0.copyload66 = load i64, i64* %args.sroa.7.0.cast.185.sroa_idx64, align 8, !dbg !477
  call void @llvm.dbg.value(metadata i64 %args.sroa.7.0.copyload66, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !455
  br label %fallthrough.1

else.15:                                          ; preds = %else.14
  %cast.200 = bitcast { i8*, i64 }* %ptroff.5 to i8*, !dbg !473
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %cast.200, i8* nonnull %cast.201), !dbg !473
  br label %fallthrough.15

then.16:                                          ; preds = %then.15
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !473
  unreachable

else.16:                                          ; preds = %then.15
  %cast.198 = bitcast { i8*, i64 }* %ptroff.5 to i8*, !dbg !473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.198, i8* nonnull align 8 %cast.201, i64 16, i1 false), !dbg !473
  br label %fallthrough.15

else.17:                                          ; preds = %fallthrough.1, %entry
  %args.sroa.0.0.lcssa = phi { i8*, i64 }* [ %cast.126, %entry ], [ %args.sroa.0.1, %fallthrough.1 ], !dbg !453
  %args.sroa.6.0.lcssa = phi i64 [ 0, %entry ], [ %args.sroa.6.1, %fallthrough.1 ], !dbg !453
  %args.sroa.7.0.lcssa = phi i64 [ 0, %entry ], [ %args.sroa.7.1, %fallthrough.1 ], !dbg !453
  call void @llvm.dbg.value(metadata { i8*, i64 }* %args.sroa.0.0.lcssa, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !455
  call void @llvm.dbg.value(metadata i64 %args.sroa.6.0.lcssa, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !455
  call void @llvm.dbg.value(metadata i64 %args.sroa.7.0.lcssa, metadata !454, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 64)), !dbg !455
  %call.10 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Cli..d, i64 0, i32 0)), !dbg !478
  %ctx.sroa.0.0.cast.207.sroa_cast = bitcast %Cli.0* %tmpv.45 to i64*, !dbg !479
  store i64 %call.2.fca.0.extract, i64* %ctx.sroa.0.0.cast.207.sroa_cast, align 8, !dbg !479
  %ctx.sroa.4.0.cast.207.sroa_idx71 = getelementptr inbounds %Cli.0, %Cli.0* %tmpv.45, i64 0, i32 0, i32 1, !dbg !479
  %ctx.sroa.4.0.cast.207.sroa_cast = bitcast i8** %ctx.sroa.4.0.cast.207.sroa_idx71 to i64*, !dbg !479
  store i64 %call.2.fca.1.extract, i64* %ctx.sroa.4.0.cast.207.sroa_cast, align 8, !dbg !479
  %field.27 = getelementptr inbounds %Cli.0, %Cli.0* %tmpv.45, i64 0, i32 1, !dbg !479
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.4, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.27, align 8, !dbg !479
  %args.sroa.0.0.cast.209.sroa_idx = getelementptr inbounds %Cli.0, %Cli.0* %tmpv.45, i64 0, i32 2, i32 0, !dbg !479
  store { i8*, i64 }* %args.sroa.0.0.lcssa, { i8*, i64 }** %args.sroa.0.0.cast.209.sroa_idx, align 8, !dbg !479
  %args.sroa.6.0.cast.209.sroa_idx61 = getelementptr inbounds %Cli.0, %Cli.0* %tmpv.45, i64 0, i32 2, i32 1, !dbg !479
  store i64 %args.sroa.6.0.lcssa, i64* %args.sroa.6.0.cast.209.sroa_idx61, align 8, !dbg !479
  %args.sroa.7.0.cast.209.sroa_idx67 = getelementptr inbounds %Cli.0, %Cli.0* %tmpv.45, i64 0, i32 2, i32 2, !dbg !479
  store i64 %args.sroa.7.0.lcssa, i64* %args.sroa.7.0.cast.209.sroa_idx67, align 8, !dbg !479
  %cast.213 = bitcast %Cli.0* %tmpv.45 to i8*, !dbg !478
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Cli..d, i64 0, i32 0), i8* %call.10, i8* nonnull %cast.213), !dbg !478
  call void @llvm.dbg.value(metadata i8* %call.10, metadata !447, metadata !DIExpression()), !dbg !448
  %6 = bitcast { %Cli.0*, %error.0 }* %sret.formal.0 to i8**, !dbg !480
  store i8* %call.10, i8** %6, align 8, !dbg !480
  %tmp.1.sroa.2.0.cast.220.sroa_idx = getelementptr inbounds { %Cli.0*, %error.0 }, { %Cli.0*, %error.0 }* %sret.formal.0, i64 0, i32 1, !dbg !480
  %tmp.1.sroa.2.0.cast.220.sroa_cast = bitcast %error.0* %tmp.1.sroa.2.0.cast.220.sroa_idx to i8*, !dbg !480
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmp.1.sroa.2.0.cast.220.sroa_cast, i8 0, i64 16, i1 false), !dbg !480
  ret void, !dbg !480
}

declare { i64, i64 } @context.Background(i8*) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

declare i8* @runtime.newobject(i8*, %_type.0*) local_unnamed_addr #0

declare i8 @regexp.Regexp.MatchString(i8*, %Regexp.0*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @strings.Trim(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @strings.Split(%IPST.2*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare i8* @runtime.mapassign(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.typedmemmove(i8*, %_type.0*, i8*, i8*) local_unnamed_addr #0

declare { i64, i64 } @strings.TrimSpace(i8*, i64, i64) local_unnamed_addr #0

declare void @runtime.growslice({ i8**, i64, i64 }*, i8*, %_type.0*, { i8**, i64, i64 }*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

declare { i64, i8 } @runtime.mapaccess2(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare i8* @runtime.mapaccess1(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8*, i64, i64) local_unnamed_addr #0

define i64 @command_line_arguments.command_line_arguments.Credentials..hash(i8* nest nocapture readnone %nest.67, i8* %key, i64 %seed) #0 !dbg !481 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !482, metadata !DIExpression()), !dbg !483
  call void @llvm.dbg.value(metadata i64 %seed, metadata !484, metadata !DIExpression()), !dbg !483
  call void @llvm.dbg.value(metadata i64 0, metadata !485, metadata !DIExpression()), !dbg !483
  %pticast.21 = ptrtoint i8* %key to i64, !dbg !483
  %call.226 = call i64 @runtime.strhash(i8* nest undef, i8* %key, i64 %seed), !dbg !483
  %add.7 = add i64 %pticast.21, 16, !dbg !483
  %itpcast.1 = inttoptr i64 %add.7 to i8*, !dbg !483
  %call.227 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.1, i64 %call.226), !dbg !483
  call void @llvm.dbg.value(metadata i64 %call.227, metadata !485, metadata !DIExpression()), !dbg !483
  ret i64 %call.227, !dbg !483
}

define i8 @command_line_arguments.command_line_arguments.Credentials..eq(i8* nest nocapture readnone %nest.68, i8* readonly %key1, i8* readonly %key2) #0 !dbg !486 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !487, metadata !DIExpression()), !dbg !488
  call void @llvm.dbg.value(metadata i8* %key2, metadata !489, metadata !DIExpression()), !dbg !488
  call void @llvm.dbg.value(metadata i8 0, metadata !490, metadata !DIExpression()), !dbg !488
  %icmp.336 = icmp eq i8* %key1, null, !dbg !488
  br i1 %icmp.336, label %then.315, label %else.315

then.315:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !488
  unreachable

else.315:                                         ; preds = %entry
  %icmp.337 = icmp eq i8* %key2, null, !dbg !488
  br i1 %icmp.337, label %then.316, label %else.316

then.316:                                         ; preds = %else.315
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !488
  unreachable

else.316:                                         ; preds = %else.315
  %field0.174 = bitcast i8* %key1 to i64*, !dbg !488
  %ld.329 = load i64, i64* %field0.174, align 8, !dbg !488
  %field1.174 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !488
  %0 = bitcast i8* %field1.174 to i64*, !dbg !488
  %ld.330 = load i64, i64* %0, align 8, !dbg !488
  %field0.175 = bitcast i8* %key2 to i64*, !dbg !488
  %ld.331 = load i64, i64* %field0.175, align 8, !dbg !488
  %field1.175 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !488
  %1 = bitcast i8* %field1.175 to i64*, !dbg !488
  %ld.332 = load i64, i64* %1, align 8, !dbg !488
  %call.228 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.329, i64 %ld.330, i64 %ld.331, i64 %ld.332), !dbg !488
  %icmp.338 = icmp eq i8 %call.228, 1, !dbg !488
  br i1 %icmp.338, label %else.319, label %then.317

then.317:                                         ; preds = %else.316
  call void @llvm.dbg.value(metadata i8 0, metadata !490, metadata !DIExpression()), !dbg !488
  ret i8 0, !dbg !488

else.319:                                         ; preds = %else.316
  %field.842 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !488
  %field.843 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !488
  %field0.176 = bitcast i8* %field.842 to i64*, !dbg !488
  %ld.333 = load i64, i64* %field0.176, align 8, !dbg !488
  %field1.176 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !488
  %2 = bitcast i8* %field1.176 to i64*, !dbg !488
  %ld.334 = load i64, i64* %2, align 8, !dbg !488
  %field0.177 = bitcast i8* %field.843 to i64*, !dbg !488
  %ld.335 = load i64, i64* %field0.177, align 8, !dbg !488
  %field1.177 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !488
  %3 = bitcast i8* %field1.177 to i64*, !dbg !488
  %ld.336 = load i64, i64* %3, align 8, !dbg !488
  %call.229 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.333, i64 %ld.334, i64 %ld.335, i64 %ld.336), !dbg !488
  %icmp.341 = icmp eq i8 %call.229, 1, !dbg !488
  %spec.select = zext i1 %icmp.341 to i8
  ret i8 %spec.select
}

define i64 @command_line_arguments.command_line_arguments.Config..hash(i8* nest nocapture readnone %nest.69, i8* %key, i64 %seed) #0 !dbg !491 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !492, metadata !DIExpression()), !dbg !493
  call void @llvm.dbg.value(metadata i64 %seed, metadata !494, metadata !DIExpression()), !dbg !493
  call void @llvm.dbg.value(metadata i64 0, metadata !495, metadata !DIExpression()), !dbg !493
  %call.230 = call i64 @command_line_arguments.command_line_arguments.Credentials..hash(i8* nest undef, i8* %key, i64 %seed), !dbg !493
  call void @llvm.dbg.value(metadata i64 %call.230, metadata !495, metadata !DIExpression()), !dbg !493
  ret i64 %call.230, !dbg !493
}

define i8 @command_line_arguments.command_line_arguments.Config..eq(i8* nest nocapture readnone %nest.70, i8* readonly %key1, i8* readonly %key2) #0 !dbg !496 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !497, metadata !DIExpression()), !dbg !498
  call void @llvm.dbg.value(metadata i8* %key2, metadata !499, metadata !DIExpression()), !dbg !498
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !498
  %icmp.342 = icmp eq i8* %key1, null, !dbg !498
  br i1 %icmp.342, label %then.321, label %else.321

then.321:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !498
  unreachable

else.321:                                         ; preds = %entry
  %icmp.343 = icmp eq i8* %key2, null, !dbg !498
  br i1 %icmp.343, label %then.322, label %else.322

then.322:                                         ; preds = %else.321
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !498
  unreachable

else.322:                                         ; preds = %else.321
  %tmpv.866.sroa.5.0.cast.3088.sroa_idx13 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !498
  %0 = bitcast i8* %tmpv.866.sroa.5.0.cast.3088.sroa_idx13 to i64*, !dbg !498
  %tmpv.866.sroa.5.0.copyload14 = load i64, i64* %0, align 8, !dbg !498
  %tmpv.866.sroa.4.0.cast.3088.sroa_idx11 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !498
  %tmpv.866.sroa.4.0.cast.3088.sroa_cast = bitcast i8* %tmpv.866.sroa.4.0.cast.3088.sroa_idx11 to i64*, !dbg !498
  %tmpv.866.sroa.4.0.copyload12 = load i64, i64* %tmpv.866.sroa.4.0.cast.3088.sroa_cast, align 8, !dbg !498
  %tmpv.866.sroa.3.0.cast.3088.sroa_idx9 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !498
  %1 = bitcast i8* %tmpv.866.sroa.3.0.cast.3088.sroa_idx9 to i64*, !dbg !498
  %tmpv.866.sroa.3.0.copyload10 = load i64, i64* %1, align 8, !dbg !498
  %tmpv.866.sroa.0.0.cast.3088.sroa_cast = bitcast i8* %key1 to i64*, !dbg !498
  %tmpv.866.sroa.0.0.copyload8 = load i64, i64* %tmpv.866.sroa.0.0.cast.3088.sroa_cast, align 8, !dbg !498
  %tmpv.867.sroa.0.0.cast.3091.sroa_cast = bitcast i8* %key2 to i64*, !dbg !498
  %tmpv.867.sroa.0.0.copyload1 = load i64, i64* %tmpv.867.sroa.0.0.cast.3091.sroa_cast, align 8, !dbg !498
  %tmpv.867.sroa.3.0.cast.3091.sroa_idx2 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !498
  %2 = bitcast i8* %tmpv.867.sroa.3.0.cast.3091.sroa_idx2 to i64*, !dbg !498
  %tmpv.867.sroa.3.0.copyload3 = load i64, i64* %2, align 8, !dbg !498
  %tmpv.867.sroa.4.0.cast.3091.sroa_idx4 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !498
  %tmpv.867.sroa.4.0.cast.3091.sroa_cast = bitcast i8* %tmpv.867.sroa.4.0.cast.3091.sroa_idx4 to i64*, !dbg !498
  %tmpv.867.sroa.4.0.copyload5 = load i64, i64* %tmpv.867.sroa.4.0.cast.3091.sroa_cast, align 8, !dbg !498
  %tmpv.867.sroa.5.0.cast.3091.sroa_idx6 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !498
  %3 = bitcast i8* %tmpv.867.sroa.5.0.cast.3091.sroa_idx6 to i64*, !dbg !498
  %tmpv.867.sroa.5.0.copyload7 = load i64, i64* %3, align 8, !dbg !498
  %call.231 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.866.sroa.0.0.copyload8, i64 %tmpv.866.sroa.3.0.copyload10, i64 %tmpv.867.sroa.0.0.copyload1, i64 %tmpv.867.sroa.3.0.copyload3), !dbg !498
  %icmp.344 = icmp eq i8 %call.231, 1, !dbg !498
  %call.232 = call i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.866.sroa.4.0.copyload12, i64 %tmpv.866.sroa.5.0.copyload14, i64 %tmpv.867.sroa.4.0.copyload5, i64 %tmpv.867.sroa.5.0.copyload7), !dbg !498
  %icmp.345 = icmp eq i8 %call.232, 1, !dbg !498
  %not.xor.14 = and i1 %icmp.344, %icmp.345
  %spec.select = zext i1 %not.xor.14 to i8
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !498
  ret i8 %spec.select, !dbg !498
}

define void @command_line_arguments.ConfigPath({ { i8*, i64 }*, %error.0 }* nocapture sret %sret.formal.1, i8* nest nocapture readnone %nest.3, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !501 {
entry:
  %sret.actual.13 = alloca { { i8*, i64 }, %error.0 }, align 8
  %tmpv.93 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !508, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !509
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !508, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !509
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !510, metadata !DIExpression()), !dbg !511
  call void @github_com_spolu_warp_vendor_github_com_mitchellh_go_homedir.Expand({ { i8*, i64 }, %error.0 }* nonnull sret %sret.actual.13, i8* nest undef, i64 ptrtoint ([20 x i8]* @const.98 to i64), i64 19), !dbg !512
  %tmpv.92.sroa.0.0.cast.352.sroa_cast = bitcast { { i8*, i64 }, %error.0 }* %sret.actual.13 to i8*, !dbg !512
  %tmpv.92.sroa.3.0.cast.352.sroa_idx20 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.13, i64 0, i32 1, !dbg !512
  %tmpv.92.sroa.3.0.cast.352.sroa_cast = bitcast %error.0* %tmpv.92.sroa.3.0.cast.352.sroa_idx20 to i64*, !dbg !512
  %tmpv.92.sroa.3.0.copyload21 = load i64, i64* %tmpv.92.sroa.3.0.cast.352.sroa_cast, align 8, !dbg !512
  %tmpv.92.sroa.4.0.cast.352.sroa_idx22 = getelementptr inbounds { { i8*, i64 }, %error.0 }, { { i8*, i64 }, %error.0 }* %sret.actual.13, i64 0, i32 1, i32 1, !dbg !512
  %tmpv.92.sroa.4.0.cast.352.sroa_cast = bitcast i8** %tmpv.92.sroa.4.0.cast.352.sroa_idx22 to i64*, !dbg !512
  %tmpv.92.sroa.4.0.copyload23 = load i64, i64* %tmpv.92.sroa.4.0.cast.352.sroa_cast, align 8, !dbg !512
  %tmpv.92.sroa.0.0.cast.353.sroa_cast = bitcast { i8*, i64 }* %tmpv.93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.92.sroa.0.0.cast.353.sroa_cast, i8* nonnull align 8 %tmpv.92.sroa.0.0.cast.352.sroa_cast, i64 16, i1 false)
  %call.19 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !514
  %runtime.writeBarrier.ld.7 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !512
  %icmp.62 = icmp eq i32 %runtime.writeBarrier.ld.7, 0, !dbg !512
  br i1 %icmp.62, label %then.42, label %else.42

then.42:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %call.19, metadata !515, metadata !DIExpression()), !dbg !516
  %icmp.61 = icmp eq i8* %call.19, null, !dbg !512
  br i1 %icmp.61, label %then.43, label %else.43

fallthrough.42:                                   ; preds = %else.42, %else.43
  call void @llvm.dbg.value(metadata i64 %tmpv.92.sroa.3.0.copyload21, metadata !517, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !516
  call void @llvm.dbg.value(metadata i64 %tmpv.92.sroa.4.0.copyload23, metadata !517, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !516
  %icmp.63 = icmp eq i64 %tmpv.92.sroa.3.0.copyload21, 0, !dbg !518
  br i1 %icmp.63, label %else.44, label %then.44

else.42:                                          ; preds = %entry
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.19, i8* nonnull %tmpv.92.sroa.0.0.cast.353.sroa_cast), !dbg !512
  br label %fallthrough.42

then.43:                                          ; preds = %then.42
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !512
  unreachable

else.43:                                          ; preds = %then.42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.19, i8* nonnull align 8 %tmpv.92.sroa.0.0.cast.353.sroa_cast, i64 16, i1 false), !dbg !512
  br label %fallthrough.42

then.44:                                          ; preds = %fallthrough.42
  %call.20 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.92.sroa.3.0.copyload21, i64 %tmpv.92.sroa.4.0.copyload23), !dbg !519
  %call.20.fca.0.extract = extractvalue { i64, i64 } %call.20, 0, !dbg !519
  %call.20.fca.1.extract = extractvalue { i64, i64 } %call.20, 1, !dbg !519
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !510, metadata !DIExpression()), !dbg !511
  call void @llvm.dbg.value(metadata i64 %call.20.fca.0.extract, metadata !520, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !521
  call void @llvm.dbg.value(metadata i64 %call.20.fca.1.extract, metadata !520, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !521
  %tmp.4.sroa.0.0.cast.374.sroa_idx = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.formal.1, i64 0, i32 0, !dbg !522
  store { i8*, i64 }* null, { i8*, i64 }** %tmp.4.sroa.0.0.cast.374.sroa_idx, align 8, !dbg !522
  %tmp.4.sroa.2.0.cast.374.sroa_idx48 = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !522
  %tmp.4.sroa.2.0.cast.374.sroa_cast = bitcast %error.0* %tmp.4.sroa.2.0.cast.374.sroa_idx48 to i64*, !dbg !522
  store i64 %call.20.fca.0.extract, i64* %tmp.4.sroa.2.0.cast.374.sroa_cast, align 8, !dbg !522
  %tmp.4.sroa.3.0.cast.374.sroa_idx49 = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.formal.1, i64 0, i32 1, i32 1, !dbg !522
  %tmp.4.sroa.3.0.cast.374.sroa_cast = bitcast i8** %tmp.4.sroa.3.0.cast.374.sroa_idx49 to i64*, !dbg !522
  store i64 %call.20.fca.1.extract, i64* %tmp.4.sroa.3.0.cast.374.sroa_cast, align 8, !dbg !522
  ret void, !dbg !522

else.44:                                          ; preds = %fallthrough.42
  %field0.14 = bitcast i8* %call.19 to i64*, !dbg !523
  %ld.31 = load i64, i64* %field0.14, align 8, !dbg !523
  %field1.14 = getelementptr inbounds i8, i8* %call.19, i64 8, !dbg !523
  %0 = bitcast i8* %field1.14 to i64*, !dbg !523
  %ld.32 = load i64, i64* %0, align 8, !dbg !523
  %call.21 = call { i64, i64 } @path_filepath.Dir(i8* nest undef, i64 %ld.31, i64 %ld.32), !dbg !523
  %call.21.fca.0.extract = extractvalue { i64, i64 } %call.21, 0, !dbg !523
  %call.21.fca.1.extract = extractvalue { i64, i64 } %call.21, 1, !dbg !523
  %call.22 = call { i64, i64 } @os.MkdirAll(i8* nest undef, i64 %call.21.fca.0.extract, i64 %call.21.fca.1.extract, i32 511), !dbg !524
  %call.22.fca.0.extract = extractvalue { i64, i64 } %call.22, 0, !dbg !524
  call void @llvm.dbg.value(metadata i64 %call.22.fca.0.extract, metadata !517, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !516
  %icmp.64 = icmp eq i64 %call.22.fca.0.extract, 0, !dbg !525
  br i1 %icmp.64, label %else.45, label %then.45

then.45:                                          ; preds = %else.44
  %call.22.fca.1.extract = extractvalue { i64, i64 } %call.22, 1, !dbg !524
  call void @llvm.dbg.value(metadata i64 %call.22.fca.1.extract, metadata !517, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !516
  %call.23 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.22.fca.0.extract, i64 %call.22.fca.1.extract), !dbg !526
  %call.23.fca.0.extract = extractvalue { i64, i64 } %call.23, 0, !dbg !526
  %call.23.fca.1.extract = extractvalue { i64, i64 } %call.23, 1, !dbg !526
  call void @llvm.dbg.value(metadata { i8*, i64 }* null, metadata !510, metadata !DIExpression()), !dbg !511
  call void @llvm.dbg.value(metadata i64 %call.23.fca.0.extract, metadata !520, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !521
  call void @llvm.dbg.value(metadata i64 %call.23.fca.1.extract, metadata !520, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !521
  %tmp.5.sroa.0.0.cast.396.sroa_idx = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.formal.1, i64 0, i32 0, !dbg !527
  store { i8*, i64 }* null, { i8*, i64 }** %tmp.5.sroa.0.0.cast.396.sroa_idx, align 8, !dbg !527
  %tmp.5.sroa.2.0.cast.396.sroa_idx50 = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !527
  %tmp.5.sroa.2.0.cast.396.sroa_cast = bitcast %error.0* %tmp.5.sroa.2.0.cast.396.sroa_idx50 to i64*, !dbg !527
  store i64 %call.23.fca.0.extract, i64* %tmp.5.sroa.2.0.cast.396.sroa_cast, align 8, !dbg !527
  %tmp.5.sroa.3.0.cast.396.sroa_idx51 = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.formal.1, i64 0, i32 1, i32 1, !dbg !527
  %tmp.5.sroa.3.0.cast.396.sroa_cast = bitcast i8** %tmp.5.sroa.3.0.cast.396.sroa_idx51 to i64*, !dbg !527
  store i64 %call.23.fca.1.extract, i64* %tmp.5.sroa.3.0.cast.396.sroa_cast, align 8, !dbg !527
  ret void, !dbg !527

else.45:                                          ; preds = %else.44
  call void @llvm.dbg.value(metadata i8* %call.19, metadata !510, metadata !DIExpression()), !dbg !511
  call void @llvm.dbg.value(metadata i64 0, metadata !520, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !521
  call void @llvm.dbg.value(metadata i64 0, metadata !520, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !521
  %1 = bitcast { { i8*, i64 }*, %error.0 }* %sret.formal.1 to i8**, !dbg !528
  store i8* %call.19, i8** %1, align 8, !dbg !528
  %tmp.6.sroa.2.0.cast.405.sroa_idx52 = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.formal.1, i64 0, i32 1, !dbg !528
  %2 = bitcast %error.0* %tmp.6.sroa.2.0.cast.405.sroa_idx52 to i8*, !dbg !528
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !528
  ret void, !dbg !528
}

declare void @github_com_spolu_warp_vendor_github_com_mitchellh_go_homedir.Expand({ { i8*, i64 }, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @path_filepath.Dir(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @os.MkdirAll(i8*, i64, i64, i32) local_unnamed_addr #0

define void @command_line_arguments.RetrieveConfig({ %Config.0*, %error.0 }* nocapture sret %sret.formal.2, i8* nest nocapture readnone %nest.4, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !529 {
entry:
  %raw = alloca { i8*, i64, i64 }, align 8
  %sret.actual.18 = alloca { { i8*, i64 }*, %error.0 }, align 8
  %sret.actual.20 = alloca { %FileInfo.0, %error.0 }, align 8
  %sret.actual.21 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !544, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !545
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !544, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !545
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !546, metadata !DIExpression()), !dbg !547
  %0 = bitcast { i8*, i64, i64 }* %raw to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  call void @command_line_arguments.ConfigPath({ { i8*, i64 }*, %error.0 }* nonnull sret %sret.actual.18, i8* nest undef, i64 undef, i64 undef), !dbg !548
  %tmpv.106.sroa.0.0.cast.414.sroa_idx = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.actual.18, i64 0, i32 0, !dbg !548
  %tmpv.106.sroa.0.0.copyload25 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.106.sroa.0.0.cast.414.sroa_idx, align 8, !dbg !548
  %tmpv.106.sroa.3.sroa.0.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_idx = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.actual.18, i64 0, i32 1, !dbg !548
  %tmpv.106.sroa.3.sroa.0.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.106.sroa.3.sroa.0.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_idx to i64*, !dbg !548
  %tmpv.106.sroa.3.sroa.0.0.copyload49 = load i64, i64* %tmpv.106.sroa.3.sroa.0.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_cast, align 8, !dbg !548
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.106.sroa.0.0.copyload25, metadata !550, metadata !DIExpression()), !dbg !551
  call void @llvm.dbg.value(metadata i64 %tmpv.106.sroa.3.sroa.0.0.copyload49, metadata !552, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !551
  %icmp.65 = icmp eq i64 %tmpv.106.sroa.3.sroa.0.0.copyload49, 0, !dbg !553
  br i1 %icmp.65, label %else.46, label %then.46

then.46:                                          ; preds = %entry
  %tmpv.106.sroa.3.sroa.3.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_idx50 = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.actual.18, i64 0, i32 1, i32 1, !dbg !548
  %tmpv.106.sroa.3.sroa.3.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_cast = bitcast i8** %tmpv.106.sroa.3.sroa.3.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_idx50 to i64*, !dbg !548
  %tmpv.106.sroa.3.sroa.3.0.copyload51 = load i64, i64* %tmpv.106.sroa.3.sroa.3.0.tmpv.106.sroa.3.0.cast.414.sroa_cast.sroa_cast, align 8, !dbg !548
  call void @llvm.dbg.value(metadata i64 %tmpv.106.sroa.3.sroa.3.0.copyload51, metadata !552, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !551
  %call.24 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.106.sroa.3.sroa.0.0.copyload49, i64 %tmpv.106.sroa.3.sroa.3.0.copyload51), !dbg !554
  %call.24.fca.0.extract = extractvalue { i64, i64 } %call.24, 0, !dbg !554
  %call.24.fca.1.extract = extractvalue { i64, i64 } %call.24, 1, !dbg !554
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !546, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i64 %call.24.fca.0.extract, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !556
  call void @llvm.dbg.value(metadata i64 %call.24.fca.1.extract, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !556
  %tmp.7.sroa.0.0.cast.428.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !557
  store %Config.0* null, %Config.0** %tmp.7.sroa.0.0.cast.428.sroa_idx, align 8, !dbg !557
  %tmp.7.sroa.2.0.cast.428.sroa_idx100 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !557
  %tmp.7.sroa.2.0.cast.428.sroa_cast = bitcast %error.0* %tmp.7.sroa.2.0.cast.428.sroa_idx100 to i64*, !dbg !557
  store i64 %call.24.fca.0.extract, i64* %tmp.7.sroa.2.0.cast.428.sroa_cast, align 8, !dbg !557
  %tmp.7.sroa.3.0.cast.428.sroa_idx101 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !557
  %tmp.7.sroa.3.0.cast.428.sroa_cast = bitcast i8** %tmp.7.sroa.3.0.cast.428.sroa_idx101 to i64*, !dbg !557
  store i64 %call.24.fca.1.extract, i64* %tmp.7.sroa.3.0.cast.428.sroa_cast, align 8, !dbg !557
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !557
  ret void, !dbg !557

else.46:                                          ; preds = %entry
  %icmp.66 = icmp eq { i8*, i64 }* %tmpv.106.sroa.0.0.copyload25, null, !dbg !558
  br i1 %icmp.66, label %then.47, label %else.47

then.47:                                          ; preds = %else.46
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !558
  unreachable

else.47:                                          ; preds = %else.46
  %field0.20 = bitcast { i8*, i64 }* %tmpv.106.sroa.0.0.copyload25 to i64*, !dbg !560
  %ld.41 = load i64, i64* %field0.20, align 8, !dbg !560
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.106.sroa.0.0.copyload25, i64 0, i32 1, !dbg !560
  %ld.42 = load i64, i64* %1, align 8, !dbg !560
  call void @os.Stat({ %FileInfo.0, %error.0 }* nonnull sret %sret.actual.20, i8* nest undef, i64 %ld.41, i64 %ld.42), !dbg !560
  %tmpv.111.sroa.3.0.cast.436.sroa_idx17 = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.20, i64 0, i32 1, !dbg !560
  %tmpv.111.sroa.3.0.cast.436.sroa_cast = bitcast %error.0* %tmpv.111.sroa.3.0.cast.436.sroa_idx17 to i64*, !dbg !560
  %tmpv.111.sroa.3.0.copyload18 = load i64, i64* %tmpv.111.sroa.3.0.cast.436.sroa_cast, align 8, !dbg !560
  %tmpv.111.sroa.4.0.cast.436.sroa_idx19 = getelementptr inbounds { %FileInfo.0, %error.0 }, { %FileInfo.0, %error.0 }* %sret.actual.20, i64 0, i32 1, i32 1, !dbg !560
  %tmpv.111.sroa.4.0.cast.436.sroa_cast = bitcast i8** %tmpv.111.sroa.4.0.cast.436.sroa_idx19 to i64*, !dbg !560
  %tmpv.111.sroa.4.0.copyload20 = load i64, i64* %tmpv.111.sroa.4.0.cast.436.sroa_cast, align 8, !dbg !560
  call void @llvm.dbg.value(metadata i64 %tmpv.111.sroa.3.0.copyload18, metadata !561, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !562
  call void @llvm.dbg.value(metadata i64 %tmpv.111.sroa.4.0.copyload20, metadata !561, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !562
  %call.25 = call i8 @os.IsNotExist(i8* nest undef, i64 %tmpv.111.sroa.3.0.copyload18, i64 %tmpv.111.sroa.4.0.copyload20), !dbg !563
  %2 = and i8 %call.25, 1, !dbg !564
  %trunc.52 = icmp eq i8 %2, 0, !dbg !564
  br i1 %trunc.52, label %else.48, label %then.48

then.48:                                          ; preds = %else.47
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !546, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i64 0, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !556
  call void @llvm.dbg.value(metadata i64 0, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !556
  %3 = bitcast { %Config.0*, %error.0 }* %sret.formal.2 to i8*, !dbg !565
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false), !dbg !565
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !565
  ret void, !dbg !565

else.48:                                          ; preds = %else.47
  %ld.45 = load i64, i64* %field0.20, align 8, !dbg !566
  %ld.46 = load i64, i64* %1, align 8, !dbg !566
  call void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.21, i8* nest undef, i64 %ld.45, i64 %ld.46), !dbg !566
  %tmpv.117.sroa.0.0.cast.460.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.21 to i8*, !dbg !566
  %tmpv.117.sroa.3.0.cast.460.sroa_idx55 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.21, i64 0, i32 1, !dbg !566
  %tmpv.117.sroa.3.0.cast.460.sroa_cast = bitcast %error.0* %tmpv.117.sroa.3.0.cast.460.sroa_idx55 to i64*, !dbg !566
  %tmpv.117.sroa.3.0.copyload56 = load i64, i64* %tmpv.117.sroa.3.0.cast.460.sroa_cast, align 8, !dbg !566
  %tmpv.117.sroa.4.0.cast.460.sroa_idx57 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.21, i64 0, i32 1, i32 1, !dbg !566
  %tmpv.117.sroa.4.0.cast.460.sroa_cast = bitcast i8** %tmpv.117.sroa.4.0.cast.460.sroa_idx57 to i64*, !dbg !566
  %tmpv.117.sroa.4.0.copyload58 = load i64, i64* %tmpv.117.sroa.4.0.cast.460.sroa_cast, align 8, !dbg !566
  %raw110 = bitcast { i8*, i64, i64 }* %raw to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %raw110, i8* nonnull align 8 %tmpv.117.sroa.0.0.cast.460.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.117.sroa.3.0.copyload56, metadata !552, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !551
  call void @llvm.dbg.value(metadata i64 %tmpv.117.sroa.4.0.copyload58, metadata !552, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !551
  %icmp.68 = icmp eq i64 %tmpv.117.sroa.3.0.copyload56, 0, !dbg !567
  br i1 %icmp.68, label %else.50, label %then.50

then.50:                                          ; preds = %else.48
  %call.26 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.117.sroa.3.0.copyload56, i64 %tmpv.117.sroa.4.0.copyload58), !dbg !568
  %call.26.fca.0.extract = extractvalue { i64, i64 } %call.26, 0, !dbg !568
  %call.26.fca.1.extract = extractvalue { i64, i64 } %call.26, 1, !dbg !568
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !546, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i64 %call.26.fca.0.extract, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !556
  call void @llvm.dbg.value(metadata i64 %call.26.fca.1.extract, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !556
  %tmp.9.sroa.0.0.cast.478.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !569
  store %Config.0* null, %Config.0** %tmp.9.sroa.0.0.cast.478.sroa_idx, align 8, !dbg !569
  %tmp.9.sroa.2.0.cast.478.sroa_idx104 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !569
  %tmp.9.sroa.2.0.cast.478.sroa_cast = bitcast %error.0* %tmp.9.sroa.2.0.cast.478.sroa_idx104 to i64*, !dbg !569
  store i64 %call.26.fca.0.extract, i64* %tmp.9.sroa.2.0.cast.478.sroa_cast, align 8, !dbg !569
  %tmp.9.sroa.3.0.cast.478.sroa_idx105 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !569
  %tmp.9.sroa.3.0.cast.478.sroa_cast = bitcast i8** %tmp.9.sroa.3.0.cast.478.sroa_idx105 to i64*, !dbg !569
  store i64 %call.26.fca.1.extract, i64* %tmp.9.sroa.3.0.cast.478.sroa_cast, align 8, !dbg !569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !569
  ret void, !dbg !569

else.50:                                          ; preds = %else.48
  %call.27 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Config..d, i64 0, i32 0)), !dbg !570
  %4 = ptrtoint i8* %call.27 to i64, !dbg !571
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %raw, metadata !572, metadata !DIExpression(DW_OP_deref)), !dbg !573
  %call.28 = call { i64, i64 } @encoding_json.Unmarshal(i8* nest undef, { i8*, i64, i64 }* byval nonnull %raw, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.Config to i64), i64 %4), !dbg !574
  %call.28.fca.0.extract = extractvalue { i64, i64 } %call.28, 0, !dbg !574
  call void @llvm.dbg.value(metadata i64 %call.28.fca.0.extract, metadata !552, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !551
  %icmp.69 = icmp eq i64 %call.28.fca.0.extract, 0, !dbg !575
  br i1 %icmp.69, label %else.51, label %then.51

then.51:                                          ; preds = %else.50
  %call.28.fca.1.extract = extractvalue { i64, i64 } %call.28, 1, !dbg !574
  call void @llvm.dbg.value(metadata i64 %call.28.fca.1.extract, metadata !552, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !551
  %call.29 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.28.fca.0.extract, i64 %call.28.fca.1.extract), !dbg !576
  %call.29.fca.0.extract = extractvalue { i64, i64 } %call.29, 0, !dbg !576
  %call.29.fca.1.extract = extractvalue { i64, i64 } %call.29, 1, !dbg !576
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !546, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i64 %call.29.fca.0.extract, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !556
  call void @llvm.dbg.value(metadata i64 %call.29.fca.1.extract, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !556
  %tmp.11.sroa.0.0.cast.500.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 0, !dbg !577
  store %Config.0* null, %Config.0** %tmp.11.sroa.0.0.cast.500.sroa_idx, align 8, !dbg !577
  %tmp.11.sroa.2.0.cast.500.sroa_idx106 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !577
  %tmp.11.sroa.2.0.cast.500.sroa_cast = bitcast %error.0* %tmp.11.sroa.2.0.cast.500.sroa_idx106 to i64*, !dbg !577
  store i64 %call.29.fca.0.extract, i64* %tmp.11.sroa.2.0.cast.500.sroa_cast, align 8, !dbg !577
  %tmp.11.sroa.3.0.cast.500.sroa_idx107 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, i32 1, !dbg !577
  %tmp.11.sroa.3.0.cast.500.sroa_cast = bitcast i8** %tmp.11.sroa.3.0.cast.500.sroa_idx107 to i64*, !dbg !577
  store i64 %call.29.fca.1.extract, i64* %tmp.11.sroa.3.0.cast.500.sroa_cast, align 8, !dbg !577
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !577
  ret void, !dbg !577

else.51:                                          ; preds = %else.50
  call void @llvm.dbg.value(metadata i8* %call.27, metadata !578, metadata !DIExpression()), !dbg !579
  call void @llvm.dbg.value(metadata i8* %call.27, metadata !546, metadata !DIExpression()), !dbg !547
  call void @llvm.dbg.value(metadata i64 0, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !556
  call void @llvm.dbg.value(metadata i64 0, metadata !555, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !556
  %5 = bitcast { %Config.0*, %error.0 }* %sret.formal.2 to i8**, !dbg !580
  store i8* %call.27, i8** %5, align 8, !dbg !580
  %tmp.12.sroa.2.0.cast.509.sroa_idx108 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.2, i64 0, i32 1, !dbg !580
  %6 = bitcast %error.0* %tmp.12.sroa.2.0.cast.509.sroa_idx108 to i8*, !dbg !580
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false), !dbg !580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !580
  ret void, !dbg !580
}

declare void @os.Stat({ %FileInfo.0, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare i8 @os.IsNotExist(i8*, i64, i64) local_unnamed_addr #0

declare void @io_ioutil.ReadFile({ { i8*, i64, i64 }, %error.0 }*, i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @encoding_json.Unmarshal(i8*, { i8*, i64, i64 }*, i64, i64) local_unnamed_addr #0

define void @command_line_arguments.GenerateConfig({ %Config.0*, %error.0 }* nocapture sret %sret.formal.3, i8* nest nocapture readnone %nest.5, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !581 {
entry:
  %formatted = alloca { i8*, i64, i64 }, align 8
  %tmpv.134 = alloca %Config.0, align 8
  %sret.actual.27 = alloca { { i8*, i64 }*, %error.0 }, align 8
  %sret.actual.29 = alloca { { i8*, i64, i64 }, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !582, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !583
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !582, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !583
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !584, metadata !DIExpression()), !dbg !585
  %0 = bitcast { i8*, i64, i64 }* %formatted to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0)
  %call.30 = call { i64, i64 } @github_com_spolu_warp_lib_token.New(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.103 to i64), i64 5), !dbg !586
  %call.30.fca.0.extract = extractvalue { i64, i64 } %call.30, 0, !dbg !586
  %call.30.fca.1.extract = extractvalue { i64, i64 } %call.30, 1, !dbg !586
  %call.31 = call { i64, i64 } @github_com_spolu_warp_lib_token.RandStr(i8* nest undef), !dbg !588
  %call.31.fca.0.extract = extractvalue { i64, i64 } %call.31, 0, !dbg !588
  %call.31.fca.1.extract = extractvalue { i64, i64 } %call.31, 1, !dbg !588
  %call.32 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Config..d, i64 0, i32 0)), !dbg !589
  %tmpv.132.sroa.0.sroa.0.0.tmpv.132.sroa.0.0.cast.527.sroa_cast.sroa_cast = bitcast %Config.0* %tmpv.134 to i64*, !dbg !590
  store i64 %call.30.fca.0.extract, i64* %tmpv.132.sroa.0.sroa.0.0.tmpv.132.sroa.0.0.cast.527.sroa_cast.sroa_cast, align 8, !dbg !590
  %tmpv.132.sroa.0.sroa.2.0.tmpv.132.sroa.0.0.cast.527.sroa_cast.sroa_idx19 = getelementptr inbounds %Config.0, %Config.0* %tmpv.134, i64 0, i32 0, i32 0, i32 1, !dbg !590
  store i64 %call.30.fca.1.extract, i64* %tmpv.132.sroa.0.sroa.2.0.tmpv.132.sroa.0.0.cast.527.sroa_cast.sroa_idx19, align 8, !dbg !590
  %tmpv.132.sroa.2.0.cast.527.sroa_idx15 = getelementptr inbounds %Config.0, %Config.0* %tmpv.134, i64 0, i32 0, i32 1, !dbg !590
  %tmpv.132.sroa.2.0.cast.527.sroa_cast = bitcast { i8*, i64 }* %tmpv.132.sroa.2.0.cast.527.sroa_idx15 to i64*, !dbg !590
  store i64 %call.31.fca.0.extract, i64* %tmpv.132.sroa.2.0.cast.527.sroa_cast, align 8, !dbg !590
  %tmpv.132.sroa.3.0.cast.527.sroa_idx16 = getelementptr inbounds %Config.0, %Config.0* %tmpv.134, i64 0, i32 0, i32 1, i32 1, !dbg !590
  store i64 %call.31.fca.1.extract, i64* %tmpv.132.sroa.3.0.cast.527.sroa_idx16, align 8, !dbg !590
  %cast.531 = bitcast %Config.0* %tmpv.134 to i8*, !dbg !589
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Config..d, i64 0, i32 0), i8* %call.32, i8* nonnull %cast.531), !dbg !589
  call void @llvm.dbg.value(metadata i8* %call.32, metadata !591, metadata !DIExpression()), !dbg !592
  call void @command_line_arguments.ConfigPath({ { i8*, i64 }*, %error.0 }* nonnull sret %sret.actual.27, i8* nest undef, i64 undef, i64 undef), !dbg !593
  %tmpv.135.sroa.0.0.cast.536.sroa_idx = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.actual.27, i64 0, i32 0, !dbg !593
  %tmpv.135.sroa.0.0.copyload10 = load { i8*, i64 }*, { i8*, i64 }** %tmpv.135.sroa.0.0.cast.536.sroa_idx, align 8, !dbg !593
  %tmpv.135.sroa.3.sroa.0.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_idx = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.actual.27, i64 0, i32 1, !dbg !593
  %tmpv.135.sroa.3.sroa.0.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.135.sroa.3.sroa.0.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_idx to i64*, !dbg !593
  %tmpv.135.sroa.3.sroa.0.0.copyload35 = load i64, i64* %tmpv.135.sroa.3.sroa.0.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_cast, align 8, !dbg !593
  call void @llvm.dbg.value(metadata { i8*, i64 }* %tmpv.135.sroa.0.0.copyload10, metadata !594, metadata !DIExpression()), !dbg !595
  call void @llvm.dbg.value(metadata i64 %tmpv.135.sroa.3.sroa.0.0.copyload35, metadata !596, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !595
  %icmp.70 = icmp eq i64 %tmpv.135.sroa.3.sroa.0.0.copyload35, 0, !dbg !597
  br i1 %icmp.70, label %else.52, label %then.52

then.52:                                          ; preds = %entry
  %tmpv.135.sroa.3.sroa.3.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_idx36 = getelementptr inbounds { { i8*, i64 }*, %error.0 }, { { i8*, i64 }*, %error.0 }* %sret.actual.27, i64 0, i32 1, i32 1, !dbg !593
  %tmpv.135.sroa.3.sroa.3.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_cast = bitcast i8** %tmpv.135.sroa.3.sroa.3.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_idx36 to i64*, !dbg !593
  %tmpv.135.sroa.3.sroa.3.0.copyload37 = load i64, i64* %tmpv.135.sroa.3.sroa.3.0.tmpv.135.sroa.3.0.cast.536.sroa_cast.sroa_cast, align 8, !dbg !593
  call void @llvm.dbg.value(metadata i64 %tmpv.135.sroa.3.sroa.3.0.copyload37, metadata !596, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !595
  %call.33 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.135.sroa.3.sroa.0.0.copyload35, i64 %tmpv.135.sroa.3.sroa.3.0.copyload37), !dbg !598
  %call.33.fca.0.extract = extractvalue { i64, i64 } %call.33, 0, !dbg !598
  %call.33.fca.1.extract = extractvalue { i64, i64 } %call.33, 1, !dbg !598
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !584, metadata !DIExpression()), !dbg !585
  call void @llvm.dbg.value(metadata i64 %call.33.fca.0.extract, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !600
  call void @llvm.dbg.value(metadata i64 %call.33.fca.1.extract, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !600
  %tmp.13.sroa.0.0.cast.550.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 0, !dbg !601
  store %Config.0* null, %Config.0** %tmp.13.sroa.0.0.cast.550.sroa_idx, align 8, !dbg !601
  %tmp.13.sroa.2.0.cast.550.sroa_idx80 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, !dbg !601
  %tmp.13.sroa.2.0.cast.550.sroa_cast = bitcast %error.0* %tmp.13.sroa.2.0.cast.550.sroa_idx80 to i64*, !dbg !601
  store i64 %call.33.fca.0.extract, i64* %tmp.13.sroa.2.0.cast.550.sroa_cast, align 8, !dbg !601
  %tmp.13.sroa.3.0.cast.550.sroa_idx81 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 1, !dbg !601
  %tmp.13.sroa.3.0.cast.550.sroa_cast = bitcast i8** %tmp.13.sroa.3.0.cast.550.sroa_idx81 to i64*, !dbg !601
  store i64 %call.33.fca.1.extract, i64* %tmp.13.sroa.3.0.cast.550.sroa_cast, align 8, !dbg !601
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !601
  ret void, !dbg !601

else.52:                                          ; preds = %entry
  %1 = ptrtoint i8* %call.32 to i64, !dbg !602
  call void @encoding_json.MarshalIndent({ { i8*, i64, i64 }, %error.0 }* nonnull sret %sret.actual.29, i8* nest undef, i64 ptrtoint (%PtrType.0* @type...1command_line_arguments.Config to i64), i64 %1, i64 0, i64 0, { i8*, i64 }* byval nonnull @const.106), !dbg !603
  %tmpv.140.sroa.0.0.cast.560.sroa_cast = bitcast { { i8*, i64, i64 }, %error.0 }* %sret.actual.29 to i8*, !dbg !603
  %tmpv.140.sroa.3.0.cast.560.sroa_idx41 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.29, i64 0, i32 1, !dbg !603
  %tmpv.140.sroa.3.0.cast.560.sroa_cast = bitcast %error.0* %tmpv.140.sroa.3.0.cast.560.sroa_idx41 to i64*, !dbg !603
  %tmpv.140.sroa.3.0.copyload42 = load i64, i64* %tmpv.140.sroa.3.0.cast.560.sroa_cast, align 8, !dbg !603
  %tmpv.140.sroa.4.0.cast.560.sroa_idx43 = getelementptr inbounds { { i8*, i64, i64 }, %error.0 }, { { i8*, i64, i64 }, %error.0 }* %sret.actual.29, i64 0, i32 1, i32 1, !dbg !603
  %tmpv.140.sroa.4.0.cast.560.sroa_cast = bitcast i8** %tmpv.140.sroa.4.0.cast.560.sroa_idx43 to i64*, !dbg !603
  %tmpv.140.sroa.4.0.copyload44 = load i64, i64* %tmpv.140.sroa.4.0.cast.560.sroa_cast, align 8, !dbg !603
  %formatted88 = bitcast { i8*, i64, i64 }* %formatted to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %formatted88, i8* nonnull align 8 %tmpv.140.sroa.0.0.cast.560.sroa_cast, i64 24, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.140.sroa.3.0.copyload42, metadata !596, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !595
  call void @llvm.dbg.value(metadata i64 %tmpv.140.sroa.4.0.copyload44, metadata !596, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !595
  %icmp.71 = icmp eq i64 %tmpv.140.sroa.3.0.copyload42, 0, !dbg !604
  br i1 %icmp.71, label %else.53, label %then.53

then.53:                                          ; preds = %else.52
  %call.34 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.140.sroa.3.0.copyload42, i64 %tmpv.140.sroa.4.0.copyload44), !dbg !605
  %call.34.fca.0.extract = extractvalue { i64, i64 } %call.34, 0, !dbg !605
  %call.34.fca.1.extract = extractvalue { i64, i64 } %call.34, 1, !dbg !605
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !584, metadata !DIExpression()), !dbg !585
  call void @llvm.dbg.value(metadata i64 %call.34.fca.0.extract, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !600
  call void @llvm.dbg.value(metadata i64 %call.34.fca.1.extract, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !600
  %tmp.15.sroa.0.0.cast.578.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 0, !dbg !606
  store %Config.0* null, %Config.0** %tmp.15.sroa.0.0.cast.578.sroa_idx, align 8, !dbg !606
  %tmp.15.sroa.2.0.cast.578.sroa_idx82 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, !dbg !606
  %tmp.15.sroa.2.0.cast.578.sroa_cast = bitcast %error.0* %tmp.15.sroa.2.0.cast.578.sroa_idx82 to i64*, !dbg !606
  store i64 %call.34.fca.0.extract, i64* %tmp.15.sroa.2.0.cast.578.sroa_cast, align 8, !dbg !606
  %tmp.15.sroa.3.0.cast.578.sroa_idx83 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 1, !dbg !606
  %tmp.15.sroa.3.0.cast.578.sroa_cast = bitcast i8** %tmp.15.sroa.3.0.cast.578.sroa_idx83 to i64*, !dbg !606
  store i64 %call.34.fca.1.extract, i64* %tmp.15.sroa.3.0.cast.578.sroa_cast, align 8, !dbg !606
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !606
  ret void, !dbg !606

else.53:                                          ; preds = %else.52
  %icmp.72 = icmp eq { i8*, i64 }* %tmpv.135.sroa.0.0.copyload10, null, !dbg !607
  br i1 %icmp.72, label %then.54, label %else.54

then.54:                                          ; preds = %else.53
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !607
  unreachable

else.54:                                          ; preds = %else.53
  %field0.33 = bitcast { i8*, i64 }* %tmpv.135.sroa.0.0.copyload10 to i64*, !dbg !608
  %ld.65 = load i64, i64* %field0.33, align 8, !dbg !608
  %2 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.135.sroa.0.0.copyload10, i64 0, i32 1, !dbg !608
  %ld.66 = load i64, i64* %2, align 8, !dbg !608
  call void @llvm.dbg.value(metadata { i8*, i64, i64 }* %formatted, metadata !609, metadata !DIExpression(DW_OP_deref)), !dbg !610
  %call.35 = call { i64, i64 } @io_ioutil.WriteFile(i8* nest undef, i64 %ld.65, i64 %ld.66, { i8*, i64, i64 }* byval nonnull %formatted, i32 420), !dbg !608
  %call.35.fca.0.extract = extractvalue { i64, i64 } %call.35, 0, !dbg !608
  call void @llvm.dbg.value(metadata i64 %call.35.fca.0.extract, metadata !596, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !595
  %icmp.73 = icmp eq i64 %call.35.fca.0.extract, 0, !dbg !611
  br i1 %icmp.73, label %else.55, label %then.55

then.55:                                          ; preds = %else.54
  %call.35.fca.1.extract = extractvalue { i64, i64 } %call.35, 1, !dbg !608
  call void @llvm.dbg.value(metadata i64 %call.35.fca.1.extract, metadata !596, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !595
  %call.36 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.35.fca.0.extract, i64 %call.35.fca.1.extract), !dbg !612
  %call.36.fca.0.extract = extractvalue { i64, i64 } %call.36, 0, !dbg !612
  %call.36.fca.1.extract = extractvalue { i64, i64 } %call.36, 1, !dbg !612
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !584, metadata !DIExpression()), !dbg !585
  call void @llvm.dbg.value(metadata i64 %call.36.fca.0.extract, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !600
  call void @llvm.dbg.value(metadata i64 %call.36.fca.1.extract, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !600
  %tmp.16.sroa.0.0.cast.597.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 0, !dbg !613
  store %Config.0* null, %Config.0** %tmp.16.sroa.0.0.cast.597.sroa_idx, align 8, !dbg !613
  %tmp.16.sroa.2.0.cast.597.sroa_idx84 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, !dbg !613
  %tmp.16.sroa.2.0.cast.597.sroa_cast = bitcast %error.0* %tmp.16.sroa.2.0.cast.597.sroa_idx84 to i64*, !dbg !613
  store i64 %call.36.fca.0.extract, i64* %tmp.16.sroa.2.0.cast.597.sroa_cast, align 8, !dbg !613
  %tmp.16.sroa.3.0.cast.597.sroa_idx85 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, i32 1, !dbg !613
  %tmp.16.sroa.3.0.cast.597.sroa_cast = bitcast i8** %tmp.16.sroa.3.0.cast.597.sroa_idx85 to i64*, !dbg !613
  store i64 %call.36.fca.1.extract, i64* %tmp.16.sroa.3.0.cast.597.sroa_cast, align 8, !dbg !613
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !613
  ret void, !dbg !613

else.55:                                          ; preds = %else.54
  call void @llvm.dbg.value(metadata i8* %call.32, metadata !584, metadata !DIExpression()), !dbg !585
  call void @llvm.dbg.value(metadata i64 0, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !600
  call void @llvm.dbg.value(metadata i64 0, metadata !599, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !600
  %3 = bitcast { %Config.0*, %error.0 }* %sret.formal.3 to i8**, !dbg !614
  store i8* %call.32, i8** %3, align 8, !dbg !614
  %tmp.17.sroa.2.0.cast.606.sroa_idx86 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.3, i64 0, i32 1, !dbg !614
  %4 = bitcast %error.0* %tmp.17.sroa.2.0.cast.606.sroa_idx86 to i8*, !dbg !614
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false), !dbg !614
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0), !dbg !614
  ret void, !dbg !614
}

declare { i64, i64 } @github_com_spolu_warp_lib_token.New(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @github_com_spolu_warp_lib_token.RandStr(i8*) local_unnamed_addr #0

declare void @encoding_json.MarshalIndent({ { i8*, i64, i64 }, %error.0 }*, i8*, i64, i64, i64, i64, { i8*, i64 }*) local_unnamed_addr #0

declare { i64, i64 } @io_ioutil.WriteFile(i8*, i64, i64, { i8*, i64, i64 }*, i32) local_unnamed_addr #0

define void @command_line_arguments.RetrieveOrGenerateConfig({ %Config.0*, %error.0 }* nocapture sret %sret.formal.4, i8* nest nocapture readnone %nest.6, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !615 {
entry:
  %sret.actual.33 = alloca { %Config.0*, %error.0 }, align 8
  %sret.actual.35 = alloca { %Config.0*, %error.0 }, align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !616, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !617
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !616, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !617
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !618, metadata !DIExpression()), !dbg !619
  call void @command_line_arguments.RetrieveConfig({ %Config.0*, %error.0 }* nonnull sret %sret.actual.33, i8* nest undef, i64 undef, i64 undef), !dbg !620
  %tmpv.151.sroa.0.0.cast.615.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.33, i64 0, i32 0, !dbg !620
  %tmpv.151.sroa.0.0.copyload8 = load %Config.0*, %Config.0** %tmpv.151.sroa.0.0.cast.615.sroa_idx, align 8, !dbg !620
  %tmpv.151.sroa.3.sroa.0.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.33, i64 0, i32 1, !dbg !620
  %tmpv.151.sroa.3.sroa.0.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.151.sroa.3.sroa.0.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_idx to i64*, !dbg !620
  %tmpv.151.sroa.3.sroa.0.0.copyload27 = load i64, i64* %tmpv.151.sroa.3.sroa.0.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_cast, align 8, !dbg !620
  call void @llvm.dbg.value(metadata %Config.0* %tmpv.151.sroa.0.0.copyload8, metadata !622, metadata !DIExpression()), !dbg !623
  call void @llvm.dbg.value(metadata i64 %tmpv.151.sroa.3.sroa.0.0.copyload27, metadata !624, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !623
  %icmp.74 = icmp eq i64 %tmpv.151.sroa.3.sroa.0.0.copyload27, 0, !dbg !625
  br i1 %icmp.74, label %else.56, label %then.56

then.56:                                          ; preds = %entry
  %tmpv.151.sroa.3.sroa.3.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_idx28 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.33, i64 0, i32 1, i32 1, !dbg !620
  %tmpv.151.sroa.3.sroa.3.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_cast = bitcast i8** %tmpv.151.sroa.3.sroa.3.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_idx28 to i64*, !dbg !620
  %tmpv.151.sroa.3.sroa.3.0.copyload29 = load i64, i64* %tmpv.151.sroa.3.sroa.3.0.tmpv.151.sroa.3.0.cast.615.sroa_cast.sroa_cast, align 8, !dbg !620
  call void @llvm.dbg.value(metadata i64 %tmpv.151.sroa.3.sroa.3.0.copyload29, metadata !624, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !623
  %call.37 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.151.sroa.3.sroa.0.0.copyload27, i64 %tmpv.151.sroa.3.sroa.3.0.copyload29), !dbg !626
  %call.37.fca.0.extract = extractvalue { i64, i64 } %call.37, 0, !dbg !626
  %call.37.fca.1.extract = extractvalue { i64, i64 } %call.37, 1, !dbg !626
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !618, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i64 %call.37.fca.0.extract, metadata !627, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !628
  call void @llvm.dbg.value(metadata i64 %call.37.fca.1.extract, metadata !627, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !628
  %tmp.18.sroa.0.0.cast.629.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 0, !dbg !629
  store %Config.0* null, %Config.0** %tmp.18.sroa.0.0.cast.629.sroa_idx, align 8, !dbg !629
  %tmp.18.sroa.2.0.cast.629.sroa_idx56 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, !dbg !629
  %tmp.18.sroa.2.0.cast.629.sroa_cast = bitcast %error.0* %tmp.18.sroa.2.0.cast.629.sroa_idx56 to i64*, !dbg !629
  store i64 %call.37.fca.0.extract, i64* %tmp.18.sroa.2.0.cast.629.sroa_cast, align 8, !dbg !629
  %tmp.18.sroa.3.0.cast.629.sroa_idx57 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, i32 1, !dbg !629
  %tmp.18.sroa.3.0.cast.629.sroa_cast = bitcast i8** %tmp.18.sroa.3.0.cast.629.sroa_idx57 to i64*, !dbg !629
  store i64 %call.37.fca.1.extract, i64* %tmp.18.sroa.3.0.cast.629.sroa_cast, align 8, !dbg !629
  ret void, !dbg !629

else.56:                                          ; preds = %entry
  %icmp.76 = icmp eq %Config.0* %tmpv.151.sroa.0.0.copyload8, null, !dbg !630
  br i1 %icmp.76, label %then.57, label %fallthrough.57

then.57:                                          ; preds = %else.56
  call void @command_line_arguments.GenerateConfig({ %Config.0*, %error.0 }* nonnull sret %sret.actual.35, i8* nest undef, i64 undef, i64 undef), !dbg !631
  %tmpv.156.sroa.0.0.cast.636.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.35, i64 0, i32 0, !dbg !631
  %tmpv.156.sroa.0.0.copyload4 = load %Config.0*, %Config.0** %tmpv.156.sroa.0.0.cast.636.sroa_idx, align 8, !dbg !631
  %tmpv.156.sroa.3.sroa.0.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.35, i64 0, i32 1, !dbg !631
  %tmpv.156.sroa.3.sroa.0.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_cast = bitcast %error.0* %tmpv.156.sroa.3.sroa.0.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_idx to i64*, !dbg !631
  %tmpv.156.sroa.3.sroa.0.0.copyload23 = load i64, i64* %tmpv.156.sroa.3.sroa.0.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_cast, align 8, !dbg !631
  call void @llvm.dbg.value(metadata %Config.0* %tmpv.156.sroa.0.0.copyload4, metadata !622, metadata !DIExpression()), !dbg !623
  call void @llvm.dbg.value(metadata i64 %tmpv.156.sroa.3.sroa.0.0.copyload23, metadata !624, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !623
  %icmp.75 = icmp eq i64 %tmpv.156.sroa.3.sroa.0.0.copyload23, 0, !dbg !632
  br i1 %icmp.75, label %fallthrough.57, label %then.58

fallthrough.57:                                   ; preds = %then.57, %else.56
  %config.0 = phi %Config.0* [ %tmpv.156.sroa.0.0.copyload4, %then.57 ], [ %tmpv.151.sroa.0.0.copyload8, %else.56 ]
  call void @llvm.dbg.value(metadata %Config.0* %config.0, metadata !622, metadata !DIExpression()), !dbg !623
  call void @llvm.dbg.value(metadata %Config.0* %config.0, metadata !618, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i64 0, metadata !627, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !628
  call void @llvm.dbg.value(metadata i64 0, metadata !627, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !628
  %tmp.20.sroa.0.0.cast.662.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 0, !dbg !633
  store %Config.0* %config.0, %Config.0** %tmp.20.sroa.0.0.cast.662.sroa_idx, align 8, !dbg !633
  %tmp.20.sroa.2.0.cast.662.sroa_idx60 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, !dbg !633
  %0 = bitcast %error.0* %tmp.20.sroa.2.0.cast.662.sroa_idx60 to i8*, !dbg !633
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %0, i8 0, i64 16, i1 false), !dbg !633
  ret void, !dbg !633

then.58:                                          ; preds = %then.57
  %tmpv.156.sroa.3.sroa.3.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_idx24 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.actual.35, i64 0, i32 1, i32 1, !dbg !631
  %tmpv.156.sroa.3.sroa.3.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_cast = bitcast i8** %tmpv.156.sroa.3.sroa.3.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_idx24 to i64*, !dbg !631
  %tmpv.156.sroa.3.sroa.3.0.copyload25 = load i64, i64* %tmpv.156.sroa.3.sroa.3.0.tmpv.156.sroa.3.0.cast.636.sroa_cast.sroa_cast, align 8, !dbg !631
  call void @llvm.dbg.value(metadata i64 %tmpv.156.sroa.3.sroa.3.0.copyload25, metadata !624, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !623
  %call.38 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.156.sroa.3.sroa.0.0.copyload23, i64 %tmpv.156.sroa.3.sroa.3.0.copyload25), !dbg !634
  %call.38.fca.0.extract = extractvalue { i64, i64 } %call.38, 0, !dbg !634
  %call.38.fca.1.extract = extractvalue { i64, i64 } %call.38, 1, !dbg !634
  call void @llvm.dbg.value(metadata %Config.0* null, metadata !618, metadata !DIExpression()), !dbg !619
  call void @llvm.dbg.value(metadata i64 %call.38.fca.0.extract, metadata !627, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !628
  call void @llvm.dbg.value(metadata i64 %call.38.fca.1.extract, metadata !627, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !628
  %tmp.19.sroa.0.0.cast.652.sroa_idx = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 0, !dbg !635
  store %Config.0* null, %Config.0** %tmp.19.sroa.0.0.cast.652.sroa_idx, align 8, !dbg !635
  %tmp.19.sroa.2.0.cast.652.sroa_idx58 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, !dbg !635
  %tmp.19.sroa.2.0.cast.652.sroa_cast = bitcast %error.0* %tmp.19.sroa.2.0.cast.652.sroa_idx58 to i64*, !dbg !635
  store i64 %call.38.fca.0.extract, i64* %tmp.19.sroa.2.0.cast.652.sroa_cast, align 8, !dbg !635
  %tmp.19.sroa.3.0.cast.652.sroa_idx59 = getelementptr inbounds { %Config.0*, %error.0 }, { %Config.0*, %error.0 }* %sret.formal.4, i64 0, i32 1, i32 1, !dbg !635
  %tmp.19.sroa.3.0.cast.652.sroa_cast = bitcast i8** %tmp.19.sroa.3.0.cast.652.sroa_idx59 to i64*, !dbg !635
  store i64 %call.38.fca.1.extract, i64* %tmp.19.sroa.3.0.cast.652.sroa_cast, align 8, !dbg !635
  ret void, !dbg !635
}

define void @command_line_arguments.RunLocalCommand({ %CommandResult.0*, %error.0 }* nocapture sret %sret.formal.5, i8* nest nocapture readnone %nest.7, i64 %ctx.chunk0, i64 %ctx.chunk1, %Command.1* byval nocapture readonly %cmd) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !636 {
entry:
  %tmp.37 = alloca %IPST.3, align 8
  %tmp.31 = alloca %IPST.3, align 8
  %tmp.25 = alloca %IPST.3, align 8
  %tmp.23 = alloca %IPST.2, align 8
  %tmp.22 = alloca %IPST.3, align 8
  call void @llvm.dbg.declare(metadata %Command.1* %cmd, metadata !670, metadata !DIExpression()), !dbg !671
  %tmpv.165 = alloca i8, align 1
  %tmpv.169 = alloca { i8*, i64 }, align 8
  %tmpv.170 = alloca [1 x %IPST.11], align 8
  %tmpv.172 = alloca [2 x { i8*, i64 }], align 8
  %sret.actual.41 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.178 = alloca [1 x %IPST.11], align 8
  %tmpv.183 = alloca { %Conn.0 }, align 8
  %tmpv.188 = alloca %Command.1, align 8
  %tmpv.190 = alloca [1 x %IPST.11], align 8
  %tmpv.200 = alloca { i8*, i64 }, align 8
  %tmpv.201 = alloca { i8*, i64 }, align 8
  %tmpv.203 = alloca { i8*, i64 }, align 8
  %tmpv.205 = alloca { i8*, i64 }, align 8
  %tmpv.206 = alloca [2 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !673
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !672, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !673
  store i8 0, i8* %tmpv.165, align 1
  call void @llvm.dbg.value(metadata %CommandResult.0* null, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 0, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i64 0, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  %call.39 = invoke { i64, i64 } @os.TempDir(i8* nest undef)
          to label %cont.0 unwind label %pad.0, !dbg !678

finally.0:                                        ; preds = %cont.22, %cont.8, %cont.18, %cont.21, %cont.27, %pad.0, %catchpad.0
  %"$ret12.sroa.0.1" = phi i64 [ 0, %catchpad.0 ], [ %call.45.fca.0.extract, %cont.8 ], [ 0, %pad.0 ], [ %call.53.fca.0.extract, %cont.18 ], [ %call.56.fca.0.extract, %cont.21 ], [ %call.59.fca.0.extract, %cont.27 ], [ 0, %cont.22 ]
  %"$ret12.sroa.9.1" = phi i64 [ 0, %catchpad.0 ], [ %call.45.fca.1.extract, %cont.8 ], [ 0, %pad.0 ], [ %call.53.fca.1.extract, %cont.18 ], [ %call.56.fca.1.extract, %cont.21 ], [ %call.59.fca.1.extract, %cont.27 ], [ 0, %cont.22 ]
  %"$ret11.1" = phi %CommandResult.0* [ null, %catchpad.0 ], [ null, %cont.8 ], [ null, %pad.0 ], [ null, %cont.18 ], [ null, %cont.21 ], [ null, %cont.27 ], [ %cast.787, %cont.22 ]
  %ehtmp.0.sroa.0.0 = phi i8* [ %ex2.0.fca.0.extract, %catchpad.0 ], [ undef, %cont.8 ], [ undef, %pad.0 ], [ undef, %cont.18 ], [ undef, %cont.21 ], [ undef, %cont.27 ], [ undef, %cont.22 ]
  %ehtmp.0.sroa.2.0 = phi i32 [ %ex2.0.fca.1.extract, %catchpad.0 ], [ undef, %cont.8 ], [ undef, %pad.0 ], [ undef, %cont.18 ], [ undef, %cont.21 ], [ undef, %cont.27 ], [ undef, %cont.22 ]
  %finvar.0.0 = phi i8 [ 0, %catchpad.0 ], [ 1, %cont.8 ], [ 1, %pad.0 ], [ 1, %cont.18 ], [ 1, %cont.21 ], [ 1, %cont.27 ], [ 1, %cont.22 ]
  call void @llvm.dbg.value(metadata %CommandResult.0* %"$ret11.1", metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 %"$ret12.sroa.9.1", metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i64 %"$ret12.sroa.0.1", metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  br label %finish.0

pad.0:                                            ; preds = %cont.26, %cont.25, %cont.24, %cont.23, %then.66, %else.65, %then.65, %cont.19, %else.63, %cont.17, %else.64, %cont.15, %cont.14, %cont.13, %cont.12, %fallthrough.62, %cont.10, %fallthrough.61, %else.59, %cont.7, %else.60, %cont.5, %cont.4, %cont.3, %cont.2, %cont.1, %cont.0, %entry
  %ex.0 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.165)
          to label %finally.0 unwind label %catchpad.0, !dbg !680

cont.0:                                           ; preds = %entry
  %call.39.fca.0.extract = extractvalue { i64, i64 } %call.39, 0, !dbg !678
  %call.39.fca.1.extract = extractvalue { i64, i64 } %call.39, 1, !dbg !678
  %ld.77 = load i64, i64* bitcast ({ i8*, i64 }* @github_com_spolu_warp.EnvWarp to i64*), align 8, !dbg !681
  %ld.78 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* @github_com_spolu_warp.EnvWarp, i64 0, i32 1), align 8, !dbg !681
  %call.40 = invoke { i64, i64 } @os.Getenv(i8* nest undef, i64 %ld.77, i64 %ld.78)
          to label %cont.1 unwind label %pad.0, !dbg !681

cont.1:                                           ; preds = %cont.0
  %call.41 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.2 unwind label %pad.0, !dbg !682

cont.2:                                           ; preds = %cont.1
  %call.40.fca.1.extract = extractvalue { i64, i64 } %call.40, 1, !dbg !681
  %call.40.fca.0.extract = extractvalue { i64, i64 } %call.40, 0, !dbg !681
  %tmpv.167.sroa.0.0.cast.675.sroa_cast = bitcast { i8*, i64 }* %tmpv.169 to i64*
  store i64 %call.40.fca.0.extract, i64* %tmpv.167.sroa.0.0.cast.675.sroa_cast, align 8
  %tmpv.167.sroa.2.0.cast.675.sroa_idx27 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.169, i64 0, i32 1
  store i64 %call.40.fca.1.extract, i64* %tmpv.167.sroa.2.0.cast.675.sroa_idx27, align 8
  %cast.678 = bitcast { i8*, i64 }* %tmpv.169 to i8*, !dbg !682
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.41, i8* nonnull %cast.678)
          to label %cont.3 unwind label %pad.0, !dbg !682

cont.3:                                           ; preds = %cont.2
  %tmp.21.sroa.0.0.cast.680.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.170, i64 0, i64 0, i32 0, !dbg !682
  store %_type.0* @string..d, %_type.0** %tmp.21.sroa.0.0.cast.680.sroa_idx, align 8, !dbg !682
  %tmp.21.sroa.2.0.cast.680.sroa_idx55 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.170, i64 0, i64 0, i32 1, !dbg !682
  store i8* %call.41, i8** %tmp.21.sroa.2.0.cast.680.sroa_idx55, align 8, !dbg !682
  %field.141 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.22, i64 0, i32 0, !dbg !682
  %cast.683 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.170, i64 0, i64 0, !dbg !682
  store %IPST.11* %cast.683, %IPST.11** %field.141, align 8, !dbg !682
  %field.142 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.22, i64 0, i32 1, !dbg !682
  store i64 1, i64* %field.142, align 8, !dbg !682
  %field.143 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.22, i64 0, i32 2, !dbg !682
  store i64 1, i64* %field.143, align 8, !dbg !682
  %call.42 = invoke { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([14 x i8]* @const.108 to i64), i64 13, %IPST.3* byval nonnull %tmp.22)
          to label %cont.4 unwind label %pad.0, !dbg !682

cont.4:                                           ; preds = %cont.3
  %call.42.fca.0.extract = extractvalue { i64, i64 } %call.42, 0, !dbg !682
  %call.42.fca.1.extract = extractvalue { i64, i64 } %call.42, 1, !dbg !682
  %tmpv.166.sroa.0.0.cast.687.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.172 to i64*, !dbg !683
  store i64 %call.39.fca.0.extract, i64* %tmpv.166.sroa.0.0.cast.687.sroa_cast, align 8, !dbg !683
  %tmpv.166.sroa.2.0.cast.687.sroa_idx29 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.172, i64 0, i64 0, i32 1, !dbg !683
  store i64 %call.39.fca.1.extract, i64* %tmpv.166.sroa.2.0.cast.687.sroa_idx29, align 8, !dbg !683
  %tmpv.171.sroa.0.0.cast.689.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.172, i64 0, i64 1, !dbg !683
  %tmpv.171.sroa.0.0.cast.689.sroa_cast = bitcast { i8*, i64 }* %tmpv.171.sroa.0.0.cast.689.sroa_idx to i64*, !dbg !683
  store i64 %call.42.fca.0.extract, i64* %tmpv.171.sroa.0.0.cast.689.sroa_cast, align 8, !dbg !683
  %tmpv.171.sroa.2.0.cast.689.sroa_idx25 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.172, i64 0, i64 1, i32 1, !dbg !683
  store i64 %call.42.fca.1.extract, i64* %tmpv.171.sroa.2.0.cast.689.sroa_idx25, align 8, !dbg !683
  %field.144 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.23, i64 0, i32 0, !dbg !683
  %cast.691 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.172, i64 0, i64 0, !dbg !683
  store { i8*, i64 }* %cast.691, { i8*, i64 }** %field.144, align 8, !dbg !683
  %field.145 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.23, i64 0, i32 1, !dbg !683
  store i64 2, i64* %field.145, align 8, !dbg !683
  %field.146 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.23, i64 0, i32 2, !dbg !683
  store i64 2, i64* %field.146, align 8, !dbg !683
  %call.43 = invoke { i64, i64 } @path.Join(i8* nest undef, %IPST.2* byval nonnull %tmp.23)
          to label %cont.5 unwind label %pad.0, !dbg !683

cont.5:                                           ; preds = %cont.4
  %call.43.fca.0.extract = extractvalue { i64, i64 } %call.43, 0, !dbg !683
  %call.43.fca.1.extract = extractvalue { i64, i64 } %call.43, 1, !dbg !683
  call void @llvm.dbg.value(metadata i64 %call.43.fca.0.extract, metadata !684, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !685
  call void @llvm.dbg.value(metadata i64 %call.43.fca.1.extract, metadata !684, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !685
  invoke void @net.Dial({ %Conn.0, %error.0 }* nonnull sret %sret.actual.41, i8* nest undef, i64 ptrtoint ([5 x i8]* @const.111 to i64), i64 4, i64 %call.43.fca.0.extract, i64 %call.43.fca.1.extract)
          to label %cont.6 unwind label %pad.0, !dbg !686

cont.6:                                           ; preds = %cont.5
  %tmpv.174.sroa.0.sroa.0.0.tmpv.174.sroa.0.0.cast.702.sroa_cast.sroa_idx = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.41, i64 0, i32 0, i32 0, !dbg !686
  %tmpv.174.sroa.0.sroa.0.0.copyload43 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.174.sroa.0.sroa.0.0.tmpv.174.sroa.0.0.cast.702.sroa_cast.sroa_idx, align 8, !dbg !686
  %tmpv.174.sroa.0.sroa.3.0.tmpv.174.sroa.0.0.cast.702.sroa_cast.sroa_idx44 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.41, i64 0, i32 0, i32 1, !dbg !686
  %tmpv.174.sroa.0.sroa.3.0.copyload45 = load i8*, i8** %tmpv.174.sroa.0.sroa.3.0.tmpv.174.sroa.0.0.cast.702.sroa_cast.sroa_idx44, align 8, !dbg !686
  %tmpv.174.sroa.3.0.cast.702.sroa_idx34 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.41, i64 0, i32 1, i32 0, !dbg !686
  %tmpv.174.sroa.3.0.copyload35 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.174.sroa.3.0.cast.702.sroa_idx34, align 8, !dbg !686
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.174.sroa.0.sroa.0.0.copyload43, metadata !687, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !725
  call void @llvm.dbg.value(metadata i8* %tmpv.174.sroa.0.sroa.3.0.copyload45, metadata !687, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !725
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.174.sroa.3.0.copyload35, metadata !726, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !725
  %icmp.78 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.174.sroa.3.0.copyload35, null, !dbg !727
  br i1 %icmp.78, label %else.59, label %else.60

else.59:                                          ; preds = %cont.6
  %cast.734 = bitcast { %Conn.0 }* %tmpv.183 to i8*
  %conn.sroa.0.0.cast.736.sroa_idx = getelementptr inbounds { %Conn.0 }, { %Conn.0 }* %tmpv.183, i64 0, i32 0, i32 0, !dbg !728
  store { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.174.sroa.0.sroa.0.0.copyload43, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %conn.sroa.0.0.cast.736.sroa_idx, align 8, !dbg !728
  %conn.sroa.7.0.cast.736.sroa_idx40 = getelementptr inbounds { %Conn.0 }, { %Conn.0 }* %tmpv.183, i64 0, i32 0, i32 1, !dbg !728
  store i8* %tmpv.174.sroa.0.sroa.3.0.copyload45, i8** %conn.sroa.7.0.cast.736.sroa_idx40, align 8, !dbg !728
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.165, %__go_descriptor.47* bitcast (i8 (i8*, { %Conn.0 }*)* @command_line_arguments.command_line_arguments..thunk0 to %__go_descriptor.47*), i8* nonnull %cast.734)
          to label %cont.9 unwind label %pad.0, !dbg !728

else.60:                                          ; preds = %cont.6
  %tmpv.174.sroa.4.0.cast.702.sroa_idx36 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.41, i64 0, i32 1, i32 1, !dbg !686
  call void @llvm.dbg.value(metadata i8** %tmpv.174.sroa.4.0.cast.702.sroa_idx36, metadata !726, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !725
  %0 = bitcast i8** %tmpv.174.sroa.4.0.cast.702.sroa_idx36 to i64*, !dbg !686
  %tmpv.174.sroa.4.0.copyload3762 = load i64, i64* %0, align 8, !dbg !686
  %1 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.174.sroa.3.0.copyload35 to i64*, !dbg !729
  %.field.ld.1264 = load i64, i64* %1, align 8, !dbg !729
  %2 = bitcast [1 x %IPST.11]* %tmpv.178 to i64*, !dbg !730
  store i64 %.field.ld.1264, i64* %2, align 8, !dbg !730
  %tmp.24.sroa.2.0.cast.714.sroa_idx56 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.178, i64 0, i64 0, i32 1, !dbg !730
  %3 = bitcast i8** %tmp.24.sroa.2.0.cast.714.sroa_idx56 to i64*, !dbg !730
  store i64 %tmpv.174.sroa.4.0.copyload3762, i64* %3, align 8, !dbg !730
  %field.155 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.25, i64 0, i32 0, !dbg !730
  %cast.717 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.178, i64 0, i64 0, !dbg !730
  store %IPST.11* %cast.717, %IPST.11** %field.155, align 8, !dbg !730
  %field.156 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.25, i64 0, i32 1, !dbg !730
  store i64 1, i64* %field.156, align 8, !dbg !730
  %field.157 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.25, i64 0, i32 2, !dbg !730
  store i64 1, i64* %field.157, align 8, !dbg !730
  %call.44 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([31 x i8]* @const.113 to i64), i64 30, %IPST.3* byval nonnull %tmp.25)
          to label %cont.7 unwind label %pad.0, !dbg !730

cont.7:                                           ; preds = %else.60
  %call.44.fca.0.extract = extractvalue { i64, i64 } %call.44, 0, !dbg !730
  %call.44.fca.1.extract = extractvalue { i64, i64 } %call.44, 1, !dbg !730
  %call.45 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.44.fca.0.extract, i64 %call.44.fca.1.extract)
          to label %cont.8 unwind label %pad.0, !dbg !731

cont.8:                                           ; preds = %cont.7
  %call.45.fca.0.extract = extractvalue { i64, i64 } %call.45, 0, !dbg !731
  %call.45.fca.1.extract = extractvalue { i64, i64 } %call.45, 1, !dbg !731
  call void @llvm.dbg.value(metadata %CommandResult.0* null, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 %call.45.fca.0.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i64 %call.45.fca.1.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  br label %finally.0

cont.9:                                           ; preds = %else.59
  %icmp.79 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.174.sroa.0.sroa.0.0.copyload43, null, !dbg !732
  br i1 %icmp.79, label %fallthrough.61, label %else.61

fallthrough.61:                                   ; preds = %cont.9, %else.61
  %tmpv.185.0 = phi %_type.0* [ %.field.ld.13, %else.61 ], [ null, %cont.9 ]
  %call.46 = invoke i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.185.0)
          to label %cont.10 unwind label %pad.0, !dbg !732

else.61:                                          ; preds = %cont.9
  %field.164 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.174.sroa.0.sroa.0.0.copyload43, i64 0, i32 0, !dbg !732
  %.field.ld.13 = load %_type.0*, %_type.0** %field.164, align 8, !dbg !732
  br label %fallthrough.61

cont.10:                                          ; preds = %fallthrough.61
  %4 = ptrtoint i8* %call.46 to i64, !dbg !732
  %5 = ptrtoint i8* %tmpv.174.sroa.0.sroa.3.0.copyload45 to i64, !dbg !732
  %call.47 = invoke %Decoder.0* @encoding_gob.NewDecoder(i8* nest undef, i64 %4, i64 %5)
          to label %cont.11 unwind label %pad.0, !dbg !733

cont.11:                                          ; preds = %cont.10
  call void @llvm.dbg.value(metadata %Decoder.0* %call.47, metadata !734, metadata !DIExpression()), !dbg !773
  br i1 %icmp.79, label %fallthrough.62, label %else.62

fallthrough.62:                                   ; preds = %cont.11, %else.62
  %tmpv.186.0 = phi %_type.0* [ %.field.ld.14, %else.62 ], [ null, %cont.11 ]
  %call.48 = invoke i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), %_type.0* %tmpv.186.0)
          to label %cont.12 unwind label %pad.0, !dbg !774

else.62:                                          ; preds = %cont.11
  %field.170 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.174.sroa.0.sroa.0.0.copyload43, i64 0, i32 0, !dbg !774
  %.field.ld.14 = load %_type.0*, %_type.0** %field.170, align 8, !dbg !774
  br label %fallthrough.62

cont.12:                                          ; preds = %fallthrough.62
  %6 = ptrtoint i8* %call.48 to i64, !dbg !774
  %call.49 = invoke %Encoder.0* @encoding_gob.NewEncoder(i8* nest undef, i64 %6, i64 %5)
          to label %cont.13 unwind label %pad.0, !dbg !775

cont.13:                                          ; preds = %cont.12
  call void @llvm.dbg.value(metadata %Encoder.0* %call.49, metadata !776, metadata !DIExpression()), !dbg !809
  %call.50 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Command..d, i64 0, i32 0))
          to label %cont.14 unwind label %pad.0, !dbg !810

cont.14:                                          ; preds = %cont.13
  %cast.752 = bitcast %Command.1* %tmpv.188 to i8*
  %cast.753 = bitcast %Command.1* %cmd to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.752, i8* nonnull align 8 %cast.753, i64 40, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Command..d, i64 0, i32 0), i8* %call.50, i8* nonnull %cast.752)
          to label %cont.15 unwind label %pad.0, !dbg !810

cont.15:                                          ; preds = %cont.14
  %7 = ptrtoint i8* %call.50 to i64, !dbg !810
  %call.51 = invoke { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %call.49, i64 ptrtoint (%StructType.0* @github_com_spolu_warp.Command..d to i64), i64 %7)
          to label %cont.16 unwind label %pad.0, !dbg !812

cont.16:                                          ; preds = %cont.15
  %call.51.fca.0.extract = extractvalue { i64, i64 } %call.51, 0, !dbg !812
  call void @llvm.dbg.value(metadata i64 %call.51.fca.0.extract, metadata !813, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !814
  %icmp.82 = icmp eq i64 %call.51.fca.0.extract, 0, !dbg !815
  br i1 %icmp.82, label %else.63, label %else.64

else.63:                                          ; preds = %cont.16
  %call.54 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.CommandResult..d, i64 0, i32 0))
          to label %cont.19 unwind label %pad.0, !dbg !816

else.64:                                          ; preds = %cont.16
  %call.51.fca.1.extract = extractvalue { i64, i64 } %call.51, 1, !dbg !812
  call void @llvm.dbg.value(metadata i64 %call.51.fca.1.extract, metadata !813, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !814
  %8 = inttoptr i64 %call.51.fca.0.extract to i64*, !dbg !817
  %.field.ld.1563 = load i64, i64* %8, align 8, !dbg !817
  %9 = inttoptr i64 %call.51.fca.1.extract to i8*, !dbg !818
  %10 = bitcast [1 x %IPST.11]* %tmpv.190 to i64*, !dbg !818
  store i64 %.field.ld.1563, i64* %10, align 8, !dbg !818
  %tmp.30.sroa.2.0.cast.766.sroa_idx57 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.190, i64 0, i64 0, i32 1, !dbg !818
  store i8* %9, i8** %tmp.30.sroa.2.0.cast.766.sroa_idx57, align 8, !dbg !818
  %field.182 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.31, i64 0, i32 0, !dbg !818
  %cast.769 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.190, i64 0, i64 0, !dbg !818
  store %IPST.11* %cast.769, %IPST.11** %field.182, align 8, !dbg !818
  %field.183 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.31, i64 0, i32 1, !dbg !818
  store i64 1, i64* %field.183, align 8, !dbg !818
  %field.184 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.31, i64 0, i32 2, !dbg !818
  store i64 1, i64* %field.184, align 8, !dbg !818
  %call.52 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([27 x i8]* @const.116 to i64), i64 26, %IPST.3* byval nonnull %tmp.31)
          to label %cont.17 unwind label %pad.0, !dbg !818

cont.17:                                          ; preds = %else.64
  %call.52.fca.0.extract = extractvalue { i64, i64 } %call.52, 0, !dbg !818
  %call.52.fca.1.extract = extractvalue { i64, i64 } %call.52, 1, !dbg !818
  %call.53 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.52.fca.0.extract, i64 %call.52.fca.1.extract)
          to label %cont.18 unwind label %pad.0, !dbg !819

cont.18:                                          ; preds = %cont.17
  %call.53.fca.0.extract = extractvalue { i64, i64 } %call.53, 0, !dbg !819
  %call.53.fca.1.extract = extractvalue { i64, i64 } %call.53, 1, !dbg !819
  call void @llvm.dbg.value(metadata %CommandResult.0* null, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 %call.53.fca.0.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i64 %call.53.fca.1.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  br label %finally.0

cont.19:                                          ; preds = %else.63
  %cast.787 = bitcast i8* %call.54 to %CommandResult.0*, !dbg !816
  call void @llvm.dbg.value(metadata %CommandResult.0* %cast.787, metadata !820, metadata !DIExpression()), !dbg !821
  %11 = ptrtoint i8* %call.54 to i64, !dbg !822
  %call.55 = invoke { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %call.47, i64 ptrtoint (%PtrType.0* @type...1github_com_spolu_warp.CommandResult to i64), i64 %11)
          to label %cont.20 unwind label %pad.0, !dbg !824

cont.20:                                          ; preds = %cont.19
  %call.55.fca.0.extract = extractvalue { i64, i64 } %call.55, 0, !dbg !824
  call void @llvm.dbg.value(metadata i64 %call.55.fca.0.extract, metadata !825, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !826
  %icmp.83 = icmp eq i64 %call.55.fca.0.extract, 0, !dbg !827
  br i1 %icmp.83, label %else.65, label %then.65

then.65:                                          ; preds = %cont.20
  %call.55.fca.1.extract = extractvalue { i64, i64 } %call.55, 1, !dbg !824
  call void @llvm.dbg.value(metadata i64 %call.55.fca.1.extract, metadata !825, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !826
  %call.56 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.55.fca.0.extract, i64 %call.55.fca.1.extract)
          to label %cont.21 unwind label %pad.0, !dbg !828

else.65:                                          ; preds = %cont.20
  %field.206 = getelementptr inbounds i8, i8* %call.54, i64 64, !dbg !829
  %field0.55 = bitcast i8* %field.206 to i64*, !dbg !830
  %ld.105 = load i64, i64* %field0.55, align 8, !dbg !830
  %field1.55 = getelementptr inbounds i8, i8* %call.54, i64 72, !dbg !830
  %12 = bitcast i8* %field1.55 to i64*, !dbg !830
  %ld.106 = load i64, i64* %12, align 8, !dbg !830
  %call.60 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %ld.105, i64 %ld.106, i64 0, i64 0)
          to label %cont.22 unwind label %pad.0, !dbg !830

cont.21:                                          ; preds = %then.65
  %call.56.fca.0.extract = extractvalue { i64, i64 } %call.56, 0, !dbg !828
  %call.56.fca.1.extract = extractvalue { i64, i64 } %call.56, 1, !dbg !828
  call void @llvm.dbg.value(metadata %CommandResult.0* null, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 %call.56.fca.0.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i64 %call.56.fca.1.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  br label %finally.0

cont.22:                                          ; preds = %else.65
  %icmp.84 = icmp eq i8 %call.60, 1, !dbg !830
  br i1 %icmp.84, label %finally.0, label %then.66

then.66:                                          ; preds = %cont.22
  %cast.807 = bitcast { i8*, i64 }* %tmpv.200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.807, i8* nonnull align 8 %field.206, i64 16, i1 false)
  %field.196 = getelementptr inbounds i8, i8* %call.54, i64 80, !dbg !831
  %cast.809 = bitcast { i8*, i64 }* %tmpv.201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.809, i8* nonnull align 8 %field.196, i64 16, i1 false)
  %call.57 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.23 unwind label %pad.0, !dbg !832

cont.23:                                          ; preds = %then.66
  %cast.812 = bitcast { i8*, i64 }* %tmpv.203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.812, i8* nonnull align 8 %cast.807, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.57, i8* nonnull %cast.812)
          to label %cont.24 unwind label %pad.0, !dbg !832

cont.24:                                          ; preds = %cont.23
  %call.58 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d)
          to label %cont.25 unwind label %pad.0, !dbg !832

cont.25:                                          ; preds = %cont.24
  %cast.817 = bitcast { i8*, i64 }* %tmpv.205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.817, i8* nonnull align 8 %cast.809, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.58, i8* nonnull %cast.817)
          to label %cont.26 unwind label %pad.0, !dbg !832

cont.26:                                          ; preds = %cont.25
  %tmp.35.sroa.0.0.cast.823.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.206, i64 0, i64 0, i32 0, !dbg !832
  store %_type.0* @string..d, %_type.0** %tmp.35.sroa.0.0.cast.823.sroa_idx, align 8, !dbg !832
  %tmp.35.sroa.2.0.cast.823.sroa_idx58 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.206, i64 0, i64 0, i32 1, !dbg !832
  store i8* %call.57, i8** %tmp.35.sroa.2.0.cast.823.sroa_idx58, align 8, !dbg !832
  %tmp.36.sroa.0.0.cast.825.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.206, i64 0, i64 1, i32 0, !dbg !832
  store %_type.0* @string..d, %_type.0** %tmp.36.sroa.0.0.cast.825.sroa_idx, align 8, !dbg !832
  %tmp.36.sroa.2.0.cast.825.sroa_idx59 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.206, i64 0, i64 1, i32 1, !dbg !832
  store i8* %call.58, i8** %tmp.36.sroa.2.0.cast.825.sroa_idx59, align 8, !dbg !832
  %field.201 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.37, i64 0, i32 0, !dbg !832
  %cast.828 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.206, i64 0, i64 0, !dbg !832
  store %IPST.11* %cast.828, %IPST.11** %field.201, align 8, !dbg !832
  %field.202 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.37, i64 0, i32 1, !dbg !832
  store i64 2, i64* %field.202, align 8, !dbg !832
  %field.203 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.37, i64 0, i32 2, !dbg !832
  store i64 2, i64* %field.203, align 8, !dbg !832
  %call.59 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([16 x i8]* @const.118 to i64), i64 15, %IPST.3* byval nonnull %tmp.37)
          to label %cont.27 unwind label %pad.0, !dbg !832

cont.27:                                          ; preds = %cont.26
  %call.59.fca.0.extract = extractvalue { i64, i64 } %call.59, 0, !dbg !832
  %call.59.fca.1.extract = extractvalue { i64, i64 } %call.59, 1, !dbg !832
  call void @llvm.dbg.value(metadata %CommandResult.0* null, metadata !674, metadata !DIExpression()), !dbg !675
  call void @llvm.dbg.value(metadata i64 %call.59.fca.0.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !677
  call void @llvm.dbg.value(metadata i64 %call.59.fca.1.extract, metadata !676, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !677
  br label %finally.0

catchpad.0:                                       ; preds = %pad.0
  %ex2.0 = landingpad { i8*, i32 }
          cleanup
  %ex2.0.fca.0.extract = extractvalue { i8*, i32 } %ex2.0, 0
  %ex2.0.fca.1.extract = extractvalue { i8*, i32 } %ex2.0, 1
  br label %finally.0

pad.1:                                            ; preds = %finish.0
  %ex.1 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.165), !dbg !680
  br label %finish.0

finish.0:                                         ; preds = %pad.1, %finally.0
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.165)
          to label %cont.29 unwind label %pad.1, !dbg !680

cont.29:                                          ; preds = %finish.0
  %icmp.85 = icmp eq i8 %finvar.0.0, 1
  br i1 %icmp.85, label %finret.0, label %finres.0

finres.0:                                         ; preds = %cont.29
  %excv.0.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.0.sroa.0.0, 0
  %excv.0.fca.1.insert = insertvalue { i8*, i32 } %excv.0.fca.0.insert, i32 %ehtmp.0.sroa.2.0, 1
  resume { i8*, i32 } %excv.0.fca.1.insert

finret.0:                                         ; preds = %cont.29
  %tmp.26.sroa.0.0.cast.731.sroa_idx = getelementptr inbounds { %CommandResult.0*, %error.0 }, { %CommandResult.0*, %error.0 }* %sret.formal.5, i64 0, i32 0, !dbg !833
  store %CommandResult.0* %"$ret11.1", %CommandResult.0** %tmp.26.sroa.0.0.cast.731.sroa_idx, align 8, !dbg !833
  %tmp.26.sroa.2.0.cast.731.sroa_idx60 = getelementptr inbounds { %CommandResult.0*, %error.0 }, { %CommandResult.0*, %error.0 }* %sret.formal.5, i64 0, i32 1, !dbg !833
  %tmp.26.sroa.2.0.cast.731.sroa_cast = bitcast %error.0* %tmp.26.sroa.2.0.cast.731.sroa_idx60 to i64*, !dbg !833
  store i64 %"$ret12.sroa.0.1", i64* %tmp.26.sroa.2.0.cast.731.sroa_cast, align 8, !dbg !833
  %tmp.26.sroa.3.0.cast.731.sroa_idx61 = getelementptr inbounds { %CommandResult.0*, %error.0 }, { %CommandResult.0*, %error.0 }* %sret.formal.5, i64 0, i32 1, i32 1, !dbg !833
  %tmp.26.sroa.3.0.cast.731.sroa_cast = bitcast i8** %tmp.26.sroa.3.0.cast.731.sroa_idx61 to i64*, !dbg !833
  store i64 %"$ret12.sroa.9.1", i64* %tmp.26.sroa.3.0.cast.731.sroa_cast, align 8, !dbg !833
  ret void, !dbg !833
}

declare { i64, i64 } @os.TempDir(i8*) local_unnamed_addr #0

declare { i64, i64 } @os.Getenv(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @fmt.Sprintf(i8*, i64, i64, %IPST.3*) local_unnamed_addr #0

declare { i64, i64 } @path.Join(i8*, %IPST.2*) local_unnamed_addr #0

declare void @net.Dial({ %Conn.0, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8*, i64, i64, %IPST.3*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk0(i8* nest nocapture readnone %nest.46, { %Conn.0 }* nocapture readonly %__go_thunk_parameter) #4 !dbg !834 {
entry:
  call void @llvm.dbg.value(metadata { %Conn.0 }* %__go_thunk_parameter, metadata !841, metadata !DIExpression()), !dbg !842
  call void @llvm.dbg.value(metadata i8 0, metadata !843, metadata !DIExpression()), !dbg !842
  %call.203 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk0, %label.0)), !dbg !842
  %0 = and i8 %call.203, 1, !dbg !842
  %trunc.299 = icmp eq i8 %0, 0, !dbg !842
  br i1 %trunc.299, label %else.295, label %label.0

else.295:                                         ; preds = %entry
  %tmpv.851.sroa.0.0.cast.3059.sroa_idx = getelementptr inbounds { %Conn.0 }, { %Conn.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 0
  %tmpv.851.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.851.sroa.0.0.cast.3059.sroa_idx, align 8
  %tmpv.851.sroa.2.0.cast.3059.sroa_idx1 = getelementptr inbounds { %Conn.0 }, { %Conn.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 1
  %tmpv.851.sroa.2.0.copyload = load i8*, i8** %tmpv.851.sroa.2.0.cast.3059.sroa_idx1, align 8
  %field.811 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.851.sroa.0.0.copyload, i64 0, i32 1, !dbg !842
  %.field.ld.127 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.811, align 8, !dbg !842
  %call.204 = call { i64, i64 } %.field.ld.127(i8* nest undef, i8* %tmpv.851.sroa.2.0.copyload), !dbg !842
  br label %label.0

label.0:                                          ; preds = %entry, %else.295
  call void @llvm.dbg.value(metadata i8 0, metadata !843, metadata !DIExpression()), !dbg !842
  ret i8 0, !dbg !842
}

declare void @runtime.deferproc(i8*, i8*, %__go_descriptor.47*, i8*) local_unnamed_addr #0

declare i8* @runtime.requireitab(i8*, %_type.0*, %_type.0*) local_unnamed_addr #0

declare %Decoder.0* @encoding_gob.NewDecoder(i8*, i64, i64) local_unnamed_addr #0

declare %Encoder.0* @encoding_gob.NewEncoder(i8*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @encoding_gob.Encoder.Encode(i8*, %Encoder.0*, i64, i64) local_unnamed_addr #0

declare { i64, i64 } @encoding_gob.Decoder.Decode(i8*, %Decoder.0*, i64, i64) local_unnamed_addr #0

declare i8 @runtime.eqstring(i8*, i64, i64, i64, i64) local_unnamed_addr #0

declare void @runtime.checkdefer(i8*, i8*) local_unnamed_addr #0

declare void @runtime.deferreturn(i8*, i8*) local_unnamed_addr #0

declare i32 @__gccgo_personality_v0(i32, i32, i64, i8*, i8*)

define { i64, i64 } @command_line_arguments.CheckEnvWarp(i8* nest nocapture readnone %nest.8, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !844 {
entry:
  %tmp.48 = alloca %IPST.3, align 8
  %tmp.46 = alloca %IPST.3, align 8
  %tmp.44 = alloca %IPST.3, align 8
  %tmp.42 = alloca %IPST.3, align 8
  %tmpv.212 = alloca { i8*, i64 }, align 8
  %tmpv.213 = alloca [1 x %IPST.11], align 8
  %tmpv.215 = alloca { i8*, i64 }, align 8
  %tmpv.216 = alloca [1 x %IPST.11], align 8
  %tmpv.221 = alloca { i8*, i64 }, align 8
  %tmpv.222 = alloca [1 x %IPST.11], align 8
  %tmpv.224 = alloca { i8*, i64 }, align 8
  %tmpv.225 = alloca [1 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !847, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !848
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !847, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !848
  %ld.110 = load i64, i64* bitcast ({ i8*, i64 }* @github_com_spolu_warp.EnvWarp to i64*), align 8, !dbg !849
  %ld.111 = load i64, i64* getelementptr inbounds ({ i8*, i64 }, { i8*, i64 }* @github_com_spolu_warp.EnvWarp, i64 0, i32 1), align 8, !dbg !849
  %call.61 = call { i64, i64 } @os.Getenv(i8* nest undef, i64 %ld.110, i64 %ld.111), !dbg !849
  %call.61.fca.0.extract = extractvalue { i64, i64 } %call.61, 0, !dbg !849
  %call.61.fca.1.extract = extractvalue { i64, i64 } %call.61, 1, !dbg !849
  %call.62 = call i8 @runtime.eqstring(i8* nest undef, i64 %call.61.fca.0.extract, i64 %call.61.fca.1.extract, i64 0, i64 0), !dbg !850
  %icmp.86 = icmp eq i8 %call.62, 1, !dbg !850
  br i1 %icmp.86, label %else.67, label %then.67

then.67:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, metadata !851, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !852
  call void @llvm.dbg.value(metadata i64 0, metadata !851, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !852
  ret { i64, i64 } zeroinitializer, !dbg !853

else.67:                                          ; preds = %entry
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([2 x i8]* @const.120 to i64), i64 1, %IPST.3* byval nonnull @const.122), !dbg !854
  %call.63 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !855
  %cast.865 = bitcast { i8*, i64 }* %tmpv.212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.865, i8* align 8 bitcast ({ i8*, i64 }* @github_com_spolu_warp.EnvWarp to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.63, i8* nonnull %cast.865), !dbg !855
  %tmp.41.sroa.0.0.cast.870.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.213, i64 0, i64 0, i32 0, !dbg !855
  store %_type.0* @string..d, %_type.0** %tmp.41.sroa.0.0.cast.870.sroa_idx, align 8, !dbg !855
  %tmp.41.sroa.2.0.cast.870.sroa_idx12 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.213, i64 0, i64 0, i32 1, !dbg !855
  store i8* %call.63, i8** %tmp.41.sroa.2.0.cast.870.sroa_idx12, align 8, !dbg !855
  %field.214 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.42, i64 0, i32 0, !dbg !855
  %cast.873 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.213, i64 0, i64 0, !dbg !855
  store %IPST.11* %cast.873, %IPST.11** %field.214, align 8, !dbg !855
  %field.215 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.42, i64 0, i32 1, !dbg !855
  store i64 1, i64* %field.215, align 8, !dbg !855
  %field.216 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.42, i64 0, i32 2, !dbg !855
  store i64 1, i64* %field.216, align 8, !dbg !855
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([77 x i8]* @const.123 to i64), i64 76, %IPST.3* byval nonnull %tmp.42), !dbg !855
  %call.64 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !856
  %cast.875 = bitcast { i8*, i64 }* %tmpv.215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.875, i8* align 8 bitcast ({ i8*, i64 }* @github_com_spolu_warp.EnvWarp to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.64, i8* nonnull %cast.875), !dbg !856
  %tmp.43.sroa.0.0.cast.880.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.216, i64 0, i64 0, i32 0, !dbg !856
  store %_type.0* @string..d, %_type.0** %tmp.43.sroa.0.0.cast.880.sroa_idx, align 8, !dbg !856
  %tmp.43.sroa.2.0.cast.880.sroa_idx13 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.216, i64 0, i64 0, i32 1, !dbg !856
  store i8* %call.64, i8** %tmp.43.sroa.2.0.cast.880.sroa_idx13, align 8, !dbg !856
  %field.219 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.44, i64 0, i32 0, !dbg !856
  %cast.883 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.216, i64 0, i64 0, !dbg !856
  store %IPST.11* %cast.883, %IPST.11** %field.219, align 8, !dbg !856
  %field.220 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.44, i64 0, i32 1, !dbg !856
  store i64 1, i64* %field.220, align 8, !dbg !856
  %field.221 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.44, i64 0, i32 2, !dbg !856
  store i64 1, i64* %field.221, align 8, !dbg !856
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([72 x i8]* @const.125 to i64), i64 71, %IPST.3* byval nonnull %tmp.44), !dbg !856
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([63 x i8]* @const.127 to i64), i64 62, %IPST.3* byval nonnull @const.122), !dbg !857
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([2 x i8]* @const.120 to i64), i64 1, %IPST.3* byval nonnull @const.122), !dbg !858
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([77 x i8]* @const.129 to i64), i64 76, %IPST.3* byval nonnull @const.122), !dbg !859
  %call.65 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !860
  %cast.891 = bitcast { i8*, i64 }* %tmpv.221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.891, i8* align 8 bitcast ({ i8*, i64 }* @github_com_spolu_warp.EnvWarp to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.65, i8* nonnull %cast.891), !dbg !860
  %tmp.45.sroa.0.0.cast.896.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.222, i64 0, i64 0, i32 0, !dbg !860
  store %_type.0* @string..d, %_type.0** %tmp.45.sroa.0.0.cast.896.sroa_idx, align 8, !dbg !860
  %tmp.45.sroa.2.0.cast.896.sroa_idx14 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.222, i64 0, i64 0, i32 1, !dbg !860
  store i8* %call.65, i8** %tmp.45.sroa.2.0.cast.896.sroa_idx14, align 8, !dbg !860
  %field.224 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.46, i64 0, i32 0, !dbg !860
  %cast.899 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.222, i64 0, i64 0, !dbg !860
  store %IPST.11* %cast.899, %IPST.11** %field.224, align 8, !dbg !860
  %field.225 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.46, i64 0, i32 1, !dbg !860
  store i64 1, i64* %field.225, align 8, !dbg !860
  %field.226 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.46, i64 0, i32 2, !dbg !860
  store i64 1, i64* %field.226, align 8, !dbg !860
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([75 x i8]* @const.131 to i64), i64 74, %IPST.3* byval nonnull %tmp.46), !dbg !860
  %call.66 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !861
  %cast.901 = bitcast { i8*, i64 }* %tmpv.224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.901, i8* align 8 bitcast ({ i8*, i64 }* @github_com_spolu_warp.EnvWarp to i8*), i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.66, i8* nonnull %cast.901), !dbg !861
  %tmp.47.sroa.0.0.cast.906.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.225, i64 0, i64 0, i32 0, !dbg !861
  store %_type.0* @string..d, %_type.0** %tmp.47.sroa.0.0.cast.906.sroa_idx, align 8, !dbg !861
  %tmp.47.sroa.2.0.cast.906.sroa_idx15 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.225, i64 0, i64 0, i32 1, !dbg !861
  store i8* %call.66, i8** %tmp.47.sroa.2.0.cast.906.sroa_idx15, align 8, !dbg !861
  %field.229 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.48, i64 0, i32 0, !dbg !861
  %cast.909 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.225, i64 0, i64 0, !dbg !861
  store %IPST.11* %cast.909, %IPST.11** %field.229, align 8, !dbg !861
  %field.230 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.48, i64 0, i32 1, !dbg !861
  store i64 1, i64* %field.230, align 8, !dbg !861
  %field.231 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.48, i64 0, i32 2, !dbg !861
  store i64 1, i64* %field.231, align 8, !dbg !861
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([73 x i8]* @const.133 to i64), i64 72, %IPST.3* byval nonnull %tmp.48), !dbg !861
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([33 x i8]* @const.135 to i64), i64 32, %IPST.3* byval nonnull @const.122), !dbg !862
  call void @github_com_spolu_warp_lib_out.Normf(i8* nest undef, i64 ptrtoint ([2 x i8]* @const.120 to i64), i64 1, %IPST.3* byval nonnull @const.122), !dbg !863
  %call.67 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([51 x i8]* @const.137 to i64), i64 50, %IPST.3* byval nonnull @const.122), !dbg !864
  %call.67.fca.0.extract = extractvalue { i64, i64 } %call.67, 0, !dbg !864
  %call.67.fca.1.extract = extractvalue { i64, i64 } %call.67, 1, !dbg !864
  %call.68 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.67.fca.0.extract, i64 %call.67.fca.1.extract), !dbg !865
  ret { i64, i64 } %call.68, !dbg !866
}

declare void @github_com_spolu_warp_lib_out.Normf(i8*, i64, i64, %IPST.3*) local_unnamed_addr #0

define { i64, i64 } @command_line_arguments.Session.DataC(i8* nest nocapture readnone %nest.10, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !867 {
entry:
  %tmpv.357 = alloca i8, align 1
  %tmpv.361 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !973, metadata !DIExpression()), !dbg !974
  store i8 0, i8* %tmpv.357, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !975, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !976
  call void @llvm.dbg.value(metadata i64 0, metadata !975, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !976
  %icmp.135 = icmp eq %Session.0* %ss, null, !dbg !977
  br i1 %icmp.135, label %then.116, label %fallthrough.116

finally.1:                                        ; preds = %fallthrough.118, %pad.2, %catchpad.1
  %"$ret16.sroa.5.1" = phi i64 [ 0, %catchpad.1 ], [ %"$ret16.sroa.5.0.copyload", %fallthrough.118 ], [ 0, %pad.2 ]
  %"$ret16.sroa.0.1" = phi i64 [ 0, %catchpad.1 ], [ %"$ret16.sroa.0.0.copyload", %fallthrough.118 ], [ 0, %pad.2 ]
  %ehtmp.1.sroa.0.0 = phi i8* [ %ex2.1.fca.0.extract, %catchpad.1 ], [ undef, %fallthrough.118 ], [ undef, %pad.2 ]
  %ehtmp.1.sroa.2.0 = phi i32 [ %ex2.1.fca.1.extract, %catchpad.1 ], [ undef, %fallthrough.118 ], [ undef, %pad.2 ]
  %finvar.1.0 = phi i8 [ 0, %catchpad.1 ], [ 1, %fallthrough.118 ], [ 1, %pad.2 ]
  call void @llvm.dbg.value(metadata i64 %"$ret16.sroa.0.1", metadata !975, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !976
  call void @llvm.dbg.value(metadata i64 %"$ret16.sroa.5.1", metadata !975, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !976
  br label %finish.1

pad.2:                                            ; preds = %fallthrough.117, %fallthrough.116, %then.116
  %ex.2 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.357)
          to label %finally.1 unwind label %catchpad.1, !dbg !978

then.116:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.116 unwind label %pad.2, !dbg !977

fallthrough.116:                                  ; preds = %entry, %then.116
  %field.386 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !977
  %.field.ld.27 = load %Mutex.0*, %Mutex.0** %field.386, align 8, !dbg !977
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.27)
          to label %fallthrough.117 unwind label %pad.2, !dbg !979

fallthrough.117:                                  ; preds = %fallthrough.116
  %0 = bitcast %Mutex.0** %field.386 to i64*, !dbg !980
  %.field.ld.286 = load i64, i64* %0, align 8, !dbg !980
  %cast.1519 = bitcast { %Mutex.0* }* %tmpv.361 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.361 to i64*, !dbg !981
  store i64 %.field.ld.286, i64* %1, align 8, !dbg !981
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.357, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk1 to %__go_descriptor.47*), i8* nonnull %cast.1519)
          to label %fallthrough.118 unwind label %pad.2, !dbg !981

fallthrough.118:                                  ; preds = %fallthrough.117
  %"$ret16.sroa.0.0.cast.1525.sroa_idx" = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 12, !dbg !982
  %"$ret16.sroa.0.0.cast.1525.sroa_cast" = bitcast %Conn.0* %"$ret16.sroa.0.0.cast.1525.sroa_idx" to i64*, !dbg !982
  %"$ret16.sroa.0.0.copyload" = load i64, i64* %"$ret16.sroa.0.0.cast.1525.sroa_cast", align 8, !dbg !982
  call void @llvm.dbg.value(metadata i64 %"$ret16.sroa.0.0.copyload", metadata !975, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !976
  %"$ret16.sroa.5.0.cast.1525.sroa_idx3" = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 12, i32 1, !dbg !982
  %"$ret16.sroa.5.0.cast.1525.sroa_cast" = bitcast i8** %"$ret16.sroa.5.0.cast.1525.sroa_idx3" to i64*, !dbg !982
  %"$ret16.sroa.5.0.copyload" = load i64, i64* %"$ret16.sroa.5.0.cast.1525.sroa_cast", align 8, !dbg !982
  call void @llvm.dbg.value(metadata i64 %"$ret16.sroa.5.0.copyload", metadata !975, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !976
  br label %finally.1

catchpad.1:                                       ; preds = %pad.2
  %ex2.1 = landingpad { i8*, i32 }
          cleanup
  %ex2.1.fca.0.extract = extractvalue { i8*, i32 } %ex2.1, 0
  %ex2.1.fca.1.extract = extractvalue { i8*, i32 } %ex2.1, 1
  br label %finally.1

pad.3:                                            ; preds = %finish.1
  %ex.3 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.357), !dbg !978
  br label %finish.1

finish.1:                                         ; preds = %pad.3, %finally.1
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.357)
          to label %cont.36 unwind label %pad.3, !dbg !978

cont.36:                                          ; preds = %finish.1
  %icmp.138 = icmp eq i8 %finvar.1.0, 1
  br i1 %icmp.138, label %finret.1, label %finres.1

finres.1:                                         ; preds = %cont.36
  %excv.1.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.1.sroa.0.0, 0
  %excv.1.fca.1.insert = insertvalue { i8*, i32 } %excv.1.fca.0.insert, i32 %ehtmp.1.sroa.2.0, 1
  resume { i8*, i32 } %excv.1.fca.1.insert

finret.1:                                         ; preds = %cont.36
  %ld.175.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret16.sroa.0.1", 0, !dbg !982
  %ld.175.fca.1.insert = insertvalue { i64, i64 } %ld.175.fca.0.insert, i64 %"$ret16.sroa.5.1", 1, !dbg !982
  ret { i64, i64 } %ld.175.fca.1.insert, !dbg !982
}

define void @command_line_arguments.Session.DecodeError({ %Error.0*, %error.0 }* nocapture sret %sret.formal.10, i8* nest nocapture readnone %nest.24, %Session.0* readonly %ss, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !983 {
entry:
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !991, metadata !DIExpression()), !dbg !992
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !993, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !994
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !993, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !994
  call void @llvm.dbg.value(metadata %Error.0* null, metadata !995, metadata !DIExpression()), !dbg !996
  %call.103 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Error..d, i64 0, i32 0)), !dbg !997
  call void @llvm.dbg.value(metadata i8* %call.103, metadata !999, metadata !DIExpression()), !dbg !1000
  %icmp.201 = icmp eq %Session.0* %ss, null, !dbg !1001
  br i1 %icmp.201, label %then.168, label %else.168

then.168:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1001
  unreachable

else.168:                                         ; preds = %entry
  %field.460 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 11, !dbg !1001
  %.field.ld.71 = load %Decoder.0*, %Decoder.0** %field.460, align 8, !dbg !1001
  %0 = ptrtoint i8* %call.103 to i64, !dbg !1003
  %call.104 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %.field.ld.71, i64 ptrtoint (%PtrType.0* @type...1github_com_spolu_warp.Error to i64), i64 %0), !dbg !1004
  %call.104.fca.0.extract = extractvalue { i64, i64 } %call.104, 0, !dbg !1004
  call void @llvm.dbg.value(metadata i64 %call.104.fca.0.extract, metadata !1005, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1006
  %icmp.202 = icmp eq i64 %call.104.fca.0.extract, 0, !dbg !1007
  br i1 %icmp.202, label %else.169, label %then.169

then.169:                                         ; preds = %else.168
  %call.104.fca.1.extract = extractvalue { i64, i64 } %call.104, 1, !dbg !1004
  call void @llvm.dbg.value(metadata i64 %call.104.fca.1.extract, metadata !1005, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1006
  %call.105 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.104.fca.0.extract, i64 %call.104.fca.1.extract), !dbg !1008
  %call.105.fca.0.extract = extractvalue { i64, i64 } %call.105, 0, !dbg !1008
  %call.105.fca.1.extract = extractvalue { i64, i64 } %call.105, 1, !dbg !1008
  call void @llvm.dbg.value(metadata %Error.0* null, metadata !995, metadata !DIExpression()), !dbg !996
  call void @llvm.dbg.value(metadata i64 %call.105.fca.0.extract, metadata !1009, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1010
  call void @llvm.dbg.value(metadata i64 %call.105.fca.1.extract, metadata !1009, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1010
  %tmp.77.sroa.0.0.cast.1758.sroa_idx = getelementptr inbounds { %Error.0*, %error.0 }, { %Error.0*, %error.0 }* %sret.formal.10, i64 0, i32 0, !dbg !1011
  store %Error.0* null, %Error.0** %tmp.77.sroa.0.0.cast.1758.sroa_idx, align 8, !dbg !1011
  %tmp.77.sroa.2.0.cast.1758.sroa_idx26 = getelementptr inbounds { %Error.0*, %error.0 }, { %Error.0*, %error.0 }* %sret.formal.10, i64 0, i32 1, !dbg !1011
  %tmp.77.sroa.2.0.cast.1758.sroa_cast = bitcast %error.0* %tmp.77.sroa.2.0.cast.1758.sroa_idx26 to i64*, !dbg !1011
  store i64 %call.105.fca.0.extract, i64* %tmp.77.sroa.2.0.cast.1758.sroa_cast, align 8, !dbg !1011
  %tmp.77.sroa.3.0.cast.1758.sroa_idx27 = getelementptr inbounds { %Error.0*, %error.0 }, { %Error.0*, %error.0 }* %sret.formal.10, i64 0, i32 1, i32 1, !dbg !1011
  %tmp.77.sroa.3.0.cast.1758.sroa_cast = bitcast i8** %tmp.77.sroa.3.0.cast.1758.sroa_idx27 to i64*, !dbg !1011
  store i64 %call.105.fca.1.extract, i64* %tmp.77.sroa.3.0.cast.1758.sroa_cast, align 8, !dbg !1011
  ret void, !dbg !1011

else.169:                                         ; preds = %else.168
  call void @llvm.dbg.value(metadata i8* %call.103, metadata !995, metadata !DIExpression()), !dbg !996
  call void @llvm.dbg.value(metadata i64 0, metadata !1009, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1010
  call void @llvm.dbg.value(metadata i64 0, metadata !1009, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1010
  %1 = bitcast { %Error.0*, %error.0 }* %sret.formal.10 to i8**, !dbg !1012
  store i8* %call.103, i8** %1, align 8, !dbg !1012
  %tmp.78.sroa.2.0.cast.1767.sroa_idx28 = getelementptr inbounds { %Error.0*, %error.0 }, { %Error.0*, %error.0 }* %sret.formal.10, i64 0, i32 1, !dbg !1012
  %2 = bitcast %error.0* %tmp.78.sroa.2.0.cast.1767.sroa_idx28 to i8*, !dbg !1012
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !1012
  ret void, !dbg !1012
}

define void @command_line_arguments.Session.DecodeState({ %State.0*, %error.0 }* nocapture sret %sret.formal.11, i8* nest nocapture readnone %nest.25, %Session.0* readonly %ss, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !1013 {
entry:
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1021, metadata !DIExpression()), !dbg !1022
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1023, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1024
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1023, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1024
  call void @llvm.dbg.value(metadata %State.0* null, metadata !1025, metadata !DIExpression()), !dbg !1026
  %call.106 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.State..d, i64 0, i32 0)), !dbg !1027
  call void @llvm.dbg.value(metadata i8* %call.106, metadata !1029, metadata !DIExpression()), !dbg !1030
  %icmp.203 = icmp eq %Session.0* %ss, null, !dbg !1031
  br i1 %icmp.203, label %then.170, label %else.170

then.170:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1031
  unreachable

else.170:                                         ; preds = %entry
  %field.468 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 7, !dbg !1031
  %.field.ld.72 = load %Decoder.0*, %Decoder.0** %field.468, align 8, !dbg !1031
  %0 = ptrtoint i8* %call.106 to i64, !dbg !1033
  %call.107 = call { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %.field.ld.72, i64 ptrtoint (%PtrType.0* @type...1github_com_spolu_warp.State to i64), i64 %0), !dbg !1034
  %call.107.fca.0.extract = extractvalue { i64, i64 } %call.107, 0, !dbg !1034
  call void @llvm.dbg.value(metadata i64 %call.107.fca.0.extract, metadata !1035, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1036
  %icmp.204 = icmp eq i64 %call.107.fca.0.extract, 0, !dbg !1037
  br i1 %icmp.204, label %else.171, label %then.171

then.171:                                         ; preds = %else.170
  %call.107.fca.1.extract = extractvalue { i64, i64 } %call.107, 1, !dbg !1034
  call void @llvm.dbg.value(metadata i64 %call.107.fca.1.extract, metadata !1035, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1036
  %call.108 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.107.fca.0.extract, i64 %call.107.fca.1.extract), !dbg !1038
  %call.108.fca.0.extract = extractvalue { i64, i64 } %call.108, 0, !dbg !1038
  %call.108.fca.1.extract = extractvalue { i64, i64 } %call.108, 1, !dbg !1038
  call void @llvm.dbg.value(metadata %State.0* null, metadata !1025, metadata !DIExpression()), !dbg !1026
  call void @llvm.dbg.value(metadata i64 %call.108.fca.0.extract, metadata !1039, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1040
  call void @llvm.dbg.value(metadata i64 %call.108.fca.1.extract, metadata !1039, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1040
  %tmp.80.sroa.0.0.cast.1790.sroa_idx = getelementptr inbounds { %State.0*, %error.0 }, { %State.0*, %error.0 }* %sret.formal.11, i64 0, i32 0, !dbg !1041
  store %State.0* null, %State.0** %tmp.80.sroa.0.0.cast.1790.sroa_idx, align 8, !dbg !1041
  %tmp.80.sroa.2.0.cast.1790.sroa_idx26 = getelementptr inbounds { %State.0*, %error.0 }, { %State.0*, %error.0 }* %sret.formal.11, i64 0, i32 1, !dbg !1041
  %tmp.80.sroa.2.0.cast.1790.sroa_cast = bitcast %error.0* %tmp.80.sroa.2.0.cast.1790.sroa_idx26 to i64*, !dbg !1041
  store i64 %call.108.fca.0.extract, i64* %tmp.80.sroa.2.0.cast.1790.sroa_cast, align 8, !dbg !1041
  %tmp.80.sroa.3.0.cast.1790.sroa_idx27 = getelementptr inbounds { %State.0*, %error.0 }, { %State.0*, %error.0 }* %sret.formal.11, i64 0, i32 1, i32 1, !dbg !1041
  %tmp.80.sroa.3.0.cast.1790.sroa_cast = bitcast i8** %tmp.80.sroa.3.0.cast.1790.sroa_idx27 to i64*, !dbg !1041
  store i64 %call.108.fca.1.extract, i64* %tmp.80.sroa.3.0.cast.1790.sroa_cast, align 8, !dbg !1041
  ret void, !dbg !1041

else.171:                                         ; preds = %else.170
  call void @llvm.dbg.value(metadata i8* %call.106, metadata !1025, metadata !DIExpression()), !dbg !1026
  call void @llvm.dbg.value(metadata i64 0, metadata !1039, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1040
  call void @llvm.dbg.value(metadata i64 0, metadata !1039, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1040
  %1 = bitcast { %State.0*, %error.0 }* %sret.formal.11 to i8**, !dbg !1042
  store i8* %call.106, i8** %1, align 8, !dbg !1042
  %tmp.81.sroa.2.0.cast.1799.sroa_idx28 = getelementptr inbounds { %State.0*, %error.0 }, { %State.0*, %error.0 }* %sret.formal.11, i64 0, i32 1, !dbg !1042
  %2 = bitcast %error.0* %tmp.81.sroa.2.0.cast.1799.sroa_idx28 to i8*, !dbg !1042
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !1042
  ret void, !dbg !1042
}

define void @command_line_arguments.Session.GetMode({ i64*, %error.0 }* nocapture sret %sret.formal.9, i8* nest nocapture readnone %nest.15, %Session.0* readonly %ss, i64 %user.chunk0, i64 %user.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1043 {
entry:
  %"$ret21" = alloca %error.0, align 8
  %tmpv.396 = alloca i8, align 1
  %tmpv.400 = alloca { %Mutex.0* }, align 8
  %sret.actual.73 = alloca { i64*, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1052, metadata !DIExpression()), !dbg !1053
  call void @llvm.dbg.value(metadata i64 %user.chunk0, metadata !1054, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1055
  call void @llvm.dbg.value(metadata i64 %user.chunk1, metadata !1054, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1055
  %"$ret21.0.sroa_cast6" = bitcast %error.0* %"$ret21" to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %"$ret21.0.sroa_cast6")
  store i8 0, i8* %tmpv.396, align 1
  call void @llvm.dbg.value(metadata i64* null, metadata !1056, metadata !DIExpression()), !dbg !1057
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret21.0.sroa_cast6", i8 0, i64 16, i1 false)
  %icmp.157 = icmp eq %Session.0* %ss, null, !dbg !1058
  br i1 %icmp.157, label %then.133, label %fallthrough.133

finally.6:                                        ; preds = %cont.73, %pad.12, %catchpad.6
  %"$ret20.1" = phi i64* [ null, %catchpad.6 ], [ %tmpv.402.sroa.0.0.copyload2, %cont.73 ], [ null, %pad.12 ]
  %ehtmp.6.sroa.0.0 = phi i8* [ %ex2.6.fca.0.extract, %catchpad.6 ], [ undef, %cont.73 ], [ undef, %pad.12 ]
  %ehtmp.6.sroa.2.0 = phi i32 [ %ex2.6.fca.1.extract, %catchpad.6 ], [ undef, %cont.73 ], [ undef, %pad.12 ]
  %finvar.6.0 = phi i8 [ 0, %catchpad.6 ], [ 1, %cont.73 ], [ 1, %pad.12 ]
  call void @llvm.dbg.value(metadata i64* %"$ret20.1", metadata !1056, metadata !DIExpression()), !dbg !1057
  br label %finish.6

pad.12:                                           ; preds = %fallthrough.135, %fallthrough.134, %fallthrough.133, %then.133
  %ex.12 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.396)
          to label %finally.6 unwind label %catchpad.6, !dbg !1059

then.133:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.133 unwind label %pad.12, !dbg !1058

fallthrough.133:                                  ; preds = %entry, %then.133
  %field.410 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1058
  %.field.ld.40 = load %Mutex.0*, %Mutex.0** %field.410, align 8, !dbg !1058
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.40)
          to label %fallthrough.134 unwind label %pad.12, !dbg !1060

fallthrough.134:                                  ; preds = %fallthrough.133
  %0 = bitcast %Mutex.0** %field.410 to i64*, !dbg !1061
  %.field.ld.418 = load i64, i64* %0, align 8, !dbg !1061
  %cast.1591 = bitcast { %Mutex.0* }* %tmpv.400 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.400 to i64*, !dbg !1062
  store i64 %.field.ld.418, i64* %1, align 8, !dbg !1062
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.396, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk6 to %__go_descriptor.47*), i8* nonnull %cast.1591)
          to label %fallthrough.135 unwind label %pad.12, !dbg !1062

fallthrough.135:                                  ; preds = %fallthrough.134
  %field.413 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !1063
  %.field.ld.42 = load %WarpState.0*, %WarpState.0** %field.413, align 8, !dbg !1063
  invoke void @command_line_arguments.WarpState.GetMode({ i64*, %error.0 }* nonnull sret %sret.actual.73, i8* nest undef, %WarpState.0* %.field.ld.42, i64 %user.chunk0, i64 %user.chunk1)
          to label %cont.73 unwind label %pad.12, !dbg !1064

cont.73:                                          ; preds = %fallthrough.135
  %tmpv.402.sroa.0.0.cast.1600.sroa_idx = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.73, i64 0, i32 0, !dbg !1064
  %tmpv.402.sroa.0.0.copyload2 = load i64*, i64** %tmpv.402.sroa.0.0.cast.1600.sroa_idx, align 8, !dbg !1064
  %tmpv.402.sroa.3.0.cast.1600.sroa_idx = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.73, i64 0, i32 1, !dbg !1064
  %tmpv.402.sroa.3.0.cast.1600.sroa_cast = bitcast %error.0* %tmpv.402.sroa.3.0.cast.1600.sroa_idx to i8*, !dbg !1064
  %"$ret2111" = bitcast %error.0* %"$ret21" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret2111", i8* nonnull align 8 %tmpv.402.sroa.3.0.cast.1600.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64* %tmpv.402.sroa.0.0.copyload2, metadata !1056, metadata !DIExpression()), !dbg !1057
  br label %finally.6

catchpad.6:                                       ; preds = %pad.12
  %ex2.6 = landingpad { i8*, i32 }
          cleanup
  %ex2.6.fca.0.extract = extractvalue { i8*, i32 } %ex2.6, 0
  %ex2.6.fca.1.extract = extractvalue { i8*, i32 } %ex2.6, 1
  br label %finally.6

pad.13:                                           ; preds = %finish.6
  %ex.13 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.396), !dbg !1059
  br label %finish.6

finish.6:                                         ; preds = %pad.13, %finally.6
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.396)
          to label %cont.75 unwind label %pad.13, !dbg !1059

cont.75:                                          ; preds = %finish.6
  %icmp.160 = icmp eq i8 %finvar.6.0, 1
  br i1 %icmp.160, label %finret.6, label %finres.6

finres.6:                                         ; preds = %cont.75
  %excv.6.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.6.sroa.0.0, 0
  %excv.6.fca.1.insert = insertvalue { i8*, i32 } %excv.6.fca.0.insert, i32 %ehtmp.6.sroa.2.0, 1
  resume { i8*, i32 } %excv.6.fca.1.insert

finret.6:                                         ; preds = %cont.75
  %tmp.73.sroa.0.0.cast.1609.sroa_idx = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.formal.9, i64 0, i32 0, !dbg !1065
  store i64* %"$ret20.1", i64** %tmp.73.sroa.0.0.cast.1609.sroa_idx, align 8, !dbg !1065
  %tmp.73.sroa.2.0.cast.1609.sroa_idx = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.formal.9, i64 0, i32 1, !dbg !1065
  %tmp.73.sroa.2.0.cast.1609.sroa_cast = bitcast %error.0* %tmp.73.sroa.2.0.cast.1609.sroa_idx to i8*, !dbg !1065
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.73.sroa.2.0.cast.1609.sroa_cast, i8* nonnull align 8 %"$ret21.0.sroa_cast6", i64 16, i1 false), !dbg !1065
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %"$ret21.0.sroa_cast6"), !dbg !1065
  ret void, !dbg !1065
}

define i8 @command_line_arguments.Session.HostCanReceiveWrite(i8* nest nocapture readnone %nest.18, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1066 {
entry:
  %tmpv.424 = alloca i8, align 1
  %tmpv.428 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1069, metadata !DIExpression()), !dbg !1070
  store i8 0, i8* %tmpv.424, align 1
  call void @llvm.dbg.value(metadata i8 0, metadata !1071, metadata !DIExpression()), !dbg !1072
  %icmp.169 = icmp eq %Session.0* %ss, null, !dbg !1073
  br i1 %icmp.169, label %then.142, label %fallthrough.142

finally.9:                                        ; preds = %fallthrough.144, %pad.18, %catchpad.9
  %"$ret24.1" = phi i8 [ 0, %catchpad.9 ], [ 0, %pad.18 ], [ %call.96, %fallthrough.144 ]
  %ehtmp.9.sroa.0.0 = phi i8* [ %ex2.9.fca.0.extract, %catchpad.9 ], [ undef, %pad.18 ], [ undef, %fallthrough.144 ]
  %ehtmp.9.sroa.2.0 = phi i32 [ %ex2.9.fca.1.extract, %catchpad.9 ], [ undef, %pad.18 ], [ undef, %fallthrough.144 ]
  %finvar.9.0 = phi i8 [ 0, %catchpad.9 ], [ 1, %pad.18 ], [ 1, %fallthrough.144 ]
  call void @llvm.dbg.value(metadata i8 %"$ret24.1", metadata !1071, metadata !DIExpression()), !dbg !1072
  br label %finish.9

pad.18:                                           ; preds = %fallthrough.144, %fallthrough.143, %fallthrough.142, %then.142
  %ex.18 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.424)
          to label %finally.9 unwind label %catchpad.9, !dbg !1074

then.142:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.142 unwind label %pad.18, !dbg !1073

fallthrough.142:                                  ; preds = %entry, %then.142
  %field.428 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1073
  %.field.ld.49 = load %Mutex.0*, %Mutex.0** %field.428, align 8, !dbg !1073
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.49)
          to label %fallthrough.143 unwind label %pad.18, !dbg !1075

fallthrough.143:                                  ; preds = %fallthrough.142
  %0 = bitcast %Mutex.0** %field.428 to i64*, !dbg !1076
  %.field.ld.501 = load i64, i64* %0, align 8, !dbg !1076
  %cast.1654 = bitcast { %Mutex.0* }* %tmpv.428 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.428 to i64*, !dbg !1077
  store i64 %.field.ld.501, i64* %1, align 8, !dbg !1077
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.424, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk9 to %__go_descriptor.47*), i8* nonnull %cast.1654)
          to label %fallthrough.144 unwind label %pad.18, !dbg !1077

fallthrough.144:                                  ; preds = %fallthrough.143
  %field.431 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !1078
  %.field.ld.51 = load %WarpState.0*, %WarpState.0** %field.431, align 8, !dbg !1078
  %call.96 = invoke i8 @command_line_arguments.WarpState.HostCanReceiveWrite(i8* nest undef, %WarpState.0* %.field.ld.51)
          to label %finally.9 unwind label %pad.18, !dbg !1079

catchpad.9:                                       ; preds = %pad.18
  %ex2.9 = landingpad { i8*, i32 }
          cleanup
  %ex2.9.fca.0.extract = extractvalue { i8*, i32 } %ex2.9, 0
  %ex2.9.fca.1.extract = extractvalue { i8*, i32 } %ex2.9, 1
  br label %finally.9

pad.19:                                           ; preds = %finish.9
  %ex.19 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.424), !dbg !1074
  br label %finish.9

finish.9:                                         ; preds = %pad.19, %finally.9
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.424)
          to label %cont.99 unwind label %pad.19, !dbg !1074

cont.99:                                          ; preds = %finish.9
  %icmp.172 = icmp eq i8 %finvar.9.0, 1
  br i1 %icmp.172, label %finret.9, label %finres.9

finres.9:                                         ; preds = %cont.99
  %excv.9.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.9.sroa.0.0, 0
  %excv.9.fca.1.insert = insertvalue { i8*, i32 } %excv.9.fca.0.insert, i32 %ehtmp.9.sroa.2.0, 1
  resume { i8*, i32 } %excv.9.fca.1.insert

finret.9:                                         ; preds = %cont.99
  ret i8 %"$ret24.1", !dbg !1080
}

define { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.Session.Modes(i8* nest nocapture readnone %nest.20, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1081 {
entry:
  %tmpv.440 = alloca i8, align 1
  %tmpv.444 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1084, metadata !DIExpression()), !dbg !1085
  store i8 0, i8* %tmpv.440, align 1
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1086, metadata !DIExpression()), !dbg !1087
  %icmp.177 = icmp eq %Session.0* %ss, null, !dbg !1088
  br i1 %icmp.177, label %then.148, label %fallthrough.148

finally.11:                                       ; preds = %fallthrough.150, %pad.22, %catchpad.11
  %"$ret26.1" = phi { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* [ null, %catchpad.11 ], [ null, %pad.22 ], [ %call.98, %fallthrough.150 ]
  %ehtmp.11.sroa.0.0 = phi i8* [ %ex2.11.fca.0.extract, %catchpad.11 ], [ undef, %pad.22 ], [ undef, %fallthrough.150 ]
  %ehtmp.11.sroa.2.0 = phi i32 [ %ex2.11.fca.1.extract, %catchpad.11 ], [ undef, %pad.22 ], [ undef, %fallthrough.150 ]
  %finvar.11.0 = phi i8 [ 0, %catchpad.11 ], [ 1, %pad.22 ], [ 1, %fallthrough.150 ]
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %"$ret26.1", metadata !1086, metadata !DIExpression()), !dbg !1087
  br label %finish.11

pad.22:                                           ; preds = %fallthrough.150, %fallthrough.149, %fallthrough.148, %then.148
  %ex.22 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.440)
          to label %finally.11 unwind label %catchpad.11, !dbg !1089

then.148:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.148 unwind label %pad.22, !dbg !1088

fallthrough.148:                                  ; preds = %entry, %then.148
  %field.436 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1088
  %.field.ld.55 = load %Mutex.0*, %Mutex.0** %field.436, align 8, !dbg !1088
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.55)
          to label %fallthrough.149 unwind label %pad.22, !dbg !1090

fallthrough.149:                                  ; preds = %fallthrough.148
  %0 = bitcast %Mutex.0** %field.436 to i64*, !dbg !1091
  %.field.ld.562 = load i64, i64* %0, align 8, !dbg !1091
  %cast.1677 = bitcast { %Mutex.0* }* %tmpv.444 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.444 to i64*, !dbg !1092
  store i64 %.field.ld.562, i64* %1, align 8, !dbg !1092
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.440, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk11 to %__go_descriptor.47*), i8* nonnull %cast.1677)
          to label %fallthrough.150 unwind label %pad.22, !dbg !1092

fallthrough.150:                                  ; preds = %fallthrough.149
  %field.439 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !1093
  %.field.ld.57 = load %WarpState.0*, %WarpState.0** %field.439, align 8, !dbg !1093
  %call.98 = invoke { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.WarpState.Modes(i8* nest undef, %WarpState.0* %.field.ld.57)
          to label %finally.11 unwind label %pad.22, !dbg !1094

catchpad.11:                                      ; preds = %pad.22
  %ex2.11 = landingpad { i8*, i32 }
          cleanup
  %ex2.11.fca.0.extract = extractvalue { i8*, i32 } %ex2.11, 0
  %ex2.11.fca.1.extract = extractvalue { i8*, i32 } %ex2.11, 1
  br label %finally.11

pad.23:                                           ; preds = %finish.11
  %ex.23 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.440), !dbg !1089
  br label %finish.11

finish.11:                                        ; preds = %pad.23, %finally.11
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.440)
          to label %cont.115 unwind label %pad.23, !dbg !1089

cont.115:                                         ; preds = %finish.11
  %icmp.180 = icmp eq i8 %finvar.11.0, 1
  br i1 %icmp.180, label %finret.11, label %finres.11

finres.11:                                        ; preds = %cont.115
  %excv.11.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.11.sroa.0.0, 0
  %excv.11.fca.1.insert = insertvalue { i8*, i32 } %excv.11.fca.0.insert, i32 %ehtmp.11.sroa.2.0, 1
  resume { i8*, i32 } %excv.11.fca.1.insert

finret.11:                                        ; preds = %cont.115
  ret { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %"$ret26.1", !dbg !1095
}

define void @command_line_arguments.Session.ProtocolState(%State.0* nocapture sret %sret.formal.8, i8* nest nocapture readnone %nest.14, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1096 {
entry:
  %"$ret19" = alloca %State.0, align 8
  %tmpv.388 = alloca i8, align 1
  %tmpv.392 = alloca { %Mutex.0* }, align 8
  %sret.actual.72 = alloca %State.0, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1099, metadata !DIExpression()), !dbg !1100
  %"$ret19.0.sroa_cast" = bitcast %State.0* %"$ret19" to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %"$ret19.0.sroa_cast")
  store i8 0, i8* %tmpv.388, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret19.0.sroa_cast", i8 0, i64 40, i1 false)
  %icmp.153 = icmp eq %Session.0* %ss, null, !dbg !1101
  br i1 %icmp.153, label %then.130, label %fallthrough.130

finally.5:                                        ; preds = %cont.65, %pad.10, %catchpad.5
  %ehtmp.5.sroa.0.0 = phi i8* [ %ex2.5.fca.0.extract, %catchpad.5 ], [ undef, %pad.10 ], [ undef, %cont.65 ]
  %ehtmp.5.sroa.2.0 = phi i32 [ %ex2.5.fca.1.extract, %catchpad.5 ], [ undef, %pad.10 ], [ undef, %cont.65 ]
  %finvar.5.0 = phi i8 [ 0, %catchpad.5 ], [ 1, %pad.10 ], [ 1, %cont.65 ]
  br label %finish.5

pad.10:                                           ; preds = %fallthrough.132, %fallthrough.131, %fallthrough.130, %then.130
  %ex.10 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.388)
          to label %finally.5 unwind label %catchpad.5, !dbg !1102

then.130:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.130 unwind label %pad.10, !dbg !1101

fallthrough.130:                                  ; preds = %entry, %then.130
  %field.406 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1101
  %.field.ld.37 = load %Mutex.0*, %Mutex.0** %field.406, align 8, !dbg !1101
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.37)
          to label %fallthrough.131 unwind label %pad.10, !dbg !1103

fallthrough.131:                                  ; preds = %fallthrough.130
  %0 = bitcast %Mutex.0** %field.406 to i64*, !dbg !1104
  %.field.ld.382 = load i64, i64* %0, align 8, !dbg !1104
  %cast.1574 = bitcast { %Mutex.0* }* %tmpv.392 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.392 to i64*, !dbg !1105
  store i64 %.field.ld.382, i64* %1, align 8, !dbg !1105
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.388, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk5 to %__go_descriptor.47*), i8* nonnull %cast.1574)
          to label %fallthrough.132 unwind label %pad.10, !dbg !1105

fallthrough.132:                                  ; preds = %fallthrough.131
  %field.409 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !1106
  %.field.ld.39 = load %WarpState.0*, %WarpState.0** %field.409, align 8, !dbg !1106
  invoke void @command_line_arguments.WarpState.ProtocolState(%State.0* nonnull sret %sret.actual.72, i8* nest undef, %WarpState.0* %.field.ld.39)
          to label %cont.65 unwind label %pad.10, !dbg !1107

cont.65:                                          ; preds = %fallthrough.132
  %cast.1580 = bitcast %State.0* %sret.actual.72 to i8*
  %"$ret195" = bitcast %State.0* %"$ret19" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret195", i8* nonnull align 8 %cast.1580, i64 40, i1 false)
  br label %finally.5

catchpad.5:                                       ; preds = %pad.10
  %ex2.5 = landingpad { i8*, i32 }
          cleanup
  %ex2.5.fca.0.extract = extractvalue { i8*, i32 } %ex2.5, 0
  %ex2.5.fca.1.extract = extractvalue { i8*, i32 } %ex2.5, 1
  br label %finally.5

pad.11:                                           ; preds = %finish.5
  %ex.11 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.388), !dbg !1102
  br label %finish.5

finish.5:                                         ; preds = %pad.11, %finally.5
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.388)
          to label %cont.67 unwind label %pad.11, !dbg !1102

cont.67:                                          ; preds = %finish.5
  %icmp.156 = icmp eq i8 %finvar.5.0, 1
  br i1 %icmp.156, label %finret.5, label %finres.5

finres.5:                                         ; preds = %cont.67
  %excv.5.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.5.sroa.0.0, 0
  %excv.5.fca.1.insert = insertvalue { i8*, i32 } %excv.5.fca.0.insert, i32 %ehtmp.5.sroa.2.0, 1
  resume { i8*, i32 } %excv.5.fca.1.insert

finret.5:                                         ; preds = %cont.67
  %cast.1583 = bitcast %State.0* %sret.formal.8 to i8*, !dbg !1108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1583, i8* nonnull align 8 %"$ret19.0.sroa_cast", i64 40, i1 false), !dbg !1108
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %"$ret19.0.sroa_cast"), !dbg !1108
  ret void, !dbg !1108
}

define { i64, i64 } @command_line_arguments.Session.SendHostUpdate(i8* nest nocapture readnone %nest.23, %Session.0* readonly %ss, i64 %ctx.chunk0, i64 %ctx.chunk1, %HostUpdate.0* byval nocapture readonly %update) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1109 {
entry:
  call void @llvm.dbg.declare(metadata %HostUpdate.0* %update, metadata !1117, metadata !DIExpression()), !dbg !1118
  %tmpv.466 = alloca i8, align 1
  %tmpv.470 = alloca { %Mutex.0* }, align 8
  %tmpv.473 = alloca %HostUpdate.0, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1119, metadata !DIExpression()), !dbg !1120
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1121, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1122
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1121, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1122
  store i8 0, i8* %tmpv.466, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1123, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1124
  call void @llvm.dbg.value(metadata i64 0, metadata !1123, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1124
  %icmp.194 = icmp eq %Session.0* %ss, null, !dbg !1125
  br i1 %icmp.194, label %then.162, label %fallthrough.162

finally.14:                                       ; preds = %cont.144, %fallthrough.164, %cont.145, %pad.28, %catchpad.14
  %"$ret28.sroa.0.1" = phi i64 [ 0, %catchpad.14 ], [ %call.102.fca.0.extract, %cont.145 ], [ 0, %pad.28 ], [ 0, %fallthrough.164 ], [ 0, %cont.144 ]
  %"$ret28.sroa.6.1" = phi i64 [ 0, %catchpad.14 ], [ %call.102.fca.1.extract, %cont.145 ], [ 0, %pad.28 ], [ 0, %fallthrough.164 ], [ 0, %cont.144 ]
  %ehtmp.14.sroa.0.0 = phi i8* [ %ex2.14.fca.0.extract, %catchpad.14 ], [ undef, %cont.145 ], [ undef, %pad.28 ], [ undef, %fallthrough.164 ], [ undef, %cont.144 ]
  %ehtmp.14.sroa.2.0 = phi i32 [ %ex2.14.fca.1.extract, %catchpad.14 ], [ undef, %cont.145 ], [ undef, %pad.28 ], [ undef, %fallthrough.164 ], [ undef, %cont.144 ]
  %finvar.14.0 = phi i8 [ 0, %catchpad.14 ], [ 1, %cont.145 ], [ 1, %pad.28 ], [ 1, %fallthrough.164 ], [ 1, %cont.144 ]
  call void @llvm.dbg.value(metadata i64 %"$ret28.sroa.6.1", metadata !1123, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1124
  call void @llvm.dbg.value(metadata i64 %"$ret28.sroa.0.1", metadata !1123, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1124
  br label %finish.14

pad.28:                                           ; preds = %then.167, %cont.143, %cont.142, %fallthrough.166, %fallthrough.163, %fallthrough.162, %then.162
  %ex.28 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.466)
          to label %finally.14 unwind label %catchpad.14, !dbg !1126

then.162:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.162 unwind label %pad.28, !dbg !1125

fallthrough.162:                                  ; preds = %entry, %then.162
  %field.452 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1125
  %.field.ld.67 = load %Mutex.0*, %Mutex.0** %field.452, align 8, !dbg !1125
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.67)
          to label %fallthrough.163 unwind label %pad.28, !dbg !1127

fallthrough.163:                                  ; preds = %fallthrough.162
  %0 = bitcast %Mutex.0** %field.452 to i64*, !dbg !1128
  %.field.ld.6811 = load i64, i64* %0, align 8, !dbg !1128
  %cast.1706 = bitcast { %Mutex.0* }* %tmpv.470 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.470 to i64*, !dbg !1129
  store i64 %.field.ld.6811, i64* %1, align 8, !dbg !1129
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.466, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk14 to %__go_descriptor.47*), i8* nonnull %cast.1706)
          to label %fallthrough.164 unwind label %pad.28, !dbg !1129

fallthrough.164:                                  ; preds = %fallthrough.163
  %field.459 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 14, !dbg !1130
  %.field.ld.70 = load i8, i8* %field.459, align 1, !dbg !1130
  %icmp.199 = icmp eq i8 %.field.ld.70, 0, !dbg !1131
  br i1 %icmp.199, label %fallthrough.166, label %finally.14

fallthrough.166:                                  ; preds = %fallthrough.164
  %field.455 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 9, !dbg !1132
  %.field.ld.69 = load %Encoder.0*, %Encoder.0** %field.455, align 8, !dbg !1132
  %call.100 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.HostUpdate..d, i64 0, i32 0))
          to label %cont.142 unwind label %pad.28, !dbg !1134

cont.142:                                         ; preds = %fallthrough.166
  %cast.1712 = bitcast %HostUpdate.0* %tmpv.473 to i8*
  %cast.1713 = bitcast %HostUpdate.0* %update to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1712, i8* nonnull align 8 %cast.1713, i64 88, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.HostUpdate..d, i64 0, i32 0), i8* %call.100, i8* nonnull %cast.1712)
          to label %cont.143 unwind label %pad.28, !dbg !1134

cont.143:                                         ; preds = %cont.142
  %2 = ptrtoint i8* %call.100 to i64, !dbg !1134
  %call.101 = invoke { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %.field.ld.69, i64 ptrtoint (%StructType.0* @github_com_spolu_warp.HostUpdate..d to i64), i64 %2)
          to label %cont.144 unwind label %pad.28, !dbg !1135

cont.144:                                         ; preds = %cont.143
  %call.101.fca.0.extract = extractvalue { i64, i64 } %call.101, 0, !dbg !1135
  call void @llvm.dbg.value(metadata i64 %call.101.fca.0.extract, metadata !1136, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1137
  %icmp.197 = icmp eq i64 %call.101.fca.0.extract, 0, !dbg !1138
  br i1 %icmp.197, label %finally.14, label %then.167

then.167:                                         ; preds = %cont.144
  %call.101.fca.1.extract = extractvalue { i64, i64 } %call.101, 1, !dbg !1135
  call void @llvm.dbg.value(metadata i64 %call.101.fca.1.extract, metadata !1136, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1137
  %call.102 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.101.fca.0.extract, i64 %call.101.fca.1.extract)
          to label %cont.145 unwind label %pad.28, !dbg !1139

cont.145:                                         ; preds = %then.167
  %call.102.fca.0.extract = extractvalue { i64, i64 } %call.102, 0, !dbg !1139
  %call.102.fca.1.extract = extractvalue { i64, i64 } %call.102, 1, !dbg !1139
  call void @llvm.dbg.value(metadata i64 %call.102.fca.0.extract, metadata !1123, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1124
  call void @llvm.dbg.value(metadata i64 %call.102.fca.1.extract, metadata !1123, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1124
  br label %finally.14

catchpad.14:                                      ; preds = %pad.28
  %ex2.14 = landingpad { i8*, i32 }
          cleanup
  %ex2.14.fca.0.extract = extractvalue { i8*, i32 } %ex2.14, 0
  %ex2.14.fca.1.extract = extractvalue { i8*, i32 } %ex2.14, 1
  br label %finally.14

pad.29:                                           ; preds = %finish.14
  %ex.29 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.466), !dbg !1126
  br label %finish.14

finish.14:                                        ; preds = %pad.29, %finally.14
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.466)
          to label %cont.147 unwind label %pad.29, !dbg !1126

cont.147:                                         ; preds = %finish.14
  %icmp.200 = icmp eq i8 %finvar.14.0, 1
  br i1 %icmp.200, label %finret.14, label %finres.14

finres.14:                                        ; preds = %cont.147
  %excv.14.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.14.sroa.0.0, 0
  %excv.14.fca.1.insert = insertvalue { i8*, i32 } %excv.14.fca.0.insert, i32 %ehtmp.14.sroa.2.0, 1
  resume { i8*, i32 } %excv.14.fca.1.insert

finret.14:                                        ; preds = %cont.147
  %ld.193.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret28.sroa.0.1", 0, !dbg !1140
  %ld.193.fca.1.insert = insertvalue { i64, i64 } %ld.193.fca.0.insert, i64 %"$ret28.sroa.6.1", 1, !dbg !1140
  ret { i64, i64 } %ld.193.fca.1.insert, !dbg !1140
}

define void @command_line_arguments.Session.Session(%Session.1* nocapture sret %sret.formal.7, i8* nest nocapture readnone %nest.13, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1141 {
entry:
  %"$ret18" = alloca %Session.1, align 8
  %tmpv.381 = alloca i8, align 1
  %tmpv.385 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1144, metadata !DIExpression()), !dbg !1145
  %"$ret18.0.sroa_cast" = bitcast %Session.1* %"$ret18" to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %"$ret18.0.sroa_cast")
  store i8 0, i8* %tmpv.381, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret18.0.sroa_cast", i8 0, i64 48, i1 false)
  %icmp.149 = icmp eq %Session.0* %ss, null, !dbg !1146
  br i1 %icmp.149, label %then.127, label %fallthrough.127

finally.4:                                        ; preds = %fallthrough.129, %pad.8, %catchpad.4
  %ehtmp.4.sroa.0.0 = phi i8* [ %ex2.4.fca.0.extract, %catchpad.4 ], [ undef, %pad.8 ], [ undef, %fallthrough.129 ]
  %ehtmp.4.sroa.2.0 = phi i32 [ %ex2.4.fca.1.extract, %catchpad.4 ], [ undef, %pad.8 ], [ undef, %fallthrough.129 ]
  %finvar.4.0 = phi i8 [ 0, %catchpad.4 ], [ 1, %pad.8 ], [ 1, %fallthrough.129 ]
  br label %finish.4

pad.8:                                            ; preds = %fallthrough.128, %fallthrough.127, %then.127
  %ex.8 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.381)
          to label %finally.4 unwind label %catchpad.4, !dbg !1147

then.127:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.127 unwind label %pad.8, !dbg !1146

fallthrough.127:                                  ; preds = %entry, %then.127
  %field.402 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1146
  %.field.ld.35 = load %Mutex.0*, %Mutex.0** %field.402, align 8, !dbg !1146
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.35)
          to label %fallthrough.128 unwind label %pad.8, !dbg !1148

fallthrough.128:                                  ; preds = %fallthrough.127
  %0 = bitcast %Mutex.0** %field.402 to i64*, !dbg !1149
  %.field.ld.362 = load i64, i64* %0, align 8, !dbg !1149
  %cast.1559 = bitcast { %Mutex.0* }* %tmpv.385 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.385 to i64*, !dbg !1150
  store i64 %.field.ld.362, i64* %1, align 8, !dbg !1150
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.381, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk4 to %__go_descriptor.47*), i8* nonnull %cast.1559)
          to label %fallthrough.129 unwind label %pad.8, !dbg !1150

fallthrough.129:                                  ; preds = %fallthrough.128
  %cast.1565 = bitcast %Session.0* %ss to i8*, !dbg !1151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret18.0.sroa_cast", i8* align 8 %cast.1565, i64 48, i1 false), !dbg !1151
  br label %finally.4

catchpad.4:                                       ; preds = %pad.8
  %ex2.4 = landingpad { i8*, i32 }
          cleanup
  %ex2.4.fca.0.extract = extractvalue { i8*, i32 } %ex2.4, 0
  %ex2.4.fca.1.extract = extractvalue { i8*, i32 } %ex2.4, 1
  br label %finally.4

pad.9:                                            ; preds = %finish.4
  %ex.9 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.381), !dbg !1147
  br label %finish.4

finish.4:                                         ; preds = %pad.9, %finally.4
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.381)
          to label %cont.59 unwind label %pad.9, !dbg !1147

cont.59:                                          ; preds = %finish.4
  %icmp.152 = icmp eq i8 %finvar.4.0, 1
  br i1 %icmp.152, label %finret.4, label %finres.4

finres.4:                                         ; preds = %cont.59
  %excv.4.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.4.sroa.0.0, 0
  %excv.4.fca.1.insert = insertvalue { i8*, i32 } %excv.4.fca.0.insert, i32 %ehtmp.4.sroa.2.0, 1
  resume { i8*, i32 } %excv.4.fca.1.insert

finret.4:                                         ; preds = %cont.59
  %cast.1566 = bitcast %Session.1* %sret.formal.7 to i8*, !dbg !1151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.1566, i8* nonnull align 8 %"$ret18.0.sroa_cast", i64 48, i1 false), !dbg !1151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %"$ret18.0.sroa_cast"), !dbg !1151
  ret void, !dbg !1151
}

define { i64, i64 } @command_line_arguments.Session.SetMode(i8* nest nocapture readnone %nest.16, %Session.0* readonly %ss, i64 %user.chunk0, i64 %user.chunk1, i64 %mode) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1152 {
entry:
  %tmpv.408 = alloca i8, align 1
  %tmpv.412 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1155, metadata !DIExpression()), !dbg !1156
  call void @llvm.dbg.value(metadata i64 %user.chunk0, metadata !1157, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1158
  call void @llvm.dbg.value(metadata i64 %user.chunk1, metadata !1157, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1158
  call void @llvm.dbg.value(metadata i64 %mode, metadata !1159, metadata !DIExpression()), !dbg !1160
  store i8 0, i8* %tmpv.408, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1161, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1162
  call void @llvm.dbg.value(metadata i64 0, metadata !1161, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1162
  %icmp.161 = icmp eq %Session.0* %ss, null, !dbg !1163
  br i1 %icmp.161, label %then.136, label %fallthrough.136

finally.7:                                        ; preds = %cont.81, %pad.14, %catchpad.7
  %"$ret22.sroa.0.1" = phi i64 [ 0, %catchpad.7 ], [ %call.94.fca.0.extract, %cont.81 ], [ 0, %pad.14 ]
  %"$ret22.sroa.5.1" = phi i64 [ 0, %catchpad.7 ], [ %call.94.fca.1.extract, %cont.81 ], [ 0, %pad.14 ]
  %ehtmp.7.sroa.0.0 = phi i8* [ %ex2.7.fca.0.extract, %catchpad.7 ], [ undef, %cont.81 ], [ undef, %pad.14 ]
  %ehtmp.7.sroa.2.0 = phi i32 [ %ex2.7.fca.1.extract, %catchpad.7 ], [ undef, %cont.81 ], [ undef, %pad.14 ]
  %finvar.7.0 = phi i8 [ 0, %catchpad.7 ], [ 1, %cont.81 ], [ 1, %pad.14 ]
  call void @llvm.dbg.value(metadata i64 %"$ret22.sroa.5.1", metadata !1161, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1162
  call void @llvm.dbg.value(metadata i64 %"$ret22.sroa.0.1", metadata !1161, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1162
  br label %finish.7

pad.14:                                           ; preds = %fallthrough.138, %fallthrough.137, %fallthrough.136, %then.136
  %ex.14 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.408)
          to label %finally.7 unwind label %catchpad.7, !dbg !1164

then.136:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.136 unwind label %pad.14, !dbg !1163

fallthrough.136:                                  ; preds = %entry, %then.136
  %field.420 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1163
  %.field.ld.43 = load %Mutex.0*, %Mutex.0** %field.420, align 8, !dbg !1163
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.43)
          to label %fallthrough.137 unwind label %pad.14, !dbg !1165

fallthrough.137:                                  ; preds = %fallthrough.136
  %0 = bitcast %Mutex.0** %field.420 to i64*, !dbg !1166
  %.field.ld.446 = load i64, i64* %0, align 8, !dbg !1166
  %cast.1620 = bitcast { %Mutex.0* }* %tmpv.412 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.412 to i64*, !dbg !1167
  store i64 %.field.ld.446, i64* %1, align 8, !dbg !1167
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.408, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk7 to %__go_descriptor.47*), i8* nonnull %cast.1620)
          to label %fallthrough.138 unwind label %pad.14, !dbg !1167

fallthrough.138:                                  ; preds = %fallthrough.137
  %field.423 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !1168
  %.field.ld.45 = load %WarpState.0*, %WarpState.0** %field.423, align 8, !dbg !1168
  %call.94 = invoke { i64, i64 } @command_line_arguments.WarpState.SetMode(i8* nest undef, %WarpState.0* %.field.ld.45, i64 %user.chunk0, i64 %user.chunk1, i64 %mode)
          to label %cont.81 unwind label %pad.14, !dbg !1169

cont.81:                                          ; preds = %fallthrough.138
  %call.94.fca.0.extract = extractvalue { i64, i64 } %call.94, 0, !dbg !1169
  %call.94.fca.1.extract = extractvalue { i64, i64 } %call.94, 1, !dbg !1169
  call void @llvm.dbg.value(metadata i64 %call.94.fca.0.extract, metadata !1161, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1162
  call void @llvm.dbg.value(metadata i64 %call.94.fca.1.extract, metadata !1161, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1162
  br label %finally.7

catchpad.7:                                       ; preds = %pad.14
  %ex2.7 = landingpad { i8*, i32 }
          cleanup
  %ex2.7.fca.0.extract = extractvalue { i8*, i32 } %ex2.7, 0
  %ex2.7.fca.1.extract = extractvalue { i8*, i32 } %ex2.7, 1
  br label %finally.7

pad.15:                                           ; preds = %finish.7
  %ex.15 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.408), !dbg !1164
  br label %finish.7

finish.7:                                         ; preds = %pad.15, %finally.7
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.408)
          to label %cont.83 unwind label %pad.15, !dbg !1164

cont.83:                                          ; preds = %finish.7
  %icmp.164 = icmp eq i8 %finvar.7.0, 1
  br i1 %icmp.164, label %finret.7, label %finres.7

finres.7:                                         ; preds = %cont.83
  %excv.7.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.7.sroa.0.0, 0
  %excv.7.fca.1.insert = insertvalue { i8*, i32 } %excv.7.fca.0.insert, i32 %ehtmp.7.sroa.2.0, 1
  resume { i8*, i32 } %excv.7.fca.1.insert

finret.7:                                         ; preds = %cont.83
  %ld.183.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret22.sroa.0.1", 0, !dbg !1170
  %ld.183.fca.1.insert = insertvalue { i64, i64 } %ld.183.fca.0.insert, i64 %"$ret22.sroa.5.1", 1, !dbg !1170
  ret { i64, i64 } %ld.183.fca.1.insert, !dbg !1170
}

define void @command_line_arguments.Session.TearDown(i8* nest nocapture readnone %nest.22, %Session.0* %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1171 {
entry:
  %tmpv.455 = alloca i8, align 1
  %tmpv.459 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1174, metadata !DIExpression()), !dbg !1175
  store i8 0, i8* %tmpv.455, align 1
  %icmp.185 = icmp eq %Session.0* %ss, null, !dbg !1176
  br i1 %icmp.185, label %then.154, label %fallthrough.154

finally.13:                                       ; preds = %fallthrough.161, %fallthrough.156, %pad.26, %catchpad.13
  %ehtmp.13.sroa.0.0 = phi i8* [ %ex2.13.fca.0.extract, %catchpad.13 ], [ undef, %pad.26 ], [ undef, %fallthrough.156 ], [ undef, %fallthrough.161 ]
  %ehtmp.13.sroa.2.0 = phi i32 [ %ex2.13.fca.1.extract, %catchpad.13 ], [ undef, %pad.26 ], [ undef, %fallthrough.156 ], [ undef, %fallthrough.161 ]
  %finvar.13.0 = phi i8 [ 0, %catchpad.13 ], [ 1, %pad.26 ], [ 1, %fallthrough.156 ], [ 1, %fallthrough.161 ]
  br label %finish.13

pad.26:                                           ; preds = %fallthrough.161, %fallthrough.160, %fallthrough.155, %fallthrough.154, %then.154
  %ex.26 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.455)
          to label %finally.13 unwind label %catchpad.13, !dbg !1177

then.154:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.154 unwind label %pad.26, !dbg !1176

fallthrough.154:                                  ; preds = %entry, %then.154
  %field.444 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1176
  %.field.ld.61 = load %Mutex.0*, %Mutex.0** %field.444, align 8, !dbg !1176
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.61)
          to label %fallthrough.155 unwind label %pad.26, !dbg !1178

fallthrough.155:                                  ; preds = %fallthrough.154
  %0 = bitcast %Mutex.0** %field.444 to i64*, !dbg !1179
  %.field.ld.621 = load i64, i64* %0, align 8, !dbg !1179
  %cast.1691 = bitcast { %Mutex.0* }* %tmpv.459 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.459 to i64*, !dbg !1180
  store i64 %.field.ld.621, i64* %1, align 8, !dbg !1180
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.455, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk13 to %__go_descriptor.47*), i8* nonnull %cast.1691)
          to label %fallthrough.156 unwind label %pad.26, !dbg !1180

fallthrough.156:                                  ; preds = %fallthrough.155
  %field.451 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 14, !dbg !1181
  %.field.ld.66 = load i8, i8* %field.451, align 1, !dbg !1181
  %icmp.192 = icmp eq i8 %.field.ld.66, 0, !dbg !1182
  br i1 %icmp.192, label %fallthrough.160, label %finally.13

fallthrough.160:                                  ; preds = %fallthrough.156
  store i8 1, i8* %field.451, align 1, !dbg !1183
  %field.448 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 15, !dbg !1184
  %2 = bitcast %__go_descriptor.16** %field.448 to void (i8*)***, !dbg !1184
  %.field.ld.6324 = load void (i8*)**, void (i8*)*** %2, align 8, !dbg !1184
  %deref.ld.23 = load void (i8*)*, void (i8*)** %.field.ld.6324, align 8, !dbg !1184
  %.field.ld.645.cast = bitcast void (i8*)** %.field.ld.6324 to i8*, !dbg !1184
  invoke void %deref.ld.23(i8* nest %.field.ld.645.cast)
          to label %fallthrough.161 unwind label %pad.26, !dbg !1184

fallthrough.161:                                  ; preds = %fallthrough.160
  %field.450 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 5, !dbg !1185
  %.field.ld.65 = load %Session.2*, %Session.2** %field.450, align 8, !dbg !1185
  %call.99 = invoke { i64, i64 } @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Close(i8* nest undef, %Session.2* %.field.ld.65)
          to label %finally.13 unwind label %pad.26, !dbg !1186

catchpad.13:                                      ; preds = %pad.26
  %ex2.13 = landingpad { i8*, i32 }
          cleanup
  %ex2.13.fca.0.extract = extractvalue { i8*, i32 } %ex2.13, 0
  %ex2.13.fca.1.extract = extractvalue { i8*, i32 } %ex2.13, 1
  br label %finally.13

pad.27:                                           ; preds = %finish.13
  %ex.27 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.455), !dbg !1177
  br label %finish.13

finish.13:                                        ; preds = %pad.27, %finally.13
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.455)
          to label %cont.135 unwind label %pad.27, !dbg !1177

cont.135:                                         ; preds = %finish.13
  %icmp.193 = icmp eq i8 %finvar.13.0, 1
  br i1 %icmp.193, label %finret.13, label %finres.13

finres.13:                                        ; preds = %cont.135
  %excv.13.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.13.sroa.0.0, 0
  %excv.13.fca.1.insert = insertvalue { i8*, i32 } %excv.13.fca.0.insert, i32 %ehtmp.13.sroa.2.0, 1
  resume { i8*, i32 } %excv.13.fca.1.insert

finret.13:                                        ; preds = %cont.135
  ret void
}

define i8 @command_line_arguments.Session.TornDown(i8* nest nocapture readnone %nest.21, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1187 {
entry:
  %tmpv.448 = alloca i8, align 1
  %tmpv.452 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1188, metadata !DIExpression()), !dbg !1189
  store i8 0, i8* %tmpv.448, align 1
  call void @llvm.dbg.value(metadata i8 0, metadata !1190, metadata !DIExpression()), !dbg !1191
  %icmp.181 = icmp eq %Session.0* %ss, null, !dbg !1192
  br i1 %icmp.181, label %then.151, label %fallthrough.151

finally.12:                                       ; preds = %fallthrough.153, %pad.24, %catchpad.12
  %"$ret27.1" = phi i8 [ 0, %catchpad.12 ], [ %.field.ld.60, %fallthrough.153 ], [ 0, %pad.24 ]
  %ehtmp.12.sroa.0.0 = phi i8* [ %ex2.12.fca.0.extract, %catchpad.12 ], [ undef, %fallthrough.153 ], [ undef, %pad.24 ]
  %ehtmp.12.sroa.2.0 = phi i32 [ %ex2.12.fca.1.extract, %catchpad.12 ], [ undef, %fallthrough.153 ], [ undef, %pad.24 ]
  %finvar.12.0 = phi i8 [ 0, %catchpad.12 ], [ 1, %fallthrough.153 ], [ 1, %pad.24 ]
  call void @llvm.dbg.value(metadata i8 %"$ret27.1", metadata !1190, metadata !DIExpression()), !dbg !1191
  br label %finish.12

pad.24:                                           ; preds = %fallthrough.152, %fallthrough.151, %then.151
  %ex.24 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.448)
          to label %finally.12 unwind label %catchpad.12, !dbg !1193

then.151:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.151 unwind label %pad.24, !dbg !1192

fallthrough.151:                                  ; preds = %entry, %then.151
  %field.440 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1192
  %.field.ld.58 = load %Mutex.0*, %Mutex.0** %field.440, align 8, !dbg !1192
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.58)
          to label %fallthrough.152 unwind label %pad.24, !dbg !1194

fallthrough.152:                                  ; preds = %fallthrough.151
  %0 = bitcast %Mutex.0** %field.440 to i64*, !dbg !1195
  %.field.ld.591 = load i64, i64* %0, align 8, !dbg !1195
  %cast.1684 = bitcast { %Mutex.0* }* %tmpv.452 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.452 to i64*, !dbg !1196
  store i64 %.field.ld.591, i64* %1, align 8, !dbg !1196
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.448, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk12 to %__go_descriptor.47*), i8* nonnull %cast.1684)
          to label %fallthrough.153 unwind label %pad.24, !dbg !1196

fallthrough.153:                                  ; preds = %fallthrough.152
  %field.443 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 14, !dbg !1197
  %.field.ld.60 = load i8, i8* %field.443, align 1, !dbg !1197
  call void @llvm.dbg.value(metadata i8 %.field.ld.60, metadata !1190, metadata !DIExpression()), !dbg !1191
  br label %finally.12

catchpad.12:                                      ; preds = %pad.24
  %ex2.12 = landingpad { i8*, i32 }
          cleanup
  %ex2.12.fca.0.extract = extractvalue { i8*, i32 } %ex2.12, 0
  %ex2.12.fca.1.extract = extractvalue { i8*, i32 } %ex2.12, 1
  br label %finally.12

pad.25:                                           ; preds = %finish.12
  %ex.25 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.448), !dbg !1193
  br label %finish.12

finish.12:                                        ; preds = %pad.25, %finally.12
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.448)
          to label %cont.122 unwind label %pad.25, !dbg !1193

cont.122:                                         ; preds = %finish.12
  %icmp.184 = icmp eq i8 %finvar.12.0, 1
  br i1 %icmp.184, label %finret.12, label %finres.12

finres.12:                                        ; preds = %cont.122
  %excv.12.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.12.sroa.0.0, 0
  %excv.12.fca.1.insert = insertvalue { i8*, i32 } %excv.12.fca.0.insert, i32 %ehtmp.12.sroa.2.0, 1
  resume { i8*, i32 } %excv.12.fca.1.insert

finret.12:                                        ; preds = %cont.122
  ret i8 %"$ret27.1", !dbg !1198
}

define { i64, i64 } @command_line_arguments.Session.UpdateState(i8* nest nocapture readnone %nest.17, %Session.0* readonly %ss, %State.0* byval nocapture readonly %state, i8 zeroext %hosting) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1199 {
entry:
  call void @llvm.dbg.declare(metadata %State.0* %state, metadata !1202, metadata !DIExpression()), !dbg !1203
  %tmpv.416 = alloca i8, align 1
  %tmpv.420 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1204, metadata !DIExpression()), !dbg !1205
  call void @llvm.dbg.value(metadata i8 %hosting, metadata !1206, metadata !DIExpression()), !dbg !1207
  store i8 0, i8* %tmpv.416, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1208, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1209
  call void @llvm.dbg.value(metadata i64 0, metadata !1208, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1209
  %icmp.165 = icmp eq %Session.0* %ss, null, !dbg !1210
  br i1 %icmp.165, label %then.139, label %fallthrough.139

finally.8:                                        ; preds = %cont.89, %pad.16, %catchpad.8
  %"$ret23.sroa.0.1" = phi i64 [ 0, %catchpad.8 ], [ %call.95.fca.0.extract, %cont.89 ], [ 0, %pad.16 ]
  %"$ret23.sroa.5.1" = phi i64 [ 0, %catchpad.8 ], [ %call.95.fca.1.extract, %cont.89 ], [ 0, %pad.16 ]
  %ehtmp.8.sroa.0.0 = phi i8* [ %ex2.8.fca.0.extract, %catchpad.8 ], [ undef, %cont.89 ], [ undef, %pad.16 ]
  %ehtmp.8.sroa.2.0 = phi i32 [ %ex2.8.fca.1.extract, %catchpad.8 ], [ undef, %cont.89 ], [ undef, %pad.16 ]
  %finvar.8.0 = phi i8 [ 0, %catchpad.8 ], [ 1, %cont.89 ], [ 1, %pad.16 ]
  call void @llvm.dbg.value(metadata i64 %"$ret23.sroa.5.1", metadata !1208, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1209
  call void @llvm.dbg.value(metadata i64 %"$ret23.sroa.0.1", metadata !1208, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1209
  br label %finish.8

pad.16:                                           ; preds = %fallthrough.141, %fallthrough.140, %fallthrough.139, %then.139
  %ex.16 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.416)
          to label %finally.8 unwind label %catchpad.8, !dbg !1211

then.139:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.139 unwind label %pad.16, !dbg !1210

fallthrough.139:                                  ; preds = %entry, %then.139
  %field.424 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1210
  %.field.ld.46 = load %Mutex.0*, %Mutex.0** %field.424, align 8, !dbg !1210
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.46)
          to label %fallthrough.140 unwind label %pad.16, !dbg !1212

fallthrough.140:                                  ; preds = %fallthrough.139
  %0 = bitcast %Mutex.0** %field.424 to i64*, !dbg !1213
  %.field.ld.475 = load i64, i64* %0, align 8, !dbg !1213
  %cast.1638 = bitcast { %Mutex.0* }* %tmpv.420 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.420 to i64*, !dbg !1214
  store i64 %.field.ld.475, i64* %1, align 8, !dbg !1214
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.416, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk8 to %__go_descriptor.47*), i8* nonnull %cast.1638)
          to label %fallthrough.141 unwind label %pad.16, !dbg !1214

fallthrough.141:                                  ; preds = %fallthrough.140
  %field.427 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !1215
  %.field.ld.48 = load %WarpState.0*, %WarpState.0** %field.427, align 8, !dbg !1215
  %call.95 = invoke { i64, i64 } @command_line_arguments.WarpState.Update(i8* nest undef, %WarpState.0* %.field.ld.48, %State.0* byval nonnull %state, i8 zeroext %hosting)
          to label %cont.89 unwind label %pad.16, !dbg !1216

cont.89:                                          ; preds = %fallthrough.141
  %call.95.fca.0.extract = extractvalue { i64, i64 } %call.95, 0, !dbg !1216
  %call.95.fca.1.extract = extractvalue { i64, i64 } %call.95, 1, !dbg !1216
  call void @llvm.dbg.value(metadata i64 %call.95.fca.0.extract, metadata !1208, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1209
  call void @llvm.dbg.value(metadata i64 %call.95.fca.1.extract, metadata !1208, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1209
  br label %finally.8

catchpad.8:                                       ; preds = %pad.16
  %ex2.8 = landingpad { i8*, i32 }
          cleanup
  %ex2.8.fca.0.extract = extractvalue { i8*, i32 } %ex2.8, 0
  %ex2.8.fca.1.extract = extractvalue { i8*, i32 } %ex2.8, 1
  br label %finally.8

pad.17:                                           ; preds = %finish.8
  %ex.17 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.416), !dbg !1211
  br label %finish.8

finish.8:                                         ; preds = %pad.17, %finally.8
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.416)
          to label %cont.91 unwind label %pad.17, !dbg !1211

cont.91:                                          ; preds = %finish.8
  %icmp.168 = icmp eq i8 %finvar.8.0, 1
  br i1 %icmp.168, label %finret.8, label %finres.8

finres.8:                                         ; preds = %cont.91
  %excv.8.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.8.sroa.0.0, 0
  %excv.8.fca.1.insert = insertvalue { i8*, i32 } %excv.8.fca.0.insert, i32 %ehtmp.8.sroa.2.0, 1
  resume { i8*, i32 } %excv.8.fca.1.insert

finret.8:                                         ; preds = %cont.91
  %ld.185.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret23.sroa.0.1", 0, !dbg !1217
  %ld.185.fca.1.insert = insertvalue { i64, i64 } %ld.185.fca.0.insert, i64 %"$ret23.sroa.5.1", 1, !dbg !1217
  ret { i64, i64 } %ld.185.fca.1.insert, !dbg !1217
}

define { i64, i64 } @command_line_arguments.Session.Warp(i8* nest nocapture readnone %nest.12, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1218 {
entry:
  %tmpv.374 = alloca i8, align 1
  %tmpv.378 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1221, metadata !DIExpression()), !dbg !1222
  store i8 0, i8* %tmpv.374, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1223, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1224
  call void @llvm.dbg.value(metadata i64 0, metadata !1223, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1224
  %icmp.145 = icmp eq %Session.0* %ss, null, !dbg !1225
  br i1 %icmp.145, label %then.124, label %fallthrough.124

finally.3:                                        ; preds = %fallthrough.126, %pad.6, %catchpad.3
  %"$ret17.sroa.5.1" = phi i64 [ 0, %catchpad.3 ], [ %"$ret17.sroa.5.0.copyload", %fallthrough.126 ], [ 0, %pad.6 ]
  %"$ret17.sroa.0.1" = phi i64 [ 0, %catchpad.3 ], [ %"$ret17.sroa.0.0.copyload", %fallthrough.126 ], [ 0, %pad.6 ]
  %ehtmp.3.sroa.0.0 = phi i8* [ %ex2.3.fca.0.extract, %catchpad.3 ], [ undef, %fallthrough.126 ], [ undef, %pad.6 ]
  %ehtmp.3.sroa.2.0 = phi i32 [ %ex2.3.fca.1.extract, %catchpad.3 ], [ undef, %fallthrough.126 ], [ undef, %pad.6 ]
  %finvar.3.0 = phi i8 [ 0, %catchpad.3 ], [ 1, %fallthrough.126 ], [ 1, %pad.6 ]
  call void @llvm.dbg.value(metadata i64 %"$ret17.sroa.0.1", metadata !1223, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1224
  call void @llvm.dbg.value(metadata i64 %"$ret17.sroa.5.1", metadata !1223, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1224
  br label %finish.3

pad.6:                                            ; preds = %fallthrough.125, %fallthrough.124, %then.124
  %ex.6 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.374)
          to label %finally.3 unwind label %catchpad.3, !dbg !1226

then.124:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.124 unwind label %pad.6, !dbg !1225

fallthrough.124:                                  ; preds = %entry, %then.124
  %field.398 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1225
  %.field.ld.33 = load %Mutex.0*, %Mutex.0** %field.398, align 8, !dbg !1225
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.33)
          to label %fallthrough.125 unwind label %pad.6, !dbg !1227

fallthrough.125:                                  ; preds = %fallthrough.124
  %0 = bitcast %Mutex.0** %field.398 to i64*, !dbg !1228
  %.field.ld.346 = load i64, i64* %0, align 8, !dbg !1228
  %cast.1546 = bitcast { %Mutex.0* }* %tmpv.378 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.378 to i64*, !dbg !1229
  store i64 %.field.ld.346, i64* %1, align 8, !dbg !1229
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.374, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk3 to %__go_descriptor.47*), i8* nonnull %cast.1546)
          to label %fallthrough.126 unwind label %pad.6, !dbg !1229

fallthrough.126:                                  ; preds = %fallthrough.125
  %"$ret17.sroa.0.0.cast.1552.sroa_idx" = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 1, !dbg !1230
  %"$ret17.sroa.0.0.cast.1552.sroa_cast" = bitcast { i8*, i64 }* %"$ret17.sroa.0.0.cast.1552.sroa_idx" to i64*, !dbg !1230
  %"$ret17.sroa.0.0.copyload" = load i64, i64* %"$ret17.sroa.0.0.cast.1552.sroa_cast", align 8, !dbg !1230
  call void @llvm.dbg.value(metadata i64 %"$ret17.sroa.0.0.copyload", metadata !1223, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1224
  %"$ret17.sroa.5.0.cast.1552.sroa_idx3" = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 1, i32 1, !dbg !1230
  %"$ret17.sroa.5.0.copyload" = load i64, i64* %"$ret17.sroa.5.0.cast.1552.sroa_idx3", align 8, !dbg !1230
  call void @llvm.dbg.value(metadata i64 %"$ret17.sroa.5.0.copyload", metadata !1223, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1224
  br label %finally.3

catchpad.3:                                       ; preds = %pad.6
  %ex2.3 = landingpad { i8*, i32 }
          cleanup
  %ex2.3.fca.0.extract = extractvalue { i8*, i32 } %ex2.3, 0
  %ex2.3.fca.1.extract = extractvalue { i8*, i32 } %ex2.3, 1
  br label %finally.3

pad.7:                                            ; preds = %finish.3
  %ex.7 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.374), !dbg !1226
  br label %finish.3

finish.3:                                         ; preds = %pad.7, %finally.3
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.374)
          to label %cont.52 unwind label %pad.7, !dbg !1226

cont.52:                                          ; preds = %finish.3
  %icmp.148 = icmp eq i8 %finvar.3.0, 1
  br i1 %icmp.148, label %finret.3, label %finres.3

finres.3:                                         ; preds = %cont.52
  %excv.3.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.3.sroa.0.0, 0
  %excv.3.fca.1.insert = insertvalue { i8*, i32 } %excv.3.fca.0.insert, i32 %ehtmp.3.sroa.2.0, 1
  resume { i8*, i32 } %excv.3.fca.1.insert

finret.3:                                         ; preds = %cont.52
  %ld.177.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret17.sroa.0.1", 0, !dbg !1230
  %ld.177.fca.1.insert = insertvalue { i64, i64 } %ld.177.fca.0.insert, i64 %"$ret17.sroa.5.1", 1, !dbg !1230
  ret { i64, i64 } %ld.177.fca.1.insert, !dbg !1230
}

define { i64, i64 } @command_line_arguments.Session.WindowSize(i8* nest nocapture readnone %nest.19, %Session.0* readonly %ss) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1231 {
entry:
  %tmpv.432 = alloca i8, align 1
  %tmpv.436 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1234, metadata !DIExpression()), !dbg !1235
  store i8 0, i8* %tmpv.432, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1236, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1237
  call void @llvm.dbg.value(metadata i64 0, metadata !1236, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1237
  %icmp.173 = icmp eq %Session.0* %ss, null, !dbg !1238
  br i1 %icmp.173, label %then.145, label %fallthrough.145

finally.10:                                       ; preds = %cont.105, %pad.20, %catchpad.10
  %"$ret25.sroa.0.1" = phi i64 [ 0, %catchpad.10 ], [ %call.97.fca.0.extract, %cont.105 ], [ 0, %pad.20 ]
  %"$ret25.sroa.5.1" = phi i64 [ 0, %catchpad.10 ], [ %call.97.fca.1.extract, %cont.105 ], [ 0, %pad.20 ]
  %ehtmp.10.sroa.0.0 = phi i8* [ %ex2.10.fca.0.extract, %catchpad.10 ], [ undef, %cont.105 ], [ undef, %pad.20 ]
  %ehtmp.10.sroa.2.0 = phi i32 [ %ex2.10.fca.1.extract, %catchpad.10 ], [ undef, %cont.105 ], [ undef, %pad.20 ]
  %finvar.10.0 = phi i8 [ 0, %catchpad.10 ], [ 1, %cont.105 ], [ 1, %pad.20 ]
  call void @llvm.dbg.value(metadata i64 %"$ret25.sroa.5.1", metadata !1236, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1237
  call void @llvm.dbg.value(metadata i64 %"$ret25.sroa.0.1", metadata !1236, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1237
  br label %finish.10

pad.20:                                           ; preds = %fallthrough.147, %fallthrough.146, %fallthrough.145, %then.145
  %ex.20 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.432)
          to label %finally.10 unwind label %catchpad.10, !dbg !1239

then.145:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.145 unwind label %pad.20, !dbg !1238

fallthrough.145:                                  ; preds = %entry, %then.145
  %field.432 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1238
  %.field.ld.52 = load %Mutex.0*, %Mutex.0** %field.432, align 8, !dbg !1238
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.52)
          to label %fallthrough.146 unwind label %pad.20, !dbg !1240

fallthrough.146:                                  ; preds = %fallthrough.145
  %0 = bitcast %Mutex.0** %field.432 to i64*, !dbg !1241
  %.field.ld.535 = load i64, i64* %0, align 8, !dbg !1241
  %cast.1661 = bitcast { %Mutex.0* }* %tmpv.436 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.436 to i64*, !dbg !1242
  store i64 %.field.ld.535, i64* %1, align 8, !dbg !1242
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.432, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk10 to %__go_descriptor.47*), i8* nonnull %cast.1661)
          to label %fallthrough.147 unwind label %pad.20, !dbg !1242

fallthrough.147:                                  ; preds = %fallthrough.146
  %field.435 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 13, !dbg !1243
  %.field.ld.54 = load %WarpState.0*, %WarpState.0** %field.435, align 8, !dbg !1243
  %call.97 = invoke { i64, i64 } @command_line_arguments.WarpState.WindowSize(i8* nest undef, %WarpState.0* %.field.ld.54)
          to label %cont.105 unwind label %pad.20, !dbg !1244

cont.105:                                         ; preds = %fallthrough.147
  %call.97.fca.0.extract = extractvalue { i64, i64 } %call.97, 0, !dbg !1244
  %call.97.fca.1.extract = extractvalue { i64, i64 } %call.97, 1, !dbg !1244
  call void @llvm.dbg.value(metadata i64 %call.97.fca.0.extract, metadata !1236, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1237
  call void @llvm.dbg.value(metadata i64 %call.97.fca.1.extract, metadata !1236, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1237
  br label %finally.10

catchpad.10:                                      ; preds = %pad.20
  %ex2.10 = landingpad { i8*, i32 }
          cleanup
  %ex2.10.fca.0.extract = extractvalue { i8*, i32 } %ex2.10, 0
  %ex2.10.fca.1.extract = extractvalue { i8*, i32 } %ex2.10, 1
  br label %finally.10

pad.21:                                           ; preds = %finish.10
  %ex.21 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.432), !dbg !1239
  br label %finish.10

finish.10:                                        ; preds = %pad.21, %finally.10
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.432)
          to label %cont.107 unwind label %pad.21, !dbg !1239

cont.107:                                         ; preds = %finish.10
  %icmp.176 = icmp eq i8 %finvar.10.0, 1
  br i1 %icmp.176, label %finret.10, label %finres.10

finres.10:                                        ; preds = %cont.107
  %excv.10.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.10.sroa.0.0, 0
  %excv.10.fca.1.insert = insertvalue { i8*, i32 } %excv.10.fca.0.insert, i32 %ehtmp.10.sroa.2.0, 1
  resume { i8*, i32 } %excv.10.fca.1.insert

finret.10:                                        ; preds = %cont.107
  %ld.187.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret25.sroa.0.1", 0, !dbg !1245
  %ld.187.fca.1.insert = insertvalue { i64, i64 } %ld.187.fca.0.insert, i64 %"$ret25.sroa.5.1", 1, !dbg !1245
  ret { i64, i64 } %ld.187.fca.1.insert, !dbg !1245
}

define void @command_line_arguments.Session.WriteDataC(i8* nest nocapture readnone %nest.11, %Session.0* readonly %ss, { i8*, i64, i64 }* byval %data) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1246 {
entry:
  call void @llvm.dbg.declare(metadata { i8*, i64, i64 }* %data, metadata !1249, metadata !DIExpression()), !dbg !1250
  %tmpv.364 = alloca i8, align 1
  %tmpv.368 = alloca { %Mutex.0* }, align 8
  %sret.actual.71 = alloca { i64, %error.0 }, align 8
  call void @llvm.dbg.value(metadata %Session.0* %ss, metadata !1251, metadata !DIExpression()), !dbg !1252
  store i8 0, i8* %tmpv.364, align 1
  %icmp.139 = icmp eq %Session.0* %ss, null, !dbg !1253
  br i1 %icmp.139, label %then.119, label %fallthrough.119

finally.2:                                        ; preds = %fallthrough.123, %fallthrough.121, %pad.4, %catchpad.2
  %ehtmp.2.sroa.0.0 = phi i8* [ %ex2.2.fca.0.extract, %catchpad.2 ], [ undef, %pad.4 ], [ undef, %fallthrough.121 ], [ undef, %fallthrough.123 ]
  %ehtmp.2.sroa.2.0 = phi i32 [ %ex2.2.fca.1.extract, %catchpad.2 ], [ undef, %pad.4 ], [ undef, %fallthrough.121 ], [ undef, %fallthrough.123 ]
  %finvar.2.0 = phi i8 [ 0, %catchpad.2 ], [ 1, %pad.4 ], [ 1, %fallthrough.121 ], [ 1, %fallthrough.123 ]
  br label %finish.2

pad.4:                                            ; preds = %fallthrough.123, %fallthrough.120, %fallthrough.119, %then.119
  %ex.4 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.364)
          to label %finally.2 unwind label %catchpad.2, !dbg !1254

then.119:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.119 unwind label %pad.4, !dbg !1253

fallthrough.119:                                  ; preds = %entry, %then.119
  %field.390 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 16, !dbg !1253
  %.field.ld.29 = load %Mutex.0*, %Mutex.0** %field.390, align 8, !dbg !1253
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.29)
          to label %fallthrough.120 unwind label %pad.4, !dbg !1255

fallthrough.120:                                  ; preds = %fallthrough.119
  %0 = bitcast %Mutex.0** %field.390 to i64*, !dbg !1256
  %.field.ld.302 = load i64, i64* %0, align 8, !dbg !1256
  %cast.1532 = bitcast { %Mutex.0* }* %tmpv.368 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.368 to i64*, !dbg !1257
  store i64 %.field.ld.302, i64* %1, align 8, !dbg !1257
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.364, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk2 to %__go_descriptor.47*), i8* nonnull %cast.1532)
          to label %fallthrough.121 unwind label %pad.4, !dbg !1257

fallthrough.121:                                  ; preds = %fallthrough.120
  %field.397 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 14, !dbg !1258
  %.field.ld.32 = load i8, i8* %field.397, align 1, !dbg !1258
  %icmp.143 = icmp eq i8 %.field.ld.32, 0, !dbg !1259
  br i1 %icmp.143, label %fallthrough.123, label %finally.2

fallthrough.123:                                  ; preds = %fallthrough.121
  %tmpv.371.sroa.0.0.cast.1540.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 12, i32 0
  %tmpv.371.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.371.sroa.0.0.cast.1540.sroa_idx, align 8
  %tmpv.371.sroa.2.0.cast.1540.sroa_idx1 = getelementptr inbounds %Session.0, %Session.0* %ss, i64 0, i32 12, i32 1
  %tmpv.371.sroa.2.0.copyload = load i8*, i8** %tmpv.371.sroa.2.0.cast.1540.sroa_idx1, align 8
  %field.395 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.371.sroa.0.0.copyload, i64 0, i32 8, !dbg !1260
  %.field.ld.31 = load void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)** %field.395, align 8, !dbg !1260
  invoke void %.field.ld.31({ i64, %error.0 }* nonnull sret %sret.actual.71, i8* nest undef, i8* %tmpv.371.sroa.2.0.copyload, { i8*, i64, i64 }* byval nonnull %data)
          to label %finally.2 unwind label %pad.4, !dbg !1260

catchpad.2:                                       ; preds = %pad.4
  %ex2.2 = landingpad { i8*, i32 }
          cleanup
  %ex2.2.fca.0.extract = extractvalue { i8*, i32 } %ex2.2, 0
  %ex2.2.fca.1.extract = extractvalue { i8*, i32 } %ex2.2, 1
  br label %finally.2

pad.5:                                            ; preds = %finish.2
  %ex.5 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.364), !dbg !1254
  br label %finish.2

finish.2:                                         ; preds = %pad.5, %finally.2
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.364)
          to label %cont.45 unwind label %pad.5, !dbg !1254

cont.45:                                          ; preds = %finish.2
  %icmp.144 = icmp eq i8 %finvar.2.0, 1
  br i1 %icmp.144, label %finret.2, label %finres.2

finres.2:                                         ; preds = %cont.45
  %excv.2.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.2.sroa.0.0, 0
  %excv.2.fca.1.insert = insertvalue { i8*, i32 } %excv.2.fca.0.insert, i32 %ehtmp.2.sroa.2.0, 1
  resume { i8*, i32 } %excv.2.fca.1.insert

finret.2:                                         ; preds = %cont.45
  ret void
}

define void @command_line_arguments.WarpState.GetMode({ i64*, %error.0 }* nocapture sret %sret.formal.18, i8* nest nocapture readnone %nest.40, %WarpState.0* readonly %w, i64 %user.chunk0, i64 %user.chunk1) #0 !dbg !1261 {
entry:
  %tmp.118 = alloca %IPST.3, align 8
  %tmpv.777 = alloca { i8*, i64 }, align 8
  %tmpv.785 = alloca %UserState.0, align 8
  %tmpv.789 = alloca { i8*, i64 }, align 8
  %tmpv.790 = alloca [1 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %WarpState.0* %w, metadata !1264, metadata !DIExpression()), !dbg !1265
  call void @llvm.dbg.value(metadata i64 %user.chunk0, metadata !1266, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1267
  call void @llvm.dbg.value(metadata i64 %user.chunk1, metadata !1266, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1267
  call void @llvm.dbg.value(metadata i64* null, metadata !1268, metadata !DIExpression()), !dbg !1269
  %call.189 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0)), !dbg !1270
  call void @llvm.dbg.value(metadata i8* %call.189, metadata !1272, metadata !DIExpression()), !dbg !1280
  call void @llvm.dbg.value(metadata i8 0, metadata !1281, metadata !DIExpression()), !dbg !1280
  %user.addr.sroa.0.0.cast.2825.sroa_cast = bitcast { i8*, i64 }* %tmpv.777 to i64*
  store i64 %user.chunk0, i64* %user.addr.sroa.0.0.cast.2825.sroa_cast, align 8
  %user.addr.sroa.3.0.cast.2825.sroa_idx24 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.777, i64 0, i32 1
  store i64 %user.chunk1, i64* %user.addr.sroa.3.0.cast.2825.sroa_idx24, align 8
  %icmp.313 = icmp eq %WarpState.0* %w, null, !dbg !1282
  br i1 %icmp.313, label %then.272, label %else.272

then.272:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1282
  unreachable

else.272:                                         ; preds = %entry
  %field.763 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 2, !dbg !1282
  %.field.ld.121 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.763, align 8, !dbg !1282
  %cast.2831 = bitcast { i8*, i64 }* %tmpv.777 to i8*, !dbg !1270
  %call.190 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.121, i8* nonnull %cast.2831), !dbg !1270
  %call.190.fca.0.extract = extractvalue { i64, i8 } %call.190, 0, !dbg !1270
  %call.190.fca.1.extract = extractvalue { i64, i8 } %call.190, 1, !dbg !1270
  %0 = inttoptr i64 %call.190.fca.0.extract to i8*, !dbg !1270
  %cast.2836 = bitcast %UserState.0* %tmpv.785 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2836, i8* align 8 %0, i64 48, i1 false)
  %runtime.writeBarrier.ld.22 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1270
  %icmp.315 = icmp eq i32 %runtime.writeBarrier.ld.22, 0, !dbg !1270
  br i1 %icmp.315, label %then.273, label %else.273

then.273:                                         ; preds = %else.272
  %icmp.314 = icmp eq i8* %call.189, null, !dbg !1270
  br i1 %icmp.314, label %then.274, label %else.274

fallthrough.273:                                  ; preds = %else.273, %else.274
  call void @llvm.dbg.value(metadata i8 %call.190.fca.1.extract, metadata !1281, metadata !DIExpression()), !dbg !1280
  %icmp.316 = icmp eq i8 %call.190.fca.1.extract, 0, !dbg !1283
  br i1 %icmp.316, label %then.275, label %else.275

else.273:                                         ; preds = %else.272
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0), i8* %call.189, i8* nonnull %cast.2836), !dbg !1270
  br label %fallthrough.273

then.274:                                         ; preds = %then.273
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1270
  unreachable

else.274:                                         ; preds = %then.273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.189, i8* nonnull align 8 %cast.2836, i64 48, i1 false), !dbg !1270
  br label %fallthrough.273

then.275:                                         ; preds = %fallthrough.273
  %call.191 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1284
  %user.addr.sroa.0.0.cast.2845.sroa_cast = bitcast { i8*, i64 }* %tmpv.789 to i64*
  store i64 %user.chunk0, i64* %user.addr.sroa.0.0.cast.2845.sroa_cast, align 8
  %user.addr.sroa.3.0.cast.2845.sroa_idx25 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.789, i64 0, i32 1
  store i64 %user.chunk1, i64* %user.addr.sroa.3.0.cast.2845.sroa_idx25, align 8
  %cast.2848 = bitcast { i8*, i64 }* %tmpv.789 to i8*, !dbg !1284
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.191, i8* nonnull %cast.2848), !dbg !1284
  %tmp.117.sroa.0.0.cast.2850.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.790, i64 0, i64 0, i32 0, !dbg !1284
  store %_type.0* @string..d, %_type.0** %tmp.117.sroa.0.0.cast.2850.sroa_idx, align 8, !dbg !1284
  %tmp.117.sroa.2.0.cast.2850.sroa_idx27 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.790, i64 0, i64 0, i32 1, !dbg !1284
  store i8* %call.191, i8** %tmp.117.sroa.2.0.cast.2850.sroa_idx27, align 8, !dbg !1284
  %field.768 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.118, i64 0, i32 0, !dbg !1284
  %cast.2853 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.790, i64 0, i64 0, !dbg !1284
  store %IPST.11* %cast.2853, %IPST.11** %field.768, align 8, !dbg !1284
  %field.769 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.118, i64 0, i32 1, !dbg !1284
  store i64 1, i64* %field.769, align 8, !dbg !1284
  %field.770 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.118, i64 0, i32 2, !dbg !1284
  store i64 1, i64* %field.770, align 8, !dbg !1284
  %call.192 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([17 x i8]* @const.349 to i64), i64 16, %IPST.3* byval nonnull %tmp.118), !dbg !1284
  %call.192.fca.0.extract = extractvalue { i64, i64 } %call.192, 0, !dbg !1284
  %call.192.fca.1.extract = extractvalue { i64, i64 } %call.192, 1, !dbg !1284
  %call.193 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.192.fca.0.extract, i64 %call.192.fca.1.extract), !dbg !1285
  %call.193.fca.0.extract = extractvalue { i64, i64 } %call.193, 0, !dbg !1285
  %call.193.fca.1.extract = extractvalue { i64, i64 } %call.193, 1, !dbg !1285
  call void @llvm.dbg.value(metadata i64* null, metadata !1268, metadata !DIExpression()), !dbg !1269
  call void @llvm.dbg.value(metadata i64 %call.193.fca.0.extract, metadata !1286, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1287
  call void @llvm.dbg.value(metadata i64 %call.193.fca.1.extract, metadata !1286, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1287
  %tmp.119.sroa.0.0.cast.2867.sroa_idx = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.formal.18, i64 0, i32 0, !dbg !1288
  store i64* null, i64** %tmp.119.sroa.0.0.cast.2867.sroa_idx, align 8, !dbg !1288
  %tmp.119.sroa.2.0.cast.2867.sroa_idx28 = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.formal.18, i64 0, i32 1, !dbg !1288
  %tmp.119.sroa.2.0.cast.2867.sroa_cast = bitcast %error.0* %tmp.119.sroa.2.0.cast.2867.sroa_idx28 to i64*, !dbg !1288
  store i64 %call.193.fca.0.extract, i64* %tmp.119.sroa.2.0.cast.2867.sroa_cast, align 8, !dbg !1288
  %tmp.119.sroa.3.0.cast.2867.sroa_idx29 = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.formal.18, i64 0, i32 1, i32 1, !dbg !1288
  %tmp.119.sroa.3.0.cast.2867.sroa_cast = bitcast i8** %tmp.119.sroa.3.0.cast.2867.sroa_idx29 to i64*, !dbg !1288
  store i64 %call.193.fca.1.extract, i64* %tmp.119.sroa.3.0.cast.2867.sroa_cast, align 8, !dbg !1288
  ret void, !dbg !1288

else.275:                                         ; preds = %fallthrough.273
  %field.773 = getelementptr inbounds i8, i8* %call.189, i64 32, !dbg !1289
  call void @llvm.dbg.value(metadata i8* %field.773, metadata !1268, metadata !DIExpression()), !dbg !1269
  call void @llvm.dbg.value(metadata i64 0, metadata !1286, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1287
  call void @llvm.dbg.value(metadata i64 0, metadata !1286, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1287
  %1 = bitcast { i64*, %error.0 }* %sret.formal.18 to i8**, !dbg !1290
  store i8* %field.773, i8** %1, align 8, !dbg !1290
  %tmp.120.sroa.2.0.cast.2875.sroa_idx30 = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.formal.18, i64 0, i32 1, !dbg !1290
  %2 = bitcast %error.0* %tmp.120.sroa.2.0.cast.2875.sroa_idx30 to i8*, !dbg !1290
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false), !dbg !1290
  ret void, !dbg !1290
}

define i8 @command_line_arguments.WarpState.HostCanReceiveWrite(i8* nest nocapture readnone %nest.42, %WarpState.0* readonly %w) #0 !dbg !1291 {
entry:
  %tmpv.819 = alloca %IPST.4, align 8
  call void @llvm.dbg.value(metadata %WarpState.0* %w, metadata !1294, metadata !DIExpression()), !dbg !1295
  call void @llvm.dbg.value(metadata i8 0, metadata !1296, metadata !DIExpression()), !dbg !1297
  call void @llvm.dbg.value(metadata i8 0, metadata !1298, metadata !DIExpression()), !dbg !1300
  %icmp.322 = icmp eq %WarpState.0* %w, null, !dbg !1301
  br i1 %icmp.322, label %then.281, label %else.281

then.281:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1301
  unreachable

else.281:                                         ; preds = %entry
  %field.786 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 2, !dbg !1301
  %.field.ld.124 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.786, align 8, !dbg !1301
  %cast.2942 = bitcast %IPST.4* %tmpv.819 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2942, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.124, i8* nonnull %cast.2942), !dbg !1303
  call void @llvm.dbg.value(metadata i8 0, metadata !1298, metadata !DIExpression()), !dbg !1300
  %field.791 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.819, i64 0, i32 0, !dbg !1303
  %tmpv.819.field.ld.228 = load { i8*, i64 }*, { i8*, i64 }** %field.791, align 8, !dbg !1303
  %icmp.32529 = icmp eq { i8*, i64 }* %tmpv.819.field.ld.228, null, !dbg !1303
  br i1 %icmp.32529, label %else.284, label %then.284.lr.ph

then.284.lr.ph:                                   ; preds = %else.281
  %field.788 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.819, i64 0, i32 1
  br label %then.284

fallthrough.282:                                  ; preds = %then.284
  %tmpv.818.sroa.3.0.cast.2949.sroa_idx24 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.819.field.ld.1, i64 0, i32 2, !dbg !1303
  %tmpv.818.sroa.3.0.copyload25 = load i64, i64* %tmpv.818.sroa.3.0.cast.2949.sroa_idx24, align 8, !dbg !1303
  call void @llvm.dbg.value(metadata i64 %tmpv.818.sroa.3.0.copyload25, metadata !1304, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1305
  %iand.1 = and i64 %tmpv.818.sroa.3.0.copyload25, 2, !dbg !1306
  %icmp.324 = icmp eq i64 %iand.1, 0, !dbg !1307
  %spec.select = select i1 %icmp.324, i8 %can.030, i8 1
  br label %fallthrough.282.thread

fallthrough.282.thread:                           ; preds = %fallthrough.282, %then.284
  %0 = phi i8 [ %can.030, %then.284 ], [ %spec.select, %fallthrough.282 ]
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.2942), !dbg !1303
  call void @llvm.dbg.value(metadata i8 %0, metadata !1298, metadata !DIExpression()), !dbg !1300
  %tmpv.819.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.791, align 8, !dbg !1303
  %icmp.325 = icmp eq { i8*, i64 }* %tmpv.819.field.ld.2, null, !dbg !1303
  br i1 %icmp.325, label %else.284, label %then.284

then.284:                                         ; preds = %then.284.lr.ph, %fallthrough.282.thread
  %can.030 = phi i8 [ 0, %then.284.lr.ph ], [ %0, %fallthrough.282.thread ]
  call void @llvm.dbg.value(metadata i8 %can.030, metadata !1298, metadata !DIExpression()), !dbg !1300
  %tmpv.819.field.ld.1 = load %UserState.0*, %UserState.0** %field.788, align 8, !dbg !1303
  %tmpv.818.sroa.4.0.cast.2949.sroa_idx = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.819.field.ld.1, i64 0, i32 3, !dbg !1303
  %tmpv.818.sroa.4.0.copyload26 = load i8, i8* %tmpv.818.sroa.4.0.cast.2949.sroa_idx, align 8, !dbg !1303
  call void @llvm.dbg.value(metadata i8 %tmpv.818.sroa.4.0.copyload26, metadata !1304, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1305
  %icmp.323 = icmp eq i8 %tmpv.818.sroa.4.0.copyload26, 0, !dbg !1308
  br i1 %icmp.323, label %fallthrough.282, label %fallthrough.282.thread

else.284:                                         ; preds = %fallthrough.282.thread, %else.281
  %can.0.lcssa = phi i8 [ 0, %else.281 ], [ %0, %fallthrough.282.thread ]
  call void @llvm.dbg.value(metadata i8 %can.0.lcssa, metadata !1298, metadata !DIExpression()), !dbg !1300
  call void @llvm.dbg.value(metadata i8 undef, metadata !1296, metadata !DIExpression()), !dbg !1297
  ret i8 %can.0.lcssa, !dbg !1309
}

define { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.WarpState.Modes(i8* nest nocapture readnone %nest.45, %WarpState.0* readonly %w) #0 !dbg !1310 {
entry:
  %token = alloca { i8*, i64 }, align 8
  %tmpv.843 = alloca { i8*, i64 }, align 8
  %tmpv.845 = alloca %IPST.4, align 8
  %tmpv.848 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %WarpState.0* %w, metadata !1313, metadata !DIExpression()), !dbg !1314
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* null, metadata !1315, metadata !DIExpression()), !dbg !1316
  %call.201 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7github_com_spolu_warp.Mode to i8*), i64 0, i64 24, i64 16, i8* null), !dbg !1317
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.201, metadata !1319, metadata !DIExpression()), !dbg !1320
  %token.0.sroa_cast = bitcast { i8*, i64 }* %token to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %token.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %token.0.sroa_cast, i8 0, i64 16, i1 false)
  %icmp.333 = icmp eq %WarpState.0* %w, null, !dbg !1321
  br i1 %icmp.333, label %then.292, label %else.292

then.292:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1321
  unreachable

else.292:                                         ; preds = %entry
  %field.803 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 2, !dbg !1321
  %.field.ld.126 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.803, align 8, !dbg !1321
  %cast.3031 = bitcast { i8*, i64 }* %tmpv.843 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.3031, i8 0, i64 16, i1 false)
  %cast.3035 = bitcast %IPST.4* %tmpv.845 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.3035, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.126, i8* nonnull %cast.3035), !dbg !1323
  %field.808 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.845, i64 0, i32 0, !dbg !1323
  %tmpv.845.field.ld.232 = load { i8*, i64 }*, { i8*, i64 }** %field.808, align 8, !dbg !1323
  %icmp.33533 = icmp eq { i8*, i64 }* %tmpv.845.field.ld.232, null, !dbg !1323
  br i1 %icmp.33533, label %else.294, label %then.294.lr.ph

then.294.lr.ph:                                   ; preds = %else.292
  %field.805 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.845, i64 0, i32 1
  %cast.3051 = bitcast { i8*, i64 }* %tmpv.848 to i8*
  %token35 = bitcast { i8*, i64 }* %token to i8*
  br label %then.294

then.293:                                         ; preds = %then.294
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3051, i8* nonnull align 8 %token.0.sroa_cast, i64 16, i1 false)
  %call.202 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.Mode, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.201, i8* nonnull %cast.3051), !dbg !1324
  %cast.3055 = bitcast i8* %call.202 to i64*, !dbg !1324
  store i64 %tmpv.844.sroa.3.0.copyload24, i64* %cast.3055, align 8, !dbg !1324
  br label %fallthrough.293

fallthrough.293:                                  ; preds = %then.294, %then.293
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.3035), !dbg !1323
  %tmpv.845.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.808, align 8, !dbg !1323
  %icmp.335 = icmp eq { i8*, i64 }* %tmpv.845.field.ld.2, null, !dbg !1323
  br i1 %icmp.335, label %else.294, label %then.294

then.294:                                         ; preds = %then.294.lr.ph, %fallthrough.293
  %tmpv.845.field.ld.234 = phi { i8*, i64 }* [ %tmpv.845.field.ld.232, %then.294.lr.ph ], [ %tmpv.845.field.ld.2, %fallthrough.293 ]
  %cast.3040 = bitcast { i8*, i64 }* %tmpv.845.field.ld.234 to i8*, !dbg !1323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.3031, i8* align 8 %cast.3040, i64 16, i1 false), !dbg !1323
  %tmpv.845.field.ld.1 = load %UserState.0*, %UserState.0** %field.805, align 8, !dbg !1323
  %tmpv.844.sroa.3.0.cast.3042.sroa_idx23 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.845.field.ld.1, i64 0, i32 2, !dbg !1323
  %tmpv.844.sroa.3.0.copyload24 = load i64, i64* %tmpv.844.sroa.3.0.cast.3042.sroa_idx23, align 8, !dbg !1323
  %tmpv.844.sroa.4.0.cast.3042.sroa_idx = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.845.field.ld.1, i64 0, i32 3, !dbg !1323
  %tmpv.844.sroa.4.0.copyload25 = load i8, i8* %tmpv.844.sroa.4.0.cast.3042.sroa_idx, align 8, !dbg !1323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %token35, i8* nonnull align 8 %cast.3031, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.844.sroa.3.0.copyload24, metadata !1325, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1326
  call void @llvm.dbg.value(metadata i8 %tmpv.844.sroa.4.0.copyload25, metadata !1325, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1326
  %icmp.334 = icmp eq i8 %tmpv.844.sroa.4.0.copyload25, 0, !dbg !1327
  br i1 %icmp.334, label %then.293, label %fallthrough.293

else.294:                                         ; preds = %fallthrough.293, %else.292
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %token.0.sroa_cast)
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.201, metadata !1315, metadata !DIExpression()), !dbg !1316
  ret { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.201, !dbg !1328
}

define void @command_line_arguments.WarpState.ProtocolState(%State.0* nocapture sret %sret.formal.19, i8* nest nocapture readnone %nest.43, %WarpState.0* readonly %w) #0 !dbg !1329 {
entry:
  %"$ret44.sroa.0.i" = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %state.sroa.0 = alloca { { i8*, i64 }, %Size.0 }, align 8
  %tmpv.822.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmpv.825 = alloca %Size.0, align 8
  %tmpv.830 = alloca { i8*, i64 }, align 8
  %tmpv.832 = alloca %IPST.4, align 8
  %tmpv.835 = alloca { i8*, i64 }, align 8
  %tmpv.836 = alloca %User.0, align 8
  call void @llvm.dbg.value(metadata %WarpState.0* %w, metadata !1332, metadata !DIExpression()), !dbg !1333
  %state.sroa.0.0.sroa_cast = bitcast { { i8*, i64 }, %Size.0 }* %state.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %state.sroa.0.0.sroa_cast)
  %tmpv.822.sroa.0.0.sroa_cast = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.822.sroa.0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmpv.822.sroa.0.0.sroa_cast, i8 0, i64 32, i1 false)
  %icmp.326 = icmp eq %WarpState.0* %w, null, !dbg !1334
  br i1 %icmp.326, label %then.285, label %else.285

then.285:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1334
  unreachable

else.285:                                         ; preds = %entry
  %cast.2960 = bitcast %WarpState.0* %w to i8*
  %state.sroa.04950 = bitcast { { i8*, i64 }, %Size.0 }* %state.sroa.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %state.sroa.04950, i8* align 8 %cast.2960, i64 16, i1 false)
  %field.793 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 1, !dbg !1336
  %cast.2962 = bitcast %Size.0* %tmpv.825 to i8*
  %cast.2963 = bitcast %Size.0* %field.793 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2962, i8* nonnull align 8 %cast.2963, i64 16, i1 false)
  %call.199 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7github_com_spolu_warp.User to i8*), i64 0, i64 64, i64 16, i8* null), !dbg !1337
  %state.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, %Size.0 }, { { i8*, i64 }, %Size.0 }* %state.sroa.0, i64 0, i32 1, !dbg !1338
  %state.sroa.0.16.sroa_cast = bitcast %Size.0* %state.sroa.0.16.sroa_idx to i8*, !dbg !1338
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %state.sroa.0.16.sroa_cast, i8* nonnull align 8 %cast.2962, i64 16, i1 false), !dbg !1338
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.199, metadata !1339, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1340
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %tmpv.822.sroa.0.0.sroa_cast, i8 0, i64 32, i1 false)
  %field.797 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 2, !dbg !1341
  %.field.ld.125 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.797, align 8, !dbg !1341
  %cast.2976 = bitcast { i8*, i64 }* %tmpv.830 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2976, i8 0, i64 16, i1 false)
  %cast.2980 = bitcast %IPST.4* %tmpv.832 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2980, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.125, i8* nonnull %cast.2980), !dbg !1343
  %field.801 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.832, i64 0, i32 0, !dbg !1343
  %tmpv.832.field.ld.246 = load { i8*, i64 }*, { i8*, i64 }** %field.801, align 8, !dbg !1343
  %icmp.33147 = icmp eq { i8*, i64 }* %tmpv.832.field.ld.246, null, !dbg !1343
  br i1 %icmp.33147, label %else.290, label %then.290.lr.ph

then.290.lr.ph:                                   ; preds = %else.285
  %field.799 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.832, i64 0, i32 1
  %0 = bitcast %UserState.0** %field.799 to i8**
  %cast.2996 = bitcast { i8*, i64 }* %tmpv.835 to i8*
  %"$ret44.sroa.0.i.0.sroa_cast" = bitcast { { i8*, i64 }, { i8*, i64 } }* %"$ret44.sroa.0.i" to i8*
  %"tmpv.822.sroa.0.16.$ret44.sroa.0.16.sroa_cast.i.sroa_idx" = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %"$ret44.sroa.0.i", i64 0, i32 1
  %"tmpv.822.sroa.0.16.$ret44.sroa.0.16.sroa_cast.i.sroa_cast" = bitcast { i8*, i64 }* %"tmpv.822.sroa.0.16.$ret44.sroa.0.16.sroa_cast.i.sroa_idx" to i8*
  %tmpv.822.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmpv.822.sroa.0, i64 0, i32 1
  %tmpv.822.sroa.0.16.sroa_cast = bitcast { i8*, i64 }* %tmpv.822.sroa.0.16.sroa_idx to i8*
  %cast.2998 = bitcast %User.0* %tmpv.836 to i8*
  %sret.actual.143.sroa.2.0.cast.2998.sroa_idx21 = getelementptr inbounds %User.0, %User.0* %tmpv.836, i64 0, i32 2
  %sret.actual.143.sroa.3.0.cast.2998.sroa_idx = getelementptr inbounds %User.0, %User.0* %tmpv.836, i64 0, i32 3
  %sret.actual.143.sroa.4.0.cast.2998.sroa_raw_idx = getelementptr inbounds i8, i8* %cast.2998, i64 41
  %tmpv.822.sroa.052 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmpv.822.sroa.0 to i8*
  %tmpv.8365354 = bitcast %User.0* %tmpv.836 to i8*
  br label %then.290

then.288:                                         ; preds = %then.290
  %icmp.329 = icmp eq i8* %call.200, null, !dbg !1344
  br i1 %icmp.329, label %then.289, label %else.289

fallthrough.288:                                  ; preds = %else.288, %else.289
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.2980), !dbg !1343
  %tmpv.832.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.801, align 8, !dbg !1343
  %icmp.331 = icmp eq { i8*, i64 }* %tmpv.832.field.ld.2, null, !dbg !1343
  br i1 %icmp.331, label %else.290, label %then.290

else.288:                                         ; preds = %then.290
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.User..d, i64 0, i32 0), i8* %call.200, i8* nonnull %cast.2998), !dbg !1344
  br label %fallthrough.288

then.289:                                         ; preds = %then.288
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1344
  unreachable

else.289:                                         ; preds = %then.288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.200, i8* nonnull align 8 %cast.2998, i64 48, i1 false), !dbg !1344
  br label %fallthrough.288

then.290:                                         ; preds = %then.290.lr.ph, %fallthrough.288
  %tmpv.832.field.ld.248 = phi { i8*, i64 }* [ %tmpv.832.field.ld.246, %then.290.lr.ph ], [ %tmpv.832.field.ld.2, %fallthrough.288 ]
  %cast.2985 = bitcast { i8*, i64 }* %tmpv.832.field.ld.248 to i8*, !dbg !1343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2976, i8* align 8 %cast.2985, i64 16, i1 false), !dbg !1343
  %tmpv.832.field.ld.119 = load i8*, i8** %0, align 8, !dbg !1343
  %tmpv.831.sroa.3.0.tmpv.832.field.ld.119.sroa_idx = getelementptr inbounds i8, i8* %tmpv.832.field.ld.119, i64 32, !dbg !1343
  %tmpv.831.sroa.3.0.tmpv.832.field.ld.119.sroa_cast = bitcast i8* %tmpv.831.sroa.3.0.tmpv.832.field.ld.119.sroa_idx to i64*, !dbg !1343
  %tmpv.831.sroa.3.0.copyload38 = load i64, i64* %tmpv.831.sroa.3.0.tmpv.832.field.ld.119.sroa_cast, align 8, !dbg !1343
  %tmpv.831.sroa.4.0.tmpv.832.field.ld.119.sroa_raw_idx = getelementptr inbounds i8, i8* %tmpv.832.field.ld.119, i64 40, !dbg !1343
  %tmpv.831.sroa.4.0.copyload39 = load i8, i8* %tmpv.831.sroa.4.0.tmpv.832.field.ld.119.sroa_raw_idx, align 8, !dbg !1343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.822.sroa.052, i8* align 8 %tmpv.832.field.ld.119, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2996, i8* nonnull align 8 %cast.2976, i64 16, i1 false)
  call void @llvm.dbg.value(metadata %UserState.0* undef, metadata !1345, metadata !DIExpression(DW_OP_deref)), !dbg !1346
  call void @llvm.dbg.declare(metadata [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.330 to i8*), i64 41) to [7 x i8]*), metadata !1347, metadata !DIExpression(DW_OP_LLVM_fragment, 328, 56)), !dbg !1356
  call void @llvm.dbg.value(metadata %UserState.0* undef, metadata !1358, metadata !DIExpression()), !dbg !1359
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %"$ret44.sroa.0.i.0.sroa_cast")
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret44.sroa.0.i.0.sroa_cast", i8* align 8 %tmpv.832.field.ld.119, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"tmpv.822.sroa.0.16.$ret44.sroa.0.16.sroa_cast.i.sroa_cast", i8* nonnull align 8 %tmpv.822.sroa.0.16.sroa_cast, i64 16, i1 false), !dbg !1360
  call void @llvm.dbg.value(metadata i64 %tmpv.831.sroa.3.0.copyload38, metadata !1347, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1356
  call void @llvm.dbg.value(metadata i8 %tmpv.831.sroa.4.0.copyload39, metadata !1347, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.8365354, i8* nonnull align 8 %"$ret44.sroa.0.i.0.sroa_cast", i64 32, i1 false), !dbg !1361
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %"$ret44.sroa.0.i.0.sroa_cast"), !dbg !1361
  store i64 %tmpv.831.sroa.3.0.copyload38, i64* %sret.actual.143.sroa.2.0.cast.2998.sroa_idx21, align 8
  store i8 %tmpv.831.sroa.4.0.copyload39, i8* %sret.actual.143.sroa.3.0.cast.2998.sroa_idx, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %sret.actual.143.sroa.4.0.cast.2998.sroa_raw_idx, i8* nonnull align 1 getelementptr inbounds ([7 x i8], [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.330 to i8*), i64 41) to [7 x i8]*), i64 0, i64 0), i64 7, i1 false)
  %call.200 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.User, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.199, i8* nonnull %cast.2996), !dbg !1344
  %runtime.writeBarrier.ld.24 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1344
  %icmp.330 = icmp eq i32 %runtime.writeBarrier.ld.24, 0, !dbg !1344
  br i1 %icmp.330, label %then.288, label %else.288

else.290:                                         ; preds = %fallthrough.288, %else.285
  call void @llvm.dbg.value(metadata { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.199, metadata !1362, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1363
  %"$ret51.sroa.0.0.cast.3013.sroa_cast" = bitcast %State.0* %sret.formal.19 to i8*, !dbg !1364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %"$ret51.sroa.0.0.cast.3013.sroa_cast", i8* nonnull align 8 %state.sroa.0.0.sroa_cast, i64 32, i1 false), !dbg !1364
  %"$ret51.sroa.5.0.cast.3013.sroa_idx13" = getelementptr inbounds %State.0, %State.0* %sret.formal.19, i64 0, i32 2, !dbg !1364
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.199, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %"$ret51.sroa.5.0.cast.3013.sroa_idx13", align 8, !dbg !1364
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %state.sroa.0.0.sroa_cast), !dbg !1364
  ret void, !dbg !1364
}

define { i64, i64 } @command_line_arguments.WarpState.SetMode(i8* nest nocapture readnone %nest.41, %WarpState.0* readonly %w, i64 %user.chunk0, i64 %user.chunk1, i64 %mode) #0 !dbg !1365 {
entry:
  %tmp.122 = alloca %IPST.3, align 8
  %userState.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmpv.796 = alloca { i8*, i64 }, align 8
  %tmpv.804 = alloca { i8*, i64 }, align 8
  %tmpv.805 = alloca [1 x %IPST.11], align 8
  %tmpv.809 = alloca { i8*, i64 }, align 8
  %tmpv.810 = alloca %UserState.0, align 8
  call void @llvm.dbg.value(metadata %WarpState.0* %w, metadata !1368, metadata !DIExpression()), !dbg !1369
  call void @llvm.dbg.value(metadata i64 %user.chunk0, metadata !1370, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1371
  call void @llvm.dbg.value(metadata i64 %user.chunk1, metadata !1370, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1371
  call void @llvm.dbg.value(metadata i64 %mode, metadata !1372, metadata !DIExpression()), !dbg !1373
  %userState.sroa.0.0.sroa_cast22 = bitcast { { i8*, i64 }, { i8*, i64 } }* %userState.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %userState.sroa.0.0.sroa_cast22)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %userState.sroa.0.0.sroa_cast22, i8 0, i64 32, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1374, metadata !DIExpression()), !dbg !1376
  %user.addr.sroa.0.0.cast.2882.sroa_cast = bitcast { i8*, i64 }* %tmpv.796 to i64*
  store i64 %user.chunk0, i64* %user.addr.sroa.0.0.cast.2882.sroa_cast, align 8
  %user.addr.sroa.4.0.cast.2882.sroa_idx34 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.796, i64 0, i32 1
  store i64 %user.chunk1, i64* %user.addr.sroa.4.0.cast.2882.sroa_idx34, align 8
  %icmp.317 = icmp eq %WarpState.0* %w, null, !dbg !1377
  br i1 %icmp.317, label %then.276, label %else.276

then.276:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1377
  unreachable

else.276:                                         ; preds = %entry
  %field.776 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 2, !dbg !1377
  %.field.ld.122 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.776, align 8, !dbg !1377
  %cast.2888 = bitcast { i8*, i64 }* %tmpv.796 to i8*, !dbg !1378
  %call.194 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.122, i8* nonnull %cast.2888), !dbg !1378
  %call.194.fca.0.extract = extractvalue { i64, i8 } %call.194, 0, !dbg !1378
  %call.194.fca.1.extract = extractvalue { i64, i8 } %call.194, 1, !dbg !1378
  %0 = inttoptr i64 %call.194.fca.0.extract to i8*, !dbg !1378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %userState.sroa.0.0.sroa_cast22, i8* align 8 %0, i64 32, i1 false), !dbg !1378
  call void @llvm.dbg.value(metadata i8 %call.194.fca.1.extract, metadata !1374, metadata !DIExpression()), !dbg !1376
  %icmp.318 = icmp eq i8 %call.194.fca.1.extract, 0, !dbg !1379
  br i1 %icmp.318, label %then.277, label %else.277

then.277:                                         ; preds = %else.276
  %call.195 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1380
  %user.addr.sroa.0.0.cast.2896.sroa_cast = bitcast { i8*, i64 }* %tmpv.804 to i64*
  store i64 %user.chunk0, i64* %user.addr.sroa.0.0.cast.2896.sroa_cast, align 8
  %user.addr.sroa.4.0.cast.2896.sroa_idx35 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.804, i64 0, i32 1
  store i64 %user.chunk1, i64* %user.addr.sroa.4.0.cast.2896.sroa_idx35, align 8
  %cast.2899 = bitcast { i8*, i64 }* %tmpv.804 to i8*, !dbg !1380
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.195, i8* nonnull %cast.2899), !dbg !1380
  %tmp.121.sroa.0.0.cast.2901.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.805, i64 0, i64 0, i32 0, !dbg !1380
  store %_type.0* @string..d, %_type.0** %tmp.121.sroa.0.0.cast.2901.sroa_idx, align 8, !dbg !1380
  %tmp.121.sroa.2.0.cast.2901.sroa_idx39 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.805, i64 0, i64 0, i32 1, !dbg !1380
  store i8* %call.195, i8** %tmp.121.sroa.2.0.cast.2901.sroa_idx39, align 8, !dbg !1380
  %field.781 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.122, i64 0, i32 0, !dbg !1380
  %cast.2904 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.805, i64 0, i64 0, !dbg !1380
  store %IPST.11* %cast.2904, %IPST.11** %field.781, align 8, !dbg !1380
  %field.782 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.122, i64 0, i32 1, !dbg !1380
  store i64 1, i64* %field.782, align 8, !dbg !1380
  %field.783 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.122, i64 0, i32 2, !dbg !1380
  store i64 1, i64* %field.783, align 8, !dbg !1380
  %call.196 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([17 x i8]* @const.349 to i64), i64 16, %IPST.3* byval nonnull %tmp.122), !dbg !1380
  %call.196.fca.0.extract = extractvalue { i64, i64 } %call.196, 0, !dbg !1380
  %call.196.fca.1.extract = extractvalue { i64, i64 } %call.196, 1, !dbg !1380
  %call.197 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.196.fca.0.extract, i64 %call.196.fca.1.extract), !dbg !1381
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %userState.sroa.0.0.sroa_cast22), !dbg !1382
  ret { i64, i64 } %call.197, !dbg !1382

else.277:                                         ; preds = %else.276
  %cast.2892 = inttoptr i64 %call.194.fca.0.extract to %UserState.0*, !dbg !1378
  call void @llvm.dbg.value(metadata %UserState.0* %cast.2892, metadata !1383, metadata !DIExpression(DW_OP_plus_uconst, 32, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 256, 64)), !dbg !1376
  %userState.sroa.7.0.cast.2894.sroa_idx16 = getelementptr inbounds %UserState.0, %UserState.0* %cast.2892, i64 0, i32 3, !dbg !1378
  %userState.sroa.7.0.cast.2894.sroa_cast = bitcast i8* %userState.sroa.7.0.cast.2894.sroa_idx16 to i64*, !dbg !1378
  %userState.sroa.7.0.copyload17 = load i64, i64* %userState.sroa.7.0.cast.2894.sroa_cast, align 8, !dbg !1378
  call void @llvm.dbg.value(metadata i64 %userState.sroa.7.0.copyload17, metadata !1383, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 64)), !dbg !1376
  call void @llvm.dbg.value(metadata i64 %mode, metadata !1383, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1376
  %user.addr.sroa.0.0.cast.2915.sroa_cast = bitcast { i8*, i64 }* %tmpv.809 to i64*
  store i64 %user.chunk0, i64* %user.addr.sroa.0.0.cast.2915.sroa_cast, align 8
  %user.addr.sroa.4.0.cast.2915.sroa_idx37 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.809, i64 0, i32 1
  store i64 %user.chunk1, i64* %user.addr.sroa.4.0.cast.2915.sroa_idx37, align 8
  %userState.sroa.0.0.cast.2917.sroa_cast = bitcast %UserState.0* %tmpv.810 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %userState.sroa.0.0.cast.2917.sroa_cast, i8* nonnull align 8 %userState.sroa.0.0.sroa_cast22, i64 32, i1 false)
  %userState.sroa.6.0.cast.2917.sroa_idx12 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.810, i64 0, i32 2
  store i64 %mode, i64* %userState.sroa.6.0.cast.2917.sroa_idx12, align 8
  %userState.sroa.7.0.cast.2917.sroa_idx18 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.810, i64 0, i32 3
  %userState.sroa.7.0.cast.2917.sroa_cast = bitcast i8* %userState.sroa.7.0.cast.2917.sroa_idx18 to i64*
  store i64 %userState.sroa.7.0.copyload17, i64* %userState.sroa.7.0.cast.2917.sroa_cast, align 8
  %.field.ld.123 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.776, align 8, !dbg !1384
  %cast.2921 = bitcast { i8*, i64 }* %tmpv.809 to i8*, !dbg !1385
  %call.198 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.123, i8* nonnull %cast.2921), !dbg !1385
  %runtime.writeBarrier.ld.23 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1385
  %icmp.321 = icmp eq i32 %runtime.writeBarrier.ld.23, 0, !dbg !1385
  br i1 %icmp.321, label %then.279, label %else.279

then.279:                                         ; preds = %else.277
  %icmp.320 = icmp eq i8* %call.198, null, !dbg !1385
  br i1 %icmp.320, label %then.280, label %else.280

fallthrough.279:                                  ; preds = %else.279, %else.280
  call void @llvm.dbg.value(metadata i64 0, metadata !1386, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1387
  call void @llvm.dbg.value(metadata i64 0, metadata !1386, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1387
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %userState.sroa.0.0.sroa_cast22), !dbg !1388
  ret { i64, i64 } zeroinitializer, !dbg !1388

else.279:                                         ; preds = %else.277
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0), i8* %call.198, i8* nonnull %userState.sroa.0.0.cast.2917.sroa_cast), !dbg !1385
  br label %fallthrough.279

then.280:                                         ; preds = %then.279
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1385
  unreachable

else.280:                                         ; preds = %then.279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.198, i8* nonnull align 8 %userState.sroa.0.0.cast.2917.sroa_cast, i64 48, i1 false), !dbg !1385
  br label %fallthrough.279
}

define { i64, i64 } @command_line_arguments.WarpState.Update(i8* nest nocapture readnone %nest.39, %WarpState.0* %w, %State.0* byval nocapture readonly %state, i8 zeroext %hosting) #0 !dbg !1389 {
entry:
  %tmp.116 = alloca %IPST.3, align 8
  %tmp.113 = alloca %IPST.3, align 8
  %tmp.111 = alloca %IPST.3, align 8
  %tmp.108 = alloca %IPST.3, align 8
  call void @llvm.dbg.declare(metadata %State.0* %state, metadata !1392, metadata !DIExpression()), !dbg !1393
  %tmpv.703 = alloca { i8*, i64 }, align 8
  %tmpv.704 = alloca [1 x %IPST.11], align 8
  %token = alloca { i8*, i64 }, align 8
  %user.sroa.10 = alloca { i8*, i64 }, align 8
  %tmpv.710 = alloca { i8*, i64 }, align 8
  %tmpv.712 = alloca %IPST.5, align 8
  %tmpv.717 = alloca { i8*, i64 }, align 8
  %tmpv.719 = alloca { i8*, i64 }, align 8
  %tmpv.720 = alloca [2 x %IPST.11], align 8
  %tmpv.723 = alloca { i8*, i64 }, align 8
  %tmpv.732 = alloca { i8*, i64 }, align 8
  %tmpv.733 = alloca [1 x %IPST.11], align 8
  %tmpv.739 = alloca { i8*, i64 }, align 8
  %tmpv.741 = alloca [2 x %IPST.11], align 8
  %tmpv.745 = alloca { i8*, i64 }, align 8
  %tmpv.749 = alloca %UserState.0, align 8
  %userState.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  %tmpv.757 = alloca { i8*, i64 }, align 8
  %tmpv.758 = alloca %UserState.0, align 8
  %token1 = alloca { i8*, i64 }, align 8
  %tmpv.766 = alloca %IPST.4, align 8
  %tmpv.767 = alloca { i8*, i64 }, align 8
  %tmpv.775 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.value(metadata %WarpState.0* %w, metadata !1394, metadata !DIExpression()), !dbg !1395
  call void @llvm.dbg.value(metadata i8 %hosting, metadata !1396, metadata !DIExpression()), !dbg !1397
  %icmp.293 = icmp eq %WarpState.0* %w, null, !dbg !1398
  br i1 %icmp.293, label %then.249, label %else.249

then.249:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1398
  unreachable

else.249:                                         ; preds = %entry
  %field0.158 = bitcast %State.0* %state to i64*, !dbg !1399
  %ld.294 = load i64, i64* %field0.158, align 8, !dbg !1399
  %0 = getelementptr inbounds %State.0, %State.0* %state, i64 0, i32 0, i32 1, !dbg !1399
  %ld.295 = load i64, i64* %0, align 8, !dbg !1399
  %field0.159 = bitcast %WarpState.0* %w to i64*, !dbg !1399
  %ld.296 = load i64, i64* %field0.159, align 8, !dbg !1399
  %1 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 0, i32 1, !dbg !1399
  %ld.297 = load i64, i64* %1, align 8, !dbg !1399
  %call.171 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.294, i64 %ld.295, i64 %ld.296, i64 %ld.297), !dbg !1399
  %icmp.294 = icmp eq i8 %call.171, 1, !dbg !1399
  br i1 %icmp.294, label %else.251, label %then.250

then.250:                                         ; preds = %else.249
  %cast.2590 = bitcast %State.0* %state to i8*
  %call.168 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1400
  %cast.2592 = bitcast { i8*, i64 }* %tmpv.703 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2592, i8* nonnull align 8 %cast.2590, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.168, i8* nonnull %cast.2592), !dbg !1400
  %tmp.107.sroa.0.0.cast.2597.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.704, i64 0, i64 0, i32 0, !dbg !1400
  store %_type.0* @string..d, %_type.0** %tmp.107.sroa.0.0.cast.2597.sroa_idx, align 8, !dbg !1400
  %tmp.107.sroa.2.0.cast.2597.sroa_idx116 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.704, i64 0, i64 0, i32 1, !dbg !1400
  store i8* %call.168, i8** %tmp.107.sroa.2.0.cast.2597.sroa_idx116, align 8, !dbg !1400
  %field.705 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.108, i64 0, i32 0, !dbg !1400
  %cast.2600 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.704, i64 0, i64 0, !dbg !1400
  store %IPST.11* %cast.2600, %IPST.11** %field.705, align 8, !dbg !1400
  %field.706 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.108, i64 0, i32 1, !dbg !1400
  store i64 1, i64* %field.706, align 8, !dbg !1400
  %field.707 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.108, i64 0, i32 2, !dbg !1400
  store i64 1, i64* %field.707, align 8, !dbg !1400
  %call.169 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([24 x i8]* @const.333 to i64), i64 23, %IPST.3* byval nonnull %tmp.108), !dbg !1400
  %call.169.fca.0.extract = extractvalue { i64, i64 } %call.169, 0, !dbg !1400
  %call.169.fca.1.extract = extractvalue { i64, i64 } %call.169, 1, !dbg !1400
  %call.170 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.169.fca.0.extract, i64 %call.169.fca.1.extract), !dbg !1401
  ret { i64, i64 } %call.170, !dbg !1402

else.251:                                         ; preds = %else.249
  %field.710 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 1, !dbg !1403
  %field.711 = getelementptr inbounds %State.0, %State.0* %state, i64 0, i32 1, !dbg !1404
  %cast.2615 = bitcast %Size.0* %field.710 to i8*, !dbg !1405
  %cast.2616 = bitcast %Size.0* %field.711 to i8*, !dbg !1405
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2615, i8* nonnull align 8 %cast.2616, i64 16, i1 false), !dbg !1405
  %2 = bitcast { i8*, i64 }* %token to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2)
  %user.sroa.10.0.sroa_cast82 = bitcast { i8*, i64 }* %user.sroa.10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %user.sroa.10.0.sroa_cast82)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %user.sroa.10.0.sroa_cast82, i8* align 16 bitcast ({ i8*, i64 }* getelementptr inbounds (%User.0, %User.0* @const.330, i64 0, i32 1) to i8*), i64 16, i1 false)
  %field.712 = getelementptr inbounds %State.0, %State.0* %state, i64 0, i32 2, !dbg !1406
  %state.field.ld.0 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.712, align 8, !dbg !1406
  %cast.2621 = bitcast { i8*, i64 }* %tmpv.710 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2621, i8 0, i64 16, i1 false)
  %cast.2625 = bitcast %IPST.5* %tmpv.712 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2625, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.User, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %state.field.ld.0, i8* nonnull %cast.2625), !dbg !1408
  %field.755 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.712, i64 0, i32 0, !dbg !1408
  %tmpv.712.field.ld.2144 = load { i8*, i64 }*, { i8*, i64 }** %field.755, align 8, !dbg !1408
  %icmp.308145 = icmp eq { i8*, i64 }* %tmpv.712.field.ld.2144, null, !dbg !1408
  br i1 %icmp.308145, label %else.251.else.267_crit_edge, label %then.267.lr.ph

else.251.else.267_crit_edge:                      ; preds = %else.251
  %.pre = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 2, !dbg !1409
  br label %else.267

then.267.lr.ph:                                   ; preds = %else.251
  %field.714 = getelementptr inbounds %IPST.5, %IPST.5* %tmpv.712, i64 0, i32 1
  %field0.162 = bitcast { i8*, i64 }* %token to i64*
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %token, i64 0, i32 1
  %cast.2691 = bitcast { i8*, i64 }* %tmpv.723 to i8*
  %field.724 = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 2
  %4 = and i8 %hosting, 1
  %trunc.258 = icmp ne i8 %4, 0
  %userState.sroa.0.0.sroa_cast72 = bitcast { { i8*, i64 }, { i8*, i64 } }* %userState.sroa.0 to i8*
  %user.sroa.10.16.userState.sroa.0.16.sroa_cast.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %userState.sroa.0, i64 0, i32 1
  %user.sroa.10.16.userState.sroa.0.16.sroa_cast.sroa_cast = bitcast { i8*, i64 }* %user.sroa.10.16.userState.sroa.0.16.sroa_cast.sroa_idx to i8*
  %icmp.303 = icmp eq i8 %hosting, 0
  %cast.2772 = bitcast { i8*, i64 }* %tmpv.757 to i8*
  %userState.sroa.0.0.cast.2774.sroa_cast = bitcast %UserState.0* %tmpv.758 to i8*
  %userState.sroa.5.0.cast.2774.sroa_idx8 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.758, i64 0, i32 2
  %userState.sroa.6.0.cast.2774.sroa_idx12 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.758, i64 0, i32 3
  %userState.sroa.6.0.cast.2774.sroa_cast = bitcast i8* %userState.sroa.6.0.cast.2774.sroa_idx12 to i64*
  %cast.2746 = bitcast { i8*, i64 }* %tmpv.745 to i8*
  %cast.2750 = bitcast %UserState.0* %tmpv.749 to i8*
  %field.745 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.749, i64 0, i32 1
  %cast.2752 = bitcast { i8*, i64 }* %field.745 to i8*
  %field.746 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.749, i64 0, i32 2
  %field.747 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.749, i64 0, i32 3
  %token162 = bitcast { i8*, i64 }* %token to i8*
  %user.sroa.10163 = bitcast { i8*, i64 }* %user.sroa.10 to i8*
  br label %then.267

then.252:                                         ; preds = %then.267
  %call.172 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1411
  %cast.2662 = bitcast { i8*, i64 }* %tmpv.717 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2662, i8* nonnull align 8 %2, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.172, i8* nonnull %cast.2662), !dbg !1411
  %call.173 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1411
  %tmpv.715.sroa.0.0.cast.2667.sroa_cast = bitcast { i8*, i64 }* %tmpv.719 to i64*
  store i64 %tmpv.711.sroa.0.0.copyload87, i64* %tmpv.715.sroa.0.0.cast.2667.sroa_cast, align 8
  %tmpv.715.sroa.2.0.cast.2667.sroa_idx74 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.719, i64 0, i32 1
  store i64 %tmpv.711.sroa.3.0.copyload89, i64* %tmpv.715.sroa.2.0.cast.2667.sroa_idx74, align 8
  %cast.2670 = bitcast { i8*, i64 }* %tmpv.719 to i8*, !dbg !1411
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.173, i8* nonnull %cast.2670), !dbg !1411
  %tmp.109.sroa.0.0.cast.2673.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.720, i64 0, i64 0, i32 0, !dbg !1411
  store %_type.0* @string..d, %_type.0** %tmp.109.sroa.0.0.cast.2673.sroa_idx, align 8, !dbg !1411
  %tmp.109.sroa.2.0.cast.2673.sroa_idx117 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.720, i64 0, i64 0, i32 1, !dbg !1411
  store i8* %call.172, i8** %tmp.109.sroa.2.0.cast.2673.sroa_idx117, align 8, !dbg !1411
  %tmp.110.sroa.0.0.cast.2675.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.720, i64 0, i64 1, i32 0, !dbg !1411
  store %_type.0* @string..d, %_type.0** %tmp.110.sroa.0.0.cast.2675.sroa_idx, align 8, !dbg !1411
  %tmp.110.sroa.2.0.cast.2675.sroa_idx118 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.720, i64 0, i64 1, i32 1, !dbg !1411
  store i8* %call.173, i8** %tmp.110.sroa.2.0.cast.2675.sroa_idx118, align 8, !dbg !1411
  %field.720 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.111, i64 0, i32 0, !dbg !1411
  %cast.2678 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.720, i64 0, i64 0, !dbg !1411
  store %IPST.11* %cast.2678, %IPST.11** %field.720, align 8, !dbg !1411
  %field.721 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.111, i64 0, i32 1, !dbg !1411
  store i64 2, i64* %field.721, align 8, !dbg !1411
  %field.722 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.111, i64 0, i32 2, !dbg !1411
  store i64 2, i64* %field.722, align 8, !dbg !1411
  %call.174 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.342 to i64), i64 29, %IPST.3* byval nonnull %tmp.111), !dbg !1411
  %call.174.fca.0.extract = extractvalue { i64, i64 } %call.174, 0, !dbg !1411
  %call.174.fca.1.extract = extractvalue { i64, i64 } %call.174, 1, !dbg !1411
  %call.175 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.174.fca.0.extract, i64 %call.174.fca.1.extract), !dbg !1412
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1413
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %user.sroa.10.0.sroa_cast82), !dbg !1413
  ret { i64, i64 } %call.175, !dbg !1413

else.252:                                         ; preds = %then.267
  call void @llvm.dbg.value(metadata i8 0, metadata !1414, metadata !DIExpression()), !dbg !1416
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2691, i8* nonnull align 8 %2, i64 16, i1 false)
  %.field.ld.115 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.724, align 8, !dbg !1417
  %call.177 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.115, i8* nonnull %cast.2691), !dbg !1418
  %call.177.fca.1.extract = extractvalue { i64, i8 } %call.177, 1, !dbg !1418
  call void @llvm.dbg.value(metadata i8 %call.177.fca.1.extract, metadata !1414, metadata !DIExpression()), !dbg !1416
  %icmp.307 = icmp eq i8 %call.177.fca.1.extract, 0, !dbg !1419
  br i1 %icmp.307, label %then.254, label %else.254

then.254:                                         ; preds = %else.252
  %spec.select = select i1 %trunc.258, i8 %tmpv.711.sroa.6.0.copyload93, i8 %hosting
  %5 = and i8 %spec.select, 1, !dbg !1420
  %trunc.259 = icmp eq i8 %5, 0, !dbg !1420
  br i1 %trunc.259, label %else.256, label %then.256

fallthrough.254:                                  ; preds = %else.261, %else.260, %fallthrough.265
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.2625), !dbg !1408
  %tmpv.712.field.ld.2 = load { i8*, i64 }*, { i8*, i64 }** %field.755, align 8, !dbg !1408
  %icmp.308 = icmp eq { i8*, i64 }* %tmpv.712.field.ld.2, null, !dbg !1408
  br i1 %icmp.308, label %else.267, label %then.267

else.254:                                         ; preds = %else.252
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %userState.sroa.0.0.sroa_cast72)
  %.field.ld.117 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.724, align 8, !dbg !1421
  %call.186 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.117, i8* nonnull %2), !dbg !1423
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %userState.sroa.0.0.sroa_cast72, i8* align 8 %call.186, i64 16, i1 false)
  %userState.sroa.5.0.cast.2769.sroa_idx7 = getelementptr inbounds i8, i8* %call.186, i64 32
  %6 = bitcast i8* %userState.sroa.5.0.cast.2769.sroa_idx7 to i64*
  %userState.sroa.5.0.copyload = load i64, i64* %6, align 8
  call void @llvm.dbg.value(metadata i64 %userState.sroa.5.0.copyload, metadata !1424, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1425
  %7 = getelementptr inbounds i8, i8* %call.186, i64 40
  %userState.sroa.6.0.cast.2769.sroa_cast = bitcast i8* %7 to i64*
  %userState.sroa.6.0.copyload = load i64, i64* %userState.sroa.6.0.cast.2769.sroa_cast, align 8
  call void @llvm.dbg.value(metadata i64 %userState.sroa.6.0.copyload, metadata !1424, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 64)), !dbg !1425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %user.sroa.10.16.userState.sroa.0.16.sroa_cast.sroa_cast, i8* nonnull align 8 %user.sroa.10.0.sroa_cast82, i64 16, i1 false), !dbg !1426
  call void @llvm.dbg.value(metadata i64 %tmpv.711.sroa.5.0.copyload92, metadata !1424, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1425
  %userState.sroa.5.0 = select i1 %icmp.303, i64 %tmpv.711.sroa.5.0.copyload92, i64 %userState.sroa.5.0.copyload
  call void @llvm.dbg.value(metadata i64 %userState.sroa.5.0, metadata !1424, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2772, i8* nonnull align 8 %2, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %userState.sroa.0.0.cast.2774.sroa_cast, i8* nonnull align 8 %userState.sroa.0.0.sroa_cast72, i64 32, i1 false)
  store i64 %userState.sroa.5.0, i64* %userState.sroa.5.0.cast.2774.sroa_idx8, align 8
  store i64 %userState.sroa.6.0.copyload, i64* %userState.sroa.6.0.cast.2774.sroa_cast, align 8
  %.field.ld.118 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.724, align 8, !dbg !1427
  %call.187 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.118, i8* nonnull %cast.2772), !dbg !1428
  %runtime.writeBarrier.ld.21 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1428
  %icmp.306 = icmp eq i32 %runtime.writeBarrier.ld.21, 0, !dbg !1428
  br i1 %icmp.306, label %then.265, label %else.265

then.256:                                         ; preds = %then.254
  %call.178 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1429
  %cast.2703 = bitcast { i8*, i64 }* %tmpv.732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2703, i8* nonnull align 8 %2, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.178, i8* nonnull %cast.2703), !dbg !1429
  %tmp.112.sroa.0.0.cast.2708.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.733, i64 0, i64 0, i32 0, !dbg !1429
  store %_type.0* @string..d, %_type.0** %tmp.112.sroa.0.0.cast.2708.sroa_idx, align 8, !dbg !1429
  %tmp.112.sroa.2.0.cast.2708.sroa_idx119 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.733, i64 0, i64 0, i32 1, !dbg !1429
  store i8* %call.178, i8** %tmp.112.sroa.2.0.cast.2708.sroa_idx119, align 8, !dbg !1429
  %field.730 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.113, i64 0, i32 0, !dbg !1429
  %cast.2711 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.733, i64 0, i64 0, !dbg !1429
  store %IPST.11* %cast.2711, %IPST.11** %field.730, align 8, !dbg !1429
  %field.731 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.113, i64 0, i32 1, !dbg !1429
  store i64 1, i64* %field.731, align 8, !dbg !1429
  %field.732 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.113, i64 0, i32 2, !dbg !1429
  store i64 1, i64* %field.732, align 8, !dbg !1429
  %call.179 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([36 x i8]* @const.344 to i64), i64 35, %IPST.3* byval nonnull %tmp.113), !dbg !1429
  %call.179.fca.0.extract = extractvalue { i64, i64 } %call.179, 0, !dbg !1429
  %call.179.fca.1.extract = extractvalue { i64, i64 } %call.179, 1, !dbg !1429
  %call.180 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.179.fca.0.extract, i64 %call.179.fca.1.extract), !dbg !1430
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1431
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %user.sroa.10.0.sroa_cast82), !dbg !1431
  ret { i64, i64 } %call.180, !dbg !1431

else.256:                                         ; preds = %then.254
  %icmp.298 = icmp ne i64 %tmpv.711.sroa.5.0.copyload92, 1, !dbg !1432
  %zext.279 = zext i1 %icmp.298 to i8, !dbg !1432
  %tmpv.736.0 = select i1 %trunc.258, i8 %zext.279, i8 %hosting
  %8 = and i8 %tmpv.736.0, 1, !dbg !1433
  %trunc.261 = icmp eq i8 %8, 0, !dbg !1433
  br i1 %trunc.261, label %else.258, label %then.258

then.258:                                         ; preds = %else.256
  %call.181 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !1434
  %cast.2723 = bitcast { i8*, i64 }* %tmpv.739 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2723, i8* nonnull align 8 %2, i64 16, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.181, i8* nonnull %cast.2723), !dbg !1434
  %call.182 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_spolu_warp.Mode..d), !dbg !1434
  %cast.2727 = bitcast i8* %call.182 to i64*, !dbg !1434
  store i64 %tmpv.711.sroa.5.0.copyload92, i64* %cast.2727, align 8, !dbg !1434
  %tmp.114.sroa.0.0.cast.2730.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.741, i64 0, i64 0, i32 0, !dbg !1434
  store %_type.0* @string..d, %_type.0** %tmp.114.sroa.0.0.cast.2730.sroa_idx, align 8, !dbg !1434
  %tmp.114.sroa.2.0.cast.2730.sroa_idx120 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.741, i64 0, i64 0, i32 1, !dbg !1434
  store i8* %call.181, i8** %tmp.114.sroa.2.0.cast.2730.sroa_idx120, align 8, !dbg !1434
  %tmp.115.sroa.0.0.cast.2732.sroa_idx = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.741, i64 0, i64 1, i32 0, !dbg !1434
  store %_type.0* @github_com_spolu_warp.Mode..d, %_type.0** %tmp.115.sroa.0.0.cast.2732.sroa_idx, align 8, !dbg !1434
  %tmp.115.sroa.2.0.cast.2732.sroa_idx121 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.741, i64 0, i64 1, i32 1, !dbg !1434
  store i8* %call.182, i8** %tmp.115.sroa.2.0.cast.2732.sroa_idx121, align 8, !dbg !1434
  %field.739 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.116, i64 0, i32 0, !dbg !1434
  %cast.2735 = getelementptr inbounds [2 x %IPST.11], [2 x %IPST.11]* %tmpv.741, i64 0, i64 0, !dbg !1434
  store %IPST.11* %cast.2735, %IPST.11** %field.739, align 8, !dbg !1434
  %field.740 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.116, i64 0, i32 1, !dbg !1434
  store i64 2, i64* %field.740, align 8, !dbg !1434
  %field.741 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.116, i64 0, i32 2, !dbg !1434
  store i64 2, i64* %field.741, align 8, !dbg !1434
  %call.183 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([36 x i8]* @const.346 to i64), i64 35, %IPST.3* byval nonnull %tmp.116), !dbg !1434
  %call.183.fca.0.extract = extractvalue { i64, i64 } %call.183, 0, !dbg !1434
  %call.183.fca.1.extract = extractvalue { i64, i64 } %call.183, 1, !dbg !1434
  %call.184 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.183.fca.0.extract, i64 %call.183.fca.1.extract), !dbg !1435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2), !dbg !1436
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %user.sroa.10.0.sroa_cast82), !dbg !1436
  ret { i64, i64 } %call.184, !dbg !1436

else.258:                                         ; preds = %else.256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2746, i8* nonnull align 8 %2, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2750, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !1437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2752, i8* nonnull align 8 %user.sroa.10.0.sroa_cast82, i64 16, i1 false), !dbg !1437
  store i64 1, i64* %field.746, align 8, !dbg !1437
  store i8 %tmpv.711.sroa.6.0.copyload93, i8* %field.747, align 8, !dbg !1437
  %.field.ld.116 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.724, align 8, !dbg !1438
  %call.185 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.116, i8* nonnull %cast.2746), !dbg !1439
  %runtime.writeBarrier.ld.20 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1439
  %icmp.301 = icmp eq i32 %runtime.writeBarrier.ld.20, 0, !dbg !1439
  br i1 %icmp.301, label %then.260, label %else.260

then.260:                                         ; preds = %else.258
  %icmp.300 = icmp eq i8* %call.185, null, !dbg !1439
  br i1 %icmp.300, label %then.261, label %else.261

else.260:                                         ; preds = %else.258
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0), i8* %call.185, i8* nonnull %cast.2750), !dbg !1439
  br label %fallthrough.254

then.261:                                         ; preds = %then.260
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1439
  unreachable

else.261:                                         ; preds = %then.260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.185, i8* nonnull align 8 %cast.2750, i64 48, i1 false), !dbg !1439
  br label %fallthrough.254

then.265:                                         ; preds = %else.254
  %icmp.305 = icmp eq i8* %call.187, null, !dbg !1428
  br i1 %icmp.305, label %then.266, label %else.266

fallthrough.265:                                  ; preds = %else.265, %else.266
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %userState.sroa.0.0.sroa_cast72)
  br label %fallthrough.254

else.265:                                         ; preds = %else.254
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0), i8* %call.187, i8* nonnull %userState.sroa.0.0.cast.2774.sroa_cast), !dbg !1428
  br label %fallthrough.265

then.266:                                         ; preds = %then.265
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1428
  unreachable

else.266:                                         ; preds = %then.265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.187, i8* nonnull align 8 %userState.sroa.0.0.cast.2774.sroa_cast, i64 48, i1 false), !dbg !1428
  br label %fallthrough.265

then.267:                                         ; preds = %then.267.lr.ph, %fallthrough.254
  %tmpv.712.field.ld.2146 = phi { i8*, i64 }* [ %tmpv.712.field.ld.2144, %then.267.lr.ph ], [ %tmpv.712.field.ld.2, %fallthrough.254 ]
  %cast.2648 = bitcast { i8*, i64 }* %tmpv.712.field.ld.2146 to i8*, !dbg !1408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2621, i8* align 8 %cast.2648, i64 16, i1 false), !dbg !1408
  %tmpv.712.field.ld.1 = load %User.0*, %User.0** %field.714, align 8, !dbg !1408
  %tmpv.711.sroa.0.0.cast.2650.sroa_cast = bitcast %User.0* %tmpv.712.field.ld.1 to i64*, !dbg !1408
  %tmpv.711.sroa.0.0.copyload87 = load i64, i64* %tmpv.711.sroa.0.0.cast.2650.sroa_cast, align 8, !dbg !1408
  %tmpv.711.sroa.3.0.cast.2650.sroa_idx88 = getelementptr inbounds %User.0, %User.0* %tmpv.712.field.ld.1, i64 0, i32 0, i32 1, !dbg !1408
  %tmpv.711.sroa.3.0.copyload89 = load i64, i64* %tmpv.711.sroa.3.0.cast.2650.sroa_idx88, align 8, !dbg !1408
  %tmpv.711.sroa.4.0.cast.2650.sroa_idx = getelementptr inbounds %User.0, %User.0* %tmpv.712.field.ld.1, i64 0, i32 1, !dbg !1408
  %tmpv.711.sroa.4.0.cast.2650.sroa_cast = bitcast { i8*, i64 }* %tmpv.711.sroa.4.0.cast.2650.sroa_idx to i8*, !dbg !1408
  %tmpv.711.sroa.5.0.cast.2650.sroa_idx91 = getelementptr inbounds %User.0, %User.0* %tmpv.712.field.ld.1, i64 0, i32 2, !dbg !1408
  %tmpv.711.sroa.5.0.copyload92 = load i64, i64* %tmpv.711.sroa.5.0.cast.2650.sroa_idx91, align 8, !dbg !1408
  %tmpv.711.sroa.6.0.cast.2650.sroa_idx = getelementptr inbounds %User.0, %User.0* %tmpv.712.field.ld.1, i64 0, i32 3, !dbg !1408
  %tmpv.711.sroa.6.0.copyload93 = load i8, i8* %tmpv.711.sroa.6.0.cast.2650.sroa_idx, align 8, !dbg !1408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %token162, i8* nonnull align 8 %cast.2621, i64 16, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %user.sroa.10163, i8* nonnull align 8 %tmpv.711.sroa.4.0.cast.2650.sroa_cast, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 %tmpv.711.sroa.0.0.copyload87, metadata !1440, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1441
  call void @llvm.dbg.value(metadata i64 %tmpv.711.sroa.3.0.copyload89, metadata !1440, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1441
  call void @llvm.dbg.value(metadata i64 %tmpv.711.sroa.5.0.copyload92, metadata !1440, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1441
  call void @llvm.dbg.value(metadata i8 %tmpv.711.sroa.6.0.copyload93, metadata !1440, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1441
  %ld.303 = load i64, i64* %field0.162, align 8, !dbg !1442
  %ld.304 = load i64, i64* %3, align 8, !dbg !1442
  %call.176 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.303, i64 %ld.304, i64 %tmpv.711.sroa.0.0.copyload87, i64 %tmpv.711.sroa.3.0.copyload89), !dbg !1442
  %icmp.296 = icmp eq i8 %call.176, 1, !dbg !1442
  br i1 %icmp.296, label %else.252, label %then.252

else.267:                                         ; preds = %fallthrough.254, %else.251.else.267_crit_edge
  %field.756.pre-phi = phi { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** [ %.pre, %else.251.else.267_crit_edge ], [ %field.724, %fallthrough.254 ], !dbg !1409
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %user.sroa.10.0.sroa_cast82)
  %token1.0.sroa_cast = bitcast { i8*, i64 }* %token1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %token1.0.sroa_cast)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %token1.0.sroa_cast, i8 0, i64 16, i1 false)
  %.field.ld.119 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.756.pre-phi, align 8, !dbg !1409
  %cast.2793 = bitcast %IPST.4* %tmpv.766 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2793, i8 0, i64 96, i1 false)
  call void @runtime.mapiterinit(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.119, i8* nonnull %cast.2793), !dbg !1443
  %field.762 = getelementptr inbounds %IPST.4, %IPST.4* %tmpv.766, i64 0, i32 0, !dbg !1443
  %tmpv.766.field.ld.1141 = load { i8*, i64 }*, { i8*, i64 }** %field.762, align 8, !dbg !1443
  %icmp.312142 = icmp eq { i8*, i64 }* %tmpv.766.field.ld.1141, null, !dbg !1443
  br i1 %icmp.312142, label %else.271, label %then.271.lr.ph

then.271.lr.ph:                                   ; preds = %else.267
  %cast.2801 = bitcast { i8*, i64 }* %tmpv.767 to i8*
  %cast.2812 = bitcast { i8*, i64 }* %tmpv.775 to i8*
  br label %then.271

fallthrough.269:                                  ; preds = %then.271, %else.270
  call void @runtime.mapiternext(i8* nest undef, i8* nonnull %cast.2793), !dbg !1443
  %tmpv.766.field.ld.1 = load { i8*, i64 }*, { i8*, i64 }** %field.762, align 8, !dbg !1443
  %icmp.312 = icmp eq { i8*, i64 }* %tmpv.766.field.ld.1, null, !dbg !1443
  br i1 %icmp.312, label %else.271, label %then.271

else.270:                                         ; preds = %then.271
  %.field.ld.120 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.756.pre-phi, align 8, !dbg !1444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2812, i8* nonnull align 8 %token1.0.sroa_cast, i64 16, i1 false)
  call void @runtime.mapdelete(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.120, i8* nonnull %cast.2812), !dbg !1446
  br label %fallthrough.269

then.271:                                         ; preds = %then.271.lr.ph, %fallthrough.269
  %tmpv.766.field.ld.1143 = phi { i8*, i64 }* [ %tmpv.766.field.ld.1141, %then.271.lr.ph ], [ %tmpv.766.field.ld.1, %fallthrough.269 ]
  %cast.2798 = bitcast { i8*, i64 }* %tmpv.766.field.ld.1143 to i8*, !dbg !1443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %token1.0.sroa_cast, i8* align 8 %cast.2798, i64 16, i1 false), !dbg !1443
  call void @llvm.dbg.value(metadata i8 0, metadata !1447, metadata !DIExpression()), !dbg !1448
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2801, i8* align 8 %cast.2798, i64 16, i1 false)
  %call.188 = call { i64, i8 } @runtime.mapaccess2(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7github_com_spolu_warp.User, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %state.field.ld.0, i8* nonnull %cast.2801), !dbg !1449
  %call.188.fca.1.extract = extractvalue { i64, i8 } %call.188, 1, !dbg !1449
  call void @llvm.dbg.value(metadata i8 %call.188.fca.1.extract, metadata !1447, metadata !DIExpression()), !dbg !1448
  %icmp.311 = icmp eq i8 %call.188.fca.1.extract, 0, !dbg !1450
  br i1 %icmp.311, label %else.270, label %fallthrough.269

else.271:                                         ; preds = %fallthrough.269, %else.267
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %token1.0.sroa_cast)
  call void @llvm.dbg.value(metadata i64 0, metadata !1451, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1452
  call void @llvm.dbg.value(metadata i64 0, metadata !1451, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1452
  ret { i64, i64 } zeroinitializer, !dbg !1453
}

define { i64, i64 } @command_line_arguments.WarpState.WindowSize(i8* nest nocapture readnone %nest.44, %WarpState.0* readonly %w) #0 !dbg !1454 {
entry:
  call void @llvm.dbg.value(metadata %WarpState.0* %w, metadata !1457, metadata !DIExpression()), !dbg !1458
  %icmp.332 = icmp eq %WarpState.0* %w, null, !dbg !1459
  br i1 %icmp.332, label %then.291, label %else.291

then.291:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1459
  unreachable

else.291:                                         ; preds = %entry
  %"$ret52.sroa.0.0.cast.3019.sroa_idx" = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 1, i32 0, !dbg !1460
  %"$ret52.sroa.0.0.copyload" = load i64, i64* %"$ret52.sroa.0.0.cast.3019.sroa_idx", align 8, !dbg !1460
  call void @llvm.dbg.value(metadata i64 %"$ret52.sroa.0.0.copyload", metadata !1461, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1462
  %"$ret52.sroa.5.0.cast.3019.sroa_idx3" = getelementptr inbounds %WarpState.0, %WarpState.0* %w, i64 0, i32 1, i32 1, !dbg !1460
  %"$ret52.sroa.5.0.copyload" = load i64, i64* %"$ret52.sroa.5.0.cast.3019.sroa_idx3", align 8, !dbg !1460
  call void @llvm.dbg.value(metadata i64 %"$ret52.sroa.5.0.copyload", metadata !1461, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1462
  %ld.328.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret52.sroa.0.0.copyload", 0, !dbg !1460
  %ld.328.fca.1.insert = insertvalue { i64, i64 } %ld.328.fca.0.insert, i64 %"$ret52.sroa.5.0.copyload", 1, !dbg !1460
  ret { i64, i64 } %ld.328.fca.1.insert, !dbg !1460
}

define i64 @command_line_arguments.command_line_arguments.UserState..hash(i8* nest nocapture readnone %nest.71, i8* %key, i64 %seed) #0 !dbg !1463 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !1464, metadata !DIExpression()), !dbg !1465
  call void @llvm.dbg.value(metadata i64 %seed, metadata !1466, metadata !DIExpression()), !dbg !1465
  call void @llvm.dbg.value(metadata i64 0, metadata !1467, metadata !DIExpression()), !dbg !1465
  %pticast.23 = ptrtoint i8* %key to i64, !dbg !1465
  %call.233 = call i64 @runtime.strhash(i8* nest undef, i8* %key, i64 %seed), !dbg !1465
  %add.10 = add i64 %pticast.23, 16, !dbg !1465
  %itpcast.4 = inttoptr i64 %add.10 to i8*, !dbg !1465
  %call.234 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.4, i64 %call.233), !dbg !1465
  %add.11 = add i64 %pticast.23, 32, !dbg !1465
  %itpcast.5 = inttoptr i64 %add.11 to i8*, !dbg !1465
  %call.235 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.5, i64 %call.234), !dbg !1465
  %add.12 = add i64 %pticast.23, 40, !dbg !1465
  %itpcast.6 = inttoptr i64 %add.12 to i8*, !dbg !1465
  %call.236 = call i64 @runtime.memhash8(i8* nest undef, i8* %itpcast.6, i64 %call.235), !dbg !1465
  call void @llvm.dbg.value(metadata i64 %call.236, metadata !1467, metadata !DIExpression()), !dbg !1465
  ret i64 %call.236, !dbg !1465
}

define i8 @command_line_arguments.command_line_arguments.UserState..eq(i8* nest nocapture readnone %nest.72, i8* readonly %key1, i8* readonly %key2) #0 !dbg !1468 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !1469, metadata !DIExpression()), !dbg !1470
  call void @llvm.dbg.value(metadata i8* %key2, metadata !1471, metadata !DIExpression()), !dbg !1470
  call void @llvm.dbg.value(metadata i8 0, metadata !1472, metadata !DIExpression()), !dbg !1470
  %icmp.347 = icmp eq i8* %key1, null, !dbg !1470
  br i1 %icmp.347, label %then.324, label %else.324

then.324:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1470
  unreachable

else.324:                                         ; preds = %entry
  %icmp.348 = icmp eq i8* %key2, null, !dbg !1470
  br i1 %icmp.348, label %then.325, label %else.325

then.325:                                         ; preds = %else.324
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1470
  unreachable

else.325:                                         ; preds = %else.324
  %field0.182 = bitcast i8* %key1 to i64*, !dbg !1470
  %ld.345 = load i64, i64* %field0.182, align 8, !dbg !1470
  %field1.182 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !1470
  %0 = bitcast i8* %field1.182 to i64*, !dbg !1470
  %ld.346 = load i64, i64* %0, align 8, !dbg !1470
  %field0.183 = bitcast i8* %key2 to i64*, !dbg !1470
  %ld.347 = load i64, i64* %field0.183, align 8, !dbg !1470
  %field1.183 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !1470
  %1 = bitcast i8* %field1.183 to i64*, !dbg !1470
  %ld.348 = load i64, i64* %1, align 8, !dbg !1470
  %call.237 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.345, i64 %ld.346, i64 %ld.347, i64 %ld.348), !dbg !1470
  %icmp.349 = icmp eq i8 %call.237, 1, !dbg !1470
  br i1 %icmp.349, label %else.328, label %then.326

then.326:                                         ; preds = %else.331, %else.328, %else.325
  call void @llvm.dbg.value(metadata i8 0, metadata !1472, metadata !DIExpression()), !dbg !1470
  ret i8 0, !dbg !1470

else.328:                                         ; preds = %else.325
  %field.852 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !1470
  %field.853 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !1470
  %field0.184 = bitcast i8* %field.852 to i64*, !dbg !1470
  %ld.349 = load i64, i64* %field0.184, align 8, !dbg !1470
  %field1.184 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !1470
  %2 = bitcast i8* %field1.184 to i64*, !dbg !1470
  %ld.350 = load i64, i64* %2, align 8, !dbg !1470
  %field0.185 = bitcast i8* %field.853 to i64*, !dbg !1470
  %ld.351 = load i64, i64* %field0.185, align 8, !dbg !1470
  %field1.185 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !1470
  %3 = bitcast i8* %field1.185 to i64*, !dbg !1470
  %ld.352 = load i64, i64* %3, align 8, !dbg !1470
  %call.238 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.349, i64 %ld.350, i64 %ld.351, i64 %ld.352), !dbg !1470
  %icmp.352 = icmp eq i8 %call.238, 1, !dbg !1470
  br i1 %icmp.352, label %else.331, label %then.326

else.331:                                         ; preds = %else.328
  %field.854 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !1470
  %4 = bitcast i8* %field.854 to i64*, !dbg !1470
  %.field.ld.149 = load i64, i64* %4, align 8, !dbg !1470
  %field.855 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !1470
  %5 = bitcast i8* %field.855 to i64*, !dbg !1470
  %.field.ld.150 = load i64, i64* %5, align 8, !dbg !1470
  %icmp.355 = icmp eq i64 %.field.ld.149, %.field.ld.150, !dbg !1470
  br i1 %icmp.355, label %else.334, label %then.326

else.334:                                         ; preds = %else.331
  %6 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !1470
  %.field.ld.151 = load i8, i8* %6, align 1, !dbg !1470
  %7 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !1470
  %.field.ld.152 = load i8, i8* %7, align 1, !dbg !1470
  %icmp.358 = icmp eq i8 %.field.ld.151, %.field.ld.152, !dbg !1470
  %spec.select = zext i1 %icmp.358 to i8
  ret i8 %spec.select
}

define void @command_line_arguments.UserState.ProtocolUser(%User.0* nocapture sret %sret.formal.17, i8* nest nocapture readnone %nest.37, %UserState.0* readonly %u) #0 !dbg !1348 {
entry:
  %"$ret44.sroa.0" = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  call void @llvm.dbg.declare(metadata [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.330 to i8*), i64 41) to [7 x i8]*), metadata !1347, metadata !DIExpression(DW_OP_LLVM_fragment, 328, 56)), !dbg !1473
  call void @llvm.dbg.value(metadata %UserState.0* %u, metadata !1358, metadata !DIExpression()), !dbg !1474
  %"$ret44.sroa.0.0.sroa_cast14" = bitcast { { i8*, i64 }, { i8*, i64 } }* %"$ret44.sroa.0" to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %"$ret44.sroa.0.0.sroa_cast14")
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret44.sroa.0.0.sroa_cast14", i8 0, i64 32, i1 false)
  %icmp.284 = icmp eq %UserState.0* %u, null, !dbg !1475
  br i1 %icmp.284, label %then.240, label %else.240

then.240:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1475
  unreachable

else.240:                                         ; preds = %entry
  %cast.2523 = bitcast %UserState.0* %u to i8*
  %"$ret44.sroa.01718" = bitcast { { i8*, i64 }, { i8*, i64 } }* %"$ret44.sroa.0" to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret44.sroa.01718", i8* align 8 %cast.2523, i64 16, i1 false)
  %field.671 = getelementptr inbounds %UserState.0, %UserState.0* %u, i64 0, i32 1, !dbg !1476
  %cast.2526 = bitcast { i8*, i64 }* %field.671 to i8*
  %field.672 = getelementptr inbounds %UserState.0, %UserState.0* %u, i64 0, i32 2, !dbg !1477
  %.field.ld.111 = load i64, i64* %field.672, align 8, !dbg !1477
  %field.673 = getelementptr inbounds %UserState.0, %UserState.0* %u, i64 0, i32 3, !dbg !1478
  %.field.ld.112 = load i8, i8* %field.673, align 1, !dbg !1478
  %"$ret44.sroa.0.16.sroa_idx" = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %"$ret44.sroa.0", i64 0, i32 1, !dbg !1479
  %"$ret44.sroa.0.16.sroa_cast" = bitcast { i8*, i64 }* %"$ret44.sroa.0.16.sroa_idx" to i8*, !dbg !1479
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret44.sroa.0.16.sroa_cast", i8* nonnull align 8 %cast.2526, i64 16, i1 false), !dbg !1479
  call void @llvm.dbg.value(metadata i64 %.field.ld.111, metadata !1347, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1473
  call void @llvm.dbg.value(metadata i8 %.field.ld.112, metadata !1347, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1473
  %"$ret44.sroa.0.0.cast.2533.sroa_cast" = bitcast %User.0* %sret.formal.17 to i8*, !dbg !1480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %"$ret44.sroa.0.0.cast.2533.sroa_cast", i8* nonnull align 8 %"$ret44.sroa.0.0.sroa_cast14", i64 32, i1 false), !dbg !1480
  %"$ret44.sroa.6.0.cast.2533.sroa_idx5" = getelementptr inbounds %User.0, %User.0* %sret.formal.17, i64 0, i32 2, !dbg !1480
  store i64 %.field.ld.111, i64* %"$ret44.sroa.6.0.cast.2533.sroa_idx5", align 8, !dbg !1480
  %"$ret44.sroa.7.0.cast.2533.sroa_idx" = getelementptr inbounds %User.0, %User.0* %sret.formal.17, i64 0, i32 3, !dbg !1480
  store i8 %.field.ld.112, i8* %"$ret44.sroa.7.0.cast.2533.sroa_idx", align 8, !dbg !1480
  %"$ret44.sroa.8.0.cast.2533.sroa_raw_idx" = getelementptr inbounds i8, i8* %"$ret44.sroa.0.0.cast.2533.sroa_cast", i64 41, !dbg !1480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret44.sroa.8.0.cast.2533.sroa_raw_idx", i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%User.0* @const.330 to i8*), i64 41) to [7 x i8]*), i64 0, i64 0), i64 7, i1 false), !dbg !1480
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %"$ret44.sroa.0.0.sroa_cast14"), !dbg !1480
  ret void, !dbg !1480
}

define void @command_line_arguments.NewSession({ %Session.0*, %error.0 }* sret %sret.formal.6, i8* nest nocapture readnone %nest.9, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.1* byval nocapture readonly %session, i64 %w.chunk0, i64 %w.chunk1, { i8*, i64 }* byval nocapture readonly %sessionType, { i8*, i64 }* byval nocapture readonly %username, %__go_descriptor.16* %cancel, %Conn.0* byval nocapture readonly %conn) #0 !dbg !1481 {
entry:
  %tmp.70 = alloca %IPST.3, align 8
  %tmp.66 = alloca %IPST.3, align 8
  %tmp.63 = alloca %IPST.3, align 8
  %tmp.58 = alloca %IPST.3, align 8
  %tmp.54 = alloca %IPST.3, align 8
  %tmp.51 = alloca %IPST.3, align 8
  call void @llvm.dbg.declare(metadata %Conn.0* %conn, metadata !1488, metadata !DIExpression()), !dbg !1489
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %username, metadata !1490, metadata !DIExpression()), !dbg !1491
  call void @llvm.dbg.declare(metadata { i8*, i64 }* %sessionType, metadata !1492, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.declare(metadata %Session.1* %session, metadata !1494, metadata !DIExpression()), !dbg !1495
  %hello = alloca %SessionHello.0, align 8
  %tmpv.238 = alloca %Config.1, align 8
  %sret.actual.53 = alloca { %Session.2*, %error.0 }, align 8
  %tmpv.243 = alloca [1 x %IPST.11], align 8
  %tmpv.251 = alloca %Session.0, align 8
  %sret.actual.56 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.255 = alloca %Conn.0, align 8
  %tmpv.262 = alloca [1 x %IPST.11], align 8
  %sret.actual.59 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.277 = alloca %Conn.0, align 8
  %tmpv.284 = alloca [1 x %IPST.11], align 8
  %tmpv.305 = alloca %SessionHello.0, align 8
  %tmpv.308 = alloca [1 x %IPST.11], align 8
  %sret.actual.65 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.316 = alloca %Conn.0, align 8
  %tmpv.323 = alloca [1 x %IPST.11], align 8
  %sret.actual.68 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.338 = alloca %Conn.0, align 8
  %tmpv.345 = alloca [1 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1496, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1497
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1496, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1497
  call void @llvm.dbg.value(metadata i64 %w.chunk0, metadata !1498, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1499
  call void @llvm.dbg.value(metadata i64 %w.chunk1, metadata !1498, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1499
  call void @llvm.dbg.value(metadata %__go_descriptor.16* %cancel, metadata !1500, metadata !DIExpression()), !dbg !1501
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1502, metadata !DIExpression()), !dbg !1503
  %0 = bitcast %SessionHello.0* %hello to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %0)
  %field.238 = getelementptr inbounds %Conn.0, %Conn.0* %conn, i64 0, i32 0, !dbg !1504
  %conn.field.ld.6 = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %field.238, align 8, !dbg !1504
  %icmp.87 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %conn.field.ld.6, null, !dbg !1504
  br i1 %icmp.87, label %fallthrough.68, label %else.68

fallthrough.68:                                   ; preds = %entry, %else.68
  %tmpv.239.0 = phi %_type.0* [ %.field.ld.16, %else.68 ], [ null, %entry ]
  %call.70 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.ReadWriteCloser..d, i64 0, i32 0), %_type.0* %tmpv.239.0), !dbg !1504
  %field.241 = getelementptr inbounds %Conn.0, %Conn.0* %conn, i64 0, i32 1, !dbg !1504
  %1 = bitcast i8** %field.241 to i64*, !dbg !1504
  %conn.field.ld.8181 = load i64, i64* %1, align 8, !dbg !1504
  %2 = ptrtoint i8* %call.70 to i64, !dbg !1504
  %call.69 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Config..d, i64 0, i32 0)), !dbg !1506
  %cast.1163 = bitcast i8* %call.69 to %Config.1*, !dbg !1506
  %field.232 = getelementptr inbounds %Config.1, %Config.1* %tmpv.238, i64 0, i32 0, !dbg !1507
  store i64 256, i64* %field.232, align 8, !dbg !1507
  %field.233 = getelementptr inbounds %Config.1, %Config.1* %tmpv.238, i64 0, i32 1, !dbg !1507
  store i8 1, i8* %field.233, align 8, !dbg !1507
  %field.234 = getelementptr inbounds %Config.1, %Config.1* %tmpv.238, i64 0, i32 2, !dbg !1507
  store i64 2000000000, i64* %field.234, align 8, !dbg !1507
  %field.235 = getelementptr inbounds %Config.1, %Config.1* %tmpv.238, i64 0, i32 3, !dbg !1507
  store i64 10000000000, i64* %field.235, align 8, !dbg !1507
  %field.236 = getelementptr inbounds %Config.1, %Config.1* %tmpv.238, i64 0, i32 4, !dbg !1507
  store i32 262144, i32* %field.236, align 8, !dbg !1507
  %field.237 = getelementptr inbounds %Config.1, %Config.1* %tmpv.238, i64 0, i32 5, !dbg !1507
  %cast.1164 = bitcast %Writer.0* %field.237 to i8*, !dbg !1507
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1164, i8* align 8 bitcast (%Writer.0* @io_ioutil.Discard to i8*), i64 16, i1 false), !dbg !1507
  %cast.1168 = bitcast %Config.1* %tmpv.238 to i8*, !dbg !1506
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Config..d, i64 0, i32 0), i8* %call.69, i8* nonnull %cast.1168), !dbg !1506
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Client({ %Session.2*, %error.0 }* nonnull sret %sret.actual.53, i8* nest undef, i64 %2, i64 %conn.field.ld.8181, %Config.1* %cast.1163), !dbg !1508
  %tmpv.231.sroa.0.0.cast.1175.sroa_idx = getelementptr inbounds { %Session.2*, %error.0 }, { %Session.2*, %error.0 }* %sret.actual.53, i64 0, i32 0, !dbg !1508
  %tmpv.231.sroa.0.0.copyload36 = load %Session.2*, %Session.2** %tmpv.231.sroa.0.0.cast.1175.sroa_idx, align 8, !dbg !1508
  %tmpv.231.sroa.3.sroa.0.0.tmpv.231.sroa.3.0.cast.1175.sroa_cast.sroa_idx = getelementptr inbounds { %Session.2*, %error.0 }, { %Session.2*, %error.0 }* %sret.actual.53, i64 0, i32 1, i32 0, !dbg !1508
  %tmpv.231.sroa.3.sroa.0.0.copyload97 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.231.sroa.3.sroa.0.0.tmpv.231.sroa.3.0.cast.1175.sroa_cast.sroa_idx, align 8, !dbg !1508
  call void @llvm.dbg.value(metadata %Session.2* %tmpv.231.sroa.0.0.copyload36, metadata !1509, metadata !DIExpression()), !dbg !1510
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.231.sroa.3.sroa.0.0.copyload97, metadata !1511, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1510
  %icmp.89 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.231.sroa.3.sroa.0.0.copyload97, null, !dbg !1512
  br i1 %icmp.89, label %else.69, label %else.70

else.68:                                          ; preds = %entry
  %field.240 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %conn.field.ld.6, i64 0, i32 0, !dbg !1504
  %.field.ld.16 = load %_type.0*, %_type.0** %field.240, align 8, !dbg !1504
  br label %fallthrough.68

else.69:                                          ; preds = %fallthrough.68
  %call.73 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.Mutex..d, i64 0, i32 0)), !dbg !1513
  %3 = bitcast i8* %call.73 to i64*, !dbg !1513
  store i64 0, i64* %3, align 4, !dbg !1513
  %call.74 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Session..d, i64 0, i32 0)), !dbg !1514
  %cast.1208 = bitcast i8* %call.74 to %Session.0*, !dbg !1514
  %cast.1209 = bitcast %Session.0* %tmpv.251 to i8*, !dbg !1515
  %cast.1210 = bitcast %Session.1* %session to i8*, !dbg !1515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1209, i8* nonnull align 8 %cast.1210, i64 48, i1 false), !dbg !1515
  %w.addr.sroa.0.0.cast.1211.sroa_idx = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 1, !dbg !1515
  %w.addr.sroa.0.0.cast.1211.sroa_cast = bitcast { i8*, i64 }* %w.addr.sroa.0.0.cast.1211.sroa_idx to i64*, !dbg !1515
  store i64 %w.chunk0, i64* %w.addr.sroa.0.0.cast.1211.sroa_cast, align 8, !dbg !1515
  %w.addr.sroa.2.0.cast.1211.sroa_idx160 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 1, i32 1, !dbg !1515
  store i64 %w.chunk1, i64* %w.addr.sroa.2.0.cast.1211.sroa_idx160, align 8, !dbg !1515
  %field.260 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 2, !dbg !1515
  %cast.1213 = bitcast { i8*, i64 }* %field.260 to i8*, !dbg !1515
  %cast.1214 = bitcast { i8*, i64 }* %sessionType to i8*, !dbg !1515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1213, i8* nonnull align 8 %cast.1214, i64 16, i1 false), !dbg !1515
  %field.261 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 3, !dbg !1515
  %cast.1215 = bitcast { i8*, i64 }* %field.261 to i8*, !dbg !1515
  %cast.1216 = bitcast { i8*, i64 }* %username to i8*, !dbg !1515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1215, i8* nonnull align 8 %cast.1216, i64 16, i1 false), !dbg !1515
  %field.262 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 4, !dbg !1515
  %cast.1217 = bitcast %Conn.0* %field.262 to i8*, !dbg !1515
  %cast.1218 = bitcast %Conn.0* %conn to i8*, !dbg !1515
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1217, i8* nonnull align 8 %cast.1218, i64 16, i1 false), !dbg !1515
  %field.263 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 5, !dbg !1515
  store %Session.2* %tmpv.231.sroa.0.0.copyload36, %Session.2** %field.263, align 8, !dbg !1515
  %field.264 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 6, !dbg !1515
  %field.273 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 15, !dbg !1515
  %4 = bitcast %Conn.0* %field.264 to i8*, !dbg !1515
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 97, i1 false), !dbg !1515
  store %__go_descriptor.16* %cancel, %__go_descriptor.16** %field.273, align 8, !dbg !1515
  %field.274 = getelementptr inbounds %Session.0, %Session.0* %tmpv.251, i64 0, i32 16, !dbg !1515
  %5 = bitcast %Mutex.0** %field.274 to i8**, !dbg !1515
  store i8* %call.73, i8** %5, align 8, !dbg !1515
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Session..d, i64 0, i32 0), i8* %call.74, i8* nonnull %cast.1209), !dbg !1514
  call void @llvm.dbg.value(metadata %Session.0* %cast.1208, metadata !1516, metadata !DIExpression()), !dbg !1517
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open({ %Conn.0, %error.0 }* nonnull sret %sret.actual.56, i8* nest undef, %Session.2* %tmpv.231.sroa.0.0.copyload36), !dbg !1518
  %tmpv.252.sroa.0.0.cast.1233.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.56 to i8*, !dbg !1518
  %tmpv.252.sroa.3.0.cast.1233.sroa_idx84 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.56, i64 0, i32 1, i32 0, !dbg !1518
  %tmpv.252.sroa.3.0.copyload85 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.252.sroa.3.0.cast.1233.sroa_idx84, align 8, !dbg !1518
  %tmpv.252.sroa.4.0.cast.1233.sroa_idx86 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.56, i64 0, i32 1, i32 1, !dbg !1518
  %6 = bitcast i8** %tmpv.252.sroa.4.0.cast.1233.sroa_idx86 to i64*, !dbg !1518
  %tmpv.252.sroa.4.0.copyload87183 = load i64, i64* %6, align 8, !dbg !1518
  %tmpv.255197 = bitcast %Conn.0* %tmpv.255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.255197, i8* nonnull align 8 %tmpv.252.sroa.0.0.cast.1233.sroa_cast, i64 16, i1 false)
  %cast.1236 = bitcast %Conn.0* %tmpv.255 to i8*
  %icmp.90 = icmp eq i8* %call.74, null, !dbg !1519
  br i1 %icmp.90, label %then.71, label %else.71

else.70:                                          ; preds = %fallthrough.68
  %tmpv.231.sroa.3.sroa.3.0.tmpv.231.sroa.3.0.cast.1175.sroa_cast.sroa_idx98 = getelementptr inbounds { %Session.2*, %error.0 }, { %Session.2*, %error.0 }* %sret.actual.53, i64 0, i32 1, i32 1, !dbg !1508
  call void @llvm.dbg.value(metadata i8** %tmpv.231.sroa.3.sroa.3.0.tmpv.231.sroa.3.0.cast.1175.sroa_cast.sroa_idx98, metadata !1511, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1510
  %7 = bitcast i8** %tmpv.231.sroa.3.sroa.3.0.tmpv.231.sroa.3.0.cast.1175.sroa_cast.sroa_idx98 to i64*, !dbg !1508
  %tmpv.231.sroa.3.sroa.3.0.copyload99182 = load i64, i64* %7, align 8, !dbg !1508
  %8 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.231.sroa.3.sroa.0.0.copyload97 to i64*, !dbg !1520
  %.field.ld.17195 = load i64, i64* %8, align 8, !dbg !1520
  %9 = bitcast [1 x %IPST.11]* %tmpv.243 to i64*, !dbg !1521
  store i64 %.field.ld.17195, i64* %9, align 8, !dbg !1521
  %tmp.50.sroa.2.0.cast.1183.sroa_idx161 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.243, i64 0, i64 0, i32 1, !dbg !1521
  %10 = bitcast i8** %tmp.50.sroa.2.0.cast.1183.sroa_idx161 to i64*, !dbg !1521
  store i64 %tmpv.231.sroa.3.sroa.3.0.copyload99182, i64* %10, align 8, !dbg !1521
  %field.252 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.51, i64 0, i32 0, !dbg !1521
  %cast.1186 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.243, i64 0, i64 0, !dbg !1521
  store %IPST.11* %cast.1186, %IPST.11** %field.252, align 8, !dbg !1521
  %field.253 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.51, i64 0, i32 1, !dbg !1521
  store i64 1, i64* %field.253, align 8, !dbg !1521
  %field.254 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.51, i64 0, i32 2, !dbg !1521
  store i64 1, i64* %field.254, align 8, !dbg !1521
  %call.71 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([36 x i8]* @const.243 to i64), i64 35, %IPST.3* byval nonnull %tmp.51), !dbg !1521
  %call.71.fca.0.extract = extractvalue { i64, i64 } %call.71, 0, !dbg !1521
  %call.71.fca.1.extract = extractvalue { i64, i64 } %call.71, 1, !dbg !1521
  %call.72 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.71.fca.0.extract, i64 %call.71.fca.1.extract), !dbg !1522
  %call.72.fca.0.extract = extractvalue { i64, i64 } %call.72, 0, !dbg !1522
  %call.72.fca.1.extract = extractvalue { i64, i64 } %call.72, 1, !dbg !1522
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1502, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.value(metadata i64 %call.72.fca.0.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1524
  call void @llvm.dbg.value(metadata i64 %call.72.fca.1.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1524
  %tmp.52.sroa.0.0.cast.1200.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 0, !dbg !1525
  store %Session.0* null, %Session.0** %tmp.52.sroa.0.0.cast.1200.sroa_idx, align 8, !dbg !1525
  %tmp.52.sroa.2.0.cast.1200.sroa_idx162 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, !dbg !1525
  %tmp.52.sroa.2.0.cast.1200.sroa_cast = bitcast %error.0* %tmp.52.sroa.2.0.cast.1200.sroa_idx162 to i64*, !dbg !1525
  store i64 %call.72.fca.0.extract, i64* %tmp.52.sroa.2.0.cast.1200.sroa_cast, align 8, !dbg !1525
  %tmp.52.sroa.3.0.cast.1200.sroa_idx163 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, i32 1, !dbg !1525
  %tmp.52.sroa.3.0.cast.1200.sroa_cast = bitcast i8** %tmp.52.sroa.3.0.cast.1200.sroa_idx163 to i64*, !dbg !1525
  store i64 %call.72.fca.1.extract, i64* %tmp.52.sroa.3.0.cast.1200.sroa_cast, align 8, !dbg !1525
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0), !dbg !1525
  ret void, !dbg !1525

then.71:                                          ; preds = %else.69
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1519
  unreachable

else.71:                                          ; preds = %else.69
  %field.277 = getelementptr inbounds i8, i8* %call.74, i64 120, !dbg !1519
  %runtime.writeBarrier.ld.8 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1526
  %icmp.92 = icmp eq i32 %runtime.writeBarrier.ld.8, 0, !dbg !1526
  br i1 %icmp.92, label %else.73, label %else.72

fallthrough.72:                                   ; preds = %else.72, %else.73
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.252.sroa.3.0.copyload85, metadata !1511, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1510
  call void @llvm.dbg.value(metadata i8** %tmpv.252.sroa.4.0.cast.1233.sroa_idx86, metadata !1511, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1510
  %icmp.94 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.252.sroa.3.0.copyload85, null, !dbg !1527
  br i1 %icmp.94, label %else.76, label %then.74

else.72:                                          ; preds = %else.71
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.277, i8* nonnull %cast.1236), !dbg !1526
  br label %fallthrough.72

else.73:                                          ; preds = %else.71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.277, i8* nonnull align 8 %cast.1236, i64 16, i1 false), !dbg !1526
  br label %fallthrough.72

then.74:                                          ; preds = %fallthrough.72
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* %cast.1208), !dbg !1528
  %11 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.252.sroa.3.0.copyload85 to i64*, !dbg !1529
  %.field.ld.18194 = load i64, i64* %11, align 8, !dbg !1529
  %12 = bitcast [1 x %IPST.11]* %tmpv.262 to i64*, !dbg !1530
  store i64 %.field.ld.18194, i64* %12, align 8, !dbg !1530
  %tmp.53.sroa.2.0.cast.1254.sroa_idx164 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.262, i64 0, i64 0, i32 1, !dbg !1530
  %13 = bitcast i8** %tmp.53.sroa.2.0.cast.1254.sroa_idx164 to i64*, !dbg !1530
  store i64 %tmpv.252.sroa.4.0.copyload87183, i64* %13, align 8, !dbg !1530
  %field.284 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.54, i64 0, i32 0, !dbg !1530
  %cast.1257 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.262, i64 0, i64 0, !dbg !1530
  store %IPST.11* %cast.1257, %IPST.11** %field.284, align 8, !dbg !1530
  %field.285 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.54, i64 0, i32 1, !dbg !1530
  store i64 1, i64* %field.285, align 8, !dbg !1530
  %field.286 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.54, i64 0, i32 2, !dbg !1530
  store i64 1, i64* %field.286, align 8, !dbg !1530
  %call.75 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.247 to i64), i64 28, %IPST.3* byval nonnull %tmp.54), !dbg !1530
  %call.75.fca.0.extract = extractvalue { i64, i64 } %call.75, 0, !dbg !1530
  %call.75.fca.1.extract = extractvalue { i64, i64 } %call.75, 1, !dbg !1530
  %call.76 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.75.fca.0.extract, i64 %call.75.fca.1.extract), !dbg !1531
  %call.76.fca.0.extract = extractvalue { i64, i64 } %call.76, 0, !dbg !1531
  %call.76.fca.1.extract = extractvalue { i64, i64 } %call.76, 1, !dbg !1531
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1502, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.value(metadata i64 %call.76.fca.0.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1524
  call void @llvm.dbg.value(metadata i64 %call.76.fca.1.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1524
  %tmp.55.sroa.0.0.cast.1271.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 0, !dbg !1532
  store %Session.0* null, %Session.0** %tmp.55.sroa.0.0.cast.1271.sroa_idx, align 8, !dbg !1532
  %tmp.55.sroa.2.0.cast.1271.sroa_idx165 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, !dbg !1532
  %tmp.55.sroa.2.0.cast.1271.sroa_cast = bitcast %error.0* %tmp.55.sroa.2.0.cast.1271.sroa_idx165 to i64*, !dbg !1532
  store i64 %call.76.fca.0.extract, i64* %tmp.55.sroa.2.0.cast.1271.sroa_cast, align 8, !dbg !1532
  %tmp.55.sroa.3.0.cast.1271.sroa_idx166 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, i32 1, !dbg !1532
  %tmp.55.sroa.3.0.cast.1271.sroa_cast = bitcast i8** %tmp.55.sroa.3.0.cast.1271.sroa_idx166 to i64*, !dbg !1532
  store i64 %call.76.fca.1.extract, i64* %tmp.55.sroa.3.0.cast.1271.sroa_cast, align 8, !dbg !1532
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0), !dbg !1532
  ret void, !dbg !1532

else.76:                                          ; preds = %fallthrough.72
  %14 = bitcast i8* %field.277 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }**
  %tmpv.267.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %14, align 8
  %tmpv.267.sroa.3.0.cast.1276.sroa_idx27 = getelementptr inbounds i8, i8* %call.74, i64 128
  %15 = bitcast i8* %tmpv.267.sroa.3.0.cast.1276.sroa_idx27 to i64*
  %tmpv.267.sroa.3.0.copyload184 = load i64, i64* %15, align 8
  %icmp.96 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.267.sroa.0.0.copyload, null, !dbg !1533
  br i1 %icmp.96, label %fallthrough.77, label %else.77

fallthrough.77:                                   ; preds = %else.76, %else.77
  %tmpv.270.0 = phi %_type.0* [ %.field.ld.19, %else.77 ], [ null, %else.76 ]
  %call.77 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.270.0), !dbg !1533
  %16 = ptrtoint i8* %call.77 to i64, !dbg !1533
  %call.78 = call %Decoder.0* @encoding_gob.NewDecoder(i8* nest undef, i64 %16, i64 %tmpv.267.sroa.3.0.copyload184), !dbg !1534
  %field.297 = getelementptr inbounds i8, i8* %call.74, i64 136, !dbg !1535
  %runtime.writeBarrier.ld.9 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1536
  %icmp.99 = icmp eq i32 %runtime.writeBarrier.ld.9, 0, !dbg !1536
  br i1 %icmp.99, label %else.80, label %else.79

else.77:                                          ; preds = %else.76
  %field.293 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.267.sroa.0.0.copyload, i64 0, i32 0, !dbg !1533
  %.field.ld.19 = load %_type.0*, %_type.0** %field.293, align 8, !dbg !1533
  br label %fallthrough.77

fallthrough.79:                                   ; preds = %else.79, %else.80
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open({ %Conn.0, %error.0 }* nonnull sret %sret.actual.59, i8* nest undef, %Session.2* %tmpv.231.sroa.0.0.copyload36), !dbg !1537
  %tmpv.274.sroa.0.0.cast.1289.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.59 to i8*, !dbg !1537
  %tmpv.274.sroa.3.0.cast.1289.sroa_idx104 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.59, i64 0, i32 1, i32 0, !dbg !1537
  %tmpv.274.sroa.3.0.copyload105 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.274.sroa.3.0.cast.1289.sroa_idx104, align 8, !dbg !1537
  %tmpv.274.sroa.4.0.cast.1289.sroa_idx106 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.59, i64 0, i32 1, i32 1, !dbg !1537
  %17 = bitcast i8** %tmpv.274.sroa.4.0.cast.1289.sroa_idx106 to i64*, !dbg !1537
  %tmpv.274.sroa.4.0.copyload107185 = load i64, i64* %17, align 8, !dbg !1537
  %tmpv.277198 = bitcast %Conn.0* %tmpv.277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.277198, i8* nonnull align 8 %tmpv.274.sroa.0.0.cast.1289.sroa_cast, i64 16, i1 false)
  %cast.1292 = bitcast %Conn.0* %tmpv.277 to i8*
  %field.300 = getelementptr inbounds i8, i8* %call.74, i64 144, !dbg !1538
  %runtime.writeBarrier.ld.10 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1539
  %icmp.102 = icmp eq i32 %runtime.writeBarrier.ld.10, 0, !dbg !1539
  br i1 %icmp.102, label %else.83, label %else.82

else.79:                                          ; preds = %fallthrough.77
  %cast.1285 = bitcast %Decoder.0* %call.78 to i8*, !dbg !1536
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.297, i8* %cast.1285), !dbg !1536
  br label %fallthrough.79

else.80:                                          ; preds = %fallthrough.77
  %18 = bitcast i8* %field.297 to %Decoder.0**, !dbg !1535
  store %Decoder.0* %call.78, %Decoder.0** %18, align 8, !dbg !1536
  br label %fallthrough.79

fallthrough.82:                                   ; preds = %else.82, %else.83
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.274.sroa.3.0.copyload105, metadata !1511, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1510
  call void @llvm.dbg.value(metadata i8** %tmpv.274.sroa.4.0.cast.1289.sroa_idx106, metadata !1511, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1510
  %icmp.104 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.274.sroa.3.0.copyload105, null, !dbg !1540
  br i1 %icmp.104, label %else.86, label %then.84

else.82:                                          ; preds = %fallthrough.79
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.300, i8* nonnull %cast.1292), !dbg !1539
  br label %fallthrough.82

else.83:                                          ; preds = %fallthrough.79
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.300, i8* nonnull align 8 %cast.1292, i64 16, i1 false), !dbg !1539
  br label %fallthrough.82

then.84:                                          ; preds = %fallthrough.82
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.1208), !dbg !1541
  %19 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.274.sroa.3.0.copyload105 to i64*, !dbg !1542
  %.field.ld.20193 = load i64, i64* %19, align 8, !dbg !1542
  %20 = bitcast [1 x %IPST.11]* %tmpv.284 to i64*, !dbg !1543
  store i64 %.field.ld.20193, i64* %20, align 8, !dbg !1543
  %tmp.57.sroa.2.0.cast.1310.sroa_idx167 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.284, i64 0, i64 0, i32 1, !dbg !1543
  %21 = bitcast i8** %tmp.57.sroa.2.0.cast.1310.sroa_idx167 to i64*, !dbg !1543
  store i64 %tmpv.274.sroa.4.0.copyload107185, i64* %21, align 8, !dbg !1543
  %field.307 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.58, i64 0, i32 0, !dbg !1543
  %cast.1313 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.284, i64 0, i64 0, !dbg !1543
  store %IPST.11* %cast.1313, %IPST.11** %field.307, align 8, !dbg !1543
  %field.308 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.58, i64 0, i32 1, !dbg !1543
  store i64 1, i64* %field.308, align 8, !dbg !1543
  %field.309 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.58, i64 0, i32 2, !dbg !1543
  store i64 1, i64* %field.309, align 8, !dbg !1543
  %call.79 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.249 to i64), i64 29, %IPST.3* byval nonnull %tmp.58), !dbg !1543
  %call.79.fca.0.extract = extractvalue { i64, i64 } %call.79, 0, !dbg !1543
  %call.79.fca.1.extract = extractvalue { i64, i64 } %call.79, 1, !dbg !1543
  %call.80 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.79.fca.0.extract, i64 %call.79.fca.1.extract), !dbg !1544
  %call.80.fca.0.extract = extractvalue { i64, i64 } %call.80, 0, !dbg !1544
  %call.80.fca.1.extract = extractvalue { i64, i64 } %call.80, 1, !dbg !1544
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1502, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.value(metadata i64 %call.80.fca.0.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1524
  call void @llvm.dbg.value(metadata i64 %call.80.fca.1.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1524
  %tmp.59.sroa.0.0.cast.1327.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 0, !dbg !1545
  store %Session.0* null, %Session.0** %tmp.59.sroa.0.0.cast.1327.sroa_idx, align 8, !dbg !1545
  %tmp.59.sroa.2.0.cast.1327.sroa_idx168 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, !dbg !1545
  %tmp.59.sroa.2.0.cast.1327.sroa_cast = bitcast %error.0* %tmp.59.sroa.2.0.cast.1327.sroa_idx168 to i64*, !dbg !1545
  store i64 %call.80.fca.0.extract, i64* %tmp.59.sroa.2.0.cast.1327.sroa_cast, align 8, !dbg !1545
  %tmp.59.sroa.3.0.cast.1327.sroa_idx169 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, i32 1, !dbg !1545
  %tmp.59.sroa.3.0.cast.1327.sroa_cast = bitcast i8** %tmp.59.sroa.3.0.cast.1327.sroa_idx169 to i64*, !dbg !1545
  store i64 %call.80.fca.1.extract, i64* %tmp.59.sroa.3.0.cast.1327.sroa_cast, align 8, !dbg !1545
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0), !dbg !1545
  ret void, !dbg !1545

else.86:                                          ; preds = %fallthrough.82
  %22 = bitcast i8* %field.300 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }**
  %tmpv.289.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %22, align 8
  %tmpv.289.sroa.3.0.cast.1332.sroa_idx22 = getelementptr inbounds i8, i8* %call.74, i64 152
  %23 = bitcast i8* %tmpv.289.sroa.3.0.cast.1332.sroa_idx22 to i64*
  %tmpv.289.sroa.3.0.copyload186 = load i64, i64* %23, align 8
  %icmp.106 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.289.sroa.0.0.copyload, null, !dbg !1546
  br i1 %icmp.106, label %fallthrough.87, label %else.87

fallthrough.87:                                   ; preds = %else.86, %else.87
  %tmpv.292.0 = phi %_type.0* [ %.field.ld.21, %else.87 ], [ null, %else.86 ]
  %call.81 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), %_type.0* %tmpv.292.0), !dbg !1546
  %24 = ptrtoint i8* %call.81 to i64, !dbg !1546
  %call.82 = call %Encoder.0* @encoding_gob.NewEncoder(i8* nest undef, i64 %24, i64 %tmpv.289.sroa.3.0.copyload186), !dbg !1547
  %field.320 = getelementptr inbounds i8, i8* %call.74, i64 160, !dbg !1548
  %25 = bitcast i8* %field.320 to %Encoder.0**, !dbg !1548
  %runtime.writeBarrier.ld.11 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1549
  %icmp.109 = icmp eq i32 %runtime.writeBarrier.ld.11, 0, !dbg !1549
  br i1 %icmp.109, label %else.90, label %else.89

else.87:                                          ; preds = %else.86
  %field.316 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.289.sroa.0.0.copyload, i64 0, i32 0, !dbg !1546
  %.field.ld.21 = load %_type.0*, %_type.0** %field.316, align 8, !dbg !1546
  br label %fallthrough.87

else.89:                                          ; preds = %fallthrough.87
  %cast.1341 = bitcast %Encoder.0* %call.82 to i8*, !dbg !1549
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.320, i8* %cast.1341), !dbg !1549
  %.field.ld.22.pre = load %Encoder.0*, %Encoder.0** %25, align 8, !dbg !1550
  br label %else.91

else.90:                                          ; preds = %fallthrough.87
  store %Encoder.0* %call.82, %Encoder.0** %25, align 8, !dbg !1549
  br label %else.91

else.91:                                          ; preds = %else.90, %else.89
  %.field.ld.22 = phi %Encoder.0* [ %call.82, %else.90 ], [ %.field.ld.22.pre, %else.89 ], !dbg !1550
  %field.321 = getelementptr inbounds i8, i8* %call.74, i64 48, !dbg !1552
  %hello199200 = bitcast %SessionHello.0* %hello to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %hello199200, i8* nonnull align 8 %field.321, i64 16, i1 false)
  %field.323 = getelementptr inbounds i8, i8* %call.74, i64 64, !dbg !1553
  %field.324 = getelementptr inbounds i8, i8* %call.74, i64 80, !dbg !1554
  %field.326 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 1, !dbg !1555
  %cast.1356 = bitcast %Session.1* %field.326 to i8*, !dbg !1555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1356, i8* nonnull align 8 %call.74, i64 48, i1 false), !dbg !1555
  %field.327 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 2, !dbg !1555
  %cast.1358 = bitcast { i8*, i64 }* %field.327 to i8*, !dbg !1555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1358, i8* align 8 bitcast ({ i8*, i64 }* @github_com_spolu_warp.Version to i8*), i64 16, i1 false), !dbg !1555
  %field.328 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 3, !dbg !1555
  %cast.1360 = bitcast { i8*, i64 }* %field.328 to i8*, !dbg !1555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1360, i8* nonnull align 8 %field.323, i64 16, i1 false), !dbg !1555
  %field.329 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 4, !dbg !1555
  %cast.1362 = bitcast { i8*, i64 }* %field.329 to i8*, !dbg !1555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1362, i8* nonnull align 8 %field.324, i64 16, i1 false), !dbg !1555
  %call.83 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.SessionHello..d, i64 0, i32 0)), !dbg !1556
  %cast.1366 = bitcast %SessionHello.0* %tmpv.305 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.1366, i8* nonnull align 8 %0, i64 112, i1 false)
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.SessionHello..d, i64 0, i32 0), i8* %call.83, i8* nonnull %cast.1366), !dbg !1556
  %26 = ptrtoint i8* %call.83 to i64, !dbg !1556
  %call.84 = call { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %.field.ld.22, i64 ptrtoint (%StructType.0* @github_com_spolu_warp.SessionHello..d to i64), i64 %26), !dbg !1557
  %call.84.fca.0.extract = extractvalue { i64, i64 } %call.84, 0, !dbg !1557
  call void @llvm.dbg.value(metadata i64 %call.84.fca.0.extract, metadata !1558, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1559
  %icmp.116 = icmp eq i64 %call.84.fca.0.extract, 0, !dbg !1560
  br i1 %icmp.116, label %else.96, label %then.96

then.96:                                          ; preds = %else.91
  %call.84.fca.1.extract = extractvalue { i64, i64 } %call.84, 1, !dbg !1557
  call void @llvm.dbg.value(metadata i64 %call.84.fca.1.extract, metadata !1558, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1559
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.1208), !dbg !1561
  %27 = inttoptr i64 %call.84.fca.0.extract to i64*, !dbg !1562
  %.field.ld.23192 = load i64, i64* %27, align 8, !dbg !1562
  %28 = inttoptr i64 %call.84.fca.1.extract to i8*, !dbg !1563
  %29 = bitcast [1 x %IPST.11]* %tmpv.308 to i64*, !dbg !1563
  store i64 %.field.ld.23192, i64* %29, align 8, !dbg !1563
  %tmp.62.sroa.2.0.cast.1381.sroa_idx170 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.308, i64 0, i64 0, i32 1, !dbg !1563
  store i8* %28, i8** %tmp.62.sroa.2.0.cast.1381.sroa_idx170, align 8, !dbg !1563
  %field.339 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.63, i64 0, i32 0, !dbg !1563
  %cast.1384 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.308, i64 0, i64 0, !dbg !1563
  store %IPST.11* %cast.1384, %IPST.11** %field.339, align 8, !dbg !1563
  %field.340 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.63, i64 0, i32 1, !dbg !1563
  store i64 1, i64* %field.340, align 8, !dbg !1563
  %field.341 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.63, i64 0, i32 2, !dbg !1563
  store i64 1, i64* %field.341, align 8, !dbg !1563
  %call.85 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([21 x i8]* @const.251 to i64), i64 20, %IPST.3* byval nonnull %tmp.63), !dbg !1563
  %call.85.fca.0.extract = extractvalue { i64, i64 } %call.85, 0, !dbg !1563
  %call.85.fca.1.extract = extractvalue { i64, i64 } %call.85, 1, !dbg !1563
  %call.86 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.85.fca.0.extract, i64 %call.85.fca.1.extract), !dbg !1564
  %call.86.fca.0.extract = extractvalue { i64, i64 } %call.86, 0, !dbg !1564
  %call.86.fca.1.extract = extractvalue { i64, i64 } %call.86, 1, !dbg !1564
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1502, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.value(metadata i64 %call.86.fca.0.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1524
  call void @llvm.dbg.value(metadata i64 %call.86.fca.1.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1524
  %tmp.64.sroa.0.0.cast.1398.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 0, !dbg !1565
  store %Session.0* null, %Session.0** %tmp.64.sroa.0.0.cast.1398.sroa_idx, align 8, !dbg !1565
  %tmp.64.sroa.2.0.cast.1398.sroa_idx171 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, !dbg !1565
  %tmp.64.sroa.2.0.cast.1398.sroa_cast = bitcast %error.0* %tmp.64.sroa.2.0.cast.1398.sroa_idx171 to i64*, !dbg !1565
  store i64 %call.86.fca.0.extract, i64* %tmp.64.sroa.2.0.cast.1398.sroa_cast, align 8, !dbg !1565
  %tmp.64.sroa.3.0.cast.1398.sroa_idx172 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, i32 1, !dbg !1565
  %tmp.64.sroa.3.0.cast.1398.sroa_cast = bitcast i8** %tmp.64.sroa.3.0.cast.1398.sroa_idx172 to i64*, !dbg !1565
  store i64 %call.86.fca.1.extract, i64* %tmp.64.sroa.3.0.cast.1398.sroa_cast, align 8, !dbg !1565
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0), !dbg !1565
  ret void, !dbg !1565

else.96:                                          ; preds = %else.91
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open({ %Conn.0, %error.0 }* nonnull sret %sret.actual.65, i8* nest undef, %Session.2* %tmpv.231.sroa.0.0.copyload36), !dbg !1566
  %tmpv.313.sroa.0.0.cast.1404.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.65 to i8*, !dbg !1566
  %tmpv.313.sroa.3.0.cast.1404.sroa_idx76 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.65, i64 0, i32 1, i32 0, !dbg !1566
  %tmpv.313.sroa.3.0.copyload77 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.313.sroa.3.0.cast.1404.sroa_idx76, align 8, !dbg !1566
  %tmpv.313.sroa.4.0.cast.1404.sroa_idx78 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.65, i64 0, i32 1, i32 1, !dbg !1566
  %30 = bitcast i8** %tmpv.313.sroa.4.0.cast.1404.sroa_idx78 to i64*, !dbg !1566
  %tmpv.313.sroa.4.0.copyload79187 = load i64, i64* %30, align 8, !dbg !1566
  %tmpv.316201 = bitcast %Conn.0* %tmpv.316 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.316201, i8* nonnull align 8 %tmpv.313.sroa.0.0.cast.1404.sroa_cast, i64 16, i1 false)
  %cast.1407 = bitcast %Conn.0* %tmpv.316 to i8*
  %field.347 = getelementptr inbounds i8, i8* %call.74, i64 168, !dbg !1567
  %runtime.writeBarrier.ld.12 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1568
  %icmp.119 = icmp eq i32 %runtime.writeBarrier.ld.12, 0, !dbg !1568
  br i1 %icmp.119, label %else.100, label %else.99

fallthrough.99:                                   ; preds = %else.99, %else.100
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.313.sroa.3.0.copyload77, metadata !1511, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1510
  call void @llvm.dbg.value(metadata i8** %tmpv.313.sroa.4.0.cast.1404.sroa_idx78, metadata !1511, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1510
  %icmp.121 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.313.sroa.3.0.copyload77, null, !dbg !1569
  br i1 %icmp.121, label %else.103, label %then.101

else.99:                                          ; preds = %else.96
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.347, i8* nonnull %cast.1407), !dbg !1568
  br label %fallthrough.99

else.100:                                         ; preds = %else.96
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.347, i8* nonnull align 8 %cast.1407, i64 16, i1 false), !dbg !1568
  br label %fallthrough.99

then.101:                                         ; preds = %fallthrough.99
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.1208), !dbg !1570
  %31 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.313.sroa.3.0.copyload77 to i64*, !dbg !1571
  %.field.ld.24191 = load i64, i64* %31, align 8, !dbg !1571
  %32 = bitcast [1 x %IPST.11]* %tmpv.323 to i64*, !dbg !1572
  store i64 %.field.ld.24191, i64* %32, align 8, !dbg !1572
  %tmp.65.sroa.2.0.cast.1425.sroa_idx173 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.323, i64 0, i64 0, i32 1, !dbg !1572
  %33 = bitcast i8** %tmp.65.sroa.2.0.cast.1425.sroa_idx173 to i64*, !dbg !1572
  store i64 %tmpv.313.sroa.4.0.copyload79187, i64* %33, align 8, !dbg !1572
  %field.354 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.66, i64 0, i32 0, !dbg !1572
  %cast.1428 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.323, i64 0, i64 0, !dbg !1572
  store %IPST.11* %cast.1428, %IPST.11** %field.354, align 8, !dbg !1572
  %field.355 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.66, i64 0, i32 1, !dbg !1572
  store i64 1, i64* %field.355, align 8, !dbg !1572
  %field.356 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.66, i64 0, i32 2, !dbg !1572
  store i64 1, i64* %field.356, align 8, !dbg !1572
  %call.87 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([29 x i8]* @const.253 to i64), i64 28, %IPST.3* byval nonnull %tmp.66), !dbg !1572
  %call.87.fca.0.extract = extractvalue { i64, i64 } %call.87, 0, !dbg !1572
  %call.87.fca.1.extract = extractvalue { i64, i64 } %call.87, 1, !dbg !1572
  %call.88 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.87.fca.0.extract, i64 %call.87.fca.1.extract), !dbg !1573
  %call.88.fca.0.extract = extractvalue { i64, i64 } %call.88, 0, !dbg !1573
  %call.88.fca.1.extract = extractvalue { i64, i64 } %call.88, 1, !dbg !1573
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1502, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.value(metadata i64 %call.88.fca.0.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1524
  call void @llvm.dbg.value(metadata i64 %call.88.fca.1.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1524
  %tmp.67.sroa.0.0.cast.1442.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 0, !dbg !1574
  store %Session.0* null, %Session.0** %tmp.67.sroa.0.0.cast.1442.sroa_idx, align 8, !dbg !1574
  %tmp.67.sroa.2.0.cast.1442.sroa_idx174 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, !dbg !1574
  %tmp.67.sroa.2.0.cast.1442.sroa_cast = bitcast %error.0* %tmp.67.sroa.2.0.cast.1442.sroa_idx174 to i64*, !dbg !1574
  store i64 %call.88.fca.0.extract, i64* %tmp.67.sroa.2.0.cast.1442.sroa_cast, align 8, !dbg !1574
  %tmp.67.sroa.3.0.cast.1442.sroa_idx175 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, i32 1, !dbg !1574
  %tmp.67.sroa.3.0.cast.1442.sroa_cast = bitcast i8** %tmp.67.sroa.3.0.cast.1442.sroa_idx175 to i64*, !dbg !1574
  store i64 %call.88.fca.1.extract, i64* %tmp.67.sroa.3.0.cast.1442.sroa_cast, align 8, !dbg !1574
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0), !dbg !1574
  ret void, !dbg !1574

else.103:                                         ; preds = %fallthrough.99
  %34 = bitcast i8* %field.347 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }**
  %tmpv.328.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %34, align 8
  %tmpv.328.sroa.3.0.cast.1447.sroa_idx8 = getelementptr inbounds i8, i8* %call.74, i64 176
  %35 = bitcast i8* %tmpv.328.sroa.3.0.cast.1447.sroa_idx8 to i64*
  %tmpv.328.sroa.3.0.copyload188 = load i64, i64* %35, align 8
  %icmp.123 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.328.sroa.0.0.copyload, null, !dbg !1575
  br i1 %icmp.123, label %fallthrough.104, label %else.104

fallthrough.104:                                  ; preds = %else.103, %else.104
  %tmpv.331.0 = phi %_type.0* [ %.field.ld.25, %else.104 ], [ null, %else.103 ]
  %call.89 = call i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.331.0), !dbg !1575
  %36 = ptrtoint i8* %call.89 to i64, !dbg !1575
  %call.90 = call %Decoder.0* @encoding_gob.NewDecoder(i8* nest undef, i64 %36, i64 %tmpv.328.sroa.3.0.copyload188), !dbg !1576
  %field.367 = getelementptr inbounds i8, i8* %call.74, i64 184, !dbg !1577
  %runtime.writeBarrier.ld.13 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1578
  %icmp.126 = icmp eq i32 %runtime.writeBarrier.ld.13, 0, !dbg !1578
  br i1 %icmp.126, label %else.107, label %else.106

else.104:                                         ; preds = %else.103
  %field.363 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.328.sroa.0.0.copyload, i64 0, i32 0, !dbg !1575
  %.field.ld.25 = load %_type.0*, %_type.0** %field.363, align 8, !dbg !1575
  br label %fallthrough.104

fallthrough.106:                                  ; preds = %else.106, %else.107
  call void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open({ %Conn.0, %error.0 }* nonnull sret %sret.actual.68, i8* nest undef, %Session.2* %tmpv.231.sroa.0.0.copyload36), !dbg !1579
  %tmpv.335.sroa.0.0.cast.1460.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.68 to i8*, !dbg !1579
  %tmpv.335.sroa.3.0.cast.1460.sroa_idx92 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.68, i64 0, i32 1, i32 0, !dbg !1579
  %tmpv.335.sroa.3.0.copyload93 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.335.sroa.3.0.cast.1460.sroa_idx92, align 8, !dbg !1579
  %tmpv.335.sroa.4.0.cast.1460.sroa_idx94 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.68, i64 0, i32 1, i32 1, !dbg !1579
  %37 = bitcast i8** %tmpv.335.sroa.4.0.cast.1460.sroa_idx94 to i64*, !dbg !1579
  %tmpv.335.sroa.4.0.copyload95189 = load i64, i64* %37, align 8, !dbg !1579
  %tmpv.338202 = bitcast %Conn.0* %tmpv.338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.338202, i8* nonnull align 8 %tmpv.335.sroa.0.0.cast.1460.sroa_cast, i64 16, i1 false)
  %cast.1463 = bitcast %Conn.0* %tmpv.338 to i8*
  %field.370 = getelementptr inbounds i8, i8* %call.74, i64 192, !dbg !1580
  %runtime.writeBarrier.ld.14 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1581
  %icmp.129 = icmp eq i32 %runtime.writeBarrier.ld.14, 0, !dbg !1581
  br i1 %icmp.129, label %else.110, label %else.109

else.106:                                         ; preds = %fallthrough.104
  %cast.1456 = bitcast %Decoder.0* %call.90 to i8*, !dbg !1578
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.367, i8* %cast.1456), !dbg !1578
  br label %fallthrough.106

else.107:                                         ; preds = %fallthrough.104
  %38 = bitcast i8* %field.367 to %Decoder.0**, !dbg !1577
  store %Decoder.0* %call.90, %Decoder.0** %38, align 8, !dbg !1578
  br label %fallthrough.106

fallthrough.109:                                  ; preds = %else.109, %else.110
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.335.sroa.3.0.copyload93, metadata !1511, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1510
  call void @llvm.dbg.value(metadata i8** %tmpv.335.sroa.4.0.cast.1460.sroa_idx94, metadata !1511, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1510
  %icmp.131 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.335.sroa.3.0.copyload93, null, !dbg !1582
  br i1 %icmp.131, label %else.111, label %then.111

else.109:                                         ; preds = %fallthrough.106
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* nonnull %field.370, i8* nonnull %cast.1463), !dbg !1581
  br label %fallthrough.109

else.110:                                         ; preds = %fallthrough.106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %field.370, i8* nonnull align 8 %cast.1463, i64 16, i1 false), !dbg !1581
  br label %fallthrough.109

then.111:                                         ; preds = %fallthrough.109
  call void @command_line_arguments.Session.TearDown(i8* nest undef, %Session.0* nonnull %cast.1208), !dbg !1583
  %39 = bitcast { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.335.sroa.3.0.copyload93 to i64*, !dbg !1584
  %.field.ld.26190 = load i64, i64* %39, align 8, !dbg !1584
  %40 = bitcast [1 x %IPST.11]* %tmpv.345 to i64*, !dbg !1585
  store i64 %.field.ld.26190, i64* %40, align 8, !dbg !1585
  %tmp.69.sroa.2.0.cast.1481.sroa_idx176 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.345, i64 0, i64 0, i32 1, !dbg !1585
  %41 = bitcast i8** %tmp.69.sroa.2.0.cast.1481.sroa_idx176 to i64*, !dbg !1585
  store i64 %tmpv.335.sroa.4.0.copyload95189, i64* %41, align 8, !dbg !1585
  %field.377 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.70, i64 0, i32 0, !dbg !1585
  %cast.1484 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.345, i64 0, i64 0, !dbg !1585
  store %IPST.11* %cast.1484, %IPST.11** %field.377, align 8, !dbg !1585
  %field.378 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.70, i64 0, i32 1, !dbg !1585
  store i64 1, i64* %field.378, align 8, !dbg !1585
  %field.379 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.70, i64 0, i32 2, !dbg !1585
  store i64 1, i64* %field.379, align 8, !dbg !1585
  %call.91 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([28 x i8]* @const.255 to i64), i64 27, %IPST.3* byval nonnull %tmp.70), !dbg !1585
  %call.91.fca.0.extract = extractvalue { i64, i64 } %call.91, 0, !dbg !1585
  %call.91.fca.1.extract = extractvalue { i64, i64 } %call.91, 1, !dbg !1585
  %call.92 = call { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.91.fca.0.extract, i64 %call.91.fca.1.extract), !dbg !1586
  %call.92.fca.0.extract = extractvalue { i64, i64 } %call.92, 0, !dbg !1586
  %call.92.fca.1.extract = extractvalue { i64, i64 } %call.92, 1, !dbg !1586
  call void @llvm.dbg.value(metadata %Session.0* null, metadata !1502, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.value(metadata i64 %call.92.fca.0.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1524
  call void @llvm.dbg.value(metadata i64 %call.92.fca.1.extract, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1524
  %tmp.71.sroa.0.0.cast.1498.sroa_idx = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 0, !dbg !1587
  store %Session.0* null, %Session.0** %tmp.71.sroa.0.0.cast.1498.sroa_idx, align 8, !dbg !1587
  %tmp.71.sroa.2.0.cast.1498.sroa_idx177 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, !dbg !1587
  %tmp.71.sroa.2.0.cast.1498.sroa_cast = bitcast %error.0* %tmp.71.sroa.2.0.cast.1498.sroa_idx177 to i64*, !dbg !1587
  store i64 %call.92.fca.0.extract, i64* %tmp.71.sroa.2.0.cast.1498.sroa_cast, align 8, !dbg !1587
  %tmp.71.sroa.3.0.cast.1498.sroa_idx178 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, i32 1, !dbg !1587
  %tmp.71.sroa.3.0.cast.1498.sroa_cast = bitcast i8** %tmp.71.sroa.3.0.cast.1498.sroa_idx178 to i64*, !dbg !1587
  store i64 %call.92.fca.1.extract, i64* %tmp.71.sroa.3.0.cast.1498.sroa_cast, align 8, !dbg !1587
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0), !dbg !1587
  ret void, !dbg !1587

else.111:                                         ; preds = %fallthrough.109
  call void @llvm.dbg.value(metadata %SessionHello.0* %hello, metadata !1588, metadata !DIExpression(DW_OP_deref)), !dbg !1594
  %call.93 = call %WarpState.0* @command_line_arguments.NewWarpState(i8* nest undef, %SessionHello.0* byval nonnull %hello), !dbg !1595
  %field.383 = getelementptr inbounds i8, i8* %call.74, i64 208, !dbg !1596
  %runtime.writeBarrier.ld.15 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1597
  %icmp.134 = icmp eq i32 %runtime.writeBarrier.ld.15, 0, !dbg !1597
  br i1 %icmp.134, label %else.115, label %else.114

fallthrough.114:                                  ; preds = %else.114, %else.115
  call void @llvm.dbg.value(metadata %Session.0* %cast.1208, metadata !1502, metadata !DIExpression()), !dbg !1503
  call void @llvm.dbg.value(metadata i64 0, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1524
  call void @llvm.dbg.value(metadata i64 0, metadata !1523, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1524
  %42 = bitcast { %Session.0*, %error.0 }* %sret.formal.6 to i8**, !dbg !1598
  store i8* %call.74, i8** %42, align 8, !dbg !1598
  %tmp.72.sroa.2.0.cast.1511.sroa_idx179 = getelementptr inbounds { %Session.0*, %error.0 }, { %Session.0*, %error.0 }* %sret.formal.6, i64 0, i32 1, !dbg !1598
  %43 = bitcast %error.0* %tmp.72.sroa.2.0.cast.1511.sroa_idx179 to i8*, !dbg !1598
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false), !dbg !1598
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %0), !dbg !1598
  ret void, !dbg !1598

else.114:                                         ; preds = %else.111
  %cast.1504 = bitcast %WarpState.0* %call.93 to i8*, !dbg !1597
  call void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %field.383, i8* %cast.1504), !dbg !1597
  br label %fallthrough.114

else.115:                                         ; preds = %else.111
  %44 = bitcast i8* %field.383 to %WarpState.0**, !dbg !1596
  store %WarpState.0* %call.93, %WarpState.0** %44, align 8, !dbg !1597
  br label %fallthrough.114
}

declare void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Client({ %Session.2*, %error.0 }*, i8*, i64, i64, %Config.1*) local_unnamed_addr #0

declare void @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open({ %Conn.0, %error.0 }*, i8*, %Session.2*) local_unnamed_addr #0

define %WarpState.0* @command_line_arguments.NewWarpState(i8* nest nocapture readnone %nest.38, %SessionHello.0* byval nocapture readonly %hello) #0 !dbg !1599 {
entry:
  %tmp.105.sroa.0 = alloca [48 x i8], align 8
  %tmp.106.sroa.0 = alloca { { i8*, i64 }, { i8*, i64 } }, align 8
  call void @llvm.dbg.declare(metadata %SessionHello.0* %hello, metadata !1602, metadata !DIExpression()), !dbg !1603
  %tmpv.686 = alloca [1 x { { i8*, i64 }, %UserState.0 }], align 8
  %tmpv.690 = alloca %WarpState.0, align 8
  %tmpv.691 = alloca { i8*, i64 }, align 8
  %tmpv.695 = alloca { i8*, i64 }, align 8
  %tmpv.696 = alloca %UserState.0, align 8
  call void @llvm.dbg.value(metadata %WarpState.0* null, metadata !1604, metadata !DIExpression()), !dbg !1605
  %field.679 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 1, i32 1, !dbg !1606
  %cast.2538 = bitcast { i8*, i64 }* %field.679 to i8*
  %tmp.106.sroa.02425 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.106.sroa.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.106.sroa.02425, i8* nonnull align 8 %cast.2538, i64 16, i1 false)
  %field.680 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 4, !dbg !1608
  %cast.2540 = bitcast { i8*, i64 }* %field.680 to i8*
  %tmp.106.sroa.0.0.sroa_cast18 = bitcast { { i8*, i64 }, { i8*, i64 } }* %tmp.106.sroa.0 to i8*, !dbg !1609
  %tmp.106.sroa.0.16.sroa_idx = getelementptr inbounds { { i8*, i64 }, { i8*, i64 } }, { { i8*, i64 }, { i8*, i64 } }* %tmp.106.sroa.0, i64 0, i32 1, !dbg !1609
  %tmp.106.sroa.0.16.sroa_cast = bitcast { i8*, i64 }* %tmp.106.sroa.0.16.sroa_idx to i8*, !dbg !1609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.106.sroa.0.16.sroa_cast, i8* nonnull align 8 %cast.2540, i64 16, i1 false), !dbg !1609
  %tmp.105.sroa.0.0.sroa_idx20 = getelementptr inbounds [48 x i8], [48 x i8]* %tmp.105.sroa.0, i64 0, i64 0, !dbg !1610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.105.sroa.0.0.sroa_idx20, i8* nonnull align 8 %cast.2538, i64 16, i1 false), !dbg !1610
  %tmp.105.sroa.0.16.sroa_idx = getelementptr inbounds [48 x i8], [48 x i8]* %tmp.105.sroa.0, i64 0, i64 16, !dbg !1610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.105.sroa.0.16.sroa_idx, i8* nonnull align 8 %tmp.106.sroa.0.0.sroa_cast18, i64 32, i1 false), !dbg !1610
  %tmp.105.sroa.0.0.cast.2549.sroa_cast = bitcast [1 x { { i8*, i64 }, %UserState.0 }]* %tmpv.686 to i8*, !dbg !1610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmp.105.sroa.0.0.cast.2549.sroa_cast, i8* nonnull align 8 %tmp.105.sroa.0.0.sroa_idx20, i64 48, i1 false), !dbg !1610
  %tmp.105.sroa.3.0.cast.2549.sroa_idx21 = getelementptr inbounds [1 x { { i8*, i64 }, %UserState.0 }], [1 x { { i8*, i64 }, %UserState.0 }]* %tmpv.686, i64 0, i64 0, i32 1, i32 2, !dbg !1610
  store i64 1, i64* %tmp.105.sroa.3.0.cast.2549.sroa_idx21, align 8, !dbg !1610
  %tmp.105.sroa.4.0.cast.2549.sroa_idx = getelementptr inbounds [1 x { { i8*, i64 }, %UserState.0 }], [1 x { { i8*, i64 }, %UserState.0 }]* %tmpv.686, i64 0, i64 0, i32 1, i32 3, !dbg !1610
  store i8 0, i8* %tmp.105.sroa.4.0.cast.2549.sroa_idx, align 8, !dbg !1610
  %cast.2552 = bitcast %SessionHello.0* %hello to i8*
  %call.163 = call { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @__go_construct_map(i8* nest undef, i8* bitcast (%MapType.0* @type..map.6string.7command_line_arguments.UserState to i8*), i64 1, i64 64, i64 16, i8* nonnull %tmp.105.sroa.0.0.cast.2549.sroa_cast), !dbg !1610
  %call.164 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.WarpState..d, i64 0, i32 0)), !dbg !1611
  %cast.2557 = bitcast i8* %call.164 to %WarpState.0*, !dbg !1611
  %cast.2558 = bitcast %WarpState.0* %tmpv.690 to i8*, !dbg !1612
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2558, i8* nonnull align 8 %cast.2552, i64 16, i1 false), !dbg !1612
  %field.691 = getelementptr inbounds %WarpState.0, %WarpState.0* %tmpv.690, i64 0, i32 1, !dbg !1612
  %cast.2560 = bitcast %Size.0* %field.691 to i8*, !dbg !1612
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %cast.2560, i8 0, i64 16, i1 false), !dbg !1612
  %field.692 = getelementptr inbounds %WarpState.0, %WarpState.0* %tmpv.690, i64 0, i32 2, !dbg !1612
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.163, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.692, align 8, !dbg !1612
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.WarpState..d, i64 0, i32 0), i8* %call.164, i8* nonnull %cast.2558), !dbg !1611
  call void @llvm.dbg.value(metadata %WarpState.0* %cast.2557, metadata !1613, metadata !DIExpression()), !dbg !1614
  %field.701 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 3, !dbg !1615
  %field0.154 = bitcast { i8*, i64 }* %field.701 to i64*, !dbg !1616
  %ld.285 = load i64, i64* %field0.154, align 8, !dbg !1616
  %0 = getelementptr inbounds %SessionHello.0, %SessionHello.0* %hello, i64 0, i32 3, i32 1, !dbg !1616
  %ld.286 = load i64, i64* %0, align 8, !dbg !1616
  %call.167 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.285, i64 %ld.286, i64 ptrtoint ([5 x i8]* @const.331 to i64), i64 4), !dbg !1616
  %icmp.292 = icmp eq i8 %call.167, 1, !dbg !1616
  br i1 %icmp.292, label %then.244, label %fallthrough.244

then.244:                                         ; preds = %entry
  %cast.2565 = bitcast { i8*, i64 }* %tmpv.691 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2565, i8* nonnull align 8 %cast.2538, i64 16, i1 false)
  %icmp.288 = icmp eq i8* %call.164, null, !dbg !1617
  br i1 %icmp.288, label %then.245, label %else.245

fallthrough.244:                                  ; preds = %else.248, %else.247, %entry
  call void @llvm.dbg.value(metadata %WarpState.0* %cast.2557, metadata !1604, metadata !DIExpression()), !dbg !1605
  ret %WarpState.0* %cast.2557, !dbg !1619

then.245:                                         ; preds = %then.244
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1617
  unreachable

else.245:                                         ; preds = %then.244
  %field.695 = getelementptr inbounds i8, i8* %call.164, i64 32, !dbg !1617
  %1 = bitcast i8* %field.695 to { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }**, !dbg !1617
  %.field.ld.113 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %1, align 8, !dbg !1617
  %call.165 = call i8* @runtime.mapaccess1(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.113, i8* nonnull %cast.2565), !dbg !1620
  call void @llvm.dbg.value(metadata i8* %call.165, metadata !1621, metadata !DIExpression(DW_OP_plus_uconst, 32, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 256, 64)), !dbg !1622
  call void @llvm.dbg.value(metadata i8* %call.165, metadata !1621, metadata !DIExpression(DW_OP_plus_uconst, 40, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 320, 8)), !dbg !1622
  %userState.sroa.6.0.cast.2572.sroa_raw_idx = getelementptr inbounds i8, i8* %call.165, i64 41
  call void @llvm.dbg.value(metadata i8 1, metadata !1621, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 8)), !dbg !1622
  call void @llvm.dbg.value(metadata i64 3, metadata !1621, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 64)), !dbg !1622
  %cast.2573 = bitcast { i8*, i64 }* %tmpv.695 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2573, i8* nonnull align 8 %cast.2538, i64 16, i1 false)
  %userState.sroa.0.0.cast.2575.sroa_cast = bitcast %UserState.0* %tmpv.696 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %userState.sroa.0.0.cast.2575.sroa_cast, i8* align 8 %call.165, i64 32, i1 false)
  %userState.sroa.4.0.cast.2575.sroa_idx5 = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.696, i64 0, i32 2
  store i64 3, i64* %userState.sroa.4.0.cast.2575.sroa_idx5, align 8
  %userState.sroa.5.0.cast.2575.sroa_idx = getelementptr inbounds %UserState.0, %UserState.0* %tmpv.696, i64 0, i32 3
  store i8 1, i8* %userState.sroa.5.0.cast.2575.sroa_idx, align 8
  %userState.sroa.6.0.cast.2575.sroa_raw_idx = getelementptr inbounds i8, i8* %userState.sroa.0.0.cast.2575.sroa_cast, i64 41
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 1 %userState.sroa.6.0.cast.2575.sroa_raw_idx, i8* nonnull align 1 %userState.sroa.6.0.cast.2572.sroa_raw_idx, i64 7, i1 false)
  %.field.ld.114 = load { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %1, align 8, !dbg !1623
  %call.166 = call i8* @runtime.mapassign(i8* nest undef, %_type.0* getelementptr inbounds (%MapType.0, %MapType.0* @type..map.6string.7command_line_arguments.UserState, i64 0, i32 0), { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %.field.ld.114, i8* nonnull %cast.2573), !dbg !1624
  %runtime.writeBarrier.ld.19 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1624
  %icmp.291 = icmp eq i32 %runtime.writeBarrier.ld.19, 0, !dbg !1624
  br i1 %icmp.291, label %then.247, label %else.247

then.247:                                         ; preds = %else.245
  %icmp.290 = icmp eq i8* %call.166, null, !dbg !1624
  br i1 %icmp.290, label %then.248, label %else.248

else.247:                                         ; preds = %else.245
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.UserState..d, i64 0, i32 0), i8* %call.166, i8* nonnull %userState.sroa.0.0.cast.2575.sroa_cast), !dbg !1624
  br label %fallthrough.244

then.248:                                         ; preds = %then.247
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1624
  unreachable

else.248:                                         ; preds = %then.247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.166, i8* nonnull align 8 %userState.sroa.0.0.cast.2575.sroa_cast, i64 48, i1 false), !dbg !1624
  br label %fallthrough.244
}

declare void @sync.Mutex.Lock(i8*, %Mutex.0*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk1(i8* nest nocapture readnone %nest.47, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1625 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1632, metadata !DIExpression()), !dbg !1633
  call void @llvm.dbg.value(metadata i8 0, metadata !1634, metadata !DIExpression()), !dbg !1633
  %call.205 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk1, %label.0)), !dbg !1633
  %0 = and i8 %call.205, 1, !dbg !1633
  %trunc.300 = icmp eq i8 %0, 0, !dbg !1633
  br i1 %trunc.300, label %else.296, label %label.0

else.296:                                         ; preds = %entry
  %field.813 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1633
  %.field.ld.128 = load %Mutex.0*, %Mutex.0** %field.813, align 8, !dbg !1633
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.128), !dbg !1633
  br label %label.0

label.0:                                          ; preds = %entry, %else.296
  call void @llvm.dbg.value(metadata i8 0, metadata !1634, metadata !DIExpression()), !dbg !1633
  ret i8 0, !dbg !1633
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk2(i8* nest nocapture readnone %nest.48, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1635 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1636, metadata !DIExpression()), !dbg !1637
  call void @llvm.dbg.value(metadata i8 0, metadata !1638, metadata !DIExpression()), !dbg !1637
  %call.206 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk2, %label.0)), !dbg !1637
  %0 = and i8 %call.206, 1, !dbg !1637
  %trunc.301 = icmp eq i8 %0, 0, !dbg !1637
  br i1 %trunc.301, label %else.297, label %label.0

else.297:                                         ; preds = %entry
  %field.814 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1637
  %.field.ld.129 = load %Mutex.0*, %Mutex.0** %field.814, align 8, !dbg !1637
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.129), !dbg !1637
  br label %label.0

label.0:                                          ; preds = %entry, %else.297
  call void @llvm.dbg.value(metadata i8 0, metadata !1638, metadata !DIExpression()), !dbg !1637
  ret i8 0, !dbg !1637
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk3(i8* nest nocapture readnone %nest.49, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1639 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1640, metadata !DIExpression()), !dbg !1641
  call void @llvm.dbg.value(metadata i8 0, metadata !1642, metadata !DIExpression()), !dbg !1641
  %call.207 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk3, %label.0)), !dbg !1641
  %0 = and i8 %call.207, 1, !dbg !1641
  %trunc.302 = icmp eq i8 %0, 0, !dbg !1641
  br i1 %trunc.302, label %else.298, label %label.0

else.298:                                         ; preds = %entry
  %field.815 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1641
  %.field.ld.130 = load %Mutex.0*, %Mutex.0** %field.815, align 8, !dbg !1641
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.130), !dbg !1641
  br label %label.0

label.0:                                          ; preds = %entry, %else.298
  call void @llvm.dbg.value(metadata i8 0, metadata !1642, metadata !DIExpression()), !dbg !1641
  ret i8 0, !dbg !1641
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk4(i8* nest nocapture readnone %nest.50, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1643 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1644, metadata !DIExpression()), !dbg !1645
  call void @llvm.dbg.value(metadata i8 0, metadata !1646, metadata !DIExpression()), !dbg !1645
  %call.208 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk4, %label.0)), !dbg !1645
  %0 = and i8 %call.208, 1, !dbg !1645
  %trunc.303 = icmp eq i8 %0, 0, !dbg !1645
  br i1 %trunc.303, label %else.299, label %label.0

else.299:                                         ; preds = %entry
  %field.816 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1645
  %.field.ld.131 = load %Mutex.0*, %Mutex.0** %field.816, align 8, !dbg !1645
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.131), !dbg !1645
  br label %label.0

label.0:                                          ; preds = %entry, %else.299
  call void @llvm.dbg.value(metadata i8 0, metadata !1646, metadata !DIExpression()), !dbg !1645
  ret i8 0, !dbg !1645
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk5(i8* nest nocapture readnone %nest.51, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1647 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1648, metadata !DIExpression()), !dbg !1649
  call void @llvm.dbg.value(metadata i8 0, metadata !1650, metadata !DIExpression()), !dbg !1649
  %call.209 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk5, %label.0)), !dbg !1649
  %0 = and i8 %call.209, 1, !dbg !1649
  %trunc.304 = icmp eq i8 %0, 0, !dbg !1649
  br i1 %trunc.304, label %else.300, label %label.0

else.300:                                         ; preds = %entry
  %field.817 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1649
  %.field.ld.132 = load %Mutex.0*, %Mutex.0** %field.817, align 8, !dbg !1649
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.132), !dbg !1649
  br label %label.0

label.0:                                          ; preds = %entry, %else.300
  call void @llvm.dbg.value(metadata i8 0, metadata !1650, metadata !DIExpression()), !dbg !1649
  ret i8 0, !dbg !1649
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk6(i8* nest nocapture readnone %nest.52, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1651 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1652, metadata !DIExpression()), !dbg !1653
  call void @llvm.dbg.value(metadata i8 0, metadata !1654, metadata !DIExpression()), !dbg !1653
  %call.210 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk6, %label.0)), !dbg !1653
  %0 = and i8 %call.210, 1, !dbg !1653
  %trunc.305 = icmp eq i8 %0, 0, !dbg !1653
  br i1 %trunc.305, label %else.301, label %label.0

else.301:                                         ; preds = %entry
  %field.818 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1653
  %.field.ld.133 = load %Mutex.0*, %Mutex.0** %field.818, align 8, !dbg !1653
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.133), !dbg !1653
  br label %label.0

label.0:                                          ; preds = %entry, %else.301
  call void @llvm.dbg.value(metadata i8 0, metadata !1654, metadata !DIExpression()), !dbg !1653
  ret i8 0, !dbg !1653
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk7(i8* nest nocapture readnone %nest.53, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1655 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1656, metadata !DIExpression()), !dbg !1657
  call void @llvm.dbg.value(metadata i8 0, metadata !1658, metadata !DIExpression()), !dbg !1657
  %call.211 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk7, %label.0)), !dbg !1657
  %0 = and i8 %call.211, 1, !dbg !1657
  %trunc.306 = icmp eq i8 %0, 0, !dbg !1657
  br i1 %trunc.306, label %else.302, label %label.0

else.302:                                         ; preds = %entry
  %field.819 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1657
  %.field.ld.134 = load %Mutex.0*, %Mutex.0** %field.819, align 8, !dbg !1657
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.134), !dbg !1657
  br label %label.0

label.0:                                          ; preds = %entry, %else.302
  call void @llvm.dbg.value(metadata i8 0, metadata !1658, metadata !DIExpression()), !dbg !1657
  ret i8 0, !dbg !1657
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk8(i8* nest nocapture readnone %nest.54, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1659 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1660, metadata !DIExpression()), !dbg !1661
  call void @llvm.dbg.value(metadata i8 0, metadata !1662, metadata !DIExpression()), !dbg !1661
  %call.212 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk8, %label.0)), !dbg !1661
  %0 = and i8 %call.212, 1, !dbg !1661
  %trunc.307 = icmp eq i8 %0, 0, !dbg !1661
  br i1 %trunc.307, label %else.303, label %label.0

else.303:                                         ; preds = %entry
  %field.820 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1661
  %.field.ld.135 = load %Mutex.0*, %Mutex.0** %field.820, align 8, !dbg !1661
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.135), !dbg !1661
  br label %label.0

label.0:                                          ; preds = %entry, %else.303
  call void @llvm.dbg.value(metadata i8 0, metadata !1662, metadata !DIExpression()), !dbg !1661
  ret i8 0, !dbg !1661
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk9(i8* nest nocapture readnone %nest.55, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1663 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1664, metadata !DIExpression()), !dbg !1665
  call void @llvm.dbg.value(metadata i8 0, metadata !1666, metadata !DIExpression()), !dbg !1665
  %call.213 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk9, %label.0)), !dbg !1665
  %0 = and i8 %call.213, 1, !dbg !1665
  %trunc.308 = icmp eq i8 %0, 0, !dbg !1665
  br i1 %trunc.308, label %else.304, label %label.0

else.304:                                         ; preds = %entry
  %field.821 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1665
  %.field.ld.136 = load %Mutex.0*, %Mutex.0** %field.821, align 8, !dbg !1665
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.136), !dbg !1665
  br label %label.0

label.0:                                          ; preds = %entry, %else.304
  call void @llvm.dbg.value(metadata i8 0, metadata !1666, metadata !DIExpression()), !dbg !1665
  ret i8 0, !dbg !1665
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk10(i8* nest nocapture readnone %nest.56, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1667 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1668, metadata !DIExpression()), !dbg !1669
  call void @llvm.dbg.value(metadata i8 0, metadata !1670, metadata !DIExpression()), !dbg !1669
  %call.214 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk10, %label.0)), !dbg !1669
  %0 = and i8 %call.214, 1, !dbg !1669
  %trunc.309 = icmp eq i8 %0, 0, !dbg !1669
  br i1 %trunc.309, label %else.305, label %label.0

else.305:                                         ; preds = %entry
  %field.822 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1669
  %.field.ld.137 = load %Mutex.0*, %Mutex.0** %field.822, align 8, !dbg !1669
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.137), !dbg !1669
  br label %label.0

label.0:                                          ; preds = %entry, %else.305
  call void @llvm.dbg.value(metadata i8 0, metadata !1670, metadata !DIExpression()), !dbg !1669
  ret i8 0, !dbg !1669
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk11(i8* nest nocapture readnone %nest.57, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1671 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1672, metadata !DIExpression()), !dbg !1673
  call void @llvm.dbg.value(metadata i8 0, metadata !1674, metadata !DIExpression()), !dbg !1673
  %call.215 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk11, %label.0)), !dbg !1673
  %0 = and i8 %call.215, 1, !dbg !1673
  %trunc.310 = icmp eq i8 %0, 0, !dbg !1673
  br i1 %trunc.310, label %else.306, label %label.0

else.306:                                         ; preds = %entry
  %field.823 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1673
  %.field.ld.138 = load %Mutex.0*, %Mutex.0** %field.823, align 8, !dbg !1673
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.138), !dbg !1673
  br label %label.0

label.0:                                          ; preds = %entry, %else.306
  call void @llvm.dbg.value(metadata i8 0, metadata !1674, metadata !DIExpression()), !dbg !1673
  ret i8 0, !dbg !1673
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk12(i8* nest nocapture readnone %nest.58, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1675 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1676, metadata !DIExpression()), !dbg !1677
  call void @llvm.dbg.value(metadata i8 0, metadata !1678, metadata !DIExpression()), !dbg !1677
  %call.216 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk12, %label.0)), !dbg !1677
  %0 = and i8 %call.216, 1, !dbg !1677
  %trunc.311 = icmp eq i8 %0, 0, !dbg !1677
  br i1 %trunc.311, label %else.307, label %label.0

else.307:                                         ; preds = %entry
  %field.824 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1677
  %.field.ld.139 = load %Mutex.0*, %Mutex.0** %field.824, align 8, !dbg !1677
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.139), !dbg !1677
  br label %label.0

label.0:                                          ; preds = %entry, %else.307
  call void @llvm.dbg.value(metadata i8 0, metadata !1678, metadata !DIExpression()), !dbg !1677
  ret i8 0, !dbg !1677
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk13(i8* nest nocapture readnone %nest.59, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1679 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1680, metadata !DIExpression()), !dbg !1681
  call void @llvm.dbg.value(metadata i8 0, metadata !1682, metadata !DIExpression()), !dbg !1681
  %call.217 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk13, %label.0)), !dbg !1681
  %0 = and i8 %call.217, 1, !dbg !1681
  %trunc.312 = icmp eq i8 %0, 0, !dbg !1681
  br i1 %trunc.312, label %else.308, label %label.0

else.308:                                         ; preds = %entry
  %field.825 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1681
  %.field.ld.140 = load %Mutex.0*, %Mutex.0** %field.825, align 8, !dbg !1681
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.140), !dbg !1681
  br label %label.0

label.0:                                          ; preds = %entry, %else.308
  call void @llvm.dbg.value(metadata i8 0, metadata !1682, metadata !DIExpression()), !dbg !1681
  ret i8 0, !dbg !1681
}

declare { i64, i64 } @github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Close(i8*, %Session.2*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk14(i8* nest nocapture readnone %nest.60, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !1683 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !1684, metadata !DIExpression()), !dbg !1685
  call void @llvm.dbg.value(metadata i8 0, metadata !1686, metadata !DIExpression()), !dbg !1685
  %call.218 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk14, %label.0)), !dbg !1685
  %0 = and i8 %call.218, 1, !dbg !1685
  %trunc.313 = icmp eq i8 %0, 0, !dbg !1685
  br i1 %trunc.313, label %else.309, label %label.0

else.309:                                         ; preds = %entry
  %field.826 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !1685
  %.field.ld.141 = load %Mutex.0*, %Mutex.0** %field.826, align 8, !dbg !1685
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.141), !dbg !1685
  br label %label.0

label.0:                                          ; preds = %entry, %else.309
  call void @llvm.dbg.value(metadata i8 0, metadata !1686, metadata !DIExpression()), !dbg !1685
  ret i8 0, !dbg !1685
}

define i64 @command_line_arguments.command_line_arguments.Shell..hash(i8* nest nocapture readnone %nest.73, i8* %key, i64 %seed) #0 !dbg !1687 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !1688, metadata !DIExpression()), !dbg !1689
  call void @llvm.dbg.value(metadata i64 %seed, metadata !1690, metadata !DIExpression()), !dbg !1689
  call void @llvm.dbg.value(metadata i64 0, metadata !1691, metadata !DIExpression()), !dbg !1689
  %call.239 = call i64 @runtime.strhash(i8* nest undef, i8* %key, i64 %seed), !dbg !1689
  call void @llvm.dbg.value(metadata i64 %call.239, metadata !1691, metadata !DIExpression()), !dbg !1689
  ret i64 %call.239, !dbg !1689
}

define i8 @command_line_arguments.command_line_arguments.Shell..eq(i8* nest nocapture readnone %nest.74, i8* readonly %key1, i8* readonly %key2) #0 !dbg !1692 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !1693, metadata !DIExpression()), !dbg !1694
  call void @llvm.dbg.value(metadata i8* %key2, metadata !1695, metadata !DIExpression()), !dbg !1694
  call void @llvm.dbg.value(metadata i8 0, metadata !1696, metadata !DIExpression()), !dbg !1694
  %icmp.359 = icmp eq i8* %key1, null, !dbg !1694
  br i1 %icmp.359, label %then.336, label %else.336

then.336:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1694
  unreachable

else.336:                                         ; preds = %entry
  %icmp.360 = icmp eq i8* %key2, null, !dbg !1694
  br i1 %icmp.360, label %then.337, label %else.337

then.337:                                         ; preds = %else.336
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1694
  unreachable

else.337:                                         ; preds = %else.336
  %field0.186 = bitcast i8* %key1 to i64*, !dbg !1694
  %ld.353 = load i64, i64* %field0.186, align 8, !dbg !1694
  %field1.186 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !1694
  %0 = bitcast i8* %field1.186 to i64*, !dbg !1694
  %ld.354 = load i64, i64* %0, align 8, !dbg !1694
  %field0.187 = bitcast i8* %key2 to i64*, !dbg !1694
  %ld.355 = load i64, i64* %field0.187, align 8, !dbg !1694
  %field1.187 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !1694
  %1 = bitcast i8* %field1.187 to i64*, !dbg !1694
  %ld.356 = load i64, i64* %1, align 8, !dbg !1694
  %call.240 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.353, i64 %ld.354, i64 %ld.355, i64 %ld.356), !dbg !1694
  %icmp.361 = icmp eq i8 %call.240, 1, !dbg !1694
  %spec.select = zext i1 %icmp.361 to i8
  call void @llvm.dbg.value(metadata i8 0, metadata !1696, metadata !DIExpression()), !dbg !1694
  ret i8 %spec.select, !dbg !1694
}

define void @command_line_arguments.DetectShell({ %Shell.0*, %error.0 }* nocapture sret %sret.formal.13, i8* nest nocapture readnone %nest.27, i64 %ctx.chunk0, i64 %ctx.chunk1) #0 !dbg !1697 {
entry:
  %tmpv.502 = alloca %Shell.0, align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1709, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1710
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1709, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1710
  call void @llvm.dbg.value(metadata %Shell.0* null, metadata !1711, metadata !DIExpression()), !dbg !1712
  call void @llvm.dbg.value(metadata i64 0, metadata !1713, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1721
  call void @llvm.dbg.value(metadata i64 0, metadata !1713, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1721
  %call.110.i = call { i64, i64 } @os.Getenv(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.266 to i64), i64 5), !dbg !1724
  %call.110.fca.0.extract.i = extractvalue { i64, i64 } %call.110.i, 0, !dbg !1724
  %call.110.fca.1.extract.i = extractvalue { i64, i64 } %call.110.i, 1, !dbg !1724
  %call.111.i = call i8 @runtime.eqstring(i8* nest undef, i64 %call.110.fca.0.extract.i, i64 %call.110.fca.1.extract.i, i64 0, i64 0), !dbg !1725
  %icmp.205.i = icmp eq i8 %call.111.i, 1, !dbg !1725
  br i1 %icmp.205.i, label %else.173, label %then.172.i

then.172.i:                                       ; preds = %entry
  %call.109.i = call { i64, i64 } @os.Getenv(i8* nest undef, i64 ptrtoint ([6 x i8]* @const.266 to i64), i64 5), !dbg !1726
  %call.109.fca.0.extract.i = extractvalue { i64, i64 } %call.109.i, 0, !dbg !1726
  %call.109.fca.1.extract.i = extractvalue { i64, i64 } %call.109.i, 1, !dbg !1726
  call void @llvm.dbg.value(metadata i64 %call.109.fca.0.extract.i, metadata !1727, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1728
  call void @llvm.dbg.value(metadata i64 %call.109.fca.1.extract.i, metadata !1727, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1728
  br label %else.173, !dbg !1729

else.173:                                         ; preds = %then.172.i, %entry
  %sret.actual.86.sroa.3.0 = phi i64 [ %call.109.fca.1.extract.i, %then.172.i ], [ 9, %entry ], !dbg !1730
  %sret.actual.86.sroa.0.0 = phi i64 [ %call.109.fca.0.extract.i, %then.172.i ], [ ptrtoint ([10 x i8]* @const.268 to i64), %entry ], !dbg !1730
  call void @llvm.dbg.value(metadata i64 0, metadata !1731, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1732
  call void @llvm.dbg.value(metadata i64 0, metadata !1731, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1732
  %call.113 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Shell..d, i64 0, i32 0)), !dbg !1733
  %command.sroa.0.0.cast.1876.sroa_cast = bitcast %Shell.0* %tmpv.502 to i64*, !dbg !1734
  store i64 %sret.actual.86.sroa.0.0, i64* %command.sroa.0.0.cast.1876.sroa_cast, align 8, !dbg !1734
  %command.sroa.5.0.cast.1876.sroa_idx48 = getelementptr inbounds %Shell.0, %Shell.0* %tmpv.502, i64 0, i32 0, i32 1, !dbg !1734
  store i64 %sret.actual.86.sroa.3.0, i64* %command.sroa.5.0.cast.1876.sroa_idx48, align 8, !dbg !1734
  %runtime.writeBarrier.ld.16 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1734
  %icmp.208 = icmp eq i32 %runtime.writeBarrier.ld.16, 0, !dbg !1734
  br i1 %icmp.208, label %then.174, label %else.174

then.174:                                         ; preds = %else.173
  call void @llvm.dbg.value(metadata i8* %call.113, metadata !1735, metadata !DIExpression()), !dbg !1736
  %icmp.207 = icmp eq i8* %call.113, null, !dbg !1734
  br i1 %icmp.207, label %then.175, label %else.175

fallthrough.174:                                  ; preds = %else.174, %else.175
  call void @llvm.dbg.value(metadata i8* %call.113, metadata !1711, metadata !DIExpression()), !dbg !1712
  call void @llvm.dbg.value(metadata i64 0, metadata !1737, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1738
  call void @llvm.dbg.value(metadata i64 0, metadata !1737, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1738
  %0 = bitcast { %Shell.0*, %error.0 }* %sret.formal.13 to i8**, !dbg !1739
  store i8* %call.113, i8** %0, align 8, !dbg !1739
  %tmp.85.sroa.2.0.cast.1890.sroa_idx37 = getelementptr inbounds { %Shell.0*, %error.0 }, { %Shell.0*, %error.0 }* %sret.formal.13, i64 0, i32 1, !dbg !1739
  %1 = bitcast %error.0* %tmp.85.sroa.2.0.cast.1890.sroa_idx37 to i8*, !dbg !1739
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 16, i1 false), !dbg !1739
  ret void, !dbg !1739

else.174:                                         ; preds = %else.173
  %cast.1883 = bitcast %Shell.0* %tmpv.502 to i8*, !dbg !1734
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Shell..d, i64 0, i32 0), i8* %call.113, i8* nonnull %cast.1883), !dbg !1734
  br label %fallthrough.174

then.175:                                         ; preds = %then.174
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1734
  unreachable

else.175:                                         ; preds = %then.174
  %cast.1880 = bitcast %Shell.0* %tmpv.502 to i8*, !dbg !1734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call.113, i8* nonnull align 8 %cast.1880, i64 16, i1 false), !dbg !1734
  br label %fallthrough.174
}

define i64 @command_line_arguments.command_line_arguments.Srv..hash(i8* nest nocapture readnone %nest.75, i8* %key, i64 %seed) #0 !dbg !1740 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, metadata !1741, metadata !DIExpression()), !dbg !1742
  call void @llvm.dbg.value(metadata i64 %seed, metadata !1743, metadata !DIExpression()), !dbg !1742
  call void @llvm.dbg.value(metadata i64 0, metadata !1744, metadata !DIExpression()), !dbg !1742
  %pticast.25 = ptrtoint i8* %key to i64, !dbg !1742
  %call.241 = call i64 @runtime.strhash(i8* nest undef, i8* %key, i64 %seed), !dbg !1742
  %add.15 = add i64 %pticast.25, 16, !dbg !1742
  %itpcast.9 = inttoptr i64 %add.15 to i8*, !dbg !1742
  %call.242 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.9, i64 %call.241), !dbg !1742
  %add.16 = add i64 %pticast.25, 24, !dbg !1742
  %itpcast.10 = inttoptr i64 %add.16 to i8*, !dbg !1742
  %call.243 = call i64 @runtime.strhash(i8* nest undef, i8* %itpcast.10, i64 %call.242), !dbg !1742
  %add.17 = add i64 %pticast.25, 40, !dbg !1742
  %itpcast.11 = inttoptr i64 %add.17 to i8*, !dbg !1742
  %call.244 = call i64 @runtime.memhash64(i8* nest undef, i8* %itpcast.11, i64 %call.243), !dbg !1742
  call void @llvm.dbg.value(metadata i64 %call.244, metadata !1744, metadata !DIExpression()), !dbg !1742
  ret i64 %call.244, !dbg !1742
}

define i8 @command_line_arguments.command_line_arguments.Srv..eq(i8* nest nocapture readnone %nest.76, i8* readonly %key1, i8* readonly %key2) #0 !dbg !1745 {
entry:
  call void @llvm.dbg.value(metadata i8* %key1, metadata !1746, metadata !DIExpression()), !dbg !1747
  call void @llvm.dbg.value(metadata i8* %key2, metadata !1748, metadata !DIExpression()), !dbg !1747
  call void @llvm.dbg.value(metadata i8 0, metadata !1749, metadata !DIExpression()), !dbg !1747
  %icmp.362 = icmp eq i8* %key1, null, !dbg !1747
  br i1 %icmp.362, label %then.339, label %else.339

then.339:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1747
  unreachable

else.339:                                         ; preds = %entry
  %icmp.363 = icmp eq i8* %key2, null, !dbg !1747
  br i1 %icmp.363, label %then.340, label %else.340

then.340:                                         ; preds = %else.339
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1747
  unreachable

else.340:                                         ; preds = %else.339
  %field0.188 = bitcast i8* %key1 to i64*, !dbg !1747
  %ld.357 = load i64, i64* %field0.188, align 8, !dbg !1747
  %field1.188 = getelementptr inbounds i8, i8* %key1, i64 8, !dbg !1747
  %0 = bitcast i8* %field1.188 to i64*, !dbg !1747
  %ld.358 = load i64, i64* %0, align 8, !dbg !1747
  %field0.189 = bitcast i8* %key2 to i64*, !dbg !1747
  %ld.359 = load i64, i64* %field0.189, align 8, !dbg !1747
  %field1.189 = getelementptr inbounds i8, i8* %key2, i64 8, !dbg !1747
  %1 = bitcast i8* %field1.189 to i64*, !dbg !1747
  %ld.360 = load i64, i64* %1, align 8, !dbg !1747
  %call.245 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.357, i64 %ld.358, i64 %ld.359, i64 %ld.360), !dbg !1747
  %icmp.364 = icmp eq i8 %call.245, 1, !dbg !1747
  br i1 %icmp.364, label %else.343, label %then.341

then.341:                                         ; preds = %else.346, %else.343, %else.340
  call void @llvm.dbg.value(metadata i8 0, metadata !1749, metadata !DIExpression()), !dbg !1747
  ret i8 0, !dbg !1747

else.343:                                         ; preds = %else.340
  %field.862 = getelementptr inbounds i8, i8* %key1, i64 16, !dbg !1747
  %2 = bitcast i8* %field.862 to %Session.0**, !dbg !1747
  %.field.ld.153 = load %Session.0*, %Session.0** %2, align 8, !dbg !1747
  %field.863 = getelementptr inbounds i8, i8* %key2, i64 16, !dbg !1747
  %3 = bitcast i8* %field.863 to %Session.0**, !dbg !1747
  %.field.ld.154 = load %Session.0*, %Session.0** %3, align 8, !dbg !1747
  %icmp.367 = icmp eq %Session.0* %.field.ld.153, %.field.ld.154, !dbg !1747
  br i1 %icmp.367, label %else.346, label %then.341

else.346:                                         ; preds = %else.343
  %field.864 = getelementptr inbounds i8, i8* %key1, i64 24, !dbg !1747
  %field.865 = getelementptr inbounds i8, i8* %key2, i64 24, !dbg !1747
  %field0.190 = bitcast i8* %field.864 to i64*, !dbg !1747
  %ld.361 = load i64, i64* %field0.190, align 8, !dbg !1747
  %field1.190 = getelementptr inbounds i8, i8* %key1, i64 32, !dbg !1747
  %4 = bitcast i8* %field1.190 to i64*, !dbg !1747
  %ld.362 = load i64, i64* %4, align 8, !dbg !1747
  %field0.191 = bitcast i8* %field.865 to i64*, !dbg !1747
  %ld.363 = load i64, i64* %field0.191, align 8, !dbg !1747
  %field1.191 = getelementptr inbounds i8, i8* %key2, i64 32, !dbg !1747
  %5 = bitcast i8* %field1.191 to i64*, !dbg !1747
  %ld.364 = load i64, i64* %5, align 8, !dbg !1747
  %call.246 = call i8 @runtime.eqstring(i8* nest undef, i64 %ld.361, i64 %ld.362, i64 %ld.363, i64 %ld.364), !dbg !1747
  %icmp.370 = icmp eq i8 %call.246, 1, !dbg !1747
  br i1 %icmp.370, label %else.349, label %then.341

else.349:                                         ; preds = %else.346
  %field.866 = getelementptr inbounds i8, i8* %key1, i64 40, !dbg !1747
  %6 = bitcast i8* %field.866 to %Mutex.0**, !dbg !1747
  %.field.ld.155 = load %Mutex.0*, %Mutex.0** %6, align 8, !dbg !1747
  %field.867 = getelementptr inbounds i8, i8* %key2, i64 40, !dbg !1747
  %7 = bitcast i8* %field.867 to %Mutex.0**, !dbg !1747
  %.field.ld.156 = load %Mutex.0*, %Mutex.0** %7, align 8, !dbg !1747
  %icmp.373 = icmp eq %Mutex.0* %.field.ld.155, %.field.ld.156, !dbg !1747
  %spec.select = zext i1 %icmp.373 to i8
  ret i8 %spec.select
}

define { i64, i64 } @command_line_arguments.Srv.Path(i8* nest nocapture readnone %nest.28, %Srv.0* readonly %s) #0 !dbg !1750 {
entry:
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1761, metadata !DIExpression()), !dbg !1762
  %icmp.209 = icmp eq %Srv.0* %s, null, !dbg !1763
  br i1 %icmp.209, label %then.176, label %else.176

then.176:                                         ; preds = %entry
  call void @__go_runtime_error(i8* nest undef, i32 6), !dbg !1763
  unreachable

else.176:                                         ; preds = %entry
  %"$ret37.sroa.0.0.cast.1953.sroa_idx" = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 2, !dbg !1764
  %"$ret37.sroa.0.0.cast.1953.sroa_cast" = bitcast { i8*, i64 }* %"$ret37.sroa.0.0.cast.1953.sroa_idx" to i64*, !dbg !1764
  %"$ret37.sroa.0.0.copyload" = load i64, i64* %"$ret37.sroa.0.0.cast.1953.sroa_cast", align 8, !dbg !1764
  call void @llvm.dbg.value(metadata i64 %"$ret37.sroa.0.0.copyload", metadata !1765, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1766
  %"$ret37.sroa.5.0.cast.1953.sroa_idx3" = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 2, i32 1, !dbg !1764
  %"$ret37.sroa.5.0.copyload" = load i64, i64* %"$ret37.sroa.5.0.cast.1953.sroa_idx3", align 8, !dbg !1764
  call void @llvm.dbg.value(metadata i64 %"$ret37.sroa.5.0.copyload", metadata !1765, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1766
  %ld.216.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret37.sroa.0.0.copyload", 0, !dbg !1764
  %ld.216.fca.1.insert = insertvalue { i64, i64 } %ld.216.fca.0.insert, i64 %"$ret37.sroa.5.0.copyload", 1, !dbg !1764
  ret { i64, i64 } %ld.216.fca.1.insert, !dbg !1764
}

define { i64, i64 } @command_line_arguments.Srv.Run(i8* nest nocapture readnone %nest.31, %Srv.0* %param, i64 %param.chunk0, i64 %param.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1767 {
entry:
  %tmpv.529 = alloca %Srv.0*, align 8
  %tmpv.531 = alloca %Context.0, align 8
  %tmpv.532 = alloca i8, align 1
  %sret.actual.92 = alloca { %Listener.0, %error.0 }, align 8
  %tmpv.539 = alloca { %Listener.0 }, align 8
  %sret.actual.94 = alloca { %Conn.0, %error.0 }, align 8
  %tmpv.542 = alloca %Conn.0, align 8
  %tmpv.552 = alloca { i8*, %Srv.0**, %Context.0*, %Conn.0* }, align 8
  %tmpv.555 = alloca { %__go_descriptor.16* }, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %param, metadata !1770, metadata !DIExpression()), !dbg !1771
  call void @llvm.dbg.value(metadata i64 %param.chunk0, metadata !1772, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1773
  call void @llvm.dbg.value(metadata i64 %param.chunk1, metadata !1772, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1773
  store i8 0, i8* %tmpv.532, align 1
  %call.120 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i64 0, i32 0))
          to label %cont.157 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1771

finally.16:                                       ; preds = %cont.165, %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.16
  %"$ret39.sroa.0.1" = phi i64 [ 0, %catchpad.16 ], [ %call.123.fca.0.extract, %cont.165 ], [ 0, %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  %"$ret39.sroa.5.1" = phi i64 [ 0, %catchpad.16 ], [ %call.123.fca.1.extract, %cont.165 ], [ 0, %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  %ehtmp.16.sroa.0.0 = phi i8* [ %ex2.16.fca.0.extract, %catchpad.16 ], [ undef, %cont.165 ], [ undef, %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  %ehtmp.16.sroa.2.0 = phi i32 [ %ex2.16.fca.1.extract, %catchpad.16 ], [ undef, %cont.165 ], [ undef, %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  %finvar.16.0 = phi i8 [ 0, %catchpad.16 ], [ 1, %cont.165 ], [ 1, %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  call void @llvm.dbg.value(metadata i64 %"$ret39.sroa.5.1", metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1775
  call void @llvm.dbg.value(metadata i64 %"$ret39.sroa.0.1", metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1775
  br label %finish.16

pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %cont.175, %cont.174, %fallthrough.188, %then.188, %cont.171, %else.187, %else.185, %then.186, %cont.167, %label.0, %else.184, %then.184, %fallthrough.183, %then.183, %fallthrough.182, %then.182, %cont.159, %cont.158, %cont.157, %entry
  %lpad.loopexit.split-lp39 = landingpad { i8*, i32 }
          catch i8* null
  call void @llvm.dbg.value(metadata i64 0, metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1775
  call void @llvm.dbg.value(metadata i64 0, metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1775
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.532)
          to label %finally.16 unwind label %catchpad.16, !dbg !1776

cont.157:                                         ; preds = %entry
  %cast.2010 = bitcast i8* %call.120 to %Srv.0**, !dbg !1771
  store %Srv.0* %param, %Srv.0** %tmpv.529, align 8
  %cast.2013 = bitcast %Srv.0** %tmpv.529 to i8*, !dbg !1771
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%PtrType.0, %PtrType.0* @type...1command_line_arguments.Srv, i64 0, i32 0), i8* %call.120, i8* nonnull %cast.2013)
          to label %cont.158 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1771

cont.158:                                         ; preds = %cont.157
  call void @llvm.dbg.value(metadata %Srv.0** %cast.2010, metadata !1777, metadata !DIExpression()), !dbg !1771
  %call.121 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0))
          to label %cont.159 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1773

cont.159:                                         ; preds = %cont.158
  %param.addr1.sroa.0.0.cast.2016.sroa_cast = bitcast %Context.0* %tmpv.531 to i64*
  store i64 %param.chunk0, i64* %param.addr1.sroa.0.0.cast.2016.sroa_cast, align 8
  %param.addr1.sroa.2.0.cast.2016.sroa_idx37 = getelementptr inbounds %Context.0, %Context.0* %tmpv.531, i64 0, i32 1
  %param.addr1.sroa.2.0.cast.2016.sroa_cast = bitcast i8** %param.addr1.sroa.2.0.cast.2016.sroa_idx37 to i64*
  store i64 %param.chunk1, i64* %param.addr1.sroa.2.0.cast.2016.sroa_cast, align 8
  %cast.2020 = bitcast %Context.0* %tmpv.531 to i8*, !dbg !1773
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @context.Context..d, i64 0, i32 0), i8* %call.121, i8* nonnull %cast.2020)
          to label %cont.160 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1773

cont.160:                                         ; preds = %cont.159
  call void @llvm.dbg.value(metadata i8* %call.121, metadata !1779, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.value(metadata i64 0, metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1775
  call void @llvm.dbg.value(metadata i64 0, metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1775
  %.ld.128 = load %Srv.0*, %Srv.0** %cast.2010, align 8, !dbg !1781
  %icmp.216 = icmp eq %Srv.0* %.ld.128, null, !dbg !1783
  br i1 %icmp.216, label %then.182, label %fallthrough.182

then.182:                                         ; preds = %cont.160
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.182 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1783

fallthrough.182:                                  ; preds = %cont.160, %then.182
  %field.505 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.128, i64 0, i32 2, !dbg !1783
  %field0.118 = bitcast { i8*, i64 }* %field.505 to i64*, !dbg !1784
  %ld.219 = load i64, i64* %field0.118, align 8, !dbg !1784
  %0 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.128, i64 0, i32 2, i32 1, !dbg !1784
  %ld.220 = load i64, i64* %0, align 8, !dbg !1784
  %call.122 = invoke { i64, i64 } @syscall.Unlink(i8* nest undef, i64 %ld.219, i64 %ld.220)
          to label %cont.162 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1784

cont.162:                                         ; preds = %fallthrough.182
  %.ld.130 = load %Srv.0*, %Srv.0** %cast.2010, align 8, !dbg !1785
  %icmp.217 = icmp eq %Srv.0* %.ld.130, null, !dbg !1786
  br i1 %icmp.217, label %then.183, label %fallthrough.183

then.183:                                         ; preds = %cont.162
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.183 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1786

fallthrough.183:                                  ; preds = %cont.162, %then.183
  %field.506 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.130, i64 0, i32 2, !dbg !1786
  %field0.120 = bitcast { i8*, i64 }* %field.506 to i64*, !dbg !1787
  %ld.223 = load i64, i64* %field0.120, align 8, !dbg !1787
  %1 = getelementptr inbounds %Srv.0, %Srv.0* %.ld.130, i64 0, i32 2, i32 1, !dbg !1787
  %ld.224 = load i64, i64* %1, align 8, !dbg !1787
  invoke void @net.Listen({ %Listener.0, %error.0 }* nonnull sret %sret.actual.92, i8* nest undef, i64 ptrtoint ([5 x i8]* @const.111 to i64), i64 4, i64 %ld.223, i64 %ld.224)
          to label %cont.164 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1787

cont.164:                                         ; preds = %fallthrough.183
  %tmpv.534.sroa.0.sroa.0.0.tmpv.534.sroa.0.0.cast.2030.sroa_cast.sroa_idx = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.92, i64 0, i32 0, i32 0, !dbg !1787
  %tmpv.534.sroa.0.sroa.0.0.copyload30 = load { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.534.sroa.0.sroa.0.0.tmpv.534.sroa.0.0.cast.2030.sroa_cast.sroa_idx, align 8, !dbg !1787
  %tmpv.534.sroa.0.sroa.3.0.tmpv.534.sroa.0.0.cast.2030.sroa_cast.sroa_idx31 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.92, i64 0, i32 0, i32 1, !dbg !1787
  %tmpv.534.sroa.0.sroa.3.0.copyload32 = load i8*, i8** %tmpv.534.sroa.0.sroa.3.0.tmpv.534.sroa.0.0.cast.2030.sroa_cast.sroa_idx31, align 8, !dbg !1787
  %tmpv.534.sroa.3.0.cast.2030.sroa_idx21 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.92, i64 0, i32 1, !dbg !1787
  %tmpv.534.sroa.3.0.cast.2030.sroa_cast = bitcast %error.0* %tmpv.534.sroa.3.0.cast.2030.sroa_idx21 to i64*, !dbg !1787
  %tmpv.534.sroa.3.0.copyload22 = load i64, i64* %tmpv.534.sroa.3.0.cast.2030.sroa_cast, align 8, !dbg !1787
  call void @llvm.dbg.value(metadata { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.534.sroa.0.sroa.0.0.copyload30, metadata !1788, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1805
  call void @llvm.dbg.value(metadata i8* %tmpv.534.sroa.0.sroa.3.0.copyload32, metadata !1788, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1805
  call void @llvm.dbg.value(metadata i64 %tmpv.534.sroa.3.0.copyload22, metadata !1806, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1805
  %icmp.218 = icmp eq i64 %tmpv.534.sroa.3.0.copyload22, 0, !dbg !1807
  br i1 %icmp.218, label %else.184, label %then.184

then.184:                                         ; preds = %cont.164
  %tmpv.534.sroa.4.0.cast.2030.sroa_idx23 = getelementptr inbounds { %Listener.0, %error.0 }, { %Listener.0, %error.0 }* %sret.actual.92, i64 0, i32 1, i32 1, !dbg !1787
  %tmpv.534.sroa.4.0.cast.2030.sroa_cast = bitcast i8** %tmpv.534.sroa.4.0.cast.2030.sroa_idx23 to i64*, !dbg !1787
  %tmpv.534.sroa.4.0.copyload24 = load i64, i64* %tmpv.534.sroa.4.0.cast.2030.sroa_cast, align 8, !dbg !1787
  call void @llvm.dbg.value(metadata i64 %tmpv.534.sroa.4.0.copyload24, metadata !1806, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1805
  %call.123 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %tmpv.534.sroa.3.0.copyload22, i64 %tmpv.534.sroa.4.0.copyload24)
          to label %cont.165 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1808

else.184:                                         ; preds = %cont.164
  %cast.2047 = bitcast { %Listener.0 }* %tmpv.539 to i8*
  %ln.sroa.0.0.cast.2049.sroa_idx = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %tmpv.539, i64 0, i32 0, i32 0, !dbg !1809
  store { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.534.sroa.0.sroa.0.0.copyload30, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %ln.sroa.0.0.cast.2049.sroa_idx, align 8, !dbg !1809
  %ln.sroa.4.0.cast.2049.sroa_idx27 = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %tmpv.539, i64 0, i32 0, i32 1, !dbg !1809
  store i8* %tmpv.534.sroa.0.sroa.3.0.copyload32, i8** %ln.sroa.4.0.cast.2049.sroa_idx27, align 8, !dbg !1809
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.532, %__go_descriptor.47* bitcast (i8 (i8*, { %Listener.0 }*)* @command_line_arguments.command_line_arguments..thunk16 to %__go_descriptor.47*), i8* nonnull %cast.2047)
          to label %label.0.preheader unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1809

label.0.preheader:                                ; preds = %else.184
  %field.512 = getelementptr inbounds { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.534.sroa.0.sroa.0.0.copyload30, i64 0, i32 1
  %tmpv.541.sroa.0.0.cast.2056.sroa_cast = bitcast { %Conn.0, %error.0 }* %sret.actual.94 to i8*
  %tmpv.541.sroa.3.0.cast.2056.sroa_idx10 = getelementptr inbounds { %Conn.0, %error.0 }, { %Conn.0, %error.0 }* %sret.actual.94, i64 0, i32 1, i32 0
  %tmpv.541.sroa.0.0.cast.2057.sroa_cast = bitcast %Conn.0* %tmpv.542 to i8*
  %field.517 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.552, i64 0, i32 0
  %field.518 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.552, i64 0, i32 1
  %2 = bitcast %Srv.0*** %field.518 to i8**
  %field.519 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.552, i64 0, i32 2
  %3 = bitcast %Context.0** %field.519 to i8**
  %field.520 = getelementptr inbounds { i8*, %Srv.0**, %Context.0*, %Conn.0* }, { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.552, i64 0, i32 3
  %4 = bitcast %Conn.0** %field.520 to i8**
  %cast.2081 = bitcast { i8*, %Srv.0**, %Context.0*, %Conn.0* }* %tmpv.552 to i8*
  %5 = bitcast { %__go_descriptor.16* }* %tmpv.555 to i8**
  %cast.2090 = bitcast { %__go_descriptor.16* }* %tmpv.555 to i8*
  br label %label.0

cont.165:                                         ; preds = %then.184
  %call.123.fca.0.extract = extractvalue { i64, i64 } %call.123, 0, !dbg !1808
  %call.123.fca.1.extract = extractvalue { i64, i64 } %call.123, 1, !dbg !1808
  call void @llvm.dbg.value(metadata i64 %call.123.fca.0.extract, metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1775
  call void @llvm.dbg.value(metadata i64 %call.123.fca.1.extract, metadata !1774, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1775
  br label %finally.16

label.0:                                          ; preds = %label.0.backedge, %label.0.preheader
  %6 = phi i8* [ undef, %label.0.preheader ], [ %7, %label.0.backedge ]
  %.field.ld.75 = load void ({ %Conn.0, %error.0 }*, i8*, i8*)*, void ({ %Conn.0, %error.0 }*, i8*, i8*)** %field.512, align 8, !dbg !1810
  invoke void %.field.ld.75({ %Conn.0, %error.0 }* nonnull sret %sret.actual.94, i8* nest undef, i8* %tmpv.534.sroa.0.sroa.3.0.copyload32)
          to label %cont.167 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1810

cont.167:                                         ; preds = %label.0
  %tmpv.541.sroa.3.0.copyload11 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %tmpv.541.sroa.3.0.cast.2056.sroa_idx10, align 8, !dbg !1810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %tmpv.541.sroa.0.0.cast.2057.sroa_cast, i8* nonnull align 8 %tmpv.541.sroa.0.0.cast.2056.sroa_cast, i64 16, i1 false)
  %call.124 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0))
          to label %cont.168 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1812

cont.168:                                         ; preds = %cont.167
  %runtime.writeBarrier.ld.18 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1810
  %icmp.220 = icmp eq i32 %runtime.writeBarrier.ld.18, 0, !dbg !1810
  br i1 %icmp.220, label %then.185, label %else.185

then.185:                                         ; preds = %cont.168
  call void @llvm.dbg.value(metadata i8* %call.124, metadata !1813, metadata !DIExpression()), !dbg !1815
  %icmp.219 = icmp eq i8* %call.124, null, !dbg !1810
  br i1 %icmp.219, label %then.186, label %fallthrough.186

fallthrough.185:                                  ; preds = %else.185, %fallthrough.186
  %7 = phi i8* [ %8, %fallthrough.186 ], [ %6, %else.185 ]
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.541.sroa.3.0.copyload11, metadata !1816, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1815
  call void @llvm.dbg.value(metadata { %Conn.0, %error.0 }* %sret.actual.94, metadata !1816, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_deref, DW_OP_stack_value, DW_OP_LLVM_fragment, 64, 64)), !dbg !1815
  %icmp.221 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.541.sroa.3.0.copyload11, null, !dbg !1817
  br i1 %icmp.221, label %else.187, label %label.0.backedge

else.185:                                         ; preds = %cont.168
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @net.Conn..d, i64 0, i32 0), i8* %call.124, i8* nonnull %tmpv.541.sroa.0.0.cast.2057.sroa_cast)
          to label %fallthrough.185 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1810

then.186:                                         ; preds = %then.185
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.186 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1810

fallthrough.186:                                  ; preds = %then.185, %then.186
  %8 = phi i8* [ %6, %then.186 ], [ %call.124, %then.185 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %tmpv.541.sroa.0.0.cast.2057.sroa_cast, i64 16, i1 false), !dbg !1810
  br label %fallthrough.185

else.187:                                         ; preds = %fallthrough.185
  %call.125 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, i64 0, i32 0))
          to label %cont.171 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1818

cont.171:                                         ; preds = %else.187
  store i8* bitcast (void (i8*)* @command_line_arguments..1command_line_arguments.Srv.Run..func1 to i8*), i8** %field.517, align 8, !dbg !1818
  store i8* %call.120, i8** %2, align 8, !dbg !1818
  store i8* %call.121, i8** %3, align 8, !dbg !1818
  store i8* %call.124, i8** %4, align 8, !dbg !1818
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, i64 0, i32 0), i8* %call.125, i8* nonnull %cast.2081)
          to label %cont.172 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1818

cont.172:                                         ; preds = %cont.171
  %icmp.222 = icmp eq i8* %call.125, null, !dbg !1819
  br i1 %icmp.222, label %then.188, label %fallthrough.188

then.188:                                         ; preds = %cont.172
  invoke void @__go_runtime_error(i8* nest undef, i32 11)
          to label %fallthrough.188 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1819

fallthrough.188:                                  ; preds = %then.188, %cont.172
  %call.126 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0))
          to label %cont.174 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1819

cont.174:                                         ; preds = %fallthrough.188
  store i8* %call.125, i8** %5, align 8, !dbg !1819
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @type..struct.4.4x.5fn.0func.8.9.8.9.5, i64 0, i32 0), i8* %call.126, i8* nonnull %cast.2090)
          to label %cont.175 unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1819

cont.175:                                         ; preds = %cont.174
  invoke void @__go_go(i8* nest undef, %__go_descriptor.47* bitcast (void (i8*, { %__go_descriptor.16* }*)* @command_line_arguments.command_line_arguments..thunk17 to %__go_descriptor.47*), i8* %call.126)
          to label %label.0.backedge unwind label %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1819

label.0.backedge:                                 ; preds = %cont.175, %fallthrough.185
  br label %label.0, !dbg !1810

catchpad.16:                                      ; preds = %pad.32.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.16 = landingpad { i8*, i32 }
          cleanup
  %ex2.16.fca.0.extract = extractvalue { i8*, i32 } %ex2.16, 0
  %ex2.16.fca.1.extract = extractvalue { i8*, i32 } %ex2.16, 1
  br label %finally.16

pad.33:                                           ; preds = %finish.16
  %ex.33 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.532), !dbg !1776
  br label %finish.16

finish.16:                                        ; preds = %pad.33, %finally.16
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.532)
          to label %cont.178 unwind label %pad.33, !dbg !1776

cont.178:                                         ; preds = %finish.16
  %icmp.223 = icmp eq i8 %finvar.16.0, 1
  br i1 %icmp.223, label %finret.16, label %finres.16

finres.16:                                        ; preds = %cont.178
  %excv.16.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.16.sroa.0.0, 0
  %excv.16.fca.1.insert = insertvalue { i8*, i32 } %excv.16.fca.0.insert, i32 %ehtmp.16.sroa.2.0, 1
  resume { i8*, i32 } %excv.16.fca.1.insert

finret.16:                                        ; preds = %cont.178
  %ld.227.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret39.sroa.0.1", 0, !dbg !1820
  %ld.227.fca.1.insert = insertvalue { i64, i64 } %ld.227.fca.0.insert, i64 %"$ret39.sroa.5.1", 1, !dbg !1820
  ret { i64, i64 } %ld.227.fca.1.insert, !dbg !1820
}

define void @command_line_arguments.Srv.SetSession(i8* nest nocapture readnone %nest.30, %Srv.0* %s, i64 %ctx.chunk0, i64 %ctx.chunk1, %Session.0* %session) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1821 {
entry:
  %tmpv.519 = alloca i8, align 1
  %tmpv.523 = alloca { %Mutex.0* }, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1824, metadata !DIExpression()), !dbg !1825
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1826, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1827
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1826, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1827
  call void @llvm.dbg.value(metadata %Session.0* %session, metadata !1828, metadata !DIExpression()), !dbg !1829
  store i8 0, i8* %tmpv.519, align 1
  %icmp.210 = icmp eq %Srv.0* %s, null, !dbg !1830
  br i1 %icmp.210, label %then.177, label %fallthrough.177

finally.15:                                       ; preds = %else.181, %else.180, %pad.30, %catchpad.15
  %ehtmp.15.sroa.0.0 = phi i8* [ %ex2.15.fca.0.extract, %catchpad.15 ], [ undef, %pad.30 ], [ undef, %else.180 ], [ undef, %else.181 ]
  %ehtmp.15.sroa.2.0 = phi i32 [ %ex2.15.fca.1.extract, %catchpad.15 ], [ undef, %pad.30 ], [ undef, %else.180 ], [ undef, %else.181 ]
  %finvar.15.0 = phi i8 [ 0, %catchpad.15 ], [ 1, %pad.30 ], [ 1, %else.180 ], [ 1, %else.181 ]
  br label %finish.15

pad.30:                                           ; preds = %else.180, %fallthrough.178, %fallthrough.177, %then.177
  %ex.30 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.519)
          to label %finally.15 unwind label %catchpad.15, !dbg !1831

then.177:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.177 unwind label %pad.30, !dbg !1830

fallthrough.177:                                  ; preds = %entry, %then.177
  %field.501 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 3, !dbg !1830
  %.field.ld.73 = load %Mutex.0*, %Mutex.0** %field.501, align 8, !dbg !1830
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.73)
          to label %fallthrough.178 unwind label %pad.30, !dbg !1832

fallthrough.178:                                  ; preds = %fallthrough.177
  %0 = bitcast %Mutex.0** %field.501 to i64*, !dbg !1833
  %.field.ld.742 = load i64, i64* %0, align 8, !dbg !1833
  %cast.2000 = bitcast { %Mutex.0* }* %tmpv.523 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.523 to i64*, !dbg !1834
  store i64 %.field.ld.742, i64* %1, align 8, !dbg !1834
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.519, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk15 to %__go_descriptor.47*), i8* nonnull %cast.2000)
          to label %fallthrough.179 unwind label %pad.30, !dbg !1834

fallthrough.179:                                  ; preds = %fallthrough.178
  %field.504 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 1, !dbg !1835
  %runtime.writeBarrier.ld.17 = load i32, i32* @runtime.writeBarrier, align 4, !dbg !1836
  %icmp.214 = icmp eq i32 %runtime.writeBarrier.ld.17, 0, !dbg !1836
  br i1 %icmp.214, label %else.181, label %else.180

else.180:                                         ; preds = %fallthrough.179
  %cast.2006 = bitcast %Session.0** %field.504 to i8*, !dbg !1836
  %cast.2007 = bitcast %Session.0* %session to i8*, !dbg !1836
  invoke void @runtime.writebarrierptr(i8* nest undef, i8* nonnull %cast.2006, i8* %cast.2007)
          to label %finally.15 unwind label %pad.30, !dbg !1836

else.181:                                         ; preds = %fallthrough.179
  store %Session.0* %session, %Session.0** %field.504, align 8, !dbg !1836
  br label %finally.15

catchpad.15:                                      ; preds = %pad.30
  %ex2.15 = landingpad { i8*, i32 }
          cleanup
  %ex2.15.fca.0.extract = extractvalue { i8*, i32 } %ex2.15, 0
  %ex2.15.fca.1.extract = extractvalue { i8*, i32 } %ex2.15, 1
  br label %finally.15

pad.31:                                           ; preds = %finish.15
  %ex.31 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.519), !dbg !1831
  br label %finish.15

finish.15:                                        ; preds = %pad.31, %finally.15
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.519)
          to label %cont.156 unwind label %pad.31, !dbg !1831

cont.156:                                         ; preds = %finish.15
  %icmp.215 = icmp eq i8 %finvar.15.0, 1
  br i1 %icmp.215, label %finret.15, label %finres.15

finres.15:                                        ; preds = %cont.156
  %excv.15.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.15.sroa.0.0, 0
  %excv.15.fca.1.insert = insertvalue { i8*, i32 } %excv.15.fca.0.insert, i32 %ehtmp.15.sroa.2.0, 1
  resume { i8*, i32 } %excv.15.fca.1.insert

finret.15:                                        ; preds = %cont.156
  ret void
}

define void @command_line_arguments.Srv.executeAuthorize(%CommandResult.0* nocapture sret %sret.formal.15, i8* nest nocapture readnone %nest.35, %Srv.0* readonly %s, i64 %ctx.chunk0, i64 %ctx.chunk1, %Command.1* byval nocapture readonly %cmd) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1837 {
entry:
  %tmp.101 = alloca %HostUpdate.0, align 8
  %tmp.100 = alloca [2 x { i8*, i64 }], align 8
  %tmp.99 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata %Command.1* %cmd, metadata !1840, metadata !DIExpression()), !dbg !1841
  %"$ret42.sroa.0" = alloca { i8*, i64 }, align 8
  %"$ret42.sroa.12" = alloca [47 x i8], align 1
  %"$ret42.sroa.14" = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata [47 x i8]* %"$ret42.sroa.12", metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 136, 376)), !dbg !1843
  %tmpv.588 = alloca i8, align 1
  %tmpv.592 = alloca { %Mutex.0* }, align 8
  %sret.actual.107 = alloca { i64*, %error.0 }, align 8
  %tmpv.622 = alloca %Session.1, align 8
  %sret.actual.114 = alloca %Session.1, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1844, metadata !DIExpression()), !dbg !1845
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1846, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1847
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1846, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1847
  %"$ret42.sroa.0.0.sroa_cast91" = bitcast { i8*, i64 }* %"$ret42.sroa.0" to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %"$ret42.sroa.0.0.sroa_cast91")
  %"$ret42.sroa.12.0.sroa_idx89" = getelementptr inbounds [47 x i8], [47 x i8]* %"$ret42.sroa.12", i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 47, i8* nonnull %"$ret42.sroa.12.0.sroa_idx89")
  %"$ret42.sroa.14.0.sroa_cast87" = bitcast { i8*, i64 }* %"$ret42.sroa.14" to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %"$ret42.sroa.14.0.sroa_cast87")
  store i8 0, i8* %tmpv.588, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.0.sroa_idx89", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.300 to i8*), i64 17), i64 47, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.300, i64 0, i32 3) to i8*), i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  %icmp.243 = icmp eq %Srv.0* %s, null, !dbg !1848
  br i1 %icmp.243, label %then.204, label %fallthrough.204

finally.18:                                       ; preds = %then.207, %then.208, %cont.221, %cont.227, %then.221, %else.221, %pad.36, %catchpad.18
  %"$ret42.sroa.16.1" = phi i64 [ 0, %catchpad.18 ], [ ptrtoint ([36 x i8]* @const.314 to i64), %then.207 ], [ ptrtoint ([37 x i8]* @const.317 to i64), %then.208 ], [ %call.146.fca.0.extract, %cont.221 ], [ 0, %pad.36 ], [ %call.149.fca.0.extract, %cont.227 ], [ ptrtoint ([32 x i8]* @const.324 to i64), %then.221 ], [ 0, %else.221 ]
  %"$ret42.sroa.18.1" = phi i64 [ 0, %catchpad.18 ], [ 35, %then.207 ], [ 36, %then.208 ], [ %call.146.fca.1.extract, %cont.221 ], [ 0, %pad.36 ], [ %call.149.fca.1.extract, %cont.227 ], [ 31, %then.221 ], [ 0, %else.221 ]
  %ehtmp.18.sroa.0.0 = phi i8* [ %ex2.18.fca.0.extract, %catchpad.18 ], [ undef, %then.207 ], [ undef, %then.208 ], [ undef, %cont.221 ], [ undef, %pad.36 ], [ undef, %cont.227 ], [ undef, %then.221 ], [ undef, %else.221 ]
  %ehtmp.18.sroa.2.0 = phi i32 [ %ex2.18.fca.1.extract, %catchpad.18 ], [ undef, %then.207 ], [ undef, %then.208 ], [ undef, %cont.221 ], [ undef, %pad.36 ], [ undef, %cont.227 ], [ undef, %then.221 ], [ undef, %else.221 ]
  %finvar.18.0 = phi i8 [ 0, %catchpad.18 ], [ 1, %then.207 ], [ 1, %then.208 ], [ 1, %cont.221 ], [ 1, %pad.36 ], [ 1, %cont.227 ], [ 1, %then.221 ], [ 1, %else.221 ]
  call void @llvm.dbg.value(metadata i64 %"$ret42.sroa.18.1", metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 %"$ret42.sroa.16.1", metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  br label %finish.18

pad.36:                                           ; preds = %fallthrough.220, %fallthrough.219, %fallthrough.218, %fallthrough.217, %fallthrough.216, %cont.226, %then.215, %fallthrough.214, %then.214, %cont.220, %then.211, %fallthrough.210, %fallthrough.205, %fallthrough.204, %then.204
  %ex.36 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.588)
          to label %finally.18 unwind label %catchpad.18, !dbg !1850

then.204:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.204 unwind label %pad.36, !dbg !1848

fallthrough.204:                                  ; preds = %entry, %then.204
  %field.582 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 3, !dbg !1848
  %.field.ld.87 = load %Mutex.0*, %Mutex.0** %field.582, align 8, !dbg !1848
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.87)
          to label %fallthrough.205 unwind label %pad.36, !dbg !1851

fallthrough.205:                                  ; preds = %fallthrough.204
  %0 = bitcast %Mutex.0** %field.582 to i64*, !dbg !1852
  %.field.ld.8892 = load i64, i64* %0, align 8, !dbg !1852
  %cast.2245 = bitcast { %Mutex.0* }* %tmpv.592 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.592 to i64*, !dbg !1853
  store i64 %.field.ld.8892, i64* %1, align 8, !dbg !1853
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.588, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk19 to %__go_descriptor.47*), i8* nonnull %cast.2245)
          to label %fallthrough.206 unwind label %pad.36, !dbg !1853

fallthrough.206:                                  ; preds = %fallthrough.205
  %field.585 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 1, !dbg !1854
  %.field.ld.89 = load %Session.0*, %Session.0** %field.585, align 8, !dbg !1854
  %icmp.246 = icmp eq %Session.0* %.field.ld.89, null, !dbg !1855
  br i1 %icmp.246, label %then.207, label %else.207

then.207:                                         ; preds = %fallthrough.206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i8* align 16 bitcast (%CommandResult.0* @const.315 to i8*), i64 16, i1 false), !dbg !1856
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.0.sroa_idx89", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.315 to i8*), i64 17), i64 47, i1 false), !dbg !1856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.315, i64 0, i32 3) to i8*), i64 16, i1 false), !dbg !1856
  call void @llvm.dbg.value(metadata i64 ptrtoint ([36 x i8]* @const.314 to i64), metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 35, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  br label %finally.18

else.207:                                         ; preds = %fallthrough.206
  %field.587 = getelementptr inbounds %Command.1, %Command.1* %cmd, i64 0, i32 1, i32 1, !dbg !1857
  %cmd.field.field.ld.0 = load i64, i64* %field.587, align 8, !dbg !1857
  %icmp.247 = icmp eq i64 %cmd.field.field.ld.0, 1, !dbg !1858
  br i1 %icmp.247, label %fallthrough.210, label %then.208

then.208:                                         ; preds = %else.207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i8* align 16 bitcast (%CommandResult.0* @const.318 to i8*), i64 16, i1 false), !dbg !1859
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.0.sroa_idx89", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.318 to i8*), i64 17), i64 47, i1 false), !dbg !1859
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.318, i64 0, i32 3) to i8*), i64 16, i1 false), !dbg !1859
  call void @llvm.dbg.value(metadata i64 ptrtoint ([37 x i8]* @const.317 to i64), metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 36, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  br label %finally.18

fallthrough.210:                                  ; preds = %else.207
  %tmpv.596.sroa.0.0.cast.2262.sroa_idx = getelementptr inbounds %Command.1, %Command.1* %cmd, i64 0, i32 1, i32 0
  %2 = bitcast { i8*, i64 }** %tmpv.596.sroa.0.0.cast.2262.sroa_idx to { i64, i64 }**
  %tmpv.596.sroa.0.0.copyload93 = load { i64, i64 }*, { i64, i64 }** %2, align 8
  %field0.146 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %tmpv.596.sroa.0.0.copyload93, i64 0, i32 0, !dbg !1860
  %ld.273 = load i64, i64* %field0.146, align 8, !dbg !1860
  %field1.146 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %tmpv.596.sroa.0.0.copyload93, i64 0, i32 1, !dbg !1860
  %ld.274 = load i64, i64* %field1.146, align 8, !dbg !1860
  invoke void @command_line_arguments.Session.GetMode({ i64*, %error.0 }* nonnull sret %sret.actual.107, i8* nest undef, %Session.0* nonnull %.field.ld.89, i64 %ld.273, i64 %ld.274)
          to label %cont.219 unwind label %pad.36, !dbg !1860

cont.219:                                         ; preds = %fallthrough.210
  %tmpv.595.sroa.0.0.cast.2266.sroa_idx = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.107, i64 0, i32 0, !dbg !1860
  %tmpv.595.sroa.0.0.copyload35 = load i64*, i64** %tmpv.595.sroa.0.0.cast.2266.sroa_idx, align 8, !dbg !1860
  %3 = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.107, i64 0, i32 1, i32 0, !dbg !1860
  %tmpv.595.sroa.3.sroa.0.0.copyload3994 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %3, align 8, !dbg !1860
  call void @llvm.dbg.value(metadata i64* %tmpv.595.sroa.0.0.copyload35, metadata !1861, metadata !DIExpression()), !dbg !1862
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }** %3, metadata !1863, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !1862
  %icmp.251 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.595.sroa.3.sroa.0.0.copyload3994, null, !dbg !1864
  br i1 %icmp.251, label %fallthrough.213, label %then.211

then.211:                                         ; preds = %cont.219
  %tmpv.595.sroa.3.sroa.3.0.tmpv.595.sroa.3.0.cast.2266.sroa_cast.sroa_idx40 = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.107, i64 0, i32 1, i32 1, !dbg !1860
  %tmpv.595.sroa.3.sroa.3.0.copyload4195 = load i8*, i8** %tmpv.595.sroa.3.sroa.3.0.tmpv.595.sroa.3.0.cast.2266.sroa_cast.sroa_idx40, align 8, !dbg !1860
  call void @llvm.dbg.value(metadata i8** %tmpv.595.sroa.3.sroa.3.0.tmpv.595.sroa.3.0.cast.2266.sroa_cast.sroa_idx40, metadata !1863, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1862
  %field.595 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.595.sroa.3.sroa.0.0.copyload3994, i64 0, i32 1, !dbg !1865
  %.field.ld.91 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.595, align 8, !dbg !1865
  %call.145 = invoke { i64, i64 } %.field.ld.91(i8* nest undef, i8* %tmpv.595.sroa.3.sroa.3.0.copyload4195)
          to label %cont.220 unwind label %pad.36, !dbg !1865

cont.220:                                         ; preds = %then.211
  %call.145.fca.0.extract = extractvalue { i64, i64 } %call.145, 0, !dbg !1865
  %call.145.fca.1.extract = extractvalue { i64, i64 } %call.145, 1, !dbg !1865
  %tmpv.602.sroa.0.0.cast.2278.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.99 to i64*, !dbg !1865
  store i64 %call.145.fca.0.extract, i64* %tmpv.602.sroa.0.0.cast.2278.sroa_cast, align 8, !dbg !1865
  %tmpv.602.sroa.2.0.cast.2278.sroa_idx30 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.99, i64 0, i64 0, i32 1, !dbg !1865
  store i64 %call.145.fca.1.extract, i64* %tmpv.602.sroa.2.0.cast.2278.sroa_idx30, align 8, !dbg !1865
  %index.24 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.99, i64 0, i64 1, !dbg !1865
  %cast.2280 = bitcast { i8*, i64 }* %index.24 to i8*, !dbg !1865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2280, i8* align 8 bitcast ({ i8*, i64 }* @const.320 to i8*), i64 16, i1 false), !dbg !1865
  %call.146 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.99)
          to label %cont.221 unwind label %pad.36, !dbg !1865

cont.221:                                         ; preds = %cont.220
  %call.146.fca.0.extract = extractvalue { i64, i64 } %call.146, 0, !dbg !1865
  %call.146.fca.1.extract = extractvalue { i64, i64 } %call.146, 1, !dbg !1865
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i8* align 8 bitcast ({ i8*, i64 }* @const.303 to i8*), i64 16, i1 false), !dbg !1866
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  %"$ret42.sroa.12.24.sroa_idx63" = getelementptr inbounds [47 x i8], [47 x i8]* %"$ret42.sroa.12", i64 0, i64 7, !dbg !1866
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.24.sroa_idx63", i8 0, i64 40, i1 false), !dbg !1866
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i8* align 8 bitcast ({ i8*, i64 }* @const.322 to i8*), i64 16, i1 false), !dbg !1866
  call void @llvm.dbg.value(metadata i64 %call.146.fca.0.extract, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 %call.146.fca.1.extract, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  br label %finally.18

fallthrough.213:                                  ; preds = %cont.219
  %.field.ld.92 = load %Session.0*, %Session.0** %field.585, align 8, !dbg !1867
  %icmp.255 = icmp eq i64* %tmpv.595.sroa.0.0.copyload35, null, !dbg !1868
  br i1 %icmp.255, label %then.214, label %fallthrough.214

then.214:                                         ; preds = %fallthrough.213
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.214 unwind label %pad.36, !dbg !1868

fallthrough.214:                                  ; preds = %fallthrough.213, %then.214
  %.ld.147 = load i64, i64* %tmpv.595.sroa.0.0.copyload35, align 8, !dbg !1868
  %ior.124 = or i64 %.ld.147, 2, !dbg !1869
  %ld.275 = load i64, i64* %field0.146, align 8, !dbg !1870
  %ld.276 = load i64, i64* %field1.146, align 8, !dbg !1870
  %call.147 = invoke { i64, i64 } @command_line_arguments.Session.SetMode(i8* nest undef, %Session.0* %.field.ld.92, i64 %ld.275, i64 %ld.276, i64 %ior.124)
          to label %cont.225 unwind label %pad.36, !dbg !1870

cont.225:                                         ; preds = %fallthrough.214
  %call.147.fca.0.extract = extractvalue { i64, i64 } %call.147, 0, !dbg !1870
  call void @llvm.dbg.value(metadata i64 %call.147.fca.0.extract, metadata !1863, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1862
  %icmp.256 = icmp eq i64 %call.147.fca.0.extract, 0, !dbg !1871
  br i1 %icmp.256, label %fallthrough.216, label %then.215

then.215:                                         ; preds = %cont.225
  %4 = inttoptr i64 %call.147.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !1871
  %call.147.fca.1.extract = extractvalue { i64, i64 } %call.147, 1, !dbg !1870
  call void @llvm.dbg.value(metadata i64 %call.147.fca.1.extract, metadata !1863, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1862
  %field.609 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %4, i64 0, i32 1, !dbg !1872
  %.field.ld.93 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.609, align 8, !dbg !1872
  %5 = inttoptr i64 %call.147.fca.1.extract to i8*, !dbg !1872
  %call.148 = invoke { i64, i64 } %.field.ld.93(i8* nest undef, i8* %5)
          to label %cont.226 unwind label %pad.36, !dbg !1872

cont.226:                                         ; preds = %then.215
  %call.148.fca.0.extract = extractvalue { i64, i64 } %call.148, 0, !dbg !1872
  %call.148.fca.1.extract = extractvalue { i64, i64 } %call.148, 1, !dbg !1872
  %tmpv.614.sroa.0.0.cast.2317.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.100 to i64*, !dbg !1872
  store i64 %call.148.fca.0.extract, i64* %tmpv.614.sroa.0.0.cast.2317.sroa_cast, align 8, !dbg !1872
  %tmpv.614.sroa.2.0.cast.2317.sroa_idx17 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.100, i64 0, i64 0, i32 1, !dbg !1872
  store i64 %call.148.fca.1.extract, i64* %tmpv.614.sroa.2.0.cast.2317.sroa_idx17, align 8, !dbg !1872
  %index.26 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.100, i64 0, i64 1, !dbg !1872
  %cast.2319 = bitcast { i8*, i64 }* %index.26 to i8*, !dbg !1872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2319, i8* align 8 bitcast ({ i8*, i64 }* @const.320 to i8*), i64 16, i1 false), !dbg !1872
  %call.149 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.100)
          to label %cont.227 unwind label %pad.36, !dbg !1872

cont.227:                                         ; preds = %cont.226
  %call.149.fca.0.extract = extractvalue { i64, i64 } %call.149, 0, !dbg !1872
  %call.149.fca.1.extract = extractvalue { i64, i64 } %call.149, 1, !dbg !1872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i8* align 8 bitcast ({ i8*, i64 }* @const.303 to i8*), i64 16, i1 false), !dbg !1873
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  %"$ret42.sroa.12.24.sroa_idx" = getelementptr inbounds [47 x i8], [47 x i8]* %"$ret42.sroa.12", i64 0, i64 7, !dbg !1873
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.24.sroa_idx", i8 0, i64 40, i1 false), !dbg !1873
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i8* align 8 bitcast ({ i8*, i64 }* @const.322 to i8*), i64 16, i1 false), !dbg !1873
  call void @llvm.dbg.value(metadata i64 %call.149.fca.0.extract, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 %call.149.fca.1.extract, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  br label %finally.18

fallthrough.216:                                  ; preds = %cont.225
  %.field.ld.94 = load %Session.0*, %Session.0** %field.585, align 8, !dbg !1874
  %call.150 = invoke { i64, i64 } @command_line_arguments.Session.Warp(i8* nest undef, %Session.0* %.field.ld.94)
          to label %fallthrough.217 unwind label %pad.36, !dbg !1876

fallthrough.217:                                  ; preds = %fallthrough.216
  %call.150.fca.0.extract = extractvalue { i64, i64 } %call.150, 0, !dbg !1876
  %call.150.fca.1.extract = extractvalue { i64, i64 } %call.150, 1, !dbg !1876
  %.field.ld.95 = load %Session.0*, %Session.0** %field.585, align 8, !dbg !1877
  invoke void @command_line_arguments.Session.Session(%Session.1* nonnull sret %sret.actual.114, i8* nest undef, %Session.0* %.field.ld.95)
          to label %fallthrough.218 unwind label %pad.36, !dbg !1878

fallthrough.218:                                  ; preds = %fallthrough.217
  %cast.2345 = bitcast %Session.1* %tmpv.622 to i8*
  %cast.2346 = bitcast %Session.1* %sret.actual.114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2345, i8* nonnull align 8 %cast.2346, i64 48, i1 false)
  %.field.ld.96 = load %Session.0*, %Session.0** %field.585, align 8, !dbg !1879
  %call.151 = invoke { i64, i64 } @command_line_arguments.Session.WindowSize(i8* nest undef, %Session.0* %.field.ld.96)
          to label %fallthrough.219 unwind label %pad.36, !dbg !1880

fallthrough.219:                                  ; preds = %fallthrough.218
  %.field.ld.97 = load %Session.0*, %Session.0** %field.585, align 8, !dbg !1881
  %call.152 = invoke { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.Session.Modes(i8* nest undef, %Session.0* %.field.ld.97)
          to label %fallthrough.220 unwind label %pad.36, !dbg !1882

fallthrough.220:                                  ; preds = %fallthrough.219
  %call.151.fca.1.extract = extractvalue { i64, i64 } %call.151, 1, !dbg !1880
  %call.151.fca.0.extract = extractvalue { i64, i64 } %call.151, 0, !dbg !1880
  %.field.ld.98 = load %Session.0*, %Session.0** %field.585, align 8, !dbg !1883
  %tmpv.620.sroa.0.0.cast.2354.sroa_cast = bitcast %HostUpdate.0* %tmp.101 to i64*, !dbg !1884
  store i64 %call.150.fca.0.extract, i64* %tmpv.620.sroa.0.0.cast.2354.sroa_cast, align 8, !dbg !1884
  %tmpv.620.sroa.2.0.cast.2354.sroa_idx8 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.101, i64 0, i32 0, i32 1, !dbg !1884
  store i64 %call.150.fca.1.extract, i64* %tmpv.620.sroa.2.0.cast.2354.sroa_idx8, align 8, !dbg !1884
  %field.624 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.101, i64 0, i32 1, !dbg !1884
  %cast.2356 = bitcast %Session.1* %field.624 to i8*, !dbg !1884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2356, i8* nonnull align 8 %cast.2345, i64 48, i1 false), !dbg !1884
  %tmpv.624.sroa.0.0.cast.2358.sroa_idx = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.101, i64 0, i32 2, i32 0, !dbg !1884
  store i64 %call.151.fca.0.extract, i64* %tmpv.624.sroa.0.0.cast.2358.sroa_idx, align 8, !dbg !1884
  %tmpv.624.sroa.2.0.cast.2358.sroa_idx6 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.101, i64 0, i32 2, i32 1, !dbg !1884
  store i64 %call.151.fca.1.extract, i64* %tmpv.624.sroa.2.0.cast.2358.sroa_idx6, align 8, !dbg !1884
  %field.626 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.101, i64 0, i32 3, !dbg !1884
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.152, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.626, align 8, !dbg !1884
  %call.153 = invoke { i64, i64 } @command_line_arguments.Session.SendHostUpdate(i8* nest undef, %Session.0* %.field.ld.98, i64 undef, i64 undef, %HostUpdate.0* byval nonnull %tmp.101)
          to label %cont.237 unwind label %pad.36, !dbg !1885

cont.237:                                         ; preds = %fallthrough.220
  %call.153.fca.0.extract = extractvalue { i64, i64 } %call.153, 0, !dbg !1885
  call void @llvm.dbg.value(metadata i64 %call.153.fca.0.extract, metadata !1886, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1887
  %icmp.262 = icmp eq i64 %call.153.fca.0.extract, 0, !dbg !1888
  br i1 %icmp.262, label %else.221, label %then.221

then.221:                                         ; preds = %cont.237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i8* align 16 bitcast (%CommandResult.0* @const.325 to i8*), i64 16, i1 false), !dbg !1889
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.0.sroa_idx89", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.325 to i8*), i64 17), i64 47, i1 false), !dbg !1889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.325, i64 0, i32 3) to i8*), i64 16, i1 false), !dbg !1889
  call void @llvm.dbg.value(metadata i64 ptrtoint ([32 x i8]* @const.324 to i64), metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 31, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  br label %finally.18

else.221:                                         ; preds = %cont.237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i8* align 16 bitcast (%CommandResult.0* @const.326 to i8*), i64 16, i1 false), !dbg !1890
  call void @llvm.dbg.value(metadata i8 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1843
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.0.sroa_idx89", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.326 to i8*), i64 17), i64 47, i1 false), !dbg !1890
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.326, i64 0, i32 3) to i8*), i64 16, i1 false), !dbg !1890
  call void @llvm.dbg.value(metadata i64 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1843
  call void @llvm.dbg.value(metadata i64 0, metadata !1842, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1843
  br label %finally.18

catchpad.18:                                      ; preds = %pad.36
  %ex2.18 = landingpad { i8*, i32 }
          cleanup
  %ex2.18.fca.0.extract = extractvalue { i8*, i32 } %ex2.18, 0
  %ex2.18.fca.1.extract = extractvalue { i8*, i32 } %ex2.18, 1
  br label %finally.18

pad.37:                                           ; preds = %finish.18
  %ex.37 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.588), !dbg !1850
  br label %finish.18

finish.18:                                        ; preds = %pad.37, %finally.18
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.588)
          to label %cont.239 unwind label %pad.37, !dbg !1850

cont.239:                                         ; preds = %finish.18
  %icmp.263 = icmp eq i8 %finvar.18.0, 1
  br i1 %icmp.263, label %finret.18, label %finres.18

finres.18:                                        ; preds = %cont.239
  %excv.18.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.18.sroa.0.0, 0
  %excv.18.fca.1.insert = insertvalue { i8*, i32 } %excv.18.fca.0.insert, i32 %ehtmp.18.sroa.2.0, 1
  resume { i8*, i32 } %excv.18.fca.1.insert

finret.18:                                        ; preds = %cont.239
  %"$ret42.sroa.0.0.cast.2251.sroa_cast" = bitcast %CommandResult.0* %sret.formal.15 to i8*, !dbg !1891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %"$ret42.sroa.0.0.cast.2251.sroa_cast", i8* nonnull align 8 %"$ret42.sroa.0.0.sroa_cast91", i64 16, i1 false), !dbg !1891
  %"$ret42.sroa.10.0.cast.2251.sroa_idx" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.15, i64 0, i32 1, !dbg !1891
  store i8 0, i8* %"$ret42.sroa.10.0.cast.2251.sroa_idx", align 8, !dbg !1891
  %"$ret42.sroa.12.0.cast.2251.sroa_raw_idx" = getelementptr inbounds i8, i8* %"$ret42.sroa.0.0.cast.2251.sroa_cast", i64 17, !dbg !1891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret42.sroa.12.0.cast.2251.sroa_raw_idx", i8* nonnull align 1 %"$ret42.sroa.12.0.sroa_idx89", i64 47, i1 false), !dbg !1891
  %"$ret42.sroa.14.0.cast.2251.sroa_idx" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.15, i64 0, i32 3, !dbg !1891
  %"$ret42.sroa.14.0.cast.2251.sroa_cast" = bitcast %Error.0* %"$ret42.sroa.14.0.cast.2251.sroa_idx" to i8*, !dbg !1891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret42.sroa.14.0.cast.2251.sroa_cast", i8* nonnull align 8 %"$ret42.sroa.14.0.sroa_cast87", i64 16, i1 false), !dbg !1891
  %"$ret42.sroa.16.0.cast.2251.sroa_idx77" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.15, i64 0, i32 3, i32 1, !dbg !1891
  %"$ret42.sroa.16.0.cast.2251.sroa_cast" = bitcast { i8*, i64 }* %"$ret42.sroa.16.0.cast.2251.sroa_idx77" to i64*, !dbg !1891
  store i64 %"$ret42.sroa.16.1", i64* %"$ret42.sroa.16.0.cast.2251.sroa_cast", align 8, !dbg !1891
  %"$ret42.sroa.18.0.cast.2251.sroa_idx84" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.15, i64 0, i32 3, i32 1, i32 1, !dbg !1891
  store i64 %"$ret42.sroa.18.1", i64* %"$ret42.sroa.18.0.cast.2251.sroa_idx84", align 8, !dbg !1891
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %"$ret42.sroa.0.0.sroa_cast91"), !dbg !1891
  call void @llvm.lifetime.end.p0i8(i64 47, i8* nonnull %"$ret42.sroa.12.0.sroa_idx89"), !dbg !1891
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %"$ret42.sroa.14.0.sroa_cast87"), !dbg !1891
  ret void, !dbg !1891
}

define void @command_line_arguments.Srv.executeRevoke(%CommandResult.0* nocapture sret %sret.formal.16, i8* nest nocapture readnone %nest.36, %Srv.0* readonly %s, i64 %ctx.chunk0, i64 %ctx.chunk1, %Command.1* byval nocapture readonly %cmd) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1892 {
entry:
  %tmp.104 = alloca %HostUpdate.0, align 8
  %tmp.103 = alloca [2 x { i8*, i64 }], align 8
  %tmp.102 = alloca [2 x { i8*, i64 }], align 8
  call void @llvm.dbg.declare(metadata %Command.1* %cmd, metadata !1893, metadata !DIExpression()), !dbg !1894
  %"$ret43.sroa.0" = alloca { i8*, i64 }, align 8
  %"$ret43.sroa.11" = alloca [47 x i8], align 1
  %"$ret43.sroa.13" = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata [47 x i8]* %"$ret43.sroa.11", metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 136, 376)), !dbg !1896
  %tmpv.630 = alloca i8, align 1
  %tmpv.634 = alloca { %Mutex.0* }, align 8
  %sret.actual.117 = alloca { i64*, %error.0 }, align 8
  %tmpv.666 = alloca %Session.1, align 8
  %sret.actual.124 = alloca %Session.1, align 8
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1897, metadata !DIExpression()), !dbg !1898
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1899, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1900
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1899, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1900
  %"$ret43.sroa.0.0.sroa_cast99" = bitcast { i8*, i64 }* %"$ret43.sroa.0" to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %"$ret43.sroa.0.0.sroa_cast99")
  %"$ret43.sroa.11.0.sroa_idx97" = getelementptr inbounds [47 x i8], [47 x i8]* %"$ret43.sroa.11", i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 47, i8* nonnull %"$ret43.sroa.11.0.sroa_idx97")
  %"$ret43.sroa.13.0.sroa_cast95" = bitcast { i8*, i64 }* %"$ret43.sroa.13" to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %"$ret43.sroa.13.0.sroa_cast95")
  store i8 0, i8* %tmpv.630, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.0.0.sroa_cast99", i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret43.sroa.11.0.sroa_idx97", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.300 to i8*), i64 17), i64 47, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.13.0.sroa_cast95", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.300, i64 0, i32 3) to i8*), i64 16, i1 false)
  call void @llvm.dbg.value(metadata i64 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i64 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1896
  %icmp.264 = icmp eq %Srv.0* %s, null, !dbg !1901
  br i1 %icmp.264, label %then.222, label %fallthrough.222

finally.19:                                       ; preds = %then.225, %cont.249, %cont.255, %then.239, %else.239, %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %catchpad.19
  %"$ret43.sroa.15.1" = phi i64 [ 0, %catchpad.19 ], [ ptrtoint ([36 x i8]* @const.314 to i64), %then.225 ], [ %call.155.fca.0.extract, %cont.249 ], [ 0, %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %call.158.fca.0.extract, %cont.255 ], [ ptrtoint ([32 x i8]* @const.324 to i64), %then.239 ], [ 0, %else.239 ]
  %"$ret43.sroa.17.1" = phi i64 [ 0, %catchpad.19 ], [ 35, %then.225 ], [ %call.155.fca.1.extract, %cont.249 ], [ 0, %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ %call.158.fca.1.extract, %cont.255 ], [ 31, %then.239 ], [ 0, %else.239 ]
  %ehtmp.19.sroa.0.0 = phi i8* [ %ex2.19.fca.0.extract, %catchpad.19 ], [ undef, %then.225 ], [ undef, %cont.249 ], [ undef, %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.255 ], [ undef, %then.239 ], [ undef, %else.239 ]
  %ehtmp.19.sroa.2.0 = phi i32 [ %ex2.19.fca.1.extract, %catchpad.19 ], [ undef, %then.225 ], [ undef, %cont.249 ], [ undef, %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ undef, %cont.255 ], [ undef, %then.239 ], [ undef, %else.239 ]
  %finvar.19.0 = phi i8 [ 0, %catchpad.19 ], [ 1, %then.225 ], [ 1, %cont.249 ], [ 1, %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ], [ 1, %cont.255 ], [ 1, %then.239 ], [ 1, %else.239 ]
  call void @llvm.dbg.value(metadata i64 %"$ret43.sroa.17.1", metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i64 %"$ret43.sroa.15.1", metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1896
  br label %finish.19

pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %fallthrough.231, %then.231, %then.230, %fallthrough.227, %fallthrough.238, %fallthrough.237, %fallthrough.236, %fallthrough.235, %fallthrough.234, %cont.254, %then.232, %cont.248, %then.228, %fallthrough.223, %fallthrough.222, %then.222
  %lpad.loopexit.split-lp137 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.630)
          to label %finally.19 unwind label %catchpad.19, !dbg !1902

then.222:                                         ; preds = %entry
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.222 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1901

fallthrough.222:                                  ; preds = %entry, %then.222
  %field.628 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 3, !dbg !1901
  %.field.ld.99 = load %Mutex.0*, %Mutex.0** %field.628, align 8, !dbg !1901
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.99)
          to label %fallthrough.223 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1903

fallthrough.223:                                  ; preds = %fallthrough.222
  %0 = bitcast %Mutex.0** %field.628 to i64*, !dbg !1904
  %.field.ld.100100 = load i64, i64* %0, align 8, !dbg !1904
  %cast.2381 = bitcast { %Mutex.0* }* %tmpv.634 to i8*
  %1 = bitcast { %Mutex.0* }* %tmpv.634 to i64*, !dbg !1905
  store i64 %.field.ld.100100, i64* %1, align 8, !dbg !1905
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.630, %__go_descriptor.47* bitcast (i8 (i8*, { %Mutex.0* }*)* @command_line_arguments.command_line_arguments..thunk20 to %__go_descriptor.47*), i8* nonnull %cast.2381)
          to label %fallthrough.224 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1905

fallthrough.224:                                  ; preds = %fallthrough.223
  %field.631 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 1, !dbg !1906
  %.field.ld.101 = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1906
  %icmp.267 = icmp eq %Session.0* %.field.ld.101, null, !dbg !1907
  br i1 %icmp.267, label %then.225, label %else.225

then.225:                                         ; preds = %fallthrough.224
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.0.0.sroa_cast99", i8* align 16 bitcast (%CommandResult.0* @const.327 to i8*), i64 16, i1 false), !dbg !1908
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret43.sroa.11.0.sroa_idx97", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.327 to i8*), i64 17), i64 47, i1 false), !dbg !1908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.13.0.sroa_cast95", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.327, i64 0, i32 3) to i8*), i64 16, i1 false), !dbg !1908
  call void @llvm.dbg.value(metadata i64 ptrtoint ([36 x i8]* @const.314 to i64), metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i64 35, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1896
  br label %finally.19

else.225:                                         ; preds = %fallthrough.224
  %tmpv.637.sroa.0.0.cast.2394.sroa_idx = getelementptr inbounds %Command.1, %Command.1* %cmd, i64 0, i32 1, i32 0
  %tmpv.637.sroa.0.0.copyload = load { i8*, i64 }*, { i8*, i64 }** %tmpv.637.sroa.0.0.cast.2394.sroa_idx, align 8
  %tmpv.637.sroa.2.0.cast.2394.sroa_idx44 = getelementptr inbounds %Command.1, %Command.1* %cmd, i64 0, i32 1, i32 1
  %tmpv.637.sroa.2.0.copyload = load i64, i64* %tmpv.637.sroa.2.0.cast.2394.sroa_idx44, align 8
  %icmp.276112 = icmp sgt i64 %tmpv.637.sroa.2.0.copyload, 0, !dbg !1909
  br i1 %icmp.276112, label %then.233.lr.ph, label %fallthrough.234

then.233.lr.ph:                                   ; preds = %else.225
  %tmpv.644.sroa.0.0.cast.2410.sroa_idx = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.117, i64 0, i32 0
  %2 = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.117, i64 0, i32 1, i32 0
  br label %fallthrough.227

label.0:                                          ; preds = %cont.253
  %icmp.276 = icmp slt i64 %add.5, %tmpv.637.sroa.2.0.copyload, !dbg !1909
  br i1 %icmp.276, label %fallthrough.227, label %fallthrough.234.loopexit

fallthrough.227:                                  ; preds = %then.233.lr.ph, %label.0
  %tmpv.638.0116 = phi i64 [ 0, %then.233.lr.ph ], [ %add.5, %label.0 ]
  %tmpv.656.0114 = phi i64* [ undef, %then.233.lr.ph ], [ %tmpv.656.1107, %label.0 ]
  %tmpv.657.0113 = phi i64* [ undef, %then.233.lr.ph ], [ %tmpv.657.1, %label.0 ]
  %ptroff.12.phi.trans.insert = getelementptr { i8*, i64 }, { i8*, i64 }* %tmpv.637.sroa.0.0.copyload, i64 %tmpv.638.0116
  %tmpv.639.sroa.0.0.cast.2400.sroa_cast.phi.trans.insert = bitcast { i8*, i64 }* %ptroff.12.phi.trans.insert to i64*
  %tmpv.639.sroa.0.0.copyload53.pre = load i64, i64* %tmpv.639.sroa.0.0.cast.2400.sroa_cast.phi.trans.insert, align 8, !dbg !1909
  %tmpv.639.sroa.3.0.cast.2400.sroa_idx54.phi.trans.insert = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.637.sroa.0.0.copyload, i64 %tmpv.638.0116, i32 1
  %tmpv.639.sroa.3.0.copyload55.pre = load i64, i64* %tmpv.639.sroa.3.0.cast.2400.sroa_idx54.phi.trans.insert, align 8, !dbg !1909
  %.field.ld.102.pre = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1911
  call void @llvm.dbg.value(metadata i64 %tmpv.639.sroa.0.0.copyload53.pre, metadata !1913, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1914
  call void @llvm.dbg.value(metadata i64 %tmpv.639.sroa.3.0.copyload55.pre, metadata !1913, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1914
  invoke void @command_line_arguments.Session.GetMode({ i64*, %error.0 }* nonnull sret %sret.actual.117, i8* nest undef, %Session.0* %.field.ld.102.pre, i64 %tmpv.639.sroa.0.0.copyload53.pre, i64 %tmpv.639.sroa.3.0.copyload55.pre)
          to label %cont.247 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1915

cont.247:                                         ; preds = %fallthrough.227
  %tmpv.644.sroa.0.0.copyload27 = load i64*, i64** %tmpv.644.sroa.0.0.cast.2410.sroa_idx, align 8, !dbg !1915
  %tmpv.644.sroa.3.sroa.0.0.copyload33101 = load { %_type.0*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)* }** %2, align 8, !dbg !1915
  call void @llvm.dbg.value(metadata i64* %tmpv.644.sroa.0.0.copyload27, metadata !1916, metadata !DIExpression()), !dbg !1917
  call void @llvm.dbg.value(metadata { %_type.0*, { i64, i64 } (i8*, i8*)* }** %2, metadata !1918, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)), !dbg !1917
  %icmp.271 = icmp eq { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.644.sroa.3.sroa.0.0.copyload33101, null, !dbg !1919
  br i1 %icmp.271, label %fallthrough.229, label %then.228

then.228:                                         ; preds = %cont.247
  %tmpv.644.sroa.3.sroa.3.0.tmpv.644.sroa.3.0.cast.2410.sroa_cast.sroa_idx34 = getelementptr inbounds { i64*, %error.0 }, { i64*, %error.0 }* %sret.actual.117, i64 0, i32 1, i32 1, !dbg !1915
  %tmpv.644.sroa.3.sroa.3.0.copyload35102 = load i8*, i8** %tmpv.644.sroa.3.sroa.3.0.tmpv.644.sroa.3.0.cast.2410.sroa_cast.sroa_idx34, align 8, !dbg !1915
  call void @llvm.dbg.value(metadata i8** %tmpv.644.sroa.3.sroa.3.0.tmpv.644.sroa.3.0.cast.2410.sroa_cast.sroa_idx34, metadata !1918, metadata !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 64, 64)), !dbg !1917
  %field.640 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %tmpv.644.sroa.3.sroa.0.0.copyload33101, i64 0, i32 1, !dbg !1920
  %.field.ld.103 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.640, align 8, !dbg !1920
  %call.154 = invoke { i64, i64 } %.field.ld.103(i8* nest undef, i8* %tmpv.644.sroa.3.sroa.3.0.copyload35102)
          to label %cont.248 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1920

cont.248:                                         ; preds = %then.228
  %call.154.fca.0.extract = extractvalue { i64, i64 } %call.154, 0, !dbg !1920
  %call.154.fca.1.extract = extractvalue { i64, i64 } %call.154, 1, !dbg !1920
  %tmpv.648.sroa.0.0.cast.2422.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.102 to i64*, !dbg !1920
  store i64 %call.154.fca.0.extract, i64* %tmpv.648.sroa.0.0.cast.2422.sroa_cast, align 8, !dbg !1920
  %tmpv.648.sroa.2.0.cast.2422.sroa_idx26 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.102, i64 0, i64 0, i32 1, !dbg !1920
  store i64 %call.154.fca.1.extract, i64* %tmpv.648.sroa.2.0.cast.2422.sroa_idx26, align 8, !dbg !1920
  %index.28 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.102, i64 0, i64 1, !dbg !1920
  %cast.2424 = bitcast { i8*, i64 }* %index.28 to i8*, !dbg !1920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2424, i8* align 8 bitcast ({ i8*, i64 }* @const.320 to i8*), i64 16, i1 false), !dbg !1920
  %call.155 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.102)
          to label %cont.249 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1920

cont.249:                                         ; preds = %cont.248
  %call.155.fca.0.extract = extractvalue { i64, i64 } %call.155, 0, !dbg !1920
  %call.155.fca.1.extract = extractvalue { i64, i64 } %call.155, 1, !dbg !1920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.0.0.sroa_cast99", i8* align 8 bitcast ({ i8*, i64 }* @const.305 to i8*), i64 16, i1 false), !dbg !1921
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1896
  %"$ret43.sroa.11.24.sroa_idx74" = getelementptr inbounds [47 x i8], [47 x i8]* %"$ret43.sroa.11", i64 0, i64 7, !dbg !1921
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"$ret43.sroa.11.24.sroa_idx74", i8 0, i64 40, i1 false), !dbg !1921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.13.0.sroa_cast95", i8* align 8 bitcast ({ i8*, i64 }* @const.322 to i8*), i64 16, i1 false), !dbg !1921
  call void @llvm.dbg.value(metadata i64 %call.155.fca.0.extract, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i64 %call.155.fca.1.extract, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1896
  br label %finally.19

fallthrough.229:                                  ; preds = %cont.247
  %.field.ld.104 = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1922
  %icmp.273 = icmp eq i64* %tmpv.644.sroa.0.0.copyload27, null, !dbg !1923
  br i1 %icmp.273, label %then.230, label %fallthrough.230

then.230:                                         ; preds = %fallthrough.229
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.231 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1923

fallthrough.230:                                  ; preds = %fallthrough.229
  %.ld.162 = load i64, i64* %tmpv.644.sroa.0.0.copyload27, align 8, !dbg !1923
  br label %fallthrough.231

then.231:                                         ; preds = %then.230
  %.ld.162106 = load i64, i64* %tmpv.656.0114, align 8, !dbg !1923
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %then.231.fallthrough.231_crit_edge unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1924

then.231.fallthrough.231_crit_edge:               ; preds = %then.231
  %.ld.161.pre = load i64, i64* %tmpv.657.0113, align 8, !dbg !1924
  br label %fallthrough.231, !dbg !1924

fallthrough.231:                                  ; preds = %then.231.fallthrough.231_crit_edge, %fallthrough.230
  %.ld.161 = phi i64 [ %.ld.161.pre, %then.231.fallthrough.231_crit_edge ], [ %.ld.162, %fallthrough.230 ], !dbg !1924
  %.ld.162109 = phi i64 [ %.ld.162106, %then.231.fallthrough.231_crit_edge ], [ %.ld.162, %fallthrough.230 ]
  %tmpv.656.1107 = phi i64* [ %tmpv.656.0114, %then.231.fallthrough.231_crit_edge ], [ %tmpv.644.sroa.0.0.copyload27, %fallthrough.230 ]
  %tmpv.657.1 = phi i64* [ %tmpv.657.0113, %then.231.fallthrough.231_crit_edge ], [ %tmpv.644.sroa.0.0.copyload27, %fallthrough.230 ]
  %iand.0 = and i64 %.ld.161, 2, !dbg !1925
  %sub.9 = sub i64 %.ld.162109, %iand.0, !dbg !1926
  %call.156 = invoke { i64, i64 } @command_line_arguments.Session.SetMode(i8* nest undef, %Session.0* %.field.ld.104, i64 %tmpv.639.sroa.0.0.copyload53.pre, i64 %tmpv.639.sroa.3.0.copyload55.pre, i64 %sub.9)
          to label %cont.253 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1927

cont.253:                                         ; preds = %fallthrough.231
  %call.156.fca.0.extract = extractvalue { i64, i64 } %call.156, 0, !dbg !1927
  call void @llvm.dbg.value(metadata i64 %call.156.fca.0.extract, metadata !1918, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1917
  %icmp.275 = icmp eq i64 %call.156.fca.0.extract, 0, !dbg !1928
  %add.5 = add nuw nsw i64 %tmpv.638.0116, 1, !dbg !1909
  br i1 %icmp.275, label %label.0, label %then.232

then.232:                                         ; preds = %cont.253
  %3 = inttoptr i64 %call.156.fca.0.extract to { %_type.0*, { i64, i64 } (i8*, i8*)* }*, !dbg !1928
  %call.156.fca.1.extract = extractvalue { i64, i64 } %call.156, 1, !dbg !1927
  call void @llvm.dbg.value(metadata i64 %call.156.fca.1.extract, metadata !1918, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1917
  %field.651 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)* }* %3, i64 0, i32 1, !dbg !1929
  %.field.ld.105 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.651, align 8, !dbg !1929
  %4 = inttoptr i64 %call.156.fca.1.extract to i8*, !dbg !1929
  %call.157 = invoke { i64, i64 } %.field.ld.105(i8* nest undef, i8* %4)
          to label %cont.254 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1929

cont.254:                                         ; preds = %then.232
  %call.157.fca.0.extract = extractvalue { i64, i64 } %call.157, 0, !dbg !1929
  %call.157.fca.1.extract = extractvalue { i64, i64 } %call.157, 1, !dbg !1929
  %tmpv.658.sroa.0.0.cast.2459.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmp.103 to i64*, !dbg !1929
  store i64 %call.157.fca.0.extract, i64* %tmpv.658.sroa.0.0.cast.2459.sroa_cast, align 8, !dbg !1929
  %tmpv.658.sroa.2.0.cast.2459.sroa_idx17 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.103, i64 0, i64 0, i32 1, !dbg !1929
  store i64 %call.157.fca.1.extract, i64* %tmpv.658.sroa.2.0.cast.2459.sroa_idx17, align 8, !dbg !1929
  %index.30 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmp.103, i64 0, i64 1, !dbg !1929
  %cast.2461 = bitcast { i8*, i64 }* %index.30 to i8*, !dbg !1929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2461, i8* align 8 bitcast ({ i8*, i64 }* @const.320 to i8*), i64 16, i1 false), !dbg !1929
  %call.158 = invoke { i64, i64 } @runtime.concatstring2(i8* nest undef, i8* null, [2 x { i8*, i64 }]* byval nonnull %tmp.103)
          to label %cont.255 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1929

cont.255:                                         ; preds = %cont.254
  %call.158.fca.0.extract = extractvalue { i64, i64 } %call.158, 0, !dbg !1929
  %call.158.fca.1.extract = extractvalue { i64, i64 } %call.158, 1, !dbg !1929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.0.0.sroa_cast99", i8* align 8 bitcast ({ i8*, i64 }* @const.305 to i8*), i64 16, i1 false), !dbg !1930
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1896
  %"$ret43.sroa.11.24.sroa_idx" = getelementptr inbounds [47 x i8], [47 x i8]* %"$ret43.sroa.11", i64 0, i64 7, !dbg !1930
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"$ret43.sroa.11.24.sroa_idx", i8 0, i64 40, i1 false), !dbg !1930
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.13.0.sroa_cast95", i8* align 8 bitcast ({ i8*, i64 }* @const.322 to i8*), i64 16, i1 false), !dbg !1930
  call void @llvm.dbg.value(metadata i64 %call.158.fca.0.extract, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i64 %call.158.fca.1.extract, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1896
  br label %finally.19

fallthrough.234.loopexit:                         ; preds = %label.0
  %.field.ld.106.pre = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1931
  br label %fallthrough.234, !dbg !1931

fallthrough.234:                                  ; preds = %fallthrough.234.loopexit, %else.225
  %.field.ld.106 = phi %Session.0* [ %.field.ld.106.pre, %fallthrough.234.loopexit ], [ %.field.ld.101, %else.225 ], !dbg !1931
  %call.159 = invoke { i64, i64 } @command_line_arguments.Session.Warp(i8* nest undef, %Session.0* %.field.ld.106)
          to label %fallthrough.235 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1933

fallthrough.235:                                  ; preds = %fallthrough.234
  %call.159.fca.0.extract = extractvalue { i64, i64 } %call.159, 0, !dbg !1933
  %call.159.fca.1.extract = extractvalue { i64, i64 } %call.159, 1, !dbg !1933
  %.field.ld.107 = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1934
  invoke void @command_line_arguments.Session.Session(%Session.1* nonnull sret %sret.actual.124, i8* nest undef, %Session.0* %.field.ld.107)
          to label %fallthrough.236 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1935

fallthrough.236:                                  ; preds = %fallthrough.235
  %cast.2487 = bitcast %Session.1* %tmpv.666 to i8*
  %cast.2488 = bitcast %Session.1* %sret.actual.124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2487, i8* nonnull align 8 %cast.2488, i64 48, i1 false)
  %.field.ld.108 = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1936
  %call.160 = invoke { i64, i64 } @command_line_arguments.Session.WindowSize(i8* nest undef, %Session.0* %.field.ld.108)
          to label %fallthrough.237 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1937

fallthrough.237:                                  ; preds = %fallthrough.236
  %.field.ld.109 = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1938
  %call.161 = invoke { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* @command_line_arguments.Session.Modes(i8* nest undef, %Session.0* %.field.ld.109)
          to label %fallthrough.238 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1939

fallthrough.238:                                  ; preds = %fallthrough.237
  %call.160.fca.1.extract = extractvalue { i64, i64 } %call.160, 1, !dbg !1937
  %call.160.fca.0.extract = extractvalue { i64, i64 } %call.160, 0, !dbg !1937
  %.field.ld.110 = load %Session.0*, %Session.0** %field.631, align 8, !dbg !1940
  %tmpv.664.sroa.0.0.cast.2496.sroa_cast = bitcast %HostUpdate.0* %tmp.104 to i64*, !dbg !1941
  store i64 %call.159.fca.0.extract, i64* %tmpv.664.sroa.0.0.cast.2496.sroa_cast, align 8, !dbg !1941
  %tmpv.664.sroa.2.0.cast.2496.sroa_idx8 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.104, i64 0, i32 0, i32 1, !dbg !1941
  store i64 %call.159.fca.1.extract, i64* %tmpv.664.sroa.2.0.cast.2496.sroa_idx8, align 8, !dbg !1941
  %field.666 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.104, i64 0, i32 1, !dbg !1941
  %cast.2498 = bitcast %Session.1* %field.666 to i8*, !dbg !1941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2498, i8* nonnull align 8 %cast.2487, i64 48, i1 false), !dbg !1941
  %tmpv.668.sroa.0.0.cast.2500.sroa_idx = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.104, i64 0, i32 2, i32 0, !dbg !1941
  store i64 %call.160.fca.0.extract, i64* %tmpv.668.sroa.0.0.cast.2500.sroa_idx, align 8, !dbg !1941
  %tmpv.668.sroa.2.0.cast.2500.sroa_idx6 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.104, i64 0, i32 2, i32 1, !dbg !1941
  store i64 %call.160.fca.1.extract, i64* %tmpv.668.sroa.2.0.cast.2500.sroa_idx6, align 8, !dbg !1941
  %field.668 = getelementptr inbounds %HostUpdate.0, %HostUpdate.0* %tmp.104, i64 0, i32 3, !dbg !1941
  store { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }* %call.161, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }** %field.668, align 8, !dbg !1941
  %call.162 = invoke { i64, i64 } @command_line_arguments.Session.SendHostUpdate(i8* nest undef, %Session.0* %.field.ld.110, i64 undef, i64 undef, %HostUpdate.0* byval nonnull %tmp.104)
          to label %cont.265 unwind label %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, !dbg !1942

cont.265:                                         ; preds = %fallthrough.238
  %call.162.fca.0.extract = extractvalue { i64, i64 } %call.162, 0, !dbg !1942
  call void @llvm.dbg.value(metadata i64 %call.162.fca.0.extract, metadata !1943, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1944
  %icmp.282 = icmp eq i64 %call.162.fca.0.extract, 0, !dbg !1945
  br i1 %icmp.282, label %else.239, label %then.239

then.239:                                         ; preds = %cont.265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.0.0.sroa_cast99", i8* align 16 bitcast (%CommandResult.0* @const.328 to i8*), i64 16, i1 false), !dbg !1946
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret43.sroa.11.0.sroa_idx97", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.328 to i8*), i64 17), i64 47, i1 false), !dbg !1946
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.13.0.sroa_cast95", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.328, i64 0, i32 3) to i8*), i64 16, i1 false), !dbg !1946
  call void @llvm.dbg.value(metadata i64 ptrtoint ([32 x i8]* @const.324 to i64), metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i64 31, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1896
  br label %finally.19

else.239:                                         ; preds = %cont.265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.0.0.sroa_cast99", i8* align 16 bitcast (%CommandResult.0* @const.329 to i8*), i64 16, i1 false), !dbg !1947
  call void @llvm.dbg.value(metadata i8 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret43.sroa.11.0.sroa_idx97", i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.329 to i8*), i64 17), i64 47, i1 false), !dbg !1947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.13.0.sroa_cast95", i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.329, i64 0, i32 3) to i8*), i64 16, i1 false), !dbg !1947
  call void @llvm.dbg.value(metadata i64 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1896
  call void @llvm.dbg.value(metadata i64 0, metadata !1895, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1896
  br label %finally.19

catchpad.19:                                      ; preds = %pad.38.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
  %ex2.19 = landingpad { i8*, i32 }
          cleanup
  %ex2.19.fca.0.extract = extractvalue { i8*, i32 } %ex2.19, 0
  %ex2.19.fca.1.extract = extractvalue { i8*, i32 } %ex2.19, 1
  br label %finally.19

pad.39:                                           ; preds = %finish.19
  %ex.39 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.630), !dbg !1902
  br label %finish.19

finish.19:                                        ; preds = %pad.39, %finally.19
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.630)
          to label %cont.267 unwind label %pad.39, !dbg !1902

cont.267:                                         ; preds = %finish.19
  %icmp.283 = icmp eq i8 %finvar.19.0, 1
  br i1 %icmp.283, label %finret.19, label %finres.19

finres.19:                                        ; preds = %cont.267
  %excv.19.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.19.sroa.0.0, 0
  %excv.19.fca.1.insert = insertvalue { i8*, i32 } %excv.19.fca.0.insert, i32 %ehtmp.19.sroa.2.0, 1
  resume { i8*, i32 } %excv.19.fca.1.insert

finret.19:                                        ; preds = %cont.267
  %"$ret43.sroa.0.0.cast.2387.sroa_cast" = bitcast %CommandResult.0* %sret.formal.16 to i8*, !dbg !1908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %"$ret43.sroa.0.0.cast.2387.sroa_cast", i8* nonnull align 8 %"$ret43.sroa.0.0.sroa_cast99", i64 16, i1 false), !dbg !1908
  %"$ret43.sroa.9.0.cast.2387.sroa_idx" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.16, i64 0, i32 1, !dbg !1908
  store i8 0, i8* %"$ret43.sroa.9.0.cast.2387.sroa_idx", align 8, !dbg !1908
  %"$ret43.sroa.11.0.cast.2387.sroa_raw_idx" = getelementptr inbounds i8, i8* %"$ret43.sroa.0.0.cast.2387.sroa_cast", i64 17, !dbg !1908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %"$ret43.sroa.11.0.cast.2387.sroa_raw_idx", i8* nonnull align 1 %"$ret43.sroa.11.0.sroa_idx97", i64 47, i1 false), !dbg !1908
  %"$ret43.sroa.13.0.cast.2387.sroa_idx" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.16, i64 0, i32 3, !dbg !1908
  %"$ret43.sroa.13.0.cast.2387.sroa_cast" = bitcast %Error.0* %"$ret43.sroa.13.0.cast.2387.sroa_idx" to i8*, !dbg !1908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %"$ret43.sroa.13.0.cast.2387.sroa_cast", i8* nonnull align 8 %"$ret43.sroa.13.0.sroa_cast95", i64 16, i1 false), !dbg !1908
  %"$ret43.sroa.15.0.cast.2387.sroa_idx86" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.16, i64 0, i32 3, i32 1, !dbg !1908
  %"$ret43.sroa.15.0.cast.2387.sroa_cast" = bitcast { i8*, i64 }* %"$ret43.sroa.15.0.cast.2387.sroa_idx86" to i64*, !dbg !1908
  store i64 %"$ret43.sroa.15.1", i64* %"$ret43.sroa.15.0.cast.2387.sroa_cast", align 8, !dbg !1908
  %"$ret43.sroa.17.0.cast.2387.sroa_idx92" = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.formal.16, i64 0, i32 3, i32 1, i32 1, !dbg !1908
  store i64 %"$ret43.sroa.17.1", i64* %"$ret43.sroa.17.0.cast.2387.sroa_idx92", align 8, !dbg !1908
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %"$ret43.sroa.0.0.sroa_cast99"), !dbg !1908
  call void @llvm.lifetime.end.p0i8(i64 47, i8* nonnull %"$ret43.sroa.11.0.sroa_idx97"), !dbg !1908
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %"$ret43.sroa.13.0.sroa_cast95"), !dbg !1908
  ret void, !dbg !1908
}

; Function Attrs: nounwind
define void @command_line_arguments.Srv.executeState(%CommandResult.0* nocapture sret %sret.formal.14, i8* nest nocapture readnone %nest.34, %Srv.0* nocapture readnone %s, i64 %ctx.chunk0, i64 %ctx.chunk1, %Command.1* byval nocapture readnone %cmd) #5 !dbg !1948 {
entry:
  call void @llvm.dbg.declare(metadata %Command.1* %cmd, metadata !1949, metadata !DIExpression()), !dbg !1950
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1951, metadata !DIExpression()), !dbg !1952
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1953, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1954
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1953, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1954
  %cast.2238 = bitcast %CommandResult.0* %sret.formal.14 to i8*, !dbg !1955
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %cast.2238, i8* align 16 bitcast (%CommandResult.0* @const.312 to i8*), i64 96, i1 false), !dbg !1955
  ret void, !dbg !1955
}

define { i64, i64 } @command_line_arguments.Srv.handle(i8* nest nocapture readnone %nest.33, %Srv.0* readonly %s, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 %conn.chunk0, i64 %conn.chunk1) #0 personality i32 (i32, i32, i64, i8*, i8*)* @__gccgo_personality_v0 !dbg !1956 {
entry:
  %tmp.98 = alloca %IPST.3, align 8
  %tmp.95 = alloca %IPST.3, align 8
  %tmp.93 = alloca %IPST.3, align 8
  %tmpv.556 = alloca i8, align 1
  %result.sroa.0 = alloca { i8*, i64 }, align 8
  %result.sroa.7 = alloca [47 x i8], align 1
  %result.sroa.9 = alloca { i8*, i64 }, align 8
  call void @llvm.dbg.declare(metadata [47 x i8]* %result.sroa.7, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 136, 376)), !dbg !1961
  %tmpv.557 = alloca { %Conn.0 }, align 8
  %tmpv.563 = alloca [1 x %IPST.11], align 8
  %sret.actual.100 = alloca %CommandResult.0, align 8
  %sret.actual.101 = alloca %CommandResult.0, align 8
  %tmpv.571 = alloca { i8*, i64 }, align 8
  %tmpv.573 = alloca { i8*, i64 }, align 8
  %tmpv.574 = alloca [1 x %IPST.11], align 8
  %sret.actual.103 = alloca %State.0, align 8
  %tmpv.583 = alloca %CommandResult.0, align 8
  %tmpv.584 = alloca [1 x %IPST.11], align 8
  call void @llvm.dbg.value(metadata %Srv.0* %s, metadata !1962, metadata !DIExpression()), !dbg !1963
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !1964, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1965
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !1964, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1965
  call void @llvm.dbg.value(metadata i64 %conn.chunk0, metadata !1966, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1967
  call void @llvm.dbg.value(metadata i64 %conn.chunk1, metadata !1966, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1967
  store i8 0, i8* %tmpv.556, align 1
  call void @llvm.dbg.value(metadata i64 0, metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1969
  call void @llvm.dbg.value(metadata i64 0, metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1969
  %result.sroa.0.0.sroa_cast77 = bitcast { i8*, i64 }* %result.sroa.0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %result.sroa.0.0.sroa_cast77)
  %result.sroa.7.0.sroa_idx76 = getelementptr inbounds [47 x i8], [47 x i8]* %result.sroa.7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 47, i8* nonnull %result.sroa.7.0.sroa_idx76)
  %result.sroa.9.0.sroa_cast75 = bitcast { i8*, i64 }* %result.sroa.9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %result.sroa.9.0.sroa_cast75)
  %cast.2101 = bitcast { %Conn.0 }* %tmpv.557 to i8*
  %conn.addr.sroa.0.0.cast.2103.sroa_cast = bitcast { %Conn.0 }* %tmpv.557 to i64*, !dbg !1970
  store i64 %conn.chunk0, i64* %conn.addr.sroa.0.0.cast.2103.sroa_cast, align 8, !dbg !1970
  %conn.addr.sroa.6.0.cast.2103.sroa_idx82 = getelementptr inbounds { %Conn.0 }, { %Conn.0 }* %tmpv.557, i64 0, i32 0, i32 1, !dbg !1970
  %conn.addr.sroa.6.0.cast.2103.sroa_cast = bitcast i8** %conn.addr.sroa.6.0.cast.2103.sroa_idx82 to i64*, !dbg !1970
  store i64 %conn.chunk1, i64* %conn.addr.sroa.6.0.cast.2103.sroa_cast, align 8, !dbg !1970
  invoke void @runtime.deferproc(i8* nest undef, i8* nonnull %tmpv.556, %__go_descriptor.47* bitcast (i8 (i8*, { %Conn.0 }*)* @command_line_arguments.command_line_arguments..thunk18 to %__go_descriptor.47*), i8* nonnull %cast.2101)
          to label %cont.179 unwind label %pad.34, !dbg !1970

finally.17:                                       ; preds = %cont.207, %cont.187, %cont.209, %pad.34, %catchpad.17
  %"$ret40.sroa.0.1" = phi i64 [ 0, %catchpad.17 ], [ %call.135.fca.0.extract, %cont.187 ], [ 0, %pad.34 ], [ %call.144.fca.0.extract, %cont.209 ], [ 0, %cont.207 ]
  %"$ret40.sroa.7.1" = phi i64 [ 0, %catchpad.17 ], [ %call.135.fca.1.extract, %cont.187 ], [ 0, %pad.34 ], [ %call.144.fca.1.extract, %cont.209 ], [ 0, %cont.207 ]
  %ehtmp.17.sroa.0.0 = phi i8* [ %ex2.17.fca.0.extract, %catchpad.17 ], [ undef, %cont.187 ], [ undef, %pad.34 ], [ undef, %cont.209 ], [ undef, %cont.207 ]
  %ehtmp.17.sroa.2.0 = phi i32 [ %ex2.17.fca.1.extract, %catchpad.17 ], [ undef, %cont.187 ], [ undef, %pad.34 ], [ undef, %cont.209 ], [ undef, %cont.207 ]
  %finvar.17.0 = phi i8 [ 0, %catchpad.17 ], [ 1, %cont.187 ], [ 1, %pad.34 ], [ 1, %cont.209 ], [ 1, %cont.207 ]
  call void @llvm.dbg.value(metadata i64 %"$ret40.sroa.7.1", metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1969
  call void @llvm.dbg.value(metadata i64 %"$ret40.sroa.0.1", metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1969
  br label %finish.17

pad.34:                                           ; preds = %cont.208, %else.203, %cont.206, %cont.205, %cont.204, %fallthrough.201, %fallthrough.199, %fallthrough.196, %then.196, %cont.195, %cont.194, %label.3, %else.195, %label.2, %else.194, %label.0, %else.191, %cont.186, %else.192, %cont.184, %cont.183, %cont.182, %fallthrough.190, %cont.180, %fallthrough.189, %entry
  %ex.34 = landingpad { i8*, i32 }
          catch i8* null
  invoke void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.556)
          to label %finally.17 unwind label %catchpad.17, !dbg !1971

cont.179:                                         ; preds = %entry
  %0 = inttoptr i64 %conn.chunk0 to { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, !dbg !1972
  %icmp.224 = icmp eq i64 %conn.chunk0, 0, !dbg !1972
  br i1 %icmp.224, label %fallthrough.189, label %else.189

fallthrough.189:                                  ; preds = %cont.179, %else.189
  %tmpv.559.0 = phi %_type.0* [ %.field.ld.79, %else.189 ], [ null, %cont.179 ]
  %call.128 = invoke i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Reader..d, i64 0, i32 0), %_type.0* %tmpv.559.0)
          to label %cont.180 unwind label %pad.34, !dbg !1972

else.189:                                         ; preds = %cont.179
  %field.528 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %0, i64 0, i32 0, !dbg !1972
  %.field.ld.79 = load %_type.0*, %_type.0** %field.528, align 8, !dbg !1972
  br label %fallthrough.189

cont.180:                                         ; preds = %fallthrough.189
  %1 = ptrtoint i8* %call.128 to i64, !dbg !1972
  %call.129 = invoke %Decoder.0* @encoding_gob.NewDecoder(i8* nest undef, i64 %1, i64 %conn.chunk1)
          to label %cont.181 unwind label %pad.34, !dbg !1973

cont.181:                                         ; preds = %cont.180
  call void @llvm.dbg.value(metadata %Decoder.0* %call.129, metadata !1974, metadata !DIExpression()), !dbg !1975
  br i1 %icmp.224, label %fallthrough.190, label %else.190

fallthrough.190:                                  ; preds = %cont.181, %else.190
  %tmpv.560.0 = phi %_type.0* [ %.field.ld.80, %else.190 ], [ null, %cont.181 ]
  %call.130 = invoke i8* @runtime.requireitab(i8* nest undef, %_type.0* getelementptr inbounds (%InterfaceType.0, %InterfaceType.0* @io.Writer..d, i64 0, i32 0), %_type.0* %tmpv.560.0)
          to label %cont.182 unwind label %pad.34, !dbg !1976

else.190:                                         ; preds = %cont.181
  %field.534 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %0, i64 0, i32 0, !dbg !1976
  %.field.ld.80 = load %_type.0*, %_type.0** %field.534, align 8, !dbg !1976
  br label %fallthrough.190

cont.182:                                         ; preds = %fallthrough.190
  %2 = ptrtoint i8* %call.130 to i64, !dbg !1976
  %call.131 = invoke %Encoder.0* @encoding_gob.NewEncoder(i8* nest undef, i64 %2, i64 %conn.chunk1)
          to label %cont.183 unwind label %pad.34, !dbg !1977

cont.183:                                         ; preds = %cont.182
  call void @llvm.dbg.value(metadata %Encoder.0* %call.131, metadata !1978, metadata !DIExpression()), !dbg !1979
  %call.132 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.Command..d, i64 0, i32 0))
          to label %cont.184 unwind label %pad.34, !dbg !1980

cont.184:                                         ; preds = %cont.183
  %cast.2118 = bitcast i8* %call.132 to %Command.1*, !dbg !1980
  call void @llvm.dbg.value(metadata %Command.1* %cast.2118, metadata !1981, metadata !DIExpression()), !dbg !1983
  %3 = ptrtoint i8* %call.132 to i64, !dbg !1984
  %call.133 = invoke { i64, i64 } @encoding_gob.Decoder.Decode(i8* nest undef, %Decoder.0* %call.129, i64 ptrtoint (%PtrType.0* @type...1github_com_spolu_warp.Command to i64), i64 %3)
          to label %cont.185 unwind label %pad.34, !dbg !1986

cont.185:                                         ; preds = %cont.184
  %call.133.fca.0.extract = extractvalue { i64, i64 } %call.133, 0, !dbg !1986
  call void @llvm.dbg.value(metadata i64 %call.133.fca.0.extract, metadata !1987, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1988
  %icmp.227 = icmp eq i64 %call.133.fca.0.extract, 0, !dbg !1989
  br i1 %icmp.227, label %else.191, label %else.192

else.191:                                         ; preds = %cont.185
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %result.sroa.0.0.sroa_cast77, i8 0, i64 16, i1 false)
  call void @llvm.dbg.value(metadata i8 0, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %result.sroa.7.0.sroa_idx76, i8* align 1 getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.300 to i8*), i64 17), i64 47, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.9.0.sroa_cast75, i8* align 16 bitcast (%Error.0* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.300, i64 0, i32 3) to i8*), i64 16, i1 false)
  %tmpv.567.sroa.0.0.cast.2145.sroa_cast = bitcast i8* %call.132 to i64*
  %tmpv.567.sroa.0.0.copyload = load i64, i64* %tmpv.567.sroa.0.0.cast.2145.sroa_cast, align 8
  %tmpv.567.sroa.4.0.cast.2145.sroa_idx12 = getelementptr inbounds i8, i8* %call.132, i64 8
  %4 = bitcast i8* %tmpv.567.sroa.4.0.cast.2145.sroa_idx12 to i64*
  %tmpv.567.sroa.4.0.copyload = load i64, i64* %4, align 8
  %call.136 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.567.sroa.0.0.copyload, i64 %tmpv.567.sroa.4.0.copyload, i64 ptrtoint ([6 x i8]* @const.208 to i64), i64 5)
          to label %cont.188 unwind label %pad.34, !dbg !1990

else.192:                                         ; preds = %cont.185
  %call.133.fca.1.extract = extractvalue { i64, i64 } %call.133, 1, !dbg !1986
  call void @llvm.dbg.value(metadata i64 %call.133.fca.1.extract, metadata !1987, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1988
  %5 = inttoptr i64 %call.133.fca.0.extract to i64*, !dbg !1991
  %.field.ld.8191 = load i64, i64* %5, align 8, !dbg !1991
  %6 = inttoptr i64 %call.133.fca.1.extract to i8*, !dbg !1992
  %7 = bitcast [1 x %IPST.11]* %tmpv.563 to i64*, !dbg !1992
  store i64 %.field.ld.8191, i64* %7, align 8, !dbg !1992
  %tmp.92.sroa.2.0.cast.2127.sroa_idx87 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.563, i64 0, i64 0, i32 1, !dbg !1992
  store i8* %6, i8** %tmp.92.sroa.2.0.cast.2127.sroa_idx87, align 8, !dbg !1992
  %field.546 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.93, i64 0, i32 0, !dbg !1992
  %cast.2130 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.563, i64 0, i64 0, !dbg !1992
  store %IPST.11* %cast.2130, %IPST.11** %field.546, align 8, !dbg !1992
  %field.547 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.93, i64 0, i32 1, !dbg !1992
  store i64 1, i64* %field.547, align 8, !dbg !1992
  %field.548 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.93, i64 0, i32 2, !dbg !1992
  store i64 1, i64* %field.548, align 8, !dbg !1992
  %call.134 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([30 x i8]* @const.298 to i64), i64 29, %IPST.3* byval nonnull %tmp.93)
          to label %cont.186 unwind label %pad.34, !dbg !1992

cont.186:                                         ; preds = %else.192
  %call.134.fca.0.extract = extractvalue { i64, i64 } %call.134, 0, !dbg !1992
  %call.134.fca.1.extract = extractvalue { i64, i64 } %call.134, 1, !dbg !1992
  %call.135 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.134.fca.0.extract, i64 %call.134.fca.1.extract)
          to label %cont.187 unwind label %pad.34, !dbg !1993

cont.187:                                         ; preds = %cont.186
  %call.135.fca.0.extract = extractvalue { i64, i64 } %call.135, 0, !dbg !1993
  %call.135.fca.1.extract = extractvalue { i64, i64 } %call.135, 1, !dbg !1993
  call void @llvm.dbg.value(metadata i64 %call.135.fca.0.extract, metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1969
  call void @llvm.dbg.value(metadata i64 %call.135.fca.1.extract, metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1969
  br label %finally.17

cont.188:                                         ; preds = %else.191
  %icmp.228 = icmp eq i8 %call.136, 1, !dbg !1990
  br i1 %icmp.228, label %cont.189, label %label.0

label.0:                                          ; preds = %cont.188
  %call.137 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.567.sroa.0.0.copyload, i64 %tmpv.567.sroa.4.0.copyload, i64 ptrtoint ([10 x i8]* @const.302 to i64), i64 9)
          to label %cont.190 unwind label %pad.34, !dbg !1994

cont.189:                                         ; preds = %cont.188
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.0.0.sroa_cast77, i8* nonnull align 16 bitcast (%CommandResult.0* @const.312 to i8*), i64 16, i1 false), !dbg !1995
  call void @llvm.dbg.value(metadata i8 0, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %result.sroa.7.0.sroa_idx76, i8* nonnull align 1 getelementptr inbounds ([47 x i8], [47 x i8]* bitcast (i8* getelementptr inbounds (i8, i8* bitcast (%CommandResult.0* @const.312 to i8*), i64 17) to [47 x i8]*), i64 0, i64 0), i64 47, i1 false), !dbg !1995
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.9.0.sroa_cast75, i8* nonnull align 16 bitcast ({ i8*, i64 }* getelementptr inbounds (%CommandResult.0, %CommandResult.0* @const.312, i64 0, i32 3, i32 0) to i8*), i64 16, i1 false), !dbg !1995
  call void @llvm.dbg.value(metadata i64 0, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1961
  call void @llvm.dbg.value(metadata i64 0, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1961
  br label %label.1

label.1:                                          ; preds = %cont.196, %cont.193, %cont.191, %cont.189
  %result.sroa.6.0 = phi i8 [ 0, %cont.196 ], [ %tmpv.570.sroa.2.0.copyload, %cont.193 ], [ %tmpv.569.sroa.2.0.copyload, %cont.191 ], [ 0, %cont.189 ]
  %result.sroa.10.0 = phi i64 [ %call.140.fca.0.extract, %cont.196 ], [ %tmpv.570.sroa.5.0.copyload, %cont.193 ], [ %tmpv.569.sroa.5.0.copyload, %cont.191 ], [ 0, %cont.189 ], !dbg !1996
  %result.sroa.11.0 = phi i64 [ %call.140.fca.1.extract, %cont.196 ], [ %tmpv.570.sroa.6.0.copyload, %cont.193 ], [ %tmpv.569.sroa.6.0.copyload, %cont.191 ], [ 0, %cont.189 ], !dbg !1996
  call void @llvm.dbg.value(metadata i64 %result.sroa.11.0, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1961
  call void @llvm.dbg.value(metadata i64 %result.sroa.10.0, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1961
  call void @llvm.dbg.value(metadata i8 %result.sroa.6.0, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1961
  %icmp.234 = icmp eq %Srv.0* %s, null, !dbg !1997
  br i1 %icmp.234, label %then.196, label %fallthrough.196

cont.190:                                         ; preds = %label.0
  %icmp.230 = icmp eq i8 %call.137, 1, !dbg !1994
  br i1 %icmp.230, label %else.194, label %label.2

else.194:                                         ; preds = %cont.190
  invoke void @command_line_arguments.Srv.executeAuthorize(%CommandResult.0* nonnull sret %sret.actual.100, i8* nest undef, %Srv.0* %s, i64 undef, i64 undef, %Command.1* byval nonnull %cast.2118)
          to label %cont.191 unwind label %pad.34, !dbg !1998

label.2:                                          ; preds = %cont.190
  %call.138 = invoke i8 @runtime.eqstring(i8* nest undef, i64 %tmpv.567.sroa.0.0.copyload, i64 %tmpv.567.sroa.4.0.copyload, i64 ptrtoint ([7 x i8]* @const.304 to i64), i64 6)
          to label %cont.192 unwind label %pad.34, !dbg !1999

cont.191:                                         ; preds = %else.194
  %tmpv.569.sroa.0.0.cast.2157.sroa_cast = bitcast %CommandResult.0* %sret.actual.100 to i8*
  %result.sroa.095 = bitcast { i8*, i64 }* %result.sroa.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.095, i8* nonnull align 8 %tmpv.569.sroa.0.0.cast.2157.sroa_cast, i64 16, i1 false)
  %tmpv.569.sroa.2.0.cast.2157.sroa_idx = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.100, i64 0, i32 1
  %tmpv.569.sroa.2.0.copyload = load i8, i8* %tmpv.569.sroa.2.0.cast.2157.sroa_idx, align 8
  %tmpv.569.sroa.3.0.cast.2157.sroa_raw_idx = getelementptr inbounds i8, i8* %tmpv.569.sroa.0.0.cast.2157.sroa_cast, i64 17
  %result.sroa.796 = getelementptr inbounds [47 x i8], [47 x i8]* %result.sroa.7, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %result.sroa.796, i8* nonnull align 1 %tmpv.569.sroa.3.0.cast.2157.sroa_raw_idx, i64 47, i1 false)
  %tmpv.569.sroa.4.0.cast.2157.sroa_idx = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.100, i64 0, i32 3
  %tmpv.569.sroa.4.0.cast.2157.sroa_cast = bitcast %Error.0* %tmpv.569.sroa.4.0.cast.2157.sroa_idx to i8*
  %result.sroa.997 = bitcast { i8*, i64 }* %result.sroa.9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.997, i8* nonnull align 8 %tmpv.569.sroa.4.0.cast.2157.sroa_cast, i64 16, i1 false)
  %tmpv.569.sroa.5.0.cast.2157.sroa_idx67 = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.100, i64 0, i32 3, i32 1
  %tmpv.569.sroa.5.0.cast.2157.sroa_cast = bitcast { i8*, i64 }* %tmpv.569.sroa.5.0.cast.2157.sroa_idx67 to i64*
  %tmpv.569.sroa.5.0.copyload = load i64, i64* %tmpv.569.sroa.5.0.cast.2157.sroa_cast, align 8
  %tmpv.569.sroa.6.0.cast.2157.sroa_idx68 = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.100, i64 0, i32 3, i32 1, i32 1
  %tmpv.569.sroa.6.0.copyload = load i64, i64* %tmpv.569.sroa.6.0.cast.2157.sroa_idx68, align 8
  call void @llvm.dbg.value(metadata i8 %tmpv.569.sroa.2.0.copyload, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1961
  call void @llvm.dbg.value(metadata i64 %tmpv.569.sroa.5.0.copyload, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1961
  call void @llvm.dbg.value(metadata i64 %tmpv.569.sroa.6.0.copyload, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1961
  br label %label.1

cont.192:                                         ; preds = %label.2
  %icmp.232 = icmp eq i8 %call.138, 1, !dbg !1999
  br i1 %icmp.232, label %else.195, label %label.3

else.195:                                         ; preds = %cont.192
  invoke void @command_line_arguments.Srv.executeRevoke(%CommandResult.0* nonnull sret %sret.actual.101, i8* nest undef, %Srv.0* %s, i64 undef, i64 undef, %Command.1* byval nonnull %cast.2118)
          to label %cont.193 unwind label %pad.34, !dbg !2000

label.3:                                          ; preds = %cont.192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.9.0.sroa_cast75, i8* align 8 bitcast ({ i8*, i64 }* @const.307 to i8*), i64 16, i1 false), !dbg !2001
  %cast.2169 = bitcast { i8*, i64 }* %tmpv.571 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2169, i8* nonnull align 8 %call.132, i64 16, i1 false)
  %call.139 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @github_com_spolu_warp.CommandType..d)
          to label %cont.194 unwind label %pad.34, !dbg !2002

cont.193:                                         ; preds = %else.195
  %tmpv.570.sroa.0.0.cast.2164.sroa_cast = bitcast %CommandResult.0* %sret.actual.101 to i8*
  %result.sroa.098 = bitcast { i8*, i64 }* %result.sroa.0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.098, i8* nonnull align 8 %tmpv.570.sroa.0.0.cast.2164.sroa_cast, i64 16, i1 false)
  %tmpv.570.sroa.2.0.cast.2164.sroa_idx = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.101, i64 0, i32 1
  %tmpv.570.sroa.2.0.copyload = load i8, i8* %tmpv.570.sroa.2.0.cast.2164.sroa_idx, align 8
  %tmpv.570.sroa.3.0.cast.2164.sroa_raw_idx = getelementptr inbounds i8, i8* %tmpv.570.sroa.0.0.cast.2164.sroa_cast, i64 17
  %result.sroa.799 = getelementptr inbounds [47 x i8], [47 x i8]* %result.sroa.7, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %result.sroa.799, i8* nonnull align 1 %tmpv.570.sroa.3.0.cast.2164.sroa_raw_idx, i64 47, i1 false)
  %tmpv.570.sroa.4.0.cast.2164.sroa_idx = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.101, i64 0, i32 3
  %tmpv.570.sroa.4.0.cast.2164.sroa_cast = bitcast %Error.0* %tmpv.570.sroa.4.0.cast.2164.sroa_idx to i8*
  %result.sroa.9100 = bitcast { i8*, i64 }* %result.sroa.9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.9100, i8* nonnull align 8 %tmpv.570.sroa.4.0.cast.2164.sroa_cast, i64 16, i1 false)
  %tmpv.570.sroa.5.0.cast.2164.sroa_idx61 = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.101, i64 0, i32 3, i32 1
  %tmpv.570.sroa.5.0.cast.2164.sroa_cast = bitcast { i8*, i64 }* %tmpv.570.sroa.5.0.cast.2164.sroa_idx61 to i64*
  %tmpv.570.sroa.5.0.copyload = load i64, i64* %tmpv.570.sroa.5.0.cast.2164.sroa_cast, align 8
  %tmpv.570.sroa.6.0.cast.2164.sroa_idx62 = getelementptr inbounds %CommandResult.0, %CommandResult.0* %sret.actual.101, i64 0, i32 3, i32 1, i32 1
  %tmpv.570.sroa.6.0.copyload = load i64, i64* %tmpv.570.sroa.6.0.cast.2164.sroa_idx62, align 8
  call void @llvm.dbg.value(metadata i8 %tmpv.570.sroa.2.0.copyload, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1961
  call void @llvm.dbg.value(metadata i64 %tmpv.570.sroa.5.0.copyload, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1961
  call void @llvm.dbg.value(metadata i64 %tmpv.570.sroa.6.0.copyload, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1961
  br label %label.1

cont.194:                                         ; preds = %label.3
  %cast.2172 = bitcast { i8*, i64 }* %tmpv.573 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %cast.2172, i8* nonnull align 8 %cast.2169, i64 16, i1 false)
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @github_com_spolu_warp.CommandType..d, i8* %call.139, i8* nonnull %cast.2172)
          to label %cont.195 unwind label %pad.34, !dbg !2002

cont.195:                                         ; preds = %cont.194
  %tmp.94.sroa.0.0.cast.2177.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.574, i64 0, i64 0, i32 0, !dbg !2002
  store %_type.0* @github_com_spolu_warp.CommandType..d, %_type.0** %tmp.94.sroa.0.0.cast.2177.sroa_idx, align 8, !dbg !2002
  %tmp.94.sroa.2.0.cast.2177.sroa_idx88 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.574, i64 0, i64 0, i32 1, !dbg !2002
  store i8* %call.139, i8** %tmp.94.sroa.2.0.cast.2177.sroa_idx88, align 8, !dbg !2002
  %field.556 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.95, i64 0, i32 0, !dbg !2002
  %cast.2180 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.574, i64 0, i64 0, !dbg !2002
  store %IPST.11* %cast.2180, %IPST.11** %field.556, align 8, !dbg !2002
  %field.557 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.95, i64 0, i32 1, !dbg !2002
  store i64 1, i64* %field.557, align 8, !dbg !2002
  %field.558 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.95, i64 0, i32 2, !dbg !2002
  store i64 1, i64* %field.558, align 8, !dbg !2002
  %call.140 = invoke { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([20 x i8]* @const.308 to i64), i64 19, %IPST.3* byval nonnull %tmp.95)
          to label %cont.196 unwind label %pad.34, !dbg !2002

cont.196:                                         ; preds = %cont.195
  %call.140.fca.0.extract = extractvalue { i64, i64 } %call.140, 0, !dbg !2002
  %call.140.fca.1.extract = extractvalue { i64, i64 } %call.140, 1, !dbg !2002
  call void @llvm.dbg.value(metadata i64 %call.140.fca.0.extract, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 640, 64)), !dbg !1961
  call void @llvm.dbg.value(metadata i64 %call.140.fca.1.extract, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 704, 64)), !dbg !1961
  br label %label.1

then.196:                                         ; preds = %label.1
  invoke void @__go_runtime_error(i8* nest undef, i32 6)
          to label %fallthrough.196 unwind label %pad.34, !dbg !1997

fallthrough.196:                                  ; preds = %label.1, %then.196
  %field.561 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 3, !dbg !1997
  %.field.ld.82 = load %Mutex.0*, %Mutex.0** %field.561, align 8, !dbg !1997
  invoke void @sync.Mutex.Lock(i8* nest undef, %Mutex.0* %.field.ld.82)
          to label %fallthrough.197 unwind label %pad.34, !dbg !2003

fallthrough.197:                                  ; preds = %fallthrough.196
  %field.568 = getelementptr inbounds %Srv.0, %Srv.0* %s, i64 0, i32 1, !dbg !2004
  %.field.ld.84 = load %Session.0*, %Session.0** %field.568, align 8, !dbg !2004
  %icmp.238 = icmp eq %Session.0* %.field.ld.84, null, !dbg !2005
  br i1 %icmp.238, label %fallthrough.200, label %fallthrough.199

fallthrough.199:                                  ; preds = %fallthrough.197
  invoke void @command_line_arguments.Session.ProtocolState(%State.0* nonnull sret %sret.actual.103, i8* nest undef, %Session.0* nonnull %.field.ld.84)
          to label %cont.201 unwind label %pad.34, !dbg !2006

cont.201:                                         ; preds = %fallthrough.199
  %cast.2189 = bitcast %State.0* %sret.actual.103 to i8*
  %result.sroa.7.24.sroa_idx = getelementptr inbounds [47 x i8], [47 x i8]* %result.sroa.7, i64 0, i64 7, !dbg !2007
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %result.sroa.7.24.sroa_idx, i8* nonnull align 8 %cast.2189, i64 40, i1 false), !dbg !2007
  br label %fallthrough.201

fallthrough.200:                                  ; preds = %fallthrough.197
  %result.sroa.7.24.cast.2194.sroa_cast = bitcast %Srv.0* %s to i8*, !dbg !2008
  %result.sroa.7.24.sroa_idx35 = getelementptr inbounds [47 x i8], [47 x i8]* %result.sroa.7, i64 0, i64 7, !dbg !2008
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %result.sroa.7.24.sroa_idx35, i8* align 8 %result.sroa.7.24.cast.2194.sroa_cast, i64 16, i1 false), !dbg !2008
  call void @llvm.dbg.value(metadata i8 1, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1961
  br label %fallthrough.201

fallthrough.201:                                  ; preds = %cont.201, %fallthrough.200
  %result.sroa.6.1 = phi i8 [ %result.sroa.6.0, %cont.201 ], [ 1, %fallthrough.200 ]
  call void @llvm.dbg.value(metadata i8 %result.sroa.6.1, metadata !1959, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 8)), !dbg !1961
  %.field.ld.85 = load %Mutex.0*, %Mutex.0** %field.561, align 8, !dbg !2009
  invoke void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.85)
          to label %cont.204 unwind label %pad.34, !dbg !2010

cont.204:                                         ; preds = %fallthrough.201
  %call.141 = invoke i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.CommandResult..d, i64 0, i32 0))
          to label %cont.205 unwind label %pad.34, !dbg !2011

cont.205:                                         ; preds = %cont.204
  %result.sroa.0.0.cast.2200.sroa_cast = bitcast %CommandResult.0* %tmpv.583 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.0.0.cast.2200.sroa_cast, i8* nonnull align 8 %result.sroa.0.0.sroa_cast77, i64 16, i1 false)
  %result.sroa.6.0.cast.2200.sroa_idx = getelementptr inbounds %CommandResult.0, %CommandResult.0* %tmpv.583, i64 0, i32 1
  store i8 %result.sroa.6.1, i8* %result.sroa.6.0.cast.2200.sroa_idx, align 8
  %result.sroa.7.0.cast.2200.sroa_raw_idx = getelementptr inbounds i8, i8* %result.sroa.0.0.cast.2200.sroa_cast, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %result.sroa.7.0.cast.2200.sroa_raw_idx, i8* nonnull align 1 %result.sroa.7.0.sroa_idx76, i64 47, i1 false)
  %result.sroa.9.0.cast.2200.sroa_idx = getelementptr inbounds %CommandResult.0, %CommandResult.0* %tmpv.583, i64 0, i32 3
  %result.sroa.9.0.cast.2200.sroa_cast = bitcast %Error.0* %result.sroa.9.0.cast.2200.sroa_idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %result.sroa.9.0.cast.2200.sroa_cast, i8* nonnull align 8 %result.sroa.9.0.sroa_cast75, i64 16, i1 false)
  %result.sroa.10.0.cast.2200.sroa_idx47 = getelementptr inbounds %CommandResult.0, %CommandResult.0* %tmpv.583, i64 0, i32 3, i32 1
  %result.sroa.10.0.cast.2200.sroa_cast = bitcast { i8*, i64 }* %result.sroa.10.0.cast.2200.sroa_idx47 to i64*
  store i64 %result.sroa.10.0, i64* %result.sroa.10.0.cast.2200.sroa_cast, align 8
  %result.sroa.11.0.cast.2200.sroa_idx55 = getelementptr inbounds %CommandResult.0, %CommandResult.0* %tmpv.583, i64 0, i32 3, i32 1, i32 1
  store i64 %result.sroa.11.0, i64* %result.sroa.11.0.cast.2200.sroa_idx55, align 8
  invoke void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @github_com_spolu_warp.CommandResult..d, i64 0, i32 0), i8* %call.141, i8* nonnull %result.sroa.0.0.cast.2200.sroa_cast)
          to label %cont.206 unwind label %pad.34, !dbg !2011

cont.206:                                         ; preds = %cont.205
  %8 = ptrtoint i8* %call.141 to i64, !dbg !2011
  %call.142 = invoke { i64, i64 } @encoding_gob.Encoder.Encode(i8* nest undef, %Encoder.0* %call.131, i64 ptrtoint (%StructType.0* @github_com_spolu_warp.CommandResult..d to i64), i64 %8)
          to label %cont.207 unwind label %pad.34, !dbg !2013

cont.207:                                         ; preds = %cont.206
  %call.142.fca.0.extract = extractvalue { i64, i64 } %call.142, 0, !dbg !2013
  call void @llvm.dbg.value(metadata i64 %call.142.fca.0.extract, metadata !2014, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2015
  %icmp.241 = icmp eq i64 %call.142.fca.0.extract, 0, !dbg !2016
  br i1 %icmp.241, label %finally.17, label %else.203

else.203:                                         ; preds = %cont.207
  %call.142.fca.1.extract = extractvalue { i64, i64 } %call.142, 1, !dbg !2013
  call void @llvm.dbg.value(metadata i64 %call.142.fca.1.extract, metadata !2014, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2015
  %9 = inttoptr i64 %call.142.fca.0.extract to i64*, !dbg !2017
  %.field.ld.8690 = load i64, i64* %9, align 8, !dbg !2017
  %10 = inttoptr i64 %call.142.fca.1.extract to i8*, !dbg !2018
  %11 = bitcast [1 x %IPST.11]* %tmpv.584 to i64*, !dbg !2018
  store i64 %.field.ld.8690, i64* %11, align 8, !dbg !2018
  %tmp.97.sroa.2.0.cast.2213.sroa_idx89 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.584, i64 0, i64 0, i32 1, !dbg !2018
  store i8* %10, i8** %tmp.97.sroa.2.0.cast.2213.sroa_idx89, align 8, !dbg !2018
  %field.578 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 0, !dbg !2018
  %cast.2216 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.584, i64 0, i64 0, !dbg !2018
  store %IPST.11* %cast.2216, %IPST.11** %field.578, align 8, !dbg !2018
  %field.579 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 1, !dbg !2018
  store i64 1, i64* %field.579, align 8, !dbg !2018
  %field.580 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.98, i64 0, i32 2, !dbg !2018
  store i64 1, i64* %field.580, align 8, !dbg !2018
  %call.143 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Newf(i8* nest undef, i64 ptrtoint ([34 x i8]* @const.310 to i64), i64 33, %IPST.3* byval nonnull %tmp.98)
          to label %cont.208 unwind label %pad.34, !dbg !2018

cont.208:                                         ; preds = %else.203
  %call.143.fca.0.extract = extractvalue { i64, i64 } %call.143, 0, !dbg !2018
  %call.143.fca.1.extract = extractvalue { i64, i64 } %call.143, 1, !dbg !2018
  %call.144 = invoke { i64, i64 } @github_com_spolu_warp_lib_errors.Trace(i8* nest undef, i64 %call.143.fca.0.extract, i64 %call.143.fca.1.extract)
          to label %cont.209 unwind label %pad.34, !dbg !2019

cont.209:                                         ; preds = %cont.208
  %call.144.fca.0.extract = extractvalue { i64, i64 } %call.144, 0, !dbg !2019
  %call.144.fca.1.extract = extractvalue { i64, i64 } %call.144, 1, !dbg !2019
  call void @llvm.dbg.value(metadata i64 %call.144.fca.0.extract, metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !1969
  call void @llvm.dbg.value(metadata i64 %call.144.fca.1.extract, metadata !1968, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !1969
  br label %finally.17

catchpad.17:                                      ; preds = %pad.34
  %ex2.17 = landingpad { i8*, i32 }
          cleanup
  %ex2.17.fca.0.extract = extractvalue { i8*, i32 } %ex2.17, 0
  %ex2.17.fca.1.extract = extractvalue { i8*, i32 } %ex2.17, 1
  br label %finally.17

pad.35:                                           ; preds = %finish.17
  %ex.35 = landingpad { i8*, i32 }
          catch i8* null
  call void @runtime.checkdefer(i8* nest undef, i8* nonnull %tmpv.556), !dbg !1971
  br label %finish.17

finish.17:                                        ; preds = %pad.35, %finally.17
  invoke void @runtime.deferreturn(i8* nest undef, i8* nonnull %tmpv.556)
          to label %cont.211 unwind label %pad.35, !dbg !1971

cont.211:                                         ; preds = %finish.17
  %icmp.242 = icmp eq i8 %finvar.17.0, 1
  br i1 %icmp.242, label %finret.17, label %finres.17

finres.17:                                        ; preds = %cont.211
  %excv.17.fca.0.insert = insertvalue { i8*, i32 } undef, i8* %ehtmp.17.sroa.0.0, 0
  %excv.17.fca.1.insert = insertvalue { i8*, i32 } %excv.17.fca.0.insert, i32 %ehtmp.17.sroa.2.0, 1
  resume { i8*, i32 } %excv.17.fca.1.insert

finret.17:                                        ; preds = %cont.211
  %ld.243.fca.0.insert = insertvalue { i64, i64 } undef, i64 %"$ret40.sroa.0.1", 0, !dbg !2020
  %ld.243.fca.1.insert = insertvalue { i64, i64 } %ld.243.fca.0.insert, i64 %"$ret40.sroa.7.1", 1, !dbg !2020
  ret { i64, i64 } %ld.243.fca.1.insert, !dbg !2020
}

define %Srv.0* @command_line_arguments.NewSrv(i8* nest nocapture readnone %nest.29, i64 %ctx.chunk0, i64 %ctx.chunk1, i64 %warp.chunk0, i64 %warp.chunk1) #0 !dbg !2021 {
entry:
  %tmp.88 = alloca %IPST.2, align 8
  %tmp.87 = alloca %IPST.3, align 8
  %tmpv.509 = alloca { i8*, i64 }, align 8
  %tmpv.510 = alloca [1 x %IPST.11], align 8
  %tmpv.512 = alloca [2 x { i8*, i64 }], align 8
  %tmpv.518 = alloca %Srv.0, align 8
  call void @llvm.dbg.value(metadata i64 %ctx.chunk0, metadata !2024, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2025
  call void @llvm.dbg.value(metadata i64 %ctx.chunk1, metadata !2024, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2025
  call void @llvm.dbg.value(metadata i64 %warp.chunk0, metadata !2026, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 64)), !dbg !2027
  call void @llvm.dbg.value(metadata i64 %warp.chunk1, metadata !2026, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 64)), !dbg !2027
  call void @llvm.dbg.value(metadata %Srv.0* null, metadata !2028, metadata !DIExpression()), !dbg !2029
  %call.114 = call { i64, i64 } @os.TempDir(i8* nest undef), !dbg !2030
  %call.114.fca.0.extract = extractvalue { i64, i64 } %call.114, 0, !dbg !2030
  %call.114.fca.1.extract = extractvalue { i64, i64 } %call.114, 1, !dbg !2030
  %call.115 = call i8* @runtime.newobject(i8* nest undef, %_type.0* nonnull @string..d), !dbg !2031
  %warp.addr.sroa.0.0.cast.1961.sroa_cast = bitcast { i8*, i64 }* %tmpv.509 to i64*
  store i64 %warp.chunk0, i64* %warp.addr.sroa.0.0.cast.1961.sroa_cast, align 8
  %warp.addr.sroa.3.0.cast.1961.sroa_idx11 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %tmpv.509, i64 0, i32 1
  store i64 %warp.chunk1, i64* %warp.addr.sroa.3.0.cast.1961.sroa_idx11, align 8
  %cast.1964 = bitcast { i8*, i64 }* %tmpv.509 to i8*, !dbg !2031
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* nonnull @string..d, i8* %call.115, i8* nonnull %cast.1964), !dbg !2031
  %tmp.86.sroa.0.0.cast.1966.sroa_idx = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.510, i64 0, i64 0, i32 0, !dbg !2031
  store %_type.0* @string..d, %_type.0** %tmp.86.sroa.0.0.cast.1966.sroa_idx, align 8, !dbg !2031
  %tmp.86.sroa.2.0.cast.1966.sroa_idx14 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.510, i64 0, i64 0, i32 1, !dbg !2031
  store i8* %call.115, i8** %tmp.86.sroa.2.0.cast.1966.sroa_idx14, align 8, !dbg !2031
  %field.491 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.87, i64 0, i32 0, !dbg !2031
  %cast.1969 = getelementptr inbounds [1 x %IPST.11], [1 x %IPST.11]* %tmpv.510, i64 0, i64 0, !dbg !2031
  store %IPST.11* %cast.1969, %IPST.11** %field.491, align 8, !dbg !2031
  %field.492 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.87, i64 0, i32 1, !dbg !2031
  store i64 1, i64* %field.492, align 8, !dbg !2031
  %field.493 = getelementptr inbounds %IPST.3, %IPST.3* %tmp.87, i64 0, i32 2, !dbg !2031
  store i64 1, i64* %field.493, align 8, !dbg !2031
  %call.116 = call { i64, i64 } @fmt.Sprintf(i8* nest undef, i64 ptrtoint ([14 x i8]* @const.108 to i64), i64 13, %IPST.3* byval nonnull %tmp.87), !dbg !2031
  %call.116.fca.0.extract = extractvalue { i64, i64 } %call.116, 0, !dbg !2031
  %call.116.fca.1.extract = extractvalue { i64, i64 } %call.116, 1, !dbg !2031
  %tmpv.507.sroa.0.0.cast.1973.sroa_cast = bitcast [2 x { i8*, i64 }]* %tmpv.512 to i64*, !dbg !2032
  store i64 %call.114.fca.0.extract, i64* %tmpv.507.sroa.0.0.cast.1973.sroa_cast, align 8, !dbg !2032
  %tmpv.507.sroa.2.0.cast.1973.sroa_idx8 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.512, i64 0, i64 0, i32 1, !dbg !2032
  store i64 %call.114.fca.1.extract, i64* %tmpv.507.sroa.2.0.cast.1973.sroa_idx8, align 8, !dbg !2032
  %tmpv.511.sroa.0.0.cast.1975.sroa_idx = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.512, i64 0, i64 1, !dbg !2032
  %tmpv.511.sroa.0.0.cast.1975.sroa_cast = bitcast { i8*, i64 }* %tmpv.511.sroa.0.0.cast.1975.sroa_idx to i64*, !dbg !2032
  store i64 %call.116.fca.0.extract, i64* %tmpv.511.sroa.0.0.cast.1975.sroa_cast, align 8, !dbg !2032
  %tmpv.511.sroa.2.0.cast.1975.sroa_idx6 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.512, i64 0, i64 1, i32 1, !dbg !2032
  store i64 %call.116.fca.1.extract, i64* %tmpv.511.sroa.2.0.cast.1975.sroa_idx6, align 8, !dbg !2032
  %field.494 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.88, i64 0, i32 0, !dbg !2032
  %cast.1977 = getelementptr inbounds [2 x { i8*, i64 }], [2 x { i8*, i64 }]* %tmpv.512, i64 0, i64 0, !dbg !2032
  store { i8*, i64 }* %cast.1977, { i8*, i64 }** %field.494, align 8, !dbg !2032
  %field.495 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.88, i64 0, i32 1, !dbg !2032
  store i64 2, i64* %field.495, align 8, !dbg !2032
  %field.496 = getelementptr inbounds %IPST.2, %IPST.2* %tmp.88, i64 0, i32 2, !dbg !2032
  store i64 2, i64* %field.496, align 8, !dbg !2032
  %call.117 = call { i64, i64 } @path.Join(i8* nest undef, %IPST.2* byval nonnull %tmp.88), !dbg !2032
  %call.117.fca.0.extract = extractvalue { i64, i64 } %call.117, 0, !dbg !2032
  %call.117.fca.1.extract = extractvalue { i64, i64 } %call.117, 1, !dbg !2032
  %call.118 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @sync.Mutex..d, i64 0, i32 0)), !dbg !2033
  %0 = bitcast i8* %call.118 to i64*, !dbg !2033
  store i64 0, i64* %0, align 4, !dbg !2033
  %call.119 = call i8* @runtime.newobject(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Srv..d, i64 0, i32 0)), !dbg !2034
  %cast.1987 = bitcast i8* %call.119 to %Srv.0*, !dbg !2034
  %warp.addr.sroa.0.0.cast.1989.sroa_cast = bitcast %Srv.0* %tmpv.518 to i64*, !dbg !2035
  store i64 %warp.chunk0, i64* %warp.addr.sroa.0.0.cast.1989.sroa_cast, align 8, !dbg !2035
  %warp.addr.sroa.3.0.cast.1989.sroa_idx12 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.518, i64 0, i32 0, i32 1, !dbg !2035
  store i64 %warp.chunk1, i64* %warp.addr.sroa.3.0.cast.1989.sroa_idx12, align 8, !dbg !2035
  %field.498 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.518, i64 0, i32 1, !dbg !2035
  store %Session.0* null, %Session.0** %field.498, align 8, !dbg !2035
  %tmpv.513.sroa.0.0.cast.1991.sroa_idx = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.518, i64 0, i32 2, !dbg !2035
  %tmpv.513.sroa.0.0.cast.1991.sroa_cast = bitcast { i8*, i64 }* %tmpv.513.sroa.0.0.cast.1991.sroa_idx to i64*, !dbg !2035
  store i64 %call.117.fca.0.extract, i64* %tmpv.513.sroa.0.0.cast.1991.sroa_cast, align 8, !dbg !2035
  %tmpv.513.sroa.2.0.cast.1991.sroa_idx4 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.518, i64 0, i32 2, i32 1, !dbg !2035
  store i64 %call.117.fca.1.extract, i64* %tmpv.513.sroa.2.0.cast.1991.sroa_idx4, align 8, !dbg !2035
  %field.500 = getelementptr inbounds %Srv.0, %Srv.0* %tmpv.518, i64 0, i32 3, !dbg !2035
  %1 = bitcast %Mutex.0** %field.500 to i8**, !dbg !2035
  store i8* %call.118, i8** %1, align 8, !dbg !2035
  %cast.1995 = bitcast %Srv.0* %tmpv.518 to i8*, !dbg !2034
  call void @runtime.typedmemmove(i8* nest undef, %_type.0* getelementptr inbounds (%StructType.0, %StructType.0* @command_line_arguments.Srv..d, i64 0, i32 0), i8* %call.119, i8* nonnull %cast.1995), !dbg !2034
  call void @llvm.dbg.value(metadata %Srv.0* %cast.1987, metadata !2028, metadata !DIExpression()), !dbg !2029
  ret %Srv.0* %cast.1987, !dbg !2036
}

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk15(i8* nest nocapture readnone %nest.61, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2037 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !2038, metadata !DIExpression()), !dbg !2039
  call void @llvm.dbg.value(metadata i8 0, metadata !2040, metadata !DIExpression()), !dbg !2039
  %call.219 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk15, %label.0)), !dbg !2039
  %0 = and i8 %call.219, 1, !dbg !2039
  %trunc.314 = icmp eq i8 %0, 0, !dbg !2039
  br i1 %trunc.314, label %else.310, label %label.0

else.310:                                         ; preds = %entry
  %field.827 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2039
  %.field.ld.142 = load %Mutex.0*, %Mutex.0** %field.827, align 8, !dbg !2039
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.142), !dbg !2039
  br label %label.0

label.0:                                          ; preds = %entry, %else.310
  call void @llvm.dbg.value(metadata i8 0, metadata !2040, metadata !DIExpression()), !dbg !2039
  ret i8 0, !dbg !2039
}

declare { i64, i64 } @syscall.Unlink(i8*, i64, i64) local_unnamed_addr #0

declare void @net.Listen({ %Listener.0, %error.0 }*, i8*, i64, i64, i64, i64) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk16(i8* nest nocapture readnone %nest.62, { %Listener.0 }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2041 {
entry:
  call void @llvm.dbg.value(metadata { %Listener.0 }* %__go_thunk_parameter, metadata !2048, metadata !DIExpression()), !dbg !2049
  call void @llvm.dbg.value(metadata i8 0, metadata !2050, metadata !DIExpression()), !dbg !2049
  %call.220 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk16, %label.0)), !dbg !2049
  %0 = and i8 %call.220, 1, !dbg !2049
  %trunc.315 = icmp eq i8 %0, 0, !dbg !2049
  br i1 %trunc.315, label %else.311, label %label.0

else.311:                                         ; preds = %entry
  %tmpv.852.sroa.0.0.cast.3062.sroa_idx = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 0
  %tmpv.852.sroa.0.0.copyload = load { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }*, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }** %tmpv.852.sroa.0.0.cast.3062.sroa_idx, align 8
  %tmpv.852.sroa.2.0.cast.3062.sroa_idx1 = getelementptr inbounds { %Listener.0 }, { %Listener.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 1
  %tmpv.852.sroa.2.0.copyload = load i8*, i8** %tmpv.852.sroa.2.0.cast.3062.sroa_idx1, align 8
  %field.830 = getelementptr inbounds { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }, { %_type.0*, void ({ %Conn.0, %error.0 }*, i8*, i8*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)* }* %tmpv.852.sroa.0.0.copyload, i64 0, i32 3, !dbg !2049
  %.field.ld.143 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.830, align 8, !dbg !2049
  %call.221 = call { i64, i64 } %.field.ld.143(i8* nest undef, i8* %tmpv.852.sroa.2.0.copyload), !dbg !2049
  br label %label.0

label.0:                                          ; preds = %entry, %else.311
  call void @llvm.dbg.value(metadata i8 0, metadata !2050, metadata !DIExpression()), !dbg !2049
  ret i8 0, !dbg !2049
}

define internal void @command_line_arguments..1command_line_arguments.Srv.Run..func1(i8* nest nocapture readonly %"$closure") #0 !dbg !2051 {
entry:
  %field.522 = getelementptr inbounds i8, i8* %"$closure", i64 8, !dbg !2052
  %0 = bitcast i8* %field.522 to %Srv.0***, !dbg !2052
  %.field.ld.76 = load %Srv.0**, %Srv.0*** %0, align 8, !dbg !2052
  %.ld.133 = load %Srv.0*, %Srv.0** %.field.ld.76, align 8, !dbg !2052
  %field.524 = getelementptr inbounds i8, i8* %"$closure", i64 24, !dbg !2053
  %1 = bitcast i8* %field.524 to { i64, i64 }**, !dbg !2053
  %.field.ld.782 = load { i64, i64 }*, { i64, i64 }** %1, align 8, !dbg !2053
  %field0.124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.782, i64 0, i32 0, !dbg !2054
  %ld.231 = load i64, i64* %field0.124, align 8, !dbg !2054
  %field1.124 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %.field.ld.782, i64 0, i32 1, !dbg !2054
  %ld.232 = load i64, i64* %field1.124, align 8, !dbg !2054
  %call.127 = call { i64, i64 } @command_line_arguments.Srv.handle(i8* nest undef, %Srv.0* %.ld.133, i64 undef, i64 undef, i64 %ld.231, i64 %ld.232), !dbg !2054
  ret void
}

define internal void @command_line_arguments.command_line_arguments..thunk17(i8* nest nocapture readnone %nest.63, { %__go_descriptor.16* }* nocapture readonly %__go_thunk_parameter) #0 !dbg !2055 {
entry:
  call void @llvm.dbg.value(metadata { %__go_descriptor.16* }* %__go_thunk_parameter, metadata !2062, metadata !DIExpression()), !dbg !2063
  %field.832 = getelementptr inbounds { %__go_descriptor.16* }, { %__go_descriptor.16* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2063
  %.field.ld.144 = load %__go_descriptor.16*, %__go_descriptor.16** %field.832, align 8, !dbg !2063
  %0 = getelementptr inbounds %__go_descriptor.16, %__go_descriptor.16* %.field.ld.144, i64 0, i32 0, !dbg !2063
  %deref.ld.51 = load void (i8*)*, void (i8*)** %0, align 8, !dbg !2063
  %cast.3066 = bitcast %__go_descriptor.16* %.field.ld.144 to i8*, !dbg !2063
  call void %deref.ld.51(i8* nest %cast.3066), !dbg !2063
  ret void
}

declare void @__go_go(i8*, %__go_descriptor.47*, i8*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk18(i8* nest nocapture readnone %nest.64, { %Conn.0 }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2064 {
entry:
  call void @llvm.dbg.value(metadata { %Conn.0 }* %__go_thunk_parameter, metadata !2065, metadata !DIExpression()), !dbg !2066
  call void @llvm.dbg.value(metadata i8 0, metadata !2067, metadata !DIExpression()), !dbg !2066
  %call.222 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk18, %label.0)), !dbg !2066
  %0 = and i8 %call.222, 1, !dbg !2066
  %trunc.316 = icmp eq i8 %0, 0, !dbg !2066
  br i1 %trunc.316, label %else.312, label %label.0

else.312:                                         ; preds = %entry
  %tmpv.853.sroa.0.0.cast.3068.sroa_idx = getelementptr inbounds { %Conn.0 }, { %Conn.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 0
  %tmpv.853.sroa.0.0.copyload = load { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }*, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }** %tmpv.853.sroa.0.0.cast.3068.sroa_idx, align 8
  %tmpv.853.sroa.2.0.cast.3068.sroa_idx1 = getelementptr inbounds { %Conn.0 }, { %Conn.0 }* %__go_thunk_parameter, i64 0, i32 0, i32 1
  %tmpv.853.sroa.2.0.copyload = load i8*, i8** %tmpv.853.sroa.2.0.cast.3068.sroa_idx1, align 8
  %field.836 = getelementptr inbounds { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }, { %_type.0*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)*, { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, { i64, i64 } (i8*, i8*, %Time.0*)*, void ({ i64, %error.0 }*, i8*, i8*, { i8*, i64, i64 }*)* }* %tmpv.853.sroa.0.0.copyload, i64 0, i32 1, !dbg !2066
  %.field.ld.146 = load { i64, i64 } (i8*, i8*)*, { i64, i64 } (i8*, i8*)** %field.836, align 8, !dbg !2066
  %call.223 = call { i64, i64 } %.field.ld.146(i8* nest undef, i8* %tmpv.853.sroa.2.0.copyload), !dbg !2066
  br label %label.0

label.0:                                          ; preds = %entry, %else.312
  call void @llvm.dbg.value(metadata i8 0, metadata !2067, metadata !DIExpression()), !dbg !2066
  ret i8 0, !dbg !2066
}

declare void @sync.Mutex.Unlock(i8*, %Mutex.0*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk19(i8* nest nocapture readnone %nest.65, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2068 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !2069, metadata !DIExpression()), !dbg !2070
  call void @llvm.dbg.value(metadata i8 0, metadata !2071, metadata !DIExpression()), !dbg !2070
  %call.224 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk19, %label.0)), !dbg !2070
  %0 = and i8 %call.224, 1, !dbg !2070
  %trunc.317 = icmp eq i8 %0, 0, !dbg !2070
  br i1 %trunc.317, label %else.313, label %label.0

else.313:                                         ; preds = %entry
  %field.838 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2070
  %.field.ld.147 = load %Mutex.0*, %Mutex.0** %field.838, align 8, !dbg !2070
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.147), !dbg !2070
  br label %label.0

label.0:                                          ; preds = %entry, %else.313
  call void @llvm.dbg.value(metadata i8 0, metadata !2071, metadata !DIExpression()), !dbg !2070
  ret i8 0, !dbg !2070
}

declare { i64, i64 } @runtime.concatstring2(i8*, i8*, [2 x { i8*, i64 }]*) local_unnamed_addr #0

; Function Attrs: noinline
define internal i8 @command_line_arguments.command_line_arguments..thunk20(i8* nest nocapture readnone %nest.66, { %Mutex.0* }* nocapture readonly %__go_thunk_parameter) #4 !dbg !2072 {
entry:
  call void @llvm.dbg.value(metadata { %Mutex.0* }* %__go_thunk_parameter, metadata !2073, metadata !DIExpression()), !dbg !2074
  call void @llvm.dbg.value(metadata i8 0, metadata !2075, metadata !DIExpression()), !dbg !2074
  %call.225 = call i8 @runtime.setdeferretaddr(i8* nest undef, i8* blockaddress(@command_line_arguments.command_line_arguments..thunk20, %label.0)), !dbg !2074
  %0 = and i8 %call.225, 1, !dbg !2074
  %trunc.318 = icmp eq i8 %0, 0, !dbg !2074
  br i1 %trunc.318, label %else.314, label %label.0

else.314:                                         ; preds = %entry
  %field.839 = getelementptr inbounds { %Mutex.0* }, { %Mutex.0* }* %__go_thunk_parameter, i64 0, i32 0, !dbg !2074
  %.field.ld.148 = load %Mutex.0*, %Mutex.0** %field.839, align 8, !dbg !2074
  call void @sync.Mutex.Unlock(i8* nest undef, %Mutex.0* %.field.ld.148), !dbg !2074
  br label %label.0

label.0:                                          ; preds = %entry, %else.314
  call void @llvm.dbg.value(metadata i8 0, metadata !2075, metadata !DIExpression()), !dbg !2074
  ret i8 0, !dbg !2074
}

declare void @runtime.mapiterinit(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare void @runtime.mapiternext(i8*, i8*) local_unnamed_addr #0

declare void @runtime.mapdelete(i8*, %_type.0*, { i64, i8, i8, i16, i32, i8*, i8*, i64, i8* }*, i8*) local_unnamed_addr #0

declare i8 @runtime.setdeferretaddr(i8*, i8*) local_unnamed_addr #0

declare i64 @runtime.strhash(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.memhash64(i8*, i8*, i64) local_unnamed_addr #0

declare i64 @runtime.memhash8(i8*, i8*, i64) local_unnamed_addr #0

declare void @runtime.registerGCRoots(i8*, i8*) local_unnamed_addr #0

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #2

attributes #0 = { "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #1 = { noreturn "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { noinline "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #5 = { nounwind "disable-tail-calls"="true" "no-frame-pointer-elim"="false" "split-stack" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 7, !"PIC Level", i32 0}
!1 = distinct !DICompileUnit(language: DW_LANG_Go, file: !2, producer: "llvm-goc", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3, globals: !4)
!2 = !DIFile(filename: "./cli.go", directory: "/home/wangcong/go_path/src/github.com/spolu/warp/client")
!3 = !{}
!4 = !{!5, !28, !30, !256, !259, !277}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "command_line_arguments.Registrar", linkageName: "command_line_arguments.Registrar", scope: !1, file: !7, line: 30, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "cli.go", directory: ".")
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "runtime.hmap", file: !10, line: 1, size: 384, align: 8, elements: !11)
!10 = !DIFile(filename: "<built-in>", directory: "")
!11 = !{!12, !14, !16, !17, !19, !21, !24, !25, !27}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "count", file: !10, line: 1, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "flags", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 64)
!15 = !DIBasicType(name: "uint8", size: 8, encoding: DW_ATE_unsigned)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "B", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 72)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "noverflow", file: !10, line: 1, baseType: !18, size: 16, align: 16, offset: 80)
!18 = !DIBasicType(name: "uint16", size: 16, encoding: DW_ATE_unsigned)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "hash0", file: !10, line: 1, baseType: !20, size: 32, align: 32, offset: 96)
!20 = !DIBasicType(name: "uint32", size: 32, encoding: DW_ATE_unsigned)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 128)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIBasicType(name: "void")
!24 = !DIDerivedType(tag: DW_TAG_member, name: "oldbuckets", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 192)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "nevacuate", file: !10, line: 1, baseType: !26, size: 64, align: 64, offset: 256)
!26 = !DIBasicType(name: "uintptr", size: 64, encoding: DW_ATE_unsigned)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "extra", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 320)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "runtime.writeBarrier", linkageName: "runtime.writeBarrier", scope: !1, file: !10, line: 1, type: !20, isLocal: false, isDefinition: true)
!30 = !DIGlobalVariableExpression(var: !31, expr: !DIExpression())
!31 = distinct !DIGlobalVariable(name: "command_line_arguments.flagFilterRegexp", linkageName: "command_line_arguments.flagFilterRegexp", scope: !1, file: !7, line: 40, type: !32, isLocal: true, isDefinition: true)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!33 = !DICompositeType(tag: DW_TAG_structure_type, name: "Regexp", file: !7, line: 5, size: 1280, align: 8, elements: !34)
!34 = !{!35, !105, !110}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "regexpRO", file: !7, line: 5, baseType: !36, size: 1024, align: 64)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.regexpRO", file: !7, line: 5, size: 1024, align: 8, elements: !37)
!37 = !{!38, !44, !70, !87, !88, !92, !94, !95, !96, !98, !99, !104}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "expr", file: !7, line: 5, baseType: !39, size: 128, align: 64)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", file: !10, line: 1, size: 128, align: 8, elements: !40)
!40 = !{!41, !43}
!41 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !10, line: 1, baseType: !42, size: 64, align: 64)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !10, line: 1, baseType: !13, size: 64, align: 64, offset: 64)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "prog", file: !7, line: 5, baseType: !45, size: 64, align: 64, offset: 128)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "Prog", file: !7, line: 5, size: 320, align: 8, elements: !47)
!47 = !{!48, !68, !69}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "Inst", file: !7, line: 5, baseType: !49, size: 192, align: 64)
!49 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Inst,int,int}", file: !50, size: 192, align: 8, elements: !51)
!50 = !DIFile(filename: "", directory: "")
!51 = !{!52, !66, !67}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !53, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!54 = !DICompositeType(tag: DW_TAG_structure_type, name: "Inst", file: !7, line: 5, size: 320, align: 8, elements: !55)
!55 = !{!56, !58, !59, !60}
!56 = !DIDerivedType(tag: DW_TAG_member, name: "Op", file: !7, line: 5, baseType: !57, size: 8, align: 8)
!57 = !DIBasicType(name: "InstOp", size: 8, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "Out", file: !7, line: 5, baseType: !20, size: 32, align: 32, offset: 32)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "Arg", file: !7, line: 5, baseType: !20, size: 32, align: 32, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "Rune", file: !7, line: 5, baseType: !61, size: 192, align: 64, offset: 128)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*int32,int,int}", file: !50, size: 192, align: 8, elements: !62)
!62 = !{!63, !66, !67}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !64, size: 64, align: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!65 = !DIBasicType(name: "int32", size: 32, encoding: DW_ATE_signed)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "__count", file: !50, line: 1, baseType: !13, size: 64, align: 64, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "__capacity", file: !50, line: 1, baseType: !13, size: 64, align: 64, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "Start", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 192)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "NumCap", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 256)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "onepass", file: !7, line: 5, baseType: !71, size: 64, align: 64, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!72 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.onePassProg", file: !7, line: 5, size: 320, align: 8, elements: !73)
!73 = !{!74, !68, !69}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "Inst", file: !7, line: 5, baseType: !75, size: 192, align: 64)
!75 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.regexp.onePassInst,int,int}", file: !50, size: 192, align: 8, elements: !76)
!76 = !{!77, !66, !67}
!77 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !78, size: 64, align: 64)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.onePassInst", file: !7, line: 5, size: 512, align: 8, elements: !80)
!80 = !{!81, !82}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "Inst", file: !7, line: 5, baseType: !54, size: 320, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "Next", file: !7, line: 5, baseType: !83, size: 192, align: 64, offset: 320)
!83 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint32,int,int}", file: !50, size: 192, align: 8, elements: !84)
!84 = !{!85, !66, !67}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !86, size: 64, align: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", file: !7, line: 5, baseType: !39, size: 128, align: 64, offset: 256)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "prefixBytes", file: !7, line: 5, baseType: !89, size: 192, align: 64, offset: 384)
!89 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*uint8,int,int}", file: !50, size: 192, align: 8, elements: !90)
!90 = !{!91, !66, !67}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !42, size: 64, align: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "prefixComplete", file: !7, line: 5, baseType: !93, size: 8, align: 8, offset: 576)
!93 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_unsigned)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "prefixRune", file: !7, line: 5, baseType: !65, size: 32, align: 32, offset: 608)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "prefixEnd", file: !7, line: 5, baseType: !20, size: 32, align: 32, offset: 640)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "cond", file: !7, line: 5, baseType: !97, size: 8, align: 8, offset: 672)
!97 = !DIBasicType(name: "EmptyOp", size: 8, encoding: DW_ATE_unsigned)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "numSubexp", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 704)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "subexpNames", file: !7, line: 5, baseType: !100, size: 192, align: 64, offset: 768)
!100 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*string,int,int}", file: !50, size: 192, align: 8, elements: !101)
!101 = !{!102, !66, !67}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !103, size: 64, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "longest", file: !7, line: 5, baseType: !93, size: 8, align: 8, offset: 960)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "mu", file: !7, line: 5, baseType: !106, size: 64, align: 32, offset: 1024)
!106 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mutex", file: !7, line: 5, size: 64, align: 8, elements: !107)
!107 = !{!108, !109}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !7, line: 5, baseType: !65, size: 32, align: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "sema", file: !7, line: 5, baseType: !20, size: 32, align: 32, offset: 32)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "machine", file: !7, line: 5, baseType: !111, size: 192, align: 64, offset: 1088)
!111 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**.regexp.machine,int,int}", file: !50, size: 192, align: 8, elements: !112)
!112 = !{!113, !66, !67}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !114, size: 64, align: 64)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.machine", file: !7, line: 5, size: 2112, align: 8, elements: !117)
!117 = !{!118, !119, !120, !121, !122, !144, !161, !162, !167, !168, !169, !173, !177}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "re", file: !7, line: 5, baseType: !22, size: 64, align: 64)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "p", file: !7, line: 5, baseType: !45, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "op", file: !7, line: 5, baseType: !71, size: 64, align: 64, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "maxBitStateLen", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 192)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !7, line: 5, baseType: !123, size: 64, align: 64, offset: 256)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.bitState", file: !7, line: 5, size: 704, align: 8, elements: !125)
!125 = !{!126, !127, !128, !133, !143}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "prog", file: !7, line: 5, baseType: !45, size: 64, align: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "end", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "cap", file: !7, line: 5, baseType: !129, size: 192, align: 64, offset: 128)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*int,int,int}", file: !50, size: 192, align: 8, elements: !130)
!130 = !{!131, !66, !67}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !132, size: 64, align: 64)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", file: !7, line: 5, baseType: !134, size: 192, align: 64, offset: 320)
!134 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.regexp.job,int,int}", file: !50, size: 192, align: 8, elements: !135)
!135 = !{!136, !66, !67}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !137, size: 64, align: 64)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.job", file: !7, line: 5, size: 128, align: 8, elements: !139)
!139 = !{!140, !141, !142}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "pc", file: !7, line: 5, baseType: !20, size: 32, align: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "arg", file: !7, line: 5, baseType: !93, size: 8, align: 8, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "pos", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "visited", file: !7, line: 5, baseType: !83, size: 192, align: 64, offset: 512)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "q0", file: !7, line: 5, baseType: !145, size: 384, align: 64, offset: 320)
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.queue", file: !7, line: 5, size: 384, align: 8, elements: !146)
!146 = !{!147, !148}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "sparse", file: !7, line: 5, baseType: !83, size: 192, align: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "dense", file: !7, line: 5, baseType: !149, size: 192, align: 64, offset: 192)
!149 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.regexp.entry,int,int}", file: !50, size: 192, align: 8, elements: !150)
!150 = !{!151, !66, !67}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !152, size: 64, align: 64)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.entry", file: !7, line: 5, size: 128, align: 8, elements: !154)
!154 = !{!140, !155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "t", file: !7, line: 5, baseType: !156, size: 64, align: 64, offset: 64)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.thread", file: !7, line: 5, size: 256, align: 8, elements: !158)
!158 = !{!159, !160}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "inst", file: !7, line: 5, baseType: !53, size: 64, align: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "cap", file: !7, line: 5, baseType: !129, size: 192, align: 64, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "q1", file: !7, line: 5, baseType: !145, size: 384, align: 64, offset: 704)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "pool", file: !7, line: 5, baseType: !163, size: 192, align: 64, offset: 1088)
!163 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{**.regexp.thread,int,int}", file: !50, size: 192, align: 8, elements: !164)
!164 = !{!165, !66, !67}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !166, size: 64, align: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "matched", file: !7, line: 5, baseType: !93, size: 8, align: 8, offset: 1280)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "matchcap", file: !7, line: 5, baseType: !129, size: 192, align: 64, offset: 1344)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "inputBytes", file: !7, line: 5, baseType: !170, size: 192, align: 64, offset: 1536)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.inputBytes", file: !7, line: 5, size: 192, align: 8, elements: !171)
!171 = !{!172}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "str", file: !7, line: 5, baseType: !89, size: 192, align: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "inputString", file: !7, line: 5, baseType: !174, size: 128, align: 64, offset: 1728)
!174 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.inputString", file: !7, line: 5, size: 128, align: 8, elements: !175)
!175 = !{!176}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "str", file: !7, line: 5, baseType: !39, size: 128, align: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "inputReader", file: !7, line: 5, baseType: !178, size: 256, align: 64, offset: 1856)
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: ".regexp.inputReader", file: !7, line: 5, size: 256, align: 8, elements: !179)
!179 = !{!180, !254, !255}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !7, line: 5, baseType: !181, size: 128, align: 64)
!181 = !DICompositeType(tag: DW_TAG_structure_type, name: "RuneReader", file: !7, line: 5, size: 128, align: 8, elements: !182)
!182 = !{!183, !253}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 5, baseType: !184, size: 64, align: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{int32,int,error}}", file: !50, size: 128, align: 8, elements: !186)
!186 = !{!187, !232}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !50, line: 5, baseType: !188, size: 64, align: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DICompositeType(tag: DW_TAG_structure_type, name: "_type", file: !10, line: 1, size: 576, align: 8, elements: !190)
!190 = !{!191, !192, !193, !194, !195, !196, !197, !205, !213, !214, !215, !231}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !10, line: 1, baseType: !26, size: 64, align: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "ptrdata", file: !10, line: 1, baseType: !26, size: 64, align: 64, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "hash", file: !10, line: 1, baseType: !20, size: 32, align: 32, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "kind", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 160)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "align", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 168)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "fieldAlign", file: !10, line: 1, baseType: !15, size: 8, align: 8, offset: 176)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", file: !10, line: 1, baseType: !198, size: 64, align: 64, offset: 192)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 1, size: 64, align: 8, elements: !200)
!200 = !{!201}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 1, baseType: !202, size: 64, align: 64)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DISubroutineType(types: !204)
!204 = !{!26, !22, !26}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "equalfn", file: !10, line: 1, baseType: !206, size: 64, align: 64, offset: 256)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !10, line: 1, size: 64, align: 8, elements: !208)
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !10, line: 1, baseType: !210, size: 64, align: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = !DISubroutineType(types: !212)
!212 = !{!93, !22, !22}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "gcdata", file: !10, line: 1, baseType: !42, size: 64, align: 64, offset: 320)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "string", file: !10, line: 1, baseType: !103, size: 64, align: 64, offset: 384)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "uncommonType", file: !10, line: 1, baseType: !216, size: 64, align: 64, offset: 448)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncommonType", file: !10, line: 1, size: 320, align: 8, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !10, line: 1, baseType: !103, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "pkgPath", file: !10, line: 1, baseType: !103, size: 64, align: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "methods", file: !10, line: 1, baseType: !222, size: 192, align: 64, offset: 128)
!222 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*method,int,int}", file: !50, size: 192, align: 8, elements: !223)
!223 = !{!224, !66, !67}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !225, size: 64, align: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DICompositeType(tag: DW_TAG_structure_type, name: "method", file: !10, line: 1, size: 320, align: 8, elements: !227)
!227 = !{!219, !220, !228, !229, !230}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "mtyp", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 128)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "typ", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "tfn", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "ptrToThis", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 512)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "ReadRune", file: !50, line: 5, baseType: !233, size: 64, align: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DISubroutineType(types: !235)
!235 = !{!236, !22}
!236 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int32,int,error}", file: !50, size: 256, align: 8, elements: !237)
!237 = !{!238, !239, !240}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !50, line: 5, baseType: !65, size: 32, align: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "size", file: !50, line: 5, baseType: !13, size: 64, align: 64, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !50, line: 5, baseType: !241, size: 128, align: 64, offset: 128)
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "error", file: !10, line: 1, size: 128, align: 8, elements: !242)
!242 = !{!243, !252}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !10, line: 1, baseType: !244, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string}", file: !50, size: 128, align: 8, elements: !246)
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !50, line: 1, baseType: !188, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "Error", file: !50, line: 1, baseType: !249, size: 64, align: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DISubroutineType(types: !251)
!251 = !{!39, !22}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !10, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !7, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "atEOT", file: !7, line: 5, baseType: !93, size: 8, align: 8, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "pos", file: !7, line: 5, baseType: !13, size: 64, align: 64, offset: 192)
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(name: "github_com_spolu_warp.EnvWarp", linkageName: "github_com_spolu_warp.EnvWarp", scope: !1, file: !258, line: 11, type: !39, isLocal: false, isDefinition: true)
!258 = !DIFile(filename: "local.go", directory: ".")
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "io_ioutil.Discard", linkageName: "io_ioutil.Discard", scope: !1, file: !261, line: 6, type: !262, isLocal: false, isDefinition: true)
!261 = !DIFile(filename: "config.go", directory: ".")
!262 = !DICompositeType(tag: DW_TAG_structure_type, name: "Writer", file: !7, line: 6, size: 128, align: 8, elements: !263)
!263 = !{!264, !253}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 6, baseType: !265, size: 64, align: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !50, size: 128, align: 8, elements: !267)
!267 = !{!268, !269}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !50, line: 6, baseType: !188, size: 64, align: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !50, line: 6, baseType: !270, size: 64, align: 64, offset: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{!273, !22, !89}
!273 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !50, size: 192, align: 8, elements: !274)
!274 = !{!275, !276}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !50, line: 6, baseType: !13, size: 64, align: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !50, line: 6, baseType: !241, size: 128, align: 64, offset: 64)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(name: "github_com_spolu_warp.Version", linkageName: "github_com_spolu_warp.Version", scope: !1, file: !258, line: 11, type: !39, isLocal: false, isDefinition: true)
!279 = distinct !DISubprogram(name: "cli.command_line_arguments..import", linkageName: "command_line_arguments..import", scope: null, file: !7, line: 1, type: !280, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!280 = !DISubroutineType(types: !281)
!281 = !{!23}
!282 = !DILocation(line: 1, column: 1, scope: !283)
!283 = !DILexicalBlockFile(scope: !279, file: !10, discriminator: 0)
!284 = !DILocation(line: 30, column: 17, scope: !285)
!285 = !DILexicalBlockFile(scope: !279, file: !7, discriminator: 0)
!286 = !DILocation(line: 30, column: 5, scope: !285)
!287 = !DILocation(line: 40, column: 31, scope: !285)
!288 = !DILocation(line: 40, column: 5, scope: !285)
!289 = distinct !DISubprogram(name: "cli.Run..1command_line_arguments.Cli", linkageName: "command_line_arguments.Cli.Run", scope: null, file: !7, line: 73, type: !290, isLocal: false, isDefinition: true, scopeLine: 73, isOptimized: false, unit: !1, retainedNodes: !3)
!290 = !DISubroutineType(types: !291)
!291 = !{!241, !292, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cli", file: !7, line: 33, size: 384, align: 8, elements: !294)
!294 = !{!295, !363, !364}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "Ctx", file: !7, line: 34, baseType: !296, size: 128, align: 64)
!296 = !DICompositeType(tag: DW_TAG_structure_type, name: "Context", file: !7, line: 4, size: 128, align: 8, elements: !297)
!297 = !{!298, !253}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 4, baseType: !299, size: 64, align: 64)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,Token)Token}", file: !50, size: 320, align: 8, elements: !301)
!301 = !{!302, !303, !345, !351, !355}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !50, line: 4, baseType: !188, size: 64, align: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "Deadline", file: !50, line: 4, baseType: !304, size: 64, align: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!307, !22}
!307 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Time,bool}", file: !50, size: 256, align: 8, elements: !308)
!308 = !{!309, !344}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", file: !50, line: 4, baseType: !310, size: 192, align: 64)
!310 = !DICompositeType(tag: DW_TAG_structure_type, name: "Time", file: !7, line: 4, size: 192, align: 8, elements: !311)
!311 = !{!312, !314, !316}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "wall", file: !7, line: 4, baseType: !313, size: 64, align: 64)
!313 = !DIBasicType(name: "uint64", size: 64, encoding: DW_ATE_unsigned)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "ext", file: !7, line: 4, baseType: !315, size: 64, align: 64, offset: 64)
!315 = !DIBasicType(name: "int64", size: 64, encoding: DW_ATE_signed)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "loc", file: !7, line: 4, baseType: !317, size: 64, align: 64, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", file: !7, line: 4, size: 704, align: 8, elements: !319)
!319 = !{!320, !321, !330, !341, !342, !343}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "name", file: !7, line: 4, baseType: !39, size: 128, align: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "zone", file: !7, line: 4, baseType: !322, size: 192, align: 64, offset: 128)
!322 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zone,int,int}", file: !50, size: 192, align: 8, elements: !323)
!323 = !{!324, !66, !67}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !325, size: 64, align: 64)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zone", file: !7, line: 4, size: 256, align: 8, elements: !327)
!327 = !{!320, !328, !329}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !7, line: 4, baseType: !13, size: 64, align: 64, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "isDST", file: !7, line: 4, baseType: !93, size: 8, align: 8, offset: 192)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tx", file: !7, line: 4, baseType: !331, size: 192, align: 64, offset: 320)
!331 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*.time.zoneTrans,int,int}", file: !50, size: 192, align: 8, elements: !332)
!332 = !{!333, !66, !67}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !334, size: 64, align: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DICompositeType(tag: DW_TAG_structure_type, name: ".time.zoneTrans", file: !7, line: 4, size: 128, align: 8, elements: !336)
!336 = !{!337, !338, !339, !340}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "when", file: !7, line: 4, baseType: !315, size: 64, align: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "index", file: !7, line: 4, baseType: !15, size: 8, align: 8, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "isstd", file: !7, line: 4, baseType: !93, size: 8, align: 8, offset: 72)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "isutc", file: !7, line: 4, baseType: !93, size: 8, align: 8, offset: 80)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "cacheStart", file: !7, line: 4, baseType: !315, size: 64, align: 64, offset: 512)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "cacheEnd", file: !7, line: 4, baseType: !315, size: 64, align: 64, offset: 576)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "cacheZone", file: !7, line: 4, baseType: !325, size: 64, align: 64, offset: 640)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "ok", file: !50, line: 4, baseType: !93, size: 8, align: 8, offset: 192)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "Done", file: !50, line: 4, baseType: !346, size: 64, align: 64, offset: 128)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DISubroutineType(types: !348)
!348 = !{!349, !22}
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_channel", file: !10, line: 1, align: 8, elements: !3)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "Err", file: !50, line: 4, baseType: !352, size: 64, align: 64, offset: 192)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DISubroutineType(types: !354)
!354 = !{!241, !22}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "Value", file: !50, line: 4, baseType: !356, size: 64, align: 64, offset: 256)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DISubroutineType(types: !358)
!358 = !{!359, !22, !359}
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "Token", file: !261, line: 5, size: 128, align: 8, elements: !360)
!360 = !{!361, !362}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !261, line: 1, baseType: !188, size: 64, align: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !261, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "Flags", file: !7, line: 35, baseType: !8, size: 64, align: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "Args", file: !7, line: 36, baseType: !100, size: 192, align: 64, offset: 192)
!365 = !DILocalVariable(name: "c", arg: 1, scope: !289, file: !7, line: 73, type: !292)
!366 = !DILocation(line: 73, column: 1, scope: !289)
!367 = !DILocation(line: 74, column: 10, scope: !368)
!368 = distinct !DILexicalBlock(scope: !289, file: !7, line: 73, column: 1)
!369 = !DILocation(line: 74, column: 17, scope: !368)
!370 = !DILocation(line: 75, column: 12, scope: !368)
!371 = !DILocation(line: 75, column: 10, scope: !368)
!372 = !DILocation(line: 79, column: 21, scope: !368)
!373 = !DILocation(line: 79, column: 32, scope: !368)
!374 = !DILocalVariable(name: "r", scope: !375, file: !7, line: 80, type: !376)
!375 = distinct !DILexicalBlock(scope: !368, file: !7, line: 80, column: 2)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !7, line: 30, size: 64, align: 8, elements: !378)
!378 = !{!379}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !7, line: 30, baseType: !380, size: 64, align: 64)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DISubroutineType(types: !382)
!382 = !{!383}
!383 = !DICompositeType(tag: DW_TAG_structure_type, name: "Command", file: !7, line: 15, size: 128, align: 8, elements: !384)
!384 = !{!385, !253}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !7, line: 15, baseType: !386, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,Context)error,*func(*void,Context)void,*func(*void)CmdName,*func(*void,Context,struct{*string,int,int},*runtime.hmap)error}", file: !50, size: 320, align: 8, elements: !388)
!388 = !{!389, !390, !394, !398, !406}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !50, line: 15, baseType: !188, size: 64, align: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "Execute", file: !50, line: 15, baseType: !391, size: 64, align: 64, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DISubroutineType(types: !393)
!393 = !{!241, !22, !296}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "Help", file: !50, line: 15, baseType: !395, size: 64, align: 64, offset: 128)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DISubroutineType(types: !397)
!397 = !{!23, !22, !296}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "Name", file: !50, line: 15, baseType: !399, size: 64, align: 64, offset: 192)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{!402, !22}
!402 = !DICompositeType(tag: DW_TAG_structure_type, name: "CmdName", file: !7, line: 12, size: 128, align: 8, elements: !403)
!403 = !{!404, !405}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !7, line: 1, baseType: !42, size: 64, align: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !7, line: 1, baseType: !13, size: 64, align: 64, offset: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "Parse", file: !50, line: 15, baseType: !407, size: 64, align: 64, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DISubroutineType(types: !409)
!409 = !{!241, !22, !296, !100, !8}
!410 = !DILocation(line: 80, column: 5, scope: !368)
!411 = !DILocalVariable(name: "ok", scope: !375, file: !7, line: 80, type: !93)
!412 = !DILocation(line: 80, column: 14, scope: !375)
!413 = !DILocation(line: 80, column: 5, scope: !375)
!414 = !DILocation(line: 80, column: 39, scope: !375)
!415 = !DILocation(line: 81, column: 13, scope: !375)
!416 = !DILocation(line: 81, column: 22, scope: !375)
!417 = !DILocation(line: 0, scope: !375)
!418 = !DILocalVariable(name: "command", scope: !368, file: !7, line: 78, type: !383)
!419 = !DILocation(line: 78, column: 6, scope: !289)
!420 = !DILocation(line: 86, column: 16, scope: !368)
!421 = !DILocation(line: 86, column: 37, scope: !368)
!422 = !DILocalVariable(name: "args", scope: !368, file: !7, line: 79, type: !100)
!423 = !DILocation(line: 79, column: 2, scope: !289)
!424 = !DILocalVariable(name: "err", scope: !368, file: !7, line: 86, type: !241)
!425 = !DILocation(line: 86, column: 2, scope: !289)
!426 = !DILocation(line: 87, column: 9, scope: !368)
!427 = !DILocation(line: 83, column: 13, scope: !375)
!428 = !DILocation(line: 88, column: 10, scope: !368)
!429 = !DILocation(line: 89, column: 17, scope: !368)
!430 = !DILocation(line: 89, column: 3, scope: !368)
!431 = !DILocation(line: 92, column: 15, scope: !368)
!432 = !DILocation(line: 93, column: 9, scope: !368)
!433 = !DILocation(line: 94, column: 17, scope: !368)
!434 = !DILocation(line: 94, column: 3, scope: !368)
!435 = !DILocalVariable(name: "$ret2", scope: !289, file: !7, line: 73, type: !241)
!436 = !DILocation(line: 73, column: 21, scope: !289)
!437 = !DILocation(line: 97, column: 2, scope: !368)
!438 = distinct !DISubprogram(name: "cli.New", linkageName: "command_line_arguments.New", scope: null, file: !7, line: 43, type: !439, isLocal: false, isDefinition: true, scopeLine: 43, isOptimized: false, unit: !1, retainedNodes: !3)
!439 = !DISubroutineType(types: !440)
!440 = !{!441, !100}
!441 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Cli,error}", file: !50, size: 192, align: 8, elements: !442)
!442 = !{!443, !444}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 45, baseType: !292, size: 64, align: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 45, baseType: !241, size: 128, align: 64, offset: 64)
!445 = !DILocalVariable(name: "argv", arg: 1, scope: !438, file: !7, line: 44, type: !100)
!446 = !DILocation(line: 44, column: 2, scope: !438)
!447 = !DILocalVariable(name: "$ret0", scope: !438, file: !7, line: 45, type: !292)
!448 = !DILocation(line: 45, column: 4, scope: !438)
!449 = !DILocation(line: 46, column: 17, scope: !450)
!450 = distinct !DILexicalBlock(scope: !438, file: !7, line: 43, column: 1)
!451 = !DILocalVariable(name: "ctx", scope: !450, file: !7, line: 46, type: !296)
!452 = !DILocation(line: 46, column: 2, scope: !438)
!453 = !DILocation(line: 48, column: 10, scope: !450)
!454 = !DILocalVariable(name: "args", scope: !450, file: !7, line: 48, type: !100)
!455 = !DILocation(line: 48, column: 2, scope: !438)
!456 = !DILocation(line: 49, column: 11, scope: !450)
!457 = !DILocalVariable(name: "flags", scope: !450, file: !7, line: 49, type: !8)
!458 = !DILocation(line: 49, column: 2, scope: !438)
!459 = !DILocation(line: 51, column: 2, scope: !460)
!460 = distinct !DILexicalBlock(scope: !450, file: !7, line: 51, column: 2)
!461 = !DILocalVariable(name: "a", scope: !460, file: !7, line: 51, type: !39)
!462 = !DILocation(line: 51, column: 6, scope: !450)
!463 = !DILocation(line: 52, column: 6, scope: !460)
!464 = !DILocation(line: 52, column: 22, scope: !460)
!465 = !DILocation(line: 52, column: 3, scope: !460)
!466 = !DILocation(line: 53, column: 16, scope: !467)
!467 = distinct !DILexicalBlock(scope: !460, file: !7, line: 52, column: 38)
!468 = !DILocation(line: 54, column: 17, scope: !467)
!469 = !DILocalVariable(name: "s", scope: !467, file: !7, line: 54, type: !100)
!470 = !DILocation(line: 54, column: 4, scope: !460)
!471 = !DILocation(line: 0, scope: !460)
!472 = !DILocation(line: 61, column: 32, scope: !460)
!473 = !DILocation(line: 61, column: 11, scope: !460)
!474 = !DILocation(line: 56, column: 20, scope: !467)
!475 = !DILocation(line: 56, column: 17, scope: !467)
!476 = !DILocation(line: 58, column: 17, scope: !467)
!477 = !DILocation(line: 61, column: 9, scope: !460)
!478 = !DILocation(line: 65, column: 9, scope: !450)
!479 = !DILocation(line: 65, column: 10, scope: !450)
!480 = !DILocation(line: 65, column: 2, scope: !450)
!481 = distinct !DISubprogram(name: "cli.command_line_arguments.Credentials..hash", linkageName: "command_line_arguments.command_line_arguments.Credentials..hash", scope: null, file: !10, line: 1, type: !203, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!482 = !DILocalVariable(name: "key", arg: 1, scope: !481, file: !10, line: 1, type: !22)
!483 = !DILocation(line: 1, column: 1, scope: !481)
!484 = !DILocalVariable(name: "seed", arg: 2, scope: !481, file: !10, line: 1, type: !26)
!485 = !DILocalVariable(name: "$ret74", scope: !481, file: !10, line: 1, type: !26)
!486 = distinct !DISubprogram(name: "cli.command_line_arguments.Credentials..eq", linkageName: "command_line_arguments.command_line_arguments.Credentials..eq", scope: null, file: !10, line: 1, type: !211, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!487 = !DILocalVariable(name: "key1", arg: 1, scope: !486, file: !10, line: 1, type: !22)
!488 = !DILocation(line: 1, column: 1, scope: !486)
!489 = !DILocalVariable(name: "key2", arg: 2, scope: !486, file: !10, line: 1, type: !22)
!490 = !DILocalVariable(name: "$ret75", scope: !486, file: !10, line: 1, type: !93)
!491 = distinct !DISubprogram(name: "cli.command_line_arguments.Config..hash", linkageName: "command_line_arguments.command_line_arguments.Config..hash", scope: null, file: !10, line: 1, type: !203, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!492 = !DILocalVariable(name: "key", arg: 1, scope: !491, file: !10, line: 1, type: !22)
!493 = !DILocation(line: 1, column: 1, scope: !491)
!494 = !DILocalVariable(name: "seed", arg: 2, scope: !491, file: !10, line: 1, type: !26)
!495 = !DILocalVariable(name: "$ret76", scope: !491, file: !10, line: 1, type: !26)
!496 = distinct !DISubprogram(name: "cli.command_line_arguments.Config..eq", linkageName: "command_line_arguments.command_line_arguments.Config..eq", scope: null, file: !10, line: 1, type: !211, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!497 = !DILocalVariable(name: "key1", arg: 1, scope: !496, file: !10, line: 1, type: !22)
!498 = !DILocation(line: 1, column: 1, scope: !496)
!499 = !DILocalVariable(name: "key2", arg: 2, scope: !496, file: !10, line: 1, type: !22)
!500 = !DILocalVariable(name: "$ret77", scope: !496, file: !10, line: 1, type: !93)
!501 = distinct !DISubprogram(name: "cli.ConfigPath", linkageName: "command_line_arguments.ConfigPath", scope: null, file: !261, line: 27, type: !502, isLocal: false, isDefinition: true, scopeLine: 27, isOptimized: false, unit: !1, retainedNodes: !3)
!502 = !DISubroutineType(types: !503)
!503 = !{!504, !296}
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*string,error}", file: !50, size: 192, align: 8, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 29, baseType: !103, size: 64, align: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 29, baseType: !241, size: 128, align: 64, offset: 64)
!508 = !DILocalVariable(name: "ctx", arg: 1, scope: !501, file: !261, line: 28, type: !296)
!509 = !DILocation(line: 28, column: 2, scope: !501)
!510 = !DILocalVariable(name: "$ret3", scope: !501, file: !261, line: 29, type: !103)
!511 = !DILocation(line: 29, column: 4, scope: !501)
!512 = !DILocation(line: 30, column: 23, scope: !513)
!513 = distinct !DILexicalBlock(scope: !501, file: !261, line: 27, column: 1)
!514 = !DILocation(line: 30, column: 2, scope: !513)
!515 = !DILocalVariable(name: "path", scope: !513, file: !261, line: 30, type: !103)
!516 = !DILocation(line: 30, column: 2, scope: !501)
!517 = !DILocalVariable(name: "err", scope: !513, file: !261, line: 30, type: !241)
!518 = !DILocation(line: 33, column: 9, scope: !513)
!519 = !DILocation(line: 34, column: 22, scope: !513)
!520 = !DILocalVariable(name: "$ret4", scope: !501, file: !261, line: 29, type: !241)
!521 = !DILocation(line: 29, column: 13, scope: !501)
!522 = !DILocation(line: 34, column: 3, scope: !513)
!523 = !DILocation(line: 37, column: 29, scope: !513)
!524 = !DILocation(line: 37, column: 11, scope: !513)
!525 = !DILocation(line: 38, column: 9, scope: !513)
!526 = !DILocation(line: 39, column: 22, scope: !513)
!527 = !DILocation(line: 39, column: 3, scope: !513)
!528 = !DILocation(line: 42, column: 2, scope: !513)
!529 = distinct !DISubprogram(name: "cli.RetrieveConfig", linkageName: "command_line_arguments.RetrieveConfig", scope: null, file: !261, line: 46, type: !530, isLocal: false, isDefinition: true, scopeLine: 46, isOptimized: false, unit: !1, retainedNodes: !3)
!530 = !DISubroutineType(types: !531)
!531 = !{!532, !296}
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Config,error}", file: !50, size: 192, align: 8, elements: !533)
!533 = !{!534, !543}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 48, baseType: !535, size: 64, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DICompositeType(tag: DW_TAG_structure_type, name: "Config", file: !261, line: 22, size: 256, align: 8, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "Credentials", file: !261, line: 23, baseType: !539, size: 256, align: 64)
!539 = !DICompositeType(tag: DW_TAG_structure_type, name: "Credentials", file: !261, line: 16, size: 256, align: 8, elements: !540)
!540 = !{!541, !542}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "User", file: !261, line: 17, baseType: !39, size: 128, align: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "Secret", file: !261, line: 18, baseType: !39, size: 128, align: 64, offset: 128)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 48, baseType: !241, size: 128, align: 64, offset: 64)
!544 = !DILocalVariable(name: "ctx", arg: 1, scope: !529, file: !261, line: 47, type: !296)
!545 = !DILocation(line: 47, column: 2, scope: !529)
!546 = !DILocalVariable(name: "$ret5", scope: !529, file: !261, line: 48, type: !535)
!547 = !DILocation(line: 48, column: 4, scope: !529)
!548 = !DILocation(line: 49, column: 15, scope: !549)
!549 = distinct !DILexicalBlock(scope: !529, file: !261, line: 46, column: 1)
!550 = !DILocalVariable(name: "path", scope: !549, file: !261, line: 49, type: !103)
!551 = !DILocation(line: 49, column: 2, scope: !529)
!552 = !DILocalVariable(name: "err", scope: !549, file: !261, line: 49, type: !241)
!553 = !DILocation(line: 50, column: 9, scope: !549)
!554 = !DILocation(line: 51, column: 22, scope: !549)
!555 = !DILocalVariable(name: "$ret6", scope: !529, file: !261, line: 48, type: !241)
!556 = !DILocation(line: 48, column: 13, scope: !529)
!557 = !DILocation(line: 51, column: 3, scope: !549)
!558 = !DILocation(line: 54, column: 23, scope: !559)
!559 = distinct !DILexicalBlock(scope: !549, file: !261, line: 54, column: 2)
!560 = !DILocation(line: 54, column: 18, scope: !559)
!561 = !DILocalVariable(name: "err", scope: !559, file: !261, line: 54, type: !241)
!562 = !DILocation(line: 54, column: 5, scope: !549)
!563 = !DILocation(line: 54, column: 34, scope: !559)
!564 = !DILocation(line: 54, column: 2, scope: !559)
!565 = !DILocation(line: 55, column: 3, scope: !559)
!566 = !DILocation(line: 58, column: 21, scope: !549)
!567 = !DILocation(line: 59, column: 9, scope: !549)
!568 = !DILocation(line: 60, column: 22, scope: !549)
!569 = !DILocation(line: 60, column: 3, scope: !549)
!570 = !DILocation(line: 63, column: 6, scope: !549)
!571 = !DILocation(line: 64, column: 28, scope: !549)
!572 = !DILocalVariable(name: "raw", scope: !549, file: !261, line: 58, type: !89)
!573 = !DILocation(line: 58, column: 2, scope: !529)
!574 = !DILocation(line: 64, column: 13, scope: !549)
!575 = !DILocation(line: 65, column: 9, scope: !549)
!576 = !DILocation(line: 66, column: 22, scope: !549)
!577 = !DILocation(line: 66, column: 3, scope: !549)
!578 = !DILocalVariable(name: "c", scope: !549, file: !261, line: 63, type: !535)
!579 = !DILocation(line: 63, column: 6, scope: !529)
!580 = !DILocation(line: 69, column: 2, scope: !549)
!581 = distinct !DISubprogram(name: "cli.GenerateConfig", linkageName: "command_line_arguments.GenerateConfig", scope: null, file: !261, line: 74, type: !530, isLocal: false, isDefinition: true, scopeLine: 74, isOptimized: false, unit: !1, retainedNodes: !3)
!582 = !DILocalVariable(name: "ctx", arg: 1, scope: !581, file: !261, line: 75, type: !296)
!583 = !DILocation(line: 75, column: 2, scope: !581)
!584 = !DILocalVariable(name: "$ret7", scope: !581, file: !261, line: 76, type: !535)
!585 = !DILocation(line: 76, column: 4, scope: !581)
!586 = !DILocation(line: 79, column: 18, scope: !587)
!587 = distinct !DILexicalBlock(scope: !581, file: !261, line: 74, column: 1)
!588 = !DILocation(line: 80, column: 18, scope: !587)
!589 = !DILocation(line: 77, column: 12, scope: !587)
!590 = !DILocation(line: 77, column: 13, scope: !587)
!591 = !DILocalVariable(name: "config", scope: !587, file: !261, line: 77, type: !535)
!592 = !DILocation(line: 77, column: 2, scope: !581)
!593 = !DILocation(line: 84, column: 15, scope: !587)
!594 = !DILocalVariable(name: "path", scope: !587, file: !261, line: 84, type: !103)
!595 = !DILocation(line: 84, column: 2, scope: !581)
!596 = !DILocalVariable(name: "err", scope: !587, file: !261, line: 84, type: !241)
!597 = !DILocation(line: 85, column: 9, scope: !587)
!598 = !DILocation(line: 86, column: 22, scope: !587)
!599 = !DILocalVariable(name: "$ret8", scope: !581, file: !261, line: 76, type: !241)
!600 = !DILocation(line: 76, column: 13, scope: !581)
!601 = !DILocation(line: 86, column: 3, scope: !587)
!602 = !DILocation(line: 89, column: 39, scope: !587)
!603 = !DILocation(line: 89, column: 25, scope: !587)
!604 = !DILocation(line: 90, column: 9, scope: !587)
!605 = !DILocation(line: 91, column: 22, scope: !587)
!606 = !DILocation(line: 91, column: 3, scope: !587)
!607 = !DILocation(line: 94, column: 25, scope: !587)
!608 = !DILocation(line: 94, column: 15, scope: !587)
!609 = !DILocalVariable(name: "formatted", scope: !587, file: !261, line: 89, type: !89)
!610 = !DILocation(line: 89, column: 2, scope: !581)
!611 = !DILocation(line: 95, column: 9, scope: !587)
!612 = !DILocation(line: 96, column: 22, scope: !587)
!613 = !DILocation(line: 96, column: 3, scope: !587)
!614 = !DILocation(line: 99, column: 2, scope: !587)
!615 = distinct !DISubprogram(name: "cli.RetrieveOrGenerateConfig", linkageName: "command_line_arguments.RetrieveOrGenerateConfig", scope: null, file: !261, line: 103, type: !530, isLocal: false, isDefinition: true, scopeLine: 103, isOptimized: false, unit: !1, retainedNodes: !3)
!616 = !DILocalVariable(name: "ctx", arg: 1, scope: !615, file: !261, line: 104, type: !296)
!617 = !DILocation(line: 104, column: 2, scope: !615)
!618 = !DILocalVariable(name: "$ret9", scope: !615, file: !261, line: 105, type: !535)
!619 = !DILocation(line: 105, column: 4, scope: !615)
!620 = !DILocation(line: 107, column: 17, scope: !621)
!621 = distinct !DILexicalBlock(scope: !615, file: !261, line: 103, column: 1)
!622 = !DILocalVariable(name: "config", scope: !621, file: !261, line: 107, type: !535)
!623 = !DILocation(line: 107, column: 2, scope: !615)
!624 = !DILocalVariable(name: "err", scope: !621, file: !261, line: 107, type: !241)
!625 = !DILocation(line: 108, column: 9, scope: !621)
!626 = !DILocation(line: 109, column: 22, scope: !621)
!627 = !DILocalVariable(name: "$ret10", scope: !615, file: !261, line: 105, type: !241)
!628 = !DILocation(line: 105, column: 13, scope: !615)
!629 = !DILocation(line: 109, column: 3, scope: !621)
!630 = !DILocation(line: 112, column: 12, scope: !621)
!631 = !DILocation(line: 113, column: 17, scope: !621)
!632 = !DILocation(line: 114, column: 10, scope: !621)
!633 = !DILocation(line: 119, column: 2, scope: !621)
!634 = !DILocation(line: 115, column: 23, scope: !621)
!635 = !DILocation(line: 115, column: 4, scope: !621)
!636 = distinct !DISubprogram(name: "cli.RunLocalCommand", linkageName: "command_line_arguments.RunLocalCommand", scope: null, file: !258, line: 19, type: !637, isLocal: false, isDefinition: true, scopeLine: 19, isOptimized: false, unit: !1, retainedNodes: !3)
!637 = !DISubroutineType(types: !638)
!638 = !{!639, !296, !667}
!639 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*CommandResult,error}", file: !50, size: 192, align: 8, elements: !640)
!640 = !{!641, !666}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 22, baseType: !642, size: 64, align: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "CommandResult", file: !258, line: 11, size: 768, align: 8, elements: !644)
!644 = !{!645, !650, !651, !661}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "Type", file: !258, line: 11, baseType: !646, size: 128, align: 64)
!646 = !DICompositeType(tag: DW_TAG_structure_type, name: "CommandType", file: !258, line: 11, size: 128, align: 8, elements: !647)
!647 = !{!648, !649}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "__data", file: !258, line: 1, baseType: !42, size: 64, align: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "__length", file: !258, line: 1, baseType: !13, size: 64, align: 64, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "Disconnected", file: !258, line: 11, baseType: !93, size: 8, align: 8, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "SessionState", file: !258, line: 11, baseType: !652, size: 320, align: 64, offset: 192)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "State", file: !258, line: 11, size: 320, align: 8, elements: !653)
!653 = !{!654, !655, !660}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "Warp", file: !258, line: 11, baseType: !39, size: 128, align: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "WindowSize", file: !258, line: 11, baseType: !656, size: 128, align: 64, offset: 128)
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "Size", file: !258, line: 11, size: 128, align: 8, elements: !657)
!657 = !{!658, !659}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "Rows", file: !258, line: 11, baseType: !13, size: 64, align: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "Cols", file: !258, line: 11, baseType: !13, size: 64, align: 64, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "Users", file: !258, line: 11, baseType: !8, size: 64, align: 64, offset: 256)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "Error", file: !258, line: 11, baseType: !662, size: 256, align: 64, offset: 512)
!662 = !DICompositeType(tag: DW_TAG_structure_type, name: "Error", file: !258, line: 11, size: 256, align: 8, elements: !663)
!663 = !{!664, !665}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "Code", file: !258, line: 11, baseType: !39, size: 128, align: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "Message", file: !258, line: 11, baseType: !39, size: 128, align: 64, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 22, baseType: !241, size: 128, align: 64, offset: 64)
!667 = !DICompositeType(tag: DW_TAG_structure_type, name: "Command", file: !258, line: 11, size: 320, align: 8, elements: !668)
!668 = !{!645, !669}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "Args", file: !258, line: 11, baseType: !100, size: 192, align: 64, offset: 128)
!670 = !DILocalVariable(name: "cmd", arg: 2, scope: !636, file: !258, line: 21, type: !667)
!671 = !DILocation(line: 21, column: 2, scope: !636)
!672 = !DILocalVariable(name: "ctx", arg: 1, scope: !636, file: !258, line: 20, type: !296)
!673 = !DILocation(line: 20, column: 2, scope: !636)
!674 = !DILocalVariable(name: "$ret11", scope: !636, file: !258, line: 22, type: !642)
!675 = !DILocation(line: 22, column: 4, scope: !636)
!676 = !DILocalVariable(name: "$ret12", scope: !636, file: !258, line: 22, type: !241)
!677 = !DILocation(line: 22, column: 25, scope: !636)
!678 = !DILocation(line: 24, column: 6, scope: !679)
!679 = distinct !DILexicalBlock(scope: !636, file: !258, line: 19, column: 1)
!680 = !DILocation(line: 60, column: 1, scope: !636)
!681 = !DILocation(line: 25, column: 35, scope: !679)
!682 = !DILocation(line: 25, column: 7, scope: !679)
!683 = !DILocation(line: 23, column: 12, scope: !679)
!684 = !DILocalVariable(name: "p", scope: !679, file: !258, line: 23, type: !39)
!685 = !DILocation(line: 23, column: 2, scope: !636)
!686 = !DILocation(line: 28, column: 19, scope: !679)
!687 = !DILocalVariable(name: "conn", scope: !679, file: !258, line: 28, type: !688)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "Conn", file: !258, line: 7, size: 128, align: 8, elements: !689)
!689 = !{!690, !708}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !258, line: 7, baseType: !691, size: 64, align: 64)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !50, size: 576, align: 8, elements: !693)
!693 = !{!694, !695, !696, !709, !717, !718, !722, !723, !724}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !50, line: 7, baseType: !188, size: 64, align: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !50, line: 7, baseType: !352, size: 64, align: 64, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "LocalAddr", file: !50, line: 7, baseType: !697, size: 64, align: 64, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!700, !22}
!700 = !DICompositeType(tag: DW_TAG_structure_type, name: "Addr", file: !258, line: 7, size: 128, align: 8, elements: !701)
!701 = !{!702, !708}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !258, line: 7, baseType: !703, size: 64, align: 64)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)string,*func(*void)string}", file: !50, size: 192, align: 8, elements: !705)
!705 = !{!694, !706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "Network", file: !50, line: 7, baseType: !249, size: 64, align: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "String", file: !50, line: 7, baseType: !249, size: 64, align: 64, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !258, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !50, line: 7, baseType: !710, size: 64, align: 64, offset: 192)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!713, !22, !89}
!713 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !50, size: 192, align: 8, elements: !714)
!714 = !{!715, !716}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !50, line: 7, baseType: !13, size: 64, align: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !50, line: 7, baseType: !241, size: 128, align: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "RemoteAddr", file: !50, line: 7, baseType: !697, size: 64, align: 64, offset: 256)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "SetDeadline", file: !50, line: 7, baseType: !719, size: 64, align: 64, offset: 320)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{!241, !22, !310}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "SetReadDeadline", file: !50, line: 7, baseType: !719, size: 64, align: 64, offset: 384)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "SetWriteDeadline", file: !50, line: 7, baseType: !719, size: 64, align: 64, offset: 448)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !50, line: 7, baseType: !710, size: 64, align: 64, offset: 512)
!725 = !DILocation(line: 28, column: 2, scope: !636)
!726 = !DILocalVariable(name: "err", scope: !679, file: !258, line: 28, type: !241)
!727 = !DILocation(line: 29, column: 9, scope: !679)
!728 = !DILocation(line: 34, column: 2, scope: !679)
!729 = !DILocation(line: 31, column: 50, scope: !679)
!730 = !DILocation(line: 31, column: 11, scope: !679)
!731 = !DILocation(line: 30, column: 22, scope: !679)
!732 = !DILocation(line: 36, column: 29, scope: !679)
!733 = !DILocation(line: 36, column: 18, scope: !679)
!734 = !DILocalVariable(name: "commandR", scope: !679, file: !258, line: 36, type: !735)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DICompositeType(tag: DW_TAG_structure_type, name: "Decoder", file: !258, line: 5, size: 1024, align: 8, elements: !737)
!737 = !{!738, !739, !754, !759, !760, !761, !762, !771, !772}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !258, line: 5, baseType: !106, size: 64, align: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !258, line: 5, baseType: !740, size: 128, align: 64, offset: 64)
!740 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !261, line: 5, size: 128, align: 8, elements: !741)
!741 = !{!742, !362}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !261, line: 5, baseType: !743, size: 64, align: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !50, size: 128, align: 8, elements: !745)
!745 = !{!187, !746}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !50, line: 5, baseType: !747, size: 64, align: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!750, !22, !89}
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{int,error}", file: !50, size: 192, align: 8, elements: !751)
!751 = !{!752, !753}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "n", file: !50, line: 5, baseType: !13, size: 64, align: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !50, line: 5, baseType: !241, size: 128, align: 64, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !258, line: 5, baseType: !755, size: 256, align: 64, offset: 192)
!755 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.decBuffer", file: !258, line: 5, size: 256, align: 8, elements: !756)
!756 = !{!757, !758}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "data", file: !258, line: 5, baseType: !89, size: 192, align: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "offset", file: !258, line: 5, baseType: !13, size: 64, align: 64, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "wireType", file: !258, line: 5, baseType: !8, size: 64, align: 64, offset: 448)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "decoderCache", file: !258, line: 5, baseType: !8, size: 64, align: 64, offset: 512)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "ignorerCache", file: !258, line: 5, baseType: !8, size: 64, align: 64, offset: 576)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "freeList", file: !258, line: 5, baseType: !763, size: 64, align: 64, offset: 640)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.decoderState", file: !258, line: 5, size: 256, align: 8, elements: !765)
!765 = !{!766, !767, !769, !770}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "dec", file: !258, line: 5, baseType: !22, size: 64, align: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !258, line: 5, baseType: !768, size: 64, align: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "fieldnum", file: !258, line: 5, baseType: !13, size: 64, align: 64, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "next", file: !258, line: 5, baseType: !22, size: 64, align: 64, offset: 192)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "countBuf", file: !258, line: 5, baseType: !89, size: 192, align: 64, offset: 704)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !258, line: 5, baseType: !241, size: 128, align: 64, offset: 896)
!773 = !DILocation(line: 36, column: 2, scope: !636)
!774 = !DILocation(line: 37, column: 29, scope: !679)
!775 = !DILocation(line: 37, column: 18, scope: !679)
!776 = !DILocalVariable(name: "commandW", scope: !679, file: !258, line: 37, type: !777)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DICompositeType(tag: DW_TAG_structure_type, name: "Encoder", file: !258, line: 5, size: 1280, align: 8, elements: !779)
!779 = !{!738, !780, !785, !786, !806, !807, !808}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !258, line: 5, baseType: !781, size: 192, align: 64, offset: 64)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Writer,int,int}", file: !50, size: 192, align: 8, elements: !782)
!782 = !{!783, !66, !67}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "__values", file: !50, line: 1, baseType: !784, size: 64, align: 64)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "sent", file: !258, line: 5, baseType: !8, size: 64, align: 64, offset: 256)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "countState", file: !258, line: 5, baseType: !787, size: 64, align: 64, offset: 320)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.encoderState", file: !258, line: 5, size: 448, align: 8, elements: !789)
!789 = !{!790, !791, !799, !800, !801, !805}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "enc", file: !258, line: 5, baseType: !22, size: 64, align: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "b", file: !258, line: 5, baseType: !792, size: 64, align: 64, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DICompositeType(tag: DW_TAG_structure_type, name: ".encoding/gob.encBuffer", file: !258, line: 5, size: 704, align: 8, elements: !794)
!794 = !{!757, !795}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", file: !258, line: 5, baseType: !796, size: 512, align: 8, offset: 192)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 512, align: 1, elements: !797)
!797 = !{!798}
!798 = !DISubrange(count: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "sendZero", file: !258, line: 5, baseType: !93, size: 8, align: 8, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "fieldnum", file: !258, line: 5, baseType: !13, size: 64, align: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !258, line: 5, baseType: !802, size: 72, align: 8, offset: 256)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 72, align: 1, elements: !803)
!803 = !{!804}
!804 = !DISubrange(count: 9)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "next", file: !258, line: 5, baseType: !22, size: 64, align: 64, offset: 384)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "freeList", file: !258, line: 5, baseType: !787, size: 64, align: 64, offset: 384)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "byteBuf", file: !258, line: 5, baseType: !793, size: 704, align: 64, offset: 448)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !258, line: 5, baseType: !241, size: 128, align: 64, offset: 1152)
!809 = !DILocation(line: 37, column: 2, scope: !636)
!810 = !DILocation(line: 39, column: 28, scope: !811)
!811 = distinct !DILexicalBlock(scope: !679, file: !258, line: 39, column: 2)
!812 = !DILocation(line: 39, column: 20, scope: !811)
!813 = !DILocalVariable(name: "err", scope: !811, file: !258, line: 39, type: !241)
!814 = !DILocation(line: 39, column: 5, scope: !679)
!815 = !DILocation(line: 39, column: 38, scope: !811)
!816 = !DILocation(line: 46, column: 6, scope: !679)
!817 = !DILocation(line: 41, column: 46, scope: !811)
!818 = !DILocation(line: 41, column: 11, scope: !811)
!819 = !DILocation(line: 40, column: 22, scope: !811)
!820 = !DILocalVariable(name: "result", scope: !679, file: !258, line: 46, type: !642)
!821 = !DILocation(line: 46, column: 6, scope: !636)
!822 = !DILocation(line: 47, column: 28, scope: !823)
!823 = distinct !DILexicalBlock(scope: !679, file: !258, line: 47, column: 2)
!824 = !DILocation(line: 47, column: 20, scope: !823)
!825 = !DILocalVariable(name: "err", scope: !823, file: !258, line: 47, type: !241)
!826 = !DILocation(line: 47, column: 5, scope: !679)
!827 = !DILocation(line: 47, column: 42, scope: !823)
!828 = !DILocation(line: 48, column: 22, scope: !823)
!829 = !DILocation(line: 51, column: 11, scope: !679)
!830 = !DILocation(line: 51, column: 23, scope: !679)
!831 = !DILocation(line: 55, column: 16, scope: !679)
!832 = !DILocation(line: 52, column: 22, scope: !679)
!833 = !DILocation(line: 30, column: 3, scope: !636)
!834 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk0", scope: null, file: !258, line: 34, type: !835, isLocal: true, isDefinition: true, scopeLine: 34, isOptimized: false, unit: !1, retainedNodes: !3)
!835 = !DISubroutineType(types: !836)
!836 = !{!93, !837}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Conn}", file: !50, size: 128, align: 8, elements: !839)
!839 = !{!840}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "object", file: !50, line: 34, baseType: !688, size: 128, align: 64)
!841 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !834, file: !258, line: 34, type: !837)
!842 = !DILocation(line: 34, column: 2, scope: !834)
!843 = !DILocalVariable(name: "$ret54", scope: !834, file: !258, line: 34, type: !93)
!844 = distinct !DISubprogram(name: "cli.CheckEnvWarp", linkageName: "command_line_arguments.CheckEnvWarp", scope: null, file: !258, line: 64, type: !845, isLocal: false, isDefinition: true, scopeLine: 64, isOptimized: false, unit: !1, retainedNodes: !3)
!845 = !DISubroutineType(types: !846)
!846 = !{!241, !296}
!847 = !DILocalVariable(name: "ctx", arg: 1, scope: !844, file: !258, line: 65, type: !296)
!848 = !DILocation(line: 65, column: 2, scope: !844)
!849 = !DILocation(line: 67, column: 8, scope: !844)
!850 = !DILocation(line: 67, column: 29, scope: !844)
!851 = !DILocalVariable(name: "$ret13", scope: !844, file: !258, line: 66, type: !241)
!852 = !DILocation(line: 66, column: 3, scope: !844)
!853 = !DILocation(line: 68, column: 3, scope: !844)
!854 = !DILocation(line: 70, column: 6, scope: !844)
!855 = !DILocation(line: 71, column: 6, scope: !844)
!856 = !DILocation(line: 72, column: 6, scope: !844)
!857 = !DILocation(line: 73, column: 6, scope: !844)
!858 = !DILocation(line: 74, column: 6, scope: !844)
!859 = !DILocation(line: 75, column: 6, scope: !844)
!860 = !DILocation(line: 76, column: 6, scope: !844)
!861 = !DILocation(line: 77, column: 6, scope: !844)
!862 = !DILocation(line: 78, column: 6, scope: !844)
!863 = !DILocation(line: 79, column: 6, scope: !844)
!864 = !DILocation(line: 82, column: 10, scope: !844)
!865 = !DILocation(line: 81, column: 16, scope: !844)
!866 = !DILocation(line: 81, column: 2, scope: !844)
!867 = distinct !DISubprogram(name: "cli.DataC..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.DataC", scope: null, file: !868, line: 145, type: !869, isLocal: false, isDefinition: true, scopeLine: 145, isOptimized: false, unit: !1, retainedNodes: !3)
!868 = !DIFile(filename: "session.go", directory: ".")
!869 = !DISubroutineType(types: !870)
!870 = !{!688, !871, !871}
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DICompositeType(tag: DW_TAG_structure_type, name: "Session", file: !868, line: 18, size: 1920, align: 8, elements: !873)
!873 = !{!874, !880, !881, !883, !884, !885, !949, !950, !951, !952, !953, !954, !955, !956, !964, !965, !971}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "session", file: !868, line: 19, baseType: !875, size: 384, align: 64)
!875 = !DICompositeType(tag: DW_TAG_structure_type, name: "Session", file: !258, line: 11, size: 384, align: 8, elements: !876)
!876 = !{!877, !878, !879}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "Token", file: !258, line: 11, baseType: !39, size: 128, align: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "User", file: !258, line: 11, baseType: !39, size: 128, align: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "Secret", file: !258, line: 11, baseType: !39, size: 128, align: 64, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "warp", file: !868, line: 21, baseType: !39, size: 128, align: 64, offset: 384)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "sessionType", file: !868, line: 22, baseType: !882, size: 128, align: 64, offset: 512)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "SessionType", file: !258, line: 11, size: 128, align: 8, elements: !647)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "username", file: !868, line: 23, baseType: !39, size: 128, align: 64, offset: 640)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "conn", file: !868, line: 25, baseType: !688, size: 128, align: 64, offset: 768)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "mux", file: !868, line: 26, baseType: !886, size: 64, align: 64, offset: 896)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "Session", file: !868, line: 11, size: 1408, align: 8, elements: !888)
!888 = !{!889, !890, !891, !892, !903, !912, !924, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "remoteGoAway", file: !868, line: 11, baseType: !65, size: 32, align: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "localGoAway", file: !868, line: 11, baseType: !65, size: 32, align: 32, offset: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "nextStreamID", file: !868, line: 11, baseType: !20, size: 32, align: 32, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "config", file: !868, line: 11, baseType: !893, size: 64, align: 64, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DICompositeType(tag: DW_TAG_structure_type, name: "Config", file: !868, line: 11, size: 448, align: 8, elements: !895)
!895 = !{!896, !897, !898, !900, !901, !902}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "AcceptBacklog", file: !868, line: 11, baseType: !13, size: 64, align: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "EnableKeepAlive", file: !868, line: 11, baseType: !93, size: 8, align: 8, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "KeepAliveInterval", file: !868, line: 11, baseType: !899, size: 64, align: 64, offset: 128)
!899 = !DIBasicType(name: "Duration", size: 64, encoding: DW_ATE_signed)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "ConnectionWriteTimeout", file: !868, line: 11, baseType: !899, size: 64, align: 64, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "MaxStreamWindowSize", file: !868, line: 11, baseType: !20, size: 32, align: 32, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "LogOutput", file: !868, line: 11, baseType: !262, size: 128, align: 64, offset: 320)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "logger", file: !868, line: 11, baseType: !904, size: 64, align: 64, offset: 192)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "Logger", file: !868, line: 11, size: 576, align: 8, elements: !906)
!906 = !{!907, !908, !909, !910, !911}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "mu", file: !868, line: 11, baseType: !106, size: 64, align: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", file: !868, line: 11, baseType: !39, size: 128, align: 64, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flag", file: !868, line: 11, baseType: !13, size: 64, align: 64, offset: 192)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "out", file: !868, line: 11, baseType: !262, size: 128, align: 64, offset: 256)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !868, line: 11, baseType: !89, size: 192, align: 64, offset: 384)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "conn", file: !868, line: 11, baseType: !913, size: 128, align: 64, offset: 256)
!913 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReadWriteCloser", file: !868, line: 11, size: 128, align: 8, elements: !914)
!914 = !{!915, !923}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !868, line: 11, baseType: !916, size: 64, align: 64)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}", file: !50, size: 256, align: 8, elements: !918)
!918 = !{!919, !920, !921, !922}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "__type_descriptor", file: !50, line: 11, baseType: !188, size: 64, align: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !50, line: 11, baseType: !352, size: 64, align: 64, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "Read", file: !50, line: 11, baseType: !747, size: 64, align: 64, offset: 128)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "Write", file: !50, line: 11, baseType: !270, size: 64, align: 64, offset: 192)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "__object", file: !868, line: 1, baseType: !22, size: 64, align: 64, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "bufRead", file: !868, line: 11, baseType: !925, size: 64, align: 64, offset: 384)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DICompositeType(tag: DW_TAG_structure_type, name: "Reader", file: !868, line: 11, size: 704, align: 8, elements: !927)
!927 = !{!928, !929, !930, !931, !932, !933, !934}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "buf", file: !868, line: 11, baseType: !89, size: 192, align: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "rd", file: !868, line: 11, baseType: !740, size: 128, align: 64, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "r", file: !868, line: 11, baseType: !13, size: 64, align: 64, offset: 320)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "w", file: !868, line: 11, baseType: !13, size: 64, align: 64, offset: 384)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "err", file: !868, line: 11, baseType: !241, size: 128, align: 64, offset: 448)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "lastByte", file: !868, line: 11, baseType: !13, size: 64, align: 64, offset: 576)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lastRuneSize", file: !868, line: 11, baseType: !13, size: 64, align: 64, offset: 640)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "pings", file: !868, line: 11, baseType: !8, size: 64, align: 64, offset: 448)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "pingID", file: !868, line: 11, baseType: !20, size: 32, align: 32, offset: 512)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pingLock", file: !868, line: 11, baseType: !106, size: 64, align: 32, offset: 544)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "streams", file: !868, line: 11, baseType: !8, size: 64, align: 64, offset: 640)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "inflight", file: !868, line: 11, baseType: !8, size: 64, align: 64, offset: 704)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "streamLock", file: !868, line: 11, baseType: !106, size: 64, align: 32, offset: 768)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "synCh", file: !868, line: 11, baseType: !349, size: 64, align: 64, offset: 832)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "acceptCh", file: !868, line: 11, baseType: !349, size: 64, align: 64, offset: 896)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "sendCh", file: !868, line: 11, baseType: !349, size: 64, align: 64, offset: 960)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "recvDoneCh", file: !868, line: 11, baseType: !349, size: 64, align: 64, offset: 1024)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", file: !868, line: 11, baseType: !93, size: 8, align: 8, offset: 1088)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "shutdownErr", file: !868, line: 11, baseType: !241, size: 128, align: 64, offset: 1152)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "shutdownCh", file: !868, line: 11, baseType: !349, size: 64, align: 64, offset: 1280)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "shutdownLock", file: !868, line: 11, baseType: !106, size: 64, align: 32, offset: 1344)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "stateC", file: !868, line: 28, baseType: !688, size: 128, align: 64, offset: 960)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "stateR", file: !868, line: 29, baseType: !735, size: 64, align: 64, offset: 1088)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "updateC", file: !868, line: 30, baseType: !688, size: 128, align: 64, offset: 1152)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "updateW", file: !868, line: 31, baseType: !777, size: 64, align: 64, offset: 1280)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "errorC", file: !868, line: 32, baseType: !688, size: 128, align: 64, offset: 1344)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "errorR", file: !868, line: 33, baseType: !735, size: 64, align: 64, offset: 1472)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "dataC", file: !868, line: 34, baseType: !688, size: 128, align: 64, offset: 1536)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "state", file: !868, line: 36, baseType: !957, size: 64, align: 64, offset: 1664)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DICompositeType(tag: DW_TAG_structure_type, name: "WarpState", file: !959, line: 11, size: 320, align: 8, elements: !960)
!959 = !DIFile(filename: "warp_state.go", directory: ".")
!960 = !{!961, !962, !963}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "token", file: !959, line: 12, baseType: !39, size: 128, align: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "windowSize", file: !959, line: 14, baseType: !656, size: 128, align: 64, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "users", file: !959, line: 15, baseType: !8, size: 64, align: 64, offset: 256)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "tornDown", file: !868, line: 38, baseType: !93, size: 8, align: 8, offset: 1728)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", file: !868, line: 39, baseType: !966, size: 64, align: 64, offset: 1792)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DICompositeType(tag: DW_TAG_structure_type, name: "__go_descriptor", file: !868, line: 39, size: 64, align: 8, elements: !968)
!968 = !{!969}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "code", file: !868, line: 39, baseType: !970, size: 64, align: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !868, line: 41, baseType: !972, size: 64, align: 64, offset: 1856)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!973 = !DILocalVariable(name: "ss", arg: 1, scope: !867, file: !868, line: 145, type: !871)
!974 = !DILocation(line: 145, column: 1, scope: !867)
!975 = !DILocalVariable(name: "$ret16", scope: !867, file: !868, line: 145, type: !688)
!976 = !DILocation(line: 145, column: 28, scope: !867)
!977 = !DILocation(line: 146, column: 4, scope: !867)
!978 = !DILocation(line: 149, column: 1, scope: !867)
!979 = !DILocation(line: 146, column: 10, scope: !867)
!980 = !DILocation(line: 147, column: 10, scope: !867)
!981 = !DILocation(line: 147, column: 2, scope: !867)
!982 = !DILocation(line: 148, column: 2, scope: !867)
!983 = distinct !DISubprogram(name: "cli.DecodeError..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.DecodeError", scope: null, file: !868, line: 275, type: !984, isLocal: false, isDefinition: true, scopeLine: 275, isOptimized: false, unit: !1, retainedNodes: !3)
!984 = !DISubroutineType(types: !985)
!985 = !{!986, !871, !871, !296}
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Error,error}", file: !50, size: 192, align: 8, elements: !987)
!987 = !{!988, !990}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 277, baseType: !989, size: 64, align: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 277, baseType: !241, size: 128, align: 64, offset: 64)
!991 = !DILocalVariable(name: "ss", arg: 1, scope: !983, file: !868, line: 275, type: !871)
!992 = !DILocation(line: 275, column: 1, scope: !983)
!993 = !DILocalVariable(name: "ctx", arg: 2, scope: !983, file: !868, line: 276, type: !296)
!994 = !DILocation(line: 276, column: 2, scope: !983)
!995 = !DILocalVariable(name: "$ret29", scope: !983, file: !868, line: 277, type: !989)
!996 = !DILocation(line: 277, column: 4, scope: !983)
!997 = !DILocation(line: 278, column: 6, scope: !998)
!998 = distinct !DILexicalBlock(scope: !983, file: !868, line: 275, column: 1)
!999 = !DILocalVariable(name: "e", scope: !998, file: !868, line: 278, type: !989)
!1000 = !DILocation(line: 278, column: 6, scope: !983)
!1001 = !DILocation(line: 279, column: 14, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !998, file: !868, line: 279, column: 2)
!1003 = !DILocation(line: 279, column: 29, scope: !1002)
!1004 = !DILocation(line: 279, column: 21, scope: !1002)
!1005 = !DILocalVariable(name: "err", scope: !1002, file: !868, line: 279, type: !241)
!1006 = !DILocation(line: 279, column: 5, scope: !998)
!1007 = !DILocation(line: 279, column: 38, scope: !1002)
!1008 = !DILocation(line: 280, column: 22, scope: !1002)
!1009 = !DILocalVariable(name: "$ret30", scope: !983, file: !868, line: 277, type: !241)
!1010 = !DILocation(line: 277, column: 17, scope: !983)
!1011 = !DILocation(line: 280, column: 3, scope: !1002)
!1012 = !DILocation(line: 282, column: 2, scope: !998)
!1013 = distinct !DISubprogram(name: "cli.DecodeState..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.DecodeState", scope: null, file: !868, line: 287, type: !1014, isLocal: false, isDefinition: true, scopeLine: 287, isOptimized: false, unit: !1, retainedNodes: !3)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!1016, !871, !871, !296}
!1016 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*State,error}", file: !50, size: 192, align: 8, elements: !1017)
!1017 = !{!1018, !1020}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 289, baseType: !1019, size: 64, align: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 289, baseType: !241, size: 128, align: 64, offset: 64)
!1021 = !DILocalVariable(name: "ss", arg: 1, scope: !1013, file: !868, line: 287, type: !871)
!1022 = !DILocation(line: 287, column: 1, scope: !1013)
!1023 = !DILocalVariable(name: "ctx", arg: 2, scope: !1013, file: !868, line: 288, type: !296)
!1024 = !DILocation(line: 288, column: 2, scope: !1013)
!1025 = !DILocalVariable(name: "$ret31", scope: !1013, file: !868, line: 289, type: !1019)
!1026 = !DILocation(line: 289, column: 4, scope: !1013)
!1027 = !DILocation(line: 290, column: 6, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !1013, file: !868, line: 287, column: 1)
!1029 = !DILocalVariable(name: "st", scope: !1028, file: !868, line: 290, type: !1019)
!1030 = !DILocation(line: 290, column: 6, scope: !1013)
!1031 = !DILocation(line: 291, column: 14, scope: !1032)
!1032 = distinct !DILexicalBlock(scope: !1028, file: !868, line: 291, column: 2)
!1033 = !DILocation(line: 291, column: 29, scope: !1032)
!1034 = !DILocation(line: 291, column: 21, scope: !1032)
!1035 = !DILocalVariable(name: "err", scope: !1032, file: !868, line: 291, type: !241)
!1036 = !DILocation(line: 291, column: 5, scope: !1028)
!1037 = !DILocation(line: 291, column: 39, scope: !1032)
!1038 = !DILocation(line: 292, column: 22, scope: !1032)
!1039 = !DILocalVariable(name: "$ret32", scope: !1013, file: !868, line: 289, type: !241)
!1040 = !DILocation(line: 289, column: 17, scope: !1013)
!1041 = !DILocation(line: 292, column: 3, scope: !1032)
!1042 = !DILocation(line: 294, column: 2, scope: !1028)
!1043 = distinct !DISubprogram(name: "cli.GetMode..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.GetMode", scope: null, file: !868, line: 185, type: !1044, isLocal: false, isDefinition: true, scopeLine: 185, isOptimized: false, unit: !1, retainedNodes: !3)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!1046, !871, !871, !39}
!1046 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Mode,error}", file: !50, size: 192, align: 8, elements: !1047)
!1047 = !{!1048, !1051}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 187, baseType: !1049, size: 64, align: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DIBasicType(name: "Mode", size: 64, encoding: DW_ATE_unsigned)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 187, baseType: !241, size: 128, align: 64, offset: 64)
!1052 = !DILocalVariable(name: "ss", arg: 1, scope: !1043, file: !868, line: 185, type: !871)
!1053 = !DILocation(line: 185, column: 1, scope: !1043)
!1054 = !DILocalVariable(name: "user", arg: 2, scope: !1043, file: !868, line: 186, type: !39)
!1055 = !DILocation(line: 186, column: 2, scope: !1043)
!1056 = !DILocalVariable(name: "$ret20", scope: !1043, file: !868, line: 187, type: !1049)
!1057 = !DILocation(line: 187, column: 4, scope: !1043)
!1058 = !DILocation(line: 188, column: 4, scope: !1043)
!1059 = !DILocation(line: 191, column: 1, scope: !1043)
!1060 = !DILocation(line: 188, column: 10, scope: !1043)
!1061 = !DILocation(line: 189, column: 10, scope: !1043)
!1062 = !DILocation(line: 189, column: 2, scope: !1043)
!1063 = !DILocation(line: 190, column: 11, scope: !1043)
!1064 = !DILocation(line: 190, column: 17, scope: !1043)
!1065 = !DILocation(line: 190, column: 2, scope: !1043)
!1066 = distinct !DISubprogram(name: "cli.HostCanReceiveWrite..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.HostCanReceiveWrite", scope: null, file: !868, line: 215, type: !1067, isLocal: false, isDefinition: true, scopeLine: 215, isOptimized: false, unit: !1, retainedNodes: !3)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!93, !871, !871}
!1069 = !DILocalVariable(name: "ss", arg: 1, scope: !1066, file: !868, line: 215, type: !871)
!1070 = !DILocation(line: 215, column: 1, scope: !1066)
!1071 = !DILocalVariable(name: "$ret24", scope: !1066, file: !868, line: 215, type: !93)
!1072 = !DILocation(line: 215, column: 42, scope: !1066)
!1073 = !DILocation(line: 216, column: 4, scope: !1066)
!1074 = !DILocation(line: 219, column: 1, scope: !1066)
!1075 = !DILocation(line: 216, column: 10, scope: !1066)
!1076 = !DILocation(line: 217, column: 10, scope: !1066)
!1077 = !DILocation(line: 217, column: 2, scope: !1066)
!1078 = !DILocation(line: 218, column: 11, scope: !1066)
!1079 = !DILocation(line: 218, column: 17, scope: !1066)
!1080 = !DILocation(line: 218, column: 2, scope: !1066)
!1081 = distinct !DISubprogram(name: "cli.Modes..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.Modes", scope: null, file: !868, line: 229, type: !1082, isLocal: false, isDefinition: true, scopeLine: 229, isOptimized: false, unit: !1, retainedNodes: !3)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!8, !871, !871}
!1084 = !DILocalVariable(name: "ss", arg: 1, scope: !1081, file: !868, line: 229, type: !871)
!1085 = !DILocation(line: 229, column: 1, scope: !1081)
!1086 = !DILocalVariable(name: "$ret26", scope: !1081, file: !868, line: 229, type: !8)
!1087 = !DILocation(line: 229, column: 28, scope: !1081)
!1088 = !DILocation(line: 230, column: 4, scope: !1081)
!1089 = !DILocation(line: 233, column: 1, scope: !1081)
!1090 = !DILocation(line: 230, column: 10, scope: !1081)
!1091 = !DILocation(line: 231, column: 10, scope: !1081)
!1092 = !DILocation(line: 231, column: 2, scope: !1081)
!1093 = !DILocation(line: 232, column: 11, scope: !1081)
!1094 = !DILocation(line: 232, column: 17, scope: !1081)
!1095 = !DILocation(line: 232, column: 2, scope: !1081)
!1096 = distinct !DISubprogram(name: "cli.ProtocolState..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.ProtocolState", scope: null, file: !868, line: 178, type: !1097, isLocal: false, isDefinition: true, scopeLine: 178, isOptimized: false, unit: !1, retainedNodes: !3)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!652, !871, !871}
!1099 = !DILocalVariable(name: "ss", arg: 1, scope: !1096, file: !868, line: 178, type: !871)
!1100 = !DILocation(line: 178, column: 1, scope: !1096)
!1101 = !DILocation(line: 179, column: 4, scope: !1096)
!1102 = !DILocation(line: 182, column: 1, scope: !1096)
!1103 = !DILocation(line: 179, column: 10, scope: !1096)
!1104 = !DILocation(line: 180, column: 10, scope: !1096)
!1105 = !DILocation(line: 180, column: 2, scope: !1096)
!1106 = !DILocation(line: 181, column: 11, scope: !1096)
!1107 = !DILocation(line: 181, column: 17, scope: !1096)
!1108 = !DILocation(line: 181, column: 2, scope: !1096)
!1109 = distinct !DISubprogram(name: "cli.SendHostUpdate..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.SendHostUpdate", scope: null, file: !868, line: 255, type: !1110, isLocal: false, isDefinition: true, scopeLine: 255, isOptimized: false, unit: !1, retainedNodes: !3)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!241, !871, !871, !296, !1112}
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "HostUpdate", file: !258, line: 11, size: 704, align: 8, elements: !1113)
!1113 = !{!654, !1114, !1115, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "From", file: !258, line: 11, baseType: !875, size: 384, align: 64, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "WindowSize", file: !258, line: 11, baseType: !656, size: 128, align: 64, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "Modes", file: !258, line: 11, baseType: !8, size: 64, align: 64, offset: 640)
!1117 = !DILocalVariable(name: "update", arg: 3, scope: !1109, file: !868, line: 257, type: !1112)
!1118 = !DILocation(line: 257, column: 2, scope: !1109)
!1119 = !DILocalVariable(name: "ss", arg: 1, scope: !1109, file: !868, line: 255, type: !871)
!1120 = !DILocation(line: 255, column: 1, scope: !1109)
!1121 = !DILocalVariable(name: "ctx", arg: 2, scope: !1109, file: !868, line: 256, type: !296)
!1122 = !DILocation(line: 256, column: 2, scope: !1109)
!1123 = !DILocalVariable(name: "$ret28", scope: !1109, file: !868, line: 258, type: !241)
!1124 = !DILocation(line: 258, column: 3, scope: !1109)
!1125 = !DILocation(line: 259, column: 4, scope: !1109)
!1126 = !DILocation(line: 267, column: 1, scope: !1109)
!1127 = !DILocation(line: 259, column: 10, scope: !1109)
!1128 = !DILocation(line: 260, column: 10, scope: !1109)
!1129 = !DILocation(line: 260, column: 2, scope: !1109)
!1130 = !DILocation(line: 261, column: 8, scope: !1109)
!1131 = !DILocation(line: 261, column: 5, scope: !1109)
!1132 = !DILocation(line: 262, column: 15, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1109, file: !868, line: 262, column: 3)
!1134 = !DILocation(line: 262, column: 31, scope: !1133)
!1135 = !DILocation(line: 262, column: 23, scope: !1133)
!1136 = !DILocalVariable(name: "err", scope: !1133, file: !868, line: 262, type: !241)
!1137 = !DILocation(line: 262, column: 6, scope: !1109)
!1138 = !DILocation(line: 262, column: 44, scope: !1133)
!1139 = !DILocation(line: 263, column: 18, scope: !1133)
!1140 = !DILocation(line: 263, column: 4, scope: !1109)
!1141 = distinct !DISubprogram(name: "cli.Session..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.Session", scope: null, file: !868, line: 171, type: !1142, isLocal: false, isDefinition: true, scopeLine: 171, isOptimized: false, unit: !1, retainedNodes: !3)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!875, !871, !871}
!1144 = !DILocalVariable(name: "ss", arg: 1, scope: !1141, file: !868, line: 171, type: !871)
!1145 = !DILocation(line: 171, column: 1, scope: !1141)
!1146 = !DILocation(line: 172, column: 4, scope: !1141)
!1147 = !DILocation(line: 175, column: 1, scope: !1141)
!1148 = !DILocation(line: 172, column: 10, scope: !1141)
!1149 = !DILocation(line: 173, column: 10, scope: !1141)
!1150 = !DILocation(line: 173, column: 2, scope: !1141)
!1151 = !DILocation(line: 174, column: 2, scope: !1141)
!1152 = distinct !DISubprogram(name: "cli.SetMode..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.SetMode", scope: null, file: !868, line: 194, type: !1153, isLocal: false, isDefinition: true, scopeLine: 194, isOptimized: false, unit: !1, retainedNodes: !3)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!241, !871, !871, !39, !1050}
!1155 = !DILocalVariable(name: "ss", arg: 1, scope: !1152, file: !868, line: 194, type: !871)
!1156 = !DILocation(line: 194, column: 1, scope: !1152)
!1157 = !DILocalVariable(name: "user", arg: 2, scope: !1152, file: !868, line: 195, type: !39)
!1158 = !DILocation(line: 195, column: 2, scope: !1152)
!1159 = !DILocalVariable(name: "mode", arg: 3, scope: !1152, file: !868, line: 196, type: !1050)
!1160 = !DILocation(line: 196, column: 2, scope: !1152)
!1161 = !DILocalVariable(name: "$ret22", scope: !1152, file: !868, line: 197, type: !241)
!1162 = !DILocation(line: 197, column: 3, scope: !1152)
!1163 = !DILocation(line: 198, column: 4, scope: !1152)
!1164 = !DILocation(line: 201, column: 1, scope: !1152)
!1165 = !DILocation(line: 198, column: 10, scope: !1152)
!1166 = !DILocation(line: 199, column: 10, scope: !1152)
!1167 = !DILocation(line: 199, column: 2, scope: !1152)
!1168 = !DILocation(line: 200, column: 11, scope: !1152)
!1169 = !DILocation(line: 200, column: 17, scope: !1152)
!1170 = !DILocation(line: 200, column: 2, scope: !1152)
!1171 = distinct !DISubprogram(name: "cli.TearDown..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.TearDown", scope: null, file: !868, line: 243, type: !1172, isLocal: false, isDefinition: true, scopeLine: 243, isOptimized: false, unit: !1, retainedNodes: !3)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!23, !871, !871}
!1174 = !DILocalVariable(name: "ss", arg: 1, scope: !1171, file: !868, line: 243, type: !871)
!1175 = !DILocation(line: 243, column: 1, scope: !1171)
!1176 = !DILocation(line: 244, column: 4, scope: !1171)
!1177 = !DILocation(line: 252, column: 1, scope: !1171)
!1178 = !DILocation(line: 244, column: 10, scope: !1171)
!1179 = !DILocation(line: 245, column: 10, scope: !1171)
!1180 = !DILocation(line: 245, column: 2, scope: !1171)
!1181 = !DILocation(line: 246, column: 8, scope: !1171)
!1182 = !DILocation(line: 246, column: 5, scope: !1171)
!1183 = !DILocation(line: 247, column: 15, scope: !1171)
!1184 = !DILocation(line: 248, column: 5, scope: !1171)
!1185 = !DILocation(line: 250, column: 5, scope: !1171)
!1186 = !DILocation(line: 250, column: 9, scope: !1171)
!1187 = distinct !DISubprogram(name: "cli.TornDown..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.TornDown", scope: null, file: !868, line: 236, type: !1067, isLocal: false, isDefinition: true, scopeLine: 236, isOptimized: false, unit: !1, retainedNodes: !3)
!1188 = !DILocalVariable(name: "ss", arg: 1, scope: !1187, file: !868, line: 236, type: !871)
!1189 = !DILocation(line: 236, column: 1, scope: !1187)
!1190 = !DILocalVariable(name: "$ret27", scope: !1187, file: !868, line: 236, type: !93)
!1191 = !DILocation(line: 236, column: 31, scope: !1187)
!1192 = !DILocation(line: 237, column: 4, scope: !1187)
!1193 = !DILocation(line: 240, column: 1, scope: !1187)
!1194 = !DILocation(line: 237, column: 10, scope: !1187)
!1195 = !DILocation(line: 238, column: 10, scope: !1187)
!1196 = !DILocation(line: 238, column: 2, scope: !1187)
!1197 = !DILocation(line: 239, column: 11, scope: !1187)
!1198 = !DILocation(line: 239, column: 2, scope: !1187)
!1199 = distinct !DISubprogram(name: "cli.UpdateState..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.UpdateState", scope: null, file: !868, line: 204, type: !1200, isLocal: false, isDefinition: true, scopeLine: 204, isOptimized: false, unit: !1, retainedNodes: !3)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!241, !871, !871, !652, !93}
!1202 = !DILocalVariable(name: "state", arg: 2, scope: !1199, file: !868, line: 205, type: !652)
!1203 = !DILocation(line: 205, column: 2, scope: !1199)
!1204 = !DILocalVariable(name: "ss", arg: 1, scope: !1199, file: !868, line: 204, type: !871)
!1205 = !DILocation(line: 204, column: 1, scope: !1199)
!1206 = !DILocalVariable(name: "hosting", arg: 3, scope: !1199, file: !868, line: 206, type: !93)
!1207 = !DILocation(line: 206, column: 2, scope: !1199)
!1208 = !DILocalVariable(name: "$ret23", scope: !1199, file: !868, line: 207, type: !241)
!1209 = !DILocation(line: 207, column: 3, scope: !1199)
!1210 = !DILocation(line: 208, column: 4, scope: !1199)
!1211 = !DILocation(line: 211, column: 1, scope: !1199)
!1212 = !DILocation(line: 208, column: 10, scope: !1199)
!1213 = !DILocation(line: 209, column: 10, scope: !1199)
!1214 = !DILocation(line: 209, column: 2, scope: !1199)
!1215 = !DILocation(line: 210, column: 11, scope: !1199)
!1216 = !DILocation(line: 210, column: 17, scope: !1199)
!1217 = !DILocation(line: 210, column: 2, scope: !1199)
!1218 = distinct !DISubprogram(name: "cli.Warp..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.Warp", scope: null, file: !868, line: 164, type: !1219, isLocal: false, isDefinition: true, scopeLine: 164, isOptimized: false, unit: !1, retainedNodes: !3)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!39, !871, !871}
!1221 = !DILocalVariable(name: "ss", arg: 1, scope: !1218, file: !868, line: 164, type: !871)
!1222 = !DILocation(line: 164, column: 1, scope: !1218)
!1223 = !DILocalVariable(name: "$ret17", scope: !1218, file: !868, line: 164, type: !39)
!1224 = !DILocation(line: 164, column: 27, scope: !1218)
!1225 = !DILocation(line: 165, column: 4, scope: !1218)
!1226 = !DILocation(line: 168, column: 1, scope: !1218)
!1227 = !DILocation(line: 165, column: 10, scope: !1218)
!1228 = !DILocation(line: 166, column: 10, scope: !1218)
!1229 = !DILocation(line: 166, column: 2, scope: !1218)
!1230 = !DILocation(line: 167, column: 2, scope: !1218)
!1231 = distinct !DISubprogram(name: "cli.WindowSize..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.WindowSize", scope: null, file: !868, line: 222, type: !1232, isLocal: false, isDefinition: true, scopeLine: 222, isOptimized: false, unit: !1, retainedNodes: !3)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!656, !871, !871}
!1234 = !DILocalVariable(name: "ss", arg: 1, scope: !1231, file: !868, line: 222, type: !871)
!1235 = !DILocation(line: 222, column: 1, scope: !1231)
!1236 = !DILocalVariable(name: "$ret25", scope: !1231, file: !868, line: 222, type: !656)
!1237 = !DILocation(line: 222, column: 33, scope: !1231)
!1238 = !DILocation(line: 223, column: 4, scope: !1231)
!1239 = !DILocation(line: 226, column: 1, scope: !1231)
!1240 = !DILocation(line: 223, column: 10, scope: !1231)
!1241 = !DILocation(line: 224, column: 10, scope: !1231)
!1242 = !DILocation(line: 224, column: 2, scope: !1231)
!1243 = !DILocation(line: 225, column: 11, scope: !1231)
!1244 = !DILocation(line: 225, column: 17, scope: !1231)
!1245 = !DILocation(line: 225, column: 2, scope: !1231)
!1246 = distinct !DISubprogram(name: "cli.WriteDataC..1command_line_arguments.Session", linkageName: "command_line_arguments.Session.WriteDataC", scope: null, file: !868, line: 153, type: !1247, isLocal: false, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !1, retainedNodes: !3)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!23, !871, !871, !89}
!1249 = !DILocalVariable(name: "data", arg: 2, scope: !1246, file: !868, line: 154, type: !89)
!1250 = !DILocation(line: 154, column: 2, scope: !1246)
!1251 = !DILocalVariable(name: "ss", arg: 1, scope: !1246, file: !868, line: 153, type: !871)
!1252 = !DILocation(line: 153, column: 1, scope: !1246)
!1253 = !DILocation(line: 156, column: 4, scope: !1246)
!1254 = !DILocation(line: 161, column: 1, scope: !1246)
!1255 = !DILocation(line: 156, column: 10, scope: !1246)
!1256 = !DILocation(line: 157, column: 10, scope: !1246)
!1257 = !DILocation(line: 157, column: 2, scope: !1246)
!1258 = !DILocation(line: 158, column: 8, scope: !1246)
!1259 = !DILocation(line: 158, column: 5, scope: !1246)
!1260 = !DILocation(line: 159, column: 11, scope: !1246)
!1261 = distinct !DISubprogram(name: "cli.GetMode..1command_line_arguments.WarpState", linkageName: "command_line_arguments.WarpState.GetMode", scope: null, file: !959, line: 132, type: !1262, isLocal: false, isDefinition: true, scopeLine: 132, isOptimized: false, unit: !1, retainedNodes: !3)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1046, !957, !957, !39}
!1264 = !DILocalVariable(name: "w", arg: 1, scope: !1261, file: !959, line: 132, type: !957)
!1265 = !DILocation(line: 132, column: 1, scope: !1261)
!1266 = !DILocalVariable(name: "user", arg: 2, scope: !1261, file: !959, line: 133, type: !39)
!1267 = !DILocation(line: 133, column: 2, scope: !1261)
!1268 = !DILocalVariable(name: "$ret47", scope: !1261, file: !959, line: 134, type: !1049)
!1269 = !DILocation(line: 134, column: 4, scope: !1261)
!1270 = !DILocation(line: 135, column: 2, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1261, file: !959, line: 132, column: 1)
!1272 = !DILocalVariable(name: "userState", scope: !1271, file: !959, line: 135, type: !1273)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DICompositeType(tag: DW_TAG_structure_type, name: "UserState", file: !959, line: 19, size: 384, align: 8, elements: !1275)
!1275 = !{!1276, !1277, !1278, !1279}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "token", file: !959, line: 20, baseType: !39, size: 128, align: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "username", file: !959, line: 21, baseType: !39, size: 128, align: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "mode", file: !959, line: 22, baseType: !1050, size: 64, align: 64, offset: 256)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "hosting", file: !959, line: 23, baseType: !93, size: 8, align: 8, offset: 320)
!1280 = !DILocation(line: 135, column: 2, scope: !1261)
!1281 = !DILocalVariable(name: "ok", scope: !1271, file: !959, line: 135, type: !93)
!1282 = !DILocation(line: 135, column: 20, scope: !1271)
!1283 = !DILocation(line: 136, column: 5, scope: !1271)
!1284 = !DILocation(line: 138, column: 11, scope: !1271)
!1285 = !DILocation(line: 137, column: 22, scope: !1271)
!1286 = !DILocalVariable(name: "$ret48", scope: !1261, file: !959, line: 134, type: !241)
!1287 = !DILocation(line: 134, column: 16, scope: !1261)
!1288 = !DILocation(line: 137, column: 3, scope: !1271)
!1289 = !DILocation(line: 142, column: 19, scope: !1271)
!1290 = !DILocation(line: 142, column: 2, scope: !1271)
!1291 = distinct !DISubprogram(name: "cli.HostCanReceiveWrite..1command_line_arguments.WarpState", linkageName: "command_line_arguments.WarpState.HostCanReceiveWrite", scope: null, file: !959, line: 166, type: !1292, isLocal: false, isDefinition: true, scopeLine: 166, isOptimized: false, unit: !1, retainedNodes: !3)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!93, !957, !957}
!1294 = !DILocalVariable(name: "w", arg: 1, scope: !1291, file: !959, line: 166, type: !957)
!1295 = !DILocation(line: 166, column: 1, scope: !1291)
!1296 = !DILocalVariable(name: "$ret50", scope: !1291, file: !959, line: 166, type: !93)
!1297 = !DILocation(line: 166, column: 43, scope: !1291)
!1298 = !DILocalVariable(name: "can", scope: !1299, file: !959, line: 167, type: !93)
!1299 = distinct !DILexicalBlock(scope: !1291, file: !959, line: 166, column: 1)
!1300 = !DILocation(line: 167, column: 2, scope: !1291)
!1301 = !DILocation(line: 168, column: 24, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1299, file: !959, line: 168, column: 2)
!1303 = !DILocation(line: 168, column: 2, scope: !1302)
!1304 = !DILocalVariable(name: "user", scope: !1302, file: !959, line: 168, type: !1274)
!1305 = !DILocation(line: 168, column: 6, scope: !1299)
!1306 = !DILocation(line: 169, column: 32, scope: !1302)
!1307 = !DILocation(line: 169, column: 53, scope: !1302)
!1308 = !DILocation(line: 169, column: 6, scope: !1302)
!1309 = !DILocation(line: 173, column: 2, scope: !1299)
!1310 = distinct !DISubprogram(name: "cli.Modes..1command_line_arguments.WarpState", linkageName: "command_line_arguments.WarpState.Modes", scope: null, file: !959, line: 198, type: !1311, isLocal: false, isDefinition: true, scopeLine: 198, isOptimized: false, unit: !1, retainedNodes: !3)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!8, !957, !957}
!1313 = !DILocalVariable(name: "w", arg: 1, scope: !1310, file: !959, line: 198, type: !957)
!1314 = !DILocation(line: 198, column: 1, scope: !1310)
!1315 = !DILocalVariable(name: "$ret53", scope: !1310, file: !959, line: 198, type: !8)
!1316 = !DILocation(line: 198, column: 29, scope: !1310)
!1317 = !DILocation(line: 199, column: 11, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1310, file: !959, line: 198, column: 1)
!1319 = !DILocalVariable(name: "modes", scope: !1318, file: !959, line: 199, type: !8)
!1320 = !DILocation(line: 199, column: 2, scope: !1310)
!1321 = !DILocation(line: 200, column: 25, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1318, file: !959, line: 200, column: 2)
!1323 = !DILocation(line: 200, column: 2, scope: !1322)
!1324 = !DILocation(line: 202, column: 17, scope: !1322)
!1325 = !DILocalVariable(name: "u", scope: !1322, file: !959, line: 200, type: !1274)
!1326 = !DILocation(line: 200, column: 6, scope: !1318)
!1327 = !DILocation(line: 201, column: 6, scope: !1322)
!1328 = !DILocation(line: 205, column: 2, scope: !1318)
!1329 = distinct !DISubprogram(name: "cli.ProtocolState..1command_line_arguments.WarpState", linkageName: "command_line_arguments.WarpState.ProtocolState", scope: null, file: !959, line: 178, type: !1330, isLocal: false, isDefinition: true, scopeLine: 178, isOptimized: false, unit: !1, retainedNodes: !3)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!652, !957, !957}
!1332 = !DILocalVariable(name: "w", arg: 1, scope: !1329, file: !959, line: 178, type: !957)
!1333 = !DILocation(line: 178, column: 1, scope: !1329)
!1334 = !DILocation(line: 180, column: 16, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1329, file: !959, line: 178, column: 1)
!1336 = !DILocation(line: 181, column: 16, scope: !1335)
!1337 = !DILocation(line: 182, column: 15, scope: !1335)
!1338 = !DILocation(line: 179, column: 16, scope: !1335)
!1339 = !DILocalVariable(name: "state", scope: !1335, file: !959, line: 179, type: !652)
!1340 = !DILocation(line: 179, column: 2, scope: !1329)
!1341 = !DILocation(line: 185, column: 28, scope: !1342)
!1342 = distinct !DILexicalBlock(scope: !1335, file: !959, line: 185, column: 2)
!1343 = !DILocation(line: 185, column: 2, scope: !1342)
!1344 = !DILocation(line: 186, column: 22, scope: !1342)
!1345 = !DILocalVariable(name: "user", scope: !1342, file: !959, line: 185, type: !1274)
!1346 = !DILocation(line: 185, column: 6, scope: !1335)
!1347 = !DILocalVariable(name: "$ret44", scope: !1348, file: !959, line: 27, type: !1351)
!1348 = distinct !DISubprogram(name: "cli.ProtocolUser..1command_line_arguments.UserState", linkageName: "command_line_arguments.UserState.ProtocolUser", scope: null, file: !959, line: 27, type: !1349, isLocal: false, isDefinition: true, scopeLine: 27, isOptimized: false, unit: !1, retainedNodes: !3)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!1351, !1273, !1273}
!1351 = !DICompositeType(tag: DW_TAG_structure_type, name: "User", file: !258, line: 11, size: 384, align: 8, elements: !1352)
!1352 = !{!877, !1353, !1354, !1355}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "Username", file: !258, line: 11, baseType: !39, size: 128, align: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", file: !258, line: 11, baseType: !1050, size: 64, align: 64, offset: 256)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "Hosting", file: !258, line: 11, baseType: !93, size: 8, align: 8, offset: 320)
!1356 = !DILocation(line: 27, column: 36, scope: !1348, inlinedAt: !1357)
!1357 = distinct !DILocation(line: 186, column: 28, scope: !1342)
!1358 = !DILocalVariable(name: "u", arg: 1, scope: !1348, file: !959, line: 27, type: !1273)
!1359 = !DILocation(line: 27, column: 1, scope: !1348, inlinedAt: !1357)
!1360 = !DILocation(line: 28, column: 14, scope: !1348, inlinedAt: !1357)
!1361 = !DILocation(line: 28, column: 2, scope: !1348, inlinedAt: !1357)
!1362 = !DILocalVariable(name: "$ret51", scope: !1329, file: !959, line: 178, type: !652)
!1363 = !DILocation(line: 178, column: 37, scope: !1329)
!1364 = !DILocation(line: 189, column: 2, scope: !1335)
!1365 = distinct !DISubprogram(name: "cli.SetMode..1command_line_arguments.WarpState", linkageName: "command_line_arguments.WarpState.SetMode", scope: null, file: !959, line: 146, type: !1366, isLocal: false, isDefinition: true, scopeLine: 146, isOptimized: false, unit: !1, retainedNodes: !3)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!241, !957, !957, !39, !1050}
!1368 = !DILocalVariable(name: "w", arg: 1, scope: !1365, file: !959, line: 146, type: !957)
!1369 = !DILocation(line: 146, column: 1, scope: !1365)
!1370 = !DILocalVariable(name: "user", arg: 2, scope: !1365, file: !959, line: 147, type: !39)
!1371 = !DILocation(line: 147, column: 2, scope: !1365)
!1372 = !DILocalVariable(name: "mode", arg: 3, scope: !1365, file: !959, line: 148, type: !1050)
!1373 = !DILocation(line: 148, column: 2, scope: !1365)
!1374 = !DILocalVariable(name: "ok", scope: !1375, file: !959, line: 150, type: !93)
!1375 = distinct !DILexicalBlock(scope: !1365, file: !959, line: 146, column: 1)
!1376 = !DILocation(line: 150, column: 2, scope: !1365)
!1377 = !DILocation(line: 150, column: 20, scope: !1375)
!1378 = !DILocation(line: 150, column: 2, scope: !1375)
!1379 = !DILocation(line: 151, column: 5, scope: !1375)
!1380 = !DILocation(line: 153, column: 11, scope: !1375)
!1381 = !DILocation(line: 152, column: 17, scope: !1375)
!1382 = !DILocation(line: 152, column: 3, scope: !1375)
!1383 = !DILocalVariable(name: "userState", scope: !1375, file: !959, line: 150, type: !1274)
!1384 = !DILocation(line: 158, column: 3, scope: !1375)
!1385 = !DILocation(line: 158, column: 16, scope: !1375)
!1386 = !DILocalVariable(name: "$ret49", scope: !1365, file: !959, line: 149, type: !241)
!1387 = !DILocation(line: 149, column: 3, scope: !1365)
!1388 = !DILocation(line: 160, column: 2, scope: !1375)
!1389 = distinct !DISubprogram(name: "cli.Update..1command_line_arguments.WarpState", linkageName: "command_line_arguments.WarpState.Update", scope: null, file: !959, line: 65, type: !1390, isLocal: false, isDefinition: true, scopeLine: 65, isOptimized: false, unit: !1, retainedNodes: !3)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!241, !957, !957, !652, !93}
!1392 = !DILocalVariable(name: "state", arg: 2, scope: !1389, file: !959, line: 66, type: !652)
!1393 = !DILocation(line: 66, column: 2, scope: !1389)
!1394 = !DILocalVariable(name: "w", arg: 1, scope: !1389, file: !959, line: 65, type: !957)
!1395 = !DILocation(line: 65, column: 1, scope: !1389)
!1396 = !DILocalVariable(name: "hosting", arg: 3, scope: !1389, file: !959, line: 67, type: !93)
!1397 = !DILocation(line: 67, column: 2, scope: !1389)
!1398 = !DILocation(line: 69, column: 20, scope: !1389)
!1399 = !DILocation(line: 69, column: 16, scope: !1389)
!1400 = !DILocation(line: 71, column: 11, scope: !1389)
!1401 = !DILocation(line: 70, column: 17, scope: !1389)
!1402 = !DILocation(line: 70, column: 3, scope: !1389)
!1403 = !DILocation(line: 75, column: 3, scope: !1389)
!1404 = !DILocation(line: 75, column: 22, scope: !1389)
!1405 = !DILocation(line: 75, column: 15, scope: !1389)
!1406 = !DILocation(line: 77, column: 32, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1389, file: !959, line: 77, column: 2)
!1408 = !DILocation(line: 77, column: 2, scope: !1407)
!1409 = !DILocation(line: 121, column: 25, scope: !1410)
!1410 = distinct !DILexicalBlock(scope: !1389, file: !959, line: 121, column: 2)
!1411 = !DILocation(line: 80, column: 12, scope: !1407)
!1412 = !DILocation(line: 79, column: 18, scope: !1407)
!1413 = !DILocation(line: 79, column: 4, scope: !1407)
!1414 = !DILocalVariable(name: "ok", scope: !1415, file: !959, line: 86, type: !93)
!1415 = distinct !DILexicalBlock(scope: !1407, file: !959, line: 86, column: 3)
!1416 = !DILocation(line: 86, column: 6, scope: !1407)
!1417 = !DILocation(line: 86, column: 16, scope: !1415)
!1418 = !DILocation(line: 86, column: 6, scope: !1415)
!1419 = !DILocation(line: 86, column: 31, scope: !1415)
!1420 = !DILocation(line: 89, column: 4, scope: !1415)
!1421 = !DILocation(line: 112, column: 18, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1415, file: !959, line: 110, column: 5)
!1423 = !DILocation(line: 112, column: 24, scope: !1422)
!1424 = !DILocalVariable(name: "userState", scope: !1422, file: !959, line: 112, type: !1274)
!1425 = !DILocation(line: 112, column: 4, scope: !1415)
!1426 = !DILocation(line: 113, column: 23, scope: !1422)
!1427 = !DILocation(line: 117, column: 5, scope: !1422)
!1428 = !DILocation(line: 117, column: 19, scope: !1422)
!1429 = !DILocation(line: 91, column: 13, scope: !1415)
!1430 = !DILocation(line: 90, column: 19, scope: !1415)
!1431 = !DILocation(line: 90, column: 5, scope: !1415)
!1432 = !DILocation(line: 94, column: 28, scope: !1415)
!1433 = !DILocation(line: 94, column: 4, scope: !1415)
!1434 = !DILocation(line: 96, column: 13, scope: !1415)
!1435 = !DILocation(line: 95, column: 19, scope: !1415)
!1436 = !DILocation(line: 95, column: 5, scope: !1415)
!1437 = !DILocation(line: 104, column: 21, scope: !1415)
!1438 = !DILocation(line: 104, column: 5, scope: !1415)
!1439 = !DILocation(line: 104, column: 19, scope: !1415)
!1440 = !DILocalVariable(name: "user", scope: !1407, file: !959, line: 77, type: !1351)
!1441 = !DILocation(line: 77, column: 6, scope: !1389)
!1442 = !DILocation(line: 78, column: 12, scope: !1407)
!1443 = !DILocation(line: 121, column: 2, scope: !1410)
!1444 = !DILocation(line: 124, column: 12, scope: !1445)
!1445 = distinct !DILexicalBlock(scope: !1410, file: !959, line: 122, column: 3)
!1446 = !DILocation(line: 124, column: 4, scope: !1445)
!1447 = !DILocalVariable(name: "ok", scope: !1445, file: !959, line: 122, type: !93)
!1448 = !DILocation(line: 122, column: 6, scope: !1410)
!1449 = !DILocation(line: 122, column: 6, scope: !1445)
!1450 = !DILocation(line: 122, column: 35, scope: !1445)
!1451 = !DILocalVariable(name: "$ret46", scope: !1389, file: !959, line: 68, type: !241)
!1452 = !DILocation(line: 68, column: 3, scope: !1389)
!1453 = !DILocation(line: 128, column: 2, scope: !1389)
!1454 = distinct !DISubprogram(name: "cli.WindowSize..1command_line_arguments.WarpState", linkageName: "command_line_arguments.WarpState.WindowSize", scope: null, file: !959, line: 193, type: !1455, isLocal: false, isDefinition: true, scopeLine: 193, isOptimized: false, unit: !1, retainedNodes: !3)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!656, !957, !957}
!1457 = !DILocalVariable(name: "w", arg: 1, scope: !1454, file: !959, line: 193, type: !957)
!1458 = !DILocation(line: 193, column: 1, scope: !1454)
!1459 = !DILocation(line: 194, column: 10, scope: !1454)
!1460 = !DILocation(line: 194, column: 2, scope: !1454)
!1461 = !DILocalVariable(name: "$ret52", scope: !1454, file: !959, line: 193, type: !656)
!1462 = !DILocation(line: 193, column: 34, scope: !1454)
!1463 = distinct !DISubprogram(name: "cli.command_line_arguments.UserState..hash", linkageName: "command_line_arguments.command_line_arguments.UserState..hash", scope: null, file: !10, line: 1, type: !203, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1464 = !DILocalVariable(name: "key", arg: 1, scope: !1463, file: !10, line: 1, type: !22)
!1465 = !DILocation(line: 1, column: 1, scope: !1463)
!1466 = !DILocalVariable(name: "seed", arg: 2, scope: !1463, file: !10, line: 1, type: !26)
!1467 = !DILocalVariable(name: "$ret78", scope: !1463, file: !10, line: 1, type: !26)
!1468 = distinct !DISubprogram(name: "cli.command_line_arguments.UserState..eq", linkageName: "command_line_arguments.command_line_arguments.UserState..eq", scope: null, file: !10, line: 1, type: !211, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1469 = !DILocalVariable(name: "key1", arg: 1, scope: !1468, file: !10, line: 1, type: !22)
!1470 = !DILocation(line: 1, column: 1, scope: !1468)
!1471 = !DILocalVariable(name: "key2", arg: 2, scope: !1468, file: !10, line: 1, type: !22)
!1472 = !DILocalVariable(name: "$ret79", scope: !1468, file: !10, line: 1, type: !93)
!1473 = !DILocation(line: 27, column: 36, scope: !1348)
!1474 = !DILocation(line: 27, column: 1, scope: !1348)
!1475 = !DILocation(line: 29, column: 14, scope: !1348)
!1476 = !DILocation(line: 30, column: 14, scope: !1348)
!1477 = !DILocation(line: 31, column: 14, scope: !1348)
!1478 = !DILocation(line: 32, column: 14, scope: !1348)
!1479 = !DILocation(line: 28, column: 14, scope: !1348)
!1480 = !DILocation(line: 28, column: 2, scope: !1348)
!1481 = distinct !DISubprogram(name: "cli.NewSession", linkageName: "command_line_arguments.NewSession", scope: null, file: !868, line: 46, type: !1482, isLocal: false, isDefinition: true, scopeLine: 46, isOptimized: false, unit: !1, retainedNodes: !3)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!1484, !296, !875, !39, !882, !39, !966, !688}
!1484 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Session,error}", file: !50, size: 192, align: 8, elements: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 54, baseType: !871, size: 64, align: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 54, baseType: !241, size: 128, align: 64, offset: 64)
!1488 = !DILocalVariable(name: "conn", arg: 7, scope: !1481, file: !868, line: 53, type: !688)
!1489 = !DILocation(line: 53, column: 2, scope: !1481)
!1490 = !DILocalVariable(name: "username", arg: 5, scope: !1481, file: !868, line: 51, type: !39)
!1491 = !DILocation(line: 51, column: 2, scope: !1481)
!1492 = !DILocalVariable(name: "sessionType", arg: 4, scope: !1481, file: !868, line: 50, type: !882)
!1493 = !DILocation(line: 50, column: 2, scope: !1481)
!1494 = !DILocalVariable(name: "session", arg: 2, scope: !1481, file: !868, line: 48, type: !875)
!1495 = !DILocation(line: 48, column: 2, scope: !1481)
!1496 = !DILocalVariable(name: "ctx", arg: 1, scope: !1481, file: !868, line: 47, type: !296)
!1497 = !DILocation(line: 47, column: 2, scope: !1481)
!1498 = !DILocalVariable(name: "w", arg: 3, scope: !1481, file: !868, line: 49, type: !39)
!1499 = !DILocation(line: 49, column: 2, scope: !1481)
!1500 = !DILocalVariable(name: "cancel", arg: 6, scope: !1481, file: !868, line: 52, type: !966)
!1501 = !DILocation(line: 52, column: 2, scope: !1481)
!1502 = !DILocalVariable(name: "$ret14", scope: !1481, file: !868, line: 54, type: !871)
!1503 = !DILocation(line: 54, column: 4, scope: !1481)
!1504 = !DILocation(line: 55, column: 27, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1481, file: !868, line: 46, column: 1)
!1506 = !DILocation(line: 55, column: 33, scope: !1505)
!1507 = !DILocation(line: 55, column: 40, scope: !1505)
!1508 = !DILocation(line: 55, column: 20, scope: !1505)
!1509 = !DILocalVariable(name: "mux", scope: !1505, file: !868, line: 55, type: !886)
!1510 = !DILocation(line: 55, column: 2, scope: !1481)
!1511 = !DILocalVariable(name: "err", scope: !1505, file: !868, line: 55, type: !241)
!1512 = !DILocation(line: 63, column: 9, scope: !1505)
!1513 = !DILocation(line: 77, column: 16, scope: !1505)
!1514 = !DILocation(line: 69, column: 8, scope: !1505)
!1515 = !DILocation(line: 69, column: 9, scope: !1505)
!1516 = !DILocalVariable(name: "ss", scope: !1505, file: !868, line: 69, type: !871)
!1517 = !DILocation(line: 69, column: 2, scope: !1481)
!1518 = !DILocation(line: 81, column: 22, scope: !1505)
!1519 = !DILocation(line: 81, column: 4, scope: !1505)
!1520 = !DILocation(line: 65, column: 55, scope: !1505)
!1521 = !DILocation(line: 65, column: 11, scope: !1505)
!1522 = !DILocation(line: 64, column: 22, scope: !1505)
!1523 = !DILocalVariable(name: "$ret15", scope: !1481, file: !868, line: 54, type: !241)
!1524 = !DILocation(line: 54, column: 14, scope: !1481)
!1525 = !DILocation(line: 64, column: 3, scope: !1505)
!1526 = !DILocation(line: 81, column: 17, scope: !1505)
!1527 = !DILocation(line: 82, column: 9, scope: !1505)
!1528 = !DILocation(line: 83, column: 5, scope: !1505)
!1529 = !DILocation(line: 85, column: 48, scope: !1505)
!1530 = !DILocation(line: 85, column: 11, scope: !1505)
!1531 = !DILocation(line: 84, column: 22, scope: !1505)
!1532 = !DILocation(line: 84, column: 3, scope: !1505)
!1533 = !DILocation(line: 88, column: 31, scope: !1505)
!1534 = !DILocation(line: 88, column: 18, scope: !1505)
!1535 = !DILocation(line: 88, column: 4, scope: !1505)
!1536 = !DILocation(line: 88, column: 12, scope: !1505)
!1537 = !DILocation(line: 91, column: 23, scope: !1505)
!1538 = !DILocation(line: 91, column: 4, scope: !1505)
!1539 = !DILocation(line: 91, column: 18, scope: !1505)
!1540 = !DILocation(line: 92, column: 9, scope: !1505)
!1541 = !DILocation(line: 93, column: 5, scope: !1505)
!1542 = !DILocation(line: 95, column: 49, scope: !1505)
!1543 = !DILocation(line: 95, column: 11, scope: !1505)
!1544 = !DILocation(line: 94, column: 22, scope: !1505)
!1545 = !DILocation(line: 94, column: 3, scope: !1505)
!1546 = !DILocation(line: 98, column: 32, scope: !1505)
!1547 = !DILocation(line: 98, column: 19, scope: !1505)
!1548 = !DILocation(line: 98, column: 4, scope: !1505)
!1549 = !DILocation(line: 98, column: 13, scope: !1505)
!1550 = !DILocation(line: 108, column: 14, scope: !1551)
!1551 = distinct !DILexicalBlock(scope: !1505, file: !868, line: 108, column: 2)
!1552 = !DILocation(line: 102, column: 15, scope: !1505)
!1553 = !DILocation(line: 105, column: 15, scope: !1505)
!1554 = !DILocation(line: 106, column: 15, scope: !1505)
!1555 = !DILocation(line: 101, column: 16, scope: !1505)
!1556 = !DILocation(line: 108, column: 30, scope: !1551)
!1557 = !DILocation(line: 108, column: 22, scope: !1551)
!1558 = !DILocalVariable(name: "err", scope: !1551, file: !868, line: 108, type: !241)
!1559 = !DILocation(line: 108, column: 5, scope: !1505)
!1560 = !DILocation(line: 108, column: 42, scope: !1551)
!1561 = !DILocation(line: 109, column: 5, scope: !1551)
!1562 = !DILocation(line: 111, column: 40, scope: !1551)
!1563 = !DILocation(line: 111, column: 11, scope: !1551)
!1564 = !DILocation(line: 110, column: 22, scope: !1551)
!1565 = !DILocation(line: 110, column: 3, scope: !1551)
!1566 = !DILocation(line: 116, column: 22, scope: !1505)
!1567 = !DILocation(line: 116, column: 4, scope: !1505)
!1568 = !DILocation(line: 116, column: 17, scope: !1505)
!1569 = !DILocation(line: 117, column: 9, scope: !1505)
!1570 = !DILocation(line: 118, column: 5, scope: !1505)
!1571 = !DILocation(line: 120, column: 48, scope: !1505)
!1572 = !DILocation(line: 120, column: 11, scope: !1505)
!1573 = !DILocation(line: 119, column: 22, scope: !1505)
!1574 = !DILocation(line: 119, column: 3, scope: !1505)
!1575 = !DILocation(line: 123, column: 31, scope: !1505)
!1576 = !DILocation(line: 123, column: 18, scope: !1505)
!1577 = !DILocation(line: 123, column: 4, scope: !1505)
!1578 = !DILocation(line: 123, column: 12, scope: !1505)
!1579 = !DILocation(line: 126, column: 21, scope: !1505)
!1580 = !DILocation(line: 126, column: 4, scope: !1505)
!1581 = !DILocation(line: 126, column: 16, scope: !1505)
!1582 = !DILocation(line: 127, column: 9, scope: !1505)
!1583 = !DILocation(line: 128, column: 5, scope: !1505)
!1584 = !DILocation(line: 130, column: 47, scope: !1505)
!1585 = !DILocation(line: 130, column: 11, scope: !1505)
!1586 = !DILocation(line: 129, column: 22, scope: !1505)
!1587 = !DILocation(line: 129, column: 3, scope: !1505)
!1588 = !DILocalVariable(name: "hello", scope: !1505, file: !868, line: 101, type: !1589)
!1589 = !DICompositeType(tag: DW_TAG_structure_type, name: "SessionHello", file: !258, line: 11, size: 896, align: 8, elements: !1590)
!1590 = !{!654, !1114, !1591, !1592, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "Version", file: !258, line: 11, baseType: !39, size: 128, align: 64, offset: 512)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "Type", file: !258, line: 11, baseType: !882, size: 128, align: 64, offset: 640)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "Username", file: !258, line: 11, baseType: !39, size: 128, align: 64, offset: 768)
!1594 = !DILocation(line: 101, column: 2, scope: !1481)
!1595 = !DILocation(line: 135, column: 13, scope: !1505)
!1596 = !DILocation(line: 135, column: 4, scope: !1505)
!1597 = !DILocation(line: 135, column: 11, scope: !1505)
!1598 = !DILocation(line: 137, column: 2, scope: !1505)
!1599 = distinct !DISubprogram(name: "cli.NewWarpState", linkageName: "command_line_arguments.NewWarpState", scope: null, file: !959, line: 37, type: !1600, isLocal: false, isDefinition: true, scopeLine: 37, isOptimized: false, unit: !1, retainedNodes: !3)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!957, !1589}
!1602 = !DILocalVariable(name: "hello", arg: 1, scope: !1599, file: !959, line: 38, type: !1589)
!1603 = !DILocation(line: 38, column: 2, scope: !1599)
!1604 = !DILocalVariable(name: "$ret45", scope: !1599, file: !959, line: 39, type: !957)
!1605 = !DILocation(line: 39, column: 3, scope: !1599)
!1606 = !DILocation(line: 44, column: 25, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1599, file: !959, line: 37, column: 1)
!1608 = !DILocation(line: 45, column: 20, scope: !1607)
!1609 = !DILocation(line: 43, column: 21, scope: !1607)
!1610 = !DILocation(line: 42, column: 10, scope: !1607)
!1611 = !DILocation(line: 40, column: 7, scope: !1607)
!1612 = !DILocation(line: 40, column: 8, scope: !1607)
!1613 = !DILocalVariable(name: "w", scope: !1607, file: !959, line: 40, type: !957)
!1614 = !DILocation(line: 40, column: 2, scope: !1599)
!1615 = !DILocation(line: 51, column: 10, scope: !1607)
!1616 = !DILocation(line: 51, column: 16, scope: !1607)
!1617 = !DILocation(line: 52, column: 17, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1607, file: !959, line: 51, column: 33)
!1619 = !DILocation(line: 57, column: 2, scope: !1607)
!1620 = !DILocation(line: 52, column: 23, scope: !1618)
!1621 = !DILocalVariable(name: "userState", scope: !1618, file: !959, line: 52, type: !1274)
!1622 = !DILocation(line: 52, column: 3, scope: !1607)
!1623 = !DILocation(line: 55, column: 4, scope: !1618)
!1624 = !DILocation(line: 55, column: 28, scope: !1618)
!1625 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk1", scope: null, file: !868, line: 147, type: !1626, isLocal: true, isDefinition: true, scopeLine: 147, isOptimized: false, unit: !1, retainedNodes: !3)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!93, !1628}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Mutex}", file: !50, size: 64, align: 8, elements: !1630)
!1630 = !{!1631}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "a0", file: !50, line: 147, baseType: !972, size: 64, align: 64)
!1632 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1625, file: !868, line: 147, type: !1628)
!1633 = !DILocation(line: 147, column: 2, scope: !1625)
!1634 = !DILocalVariable(name: "$ret55", scope: !1625, file: !868, line: 147, type: !93)
!1635 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk2", scope: null, file: !868, line: 157, type: !1626, isLocal: true, isDefinition: true, scopeLine: 157, isOptimized: false, unit: !1, retainedNodes: !3)
!1636 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1635, file: !868, line: 157, type: !1628)
!1637 = !DILocation(line: 157, column: 2, scope: !1635)
!1638 = !DILocalVariable(name: "$ret56", scope: !1635, file: !868, line: 157, type: !93)
!1639 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk3", scope: null, file: !868, line: 166, type: !1626, isLocal: true, isDefinition: true, scopeLine: 166, isOptimized: false, unit: !1, retainedNodes: !3)
!1640 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1639, file: !868, line: 166, type: !1628)
!1641 = !DILocation(line: 166, column: 2, scope: !1639)
!1642 = !DILocalVariable(name: "$ret57", scope: !1639, file: !868, line: 166, type: !93)
!1643 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk4", scope: null, file: !868, line: 173, type: !1626, isLocal: true, isDefinition: true, scopeLine: 173, isOptimized: false, unit: !1, retainedNodes: !3)
!1644 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1643, file: !868, line: 173, type: !1628)
!1645 = !DILocation(line: 173, column: 2, scope: !1643)
!1646 = !DILocalVariable(name: "$ret58", scope: !1643, file: !868, line: 173, type: !93)
!1647 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk5", scope: null, file: !868, line: 180, type: !1626, isLocal: true, isDefinition: true, scopeLine: 180, isOptimized: false, unit: !1, retainedNodes: !3)
!1648 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1647, file: !868, line: 180, type: !1628)
!1649 = !DILocation(line: 180, column: 2, scope: !1647)
!1650 = !DILocalVariable(name: "$ret59", scope: !1647, file: !868, line: 180, type: !93)
!1651 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk6", scope: null, file: !868, line: 189, type: !1626, isLocal: true, isDefinition: true, scopeLine: 189, isOptimized: false, unit: !1, retainedNodes: !3)
!1652 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1651, file: !868, line: 189, type: !1628)
!1653 = !DILocation(line: 189, column: 2, scope: !1651)
!1654 = !DILocalVariable(name: "$ret60", scope: !1651, file: !868, line: 189, type: !93)
!1655 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk7", scope: null, file: !868, line: 199, type: !1626, isLocal: true, isDefinition: true, scopeLine: 199, isOptimized: false, unit: !1, retainedNodes: !3)
!1656 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1655, file: !868, line: 199, type: !1628)
!1657 = !DILocation(line: 199, column: 2, scope: !1655)
!1658 = !DILocalVariable(name: "$ret61", scope: !1655, file: !868, line: 199, type: !93)
!1659 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk8", scope: null, file: !868, line: 209, type: !1626, isLocal: true, isDefinition: true, scopeLine: 209, isOptimized: false, unit: !1, retainedNodes: !3)
!1660 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1659, file: !868, line: 209, type: !1628)
!1661 = !DILocation(line: 209, column: 2, scope: !1659)
!1662 = !DILocalVariable(name: "$ret62", scope: !1659, file: !868, line: 209, type: !93)
!1663 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk9", scope: null, file: !868, line: 217, type: !1626, isLocal: true, isDefinition: true, scopeLine: 217, isOptimized: false, unit: !1, retainedNodes: !3)
!1664 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1663, file: !868, line: 217, type: !1628)
!1665 = !DILocation(line: 217, column: 2, scope: !1663)
!1666 = !DILocalVariable(name: "$ret63", scope: !1663, file: !868, line: 217, type: !93)
!1667 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk10", scope: null, file: !868, line: 224, type: !1626, isLocal: true, isDefinition: true, scopeLine: 224, isOptimized: false, unit: !1, retainedNodes: !3)
!1668 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1667, file: !868, line: 224, type: !1628)
!1669 = !DILocation(line: 224, column: 2, scope: !1667)
!1670 = !DILocalVariable(name: "$ret64", scope: !1667, file: !868, line: 224, type: !93)
!1671 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk11", scope: null, file: !868, line: 231, type: !1626, isLocal: true, isDefinition: true, scopeLine: 231, isOptimized: false, unit: !1, retainedNodes: !3)
!1672 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1671, file: !868, line: 231, type: !1628)
!1673 = !DILocation(line: 231, column: 2, scope: !1671)
!1674 = !DILocalVariable(name: "$ret65", scope: !1671, file: !868, line: 231, type: !93)
!1675 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk12", scope: null, file: !868, line: 238, type: !1626, isLocal: true, isDefinition: true, scopeLine: 238, isOptimized: false, unit: !1, retainedNodes: !3)
!1676 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1675, file: !868, line: 238, type: !1628)
!1677 = !DILocation(line: 238, column: 2, scope: !1675)
!1678 = !DILocalVariable(name: "$ret66", scope: !1675, file: !868, line: 238, type: !93)
!1679 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk13", scope: null, file: !868, line: 245, type: !1626, isLocal: true, isDefinition: true, scopeLine: 245, isOptimized: false, unit: !1, retainedNodes: !3)
!1680 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1679, file: !868, line: 245, type: !1628)
!1681 = !DILocation(line: 245, column: 2, scope: !1679)
!1682 = !DILocalVariable(name: "$ret67", scope: !1679, file: !868, line: 245, type: !93)
!1683 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk14", scope: null, file: !868, line: 260, type: !1626, isLocal: true, isDefinition: true, scopeLine: 260, isOptimized: false, unit: !1, retainedNodes: !3)
!1684 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !1683, file: !868, line: 260, type: !1628)
!1685 = !DILocation(line: 260, column: 2, scope: !1683)
!1686 = !DILocalVariable(name: "$ret68", scope: !1683, file: !868, line: 260, type: !93)
!1687 = distinct !DISubprogram(name: "cli.command_line_arguments.Shell..hash", linkageName: "command_line_arguments.command_line_arguments.Shell..hash", scope: null, file: !10, line: 1, type: !203, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1688 = !DILocalVariable(name: "key", arg: 1, scope: !1687, file: !10, line: 1, type: !22)
!1689 = !DILocation(line: 1, column: 1, scope: !1687)
!1690 = !DILocalVariable(name: "seed", arg: 2, scope: !1687, file: !10, line: 1, type: !26)
!1691 = !DILocalVariable(name: "$ret80", scope: !1687, file: !10, line: 1, type: !26)
!1692 = distinct !DISubprogram(name: "cli.command_line_arguments.Shell..eq", linkageName: "command_line_arguments.command_line_arguments.Shell..eq", scope: null, file: !10, line: 1, type: !211, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1693 = !DILocalVariable(name: "key1", arg: 1, scope: !1692, file: !10, line: 1, type: !22)
!1694 = !DILocation(line: 1, column: 1, scope: !1692)
!1695 = !DILocalVariable(name: "key2", arg: 2, scope: !1692, file: !10, line: 1, type: !22)
!1696 = !DILocalVariable(name: "$ret81", scope: !1692, file: !10, line: 1, type: !93)
!1697 = distinct !DISubprogram(name: "cli.DetectShell", linkageName: "command_line_arguments.DetectShell", scope: null, file: !1698, line: 28, type: !1699, isLocal: false, isDefinition: true, scopeLine: 28, isOptimized: false, unit: !1, retainedNodes: !3)
!1698 = !DIFile(filename: "shell.go", directory: ".")
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!1701, !296}
!1701 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*Shell,error}", file: !50, size: 192, align: 8, elements: !1702)
!1702 = !{!1703, !1708}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 30, baseType: !1704, size: 64, align: 64)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DICompositeType(tag: DW_TAG_structure_type, name: "Shell", file: !1698, line: 10, size: 128, align: 8, elements: !1706)
!1706 = !{!1707}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "Command", file: !1698, line: 11, baseType: !39, size: 128, align: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 30, baseType: !241, size: 128, align: 64, offset: 64)
!1709 = !DILocalVariable(name: "ctx", arg: 1, scope: !1697, file: !1698, line: 29, type: !296)
!1710 = !DILocation(line: 29, column: 2, scope: !1697)
!1711 = !DILocalVariable(name: "$ret35", scope: !1697, file: !1698, line: 30, type: !1704)
!1712 = !DILocation(line: 30, column: 4, scope: !1697)
!1713 = !DILocalVariable(name: "ctx", arg: 1, scope: !1714, file: !1698, line: 20, type: !296)
!1714 = distinct !DISubprogram(name: "cli.retrieveShell", scope: null, file: !1698, line: 19, type: !1715, isLocal: true, isDefinition: true, scopeLine: 19, isOptimized: false, unit: !1, retainedNodes: !3)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!1717, !296}
!1717 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{string,error}", file: !50, size: 256, align: 8, elements: !1718)
!1718 = !{!1719, !1720}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 10, baseType: !39, size: 128, align: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 10, baseType: !241, size: 128, align: 64, offset: 128)
!1721 = !DILocation(line: 20, column: 2, scope: !1714, inlinedAt: !1722)
!1722 = distinct !DILocation(line: 31, column: 18, scope: !1723)
!1723 = distinct !DILexicalBlock(scope: !1697, file: !1698, line: 28, column: 1)
!1724 = !DILocation(line: 22, column: 8, scope: !1714, inlinedAt: !1722)
!1725 = !DILocation(line: 22, column: 24, scope: !1714, inlinedAt: !1722)
!1726 = !DILocation(line: 23, column: 13, scope: !1714, inlinedAt: !1722)
!1727 = !DILocalVariable(name: "$ret33", scope: !1714, file: !1698, line: 21, type: !39)
!1728 = !DILocation(line: 21, column: 4, scope: !1714, inlinedAt: !1722)
!1729 = !DILocation(line: 23, column: 3, scope: !1714, inlinedAt: !1722)
!1730 = !DILocation(line: 0, scope: !1723)
!1731 = !DILocalVariable(name: "err", scope: !1723, file: !1698, line: 31, type: !241)
!1732 = !DILocation(line: 31, column: 2, scope: !1697)
!1733 = !DILocation(line: 36, column: 2, scope: !1723)
!1734 = !DILocation(line: 36, column: 11, scope: !1723)
!1735 = !DILocalVariable(name: "shell", scope: !1723, file: !1698, line: 36, type: !1704)
!1736 = !DILocation(line: 36, column: 2, scope: !1697)
!1737 = !DILocalVariable(name: "$ret36", scope: !1697, file: !1698, line: 30, type: !241)
!1738 = !DILocation(line: 30, column: 12, scope: !1697)
!1739 = !DILocation(line: 40, column: 2, scope: !1723)
!1740 = distinct !DISubprogram(name: "cli.command_line_arguments.Srv..hash", linkageName: "command_line_arguments.command_line_arguments.Srv..hash", scope: null, file: !10, line: 1, type: !203, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1741 = !DILocalVariable(name: "key", arg: 1, scope: !1740, file: !10, line: 1, type: !22)
!1742 = !DILocation(line: 1, column: 1, scope: !1740)
!1743 = !DILocalVariable(name: "seed", arg: 2, scope: !1740, file: !10, line: 1, type: !26)
!1744 = !DILocalVariable(name: "$ret82", scope: !1740, file: !10, line: 1, type: !26)
!1745 = distinct !DISubprogram(name: "cli.command_line_arguments.Srv..eq", linkageName: "command_line_arguments.command_line_arguments.Srv..eq", scope: null, file: !10, line: 1, type: !211, isLocal: false, isDefinition: true, scopeLine: 1, isOptimized: false, unit: !1, retainedNodes: !3)
!1746 = !DILocalVariable(name: "key1", arg: 1, scope: !1745, file: !10, line: 1, type: !22)
!1747 = !DILocation(line: 1, column: 1, scope: !1745)
!1748 = !DILocalVariable(name: "key2", arg: 2, scope: !1745, file: !10, line: 1, type: !22)
!1749 = !DILocalVariable(name: "$ret83", scope: !1745, file: !10, line: 1, type: !93)
!1750 = distinct !DISubprogram(name: "cli.Path..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.Path", scope: null, file: !1751, line: 25, type: !1752, isLocal: false, isDefinition: true, scopeLine: 25, isOptimized: false, unit: !1, retainedNodes: !3)
!1751 = !DIFile(filename: "srv.go", directory: ".")
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!39, !1754, !1754}
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DICompositeType(tag: DW_TAG_structure_type, name: "Srv", file: !1751, line: 17, size: 384, align: 8, elements: !1756)
!1756 = !{!1757, !1758, !1759, !1760}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "warp", file: !1751, line: 18, baseType: !39, size: 128, align: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "session", file: !1751, line: 19, baseType: !871, size: 64, align: 64, offset: 128)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "path", file: !1751, line: 20, baseType: !39, size: 128, align: 64, offset: 192)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", file: !1751, line: 21, baseType: !972, size: 64, align: 64, offset: 320)
!1761 = !DILocalVariable(name: "s", arg: 1, scope: !1750, file: !1751, line: 25, type: !1754)
!1762 = !DILocation(line: 25, column: 1, scope: !1750)
!1763 = !DILocation(line: 26, column: 10, scope: !1750)
!1764 = !DILocation(line: 26, column: 2, scope: !1750)
!1765 = !DILocalVariable(name: "$ret37", scope: !1750, file: !1751, line: 25, type: !39)
!1766 = !DILocation(line: 25, column: 22, scope: !1750)
!1767 = distinct !DISubprogram(name: "cli.Run..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.Run", scope: null, file: !1751, line: 59, type: !1768, isLocal: false, isDefinition: true, scopeLine: 59, isOptimized: false, unit: !1, retainedNodes: !3)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!241, !1754, !1754, !296}
!1770 = !DILocalVariable(name: "param", arg: 1, scope: !1767, file: !1751, line: 59, type: !1754)
!1771 = !DILocation(line: 59, column: 1, scope: !1767)
!1772 = !DILocalVariable(name: "param", arg: 2, scope: !1767, file: !1751, line: 60, type: !296)
!1773 = !DILocation(line: 60, column: 2, scope: !1767)
!1774 = !DILocalVariable(name: "$ret39", scope: !1767, file: !1751, line: 61, type: !241)
!1775 = !DILocation(line: 61, column: 3, scope: !1767)
!1776 = !DILocation(line: 81, column: 1, scope: !1767)
!1777 = !DILocalVariable(name: "s", scope: !1767, file: !1751, line: 59, type: !1778)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1779 = !DILocalVariable(name: "ctx", scope: !1767, file: !1751, line: 60, type: !1780)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!1781 = !DILocation(line: 64, column: 17, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1767, file: !1751, line: 59, column: 1)
!1783 = !DILocation(line: 64, column: 18, scope: !1782)
!1784 = !DILocation(line: 64, column: 10, scope: !1782)
!1785 = !DILocation(line: 66, column: 32, scope: !1782)
!1786 = !DILocation(line: 66, column: 33, scope: !1782)
!1787 = !DILocation(line: 66, column: 17, scope: !1782)
!1788 = !DILocalVariable(name: "ln", scope: !1782, file: !1751, line: 66, type: !1789)
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "Listener", file: !258, line: 7, size: 128, align: 8, elements: !1790)
!1790 = !{!1791, !708}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "__methods", file: !258, line: 7, baseType: !1792, size: 64, align: 64)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}", file: !50, size: 256, align: 8, elements: !1794)
!1794 = !{!694, !1795, !1803, !1804}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "Accept", file: !50, line: 7, baseType: !1796, size: 64, align: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!1799, !22}
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Conn,error}", file: !50, size: 256, align: 8, elements: !1800)
!1800 = !{!1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 7, baseType: !688, size: 128, align: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "UNNAMED", file: !50, line: 7, baseType: !241, size: 128, align: 64, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "Addr", file: !50, line: 7, baseType: !697, size: 64, align: 64, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "Close", file: !50, line: 7, baseType: !352, size: 64, align: 64, offset: 192)
!1805 = !DILocation(line: 66, column: 2, scope: !1767)
!1806 = !DILocalVariable(name: "err", scope: !1782, file: !1751, line: 66, type: !241)
!1807 = !DILocation(line: 67, column: 9, scope: !1782)
!1808 = !DILocation(line: 68, column: 17, scope: !1782)
!1809 = !DILocation(line: 70, column: 2, scope: !1782)
!1810 = !DILocation(line: 73, column: 18, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1782, file: !1751, line: 72, column: 6)
!1812 = !DILocation(line: 73, column: 3, scope: !1811)
!1813 = !DILocalVariable(name: "conn", scope: !1811, file: !1751, line: 73, type: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!1815 = !DILocation(line: 73, column: 3, scope: !1782)
!1816 = !DILocalVariable(name: "err", scope: !1811, file: !1751, line: 73, type: !241)
!1817 = !DILocation(line: 74, column: 10, scope: !1811)
!1818 = !DILocation(line: 77, column: 6, scope: !1811)
!1819 = !DILocation(line: 77, column: 3, scope: !1811)
!1820 = !DILocation(line: 68, column: 3, scope: !1767)
!1821 = distinct !DISubprogram(name: "cli.SetSession..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.SetSession", scope: null, file: !1751, line: 49, type: !1822, isLocal: false, isDefinition: true, scopeLine: 49, isOptimized: false, unit: !1, retainedNodes: !3)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!23, !1754, !1754, !296, !871}
!1824 = !DILocalVariable(name: "s", arg: 1, scope: !1821, file: !1751, line: 49, type: !1754)
!1825 = !DILocation(line: 49, column: 1, scope: !1821)
!1826 = !DILocalVariable(name: "ctx", arg: 2, scope: !1821, file: !1751, line: 50, type: !296)
!1827 = !DILocation(line: 50, column: 2, scope: !1821)
!1828 = !DILocalVariable(name: "session", arg: 3, scope: !1821, file: !1751, line: 51, type: !871)
!1829 = !DILocation(line: 51, column: 2, scope: !1821)
!1830 = !DILocation(line: 53, column: 3, scope: !1821)
!1831 = !DILocation(line: 56, column: 1, scope: !1821)
!1832 = !DILocation(line: 53, column: 9, scope: !1821)
!1833 = !DILocation(line: 54, column: 9, scope: !1821)
!1834 = !DILocation(line: 54, column: 2, scope: !1821)
!1835 = !DILocation(line: 55, column: 3, scope: !1821)
!1836 = !DILocation(line: 55, column: 12, scope: !1821)
!1837 = distinct !DISubprogram(name: "cli.executeAuthorize..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.executeAuthorize", scope: null, file: !1751, line: 148, type: !1838, isLocal: false, isDefinition: true, scopeLine: 148, isOptimized: false, unit: !1, retainedNodes: !3)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!643, !1754, !1754, !296, !667}
!1840 = !DILocalVariable(name: "cmd", arg: 3, scope: !1837, file: !1751, line: 150, type: !667)
!1841 = !DILocation(line: 150, column: 2, scope: !1837)
!1842 = !DILocalVariable(name: "$ret42", scope: !1837, file: !1751, line: 151, type: !643)
!1843 = !DILocation(line: 151, column: 3, scope: !1837)
!1844 = !DILocalVariable(name: "s", arg: 1, scope: !1837, file: !1751, line: 148, type: !1754)
!1845 = !DILocation(line: 148, column: 1, scope: !1837)
!1846 = !DILocalVariable(name: "ctx", arg: 2, scope: !1837, file: !1751, line: 149, type: !296)
!1847 = !DILocation(line: 149, column: 2, scope: !1837)
!1848 = !DILocation(line: 152, column: 3, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1837, file: !1751, line: 148, column: 1)
!1850 = !DILocation(line: 216, column: 1, scope: !1837)
!1851 = !DILocation(line: 152, column: 9, scope: !1849)
!1852 = !DILocation(line: 153, column: 9, scope: !1849)
!1853 = !DILocation(line: 153, column: 2, scope: !1849)
!1854 = !DILocation(line: 155, column: 6, scope: !1849)
!1855 = !DILocation(line: 155, column: 15, scope: !1849)
!1856 = !DILocation(line: 156, column: 3, scope: !1849)
!1857 = !DILocation(line: 165, column: 12, scope: !1849)
!1858 = !DILocation(line: 165, column: 19, scope: !1849)
!1859 = !DILocation(line: 166, column: 3, scope: !1849)
!1860 = !DILocation(line: 175, column: 24, scope: !1849)
!1861 = !DILocalVariable(name: "mode", scope: !1849, file: !1751, line: 175, type: !1049)
!1862 = !DILocation(line: 175, column: 2, scope: !1837)
!1863 = !DILocalVariable(name: "err", scope: !1849, file: !1751, line: 175, type: !241)
!1864 = !DILocation(line: 176, column: 9, scope: !1849)
!1865 = !DILocation(line: 181, column: 17, scope: !1849)
!1866 = !DILocation(line: 177, column: 15, scope: !1849)
!1867 = !DILocation(line: 186, column: 9, scope: !1849)
!1868 = !DILocation(line: 186, column: 39, scope: !1849)
!1869 = !DILocation(line: 186, column: 44, scope: !1849)
!1870 = !DILocation(line: 186, column: 17, scope: !1849)
!1871 = !DILocation(line: 187, column: 9, scope: !1849)
!1872 = !DILocation(line: 192, column: 17, scope: !1849)
!1873 = !DILocation(line: 188, column: 15, scope: !1849)
!1874 = !DILocation(line: 198, column: 16, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1849, file: !1751, line: 197, column: 2)
!1876 = !DILocation(line: 198, column: 24, scope: !1875)
!1877 = !DILocation(line: 199, column: 16, scope: !1875)
!1878 = !DILocation(line: 199, column: 24, scope: !1875)
!1879 = !DILocation(line: 200, column: 16, scope: !1875)
!1880 = !DILocation(line: 200, column: 24, scope: !1875)
!1881 = !DILocation(line: 201, column: 16, scope: !1875)
!1882 = !DILocation(line: 201, column: 24, scope: !1875)
!1883 = !DILocation(line: 197, column: 13, scope: !1875)
!1884 = !DILocation(line: 197, column: 47, scope: !1875)
!1885 = !DILocation(line: 197, column: 21, scope: !1875)
!1886 = !DILocalVariable(name: "err", scope: !1875, file: !1751, line: 197, type: !241)
!1887 = !DILocation(line: 197, column: 5, scope: !1849)
!1888 = !DILocation(line: 202, column: 10, scope: !1875)
!1889 = !DILocation(line: 203, column: 3, scope: !1875)
!1890 = !DILocation(line: 213, column: 2, scope: !1849)
!1891 = !DILocation(line: 156, column: 3, scope: !1837)
!1892 = distinct !DISubprogram(name: "cli.executeRevoke..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.executeRevoke", scope: null, file: !1751, line: 219, type: !1838, isLocal: false, isDefinition: true, scopeLine: 219, isOptimized: false, unit: !1, retainedNodes: !3)
!1893 = !DILocalVariable(name: "cmd", arg: 3, scope: !1892, file: !1751, line: 221, type: !667)
!1894 = !DILocation(line: 221, column: 2, scope: !1892)
!1895 = !DILocalVariable(name: "$ret43", scope: !1892, file: !1751, line: 222, type: !643)
!1896 = !DILocation(line: 222, column: 3, scope: !1892)
!1897 = !DILocalVariable(name: "s", arg: 1, scope: !1892, file: !1751, line: 219, type: !1754)
!1898 = !DILocation(line: 219, column: 1, scope: !1892)
!1899 = !DILocalVariable(name: "ctx", arg: 2, scope: !1892, file: !1751, line: 220, type: !296)
!1900 = !DILocation(line: 220, column: 2, scope: !1892)
!1901 = !DILocation(line: 223, column: 3, scope: !1892)
!1902 = !DILocation(line: 279, column: 1, scope: !1892)
!1903 = !DILocation(line: 223, column: 9, scope: !1892)
!1904 = !DILocation(line: 224, column: 9, scope: !1892)
!1905 = !DILocation(line: 224, column: 2, scope: !1892)
!1906 = !DILocation(line: 226, column: 6, scope: !1892)
!1907 = !DILocation(line: 226, column: 15, scope: !1892)
!1908 = !DILocation(line: 227, column: 3, scope: !1892)
!1909 = !DILocation(line: 236, column: 2, scope: !1910)
!1910 = distinct !DILexicalBlock(scope: !1892, file: !1751, line: 236, column: 2)
!1911 = !DILocation(line: 237, column: 17, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1910, file: !1751, line: 236, column: 32)
!1913 = !DILocalVariable(name: "user", scope: !1910, file: !1751, line: 236, type: !39)
!1914 = !DILocation(line: 236, column: 6, scope: !1892)
!1915 = !DILocation(line: 237, column: 25, scope: !1912)
!1916 = !DILocalVariable(name: "mode", scope: !1912, file: !1751, line: 237, type: !1049)
!1917 = !DILocation(line: 237, column: 3, scope: !1910)
!1918 = !DILocalVariable(name: "err", scope: !1912, file: !1751, line: 237, type: !241)
!1919 = !DILocation(line: 238, column: 10, scope: !1912)
!1920 = !DILocation(line: 243, column: 18, scope: !1912)
!1921 = !DILocation(line: 239, column: 16, scope: !1912)
!1922 = !DILocation(line: 248, column: 10, scope: !1912)
!1923 = !DILocation(line: 248, column: 33, scope: !1912)
!1924 = !DILocation(line: 248, column: 39, scope: !1912)
!1925 = !DILocation(line: 248, column: 44, scope: !1912)
!1926 = !DILocation(line: 248, column: 38, scope: !1912)
!1927 = !DILocation(line: 248, column: 18, scope: !1912)
!1928 = !DILocation(line: 249, column: 10, scope: !1912)
!1929 = !DILocation(line: 254, column: 18, scope: !1912)
!1930 = !DILocation(line: 250, column: 16, scope: !1912)
!1931 = !DILocation(line: 261, column: 16, scope: !1932)
!1932 = distinct !DILexicalBlock(scope: !1892, file: !1751, line: 260, column: 2)
!1933 = !DILocation(line: 261, column: 24, scope: !1932)
!1934 = !DILocation(line: 262, column: 16, scope: !1932)
!1935 = !DILocation(line: 262, column: 24, scope: !1932)
!1936 = !DILocation(line: 263, column: 16, scope: !1932)
!1937 = !DILocation(line: 263, column: 24, scope: !1932)
!1938 = !DILocation(line: 264, column: 16, scope: !1932)
!1939 = !DILocation(line: 264, column: 24, scope: !1932)
!1940 = !DILocation(line: 260, column: 13, scope: !1932)
!1941 = !DILocation(line: 260, column: 47, scope: !1932)
!1942 = !DILocation(line: 260, column: 21, scope: !1932)
!1943 = !DILocalVariable(name: "err", scope: !1932, file: !1751, line: 260, type: !241)
!1944 = !DILocation(line: 260, column: 5, scope: !1892)
!1945 = !DILocation(line: 265, column: 10, scope: !1932)
!1946 = !DILocation(line: 266, column: 3, scope: !1932)
!1947 = !DILocation(line: 276, column: 2, scope: !1892)
!1948 = distinct !DISubprogram(name: "cli.executeState..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.executeState", scope: null, file: !1751, line: 137, type: !1838, isLocal: false, isDefinition: true, scopeLine: 137, isOptimized: false, unit: !1, retainedNodes: !3)
!1949 = !DILocalVariable(name: "cmd", arg: 3, scope: !1948, file: !1751, line: 139, type: !667)
!1950 = !DILocation(line: 139, column: 2, scope: !1948)
!1951 = !DILocalVariable(name: "s", arg: 1, scope: !1948, file: !1751, line: 137, type: !1754)
!1952 = !DILocation(line: 137, column: 1, scope: !1948)
!1953 = !DILocalVariable(name: "ctx", arg: 2, scope: !1948, file: !1751, line: 138, type: !296)
!1954 = !DILocation(line: 138, column: 2, scope: !1948)
!1955 = !DILocation(line: 142, column: 2, scope: !1948)
!1956 = distinct !DISubprogram(name: "cli.handle..1command_line_arguments.Srv", linkageName: "command_line_arguments.Srv.handle", scope: null, file: !1751, line: 84, type: !1957, isLocal: false, isDefinition: true, scopeLine: 84, isOptimized: false, unit: !1, retainedNodes: !3)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!241, !1754, !1754, !296, !688}
!1959 = !DILocalVariable(name: "result", scope: !1960, file: !1751, line: 100, type: !643)
!1960 = distinct !DILexicalBlock(scope: !1956, file: !1751, line: 84, column: 1)
!1961 = !DILocation(line: 100, column: 6, scope: !1956)
!1962 = !DILocalVariable(name: "s", arg: 1, scope: !1956, file: !1751, line: 84, type: !1754)
!1963 = !DILocation(line: 84, column: 1, scope: !1956)
!1964 = !DILocalVariable(name: "ctx", arg: 2, scope: !1956, file: !1751, line: 85, type: !296)
!1965 = !DILocation(line: 85, column: 2, scope: !1956)
!1966 = !DILocalVariable(name: "conn", arg: 3, scope: !1956, file: !1751, line: 86, type: !688)
!1967 = !DILocation(line: 86, column: 2, scope: !1956)
!1968 = !DILocalVariable(name: "$ret40", scope: !1956, file: !1751, line: 87, type: !241)
!1969 = !DILocation(line: 87, column: 3, scope: !1956)
!1970 = !DILocation(line: 88, column: 2, scope: !1960)
!1971 = !DILocation(line: 134, column: 1, scope: !1956)
!1972 = !DILocation(line: 90, column: 29, scope: !1960)
!1973 = !DILocation(line: 90, column: 18, scope: !1960)
!1974 = !DILocalVariable(name: "commandR", scope: !1960, file: !1751, line: 90, type: !735)
!1975 = !DILocation(line: 90, column: 2, scope: !1956)
!1976 = !DILocation(line: 91, column: 29, scope: !1960)
!1977 = !DILocation(line: 91, column: 18, scope: !1960)
!1978 = !DILocalVariable(name: "commandW", scope: !1960, file: !1751, line: 91, type: !777)
!1979 = !DILocation(line: 91, column: 2, scope: !1956)
!1980 = !DILocation(line: 93, column: 6, scope: !1960)
!1981 = !DILocalVariable(name: "cmd", scope: !1960, file: !1751, line: 93, type: !1982)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!1983 = !DILocation(line: 93, column: 6, scope: !1956)
!1984 = !DILocation(line: 94, column: 28, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1960, file: !1751, line: 94, column: 2)
!1986 = !DILocation(line: 94, column: 20, scope: !1985)
!1987 = !DILocalVariable(name: "err", scope: !1985, file: !1751, line: 94, type: !241)
!1988 = !DILocation(line: 94, column: 5, scope: !1960)
!1989 = !DILocation(line: 94, column: 39, scope: !1985)
!1990 = !DILocation(line: 103, column: 2, scope: !1960)
!1991 = !DILocation(line: 96, column: 49, scope: !1985)
!1992 = !DILocation(line: 96, column: 11, scope: !1985)
!1993 = !DILocation(line: 95, column: 17, scope: !1985)
!1994 = !DILocation(line: 105, column: 2, scope: !1960)
!1995 = !DILocation(line: 104, column: 10, scope: !1960)
!1996 = !DILocation(line: 0, scope: !1960)
!1997 = !DILocation(line: 118, column: 3, scope: !1960)
!1998 = !DILocation(line: 106, column: 13, scope: !1960)
!1999 = !DILocation(line: 107, column: 2, scope: !1960)
!2000 = !DILocation(line: 108, column: 13, scope: !1960)
!2001 = !DILocation(line: 110, column: 21, scope: !1960)
!2002 = !DILocation(line: 111, column: 30, scope: !1960)
!2003 = !DILocation(line: 118, column: 9, scope: !1960)
!2004 = !DILocation(line: 119, column: 6, scope: !1960)
!2005 = !DILocation(line: 119, column: 15, scope: !1960)
!2006 = !DILocation(line: 120, column: 34, scope: !1960)
!2007 = !DILocation(line: 120, column: 23, scope: !1960)
!2008 = !DILocation(line: 122, column: 28, scope: !1960)
!2009 = !DILocation(line: 125, column: 3, scope: !1960)
!2010 = !DILocation(line: 125, column: 9, scope: !1960)
!2011 = !DILocation(line: 127, column: 28, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !1960, file: !1751, line: 127, column: 2)
!2013 = !DILocation(line: 127, column: 20, scope: !2012)
!2014 = !DILocalVariable(name: "err", scope: !2012, file: !1751, line: 127, type: !241)
!2015 = !DILocation(line: 127, column: 5, scope: !1960)
!2016 = !DILocation(line: 127, column: 41, scope: !2012)
!2017 = !DILocation(line: 129, column: 53, scope: !2012)
!2018 = !DILocation(line: 129, column: 11, scope: !2012)
!2019 = !DILocation(line: 128, column: 17, scope: !2012)
!2020 = !DILocation(line: 95, column: 3, scope: !1956)
!2021 = distinct !DISubprogram(name: "cli.NewSrv", linkageName: "command_line_arguments.NewSrv", scope: null, file: !1751, line: 30, type: !2022, isLocal: false, isDefinition: true, scopeLine: 30, isOptimized: false, unit: !1, retainedNodes: !3)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!1754, !296, !39}
!2024 = !DILocalVariable(name: "ctx", arg: 1, scope: !2021, file: !1751, line: 31, type: !296)
!2025 = !DILocation(line: 31, column: 2, scope: !2021)
!2026 = !DILocalVariable(name: "warp", arg: 2, scope: !2021, file: !1751, line: 32, type: !39)
!2027 = !DILocation(line: 32, column: 2, scope: !2021)
!2028 = !DILocalVariable(name: "$ret38", scope: !2021, file: !1751, line: 33, type: !1754)
!2029 = !DILocation(line: 33, column: 3, scope: !2021)
!2030 = !DILocation(line: 38, column: 7, scope: !2021)
!2031 = !DILocation(line: 39, column: 8, scope: !2021)
!2032 = !DILocation(line: 37, column: 14, scope: !2021)
!2033 = !DILocation(line: 41, column: 10, scope: !2021)
!2034 = !DILocation(line: 34, column: 9, scope: !2021)
!2035 = !DILocation(line: 34, column: 10, scope: !2021)
!2036 = !DILocation(line: 34, column: 2, scope: !2021)
!2037 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk15", scope: null, file: !1751, line: 54, type: !1626, isLocal: true, isDefinition: true, scopeLine: 54, isOptimized: false, unit: !1, retainedNodes: !3)
!2038 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2037, file: !1751, line: 54, type: !1628)
!2039 = !DILocation(line: 54, column: 2, scope: !2037)
!2040 = !DILocalVariable(name: "$ret69", scope: !2037, file: !1751, line: 54, type: !93)
!2041 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk16", scope: null, file: !1751, line: 70, type: !2042, isLocal: true, isDefinition: true, scopeLine: 70, isOptimized: false, unit: !1, retainedNodes: !3)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{!93, !2044}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{Listener}", file: !50, size: 128, align: 8, elements: !2046)
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "object", file: !50, line: 70, baseType: !1789, size: 128, align: 64)
!2048 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2041, file: !1751, line: 70, type: !2044)
!2049 = !DILocation(line: 70, column: 2, scope: !2041)
!2050 = !DILocalVariable(name: "$ret70", scope: !2041, file: !1751, line: 70, type: !93)
!2051 = distinct !DISubprogram(name: "cli.func1", scope: null, file: !1751, line: 77, type: !280, isLocal: true, isDefinition: true, scopeLine: 77, isOptimized: false, unit: !1, retainedNodes: !3)
!2052 = !DILocation(line: 78, column: 4, scope: !2051)
!2053 = !DILocation(line: 78, column: 18, scope: !2051)
!2054 = !DILocation(line: 78, column: 5, scope: !2051)
!2055 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk17", scope: null, file: !1751, line: 77, type: !2056, isLocal: true, isDefinition: true, scopeLine: 77, isOptimized: false, unit: !1, retainedNodes: !3)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!23, !2058}
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DICompositeType(tag: DW_TAG_structure_type, name: "struct{*__go_descriptor}", file: !50, size: 64, align: 8, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fn", file: !50, line: 77, baseType: !966, size: 64, align: 64)
!2062 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2055, file: !1751, line: 77, type: !2058)
!2063 = !DILocation(line: 77, column: 3, scope: !2055)
!2064 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk18", scope: null, file: !1751, line: 88, type: !835, isLocal: true, isDefinition: true, scopeLine: 88, isOptimized: false, unit: !1, retainedNodes: !3)
!2065 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2064, file: !1751, line: 88, type: !837)
!2066 = !DILocation(line: 88, column: 2, scope: !2064)
!2067 = !DILocalVariable(name: "$ret71", scope: !2064, file: !1751, line: 88, type: !93)
!2068 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk19", scope: null, file: !1751, line: 153, type: !1626, isLocal: true, isDefinition: true, scopeLine: 153, isOptimized: false, unit: !1, retainedNodes: !3)
!2069 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2068, file: !1751, line: 153, type: !1628)
!2070 = !DILocation(line: 153, column: 2, scope: !2068)
!2071 = !DILocalVariable(name: "$ret72", scope: !2068, file: !1751, line: 153, type: !93)
!2072 = distinct !DISubprogram(name: "cli.command_line_arguments..thunk20", scope: null, file: !1751, line: 224, type: !1626, isLocal: true, isDefinition: true, scopeLine: 224, isOptimized: false, unit: !1, retainedNodes: !3)
!2073 = !DILocalVariable(name: "__go_thunk_parameter", arg: 1, scope: !2072, file: !1751, line: 224, type: !1628)
!2074 = !DILocation(line: 224, column: 2, scope: !2072)
!2075 = !DILocalVariable(name: "$ret73", scope: !2072, file: !1751, line: 224, type: !93)
	.text
	.file	"gomodule"

	.section ".go_export","e",@progbits
	.ascii "v2;\n"
	.ascii "package "
	.ascii "cli"
	.ascii ";\n"
	.ascii "pkgpath "
	.ascii "command-line-arguments"
	.ascii ";\n"
	.ascii "import "
	.ascii "context"
	.ascii " "
	.ascii "context"
	.ascii " \""
	.ascii "context"
	.ascii "\";\n"
	.ascii "import "
	.ascii "gob"
	.ascii " "
	.ascii "encoding/gob"
	.ascii " \""
	.ascii "encoding/gob"
	.ascii "\";\n"
	.ascii "import "
	.ascii "json"
	.ascii " "
	.ascii "encoding/json"
	.ascii " \""
	.ascii "encoding/json"
	.ascii "\";\n"
	.ascii "import "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt"
	.ascii " \""
	.ascii "fmt"
	.ascii "\";\n"
	.ascii "import "
	.ascii "yamux"
	.ascii " "
	.ascii "github.com/spolu/warp/vendor/github.com/hashicorp/yamux"
	.ascii " \""
	.ascii "github.com/hashicorp/yamux"
	.ascii "\";\n"
	.ascii "import "
	.ascii "homedir"
	.ascii " "
	.ascii "github.com/spolu/warp/vendor/github.com/mitchellh/go-homedir"
	.ascii " \""
	.ascii "github.com/mitchellh/go-homedir"
	.ascii "\";\n"
	.ascii "import "
	.ascii "warp"
	.ascii " "
	.ascii "github.com/spolu/warp"
	.ascii " \""
	.ascii "github.com/spolu/warp"
	.ascii "\";\n"
	.ascii "import "
	.ascii "errors"
	.ascii " "
	.ascii "github.com/spolu/warp/lib/errors"
	.ascii " \""
	.ascii "github.com/spolu/warp/lib/errors"
	.ascii "\";\n"
	.ascii "import "
	.ascii "out"
	.ascii " "
	.ascii "github.com/spolu/warp/lib/out"
	.ascii " \""
	.ascii "github.com/spolu/warp/lib/out"
	.ascii "\";\n"
	.ascii "import "
	.ascii "token"
	.ascii " "
	.ascii "github.com/spolu/warp/lib/token"
	.ascii " \""
	.ascii "github.com/spolu/warp/lib/token"
	.ascii "\";\n"
	.ascii "import "
	.ascii "ioutil"
	.ascii " "
	.ascii "io/ioutil"
	.ascii " \""
	.ascii "io/ioutil"
	.ascii "\";\n"
	.ascii "import "
	.ascii "net"
	.ascii " "
	.ascii "net"
	.ascii " \""
	.ascii "net"
	.ascii "\";\n"
	.ascii "import "
	.ascii "os"
	.ascii " "
	.ascii "os"
	.ascii " \""
	.ascii "os"
	.ascii "\";\n"
	.ascii "import "
	.ascii "path"
	.ascii " "
	.ascii "path"
	.ascii " \""
	.ascii "path"
	.ascii "\";\n"
	.ascii "import "
	.ascii "filepath"
	.ascii " "
	.ascii "path/filepath"
	.ascii " \""
	.ascii "path/filepath"
	.ascii "\";\n"
	.ascii "import "
	.ascii "regexp"
	.ascii " "
	.ascii "regexp"
	.ascii " \""
	.ascii "regexp"
	.ascii "\";\n"
	.ascii "import "
	.ascii "strings"
	.ascii " "
	.ascii "strings"
	.ascii " \""
	.ascii "strings"
	.ascii "\";\n"
	.ascii "import "
	.ascii "sync"
	.ascii " "
	.ascii "sync"
	.ascii " \""
	.ascii "sync"
	.ascii "\";\n"
	.ascii "import "
	.ascii "syscall"
	.ascii " "
	.ascii "syscall"
	.ascii " \""
	.ascii "syscall"
	.ascii "\";\n"
	.ascii "import "
	.ascii "time"
	.ascii " "
	.ascii "time"
	.ascii " \""
	.ascii "time"
	.ascii "\";\n"
	.ascii "init"
	.ascii " "
	.ascii "cli"
	.ascii " "
	.ascii "command_line_arguments..import"
	.ascii " "
	.ascii "bufio"
	.ascii " "
	.ascii "bufio..import"
	.ascii " "
	.ascii "bytes"
	.ascii " "
	.ascii "bytes..import"
	.ascii " "
	.ascii "context"
	.ascii " "
	.ascii "context..import"
	.ascii " "
	.ascii "cipher"
	.ascii " "
	.ascii "crypto_cipher..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "crypto_rand..import"
	.ascii " "
	.ascii "base64"
	.ascii " "
	.ascii "encoding_base64..import"
	.ascii " "
	.ascii "binary"
	.ascii " "
	.ascii "encoding_binary..import"
	.ascii " "
	.ascii "gob"
	.ascii " "
	.ascii "encoding_gob..import"
	.ascii " "
	.ascii "json"
	.ascii " "
	.ascii "encoding_json..import"
	.ascii " "
	.ascii "fmt"
	.ascii " "
	.ascii "fmt..import"
	.ascii " "
	.ascii "warp"
	.ascii " "
	.ascii "github_com_spolu_warp..import"
	.ascii " "
	.ascii "out"
	.ascii " "
	.ascii "github_com_spolu_warp_lib_out..import"
	.ascii " "
	.ascii "token"
	.ascii " "
	.ascii "github_com_spolu_warp_lib_token..import"
	.ascii " "
	.ascii "color"
	.ascii " "
	.ascii "github_com_spolu_warp_vendor_github_com_fatih_color..import"
	.ascii " "
	.ascii "yamux"
	.ascii " "
	.ascii "github_com_spolu_warp_vendor_github_com_hashicorp_yamux..import"
	.ascii " "
	.ascii "homedir"
	.ascii " "
	.ascii "github_com_spolu_warp_vendor_github_com_mitchellh_go_homedir..import"
	.ascii " "
	.ascii "poll"
	.ascii " "
	.ascii "internal_poll..import"
	.ascii " "
	.ascii "testlog"
	.ascii " "
	.ascii "internal_testlog..import"
	.ascii " "
	.ascii "io"
	.ascii " "
	.ascii "io..import"
	.ascii " "
	.ascii "ioutil"
	.ascii " "
	.ascii "io_ioutil..import"
	.ascii " "
	.ascii "log"
	.ascii " "
	.ascii "log..import"
	.ascii " "
	.ascii "big"
	.ascii " "
	.ascii "math_big..import"
	.ascii " "
	.ascii "rand"
	.ascii " "
	.ascii "math_rand..import"
	.ascii " "
	.ascii "net"
	.ascii " "
	.ascii "net..import"
	.ascii " "
	.ascii "os"
	.ascii " "
	.ascii "os..import"
	.ascii " "
	.ascii "exec"
	.ascii " "
	.ascii "os_exec..import"
	.ascii " "
	.ascii "path"
	.ascii " "
	.ascii "path..import"
	.ascii " "
	.ascii "filepath"
	.ascii " "
	.ascii "path_filepath..import"
	.ascii " "
	.ascii "reflect"
	.ascii " "
	.ascii "reflect..import"
	.ascii " "
	.ascii "regexp"
	.ascii " "
	.ascii "regexp..import"
	.ascii " "
	.ascii "syntax"
	.ascii " "
	.ascii "regexp_syntax..import"
	.ascii " "
	.ascii "runtime"
	.ascii " "
	.ascii "runtime..import"
	.ascii " "
	.ascii "sys"
	.ascii " "
	.ascii "runtime_internal_sys..import"
	.ascii " "
	.ascii "strconv"
	.ascii " "
	.ascii "strconv..import"
	.ascii " "
	.ascii "sync"
	.ascii " "
	.ascii "sync..import"
	.ascii " "
	.ascii "syscall"
	.ascii " "
	.ascii "syscall..import"
	.ascii " "
	.ascii "time"
	.ascii " "
	.ascii "time..import"
	.ascii " "
	.ascii "unicode"
	.ascii " "
	.ascii "unicode..import"
	.ascii ";\n"
	.ascii "init_graph"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "0"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "8"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "9"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "11"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "12"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "4"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "5"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "6"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "13"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "14"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "1"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "15"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "16"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "20"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "21"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "7"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "22"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "23"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "24"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "3"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "10"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "26"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "27"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "17"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "18"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "25"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "28"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "30"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "2"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "19"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "29"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "31"
	.ascii " "
	.ascii "38"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "34"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "36"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "32"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "33"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "35"
	.ascii " "
	.ascii "37"
	.ascii " "
	.ascii "36"
	.ascii ";\n"
	.ascii "func "
	.ascii "CheckEnvWarp"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1 "
	.ascii "\"context.Context\" "
	.ascii "<type 2 "
	.ascii "interface { "
	.ascii "Deadline"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "deadline"
	.ascii " "
	.ascii "<type 3 "
	.ascii "\"time.Time\" "
	.ascii "<type 4 "
	.ascii "struct { "
	.ascii ".time.wall"
	.ascii " "
	.ascii "<type -8>"
	.ascii "; "
	.ascii ".time.ext"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.loc"
	.ascii " "
	.ascii "<type 5 "
	.ascii "*"
	.ascii "<type 6 "
	.ascii "\"time.Location\" "
	.ascii "<type 7 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.zone"
	.ascii " "
	.ascii "<type 8 "
	.ascii "["
	.ascii "] "
	.ascii "<type 9 "
	.ascii "\".time.zone\" "
	.ascii "<type 10 "
	.ascii "struct { "
	.ascii ".time.name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".time.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".time.isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.tx"
	.ascii " "
	.ascii "<type 11 "
	.ascii "["
	.ascii "] "
	.ascii "<type 12 "
	.ascii "\".time.zoneTrans\" "
	.ascii "<type 13 "
	.ascii "struct { "
	.ascii ".time.when"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.index"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".time.isstd"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".time.isutc"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".time.cacheStart"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheEnd"
	.ascii " "
	.ascii "<type -4>"
	.ascii "; "
	.ascii ".time.cacheZone"
	.ascii " "
	.ascii "<type 14 "
	.ascii "*"
	.ascii "<type 9>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 15 "
	.ascii "*"
	.ascii "<type 6>"
	.ascii ">"
	.ascii ") "
	.ascii ".time.lookupFirstZone"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 15>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 15>"
	.ascii ") "
	.ascii ".time.lookupName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "unix"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 15>"
	.ascii ") "
	.ascii ".time.firstZoneUsed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 15>"
	.ascii ") "
	.ascii ".time.get"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 15>"
	.ascii ") "
	.ascii ".time.lookup"
	.ascii " ("
	.ascii "sec"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "isDST"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "start"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "end"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16 "
	.ascii "*"
	.ascii "<type 3>"
	.ascii ">"
	.ascii ") "
	.ascii "UnmarshalJSON"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 17 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "GobEncode"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 18 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.setLoc"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 5>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.addSec"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.unixSec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Before"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Equal"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii ".time.abs"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.stripMono"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Minute"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii "GobDecode"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 19 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Unix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "After"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Day"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.sec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii "UnmarshalText"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 20 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Weekday"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 21 "
	.ascii "\"time.Weekday\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 21>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "loc"
	.ascii " "
	.ascii "<type 5>"
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Zone"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.setMono"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii ".time.locabs"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "abs"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 22 "
	.ascii "\"time.Duration\" "
	.ascii "<type -4>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "Minutes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "Round"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 22>"
	.ascii ")"
	.ascii " "
	.ascii "<type 22>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "Seconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "Hours"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 22>"
	.ascii ")"
	.ascii " "
	.ascii "<type 22>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ") "
	.ascii "Nanoseconds"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Date"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 23 "
	.ascii "\"time.Month\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 23>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "MarshalJSON"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 24 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "MarshalText"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 25 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "IsZero"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Format"
	.ascii " ("
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Year"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "UTC"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii ".time.date"
	.ascii " ("
	.ascii "full"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "month"
	.ascii " "
	.ascii "<type 23>"
	.ascii ", "
	.ascii "day"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "yday"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.nsec"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "AddDate"
	.ascii " ("
	.ascii "years"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "months"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "days"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Month"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 23>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Second"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii ".time.mono"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "AppendFormat"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 26 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "layout"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 27 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "ISOWeek"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "year"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "week"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Clock"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "hour"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "min"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "sec"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Hour"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Nanosecond"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "MarshalBinary"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 28 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "UnixNano"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "YearDay"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 16>"
	.ascii ") "
	.ascii "UnmarshalBinary"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 29 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Add"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 22>"
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Sub"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type 22>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Local"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 3>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ") "
	.ascii "Location"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 5>"
	.ascii ";\n"
	.ascii ">"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "Done"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 30 "
	.ascii "chan "
	.ascii "<- "
	.ascii "<type 31 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "Err"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "Value"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 32 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 33 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 34 "
	.ascii "\"Cli\" "
	.ascii "<type 35 "
	.ascii "struct { "
	.ascii "Ctx"
	.ascii " "
	.ascii "<type 1>"
	.ascii "; "
	.ascii "Flags"
	.ascii " "
	.ascii "<type 36 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "Args"
	.ascii " "
	.ascii "<type 37 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "c"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 38 "
	.ascii "*"
	.ascii "<type 34>"
	.ascii ">"
	.ascii ") "
	.ascii "Run"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 39 "
	.ascii "\"CmdName\" "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 40 "
	.ascii "\"Command\" "
	.ascii "<type 41 "
	.ascii "interface { "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 39>"
	.ascii "; "
	.ascii "Help"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii "; "
	.ascii "Parse"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 42 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 43 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "Execute"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 44 "
	.ascii "\"Config\" "
	.ascii "<type 45 "
	.ascii "struct { "
	.ascii "Credentials"
	.ascii " "
	.ascii "<type 46 "
	.ascii "\"Credentials\" "
	.ascii "<type 47 "
	.ascii "struct { "
	.ascii "User"
	.ascii " "
	.ascii "<type -16>"
	.ascii " "
	.ascii "\"json:\\\"user\\\"\""
	.ascii "; "
	.ascii "Secret"
	.ascii " "
	.ascii "<type -16>"
	.ascii " "
	.ascii "\"json:\\\"secret\\\"\""
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii " "
	.ascii "\"json:\\\"credentials\\\"\""
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "ConfigPath"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 48 "
	.ascii "*"
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 46>"
	.ascii ";\n"
	.ascii "func "
	.ascii "DetectShell"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 49 "
	.ascii "*"
	.ascii "<type 50 "
	.ascii "\"Shell\" "
	.ascii "<type 51 "
	.ascii "struct { "
	.ascii "Command"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "GenerateConfig"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 52 "
	.ascii "*"
	.ascii "<type 44>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "New"
	.ascii " ("
	.ascii "argv"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 53 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 38>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewSession"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "session"
	.ascii " "
	.ascii "<type 54 "
	.ascii "\"github.com/spolu/warp.Session\" "
	.ascii "<type 55 "
	.ascii "struct { "
	.ascii "Token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "User"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Secret"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "w"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "sessionType"
	.ascii " "
	.ascii "<type 56 "
	.ascii "\"github.com/spolu/warp.SessionType\" "
	.ascii "<type -16>"
	.ascii ">"
	.ascii ", "
	.ascii "username"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "cancel"
	.ascii " "
	.ascii "<type 57 "
	.ascii "("
	.ascii ")"
	.ascii ">"
	.ascii ", "
	.ascii "conn"
	.ascii " "
	.ascii "<type 58 "
	.ascii "\"net.Conn\" "
	.ascii "<type 59 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 60 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 61 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 62 "
	.ascii "\"net.Addr\" "
	.ascii "<type 63 "
	.ascii "interface { "
	.ascii "Network"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 62>"
	.ascii "; "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 64 "
	.ascii "*"
	.ascii "<type 65 "
	.ascii "\"Session\" "
	.ascii "<type 66 "
	.ascii "struct { "
	.ascii ".command-line-arguments.session"
	.ascii " "
	.ascii "<type 54>"
	.ascii "; "
	.ascii ".command-line-arguments.warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.sessionType"
	.ascii " "
	.ascii "<type 56>"
	.ascii "; "
	.ascii ".command-line-arguments.username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.conn"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".command-line-arguments.mux"
	.ascii " "
	.ascii "<type 67 "
	.ascii "*"
	.ascii "<type 68 "
	.ascii "\"github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Session\" "
	.ascii "<type 69 "
	.ascii "struct { "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.remoteGoAway"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.localGoAway"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.nextStreamID"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.config"
	.ascii " "
	.ascii "<type 70 "
	.ascii "*"
	.ascii "<type 71 "
	.ascii "\"github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Config\" "
	.ascii "<type 72 "
	.ascii "struct { "
	.ascii "AcceptBacklog"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "EnableKeepAlive"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "KeepAliveInterval"
	.ascii " "
	.ascii "<type 22>"
	.ascii "; "
	.ascii "ConnectionWriteTimeout"
	.ascii " "
	.ascii "<type 22>"
	.ascii "; "
	.ascii "MaxStreamWindowSize"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "LogOutput"
	.ascii " "
	.ascii "<type 73 "
	.ascii "\"io.Writer\" "
	.ascii "\""
	.ascii "io"
	.ascii "\" "
	.ascii "<type 74 "
	.ascii "interface { "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 75 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.logger"
	.ascii " "
	.ascii "<type 76 "
	.ascii "*"
	.ascii "<type 77 "
	.ascii "\"log.Logger\" "
	.ascii "\""
	.ascii "log"
	.ascii "\" "
	.ascii "<type 78 "
	.ascii "struct { "
	.ascii ".log.mu"
	.ascii " "
	.ascii "<type 79 "
	.ascii "\"sync.Mutex\" "
	.ascii "<type 80 "
	.ascii "struct { "
	.ascii ".sync.state"
	.ascii " "
	.ascii "<type -3>"
	.ascii "; "
	.ascii ".sync.sema"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 81 "
	.ascii "*"
	.ascii "<type 79>"
	.ascii ">"
	.ascii ") "
	.ascii "Unlock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 81>"
	.ascii ") "
	.ascii "Lock"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".log.prefix"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".log.flag"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".log.out"
	.ascii " "
	.ascii "<type 73>"
	.ascii "; "
	.ascii ".log.buf"
	.ascii " "
	.ascii "<type 82 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83 "
	.ascii "*"
	.ascii "<type 77>"
	.ascii ">"
	.ascii ") "
	.ascii "Fatalf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 84 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Fatal"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 85 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Panicln"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 86 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Println"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 87 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Fatalln"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 88 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Panicf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 89 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "SetFlags"
	.ascii " ("
	.ascii "flag"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "SetPrefix"
	.ascii " ("
	.ascii "prefix"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "SetOutput"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Panic"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 90 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Flags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Printf"
	.ascii " ("
	.ascii "format"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 91 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Prefix"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii ".log.formatHeader"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 92 "
	.ascii "*"
	.ascii "<type 93 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 3>"
	.ascii ", "
	.ascii "file"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "line"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Print"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "..."
	.ascii "<type 94 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "l"
	.ascii " "
	.ascii "<type 83>"
	.ascii ") "
	.ascii "Output"
	.ascii " ("
	.ascii "calldepth"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.conn"
	.ascii " "
	.ascii "<type 95 "
	.ascii "\"io.ReadWriteCloser\" "
	.ascii "<type 96 "
	.ascii "interface { "
	.ascii "? "
	.ascii "<type 97 "
	.ascii "\"io.Reader\" "
	.ascii "<type 98 "
	.ascii "interface { "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 99 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 73>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 100 "
	.ascii "\"io.Closer\" "
	.ascii "<type 101 "
	.ascii "interface { "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.bufRead"
	.ascii " "
	.ascii "<type 102 "
	.ascii "*"
	.ascii "<type 103 "
	.ascii "\"bufio.Reader\" "
	.ascii "\""
	.ascii "bufio"
	.ascii "\" "
	.ascii "<type 104 "
	.ascii "struct { "
	.ascii ".bufio.buf"
	.ascii " "
	.ascii "<type 105 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bufio.rd"
	.ascii " "
	.ascii "<type 97>"
	.ascii "; "
	.ascii ".bufio.r"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.w"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".bufio.lastByte"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bufio.lastRuneSize"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 106 "
	.ascii "*"
	.ascii "<type 103>"
	.ascii ">"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<type 107 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii ".bufio.fill"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii ".bufio.writeBuf"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "Discard"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "discarded"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "ReadBytes"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 108 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "Peek"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 109 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x80a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "ReadRune"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "Buffered"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "ReadString"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x82a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "ReadLine"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 110 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "isPrefix"
	.ascii " "
	.ascii "<type -15>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x10a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "UnreadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "r"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x12a>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "ReadSlice"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 111 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "UnreadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii ".bufio.readErr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii ".bufio.reset"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<type 112 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "r"
	.ascii " "
	.ascii "<type 97>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 106>"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 97>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pings"
	.ascii " "
	.ascii "<type 113 "
	.ascii "map ["
	.ascii "<type -7>"
	.ascii "] "
	.ascii "<type 114 "
	.ascii "chan "
	.ascii "<type 115 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingID"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.pingLock"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streams"
	.ascii " "
	.ascii "<type 116 "
	.ascii "map ["
	.ascii "<type -7>"
	.ascii "] "
	.ascii "<type 117 "
	.ascii "*"
	.ascii "<type 118 "
	.ascii "\"github.com/spolu/warp/vendor/github.com/hashicorp/yamux.Stream\" "
	.ascii "<type 119 "
	.ascii "struct { "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvWindow"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindow"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.id"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.session"
	.ascii " "
	.ascii "<type 120 "
	.ascii "*"
	.ascii "<type 68>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.state"
	.ascii " "
	.ascii "<type 121 "
	.ascii "\".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamState\" "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.stateLock"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvBuf"
	.ascii " "
	.ascii "<type 122 "
	.ascii "*"
	.ascii "<type 123 "
	.ascii "\"bytes.Buffer\" "
	.ascii "\""
	.ascii "bytes"
	.ascii "\" "
	.ascii "<type 124 "
	.ascii "struct { "
	.ascii ".bytes.buf"
	.ascii " "
	.ascii "<type 125 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bytes.off"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".bytes.bootstrap"
	.ascii " "
	.ascii "<type 126 "
	.ascii "["
	.ascii "64"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".bytes.lastRead"
	.ascii " "
	.ascii "<type 127 "
	.ascii "\".bytes.readOp\" "
	.ascii "<type -1>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128 "
	.ascii "*"
	.ascii "<type 123>"
	.ascii ">"
	.ascii ") "
	.ascii "UnreadByte"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "ReadRune"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ", "
	.ascii "size"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii ".bytes.empty"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 129 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "ReadFrom"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type 97>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii ".bytes.tryGrowByReslice"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Cap"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "ReadBytes"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 130 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Grow"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Truncate"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Next"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 131 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 132 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "WriteTo"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -4>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "WriteByte"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "ReadString"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "WriteRune"
	.ascii " ("
	.ascii "r"
	.ascii " "
	.ascii "<type -21>"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii ".bytes.readSlice"
	.ascii " ("
	.ascii "delim"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii " ("
	.ascii "line"
	.ascii " "
	.ascii "<type 133 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "UnreadRune"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii ".bytes.grow"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 128>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 134 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLock"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdr"
	.ascii " "
	.ascii "<type 135 "
	.ascii "\".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.header\" "
	.ascii "<type 136 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.encode"
	.ascii " ("
	.ascii "msgType"
	.ascii " "
	.ascii "<type -5>"
	.ascii ", "
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ", "
	.ascii "streamID"
	.ascii " "
	.ascii "<type -7>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "Length"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -7>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "Version"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -5>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "Flags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -6>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "MsgType"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -5>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "h"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ") "
	.ascii "StreamID"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -7>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlErr"
	.ascii " "
	.ascii "<type 137 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.controlHdrLock"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendHdr"
	.ascii " "
	.ascii "<type 135>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendErr"
	.ascii " "
	.ascii "<type 138 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendLock"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvNotifyCh"
	.ascii " "
	.ascii "<type 139 "
	.ascii "chan "
	.ascii "<type 140 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNotifyCh"
	.ascii " "
	.ascii "<type 141 "
	.ascii "chan "
	.ascii "<type 142 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readDeadline"
	.ascii " "
	.ascii "<type 3>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.writeDeadline"
	.ascii " "
	.ascii "<type 3>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143 "
	.ascii "*"
	.ascii "<type 118>"
	.ascii ">"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.readData"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ", "
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ", "
	.ascii "conn"
	.ascii " "
	.ascii "<type 97>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "Shrink"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.notifyWaiting"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "SetReadDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.processFlags"
	.ascii " ("
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "StreamID"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -7>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 62>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 144 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendFlags"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -6>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "SetDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendClose"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "Session"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 120>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 62>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.forceClose"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 145 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incrSendWindow"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ", "
	.ascii "flags"
	.ascii " "
	.ascii "<type -6>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendWindowUpdate"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii "SetWriteDeadline"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 3>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 143>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.write"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 146 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.inflight"
	.ascii " "
	.ascii "<type 147 "
	.ascii "map ["
	.ascii "<type -7>"
	.ascii "] "
	.ascii "<type 148 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.streamLock"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.synCh"
	.ascii " "
	.ascii "<type 149 "
	.ascii "chan "
	.ascii "<type 150 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.acceptCh"
	.ascii " "
	.ascii "<type 151 "
	.ascii "chan "
	.ascii "<type 117>"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendCh"
	.ascii " "
	.ascii "<type 152 "
	.ascii "chan "
	.ascii "<type 153 "
	.ascii "\".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendReady\" "
	.ascii "<type 154 "
	.ascii "struct { "
	.ascii "Hdr"
	.ascii " "
	.ascii "<type 155 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "Body"
	.ascii " "
	.ascii "<type 97>"
	.ascii "; "
	.ascii "Err"
	.ascii " "
	.ascii "<type 156 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvDoneCh"
	.ascii " "
	.ascii "<type 157 "
	.ascii "chan "
	.ascii "<type 158 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdown"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownErr"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownCh"
	.ascii " "
	.ascii "<type 159 "
	.ascii "chan "
	.ascii "<type 160 "
	.ascii "struct { "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.shutdownLock"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.closeStream"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.incomingStream"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleGoAway"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x102>"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "AcceptStream"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 117>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recvLoop"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "OpenStream"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 117>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "NumStreams"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "Open"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 58>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 161 "
	.ascii "*"
	.ascii "<type 68>"
	.ascii ">"
	.ascii ") "
	.ascii "LocalAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 62>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 161>"
	.ascii ") "
	.ascii "Addr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 62>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "IsClosed"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 161>"
	.ascii ") "
	.ascii "RemoteAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 62>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.sendNoWait"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 135>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x102>"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "Accept"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 58>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.keepalive"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.exitErr"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.recv"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "GoAway"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.establishStream"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSendErr"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 135>"
	.ascii ", "
	.ascii "body"
	.ascii " "
	.ascii "<type 97>"
	.ascii ", "
	.ascii "errCh"
	.ascii " "
	.ascii "<type 162 "
	.ascii "chan "
	.ascii "<type -19>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.waitForSend"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 135>"
	.ascii ", "
	.ascii "body"
	.ascii " "
	.ascii "<type 97>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.goAway"
	.ascii " ("
	.ascii "reason"
	.ascii " "
	.ascii "<type -7>"
	.ascii ")"
	.ascii " "
	.ascii "<type 135>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii "Ping"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 22>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.send"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handlePing"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 135>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 120>"
	.ascii ") "
	.ascii ".github.com/spolu/warp/vendor/github.com/hashicorp/yamux.handleStreamMessage"
	.ascii " ("
	.ascii "hdr"
	.ascii " "
	.ascii "<type 135>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.stateC"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".command-line-arguments.stateR"
	.ascii " "
	.ascii "<type 163 "
	.ascii "*"
	.ascii "<type 164 "
	.ascii "\"encoding/gob.Decoder\" "
	.ascii "<type 165 "
	.ascii "struct { "
	.ascii ".encoding/gob.mutex"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".encoding/gob.r"
	.ascii " "
	.ascii "<type 97>"
	.ascii "; "
	.ascii ".encoding/gob.buf"
	.ascii " "
	.ascii "<type 166 "
	.ascii "\".encoding/gob.decBuffer\" "
	.ascii "<type 167 "
	.ascii "struct { "
	.ascii ".encoding/gob.data"
	.ascii " "
	.ascii "<type 168 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.offset"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 169 "
	.ascii "*"
	.ascii "<type 166>"
	.ascii ">"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "Read"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 170 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "ReadByte"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -20>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 171 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "Drop"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 169>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.wireType"
	.ascii " "
	.ascii "<type 172 "
	.ascii "map ["
	.ascii "<type 173 "
	.ascii "\".encoding/gob.typeId\" "
	.ascii "<type -3>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 173>"
	.ascii ") "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 173>"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 173>"
	.ascii ") "
	.ascii ".encoding/gob.gobType"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 174 "
	.ascii "\".encoding/gob.gobType\" "
	.ascii "<type 175 "
	.ascii "interface { "
	.ascii ".encoding/gob.id"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 173>"
	.ascii "; "
	.ascii ".encoding/gob.setId"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type 173>"
	.ascii ")"
	.ascii "; "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 176 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii "] "
	.ascii "<type 177 "
	.ascii "*"
	.ascii "<type 178 "
	.ascii "\".encoding/gob.wireType\" "
	.ascii "<type 179 "
	.ascii "struct { "
	.ascii "ArrayT"
	.ascii " "
	.ascii "<type 180 "
	.ascii "*"
	.ascii "<type 181 "
	.ascii "\".encoding/gob.arrayType\" "
	.ascii "<type 182 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 183 "
	.ascii "\"encoding/gob.CommonType\" "
	.ascii "<type 184 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Id"
	.ascii " "
	.ascii "<type 173>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 185 "
	.ascii "*"
	.ascii "<type 183>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 185>"
	.ascii ") "
	.ascii ".encoding/gob.setId"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type 173>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 185>"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 185>"
	.ascii ") "
	.ascii ".encoding/gob.id"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 173>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 185>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 186 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Elem"
	.ascii " "
	.ascii "<type 173>"
	.ascii "; "
	.ascii "Len"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 187 "
	.ascii "*"
	.ascii "<type 181>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 187>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 188 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "a"
	.ascii " "
	.ascii "<type 187>"
	.ascii ") "
	.ascii ".encoding/gob.init"
	.ascii " ("
	.ascii "elem"
	.ascii " "
	.ascii "<type 174>"
	.ascii ", "
	.ascii "len"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "SliceT"
	.ascii " "
	.ascii "<type 189 "
	.ascii "*"
	.ascii "<type 190 "
	.ascii "\".encoding/gob.sliceType\" "
	.ascii "<type 191 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 183>"
	.ascii "; "
	.ascii "Elem"
	.ascii " "
	.ascii "<type 173>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 192 "
	.ascii "*"
	.ascii "<type 190>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 193 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 192>"
	.ascii ") "
	.ascii ".encoding/gob.init"
	.ascii " ("
	.ascii "elem"
	.ascii " "
	.ascii "<type 174>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "StructT"
	.ascii " "
	.ascii "<type 194 "
	.ascii "*"
	.ascii "<type 195 "
	.ascii "\".encoding/gob.structType\" "
	.ascii "<type 196 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 183>"
	.ascii "; "
	.ascii "Field"
	.ascii " "
	.ascii "<type 197 "
	.ascii "["
	.ascii "] "
	.ascii "<type 198 "
	.ascii "*"
	.ascii "<type 199 "
	.ascii "\".encoding/gob.fieldType\" "
	.ascii "<type 200 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Id"
	.ascii " "
	.ascii "<type 173>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 201 "
	.ascii "*"
	.ascii "<type 195>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 201>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 202 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MapT"
	.ascii " "
	.ascii "<type 203 "
	.ascii "*"
	.ascii "<type 204 "
	.ascii "\".encoding/gob.mapType\" "
	.ascii "<type 205 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 183>"
	.ascii "; "
	.ascii "Key"
	.ascii " "
	.ascii "<type 173>"
	.ascii "; "
	.ascii "Elem"
	.ascii " "
	.ascii "<type 173>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 206 "
	.ascii "*"
	.ascii "<type 204>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 206>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<type 207 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "m"
	.ascii " "
	.ascii "<type 206>"
	.ascii ") "
	.ascii ".encoding/gob.init"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 174>"
	.ascii ", "
	.ascii "elem"
	.ascii " "
	.ascii "<type 174>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "GobEncoderT"
	.ascii " "
	.ascii "<type 208 "
	.ascii "*"
	.ascii "<type 209 "
	.ascii "\".encoding/gob.gobEncoderType\" "
	.ascii "<type 210 "
	.ascii "struct { "
	.ascii "? "
	.ascii "<type 183>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 211 "
	.ascii "*"
	.ascii "<type 209>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "g"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 211>"
	.ascii ") "
	.ascii ".encoding/gob.safeString"
	.ascii " ("
	.ascii "seen"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 212 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "BinaryMarshalerT"
	.ascii " "
	.ascii "<type 208>"
	.ascii "; "
	.ascii "TextMarshalerT"
	.ascii " "
	.ascii "<type 208>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 213 "
	.ascii "*"
	.ascii "<type 178>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.string"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.decoderCache"
	.ascii " "
	.ascii "<type 214 "
	.ascii "map ["
	.ascii "<type 215 "
	.ascii "\"reflect.Type\" "
	.ascii "\""
	.ascii "reflect"
	.ascii "\" "
	.ascii "<type 216 "
	.ascii "interface { "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Method"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 217 "
	.ascii "\"reflect.Method\" "
	.ascii "<type 218 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii "Func"
	.ascii " "
	.ascii "<type 219 "
	.ascii "\"reflect.Value\" "
	.ascii "<type 220 "
	.ascii "struct { "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 221 "
	.ascii "*"
	.ascii "<type 222 "
	.ascii "\".reflect.rtype\" "
	.ascii "<type 223 "
	.ascii "struct { "
	.ascii ".reflect.size"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.ptrdata"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii ".reflect.hash"
	.ascii " "
	.ascii "<type -7>"
	.ascii "; "
	.ascii ".reflect.kind"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.align"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii ".reflect.fieldAlign"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect._"
	.ascii " "
	.ascii "<type -5>"
	.ascii "; "
	.ascii ".reflect.hashfn"
	.ascii " "
	.ascii "<type 224 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 225 "
	.ascii "\"unsafe.Pointer\" "
	.ascii "\""
	.ascii "unsafe"
	.ascii "\" "
	.ascii "<type 226 "
	.ascii "*"
	.ascii "any"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -13>"
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.equalfn"
	.ascii " "
	.ascii "<type 227 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 225>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type 225>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.gcdata"
	.ascii " "
	.ascii "<type 228 "
	.ascii "*"
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.string"
	.ascii " "
	.ascii "<type 229 "
	.ascii "*"
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "? "
	.ascii "<type 230 "
	.ascii "*"
	.ascii "<type 231 "
	.ascii "\".reflect.uncommonType\" "
	.ascii "<type 232 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 229>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 229>"
	.ascii "; "
	.ascii ".reflect.methods"
	.ascii " "
	.ascii "<type 233 "
	.ascii "["
	.ascii "] "
	.ascii "<type 234 "
	.ascii "\".reflect.method\" "
	.ascii "<type 235 "
	.ascii "struct { "
	.ascii ".reflect.name"
	.ascii " "
	.ascii "<type 229>"
	.ascii "; "
	.ascii ".reflect.pkgPath"
	.ascii " "
	.ascii "<type 229>"
	.ascii "; "
	.ascii ".reflect.mtyp"
	.ascii " "
	.ascii "<type 236 "
	.ascii "*"
	.ascii "<type 222>"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.typ"
	.ascii " "
	.ascii "<type 236>"
	.ascii "; "
	.ascii ".reflect.tfn"
	.ascii " "
	.ascii "<type 225>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 237 "
	.ascii "*"
	.ascii "<type 231>"
	.ascii ">"
	.ascii ") "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 237>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 237>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 237>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptrToThis"
	.ascii " "
	.ascii "<type 236>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 238 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 239 "
	.ascii "\"reflect.StructField\" "
	.ascii "<type 240 "
	.ascii "struct { "
	.ascii "Name"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii "Tag"
	.ascii " "
	.ascii "<type 241 "
	.ascii "\"reflect.StructTag\" "
	.ascii "<type -16>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 241>"
	.ascii ") "
	.ascii "Get"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "tag"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 241>"
	.ascii ") "
	.ascii "Lookup"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "value"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Offset"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type 242 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii "Anonymous"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x4a>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 239>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii ".reflect.ptrTo"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 236>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 243 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 239>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 217>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 236>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 244 "
	.ascii "\"reflect.Kind\" "
	.ascii "<type -12>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "k"
	.ascii " "
	.ascii "<type 244>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii ".reflect.exportedMethods"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 245 "
	.ascii "["
	.ascii "] "
	.ascii "<type 234>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 239>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x42>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii ".reflect.pointers"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " ("
	.ascii "m"
	.ascii " "
	.ascii "<type 217>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Align"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 246 "
	.ascii "\"reflect.ChanDir\" "
	.ascii "<type -11>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "d"
	.ascii " "
	.ascii "<type 246>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "FieldAlign"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "t"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 236>"
	.ascii ") "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".reflect.ptr"
	.ascii " "
	.ascii "<type 225>"
	.ascii "; "
	.ascii "? "
	.ascii "<type 247 "
	.ascii "\".reflect.flag\" "
	.ascii "<type -13>"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 247>"
	.ascii ") "
	.ascii ".reflect.mustBeExported"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 247>"
	.ascii ") "
	.ascii ".reflect.mustBeAssignable"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 247>"
	.ascii ") "
	.ascii ".reflect.kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 244>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 247>"
	.ascii ") "
	.ascii ".reflect.ro"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 247>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "f"
	.ascii " "
	.ascii "<type 247>"
	.ascii ") "
	.ascii ".reflect.mustBe"
	.ascii " ("
	.ascii "expected"
	.ascii " "
	.ascii "<type 244>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetBytes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 248 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "CanAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "MapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetMapIndex"
	.ascii " ("
	.ascii "key"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "val"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetBool"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Set"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "OverflowInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Method"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "OverflowFloat"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -10>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Type"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "OverflowComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "MapKeys"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 249 "
	.ascii "["
	.ascii "] "
	.ascii "<type 219>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetLen"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 250 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetPointer"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 225>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "OverflowUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "CallSlice"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 251 "
	.ascii "["
	.ascii "] "
	.ascii "<type 219>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 252 "
	.ascii "["
	.ascii "] "
	.ascii "<type 219>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Float"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -10>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "TrySend"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetCap"
	.ascii " ("
	.ascii "n"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Index"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Cap"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii ".reflect.setRunes"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 253 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetComplex"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -18>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii ".reflect.runes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 254 "
	.ascii "["
	.ascii "] "
	.ascii "<type -21>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "InterfaceData"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 255 "
	.ascii "["
	.ascii "2"
	.ascii " "
	.ascii "] "
	.ascii "<type -13>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "TryRecv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Uint"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Convert"
	.ascii " ("
	.ascii "t"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Bool"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Slice"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetInt"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii ".reflect.recv"
	.ascii " ("
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "val"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii ".reflect.assignTo"
	.ascii " ("
	.ascii "context"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "dst"
	.ascii " "
	.ascii "<type 221>"
	.ascii ", "
	.ascii "target"
	.ascii " "
	.ascii "<type 225>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Slice3"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "j"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "k"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetString"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "SetUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "CanInterface"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Recv"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "ok"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Close"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Call"
	.ascii " ("
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 256 "
	.ascii "["
	.ascii "] "
	.ascii "<type 219>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 257 "
	.ascii "["
	.ascii "] "
	.ascii "<type 219>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 258 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Addr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Interface"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type 259 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 244>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Int"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii ".reflect.send"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "nb"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " ("
	.ascii "selected"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii ".reflect.pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 225>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "CanSet"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Pointer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 260 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 219>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "Complex"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -18>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "IsValid"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii ".reflect.call"
	.ascii " ("
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "in"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 261 "
	.ascii "["
	.ascii "] "
	.ascii "<type 219>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 262 "
	.ascii "["
	.ascii "] "
	.ascii "<type 219>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x12>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "UnsafeAddr"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "v"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ") "
	.ascii "IsNil"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii ">"
	.ascii "; "
	.ascii "Index"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "MethodByName"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 217>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "NumMethod"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Name"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "PkgPath"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Size"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -13>"
	.ascii "; "
	.ascii "String"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".reflect.rawString"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Kind"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 244>"
	.ascii "; "
	.ascii "Implements"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "AssignableTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "ConvertibleTo"
	.ascii " ("
	.ascii "u"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Comparable"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Bits"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "ChanDir"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 246>"
	.ascii "; "
	.ascii "IsVariadic"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "Elem"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii "Field"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 239>"
	.ascii "; "
	.ascii "FieldByIndex"
	.ascii " ("
	.ascii "index"
	.ascii " "
	.ascii "<type 263 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 239>"
	.ascii "; "
	.ascii "FieldByName"
	.ascii " ("
	.ascii "name"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 239>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "FieldByNameFunc"
	.ascii " ("
	.ascii "match"
	.ascii " "
	.ascii "<type 264 "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "("
	.ascii "?"
	.ascii " "
	.ascii "<type 239>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii "; "
	.ascii "In"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii "Key"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumField"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumIn"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "NumOut"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Out"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii ".reflect.common"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 221>"
	.ascii "; "
	.ascii ".reflect.uncommon"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 230>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "] "
	.ascii "<type 265 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type 266 "
	.ascii "*"
	.ascii "<type 267 "
	.ascii "*"
	.ascii "<type 268 "
	.ascii "\".encoding/gob.decEngine\" "
	.ascii "<type 269 "
	.ascii "struct { "
	.ascii ".encoding/gob.instr"
	.ascii " "
	.ascii "<type 270 "
	.ascii "["
	.ascii "] "
	.ascii "<type 271 "
	.ascii "\".encoding/gob.decInstr\" "
	.ascii "<type 272 "
	.ascii "struct { "
	.ascii ".encoding/gob.op"
	.ascii " "
	.ascii "<type 273 "
	.ascii "\".encoding/gob.decOp\" "
	.ascii "<type 274 "
	.ascii "("
	.ascii "i"
	.ascii " "
	.ascii "<type 275 "
	.ascii "*"
	.ascii "<type 271>"
	.ascii ">"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<type 276 "
	.ascii "*"
	.ascii "<type 277 "
	.ascii "\".encoding/gob.decoderState\" "
	.ascii "<type 278 "
	.ascii "struct { "
	.ascii ".encoding/gob.dec"
	.ascii " "
	.ascii "<type 279 "
	.ascii "*"
	.ascii "<type 164>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.b"
	.ascii " "
	.ascii "<type 169>"
	.ascii "; "
	.ascii ".encoding/gob.fieldnum"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.next"
	.ascii " "
	.ascii "<type 280 "
	.ascii "*"
	.ascii "<type 277>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 281 "
	.ascii "*"
	.ascii "<type 277>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.getLength"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 281>"
	.ascii ") "
	.ascii ".encoding/gob.decodeInt"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 281>"
	.ascii ") "
	.ascii ".encoding/gob.decodeUint"
	.ascii " ("
	.ascii ")"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.field"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.index"
	.ascii " "
	.ascii "<type 282 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.numInstr"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.ignorerCache"
	.ascii " "
	.ascii "<type 283 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type 266>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.freeList"
	.ascii " "
	.ascii "<type 276>"
	.ascii "; "
	.ascii ".encoding/gob.countBuf"
	.ascii " "
	.ascii "<type 284 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285 "
	.ascii "*"
	.ascii "<type 164>"
	.ascii ">"
	.ascii ") "
	.ascii "Decode"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 286 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.nextUint"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -8>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.readMessage"
	.ascii " ("
	.ascii "nbytes"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.recvMessage"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeIgnoredValue"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeValue"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.nextInt"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -4>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.getIgnoreEnginePtr"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ")"
	.ascii " ("
	.ascii "enginePtr"
	.ascii " "
	.ascii "<type 266>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.getDecEnginePtr"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 287 "
	.ascii "*"
	.ascii "<type 288 "
	.ascii "\".encoding/gob.userTypeInfo\" "
	.ascii "<type 289 "
	.ascii "struct { "
	.ascii ".encoding/gob.user"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii ".encoding/gob.base"
	.ascii " "
	.ascii "<type 215>"
	.ascii "; "
	.ascii ".encoding/gob.indir"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.externalEnc"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.externalDec"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.encIndir"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii ".encoding/gob.decIndir"
	.ascii " "
	.ascii "<type -1>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "enginePtr"
	.ascii " "
	.ascii "<type 266>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeTypeSequence"
	.ascii " ("
	.ascii "isInterface"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type 173>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.compileDec"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ")"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<type 267>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii "DecodeValue"
	.ascii " ("
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.compileIgnoreSingle"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ")"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<type 267>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.compileSingle"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ")"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<type 267>"
	.ascii ", "
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x52>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.typeString"
	.ascii " ("
	.ascii "remoteId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeMap"
	.ascii " ("
	.ascii "mtyp"
	.ascii " "
	.ascii "<type 215>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "keyOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.recvType"
	.ascii " ("
	.ascii "id"
	.ascii " "
	.ascii "<type 173>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreSlice"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreMap"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "keyOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeArray"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 290 "
	.ascii "\".encoding/gob.decHelper\" "
	.ascii "<type 291 "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreStruct"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 267>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeGobDecoder"
	.ascii " ("
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreArrayHelper"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeStruct"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 267>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.newDecoderState"
	.ascii " ("
	.ascii "buf"
	.ascii " "
	.ascii "<type 169>"
	.ascii ")"
	.ascii " "
	.ascii "<type 276>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.freeDecoderState"
	.ascii " ("
	.ascii "d"
	.ascii " "
	.ascii "<type 276>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decIgnoreOpFor"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ", "
	.ascii "inProgress"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 292 "
	.ascii "map ["
	.ascii "<type 173>"
	.ascii "] "
	.ascii "<type 293 "
	.ascii "*"
	.ascii "<type 273>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 293>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreArray"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.gobDecodeOpFor"
	.ascii " ("
	.ascii "ut"
	.ascii " "
	.ascii "<type 287>"
	.ascii ")"
	.ascii " "
	.ascii "<type 293>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeSlice"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 290>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeArrayHelper"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<type 273>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "ovfl"
	.ascii " "
	.ascii "<type -19>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 290>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeInterface"
	.ascii " ("
	.ascii "ityp"
	.ascii " "
	.ascii "<type 215>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 276>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreSingle"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 267>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decodeSingle"
	.ascii " ("
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 267>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreGobDecoder"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 276>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.compatibleType"
	.ascii " ("
	.ascii "fr"
	.ascii " "
	.ascii "<type 215>"
	.ascii ", "
	.ascii "fw"
	.ascii " "
	.ascii "<type 173>"
	.ascii ", "
	.ascii "inProgress"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 294 "
	.ascii "map ["
	.ascii "<type 215>"
	.ascii "] "
	.ascii "<type 173>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.ignoreInterface"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 276>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "dec"
	.ascii " "
	.ascii "<type 285>"
	.ascii ") "
	.ascii ".encoding/gob.decOpFor"
	.ascii " ("
	.ascii "wireId"
	.ascii " "
	.ascii "<type 173>"
	.ascii ", "
	.ascii "rt"
	.ascii " "
	.ascii "<type 215>"
	.ascii ", "
	.ascii "name"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "inProgress"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 295 "
	.ascii "map ["
	.ascii "<type 215>"
	.ascii "] "
	.ascii "<type 293>"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 293>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.updateC"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".command-line-arguments.updateW"
	.ascii " "
	.ascii "<type 296 "
	.ascii "*"
	.ascii "<type 297 "
	.ascii "\"encoding/gob.Encoder\" "
	.ascii "<type 298 "
	.ascii "struct { "
	.ascii ".encoding/gob.mutex"
	.ascii " "
	.ascii "<type 79>"
	.ascii "; "
	.ascii ".encoding/gob.w"
	.ascii " "
	.ascii "<type 299 "
	.ascii "["
	.ascii "] "
	.ascii "<type 73>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.sent"
	.ascii " "
	.ascii "<type 300 "
	.ascii "map ["
	.ascii "<type 215>"
	.ascii "] "
	.ascii "<type 173>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.countState"
	.ascii " "
	.ascii "<type 301 "
	.ascii "*"
	.ascii "<type 302 "
	.ascii "\".encoding/gob.encoderState\" "
	.ascii "<type 303 "
	.ascii "struct { "
	.ascii ".encoding/gob.enc"
	.ascii " "
	.ascii "<type 304 "
	.ascii "*"
	.ascii "<type 297>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.b"
	.ascii " "
	.ascii "<type 305 "
	.ascii "*"
	.ascii "<type 306 "
	.ascii "\".encoding/gob.encBuffer\" "
	.ascii "<type 307 "
	.ascii "struct { "
	.ascii ".encoding/gob.data"
	.ascii " "
	.ascii "<type 308 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.scratch"
	.ascii " "
	.ascii "<type 309 "
	.ascii "["
	.ascii "64"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<type 310 "
	.ascii "*"
	.ascii "<type 306>"
	.ascii ">"
	.ascii ") "
	.ascii "Reset"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ") "
	.ascii "Bytes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 311 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ") "
	.ascii "WriteByte"
	.ascii " ("
	.ascii "c"
	.ascii " "
	.ascii "<type -20>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ") "
	.ascii "Write"
	.ascii " ("
	.ascii "p"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 312 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ") "
	.ascii "Len"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -11>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "e"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 310>"
	.ascii ") "
	.ascii "WriteString"
	.ascii " ("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.sendZero"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".encoding/gob.fieldnum"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.buf"
	.ascii " "
	.ascii "<type 313 "
	.ascii "["
	.ascii "9"
	.ascii " "
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.next"
	.ascii " "
	.ascii "<type 314 "
	.ascii "*"
	.ascii "<type 302>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 315 "
	.ascii "*"
	.ascii "<type 302>"
	.ascii ">"
	.ascii ") "
	.ascii ".encoding/gob.update"
	.ascii " ("
	.ascii "instr"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 316 "
	.ascii "*"
	.ascii "<type 317 "
	.ascii "\".encoding/gob.encInstr\" "
	.ascii "<type 318 "
	.ascii "struct { "
	.ascii ".encoding/gob.op"
	.ascii " "
	.ascii "<type 319 "
	.ascii "\".encoding/gob.encOp\" "
	.ascii "<type 320 "
	.ascii "("
	.ascii "i"
	.ascii " "
	.ascii "<type 321 "
	.ascii "*"
	.ascii "<type 317>"
	.ascii ">"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<type 315>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.field"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii ".encoding/gob.index"
	.ascii " "
	.ascii "<type 322 "
	.ascii "["
	.ascii "] "
	.ascii "<type -11>"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.indir"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 315>"
	.ascii ") "
	.ascii ".encoding/gob.encodeInt"
	.ascii " ("
	.ascii "i"
	.ascii " "
	.ascii "<type -4>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 315>"
	.ascii ") "
	.ascii ".encoding/gob.encodeUint"
	.ascii " ("
	.ascii "x"
	.ascii " "
	.ascii "<type -8>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".encoding/gob.freeList"
	.ascii " "
	.ascii "<type 301>"
	.ascii "; "
	.ascii ".encoding/gob.byteBuf"
	.ascii " "
	.ascii "<type 306>"
	.ascii "; "
	.ascii ".encoding/gob.err"
	.ascii " "
	.ascii "<type -19>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323 "
	.ascii "*"
	.ascii "<type 297>"
	.ascii ">"
	.ascii ") "
	.ascii "EncodeValue"
	.ascii " ("
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.sendTypeId"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 301>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.sendTypeDescriptor"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 301>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii "Encode"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 324 "
	.ascii "interface { "
	.ascii "}"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.sendActualType"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 301>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ", "
	.ascii "actual"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " ("
	.ascii "sent"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.pushWriter"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.encodeSingle"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ", "
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 325 "
	.ascii "*"
	.ascii "<type 326 "
	.ascii "\".encoding/gob.encEngine\" "
	.ascii "<type 327 "
	.ascii "struct { "
	.ascii ".encoding/gob.instr"
	.ascii " "
	.ascii "<type 328 "
	.ascii "["
	.ascii "] "
	.ascii "<type 317>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.freeEncoderState"
	.ascii " ("
	.ascii "e"
	.ascii " "
	.ascii "<type 301>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.encodeStruct"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ", "
	.ascii "engine"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 325>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.newEncoderState"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ")"
	.ascii " "
	.ascii "<type 301>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.encodeMap"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ", "
	.ascii "mv"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "keyOp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 319>"
	.ascii ", "
	.ascii "elemOp"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 319>"
	.ascii ", "
	.ascii "keyIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "elemIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.popWriter"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.encodeArray"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "op"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 319>"
	.ascii ", "
	.ascii "elemIndir"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "length"
	.ascii " "
	.ascii "<type -11>"
	.ascii ", "
	.ascii "helper"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 329 "
	.ascii "\".encoding/gob.encHelper\" "
	.ascii "<type 330 "
	.ascii "("
	.ascii "state"
	.ascii " "
	.ascii "<type 301>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.encode"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ", "
	.ascii "value"
	.ascii " "
	.ascii "<type 219>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x32>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.writer"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 73>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.writeMessage"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ", "
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.encodeInterface"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ", "
	.ascii "iv"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.sendType"
	.ascii " ("
	.ascii "w"
	.ascii " "
	.ascii "<type 73>"
	.ascii ", "
	.ascii "state"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 301>"
	.ascii ", "
	.ascii "origt"
	.ascii " "
	.ascii "<type 215>"
	.ascii ")"
	.ascii " ("
	.ascii "sent"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.setError"
	.ascii " ("
	.ascii "err"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "enc"
	.ascii " "
	.ascii "<type 323>"
	.ascii ") "
	.ascii ".encoding/gob.encodeGobEncoder"
	.ascii " ("
	.ascii "b"
	.ascii " "
	.ascii "<type 305>"
	.ascii ", "
	.ascii "ut"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 287>"
	.ascii ", "
	.ascii "v"
	.ascii " "
	.ascii "<type 219>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.errorC"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".command-line-arguments.errorR"
	.ascii " "
	.ascii "<type 163>"
	.ascii "; "
	.ascii ".command-line-arguments.dataC"
	.ascii " "
	.ascii "<type 58>"
	.ascii "; "
	.ascii ".command-line-arguments.state"
	.ascii " "
	.ascii "<type 331 "
	.ascii "*"
	.ascii "<type 332 "
	.ascii "\"WarpState\" "
	.ascii "<type 333 "
	.ascii "struct { "
	.ascii ".command-line-arguments.token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.windowSize"
	.ascii " "
	.ascii "<type 334 "
	.ascii "\"github.com/spolu/warp.Size\" "
	.ascii "<type 335 "
	.ascii "struct { "
	.ascii "Rows"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "Cols"
	.ascii " "
	.ascii "<type -11>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.users"
	.ascii " "
	.ascii "<type 336 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 337 "
	.ascii "\"UserState\" "
	.ascii "<type 338 "
	.ascii "struct { "
	.ascii ".command-line-arguments.token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.mode"
	.ascii " "
	.ascii "<type 339 "
	.ascii "\"github.com/spolu/warp.Mode\" "
	.ascii "<type -8>"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.hosting"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "u"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 340 "
	.ascii "*"
	.ascii "<type 337>"
	.ascii ">"
	.ascii ") "
	.ascii "ProtocolUser"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 341 "
	.ascii "\"github.com/spolu/warp.User\" "
	.ascii "<type 342 "
	.ascii "struct { "
	.ascii "Token"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Mode"
	.ascii " "
	.ascii "<type 339>"
	.ascii "; "
	.ascii "Hosting"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 343 "
	.ascii "*"
	.ascii "<type 332>"
	.ascii ">"
	.ascii ") "
	.ascii "Update"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 344 "
	.ascii "\"github.com/spolu/warp.State\" "
	.ascii "<type 345 "
	.ascii "struct { "
	.ascii "Warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "WindowSize"
	.ascii " "
	.ascii "<type 334>"
	.ascii "; "
	.ascii "Users"
	.ascii " "
	.ascii "<type 346 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 341>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "hosting"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 343>"
	.ascii ") "
	.ascii "GetMode"
	.ascii " ("
	.ascii "user"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 347 "
	.ascii "*"
	.ascii "<type 339>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 343>"
	.ascii ") "
	.ascii "SetMode"
	.ascii " ("
	.ascii "user"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "mode"
	.ascii " "
	.ascii "<type 339>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 343>"
	.ascii ") "
	.ascii "HostCanReceiveWrite"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 343>"
	.ascii ") "
	.ascii "ProtocolState"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 344>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 343>"
	.ascii ") "
	.ascii "WindowSize"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 334>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "w"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 343>"
	.ascii ") "
	.ascii "Modes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 348 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 339>"
	.ascii ">"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.tornDown"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii ".command-line-arguments.cancel"
	.ascii " "
	.ascii "<type 349 "
	.ascii "("
	.ascii ")"
	.ascii ">"
	.ascii "; "
	.ascii ".command-line-arguments.mutex"
	.ascii " "
	.ascii "<type 81>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 350 "
	.ascii "*"
	.ascii "<type 65>"
	.ascii ">"
	.ascii ") "
	.ascii "DataC"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 58>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "WriteDataC"
	.ascii " ("
	.ascii "data"
	.ascii " "
	.ascii "<type 351 "
	.ascii "["
	.ascii "] "
	.ascii "<type -20>"
	.ascii ">"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "Warp"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x2a>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "Session"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 54>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x3a>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "ProtocolState"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 344>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "GetMode"
	.ascii " ("
	.ascii "user"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 347>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "SetMode"
	.ascii " ("
	.ascii "user"
	.ascii " "
	.ascii "<type -16>"
	.ascii ", "
	.ascii "mode"
	.ascii " "
	.ascii "<type 339>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "UpdateState"
	.ascii " ("
	.ascii "state"
	.ascii " "
	.ascii "<type 344>"
	.ascii ", "
	.ascii "hosting"
	.ascii " "
	.ascii "<type -15>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "HostCanReceiveWrite"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "WindowSize"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 334>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "Modes"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type 352 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 339>"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "TornDown"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -15>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "TearDown"
	.ascii " ("
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "SendHostUpdate"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "update"
	.ascii " "
	.ascii "<type 353 "
	.ascii "\"github.com/spolu/warp.HostUpdate\" "
	.ascii "<type 354 "
	.ascii "struct { "
	.ascii "Warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "From"
	.ascii " "
	.ascii "<type 54>"
	.ascii "; "
	.ascii "WindowSize"
	.ascii " "
	.ascii "<type 334>"
	.ascii "; "
	.ascii "Modes"
	.ascii " "
	.ascii "<type 355 "
	.ascii "map ["
	.ascii "<type -16>"
	.ascii "] "
	.ascii "<type 339>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "DecodeError"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 356 "
	.ascii "*"
	.ascii "<type 357 "
	.ascii "\"github.com/spolu/warp.Error\" "
	.ascii "<type 358 "
	.ascii "struct { "
	.ascii "Code"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Message"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "ss"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 350>"
	.ascii ") "
	.ascii "DecodeState"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 359 "
	.ascii "*"
	.ascii "<type 344>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewSrv"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii ")"
	.ascii " "
	.ascii "<type 360 "
	.ascii "*"
	.ascii "<type 361 "
	.ascii "\"Srv\" "
	.ascii "<type 362 "
	.ascii "struct { "
	.ascii ".command-line-arguments.warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.session"
	.ascii " "
	.ascii "<type 64>"
	.ascii "; "
	.ascii ".command-line-arguments.path"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii ".command-line-arguments.mutex"
	.ascii " "
	.ascii "<type 81>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii "\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x22>"
	.ascii " "
	.ascii "<type 363 "
	.ascii "*"
	.ascii "<type 361>"
	.ascii ">"
	.ascii ") "
	.ascii "Path"
	.ascii " ("
	.ascii ")"
	.ascii " "
	.ascii "<type -16>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 363>"
	.ascii ") "
	.ascii "SetSession"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "session"
	.ascii " "
	.ascii "<type 64>"
	.ascii ")"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<type 363>"
	.ascii ") "
	.ascii "Run"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 363>"
	.ascii ") "
	.ascii ".command-line-arguments.handle"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "conn"
	.ascii " "
	.ascii "<type 58>"
	.ascii ")"
	.ascii " "
	.ascii "<type -19>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 363>"
	.ascii ") "
	.ascii ".command-line-arguments.executeState"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "cmd"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 364 "
	.ascii "\"github.com/spolu/warp.Command\" "
	.ascii "<type 365 "
	.ascii "struct { "
	.ascii "Type"
	.ascii " "
	.ascii "<type 366 "
	.ascii "\"github.com/spolu/warp.CommandType\" "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "Args"
	.ascii " "
	.ascii "<type 367 "
	.ascii "["
	.ascii "] "
	.ascii "<type -16>"
	.ascii ">"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 368 "
	.ascii "\"github.com/spolu/warp.CommandResult\" "
	.ascii "<type 369 "
	.ascii "struct { "
	.ascii "Type"
	.ascii " "
	.ascii "<type 366>"
	.ascii "; "
	.ascii "Disconnected"
	.ascii " "
	.ascii "<type -15>"
	.ascii "; "
	.ascii "SessionState"
	.ascii " "
	.ascii "<type 344>"
	.ascii "; "
	.ascii "Error"
	.ascii " "
	.ascii "<type 357>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 363>"
	.ascii ") "
	.ascii ".command-line-arguments.executeAuthorize"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "cmd"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 364>"
	.ascii ")"
	.ascii " "
	.ascii "<type 368>"
	.ascii ";\n"
	.ascii " "
	.ascii "func "
	.ascii "("
	.ascii "s"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 363>"
	.ascii ") "
	.ascii ".command-line-arguments.executeRevoke"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "cmd"
	.ascii " "
	.ascii "<esc:0x9>"
	.ascii " "
	.ascii "<type 364>"
	.ascii ")"
	.ascii " "
	.ascii "<type 368>"
	.ascii ";\n"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "NewWarpState"
	.ascii " ("
	.ascii "hello"
	.ascii " "
	.ascii "<type 370 "
	.ascii "\"github.com/spolu/warp.SessionHello\" "
	.ascii "<type 371 "
	.ascii "struct { "
	.ascii "Warp"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "From"
	.ascii " "
	.ascii "<type 54>"
	.ascii "; "
	.ascii "Version"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "Type"
	.ascii " "
	.ascii "<type 56>"
	.ascii "; "
	.ascii "Username"
	.ascii " "
	.ascii "<type -16>"
	.ascii "; "
	.ascii "}"
	.ascii ">"
	.ascii ">"
	.ascii ")"
	.ascii " "
	.ascii "<type 343>"
	.ascii ";\n"
	.ascii "var "
	.ascii "Registrar"
	.ascii " "
	.ascii "<type 372 "
	.ascii "map ["
	.ascii "<type 39>"
	.ascii "] "
	.ascii "<type 373 "
	.ascii "("
	.ascii ")"
	.ascii " "
	.ascii "<type 40>"
	.ascii ">"
	.ascii ">"
	.ascii ";\n"
	.ascii "func "
	.ascii "RetrieveConfig"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 52>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "RetrieveOrGenerateConfig"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 52>"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "func "
	.ascii "RunLocalCommand"
	.ascii " ("
	.ascii "ctx"
	.ascii " "
	.ascii "<esc:0x1>"
	.ascii " "
	.ascii "<type 1>"
	.ascii ", "
	.ascii "cmd"
	.ascii " "
	.ascii "<type 364>"
	.ascii ")"
	.ascii " ("
	.ascii "?"
	.ascii " "
	.ascii "<type 374 "
	.ascii "*"
	.ascii "<type 368>"
	.ascii ">"
	.ascii ", "
	.ascii "?"
	.ascii " "
	.ascii "<type -19>"
	.ascii ")"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 65>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 50>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 361>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 337>"
	.ascii ";\n"
	.ascii "type "
	.ascii "<type 332>"
	.ascii ";\n"
	.ascii "checksum 66B7B372EF28A6BFCC5E9ADB5F7604FB381508B9;\n"
	.text


	.file	1 "<built-in>"
	.file	2 "./cli.go"
	.file	3 "<stdin>"
	.file	4 "./local.go"
	.file	5 "./config.go"
	.section	.text.command_line_arguments..import,"ax",@progbits
	.globl	command_line_arguments..import
	.p2align	4, 0x90
	.type	command_line_arguments..import,@function
command_line_arguments..import:
.Lfunc_begin0:
	.loc	2 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB0_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB0_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp0:
	.loc	1 1 1 prologue_end
	movl	$go..C0, %edi
	callq	runtime.registerGCRoots
	.loc	2 30 17
	movl	$type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9, %edi
	xorl	%esi, %esi
	movl	$24, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	.loc	2 30 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_7
	movl	$command_line_arguments.Registrar, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB0_4
.LBB0_7:
	movq	%rax, command_line_arguments.Registrar(%rip)
.LBB0_4:
	.loc	2 40 31 is_stmt 1
	movl	$.Lconst.71, %edi
	movl	$3, %esi
	callq	regexp.MustCompile
	.loc	2 40 5 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB0_8
	movl	$command_line_arguments.flagFilterRegexp, %edi
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB0_8:
	.cfi_def_cfa_offset 16
	movq	%rax, command_line_arguments.flagFilterRegexp(%rip)
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1:
.Lfunc_end0:
	.size	command_line_arguments..import, .Lfunc_end0-command_line_arguments..import
	.cfi_endproc

	.section	.text.command_line_arguments.Cli.Run,"ax",@progbits
	.globl	command_line_arguments.Cli.Run
	.p2align	4, 0x90
	.type	command_line_arguments.Cli.Run,@function
command_line_arguments.Cli.Run:
.Lfunc_begin1:
	.loc	2 73 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB1_2
	movq	%r10, %rax
	movabsq	$248, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB1_2:
.Ltmp2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$208, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	2 74 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB1_31
.Ltmp3:
	.loc	2 0 10 is_stmt 0
	movq	%rdi, %r12
.Ltmp4:
	.loc	2 74 10
	movq	32(%rdi), %rax
	.loc	2 74 17
	testq	%rax, %rax
	jne	.LBB1_20
.Ltmp5:
	.loc	2 0 17
	movups	24(%r12), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	40(%r12), %rax
	movq	%rax, 48(%rsp)
	.loc	2 75 12 is_stmt 1
	movq	40(%rsp), %rbx
	movups	.Lconst.83(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	leaq	1(%rbx), %rdx
	cmpq	%rax, %rdx
	jbe	.LBB1_9
.Ltmp6:
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	leaq	136(%rsp), %rdi
	movl	$string..d, %esi
	callq	runtime.growslice
	movq	136(%rsp), %rsi
	movq	144(%rsp), %rdx
	movq	152(%rsp), %rax
	jmp	.LBB1_6
.Ltmp7:
.LBB1_9:
	cmpq	%rax, %rdx
	jg	.LBB1_32
.Ltmp8:
	.loc	2 0 12 is_stmt 0
	movq	%rax, %rcx
	orq	%rdx, %rcx
	js	.LBB1_32
.Ltmp9:
	.loc	2 75 12
	movq	32(%rsp), %rsi
.Ltmp10:
.LBB1_6:
	movq	%rsi, 32(%rsp)
	movq	%rdx, 40(%rsp)
	movq	%rax, 48(%rsp)
	testq	%rbx, %rbx
	js	.LBB1_8
.Ltmp11:
	.loc	2 0 12
	cmpq	%rdx, %rbx
	jge	.LBB1_8
.Ltmp12:
	.loc	2 75 12
	shlq	$4, %rbx
	addq	%rbx, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB1_13
.Ltmp13:
	.loc	2 0 12
	leaq	112(%rsp), %rdx
	.loc	2 75 12
	movl	$string..d, %edi
	callq	runtime.typedmemmove
	jmp	.LBB1_16
.Ltmp14:
.LBB1_13:
	testq	%rsi, %rsi
	je	.LBB1_31
.Ltmp15:
	movaps	112(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp16:
.LBB1_16:
	.loc	2 0 12
	leaq	24(%r12), %rsi
	movq	48(%rsp), %rax
	movq	%rax, 80(%rsp)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	.loc	2 75 10
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB1_18
.Ltmp17:
	.loc	2 0 10
	leaq	64(%rsp), %rdx
	.loc	2 75 10
	movl	$type...6.7string, %edi
	callq	runtime.typedmemmove
	jmp	.LBB1_19
.Ltmp18:
.LBB1_18:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsi)
	movaps	64(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp19:
.LBB1_19:
	.loc	2 0 10
	movq	32(%r12), %rax
.Ltmp20:
.LBB1_20:
	.loc	2 79 21 is_stmt 1
	testq	%rax, %rax
	jle	.LBB1_8
.Ltmp21:
	.loc	2 0 21 is_stmt 0
	movq	24(%r12), %rcx
	movups	(%rcx), %xmm0
	movaps	%xmm0, 192(%rsp)
	movq	40(%r12), %rdx
	.loc	2 79 32
	testq	%rdx, %rdx
	jle	.LBB1_32
.Ltmp22:
	xorl	%esi, %esi
	addq	$-1, %rdx
	setne	%sil
	shlq	$4, %rsi
	addq	%rsi, %rcx
	addq	$-1, %rax
	movq	%rcx, 88(%rsp)
	movq	%rax, 96(%rsp)
	movq	%rdx, 104(%rsp)
.Ltmp23:
	.loc	2 0 32
	movaps	192(%rsp), %xmm0
	movaps	%xmm0, 176(%rsp)
.Ltmp24:
	.loc	2 80 14 is_stmt 1
	movq	command_line_arguments.Registrar(%rip), %rsi
	leaq	176(%rsp), %rdx
	.loc	2 80 5 is_stmt 0
	movl	$type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9, %edi
	callq	runtime.mapaccess2
.Ltmp25:
	.loc	2 80 39
	testb	%dl, %dl
	jne	.LBB1_24
.Ltmp26:
	.loc	2 0 39
	movups	.Lconst.83(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	.loc	2 81 13 is_stmt 1
	movq	command_line_arguments.Registrar(%rip), %rsi
	leaq	160(%rsp), %rdx
.Ltmp27:
	.loc	2 81 22 is_stmt 0
	movl	$type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9, %edi
	callq	runtime.mapaccess1
.Ltmp28:
.LBB1_24:
	.loc	2 0 22
	movq	(%rax), %r10
	callq	*(%r10)
	movq	%rax, %r14
	movq	%rdx, %r15
.Ltmp29:
	.loc	2 86 37 is_stmt 1
	movq	16(%r12), %rcx
	.loc	2 86 16 is_stmt 0
	movq	(%r12), %rsi
	movq	8(%r12), %rdx
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movq	%r15, %rdi
	callq	*32(%r14)
	.loc	2 87 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB1_26
.Ltmp30:
	.loc	2 0 9 is_stmt 0
	movq	%rax, %rbx
.Ltmp31:
	movq	%rdx, %r13
.Ltmp32:
	.loc	2 88 10 is_stmt 1
	movq	(%r12), %rsi
	movq	8(%r12), %rdx
	movq	%r15, %rdi
	callq	*16(%r14)
	.loc	2 89 17
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
	jmp	.LBB1_30
.Ltmp33:
.LBB1_26:
	.loc	2 92 15
	movq	(%r12), %rsi
	movq	8(%r12), %rdx
	movq	%r15, %rdi
	callq	*8(%r14)
.Ltmp34:
	.loc	2 93 9
	testq	%rax, %rax
	je	.LBB1_29
.Ltmp35:
	.loc	2 94 17
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp36:
	.loc	2 0 17 is_stmt 0
	jmp	.LBB1_30
.Ltmp37:
.LBB1_29:
	.loc	2 97 2 is_stmt 1
	xorl	%eax, %eax
.Ltmp38:
	xorl	%edx, %edx
.Ltmp39:
.LBB1_30:
	.loc	2 0 2 is_stmt 0
	addq	$208, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp40:
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp41:
	.cfi_def_cfa_offset 8
	retq
.LBB1_8:
	.cfi_def_cfa_offset 256
.Ltmp42:
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp43:
.LBB1_32:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp44:
.LBB1_31:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end1:
	.size	command_line_arguments.Cli.Run, .Lfunc_end1-command_line_arguments.Cli.Run
	.cfi_endproc

	.section	.text.command_line_arguments.New,"ax",@progbits
	.globl	command_line_arguments.New
	.p2align	4, 0x90
	.type	command_line_arguments.New,@function
command_line_arguments.New:
.Lfunc_begin2:
	.loc	2 43 0 is_stmt 1
	.cfi_startproc
	leaq	-328(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB2_2
	movq	%r10, %rax
	movabsq	$328, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB2_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$280, %rsp
	.cfi_def_cfa_offset 336
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, 80(%rsp)
.Ltmp45:
	.loc	2 46 17 prologue_end
	callq	context.Background
	movq	%rax, 72(%rsp)
.Ltmp46:
	movq	%rdx, 64(%rsp)
.Ltmp47:
	.loc	2 48 10
	movl	$type...60x.7string, %edi
	callq	runtime.newobject
	movq	%rax, 32(%rsp)
.Ltmp48:
	.loc	2 0 10 is_stmt 0
	xorl	%r13d, %r13d
	.loc	2 49 11 is_stmt 1
	movl	$type..map.6string.7string, %edi
	xorl	%esi, %esi
	movl	$32, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, 24(%rsp)
.Ltmp49:
	.loc	2 0 11 is_stmt 0
	movq	344(%rsp), %rax
	movq	%rax, 88(%rsp)
.Ltmp50:
	.loc	2 51 2 is_stmt 1
	testq	%rax, %rax
	jle	.LBB2_3
.Ltmp51:
	.loc	2 0 2 is_stmt 0
	movq	336(%rsp), %r15
	addq	$8, %r15
	xorl	%ebx, %ebx
	xorl	%r13d, %r13d
	xorl	%r14d, %r14d
	jmp	.LBB2_5
.Ltmp52:
.LBB2_13:
	movups	(%rax), %xmm0
	movaps	%xmm0, 224(%rsp)
	movups	.Lconst.80(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
.Ltmp53:
	.loc	2 58 17 is_stmt 1
	movl	$type..map.6string.7string, %edi
	movq	24(%rsp), %rsi
	leaq	224(%rsp), %rdx
	callq	runtime.mapassign
.Ltmp54:
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB2_14
.Ltmp55:
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	112(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB2_8
.Ltmp56:
.LBB2_11:
	.loc	2 56 17
	testq	%rax, %rax
	je	.LBB2_30
.Ltmp57:
	movaps	128(%rsp), %xmm0
	movups	%xmm0, (%rax)
	jmp	.LBB2_8
.Ltmp58:
.LBB2_14:
	.loc	2 58 17
	testq	%rax, %rax
	je	.LBB2_30
.Ltmp59:
	movaps	112(%rsp), %xmm0
	movups	%xmm0, (%rax)
	jmp	.LBB2_8
.Ltmp60:
	.p2align	4, 0x90
.LBB2_5:
	.loc	2 51 2
	movq	-8(%r15), %r12
.Ltmp61:
	movq	(%r15), %rbp
.Ltmp62:
	.loc	2 52 6
	movq	command_line_arguments.flagFilterRegexp(%rip), %rdi
	.loc	2 52 22 is_stmt 0
	movq	%r12, %rsi
	movq	%rbp, %rdx
	callq	regexp.Regexp.MatchString
	.loc	2 52 3
	testb	$1, %al
	jne	.LBB2_6
.Ltmp63:
	.loc	2 61 32 is_stmt 1
	movq	%r12, %rdi
	movq	%rbp, %rsi
	callq	strings.TrimSpace
	movq	%rax, 96(%rsp)
	movq	%rdx, 104(%rsp)
	movq	32(%rsp), %rsi
	movq	%rsi, 40(%rsp)
	movq	%r13, 48(%rsp)
	movq	%rbx, 56(%rsp)
	.loc	2 61 11 is_stmt 0
	leaq	1(%r13), %rdx
	cmpq	%rbx, %rdx
	jbe	.LBB2_21
.Ltmp64:
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$string..d, %esi
	leaq	152(%rsp), %rdi
	callq	runtime.growslice
	movq	152(%rsp), %rsi
	movq	160(%rsp), %rdx
	movq	168(%rsp), %rbx
.Ltmp65:
	.loc	2 0 11
	jmp	.LBB2_18
.Ltmp66:
	.p2align	4, 0x90
.LBB2_6:
	.loc	2 53 16 is_stmt 1
	movl	$.Lconst.75, %edx
	movl	$1, %ecx
	movq	%r12, %rdi
	movq	%rbp, %rsi
	callq	strings.Trim
.Ltmp67:
	.loc	2 54 17
	movl	$.Lconst.77, %ecx
	movl	$1, %r8d
	leaq	256(%rsp), %rdi
	movq	%rax, %rsi
	callq	strings.Split
.Ltmp68:
	.loc	2 0 17 is_stmt 0
	movq	256(%rsp), %rax
.Ltmp69:
	movq	264(%rsp), %rcx
.Ltmp70:
	cmpq	$1, %rcx
	je	.LBB2_13
.Ltmp71:
	cmpq	$2, %rcx
	jne	.LBB2_8
.Ltmp72:
	movups	(%rax), %xmm0
	movaps	%xmm0, 240(%rsp)
	movups	16(%rax), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	2 56 17 is_stmt 1
	movl	$type..map.6string.7string, %edi
	movq	24(%rsp), %rsi
	leaq	240(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB2_11
.Ltmp73:
	movl	$string..d, %edi
	movq	%rax, %rsi
	leaq	128(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB2_8
.Ltmp74:
	.p2align	4, 0x90
.LBB2_21:
	.loc	2 61 11
	cmpq	%rbx, %rdx
	jg	.LBB2_23
.Ltmp75:
	.loc	2 0 11 is_stmt 0
	movq	%rdx, %rax
	orq	%rbx, %rax
	js	.LBB2_23
.Ltmp76:
.LBB2_18:
	.loc	2 61 11
	movq	%rsi, 40(%rsp)
	movq	%rdx, 48(%rsp)
	movq	%rbx, 56(%rsp)
	testq	%r13, %r13
	js	.LBB2_20
.Ltmp77:
	.loc	2 0 11
	cmpq	%rdx, %r13
	jge	.LBB2_20
.Ltmp78:
	.loc	2 61 11
	shlq	$4, %r13
	addq	%r13, %rsi
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB2_25
.Ltmp79:
	movl	$string..d, %edi
	leaq	96(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB2_28
.Ltmp80:
.LBB2_25:
	testq	%rsi, %rsi
	je	.LBB2_30
.Ltmp81:
	movups	96(%rsp), %xmm0
	movups	%xmm0, (%rsi)
.Ltmp82:
.LBB2_28:
	.loc	2 61 9
	movq	40(%rsp), %rax
.Ltmp83:
	movq	%rax, 32(%rsp)
	movq	48(%rsp), %r13
.Ltmp84:
	movq	56(%rsp), %rbx
.Ltmp85:
.LBB2_8:
	.loc	2 51 2 is_stmt 1
	addq	$1, %r14
	addq	$16, %r15
	cmpq	88(%rsp), %r14
	jl	.LBB2_5
	jmp	.LBB2_9
.Ltmp86:
.LBB2_3:
	.loc	2 48 10
	xorl	%ebx, %ebx
.Ltmp87:
.LBB2_9:
	.loc	2 65 9
	movl	$command_line_arguments.Cli..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp88:
	.loc	2 65 10 is_stmt 0
	movq	72(%rsp), %rax
	movq	%rax, 176(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 184(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 192(%rsp)
	movq	32(%rsp), %rax
	movq	%rax, 200(%rsp)
	movq	%r13, 208(%rsp)
	movq	%rbx, 216(%rsp)
	leaq	176(%rsp), %rdx
	.loc	2 65 9
	movl	$command_line_arguments.Cli..d, %edi
	movq	%r14, %rsi
	callq	runtime.typedmemmove
	movq	80(%rsp), %rax
	.loc	2 65 2
	movq	%r14, (%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rax)
	addq	$280, %rsp
.Ltmp89:
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp90:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp91:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB2_20:
	.cfi_def_cfa_offset 336
.Ltmp92:
	.loc	2 61 11 is_stmt 1
	xorl	%edi, %edi
	callq	__go_runtime_error
.Ltmp93:
.LBB2_23:
	movl	$3, %edi
	callq	__go_runtime_error
.Ltmp94:
.LBB2_30:
	.loc	2 0 11 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end2:
	.size	command_line_arguments.New, .Lfunc_end2-command_line_arguments.New
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Credentials..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Credentials..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Credentials..hash,@function
command_line_arguments.command_line_arguments.Credentials..hash:
.Lfunc_begin3:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB3_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB3_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp95:
	.loc	1 1 1 prologue_end
	callq	runtime.strhash
	addq	$16, %rbx
.Ltmp96:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
.Ltmp97:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp98:
.Lfunc_end3:
	.size	command_line_arguments.command_line_arguments.Credentials..hash, .Lfunc_end3-command_line_arguments.command_line_arguments.Credentials..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Credentials..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Credentials..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Credentials..eq,@function
command_line_arguments.command_line_arguments.Credentials..eq:
.Lfunc_begin4:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB4_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB4_2:
.Ltmp99:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp100:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB4_8
.Ltmp101:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp102:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB4_8
.Ltmp103:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp104:
	.loc	1 1 1
	movq	(%rdi), %rdi
	movq	8(%rbx), %rsi
	movq	(%r14), %rdx
	movq	8(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB4_5
.Ltmp105:
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
	movq	16(%r14), %rdx
	movq	24(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	jmp	.LBB4_6
.Ltmp106:
.LBB4_5:
	xorl	%eax, %eax
.Ltmp107:
.LBB4_6:
	.loc	1 0 1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp108:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp109:
	.cfi_def_cfa_offset 8
	retq
.LBB4_8:
	.cfi_def_cfa_offset 32
.Ltmp110:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp111:
	callq	__go_runtime_error
.Ltmp112:
.Lfunc_end4:
	.size	command_line_arguments.command_line_arguments.Credentials..eq, .Lfunc_end4-command_line_arguments.command_line_arguments.Credentials..eq
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Config..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Config..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Config..hash,@function
command_line_arguments.command_line_arguments.Config..hash:
.Lfunc_begin5:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB5_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB5_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp113:
	.loc	1 1 1 prologue_end
	callq	command_line_arguments.command_line_arguments.Credentials..hash
.Ltmp114:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp115:
.Lfunc_end5:
	.size	command_line_arguments.command_line_arguments.Config..hash, .Lfunc_end5-command_line_arguments.command_line_arguments.Config..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Config..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Config..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Config..eq,@function
command_line_arguments.command_line_arguments.Config..eq:
.Lfunc_begin6:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB6_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB6_2:
.Ltmp116:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp117:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB6_5
.Ltmp118:
	testq	%rsi, %rsi
	je	.LBB6_5
.Ltmp119:
	movq	24(%rdi), %r14
	movq	16(%rdi), %r15
	movq	(%rdi), %rax
	movq	8(%rdi), %rbx
	movq	(%rsi), %rdx
	movq	8(%rsi), %rcx
	movq	16(%rsi), %r12
	movq	24(%rsi), %r13
	movq	%rax, %rdi
.Ltmp120:
	movq	%rbx, %rsi
.Ltmp121:
	callq	runtime.eqstring
	movl	%eax, %ebx
	xorb	$1, %bl
	movq	%r15, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	movq	%r13, %rcx
	callq	runtime.eqstring
	xorb	$1, %al
	orb	%bl, %al
	sete	%al
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB6_5:
	.cfi_def_cfa_offset 48
.Ltmp122:
	movl	$6, %edi
.Ltmp123:
	callq	__go_runtime_error
.Ltmp124:
.Lfunc_end6:
	.size	command_line_arguments.command_line_arguments.Config..eq, .Lfunc_end6-command_line_arguments.command_line_arguments.Config..eq
	.cfi_endproc

	.section	.text.command_line_arguments.ConfigPath,"ax",@progbits
	.globl	command_line_arguments.ConfigPath
	.p2align	4, 0x90
	.type	command_line_arguments.ConfigPath,@function
command_line_arguments.ConfigPath:
.Lfunc_begin7:
	.loc	5 27 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB7_2
	movq	%r10, %rax
	movabsq	$88, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB7_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$56, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	leaq	24(%rsp), %rdi
.Ltmp125:
	.loc	5 30 23 prologue_end
	movl	$.Lconst.98, %esi
	movl	$19, %edx
.Ltmp126:
	callq	github_com_spolu_warp_vendor_github_com_mitchellh_go_homedir.Expand
	movq	40(%rsp), %r15
.Ltmp127:
	movq	48(%rsp), %r12
.Ltmp128:
	.loc	5 0 23 is_stmt 0
	movups	24(%rsp), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	5 30 2
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp129:
	.loc	5 30 23
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB7_3
.Ltmp130:
	.loc	5 0 23
	movq	%rsp, %rdx
	.loc	5 30 23
	movl	$string..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	.loc	5 33 9 is_stmt 1
	testq	%r15, %r15
	je	.LBB7_9
.Ltmp131:
.LBB7_7:
	.loc	5 34 22
	movq	%r15, %rdi
	movq	%r12, %rsi
	jmp	.LBB7_8
.Ltmp132:
.LBB7_3:
	.loc	5 30 23
	testq	%rbx, %rbx
	je	.LBB7_4
.Ltmp133:
	movaps	(%rsp), %xmm0
	movups	%xmm0, (%rbx)
	.loc	5 33 9
	testq	%r15, %r15
	jne	.LBB7_7
.Ltmp134:
.LBB7_9:
	.loc	5 37 29
	movq	(%rbx), %rdi
	movq	8(%rbx), %rsi
	callq	path_filepath.Dir
	movq	%rdx, %rcx
	.loc	5 37 11 is_stmt 0
	movl	$511, %edx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	os.MkdirAll
.Ltmp135:
	.loc	5 38 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB7_11
.Ltmp136:
	.loc	5 39 22
	movq	%rax, %rdi
	movq	%rdx, %rsi
.Ltmp137:
.LBB7_8:
	.loc	5 0 22 is_stmt 0
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp138:
	movq	$0, (%r14)
	movq	%rax, 8(%r14)
	movq	%rdx, 16(%r14)
.Ltmp139:
.LBB7_12:
	movq	%r14, %rax
	addq	$56, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp140:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB7_11:
	.cfi_def_cfa_offset 96
.Ltmp141:
	.loc	5 42 2 is_stmt 1
	movq	%rbx, (%r14)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r14)
	jmp	.LBB7_12
.Ltmp142:
.LBB7_4:
	.loc	5 30 23
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp143:
.Lfunc_end7:
	.size	command_line_arguments.ConfigPath, .Lfunc_end7-command_line_arguments.ConfigPath
	.cfi_endproc

	.section	.text.command_line_arguments.RetrieveConfig,"ax",@progbits
	.globl	command_line_arguments.RetrieveConfig
	.p2align	4, 0x90
	.type	command_line_arguments.RetrieveConfig,@function
command_line_arguments.RetrieveConfig:
.Lfunc_begin8:
	.loc	5 46 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB8_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB8_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$160, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r15
	leaq	64(%rsp), %rdi
.Ltmp144:
	.loc	5 49 15 prologue_end
	callq	command_line_arguments.ConfigPath
.Ltmp145:
	movq	72(%rsp), %rdi
.Ltmp146:
	.loc	5 50 9
	testq	%rdi, %rdi
	je	.LBB8_4
.Ltmp147:
	.loc	5 49 15
	movq	80(%rsp), %rsi
.Ltmp148:
.LBB8_9:
	.loc	5 0 15 is_stmt 0
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp149:
	movq	$0, (%r15)
	movq	%rax, 8(%r15)
	movq	%rdx, 16(%r15)
.Ltmp150:
.LBB8_7:
	movq	%r15, %rax
	addq	$160, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB8_4:
	.cfi_def_cfa_offset 192
.Ltmp151:
	movq	64(%rsp), %rbx
.Ltmp152:
	.loc	5 54 23 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB8_13
.Ltmp153:
	.loc	5 54 18 is_stmt 0
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdx
	leaq	128(%rsp), %rdi
.Ltmp154:
	callq	os.Stat
	movq	144(%rsp), %rdi
.Ltmp155:
	movq	152(%rsp), %rsi
.Ltmp156:
	.loc	5 54 34
	callq	os.IsNotExist
.Ltmp157:
	.loc	5 54 2
	testb	$1, %al
	jne	.LBB8_6
.Ltmp158:
	.loc	5 58 21 is_stmt 1
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdx
	leaq	88(%rsp), %rdi
	callq	io_ioutil.ReadFile
	movq	112(%rsp), %rdi
.Ltmp159:
	movq	120(%rsp), %rsi
.Ltmp160:
	.loc	5 0 21 is_stmt 0
	movups	88(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 48(%rsp)
	.loc	5 59 9 is_stmt 1
	testq	%rdi, %rdi
	jne	.LBB8_9
.Ltmp161:
	.loc	5 63 6
	movl	$command_line_arguments.Config..d, %edi
	callq	runtime.newobject
.Ltmp162:
	movq	%rax, %r14
.Ltmp163:
	.loc	5 64 13
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$type...1command_line_arguments.Config, %edi
	movq	%r14, %rsi
	callq	encoding_json.Unmarshal
.Ltmp164:
	.loc	5 65 9
	testq	%rax, %rax
	je	.LBB8_12
.Ltmp165:
	.loc	5 66 22
	movq	%rax, %rdi
	movq	%rdx, %rsi
	jmp	.LBB8_9
.Ltmp166:
.LBB8_6:
	.loc	5 55 3
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	$0, 16(%r15)
	jmp	.LBB8_7
.Ltmp167:
.LBB8_12:
	.loc	5 69 2
	movq	%r14, (%r15)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r15)
	jmp	.LBB8_7
.Ltmp168:
.LBB8_13:
	.loc	5 54 23
	movl	$6, %edi
.Ltmp169:
	callq	__go_runtime_error
.Ltmp170:
.Lfunc_end8:
	.size	command_line_arguments.RetrieveConfig, .Lfunc_end8-command_line_arguments.RetrieveConfig
	.cfi_endproc

	.section	.text.command_line_arguments.GenerateConfig,"ax",@progbits
	.globl	command_line_arguments.GenerateConfig
	.p2align	4, 0x90
	.type	command_line_arguments.GenerateConfig,@function
command_line_arguments.GenerateConfig:
.Lfunc_begin9:
	.loc	5 74 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB9_2
	movq	%r10, %rax
	movabsq	$200, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB9_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$152, %rsp
	.cfi_def_cfa_offset 208
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r15
.Ltmp171:
	.loc	5 79 18 prologue_end
	movl	$.Lconst.103, %edi
	movl	$5, %esi
	callq	github_com_spolu_warp_lib_token.New
.Ltmp172:
	movq	%rax, %r13
	movq	%rdx, %r12
	.loc	5 80 18
	callq	github_com_spolu_warp_lib_token.RandStr
	movq	%rax, %rbx
	movq	%rdx, %rbp
	.loc	5 77 12
	movl	$command_line_arguments.Config..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp173:
	.loc	5 77 13 is_stmt 0
	movq	%r13, 80(%rsp)
	movq	%r12, 88(%rsp)
	movq	%rbx, 96(%rsp)
	movq	%rbp, 104(%rsp)
	leaq	80(%rsp), %rdx
	.loc	5 77 12
	movl	$command_line_arguments.Config..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	leaq	56(%rsp), %rdi
	.loc	5 84 15 is_stmt 1
	callq	command_line_arguments.ConfigPath
	movq	64(%rsp), %rdi
.Ltmp174:
	.loc	5 85 9
	testq	%rdi, %rdi
	je	.LBB9_4
.Ltmp175:
	.loc	5 84 15
	movq	72(%rsp), %rsi
	jmp	.LBB9_5
.Ltmp176:
.LBB9_4:
	.loc	5 0 15 is_stmt 0
	movq	56(%rsp), %rbx
.Ltmp177:
	.loc	5 89 25 is_stmt 1
	movups	.Lconst.106(%rip), %xmm0
	movups	%xmm0, (%rsp)
	leaq	112(%rsp), %rdi
.Ltmp178:
	movl	$type...1command_line_arguments.Config, %esi
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	movq	%r14, %rdx
	callq	encoding_json.MarshalIndent
	movq	136(%rsp), %rdi
.Ltmp179:
	movq	144(%rsp), %rsi
.Ltmp180:
	.loc	5 0 25 is_stmt 0
	movups	112(%rsp), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 48(%rsp)
	.loc	5 90 9 is_stmt 1
	testq	%rdi, %rdi
	jne	.LBB9_5
.Ltmp181:
	.loc	5 94 25
	testq	%rbx, %rbx
	je	.LBB9_11
.Ltmp182:
	.loc	5 94 15 is_stmt 0
	movq	(%rbx), %rdi
	movq	8(%rbx), %rsi
.Ltmp183:
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movaps	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$420, %edx
	callq	io_ioutil.WriteFile
.Ltmp184:
	.loc	5 95 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB9_9
.Ltmp185:
	.loc	5 96 22
	movq	%rax, %rdi
	movq	%rdx, %rsi
.Ltmp186:
.LBB9_5:
	.loc	5 0 22 is_stmt 0
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp187:
	movq	$0, (%r15)
	movq	%rax, 8(%r15)
	movq	%rdx, 16(%r15)
.Ltmp188:
.LBB9_10:
	movq	%r15, %rax
	addq	$152, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp189:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB9_9:
	.cfi_def_cfa_offset 208
.Ltmp190:
	.loc	5 99 2 is_stmt 1
	movq	%r14, (%r15)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r15)
	jmp	.LBB9_10
.Ltmp191:
.LBB9_11:
	.loc	5 94 25
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp192:
.Lfunc_end9:
	.size	command_line_arguments.GenerateConfig, .Lfunc_end9-command_line_arguments.GenerateConfig
	.cfi_endproc

	.section	.text.command_line_arguments.RetrieveOrGenerateConfig,"ax",@progbits
	.globl	command_line_arguments.RetrieveOrGenerateConfig
	.p2align	4, 0x90
	.type	command_line_arguments.RetrieveOrGenerateConfig,@function
command_line_arguments.RetrieveOrGenerateConfig:
.Lfunc_begin10:
	.loc	5 103 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB10_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB10_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$48, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	leaq	24(%rsp), %rdi
.Ltmp193:
	.loc	5 107 17 prologue_end
	callq	command_line_arguments.RetrieveConfig
.Ltmp194:
	movq	32(%rsp), %rdi
.Ltmp195:
	.loc	5 108 9
	testq	%rdi, %rdi
	je	.LBB10_5
.Ltmp196:
	.loc	5 107 17
	movq	40(%rsp), %rsi
.Ltmp197:
.LBB10_4:
	.loc	5 0 17 is_stmt 0
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp198:
	movq	$0, (%rbx)
	movq	%rax, 8(%rbx)
	movq	%rdx, 16(%rbx)
	jmp	.LBB10_9
.Ltmp199:
.LBB10_5:
	movq	24(%rsp), %rax
.Ltmp200:
	.loc	5 112 12 is_stmt 1
	testq	%rax, %rax
	je	.LBB10_6
.Ltmp201:
.LBB10_8:
	.loc	5 119 2
	movq	%rax, (%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rbx)
.Ltmp202:
.LBB10_9:
	.loc	5 0 2 is_stmt 0
	movq	%rbx, %rax
	addq	$48, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB10_6:
	.cfi_def_cfa_offset 64
.Ltmp203:
	movq	%rsp, %rdi
.Ltmp204:
	.loc	5 113 17 is_stmt 1
	callq	command_line_arguments.GenerateConfig
.Ltmp205:
	movq	8(%rsp), %rdi
.Ltmp206:
	.loc	5 114 10
	testq	%rdi, %rdi
	je	.LBB10_7
.Ltmp207:
	.loc	5 113 17
	movq	16(%rsp), %rsi
	jmp	.LBB10_4
.Ltmp208:
.LBB10_7:
	.loc	5 0 17 is_stmt 0
	movq	(%rsp), %rax
.Ltmp209:
	jmp	.LBB10_8
.Lfunc_end10:
	.size	command_line_arguments.RetrieveOrGenerateConfig, .Lfunc_end10-command_line_arguments.RetrieveOrGenerateConfig
	.cfi_endproc

	.section	.text.command_line_arguments.RunLocalCommand,"ax",@progbits
	.globl	command_line_arguments.RunLocalCommand
	.p2align	4, 0x90
	.type	command_line_arguments.RunLocalCommand,@function
command_line_arguments.RunLocalCommand:
.Lfunc_begin11:
	.loc	4 19 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception0
	leaq	-488(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB11_2
	movq	%r10, %rax
	movabsq	$488, %r10
	movabsq	$40, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB11_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$440, %rsp
	.cfi_def_cfa_offset 496
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movb	$0, 31(%rsp)
.Ltmp210:
.Ltmp273:
	.loc	4 24 6 prologue_end
	callq	os.TempDir
.Ltmp274:
.Ltmp211:
	.loc	4 0 6 is_stmt 0
	movq	%rax, %r12
	movq	%rdx, %r15
	.loc	4 25 35 is_stmt 1
	movq	github_com_spolu_warp.EnvWarp(%rip), %rdi
	movq	github_com_spolu_warp.EnvWarp+8(%rip), %rsi
.Ltmp212:
	callq	os.Getenv
.Ltmp213:
	.loc	4 0 35 is_stmt 0
	movq	%rax, %r13
	movq	%rdx, %rbp
.Ltmp214:
	.loc	4 25 7
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp215:
	.loc	4 0 7
	movq	%rax, %rbx
	movq	%r13, 224(%rsp)
	movq	%rbp, 232(%rsp)
.Ltmp216:
	leaq	224(%rsp), %rdx
	.loc	4 25 7
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp217:
	movq	$string..d, 208(%rsp)
	movq	%rbx, 216(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	$1, 56(%rsp)
.Ltmp218:
	movq	56(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	40(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.108, %edi
	movl	$13, %esi
	callq	fmt.Sprintf
.Ltmp219:
	.loc	4 23 12 is_stmt 1
	movq	%r12, 304(%rsp)
	movq	%r15, 312(%rsp)
	movq	%rax, 320(%rsp)
	movq	%rdx, 328(%rsp)
	leaq	304(%rsp), %rax
	movq	%rax, 64(%rsp)
	movq	$2, 72(%rsp)
	movq	$2, 80(%rsp)
.Ltmp220:
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	64(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path.Join
.Ltmp221:
	.loc	4 0 12 is_stmt 0
	movq	%rdx, %rbp
.Ltmp222:
.Ltmp275:
	leaq	272(%rsp), %rdi
	.loc	4 28 19 is_stmt 1
	movl	$.Lconst.111, %esi
	movl	$4, %edx
	movq	%rax, %rcx
	movq	%rbp, %r8
	callq	net.Dial
.Ltmp223:
.Ltmp276:
	movq	288(%rsp), %rax
.Ltmp277:
	.loc	4 29 9
	testq	%rax, %rax
	je	.LBB11_10
.Ltmp278:
	.loc	4 28 19
	movq	296(%rsp), %rcx
	.loc	4 31 50
	movq	(%rax), %rax
.Ltmp279:
	.loc	4 31 11 is_stmt 0
	movq	%rax, 192(%rsp)
	movq	%rcx, 200(%rsp)
	leaq	192(%rsp), %rax
	movq	%rax, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	$1, 104(%rsp)
.Ltmp224:
	movq	104(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	88(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.113, %edi
	movl	$30, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
.Ltmp225:
.Ltmp280:
.Ltmp226:
	.loc	4 30 22 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp227:
	jmp	.LBB11_17
.Ltmp281:
.LBB11_10:
	.loc	4 0 22 is_stmt 0
	movq	272(%rsp), %rbp
.Ltmp282:
	movq	280(%rsp), %rbx
.Ltmp283:
	.loc	4 34 2 is_stmt 1
	movq	%rbp, 176(%rsp)
	movq	%rbx, 184(%rsp)
.Ltmp228:
	leaq	31(%rsp), %rdi
	leaq	176(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk0, %esi
	callq	runtime.deferproc
.Ltmp284:
.Ltmp229:
	.loc	4 36 29
	testq	%rbp, %rbp
	je	.LBB11_12
.Ltmp285:
	movq	(%rbp), %rsi
	jmp	.LBB11_19
.Ltmp286:
.LBB11_12:
	.loc	4 0 29 is_stmt 0
	xorl	%esi, %esi
.Ltmp287:
.LBB11_19:
.Ltmp230:
	.loc	4 36 29
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
.Ltmp231:
.Ltmp288:
.Ltmp232:
	.loc	4 36 18
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	encoding_gob.NewDecoder
.Ltmp233:
.Ltmp289:
	.loc	4 0 18
	movq	%rax, %r15
	.loc	4 36 29
	testq	%rbp, %rbp
	je	.LBB11_22
.Ltmp290:
	.loc	4 37 29 is_stmt 1
	movq	(%rbp), %rsi
	jmp	.LBB11_23
.Ltmp291:
.LBB11_22:
	.loc	4 0 29 is_stmt 0
	xorl	%esi, %esi
.Ltmp292:
.LBB11_23:
.Ltmp234:
	.loc	4 37 29
	movl	$io.Writer..d, %edi
	callq	runtime.requireitab
.Ltmp235:
.Ltmp293:
.Ltmp236:
	.loc	4 37 18
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	encoding_gob.NewEncoder
.Ltmp237:
.Ltmp294:
	.loc	4 0 18
	movq	%rax, %r12
.Ltmp238:
.Ltmp295:
	.loc	4 39 28 is_stmt 1
	movl	$github_com_spolu_warp.Command..d, %edi
	callq	runtime.newobject
.Ltmp239:
.Ltmp296:
	.loc	4 0 28 is_stmt 0
	movq	%rax, %rbx
.Ltmp297:
	leaq	496(%rsp), %rax
	movq	32(%rax), %rcx
	movq	%rcx, 432(%rsp)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, 416(%rsp)
	movaps	%xmm0, 400(%rsp)
.Ltmp240:
	leaq	400(%rsp), %rdx
	.loc	4 39 28
	movl	$github_com_spolu_warp.Command..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
.Ltmp241:
.Ltmp242:
.Ltmp298:
	.loc	4 39 20
	movl	$github_com_spolu_warp.Command..d, %esi
	movq	%r12, %rdi
	movq	%rbx, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp243:
.Ltmp299:
	.loc	4 39 38
	testq	%rax, %rax
	je	.LBB11_29
.Ltmp300:
	.loc	4 41 46 is_stmt 1
	movq	(%rax), %rax
	.loc	4 41 11 is_stmt 0
	movq	%rax, 160(%rsp)
	movq	%rdx, 168(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	$1, 128(%rsp)
.Ltmp244:
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.116, %edi
	movl	$26, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
.Ltmp301:
.Ltmp245:
.Ltmp246:
	.loc	4 40 22 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp247:
	jmp	.LBB11_17
.Ltmp302:
.LBB11_29:
.Ltmp248:
	.loc	4 46 6
	movl	$github_com_spolu_warp.CommandResult..d, %edi
	callq	runtime.newobject
.Ltmp249:
.Ltmp303:
	.loc	4 0 6 is_stmt 0
	movq	%rax, %rbx
.Ltmp250:
.Ltmp304:
	.loc	4 47 20 is_stmt 1
	movl	$type...1github_com_spolu_warp.CommandResult, %esi
	movq	%r15, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp251:
.Ltmp305:
	.loc	4 47 42 is_stmt 0
	testq	%rax, %rax
	je	.LBB11_35
.Ltmp306:
.Ltmp252:
	.loc	4 48 22 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp307:
.Ltmp253:
.LBB11_17:
	.loc	4 0 22 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %r12
.Ltmp308:
	movb	$1, %r13b
.Ltmp309:
.LBB11_44:
	xorl	%ebx, %ebx
.Ltmp310:
	leaq	31(%rsp), %rbp
	jmp	.LBB11_49
.Ltmp311:
.LBB11_35:
	.loc	4 51 23 is_stmt 1
	movq	64(%rbx), %rdi
	movq	72(%rbx), %rsi
.Ltmp254:
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	runtime.eqstring
.Ltmp255:
.Ltmp312:
	.loc	4 0 23 is_stmt 0
	movb	$1, %r13b
	.loc	4 51 23
	cmpb	$1, %al
	jne	.LBB11_38
.Ltmp313:
	.loc	4 0 23
	xorl	%r15d, %r15d
.Ltmp314:
	xorl	%r12d, %r12d
.Ltmp315:
	leaq	31(%rsp), %rbp
	jmp	.LBB11_49
.Ltmp316:
.LBB11_38:
	movq	%rbx, %rax
	addq	$64, %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 384(%rsp)
	movups	80(%rbx), %xmm0
	movaps	%xmm0, 368(%rsp)
.Ltmp256:
	.loc	4 52 22 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp257:
.Ltmp317:
	.loc	4 0 22 is_stmt 0
	movq	%rax, %r15
.Ltmp318:
	movaps	384(%rsp), %xmm0
	movaps	%xmm0, 352(%rsp)
.Ltmp258:
	leaq	352(%rsp), %rdx
	.loc	4 52 22
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp259:
.Ltmp319:
.Ltmp260:
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp261:
.Ltmp320:
	.loc	4 0 22
	movq	%rax, %rbx
.Ltmp321:
	movaps	368(%rsp), %xmm0
	movaps	%xmm0, 336(%rsp)
.Ltmp262:
	leaq	336(%rsp), %rdx
	.loc	4 52 22
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp263:
.Ltmp322:
	movq	$string..d, 240(%rsp)
	movq	%r15, 248(%rsp)
	movq	$string..d, 256(%rsp)
	movq	%rbx, 264(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$2, 144(%rsp)
	movq	$2, 152(%rsp)
.Ltmp264:
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.118, %edi
	movl	$15, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
.Ltmp265:
.Ltmp323:
	.loc	4 0 22
	movq	%rax, %r15
	movq	%rdx, %r12
.Ltmp324:
	jmp	.LBB11_44
.LBB11_13:
.Ltmp266:
.Ltmp267:
	leaq	31(%rsp), %rdi
	.loc	4 60 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp268:
	.loc	4 0 1 is_stmt 0
	movb	$1, %r13b
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
	jmp	.LBB11_44
.LBB11_46:
.Ltmp269:
	movq	%rax, 32(%rsp)
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
	xorl	%r13d, %r13d
.Ltmp325:
	leaq	31(%rsp), %rbp
	jmp	.LBB11_49
.Ltmp326:
.LBB11_48:
.Ltmp272:
	.loc	4 60 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp327:
	.p2align	4, 0x90
.LBB11_49:
.Ltmp270:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp271:
.Ltmp328:
	.loc	4 0 1
	testb	%r13b, %r13b
	je	.LBB11_53
.Ltmp329:
	.loc	4 30 3 is_stmt 1
	movq	%rbx, (%r14)
	movq	%r15, 8(%r14)
	movq	%r12, 16(%r14)
	movq	%r14, %rax
	addq	$440, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp330:
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp331:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp332:
.LBB11_53:
	.cfi_def_cfa_offset 496
	.loc	4 0 3 is_stmt 0
	movq	32(%rsp), %rdi
	callq	_Unwind_Resume
.Lfunc_end11:
	.size	command_line_arguments.RunLocalCommand, .Lfunc_end11-command_line_arguments.RunLocalCommand
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table11:
.Lexception0:
	.byte	255
	.byte	3
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin11-.Lfunc_begin11
	.uleb128 .Ltmp210-.Lfunc_begin11
	.byte	0
	.byte	0
	.uleb128 .Ltmp210-.Lfunc_begin11
	.uleb128 .Ltmp265-.Ltmp210
	.uleb128 .Ltmp266-.Lfunc_begin11
	.byte	1
	.uleb128 .Ltmp267-.Lfunc_begin11
	.uleb128 .Ltmp268-.Ltmp267
	.uleb128 .Ltmp269-.Lfunc_begin11
	.byte	0
	.uleb128 .Ltmp268-.Lfunc_begin11
	.uleb128 .Ltmp270-.Ltmp268
	.byte	0
	.byte	0
	.uleb128 .Ltmp270-.Lfunc_begin11
	.uleb128 .Ltmp271-.Ltmp270
	.uleb128 .Ltmp272-.Lfunc_begin11
	.byte	1
	.uleb128 .Ltmp271-.Lfunc_begin11
	.uleb128 .Lfunc_end11-.Ltmp271
	.byte	0
	.byte	0
.Lcst_end0:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase0:
	.p2align	2

	.section	.text.command_line_arguments.command_line_arguments..thunk0,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk0,@function
command_line_arguments.command_line_arguments..thunk0:
.Lfunc_begin12:
	.loc	4 34 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB12_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB12_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp333:
	.loc	4 34 2 prologue_end
	movl	$.Ltmp334, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB12_4
.Ltmp335:
	.loc	4 0 2 is_stmt 0
	movq	(%rbx), %rax
	movq	8(%rbx), %rdi
	.loc	4 34 2
	callq	*8(%rax)
.Ltmp336:
.Ltmp334:
.LBB12_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp337:
	.cfi_def_cfa_offset 8
	retq
.Ltmp338:
.Lfunc_end12:
	.size	command_line_arguments.command_line_arguments..thunk0, .Lfunc_end12-command_line_arguments.command_line_arguments..thunk0
	.cfi_endproc

	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4
.LCPI13_0:
	.zero	16
	.section	.text.command_line_arguments.CheckEnvWarp,"ax",@progbits
	.globl	command_line_arguments.CheckEnvWarp
	.p2align	4, 0x90
	.type	command_line_arguments.CheckEnvWarp,@function
command_line_arguments.CheckEnvWarp:
.Lfunc_begin13:
	.loc	4 64 0 is_stmt 1
	.cfi_startproc
	leaq	-264(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB13_2
	movq	%r10, %rax
	movabsq	$264, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB13_2:
.Ltmp339:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$256, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -16
	.loc	4 67 8 prologue_end
	movq	github_com_spolu_warp.EnvWarp(%rip), %rdi
	movq	github_com_spolu_warp.EnvWarp+8(%rip), %rsi
.Ltmp340:
	callq	os.Getenv
	movq	%rdx, %rsi
	.loc	4 67 29 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB13_3
	.loc	4 70 6 is_stmt 1
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.120, %edi
	movl	$1, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 71 6
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	github_com_spolu_warp.EnvWarp(%rip), %xmm0
	movaps	%xmm0, 240(%rsp)
	leaq	240(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 176(%rsp)
	movq	%rbx, 184(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	$1, 48(%rsp)
	movq	48(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	32(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.123, %edi
	movl	$76, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 72 6
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	github_com_spolu_warp.EnvWarp(%rip), %xmm0
	movaps	%xmm0, 224(%rsp)
	leaq	224(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 160(%rsp)
	movq	%rbx, 168(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	$1, 64(%rsp)
	movq	$1, 72(%rsp)
	movq	72(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.125, %edi
	movl	$71, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 73 6
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.127, %edi
	movl	$62, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 74 6
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.120, %edi
	movl	$1, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 75 6
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.129, %edi
	movl	$76, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 76 6
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	github_com_spolu_warp.EnvWarp(%rip), %xmm0
	movaps	%xmm0, 208(%rsp)
	leaq	208(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 144(%rsp)
	movq	%rbx, 152(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 80(%rsp)
	movq	$1, 88(%rsp)
	movq	$1, 96(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	80(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.131, %edi
	movl	$74, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 77 6
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movups	github_com_spolu_warp.EnvWarp(%rip), %xmm0
	movaps	%xmm0, 192(%rsp)
	leaq	192(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 128(%rsp)
	movq	%rbx, 136(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$1, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	120(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.133, %edi
	movl	$72, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 78 6
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.135, %edi
	movl	$32, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 79 6
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.120, %edi
	movl	$1, %esi
	callq	github_com_spolu_warp_lib_out.Normf
	.loc	4 82 10
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	movl	$.Lconst.137, %edi
	movl	$50, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
	.loc	4 81 16
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
	jmp	.LBB13_4
.LBB13_3:
.Ltmp341:
	.loc	4 68 3
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp342:
.LBB13_4:
	.loc	4 0 3 is_stmt 0
	addq	$256, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end13:
	.size	command_line_arguments.CheckEnvWarp, .Lfunc_end13-command_line_arguments.CheckEnvWarp
	.cfi_endproc

	.section	.text.command_line_arguments.Session.DataC,"ax",@progbits
	.globl	command_line_arguments.Session.DataC
	.p2align	4, 0x90
	.type	command_line_arguments.Session.DataC,@function
command_line_arguments.Session.DataC:
.Lfunc_begin14:
	.file	6 "./session.go"
	.loc	6 145 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception1
	cmpq	%fs:112, %rsp
	ja	.LBB14_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB14_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movb	$0, 7(%rsp)
.Ltmp356:
	.loc	6 146 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB14_4
.Ltmp357:
.Ltmp343:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp344:
.Ltmp358:
.LBB14_4:
	movq	232(%rbx), %rdi
.Ltmp345:
	.loc	6 146 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp346:
.Ltmp359:
	.loc	6 147 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 147 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp347:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk1, %esi
	callq	runtime.deferproc
.Ltmp348:
.Ltmp360:
	.loc	6 148 2 is_stmt 1
	movq	192(%rbx), %r12
.Ltmp361:
	movq	200(%rbx), %r15
.Ltmp362:
	.loc	6 0 2 is_stmt 0
	movb	$1, %bl
.Ltmp363:
	leaq	7(%rsp), %r13
	jmp	.LBB14_12
.Ltmp364:
.LBB14_7:
.Ltmp349:
.Ltmp350:
	leaq	7(%rsp), %rdi
	.loc	6 149 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp351:
.Ltmp365:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bl
.Ltmp366:
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
.Ltmp367:
	leaq	7(%rsp), %r13
	jmp	.LBB14_12
.Ltmp368:
.LBB14_9:
.Ltmp352:
	movq	%rax, %r14
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
.Ltmp369:
	leaq	7(%rsp), %r13
	jmp	.LBB14_12
.Ltmp370:
.LBB14_11:
.Ltmp355:
	.loc	6 149 1
	movq	%r13, %rdi
	callq	runtime.checkdefer
.Ltmp371:
	.p2align	4, 0x90
.LBB14_12:
.Ltmp353:
	movq	%r13, %rdi
	callq	runtime.deferreturn
.Ltmp354:
.Ltmp372:
	.loc	6 0 1
	testb	%bl, %bl
	je	.LBB14_15
.Ltmp373:
	.loc	6 148 2 is_stmt 1
	movq	%r12, %rax
	movq	%r15, %rdx
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp374:
	.cfi_def_cfa_offset 8
	retq
.Ltmp375:
.LBB14_15:
	.cfi_def_cfa_offset 64
	.loc	6 0 2 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end14:
	.size	command_line_arguments.Session.DataC, .Lfunc_end14-command_line_arguments.Session.DataC
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table14:
.Lexception1:
	.byte	255
	.byte	3
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14
	.uleb128 .Ltmp343-.Lfunc_begin14
	.byte	0
	.byte	0
	.uleb128 .Ltmp343-.Lfunc_begin14
	.uleb128 .Ltmp348-.Ltmp343
	.uleb128 .Ltmp349-.Lfunc_begin14
	.byte	1
	.uleb128 .Ltmp350-.Lfunc_begin14
	.uleb128 .Ltmp351-.Ltmp350
	.uleb128 .Ltmp352-.Lfunc_begin14
	.byte	0
	.uleb128 .Ltmp351-.Lfunc_begin14
	.uleb128 .Ltmp353-.Ltmp351
	.byte	0
	.byte	0
	.uleb128 .Ltmp353-.Lfunc_begin14
	.uleb128 .Ltmp354-.Ltmp353
	.uleb128 .Ltmp355-.Lfunc_begin14
	.byte	1
	.uleb128 .Ltmp354-.Lfunc_begin14
	.uleb128 .Lfunc_end14-.Ltmp354
	.byte	0
	.byte	0
.Lcst_end1:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase1:
	.p2align	2

	.section	.text.command_line_arguments.Session.DecodeError,"ax",@progbits
	.globl	command_line_arguments.Session.DecodeError
	.p2align	4, 0x90
	.type	command_line_arguments.Session.DecodeError,@function
command_line_arguments.Session.DecodeError:
.Lfunc_begin15:
	.loc	6 275 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB15_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB15_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r15
.Ltmp376:
	.loc	6 278 6 prologue_end
	movl	$github_com_spolu_warp.Error..d, %edi
	callq	runtime.newobject
.Ltmp377:
	.loc	6 279 14
	testq	%rbx, %rbx
	je	.LBB15_7
.Ltmp378:
	.loc	6 0 14 is_stmt 0
	movq	%rax, %r14
.Ltmp379:
	.loc	6 279 14
	movq	184(%rbx), %rdi
	.loc	6 279 21
	movl	$type...1github_com_spolu_warp.Error, %esi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp380:
	.loc	6 279 38
	testq	%rax, %rax
	je	.LBB15_5
.Ltmp381:
	.loc	6 280 22 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp382:
	.loc	6 280 3 is_stmt 0
	movq	$0, (%r15)
	movq	%rax, 8(%r15)
	movq	%rdx, 16(%r15)
	jmp	.LBB15_6
.Ltmp383:
.LBB15_5:
	.loc	6 282 2 is_stmt 1
	movq	%r14, (%r15)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r15)
.Ltmp384:
.LBB15_6:
	.loc	6 0 2 is_stmt 0
	movq	%r15, %rax
	popq	%rbx
.Ltmp385:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp386:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB15_7:
	.cfi_def_cfa_offset 32
.Ltmp387:
	.loc	6 279 14 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp388:
.Lfunc_end15:
	.size	command_line_arguments.Session.DecodeError, .Lfunc_end15-command_line_arguments.Session.DecodeError
	.cfi_endproc

	.section	.text.command_line_arguments.Session.DecodeState,"ax",@progbits
	.globl	command_line_arguments.Session.DecodeState
	.p2align	4, 0x90
	.type	command_line_arguments.Session.DecodeState,@function
command_line_arguments.Session.DecodeState:
.Lfunc_begin16:
	.loc	6 287 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB16_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB16_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r15
.Ltmp389:
	.loc	6 290 6 prologue_end
	movl	$github_com_spolu_warp.State..d, %edi
	callq	runtime.newobject
.Ltmp390:
	.loc	6 291 14
	testq	%rbx, %rbx
	je	.LBB16_7
.Ltmp391:
	.loc	6 0 14 is_stmt 0
	movq	%rax, %r14
.Ltmp392:
	.loc	6 291 14
	movq	136(%rbx), %rdi
	.loc	6 291 21
	movl	$type...1github_com_spolu_warp.State, %esi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp393:
	.loc	6 291 39
	testq	%rax, %rax
	je	.LBB16_5
.Ltmp394:
	.loc	6 292 22 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp395:
	.loc	6 292 3 is_stmt 0
	movq	$0, (%r15)
	movq	%rax, 8(%r15)
	movq	%rdx, 16(%r15)
	jmp	.LBB16_6
.Ltmp396:
.LBB16_5:
	.loc	6 294 2 is_stmt 1
	movq	%r14, (%r15)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r15)
.Ltmp397:
.LBB16_6:
	.loc	6 0 2 is_stmt 0
	movq	%r15, %rax
	popq	%rbx
.Ltmp398:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp399:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB16_7:
	.cfi_def_cfa_offset 32
.Ltmp400:
	.loc	6 291 14 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp401:
.Lfunc_end16:
	.size	command_line_arguments.Session.DecodeState, .Lfunc_end16-command_line_arguments.Session.DecodeState
	.cfi_endproc

	.section	.text.command_line_arguments.Session.GetMode,"ax",@progbits
	.globl	command_line_arguments.Session.GetMode
	.p2align	4, 0x90
	.type	command_line_arguments.Session.GetMode,@function
command_line_arguments.Session.GetMode:
.Lfunc_begin17:
	.loc	6 185 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception2
	cmpq	%fs:112, %rsp
	ja	.LBB17_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB17_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$64, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r12
	movb	$0, 7(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
.Ltmp417:
	.loc	6 188 4 prologue_end
	testq	%rsi, %rsi
	jne	.LBB17_4
.Ltmp418:
.Ltmp402:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp403:
.Ltmp419:
.LBB17_4:
	movq	232(%rbx), %rdi
.Ltmp404:
	.loc	6 188 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp405:
.Ltmp420:
	.loc	6 189 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 189 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp406:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk6, %esi
	callq	runtime.deferproc
.Ltmp407:
.Ltmp421:
	.loc	6 190 11 is_stmt 1
	movq	208(%rbx), %rsi
.Ltmp408:
	leaq	40(%rsp), %rdi
	.loc	6 190 17 is_stmt 0
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	command_line_arguments.WarpState.GetMode
.Ltmp409:
.Ltmp422:
	movq	40(%rsp), %r13
.Ltmp423:
	.loc	6 0 17
	movups	48(%rsp), %xmm0
	movaps	%xmm0, 16(%rsp)
	movb	$1, %bl
.Ltmp424:
	leaq	7(%rsp), %r15
.Ltmp425:
	jmp	.LBB17_13
.Ltmp426:
.LBB17_8:
.Ltmp410:
.Ltmp411:
	leaq	7(%rsp), %rdi
	.loc	6 191 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp412:
.Ltmp427:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bl
.Ltmp428:
	xorl	%r13d, %r13d
.Ltmp429:
	leaq	7(%rsp), %r15
.Ltmp430:
	jmp	.LBB17_13
.Ltmp431:
.LBB17_10:
.Ltmp413:
	movq	%rax, %r14
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
.Ltmp432:
	leaq	7(%rsp), %r15
.Ltmp433:
	jmp	.LBB17_13
.Ltmp434:
.LBB17_12:
.Ltmp416:
	.loc	6 191 1
	movq	%r15, %rdi
	callq	runtime.checkdefer
.Ltmp435:
	.p2align	4, 0x90
.LBB17_13:
.Ltmp414:
	movq	%r15, %rdi
	callq	runtime.deferreturn
.Ltmp415:
.Ltmp436:
	.loc	6 0 1
	testb	%bl, %bl
	je	.LBB17_16
.Ltmp437:
	.loc	6 190 2 is_stmt 1
	movq	%r13, (%r12)
	movaps	16(%rsp), %xmm0
	movups	%xmm0, 8(%r12)
	movq	%r12, %rax
	addq	$64, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
.Ltmp438:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp439:
.LBB17_16:
	.cfi_def_cfa_offset 112
	.loc	6 0 2 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end17:
	.size	command_line_arguments.Session.GetMode, .Lfunc_end17-command_line_arguments.Session.GetMode
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table17:
.Lexception2:
	.byte	255
	.byte	3
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17
	.uleb128 .Ltmp402-.Lfunc_begin17
	.byte	0
	.byte	0
	.uleb128 .Ltmp402-.Lfunc_begin17
	.uleb128 .Ltmp409-.Ltmp402
	.uleb128 .Ltmp410-.Lfunc_begin17
	.byte	1
	.uleb128 .Ltmp411-.Lfunc_begin17
	.uleb128 .Ltmp412-.Ltmp411
	.uleb128 .Ltmp413-.Lfunc_begin17
	.byte	0
	.uleb128 .Ltmp412-.Lfunc_begin17
	.uleb128 .Ltmp414-.Ltmp412
	.byte	0
	.byte	0
	.uleb128 .Ltmp414-.Lfunc_begin17
	.uleb128 .Ltmp415-.Ltmp414
	.uleb128 .Ltmp416-.Lfunc_begin17
	.byte	1
	.uleb128 .Ltmp415-.Lfunc_begin17
	.uleb128 .Lfunc_end17-.Ltmp415
	.byte	0
	.byte	0
.Lcst_end2:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase2:
	.p2align	2

	.section	.text.command_line_arguments.Session.HostCanReceiveWrite,"ax",@progbits
	.globl	command_line_arguments.Session.HostCanReceiveWrite
	.p2align	4, 0x90
	.type	command_line_arguments.Session.HostCanReceiveWrite,@function
command_line_arguments.Session.HostCanReceiveWrite:
.Lfunc_begin18:
	.loc	6 215 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception3
	cmpq	%fs:112, %rsp
	ja	.LBB18_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB18_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movb	$0, 15(%rsp)
.Ltmp455:
	.loc	6 216 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB18_4
.Ltmp456:
.Ltmp440:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp441:
.Ltmp457:
.LBB18_4:
	movq	232(%rbx), %rdi
.Ltmp442:
	.loc	6 216 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp443:
.Ltmp458:
	.loc	6 217 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 217 2 is_stmt 0
	movq	%rax, 16(%rsp)
.Ltmp444:
	leaq	15(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk9, %esi
	callq	runtime.deferproc
.Ltmp445:
.Ltmp459:
	.loc	6 218 11 is_stmt 1
	movq	208(%rbx), %rdi
.Ltmp446:
	.loc	6 218 17 is_stmt 0
	callq	command_line_arguments.WarpState.HostCanReceiveWrite
.Ltmp447:
.Ltmp460:
	.loc	6 0 17
	movl	%eax, %ebx
.Ltmp461:
	movb	$1, %bpl
.Ltmp462:
	leaq	15(%rsp), %r15
	jmp	.LBB18_13
.Ltmp463:
.LBB18_8:
.Ltmp448:
.Ltmp449:
	leaq	15(%rsp), %rdi
	.loc	6 219 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp450:
.Ltmp464:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	xorl	%ebx, %ebx
.Ltmp465:
	leaq	15(%rsp), %r15
	jmp	.LBB18_13
.Ltmp466:
.LBB18_10:
.Ltmp451:
	movq	%rax, %r14
	xorl	%ebx, %ebx
.Ltmp467:
	xorl	%ebp, %ebp
.Ltmp468:
	leaq	15(%rsp), %r15
	jmp	.LBB18_13
.Ltmp469:
.LBB18_12:
.Ltmp454:
	.loc	6 219 1
	movq	%r15, %rdi
	callq	runtime.checkdefer
.Ltmp470:
	.p2align	4, 0x90
.LBB18_13:
.Ltmp452:
	movq	%r15, %rdi
	callq	runtime.deferreturn
.Ltmp453:
.Ltmp471:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB18_16
.Ltmp472:
	.loc	6 218 2 is_stmt 1
	movl	%ebx, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp473:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp474:
.LBB18_16:
	.cfi_def_cfa_offset 64
	.loc	6 0 2 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end18:
	.size	command_line_arguments.Session.HostCanReceiveWrite, .Lfunc_end18-command_line_arguments.Session.HostCanReceiveWrite
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table18:
.Lexception3:
	.byte	255
	.byte	3
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Lfunc_begin18-.Lfunc_begin18
	.uleb128 .Ltmp440-.Lfunc_begin18
	.byte	0
	.byte	0
	.uleb128 .Ltmp440-.Lfunc_begin18
	.uleb128 .Ltmp447-.Ltmp440
	.uleb128 .Ltmp448-.Lfunc_begin18
	.byte	1
	.uleb128 .Ltmp449-.Lfunc_begin18
	.uleb128 .Ltmp450-.Ltmp449
	.uleb128 .Ltmp451-.Lfunc_begin18
	.byte	0
	.uleb128 .Ltmp450-.Lfunc_begin18
	.uleb128 .Ltmp452-.Ltmp450
	.byte	0
	.byte	0
	.uleb128 .Ltmp452-.Lfunc_begin18
	.uleb128 .Ltmp453-.Ltmp452
	.uleb128 .Ltmp454-.Lfunc_begin18
	.byte	1
	.uleb128 .Ltmp453-.Lfunc_begin18
	.uleb128 .Lfunc_end18-.Ltmp453
	.byte	0
	.byte	0
.Lcst_end3:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase3:
	.p2align	2

	.section	.text.command_line_arguments.Session.Modes,"ax",@progbits
	.globl	command_line_arguments.Session.Modes
	.p2align	4, 0x90
	.type	command_line_arguments.Session.Modes,@function
command_line_arguments.Session.Modes:
.Lfunc_begin19:
	.loc	6 229 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception4
	cmpq	%fs:112, %rsp
	ja	.LBB19_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB19_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movb	$0, 15(%rsp)
.Ltmp490:
	.loc	6 230 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB19_4
.Ltmp491:
.Ltmp475:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp476:
.Ltmp492:
.LBB19_4:
	movq	232(%rbx), %rdi
.Ltmp477:
	.loc	6 230 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp478:
.Ltmp493:
	.loc	6 231 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 231 2 is_stmt 0
	movq	%rax, 16(%rsp)
.Ltmp479:
	leaq	15(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk11, %esi
	callq	runtime.deferproc
.Ltmp480:
.Ltmp494:
	.loc	6 232 11 is_stmt 1
	movq	208(%rbx), %rdi
.Ltmp481:
	.loc	6 232 17 is_stmt 0
	callq	command_line_arguments.WarpState.Modes
.Ltmp482:
.Ltmp495:
	.loc	6 0 17
	movq	%rax, %r12
	movb	$1, %bl
.Ltmp496:
	leaq	15(%rsp), %r15
	jmp	.LBB19_13
.Ltmp497:
.LBB19_8:
.Ltmp483:
.Ltmp484:
	leaq	15(%rsp), %rdi
	.loc	6 233 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp485:
.Ltmp498:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bl
.Ltmp499:
	xorl	%r12d, %r12d
.Ltmp500:
	leaq	15(%rsp), %r15
	jmp	.LBB19_13
.Ltmp501:
.LBB19_10:
.Ltmp486:
	movq	%rax, %r14
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
.Ltmp502:
	leaq	15(%rsp), %r15
	jmp	.LBB19_13
.Ltmp503:
.LBB19_12:
.Ltmp489:
	.loc	6 233 1
	movq	%r15, %rdi
	callq	runtime.checkdefer
.Ltmp504:
	.p2align	4, 0x90
.LBB19_13:
.Ltmp487:
	movq	%r15, %rdi
	callq	runtime.deferreturn
.Ltmp488:
.Ltmp505:
	.loc	6 0 1
	testb	%bl, %bl
	je	.LBB19_16
.Ltmp506:
	.loc	6 232 2 is_stmt 1
	movq	%r12, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp507:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp508:
.LBB19_16:
	.cfi_def_cfa_offset 64
	.loc	6 0 2 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end19:
	.size	command_line_arguments.Session.Modes, .Lfunc_end19-command_line_arguments.Session.Modes
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table19:
.Lexception4:
	.byte	255
	.byte	3
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19
	.uleb128 .Ltmp475-.Lfunc_begin19
	.byte	0
	.byte	0
	.uleb128 .Ltmp475-.Lfunc_begin19
	.uleb128 .Ltmp482-.Ltmp475
	.uleb128 .Ltmp483-.Lfunc_begin19
	.byte	1
	.uleb128 .Ltmp484-.Lfunc_begin19
	.uleb128 .Ltmp485-.Ltmp484
	.uleb128 .Ltmp486-.Lfunc_begin19
	.byte	0
	.uleb128 .Ltmp485-.Lfunc_begin19
	.uleb128 .Ltmp487-.Ltmp485
	.byte	0
	.byte	0
	.uleb128 .Ltmp487-.Lfunc_begin19
	.uleb128 .Ltmp488-.Ltmp487
	.uleb128 .Ltmp489-.Lfunc_begin19
	.byte	1
	.uleb128 .Ltmp488-.Lfunc_begin19
	.uleb128 .Lfunc_end19-.Ltmp488
	.byte	0
	.byte	0
.Lcst_end4:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase4:
	.p2align	2

	.section	.text.command_line_arguments.Session.ProtocolState,"ax",@progbits
	.globl	command_line_arguments.Session.ProtocolState
	.p2align	4, 0x90
	.type	command_line_arguments.Session.ProtocolState,@function
command_line_arguments.Session.ProtocolState:
.Lfunc_begin20:
	.loc	6 178 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception5
	cmpq	%fs:112, %rsp
	ja	.LBB20_2
	movq	%r10, %rax
	movabsq	$136, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB20_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$104, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movb	$0, 7(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
	movq	$0, 48(%rsp)
.Ltmp524:
	.loc	6 179 4 prologue_end
	testq	%rsi, %rsi
	jne	.LBB20_4
.Ltmp525:
.Ltmp509:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp510:
.Ltmp526:
.LBB20_4:
	movq	232(%rbx), %rdi
.Ltmp511:
	.loc	6 179 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp512:
.Ltmp527:
	.loc	6 180 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 180 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp513:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk5, %esi
	callq	runtime.deferproc
.Ltmp514:
.Ltmp528:
	.loc	6 181 11 is_stmt 1
	movq	208(%rbx), %rsi
.Ltmp515:
	leaq	64(%rsp), %rdi
	.loc	6 181 17 is_stmt 0
	callq	command_line_arguments.WarpState.ProtocolState
.Ltmp516:
.Ltmp529:
	.loc	6 0 17
	movq	96(%rsp), %rax
	movq	%rax, 48(%rsp)
	movups	64(%rsp), %xmm0
	movups	80(%rsp), %xmm1
	movaps	%xmm1, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
	movb	$1, %bpl
	leaq	7(%rsp), %rbx
.Ltmp530:
	jmp	.LBB20_13
.LBB20_8:
.Ltmp531:
.Ltmp517:
.Ltmp518:
	leaq	7(%rsp), %rdi
	.loc	6 182 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp519:
.Ltmp532:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	leaq	7(%rsp), %rbx
.Ltmp533:
	jmp	.LBB20_13
.LBB20_10:
.Ltmp534:
.Ltmp520:
	movq	%rax, %r15
	xorl	%ebp, %ebp
	leaq	7(%rsp), %rbx
.Ltmp535:
	jmp	.LBB20_13
.LBB20_12:
.Ltmp523:
	.loc	6 182 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB20_13:
.Ltmp521:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp522:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB20_16
	.loc	6 181 2 is_stmt 1
	movq	48(%rsp), %rax
	movq	%rax, 32(%r14)
	movaps	16(%rsp), %xmm0
	movaps	32(%rsp), %xmm1
	movups	%xmm1, 16(%r14)
	movups	%xmm0, (%r14)
	movq	%r14, %rax
	addq	$104, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp536:
.LBB20_16:
	.cfi_def_cfa_offset 144
	.loc	6 0 2 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end20:
	.size	command_line_arguments.Session.ProtocolState, .Lfunc_end20-command_line_arguments.Session.ProtocolState
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table20:
.Lexception5:
	.byte	255
	.byte	3
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin20-.Lfunc_begin20
	.uleb128 .Ltmp509-.Lfunc_begin20
	.byte	0
	.byte	0
	.uleb128 .Ltmp509-.Lfunc_begin20
	.uleb128 .Ltmp516-.Ltmp509
	.uleb128 .Ltmp517-.Lfunc_begin20
	.byte	1
	.uleb128 .Ltmp518-.Lfunc_begin20
	.uleb128 .Ltmp519-.Ltmp518
	.uleb128 .Ltmp520-.Lfunc_begin20
	.byte	0
	.uleb128 .Ltmp519-.Lfunc_begin20
	.uleb128 .Ltmp521-.Ltmp519
	.byte	0
	.byte	0
	.uleb128 .Ltmp521-.Lfunc_begin20
	.uleb128 .Ltmp522-.Ltmp521
	.uleb128 .Ltmp523-.Lfunc_begin20
	.byte	1
	.uleb128 .Ltmp522-.Lfunc_begin20
	.uleb128 .Lfunc_end20-.Ltmp522
	.byte	0
	.byte	0
.Lcst_end5:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase5:
	.p2align	2

	.section	.text.command_line_arguments.Session.SendHostUpdate,"ax",@progbits
	.globl	command_line_arguments.Session.SendHostUpdate
	.p2align	4, 0x90
	.type	command_line_arguments.Session.SendHostUpdate,@function
command_line_arguments.Session.SendHostUpdate:
.Lfunc_begin21:
	.loc	6 255 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception6
	cmpq	%fs:112, %rsp
	ja	.LBB21_2
	movq	%r10, %rax
	movabsq	$152, %r10
	movabsq	$88, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB21_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$112, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movb	$0, 7(%rsp)
.Ltmp558:
	.loc	6 259 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB21_4
.Ltmp559:
.Ltmp537:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp560:
.Ltmp538:
.LBB21_4:
	movq	232(%rbx), %rdi
.Ltmp539:
	.loc	6 259 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp540:
.Ltmp561:
	.loc	6 260 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 260 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp541:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk14, %esi
	callq	runtime.deferproc
.Ltmp542:
.Ltmp562:
	.loc	6 0 2
	movb	$1, %r13b
	.loc	6 261 5 is_stmt 1
	cmpb	$0, 216(%rbx)
	je	.LBB21_7
.Ltmp563:
.LBB21_15:
	.loc	6 0 5 is_stmt 0
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
.Ltmp564:
	leaq	7(%rsp), %r12
	jmp	.LBB21_19
.Ltmp565:
.LBB21_7:
	.loc	6 262 15 is_stmt 1
	movq	160(%rbx), %r14
.Ltmp543:
	.loc	6 262 31 is_stmt 0
	movl	$github_com_spolu_warp.HostUpdate..d, %edi
	callq	runtime.newobject
.Ltmp544:
.Ltmp566:
	.loc	6 0 31
	movq	%rax, %rbx
.Ltmp567:
	leaq	160(%rsp), %rax
	movq	80(%rax), %rcx
	movq	%rcx, 96(%rsp)
	movups	64(%rax), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movups	48(%rax), %xmm3
	movaps	%xmm3, 64(%rsp)
	movaps	%xmm2, 48(%rsp)
	movaps	%xmm1, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
.Ltmp545:
	leaq	16(%rsp), %rdx
	.loc	6 262 31
	movl	$github_com_spolu_warp.HostUpdate..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
.Ltmp546:
.Ltmp547:
	.loc	6 262 23
	movl	$github_com_spolu_warp.HostUpdate..d, %esi
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp548:
	.loc	6 262 44
	testq	%rax, %rax
	je	.LBB21_15
.Ltmp549:
.Ltmp568:
	.loc	6 263 18 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp569:
.Ltmp550:
	.loc	6 0 18 is_stmt 0
	movq	%rax, %r14
	movq	%rdx, %rbx
.Ltmp570:
	leaq	7(%rsp), %r12
	jmp	.LBB21_19
.Ltmp571:
.LBB21_13:
.Ltmp551:
.Ltmp552:
	leaq	7(%rsp), %rdi
	.loc	6 267 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp553:
	.loc	6 0 1 is_stmt 0
	movb	$1, %r13b
	jmp	.LBB21_15
.LBB21_16:
.Ltmp554:
	movq	%rax, %r15
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
	xorl	%r13d, %r13d
.Ltmp572:
	leaq	7(%rsp), %r12
	jmp	.LBB21_19
.Ltmp573:
.LBB21_18:
.Ltmp557:
	.loc	6 267 1
	movq	%r12, %rdi
	callq	runtime.checkdefer
.Ltmp574:
	.p2align	4, 0x90
.LBB21_19:
.Ltmp555:
	movq	%r12, %rdi
	callq	runtime.deferreturn
.Ltmp556:
.Ltmp575:
	.loc	6 0 1
	testb	%r13b, %r13b
	je	.LBB21_22
.Ltmp576:
	.loc	6 263 4 is_stmt 1
	movq	%r14, %rax
	movq	%rbx, %rdx
	addq	$112, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp577:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp578:
.LBB21_22:
	.cfi_def_cfa_offset 160
	.loc	6 0 4 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end21:
	.size	command_line_arguments.Session.SendHostUpdate, .Lfunc_end21-command_line_arguments.Session.SendHostUpdate
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table21:
.Lexception6:
	.byte	255
	.byte	3
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21
	.uleb128 .Ltmp537-.Lfunc_begin21
	.byte	0
	.byte	0
	.uleb128 .Ltmp537-.Lfunc_begin21
	.uleb128 .Ltmp550-.Ltmp537
	.uleb128 .Ltmp551-.Lfunc_begin21
	.byte	1
	.uleb128 .Ltmp552-.Lfunc_begin21
	.uleb128 .Ltmp553-.Ltmp552
	.uleb128 .Ltmp554-.Lfunc_begin21
	.byte	0
	.uleb128 .Ltmp553-.Lfunc_begin21
	.uleb128 .Ltmp555-.Ltmp553
	.byte	0
	.byte	0
	.uleb128 .Ltmp555-.Lfunc_begin21
	.uleb128 .Ltmp556-.Ltmp555
	.uleb128 .Ltmp557-.Lfunc_begin21
	.byte	1
	.uleb128 .Ltmp556-.Lfunc_begin21
	.uleb128 .Lfunc_end21-.Ltmp556
	.byte	0
	.byte	0
.Lcst_end6:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase6:
	.p2align	2

	.section	.text.command_line_arguments.Session.Session,"ax",@progbits
	.globl	command_line_arguments.Session.Session
	.p2align	4, 0x90
	.type	command_line_arguments.Session.Session,@function
command_line_arguments.Session.Session:
.Lfunc_begin22:
	.loc	6 171 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception7
	cmpq	%fs:112, %rsp
	ja	.LBB22_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB22_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movb	$0, 7(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
.Ltmp592:
	.loc	6 172 4 prologue_end
	testq	%rsi, %rsi
	jne	.LBB22_4
.Ltmp593:
.Ltmp579:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp580:
.Ltmp594:
.LBB22_4:
	movq	232(%rbx), %rdi
.Ltmp581:
	.loc	6 172 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp582:
.Ltmp595:
	.loc	6 173 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 173 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp583:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk4, %esi
	callq	runtime.deferproc
.Ltmp584:
.Ltmp596:
	.loc	6 174 2 is_stmt 1
	movups	(%rbx), %xmm0
	movups	16(%rbx), %xmm1
	movups	32(%rbx), %xmm2
	movaps	%xmm2, 48(%rsp)
	movaps	%xmm1, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
	movb	$1, %bpl
	leaq	7(%rsp), %rbx
.Ltmp597:
	.loc	6 0 2 is_stmt 0
	jmp	.LBB22_12
.LBB22_7:
.Ltmp598:
.Ltmp585:
.Ltmp586:
	leaq	7(%rsp), %rdi
	.loc	6 175 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp587:
.Ltmp599:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	leaq	7(%rsp), %rbx
.Ltmp600:
	jmp	.LBB22_12
.LBB22_9:
.Ltmp601:
.Ltmp588:
	movq	%rax, %r15
	xorl	%ebp, %ebp
	leaq	7(%rsp), %rbx
.Ltmp602:
	jmp	.LBB22_12
.LBB22_11:
.Ltmp591:
	.loc	6 175 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB22_12:
.Ltmp589:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp590:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB22_15
	.loc	6 174 2 is_stmt 1
	movaps	16(%rsp), %xmm0
	movaps	32(%rsp), %xmm1
	movaps	48(%rsp), %xmm2
	movups	%xmm2, 32(%r14)
	movups	%xmm1, 16(%r14)
	movups	%xmm0, (%r14)
	movq	%r14, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp603:
.LBB22_15:
	.cfi_def_cfa_offset 112
	.loc	6 0 2 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end22:
	.size	command_line_arguments.Session.Session, .Lfunc_end22-command_line_arguments.Session.Session
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table22:
.Lexception7:
	.byte	255
	.byte	3
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin22-.Lfunc_begin22
	.uleb128 .Ltmp579-.Lfunc_begin22
	.byte	0
	.byte	0
	.uleb128 .Ltmp579-.Lfunc_begin22
	.uleb128 .Ltmp584-.Ltmp579
	.uleb128 .Ltmp585-.Lfunc_begin22
	.byte	1
	.uleb128 .Ltmp586-.Lfunc_begin22
	.uleb128 .Ltmp587-.Ltmp586
	.uleb128 .Ltmp588-.Lfunc_begin22
	.byte	0
	.uleb128 .Ltmp587-.Lfunc_begin22
	.uleb128 .Ltmp589-.Ltmp587
	.byte	0
	.byte	0
	.uleb128 .Ltmp589-.Lfunc_begin22
	.uleb128 .Ltmp590-.Ltmp589
	.uleb128 .Ltmp591-.Lfunc_begin22
	.byte	1
	.uleb128 .Ltmp590-.Lfunc_begin22
	.uleb128 .Lfunc_end22-.Ltmp590
	.byte	0
	.byte	0
.Lcst_end7:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase7:
	.p2align	2

	.section	.text.command_line_arguments.Session.SetMode,"ax",@progbits
	.globl	command_line_arguments.Session.SetMode
	.p2align	4, 0x90
	.type	command_line_arguments.Session.SetMode,@function
command_line_arguments.Session.SetMode:
.Lfunc_begin23:
	.loc	6 194 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception8
	cmpq	%fs:112, %rsp
	ja	.LBB23_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB23_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %rbx
	movb	$0, 7(%rsp)
.Ltmp619:
	.loc	6 198 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB23_4
.Ltmp620:
.Ltmp604:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp605:
.Ltmp621:
.LBB23_4:
	movq	232(%rbx), %rdi
.Ltmp606:
	.loc	6 198 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp607:
.Ltmp622:
	.loc	6 199 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 199 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp608:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk7, %esi
	callq	runtime.deferproc
.Ltmp609:
.Ltmp623:
	.loc	6 200 11 is_stmt 1
	movq	208(%rbx), %rdi
.Ltmp610:
	.loc	6 200 17 is_stmt 0
	movq	%r12, %rsi
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	command_line_arguments.WarpState.SetMode
.Ltmp611:
.Ltmp624:
	.loc	6 0 17
	movq	%rax, %r14
.Ltmp625:
	movq	%rdx, %r13
.Ltmp626:
	movb	$1, %bl
.Ltmp627:
	leaq	7(%rsp), %r12
.Ltmp628:
	jmp	.LBB23_13
.Ltmp629:
.LBB23_8:
.Ltmp612:
.Ltmp613:
	leaq	7(%rsp), %rdi
	.loc	6 201 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp614:
.Ltmp630:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bl
.Ltmp631:
	xorl	%r14d, %r14d
.Ltmp632:
	xorl	%r13d, %r13d
.Ltmp633:
	leaq	7(%rsp), %r12
.Ltmp634:
	jmp	.LBB23_13
.Ltmp635:
.LBB23_10:
.Ltmp615:
	movq	%rax, %r15
	xorl	%r14d, %r14d
.Ltmp636:
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
.Ltmp637:
	leaq	7(%rsp), %r12
.Ltmp638:
	jmp	.LBB23_13
.Ltmp639:
.LBB23_12:
.Ltmp618:
	.loc	6 201 1
	movq	%r12, %rdi
	callq	runtime.checkdefer
.Ltmp640:
	.p2align	4, 0x90
.LBB23_13:
.Ltmp616:
	movq	%r12, %rdi
	callq	runtime.deferreturn
.Ltmp617:
.Ltmp641:
	.loc	6 0 1
	testb	%bl, %bl
	je	.LBB23_16
.Ltmp642:
	.loc	6 200 2 is_stmt 1
	movq	%r14, %rax
	movq	%r13, %rdx
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
.Ltmp643:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp644:
.LBB23_16:
	.cfi_def_cfa_offset 64
	.loc	6 0 2 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end23:
	.size	command_line_arguments.Session.SetMode, .Lfunc_end23-command_line_arguments.Session.SetMode
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table23:
.Lexception8:
	.byte	255
	.byte	3
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Lfunc_begin23-.Lfunc_begin23
	.uleb128 .Ltmp604-.Lfunc_begin23
	.byte	0
	.byte	0
	.uleb128 .Ltmp604-.Lfunc_begin23
	.uleb128 .Ltmp611-.Ltmp604
	.uleb128 .Ltmp612-.Lfunc_begin23
	.byte	1
	.uleb128 .Ltmp613-.Lfunc_begin23
	.uleb128 .Ltmp614-.Ltmp613
	.uleb128 .Ltmp615-.Lfunc_begin23
	.byte	0
	.uleb128 .Ltmp614-.Lfunc_begin23
	.uleb128 .Ltmp616-.Ltmp614
	.byte	0
	.byte	0
	.uleb128 .Ltmp616-.Lfunc_begin23
	.uleb128 .Ltmp617-.Ltmp616
	.uleb128 .Ltmp618-.Lfunc_begin23
	.byte	1
	.uleb128 .Ltmp617-.Lfunc_begin23
	.uleb128 .Lfunc_end23-.Ltmp617
	.byte	0
	.byte	0
.Lcst_end8:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase8:
	.p2align	2

	.section	.text.command_line_arguments.Session.TearDown,"ax",@progbits
	.globl	command_line_arguments.Session.TearDown
	.p2align	4, 0x90
	.type	command_line_arguments.Session.TearDown,@function
command_line_arguments.Session.TearDown:
.Lfunc_begin24:
	.loc	6 243 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception9
	cmpq	%fs:112, %rsp
	ja	.LBB24_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB24_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movb	$0, 7(%rsp)
.Ltmp662:
	.loc	6 244 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB24_4
.Ltmp663:
.Ltmp645:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp646:
.Ltmp664:
.LBB24_4:
	movq	232(%rbx), %rdi
.Ltmp647:
	.loc	6 244 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp648:
.Ltmp665:
	.loc	6 245 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 245 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp649:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk13, %esi
	callq	runtime.deferproc
.Ltmp650:
.Ltmp666:
	.loc	6 0 2
	movb	$1, %bpl
	.loc	6 246 5 is_stmt 1
	cmpb	$0, 216(%rbx)
	je	.LBB24_10
.Ltmp667:
	.loc	6 0 5 is_stmt 0
	leaq	7(%rsp), %rbx
.Ltmp668:
	jmp	.LBB24_15
.LBB24_10:
.Ltmp669:
	.loc	6 247 15 is_stmt 1
	movb	$1, 216(%rbx)
	.loc	6 248 5
	movq	224(%rbx), %r10
.Ltmp651:
	callq	*(%r10)
.Ltmp652:
.Ltmp670:
	.loc	6 250 5
	movq	112(%rbx), %rdi
.Ltmp653:
	.loc	6 250 9 is_stmt 0
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Close
.Ltmp654:
.Ltmp671:
	.loc	6 0 9
	leaq	7(%rsp), %rbx
.Ltmp672:
	jmp	.LBB24_15
.LBB24_8:
.Ltmp673:
.Ltmp655:
.Ltmp656:
	leaq	7(%rsp), %rdi
	.loc	6 252 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp657:
.Ltmp674:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	leaq	7(%rsp), %rbx
.Ltmp675:
	jmp	.LBB24_15
.LBB24_13:
.Ltmp676:
.Ltmp658:
	movq	%rax, %r14
	xorl	%ebp, %ebp
	leaq	7(%rsp), %rbx
.Ltmp677:
	jmp	.LBB24_15
.LBB24_14:
.Ltmp661:
	.loc	6 252 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB24_15:
.Ltmp659:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp660:
.Ltmp678:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB24_18
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB24_18:
	.cfi_def_cfa_offset 48
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end24:
	.size	command_line_arguments.Session.TearDown, .Lfunc_end24-command_line_arguments.Session.TearDown
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table24:
.Lexception9:
	.byte	255
	.byte	3
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24
	.uleb128 .Ltmp645-.Lfunc_begin24
	.byte	0
	.byte	0
	.uleb128 .Ltmp645-.Lfunc_begin24
	.uleb128 .Ltmp654-.Ltmp645
	.uleb128 .Ltmp655-.Lfunc_begin24
	.byte	1
	.uleb128 .Ltmp656-.Lfunc_begin24
	.uleb128 .Ltmp657-.Ltmp656
	.uleb128 .Ltmp658-.Lfunc_begin24
	.byte	0
	.uleb128 .Ltmp657-.Lfunc_begin24
	.uleb128 .Ltmp659-.Ltmp657
	.byte	0
	.byte	0
	.uleb128 .Ltmp659-.Lfunc_begin24
	.uleb128 .Ltmp660-.Ltmp659
	.uleb128 .Ltmp661-.Lfunc_begin24
	.byte	1
	.uleb128 .Ltmp660-.Lfunc_begin24
	.uleb128 .Lfunc_end24-.Ltmp660
	.byte	0
	.byte	0
.Lcst_end9:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase9:
	.p2align	2

	.section	.text.command_line_arguments.Session.TornDown,"ax",@progbits
	.globl	command_line_arguments.Session.TornDown
	.p2align	4, 0x90
	.type	command_line_arguments.Session.TornDown,@function
command_line_arguments.Session.TornDown:
.Lfunc_begin25:
	.loc	6 236 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception10
	cmpq	%fs:112, %rsp
	ja	.LBB25_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB25_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movb	$0, 15(%rsp)
.Ltmp692:
	.loc	6 237 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB25_4
.Ltmp693:
.Ltmp679:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp680:
.Ltmp694:
.LBB25_4:
	movq	232(%rbx), %rdi
.Ltmp681:
	.loc	6 237 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp682:
.Ltmp695:
	.loc	6 238 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 238 2 is_stmt 0
	movq	%rax, 16(%rsp)
.Ltmp683:
	leaq	15(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk12, %esi
	callq	runtime.deferproc
.Ltmp684:
.Ltmp696:
	.loc	6 239 11 is_stmt 1
	movb	216(%rbx), %bl
.Ltmp697:
	.loc	6 0 11 is_stmt 0
	movb	$1, %bpl
	leaq	15(%rsp), %r15
	jmp	.LBB25_12
.Ltmp698:
.LBB25_7:
.Ltmp685:
.Ltmp686:
	leaq	15(%rsp), %rdi
	.loc	6 240 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp687:
.Ltmp699:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	xorl	%ebx, %ebx
.Ltmp700:
	leaq	15(%rsp), %r15
	jmp	.LBB25_12
.Ltmp701:
.LBB25_9:
.Ltmp688:
	movq	%rax, %r14
	xorl	%ebx, %ebx
.Ltmp702:
	xorl	%ebp, %ebp
.Ltmp703:
	leaq	15(%rsp), %r15
	jmp	.LBB25_12
.Ltmp704:
.LBB25_11:
.Ltmp691:
	.loc	6 240 1
	movq	%r15, %rdi
	callq	runtime.checkdefer
.Ltmp705:
	.p2align	4, 0x90
.LBB25_12:
.Ltmp689:
	movq	%r15, %rdi
	callq	runtime.deferreturn
.Ltmp690:
.Ltmp706:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB25_15
.Ltmp707:
	.loc	6 239 2 is_stmt 1
	movl	%ebx, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp708:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp709:
.LBB25_15:
	.cfi_def_cfa_offset 64
	.loc	6 0 2 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end25:
	.size	command_line_arguments.Session.TornDown, .Lfunc_end25-command_line_arguments.Session.TornDown
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table25:
.Lexception10:
	.byte	255
	.byte	3
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25
	.uleb128 .Ltmp679-.Lfunc_begin25
	.byte	0
	.byte	0
	.uleb128 .Ltmp679-.Lfunc_begin25
	.uleb128 .Ltmp684-.Ltmp679
	.uleb128 .Ltmp685-.Lfunc_begin25
	.byte	1
	.uleb128 .Ltmp686-.Lfunc_begin25
	.uleb128 .Ltmp687-.Ltmp686
	.uleb128 .Ltmp688-.Lfunc_begin25
	.byte	0
	.uleb128 .Ltmp687-.Lfunc_begin25
	.uleb128 .Ltmp689-.Ltmp687
	.byte	0
	.byte	0
	.uleb128 .Ltmp689-.Lfunc_begin25
	.uleb128 .Ltmp690-.Ltmp689
	.uleb128 .Ltmp691-.Lfunc_begin25
	.byte	1
	.uleb128 .Ltmp690-.Lfunc_begin25
	.uleb128 .Lfunc_end25-.Ltmp690
	.byte	0
	.byte	0
.Lcst_end10:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase10:
	.p2align	2

	.section	.text.command_line_arguments.Session.UpdateState,"ax",@progbits
	.globl	command_line_arguments.Session.UpdateState
	.p2align	4, 0x90
	.type	command_line_arguments.Session.UpdateState,@function
command_line_arguments.Session.UpdateState:
.Lfunc_begin26:
	.loc	6 204 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception11
	cmpq	%fs:112, %rsp
	ja	.LBB26_2
	movq	%r10, %rax
	movabsq	$104, %r10
	movabsq	$40, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB26_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$64, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	movb	$0, 55(%rsp)
.Ltmp725:
	.loc	6 208 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB26_4
.Ltmp726:
.Ltmp710:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp711:
.Ltmp727:
.LBB26_4:
	movq	232(%rbx), %rdi
.Ltmp712:
	.loc	6 208 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp713:
.Ltmp728:
	.loc	6 209 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 209 2 is_stmt 0
	movq	%rax, 56(%rsp)
.Ltmp714:
	leaq	55(%rsp), %rdi
	leaq	56(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk8, %esi
	callq	runtime.deferproc
.Ltmp715:
.Ltmp729:
	.loc	6 0 2
	leaq	112(%rsp), %rax
	.loc	6 210 11 is_stmt 1
	movq	208(%rbx), %rdi
.Ltmp716:
	.loc	6 210 17 is_stmt 0
	movq	32(%rax), %rcx
	movq	%rcx, 32(%rsp)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	movzbl	%bpl, %esi
	callq	command_line_arguments.WarpState.Update
.Ltmp717:
.Ltmp730:
	.loc	6 0 17
	movq	%rax, %r14
	movq	%rdx, %rbx
.Ltmp731:
	movb	$1, %bpl
.Ltmp732:
	leaq	55(%rsp), %r12
	jmp	.LBB26_13
.Ltmp733:
.LBB26_8:
.Ltmp718:
.Ltmp719:
	leaq	55(%rsp), %rdi
	.loc	6 211 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp720:
.Ltmp734:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
.Ltmp735:
	leaq	55(%rsp), %r12
	jmp	.LBB26_13
.Ltmp736:
.LBB26_10:
.Ltmp721:
	movq	%rax, %r15
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
.Ltmp737:
	xorl	%ebp, %ebp
.Ltmp738:
	leaq	55(%rsp), %r12
	jmp	.LBB26_13
.Ltmp739:
.LBB26_12:
.Ltmp724:
	.loc	6 211 1
	movq	%r12, %rdi
	callq	runtime.checkdefer
.Ltmp740:
	.p2align	4, 0x90
.LBB26_13:
.Ltmp722:
	movq	%r12, %rdi
	callq	runtime.deferreturn
.Ltmp723:
.Ltmp741:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB26_16
.Ltmp742:
	.loc	6 210 2 is_stmt 1
	movq	%r14, %rax
	movq	%rbx, %rdx
	addq	$64, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp743:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp744:
.LBB26_16:
	.cfi_def_cfa_offset 112
	.loc	6 0 2 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end26:
	.size	command_line_arguments.Session.UpdateState, .Lfunc_end26-command_line_arguments.Session.UpdateState
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table26:
.Lexception11:
	.byte	255
	.byte	3
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Lfunc_begin26-.Lfunc_begin26
	.uleb128 .Ltmp710-.Lfunc_begin26
	.byte	0
	.byte	0
	.uleb128 .Ltmp710-.Lfunc_begin26
	.uleb128 .Ltmp717-.Ltmp710
	.uleb128 .Ltmp718-.Lfunc_begin26
	.byte	1
	.uleb128 .Ltmp719-.Lfunc_begin26
	.uleb128 .Ltmp720-.Ltmp719
	.uleb128 .Ltmp721-.Lfunc_begin26
	.byte	0
	.uleb128 .Ltmp720-.Lfunc_begin26
	.uleb128 .Ltmp722-.Ltmp720
	.byte	0
	.byte	0
	.uleb128 .Ltmp722-.Lfunc_begin26
	.uleb128 .Ltmp723-.Ltmp722
	.uleb128 .Ltmp724-.Lfunc_begin26
	.byte	1
	.uleb128 .Ltmp723-.Lfunc_begin26
	.uleb128 .Lfunc_end26-.Ltmp723
	.byte	0
	.byte	0
.Lcst_end11:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase11:
	.p2align	2

	.section	.text.command_line_arguments.Session.Warp,"ax",@progbits
	.globl	command_line_arguments.Session.Warp
	.p2align	4, 0x90
	.type	command_line_arguments.Session.Warp,@function
command_line_arguments.Session.Warp:
.Lfunc_begin27:
	.loc	6 164 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception12
	cmpq	%fs:112, %rsp
	ja	.LBB27_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB27_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movb	$0, 7(%rsp)
.Ltmp758:
	.loc	6 165 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB27_4
.Ltmp759:
.Ltmp745:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp746:
.Ltmp760:
.LBB27_4:
	movq	232(%rbx), %rdi
.Ltmp747:
	.loc	6 165 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp748:
.Ltmp761:
	.loc	6 166 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 166 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp749:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk3, %esi
	callq	runtime.deferproc
.Ltmp750:
.Ltmp762:
	.loc	6 167 2 is_stmt 1
	movq	48(%rbx), %r12
.Ltmp763:
	movq	56(%rbx), %r15
.Ltmp764:
	.loc	6 0 2 is_stmt 0
	movb	$1, %bl
.Ltmp765:
	leaq	7(%rsp), %r13
	jmp	.LBB27_12
.Ltmp766:
.LBB27_7:
.Ltmp751:
.Ltmp752:
	leaq	7(%rsp), %rdi
	.loc	6 168 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp753:
.Ltmp767:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bl
.Ltmp768:
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
.Ltmp769:
	leaq	7(%rsp), %r13
	jmp	.LBB27_12
.Ltmp770:
.LBB27_9:
.Ltmp754:
	movq	%rax, %r14
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
	xorl	%ebx, %ebx
.Ltmp771:
	leaq	7(%rsp), %r13
	jmp	.LBB27_12
.Ltmp772:
.LBB27_11:
.Ltmp757:
	.loc	6 168 1
	movq	%r13, %rdi
	callq	runtime.checkdefer
.Ltmp773:
	.p2align	4, 0x90
.LBB27_12:
.Ltmp755:
	movq	%r13, %rdi
	callq	runtime.deferreturn
.Ltmp756:
.Ltmp774:
	.loc	6 0 1
	testb	%bl, %bl
	je	.LBB27_15
.Ltmp775:
	.loc	6 167 2 is_stmt 1
	movq	%r12, %rax
	movq	%r15, %rdx
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp776:
	.cfi_def_cfa_offset 8
	retq
.Ltmp777:
.LBB27_15:
	.cfi_def_cfa_offset 64
	.loc	6 0 2 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end27:
	.size	command_line_arguments.Session.Warp, .Lfunc_end27-command_line_arguments.Session.Warp
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table27:
.Lexception12:
	.byte	255
	.byte	3
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin27-.Lfunc_begin27
	.uleb128 .Ltmp745-.Lfunc_begin27
	.byte	0
	.byte	0
	.uleb128 .Ltmp745-.Lfunc_begin27
	.uleb128 .Ltmp750-.Ltmp745
	.uleb128 .Ltmp751-.Lfunc_begin27
	.byte	1
	.uleb128 .Ltmp752-.Lfunc_begin27
	.uleb128 .Ltmp753-.Ltmp752
	.uleb128 .Ltmp754-.Lfunc_begin27
	.byte	0
	.uleb128 .Ltmp753-.Lfunc_begin27
	.uleb128 .Ltmp755-.Ltmp753
	.byte	0
	.byte	0
	.uleb128 .Ltmp755-.Lfunc_begin27
	.uleb128 .Ltmp756-.Ltmp755
	.uleb128 .Ltmp757-.Lfunc_begin27
	.byte	1
	.uleb128 .Ltmp756-.Lfunc_begin27
	.uleb128 .Lfunc_end27-.Ltmp756
	.byte	0
	.byte	0
.Lcst_end12:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase12:
	.p2align	2

	.section	.text.command_line_arguments.Session.WindowSize,"ax",@progbits
	.globl	command_line_arguments.Session.WindowSize
	.p2align	4, 0x90
	.type	command_line_arguments.Session.WindowSize,@function
command_line_arguments.Session.WindowSize:
.Lfunc_begin28:
	.loc	6 222 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception13
	cmpq	%fs:112, %rsp
	ja	.LBB28_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB28_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movb	$0, 7(%rsp)
.Ltmp793:
	.loc	6 223 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB28_4
.Ltmp794:
.Ltmp778:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp779:
.Ltmp795:
.LBB28_4:
	movq	232(%rbx), %rdi
.Ltmp780:
	.loc	6 223 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp781:
.Ltmp796:
	.loc	6 224 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 224 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp782:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk10, %esi
	callq	runtime.deferproc
.Ltmp783:
.Ltmp797:
	.loc	6 225 11 is_stmt 1
	movq	208(%rbx), %rdi
.Ltmp784:
	.loc	6 225 17 is_stmt 0
	callq	command_line_arguments.WarpState.WindowSize
.Ltmp785:
.Ltmp798:
	.loc	6 0 17
	movq	%rax, %r14
	movq	%rdx, %r13
.Ltmp799:
	movb	$1, %bl
.Ltmp800:
	leaq	7(%rsp), %r12
	jmp	.LBB28_13
.Ltmp801:
.LBB28_8:
.Ltmp786:
.Ltmp787:
	leaq	7(%rsp), %rdi
	.loc	6 226 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp788:
.Ltmp802:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bl
.Ltmp803:
	xorl	%r14d, %r14d
	xorl	%r13d, %r13d
.Ltmp804:
	leaq	7(%rsp), %r12
	jmp	.LBB28_13
.Ltmp805:
.LBB28_10:
.Ltmp789:
	movq	%rax, %r15
	xorl	%r14d, %r14d
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
.Ltmp806:
	leaq	7(%rsp), %r12
	jmp	.LBB28_13
.Ltmp807:
.LBB28_12:
.Ltmp792:
	.loc	6 226 1
	movq	%r12, %rdi
	callq	runtime.checkdefer
.Ltmp808:
	.p2align	4, 0x90
.LBB28_13:
.Ltmp790:
	movq	%r12, %rdi
	callq	runtime.deferreturn
.Ltmp791:
.Ltmp809:
	.loc	6 0 1
	testb	%bl, %bl
	je	.LBB28_16
.Ltmp810:
	.loc	6 225 2 is_stmt 1
	movq	%r14, %rax
	movq	%r13, %rdx
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
.Ltmp811:
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp812:
.LBB28_16:
	.cfi_def_cfa_offset 64
	.loc	6 0 2 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end28:
	.size	command_line_arguments.Session.WindowSize, .Lfunc_end28-command_line_arguments.Session.WindowSize
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table28:
.Lexception13:
	.byte	255
	.byte	3
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28
	.uleb128 .Ltmp778-.Lfunc_begin28
	.byte	0
	.byte	0
	.uleb128 .Ltmp778-.Lfunc_begin28
	.uleb128 .Ltmp785-.Ltmp778
	.uleb128 .Ltmp786-.Lfunc_begin28
	.byte	1
	.uleb128 .Ltmp787-.Lfunc_begin28
	.uleb128 .Ltmp788-.Ltmp787
	.uleb128 .Ltmp789-.Lfunc_begin28
	.byte	0
	.uleb128 .Ltmp788-.Lfunc_begin28
	.uleb128 .Ltmp790-.Ltmp788
	.byte	0
	.byte	0
	.uleb128 .Ltmp790-.Lfunc_begin28
	.uleb128 .Ltmp791-.Ltmp790
	.uleb128 .Ltmp792-.Lfunc_begin28
	.byte	1
	.uleb128 .Ltmp791-.Lfunc_begin28
	.uleb128 .Lfunc_end28-.Ltmp791
	.byte	0
	.byte	0
.Lcst_end13:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase13:
	.p2align	2

	.section	.text.command_line_arguments.Session.WriteDataC,"ax",@progbits
	.globl	command_line_arguments.Session.WriteDataC
	.p2align	4, 0x90
	.type	command_line_arguments.Session.WriteDataC,@function
command_line_arguments.Session.WriteDataC:
.Lfunc_begin29:
	.loc	6 153 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception14
	cmpq	%fs:112, %rsp
	ja	.LBB29_2
	movq	%r10, %rax
	movabsq	$88, %r10
	movabsq	$24, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB29_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$64, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movb	$0, 31(%rsp)
.Ltmp828:
	.loc	6 156 4 prologue_end
	testq	%rdi, %rdi
	jne	.LBB29_4
.Ltmp829:
.Ltmp813:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp814:
.Ltmp830:
.LBB29_4:
	movq	232(%rbx), %rdi
.Ltmp815:
	.loc	6 156 10 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp816:
.Ltmp831:
	.loc	6 157 10 is_stmt 1
	movq	232(%rbx), %rax
	.loc	6 157 2 is_stmt 0
	movq	%rax, 32(%rsp)
.Ltmp817:
	leaq	31(%rsp), %rdi
	leaq	32(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk2, %esi
	callq	runtime.deferproc
.Ltmp818:
.Ltmp832:
	.loc	6 0 2
	movb	$1, %bpl
	.loc	6 158 5 is_stmt 1
	cmpb	$0, 216(%rbx)
	je	.LBB29_10
.Ltmp833:
	.loc	6 0 5 is_stmt 0
	leaq	31(%rsp), %rbx
.Ltmp834:
	jmp	.LBB29_14
.LBB29_10:
.Ltmp835:
	leaq	96(%rsp), %rax
	movq	192(%rbx), %rcx
	movq	200(%rbx), %rsi
	.loc	6 159 11 is_stmt 1
	movq	64(%rcx), %rcx
.Ltmp819:
	movq	16(%rax), %rdx
	movq	%rdx, 16(%rsp)
	movups	(%rax), %xmm0
	movups	%xmm0, (%rsp)
	leaq	40(%rsp), %rdi
	callq	*%rcx
.Ltmp820:
.Ltmp836:
	.loc	6 0 11 is_stmt 0
	leaq	31(%rsp), %rbx
.Ltmp837:
	jmp	.LBB29_14
.LBB29_8:
.Ltmp838:
.Ltmp821:
.Ltmp822:
	leaq	31(%rsp), %rdi
	.loc	6 161 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp823:
.Ltmp839:
	.loc	6 0 1 is_stmt 0
	movb	$1, %bpl
	leaq	31(%rsp), %rbx
.Ltmp840:
	jmp	.LBB29_14
.LBB29_12:
.Ltmp841:
.Ltmp824:
	movq	%rax, %r14
	xorl	%ebp, %ebp
	leaq	31(%rsp), %rbx
.Ltmp842:
	jmp	.LBB29_14
.LBB29_13:
.Ltmp827:
	.loc	6 161 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB29_14:
.Ltmp825:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp826:
.Ltmp843:
	.loc	6 0 1
	testb	%bpl, %bpl
	je	.LBB29_17
	addq	$64, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB29_17:
	.cfi_def_cfa_offset 96
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end29:
	.size	command_line_arguments.Session.WriteDataC, .Lfunc_end29-command_line_arguments.Session.WriteDataC
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table29:
.Lexception14:
	.byte	255
	.byte	3
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin29-.Lfunc_begin29
	.uleb128 .Ltmp813-.Lfunc_begin29
	.byte	0
	.byte	0
	.uleb128 .Ltmp813-.Lfunc_begin29
	.uleb128 .Ltmp820-.Ltmp813
	.uleb128 .Ltmp821-.Lfunc_begin29
	.byte	1
	.uleb128 .Ltmp822-.Lfunc_begin29
	.uleb128 .Ltmp823-.Ltmp822
	.uleb128 .Ltmp824-.Lfunc_begin29
	.byte	0
	.uleb128 .Ltmp823-.Lfunc_begin29
	.uleb128 .Ltmp825-.Ltmp823
	.byte	0
	.byte	0
	.uleb128 .Ltmp825-.Lfunc_begin29
	.uleb128 .Ltmp826-.Ltmp825
	.uleb128 .Ltmp827-.Lfunc_begin29
	.byte	1
	.uleb128 .Ltmp826-.Lfunc_begin29
	.uleb128 .Lfunc_end29-.Ltmp826
	.byte	0
	.byte	0
.Lcst_end14:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase14:
	.p2align	2

	.section	.text.command_line_arguments.WarpState.GetMode,"ax",@progbits
	.globl	command_line_arguments.WarpState.GetMode
	.p2align	4, 0x90
	.type	command_line_arguments.WarpState.GetMode,@function
command_line_arguments.WarpState.GetMode:
.Lfunc_begin30:
	.file	7 "./warp_state.go"
	.loc	7 132 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB30_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB30_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$144, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %rbp
	movq	%rdi, %r12
.Ltmp844:
	.loc	7 135 2 prologue_end
	movl	$command_line_arguments.UserState..d, %edi
	callq	runtime.newobject
.Ltmp845:
	.loc	7 0 2 is_stmt 0
	movq	%r15, 80(%rsp)
	movq	%r14, 88(%rsp)
	.loc	7 135 20
	testq	%rbp, %rbp
	je	.LBB30_11
.Ltmp846:
	.loc	7 0 20
	movq	%rax, %rbx
.Ltmp847:
	.loc	7 135 20
	movq	32(%rbp), %rsi
	leaq	80(%rsp), %rdx
	.loc	7 135 2
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapaccess2
	movl	%edx, %ebp
.Ltmp848:
	.loc	7 0 2
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm1, 112(%rsp)
	movaps	%xmm2, 128(%rsp)
	.loc	7 135 2
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB30_4
.Ltmp849:
	.loc	7 0 2
	leaq	96(%rsp), %rdx
	.loc	7 135 2
	movl	$command_line_arguments.UserState..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	.loc	7 136 5 is_stmt 1
	testb	%bpl, %bpl
	je	.LBB30_8
.Ltmp850:
.LBB30_9:
	.loc	7 142 19
	addq	$32, %rbx
.Ltmp851:
	.loc	7 142 2 is_stmt 0
	movq	%rbx, (%r12)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r12)
	jmp	.LBB30_10
.Ltmp852:
.LBB30_4:
	.loc	7 135 2 is_stmt 1
	testq	%rbx, %rbx
	je	.LBB30_11
.Ltmp853:
	movaps	96(%rsp), %xmm0
	movaps	112(%rsp), %xmm1
	movaps	128(%rsp), %xmm2
	movups	%xmm2, 32(%rbx)
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
	.loc	7 136 5
	testb	%bpl, %bpl
	jne	.LBB30_9
.Ltmp854:
.LBB30_8:
	.loc	7 138 11
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp855:
	.loc	7 0 11 is_stmt 0
	movq	%r15, 64(%rsp)
	movq	%r14, 72(%rsp)
	leaq	64(%rsp), %rdx
	.loc	7 138 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 48(%rsp)
	movq	%rbx, 56(%rsp)
	leaq	48(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.349, %edi
	movl	$16, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
	.loc	7 137 22 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp856:
	.loc	7 137 3 is_stmt 0
	movq	$0, (%r12)
	movq	%rax, 8(%r12)
	movq	%rdx, 16(%r12)
.Ltmp857:
.LBB30_10:
	.loc	7 0 3
	movq	%r12, %rax
	addq	$144, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp858:
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp859:
	.cfi_def_cfa_offset 8
	retq
.LBB30_11:
	.cfi_def_cfa_offset 192
.Ltmp860:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end30:
	.size	command_line_arguments.WarpState.GetMode, .Lfunc_end30-command_line_arguments.WarpState.GetMode
	.cfi_endproc

	.section	.text.command_line_arguments.WarpState.HostCanReceiveWrite,"ax",@progbits
	.globl	command_line_arguments.WarpState.HostCanReceiveWrite
	.p2align	4, 0x90
	.type	command_line_arguments.WarpState.HostCanReceiveWrite,@function
command_line_arguments.WarpState.HostCanReceiveWrite:
.Lfunc_begin31:
	.loc	7 166 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB31_2
	movq	%r10, %rax
	movabsq	$120, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB31_2:
.Ltmp861:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$104, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
.Ltmp862:
	.loc	7 168 24 prologue_end
	testq	%rdi, %rdi
	je	.LBB31_11
.Ltmp863:
	movq	32(%rdi), %rsi
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm0, (%rsp)
	movq	%rsp, %rdx
	.loc	7 168 2 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
.Ltmp864:
	callq	runtime.mapiterinit
	cmpq	$0, (%rsp)
	je	.LBB31_4
	.loc	7 0 2
	xorl	%ebp, %ebp
	movq	%rsp, %rbx
	.p2align	4, 0x90
.LBB31_10:
.Ltmp865:
	.loc	7 168 2
	movq	8(%rsp), %rax
	.loc	7 169 6 is_stmt 1
	cmpb	$0, 40(%rax)
	jne	.LBB31_9
.Ltmp866:
	.loc	7 169 53 is_stmt 0
	testb	$2, 32(%rax)
	je	.LBB31_9
.Ltmp867:
	.loc	7 0 53
	movb	$1, %bpl
.Ltmp868:
	.p2align	4, 0x90
.LBB31_9:
	.loc	7 168 2 is_stmt 1
	movq	%rbx, %rdi
	callq	runtime.mapiternext
	cmpq	$0, (%rsp)
	jne	.LBB31_10
	jmp	.LBB31_5
.Ltmp869:
.LBB31_4:
	.loc	7 0 2 is_stmt 0
	xorl	%ebp, %ebp
.LBB31_5:
	.loc	7 173 2 is_stmt 1
	movl	%ebp, %eax
.Ltmp870:
	addq	$104, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB31_11:
	.cfi_def_cfa_offset 128
.Ltmp871:
	.loc	7 168 24
	movl	$6, %edi
.Ltmp872:
	callq	__go_runtime_error
.Ltmp873:
.Lfunc_end31:
	.size	command_line_arguments.WarpState.HostCanReceiveWrite, .Lfunc_end31-command_line_arguments.WarpState.HostCanReceiveWrite
	.cfi_endproc

	.section	.text.command_line_arguments.WarpState.Modes,"ax",@progbits
	.globl	command_line_arguments.WarpState.Modes
	.p2align	4, 0x90
	.type	command_line_arguments.WarpState.Modes,@function
command_line_arguments.WarpState.Modes:
.Lfunc_begin32:
	.loc	7 198 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB32_2
	movq	%r10, %rax
	movabsq	$184, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB32_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$152, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
.Ltmp874:
	.loc	7 199 11 prologue_end
	movl	$type..map.6string.7github_com_spolu_warp.Mode, %edi
	xorl	%esi, %esi
	movl	$24, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	xorps	%xmm0, %xmm0
	movaps	%xmm0, (%rsp)
.Ltmp875:
	.loc	7 200 25
	testq	%rbx, %rbx
	je	.LBB32_9
.Ltmp876:
	.loc	7 0 25 is_stmt 0
	movq	%rax, %r15
.Ltmp877:
	.loc	7 200 25
	movq	32(%rbx), %rsi
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
	movaps	%xmm0, 48(%rsp)
	leaq	48(%rsp), %rdx
	.loc	7 200 2
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapiterinit
	movq	48(%rsp), %rax
	testq	%rax, %rax
	je	.LBB32_8
.Ltmp878:
	.loc	7 0 2
	leaq	16(%rsp), %r14
	leaq	48(%rsp), %r12
.Ltmp879:
	.p2align	4, 0x90
.LBB32_7:
	.loc	7 200 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	56(%rsp), %rax
	movq	32(%rax), %rbx
.Ltmp880:
	.loc	7 201 6 is_stmt 1
	cmpb	$0, 40(%rax)
	movaps	%xmm0, (%rsp)
	jne	.LBB32_6
.Ltmp881:
	.loc	7 0 6 is_stmt 0
	movaps	(%rsp), %xmm0
	movaps	%xmm0, 16(%rsp)
	.loc	7 202 17 is_stmt 1
	movl	$type..map.6string.7github_com_spolu_warp.Mode, %edi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	runtime.mapassign
	movq	%rbx, (%rax)
.Ltmp882:
.LBB32_6:
	.loc	7 200 2
	movq	%r12, %rdi
	callq	runtime.mapiternext
	movq	48(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB32_7
.Ltmp883:
.LBB32_8:
	.loc	7 205 2
	movq	%r15, %rax
	addq	$152, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp884:
	.cfi_def_cfa_offset 8
	retq
.LBB32_9:
	.cfi_def_cfa_offset 192
.Ltmp885:
	.loc	7 200 25
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp886:
.Lfunc_end32:
	.size	command_line_arguments.WarpState.Modes, .Lfunc_end32-command_line_arguments.WarpState.Modes
	.cfi_endproc

	.section	.text.command_line_arguments.WarpState.ProtocolState,"ax",@progbits
	.globl	command_line_arguments.WarpState.ProtocolState
	.p2align	4, 0x90
	.type	command_line_arguments.WarpState.ProtocolState,@function
command_line_arguments.WarpState.ProtocolState:
.Lfunc_begin33:
	.loc	7 178 0
	.cfi_startproc
	leaq	-360(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB33_2
	movq	%r10, %rax
	movabsq	$360, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB33_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$312, %rsp
	.cfi_def_cfa_offset 368
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, 8(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
.Ltmp887:
	.loc	7 180 16 prologue_end
	testq	%rsi, %rsi
	je	.LBB33_11
.Ltmp888:
	.loc	7 0 16 is_stmt 0
	movq	%rsi, %r15
.Ltmp889:
	movups	(%rsi), %xmm0
	movaps	%xmm0, 144(%rsp)
	movups	16(%rsi), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	7 182 15 is_stmt 1
	movl	$type..map.6string.7github_com_spolu_warp.User, %edi
	xorl	%esi, %esi
	movl	$64, %edx
	movl	$16, %ecx
	xorl	%r8d, %r8d
	callq	__go_construct_map
	movq	%rax, %rbx
.Ltmp890:
	.loc	7 179 16
	movaps	128(%rsp), %xmm0
	movaps	%xmm0, 160(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 16(%rsp)
.Ltmp891:
	.loc	7 185 28
	movq	32(%r15), %rsi
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 288(%rsp)
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movaps	%xmm0, 240(%rsp)
	movaps	%xmm0, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	leaq	208(%rsp), %rdx
	.loc	7 185 2 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapiterinit
	movq	208(%rsp), %rax
	testq	%rax, %rax
	je	.LBB33_10
.Ltmp892:
	.loc	7 0 2
	leaq	192(%rsp), %rbp
	leaq	32(%rsp), %r14
	leaq	89(%rsp), %r13
	leaq	96(%rsp), %r15
	leaq	208(%rsp), %r12
.Ltmp893:
	.p2align	4, 0x90
.LBB33_7:
	.loc	7 185 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 112(%rsp)
	movq	216(%rsp), %rax
	movq	32(%rax), %rcx
	movzbl	40(%rax), %edx
	movups	(%rax), %xmm1
	movups	16(%rax), %xmm2
	movaps	%xmm2, 32(%rsp)
	movaps	%xmm1, 16(%rsp)
	movaps	%xmm0, 96(%rsp)
.Ltmp894:
	.loc	7 0 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 176(%rsp)
.Ltmp895:
	.loc	7 28 14 is_stmt 1
	movups	(%r14), %xmm0
	movups	%xmm0, (%rbp)
	.loc	7 28 2 is_stmt 0
	movaps	192(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	movaps	176(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	movq	%rcx, 80(%rsp)
	movb	%dl, 88(%rsp)
	movb	$0, 6(%r13)
	movw	$0, 4(%r13)
	movl	$0, (%r13)
.Ltmp896:
	.loc	7 186 22 is_stmt 1
	movl	$type..map.6string.7github_com_spolu_warp.User, %edi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	runtime.mapassign
.Ltmp897:
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB33_8
.Ltmp898:
	movl	$github_com_spolu_warp.User..d, %edi
	movq	%rax, %rsi
	leaq	48(%rsp), %rdx
	callq	runtime.typedmemmove
	jmp	.LBB33_6
.Ltmp899:
	.p2align	4, 0x90
.LBB33_8:
	testq	%rax, %rax
	je	.LBB33_11
.Ltmp900:
	movaps	48(%rsp), %xmm0
	movaps	64(%rsp), %xmm1
	movaps	80(%rsp), %xmm2
	movups	%xmm2, 32(%rax)
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
.Ltmp901:
.LBB33_6:
	.loc	7 185 2
	movq	%r12, %rdi
	callq	runtime.mapiternext
	movq	208(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB33_7
.Ltmp902:
.LBB33_10:
	.loc	7 189 2
	movaps	144(%rsp), %xmm0
	movaps	160(%rsp), %xmm1
	movq	8(%rsp), %rax
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
	movq	%rbx, 32(%rax)
	addq	$312, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp903:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp904:
.LBB33_11:
	.cfi_def_cfa_offset 368
	.loc	7 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end33:
	.size	command_line_arguments.WarpState.ProtocolState, .Lfunc_end33-command_line_arguments.WarpState.ProtocolState
	.cfi_endproc

	.section	.text.command_line_arguments.WarpState.SetMode,"ax",@progbits
	.globl	command_line_arguments.WarpState.SetMode
	.p2align	4, 0x90
	.type	command_line_arguments.WarpState.SetMode,@function
command_line_arguments.WarpState.SetMode:
.Lfunc_begin34:
	.loc	7 146 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB34_2
	movq	%r10, %rax
	movabsq	$232, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB34_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$200, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp905:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 64(%rsp)
	movaps	%xmm0, 48(%rsp)
	movq	%rsi, 128(%rsp)
	movq	%rdx, 136(%rsp)
.Ltmp906:
	.loc	7 150 20 prologue_end
	testq	%rdi, %rdi
	je	.LBB34_11
.Ltmp907:
	.loc	7 0 20 is_stmt 0
	movq	%rcx, %r15
.Ltmp908:
	movq	%rdx, %r14
	movq	%rsi, %r12
.Ltmp909:
	movq	%rdi, %rbx
.Ltmp910:
	.loc	7 150 20
	movq	32(%rdi), %rsi
	leaq	128(%rsp), %rdx
	.loc	7 150 2
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapaccess2
.Ltmp911:
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm1, 64(%rsp)
	.loc	7 151 5 is_stmt 1
	testb	%dl, %dl
	je	.LBB34_4
.Ltmp912:
	.loc	7 150 2
	movq	40(%rax), %rax
.Ltmp913:
	.loc	7 0 2 is_stmt 0
	movq	%r12, 80(%rsp)
	movq	%r14, 88(%rsp)
	movaps	48(%rsp), %xmm0
	movaps	64(%rsp), %xmm1
	movaps	%xmm1, 160(%rsp)
	movaps	%xmm0, 144(%rsp)
	movq	%r15, 176(%rsp)
	movq	%rax, 184(%rsp)
	.loc	7 158 3 is_stmt 1
	movq	32(%rbx), %rsi
	leaq	80(%rsp), %rdx
.Ltmp914:
	.loc	7 158 16 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapassign
.Ltmp915:
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB34_6
	.loc	7 0 16
	leaq	144(%rsp), %rdx
	.loc	7 158 16
	movl	$command_line_arguments.UserState..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB34_9
.LBB34_4:
.Ltmp916:
	.loc	7 153 11 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
.Ltmp917:
	movq	%rax, %rbx
	movq	%r12, 112(%rsp)
	movq	%r14, 120(%rsp)
	leaq	112(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 96(%rsp)
	movq	%rbx, 104(%rsp)
	leaq	96(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.349, %edi
	movl	$16, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
	.loc	7 152 17
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
	jmp	.LBB34_10
.LBB34_6:
	.loc	7 158 16
	testq	%rax, %rax
	je	.LBB34_11
	movaps	144(%rsp), %xmm0
	movaps	160(%rsp), %xmm1
	movaps	176(%rsp), %xmm2
	movups	%xmm2, 32(%rax)
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
.LBB34_9:
.Ltmp918:
	.loc	7 160 2
	xorl	%eax, %eax
	xorl	%edx, %edx
.Ltmp919:
.LBB34_10:
	.loc	7 0 2 is_stmt 0
	addq	$200, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB34_11:
	.cfi_def_cfa_offset 240
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end34:
	.size	command_line_arguments.WarpState.SetMode, .Lfunc_end34-command_line_arguments.WarpState.SetMode
	.cfi_endproc

	.section	.text.command_line_arguments.WarpState.Update,"ax",@progbits
	.globl	command_line_arguments.WarpState.Update
	.p2align	4, 0x90
	.type	command_line_arguments.WarpState.Update,@function
command_line_arguments.WarpState.Update:
.Lfunc_begin35:
	.loc	7 65 0 is_stmt 1
	.cfi_startproc
	leaq	-824(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB35_2
	movq	%r10, %rax
	movabsq	$824, %r10
	movabsq	$40, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB35_2:
.Ltmp920:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$776, %rsp
	.cfi_def_cfa_offset 832
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	7 69 20 prologue_end
	testq	%rdi, %rdi
	je	.LBB35_40
.Ltmp921:
	.loc	7 0 20 is_stmt 0
	movl	%esi, %r14d
.Ltmp922:
	movq	%rdi, %rbx
.Ltmp923:
	leaq	832(%rsp), %rbp
	.loc	7 69 16
	movq	(%rbp), %rdi
	movq	8(%rbp), %rsi
	movq	(%rbx), %rdx
	movq	8(%rbx), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB35_4
.Ltmp924:
	.loc	7 75 15 is_stmt 1
	movups	16(%rbp), %xmm0
	movups	%xmm0, 16(%rbx)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movaps	%xmm0, 48(%rsp)
.Ltmp925:
	.loc	7 77 32
	movq	32(%rbp), %rsi
	movaps	%xmm0, 544(%rsp)
	movaps	%xmm0, 656(%rsp)
	movaps	%xmm0, 640(%rsp)
	movaps	%xmm0, 624(%rsp)
	movaps	%xmm0, 608(%rsp)
	movaps	%xmm0, 592(%rsp)
	movaps	%xmm0, 576(%rsp)
	leaq	576(%rsp), %rdx
	.loc	7 77 2 is_stmt 0
	movl	$type..map.6string.7github_com_spolu_warp.User, %edi
	movq	%rsi, 72(%rsp)
	callq	runtime.mapiterinit
	movq	576(%rsp), %rax
.Ltmp926:
	.loc	7 0 2
	addq	$32, %rbx
.Ltmp927:
	.loc	7 77 2
	testq	%rax, %rax
	je	.LBB35_6
.Ltmp928:
	.loc	7 0 2
	movl	%r14d, %ebp
.Ltmp929:
	.p2align	4, 0x90
.LBB35_38:
	.loc	7 77 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 544(%rsp)
	movq	584(%rsp), %rax
	movq	(%rax), %r12
.Ltmp930:
	movq	8(%rax), %r15
.Ltmp931:
	movq	32(%rax), %r13
.Ltmp932:
	movzbl	40(%rax), %r14d
.Ltmp933:
	.loc	7 0 2
	movaps	%xmm0, 32(%rsp)
	movups	16(%rax), %xmm0
	movaps	%xmm0, 48(%rsp)
	.loc	7 78 12 is_stmt 1
	movq	32(%rsp), %rdi
	movq	40(%rsp), %rsi
	movq	%r12, %rdx
	movq	%r15, %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB35_39
.Ltmp934:
	.loc	7 0 12 is_stmt 0
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 512(%rsp)
.Ltmp935:
	.loc	7 86 16 is_stmt 1
	movq	(%rbx), %rsi
	.loc	7 86 6 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	leaq	512(%rsp), %rdx
	callq	runtime.mapaccess2
.Ltmp936:
	.loc	7 86 31
	testb	%dl, %dl
	je	.LBB35_14
.Ltmp937:
	.loc	7 112 18 is_stmt 1
	movq	(%rbx), %rsi
	.loc	7 112 24 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	leaq	32(%rsp), %rdx
.Ltmp938:
	callq	runtime.mapaccess1
	movups	(%rax), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	40(%rax), %rcx
.Ltmp939:
	.loc	7 113 23 is_stmt 1
	movaps	48(%rsp), %xmm0
	testb	%bpl, %bpl
	je	.LBB35_25
.Ltmp940:
	.loc	7 0 23 is_stmt 0
	movq	32(%rax), %r13
.Ltmp941:
.LBB35_25:
	.loc	7 113 23
	leaq	96(%rsp), %rax
	movups	%xmm0, (%rax)
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 448(%rsp)
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 256(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 272(%rsp)
	movq	%r13, 288(%rsp)
	movq	%rcx, 296(%rsp)
	.loc	7 117 5 is_stmt 1
	movq	(%rbx), %rsi
	.loc	7 117 19 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	leaq	448(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB35_26
.Ltmp942:
	movl	$command_line_arguments.UserState..d, %edi
	movq	%rax, %rsi
	leaq	256(%rsp), %rdx
	jmp	.LBB35_21
.Ltmp943:
	.p2align	4, 0x90
.LBB35_14:
	.loc	7 0 19
	movl	%r14d, %eax
	testb	$1, %bpl
	jne	.LBB35_16
.Ltmp944:
	movl	%ebp, %eax
.Ltmp945:
.LBB35_16:
	.loc	7 89 4 is_stmt 1
	testb	$1, %al
	jne	.LBB35_17
.Ltmp946:
	.loc	7 94 28
	cmpq	$1, %r13
	setne	%al
	testb	$1, %bpl
	jne	.LBB35_30
.Ltmp947:
	.loc	7 0 28 is_stmt 0
	movl	%ebp, %eax
.Ltmp948:
.LBB35_30:
	.loc	7 94 4
	testb	$1, %al
	jne	.LBB35_31
.Ltmp949:
	.loc	7 0 4
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 464(%rsp)
	.loc	7 104 21 is_stmt 1
	movaps	%xmm0, 304(%rsp)
	movaps	48(%rsp), %xmm0
	leaq	320(%rsp), %rax
	movups	%xmm0, (%rax)
	movq	$1, 336(%rsp)
	movb	%r14b, 344(%rsp)
	.loc	7 104 5 is_stmt 0
	movq	(%rbx), %rsi
	.loc	7 104 19
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	leaq	464(%rsp), %rdx
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB35_33
.Ltmp950:
	movl	$command_line_arguments.UserState..d, %edi
	movq	%rax, %rsi
	leaq	304(%rsp), %rdx
.Ltmp951:
.LBB35_21:
	.loc	7 0 19
	callq	runtime.typedmemmove
	jmp	.LBB35_22
.Ltmp952:
	.p2align	4, 0x90
.LBB35_26:
	.loc	7 117 19 is_stmt 1
	testq	%rax, %rax
	je	.LBB35_40
.Ltmp953:
	movaps	256(%rsp), %xmm0
	movaps	272(%rsp), %xmm1
	movaps	288(%rsp), %xmm2
	jmp	.LBB35_35
.Ltmp954:
.LBB35_33:
	.loc	7 104 19
	testq	%rax, %rax
	je	.LBB35_40
.Ltmp955:
	movaps	304(%rsp), %xmm0
	movaps	320(%rsp), %xmm1
	movaps	336(%rsp), %xmm2
.Ltmp956:
.LBB35_35:
	.loc	7 0 19 is_stmt 0
	movups	%xmm2, 32(%rax)
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
.Ltmp957:
.LBB35_22:
	.loc	7 77 2 is_stmt 1
	leaq	576(%rsp), %rdi
	callq	runtime.mapiternext
	movq	576(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB35_38
.Ltmp958:
.LBB35_6:
	.loc	7 0 2 is_stmt 0
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 80(%rsp)
.Ltmp959:
	.loc	7 121 25 is_stmt 1
	movq	(%rbx), %rsi
	movaps	%xmm0, 752(%rsp)
	movaps	%xmm0, 736(%rsp)
	movaps	%xmm0, 720(%rsp)
	movaps	%xmm0, 704(%rsp)
	movaps	%xmm0, 688(%rsp)
	movaps	%xmm0, 672(%rsp)
	leaq	672(%rsp), %rdx
	.loc	7 121 2 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapiterinit
	movq	672(%rsp), %rax
	testq	%rax, %rax
	je	.LBB35_11
	.loc	7 0 2
	leaq	432(%rsp), %r12
	leaq	416(%rsp), %r15
	leaq	672(%rsp), %rbp
	.p2align	4, 0x90
.LBB35_8:
	.loc	7 121 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 80(%rsp)
.Ltmp960:
	.loc	7 0 2
	movups	(%rax), %xmm0
	movaps	%xmm0, 432(%rsp)
.Ltmp961:
	.loc	7 122 6 is_stmt 1
	movl	$type..map.6string.7github_com_spolu_warp.User, %edi
	movq	72(%rsp), %rsi
	movq	%r12, %rdx
	callq	runtime.mapaccess2
.Ltmp962:
	.loc	7 122 35 is_stmt 0
	testb	%dl, %dl
	jne	.LBB35_10
.Ltmp963:
	.loc	7 124 12 is_stmt 1
	movq	(%rbx), %rsi
	movaps	80(%rsp), %xmm0
	movaps	%xmm0, 416(%rsp)
	.loc	7 124 4 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	movq	%r15, %rdx
.Ltmp964:
	callq	runtime.mapdelete
.Ltmp965:
.LBB35_10:
	.loc	7 121 2 is_stmt 1
	movq	%rbp, %rdi
	callq	runtime.mapiternext
	movq	672(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB35_8
.Ltmp966:
.LBB35_11:
	.loc	7 128 2
	xorl	%eax, %eax
	xorl	%edx, %edx
	jmp	.LBB35_12
.LBB35_4:
.Ltmp967:
	.loc	7 71 11
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp968:
	.loc	7 0 11 is_stmt 0
	movups	(%rbp), %xmm0
	movaps	%xmm0, 560(%rsp)
	leaq	560(%rsp), %rdx
	.loc	7 71 11
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 240(%rsp)
	movq	%rbx, 248(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 112(%rsp)
	movq	$1, 120(%rsp)
	movq	$1, 128(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	112(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.333, %edi
	movl	$23, %esi
.Ltmp969:
.LBB35_19:
	.loc	7 0 11
	callq	github_com_spolu_warp_lib_errors.Newf
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.LBB35_12:
	addq	$776, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB35_39:
	.cfi_def_cfa_offset 832
.Ltmp970:
	.loc	7 80 12 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 528(%rsp)
	leaq	528(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp971:
	.loc	7 0 12 is_stmt 0
	movq	%r12, 224(%rsp)
	movq	%r15, 232(%rsp)
	leaq	224(%rsp), %rdx
	.loc	7 80 12
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 384(%rsp)
	movq	%rbx, 392(%rsp)
	movq	$string..d, 400(%rsp)
	movq	%rbp, 408(%rsp)
	leaq	384(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$2, 144(%rsp)
	movq	$2, 152(%rsp)
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.342, %edi
	movl	$29, %esi
	jmp	.LBB35_19
.Ltmp972:
.LBB35_17:
	.loc	7 91 13 is_stmt 1
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 496(%rsp)
	leaq	496(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 208(%rsp)
	movq	%rbx, 216(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	$1, 168(%rsp)
	movq	$1, 176(%rsp)
	movq	176(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	160(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.344, %edi
	jmp	.LBB35_18
.Ltmp973:
.LBB35_31:
	.loc	7 96 13
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	32(%rsp), %xmm0
	movaps	%xmm0, 480(%rsp)
	leaq	480(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movl	$github_com_spolu_warp.Mode..d, %edi
	callq	runtime.newobject
	movq	%r13, (%rax)
	movq	$string..d, 352(%rsp)
	movq	%rbx, 360(%rsp)
	movq	$github_com_spolu_warp.Mode..d, 368(%rsp)
	movq	%rax, 376(%rsp)
	leaq	352(%rsp), %rax
	movq	%rax, 184(%rsp)
	movq	$2, 192(%rsp)
	movq	$2, 200(%rsp)
	movq	200(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	184(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.346, %edi
.Ltmp974:
.LBB35_18:
	.loc	7 0 13 is_stmt 0
	movl	$35, %esi
	jmp	.LBB35_19
.Ltmp975:
.LBB35_40:
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end35:
	.size	command_line_arguments.WarpState.Update, .Lfunc_end35-command_line_arguments.WarpState.Update
	.cfi_endproc

	.section	.text.command_line_arguments.WarpState.WindowSize,"ax",@progbits
	.globl	command_line_arguments.WarpState.WindowSize
	.p2align	4, 0x90
	.type	command_line_arguments.WarpState.WindowSize,@function
command_line_arguments.WarpState.WindowSize:
.Lfunc_begin36:
	.loc	7 193 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB36_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB36_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp976:
	.loc	7 194 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB36_4
.Ltmp977:
	.loc	7 194 2 is_stmt 0
	movq	16(%rdi), %rax
.Ltmp978:
	movq	24(%rdi), %rdx
.Ltmp979:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp980:
.LBB36_4:
	.cfi_def_cfa_offset 16
	.loc	7 194 10
	movl	$6, %edi
.Ltmp981:
	callq	__go_runtime_error
.Ltmp982:
.Lfunc_end36:
	.size	command_line_arguments.WarpState.WindowSize, .Lfunc_end36-command_line_arguments.WarpState.WindowSize
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.UserState..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.UserState..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.UserState..hash,@function
command_line_arguments.command_line_arguments.UserState..hash:
.Lfunc_begin37:
	.loc	1 1 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB37_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB37_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp983:
	.loc	1 1 1 prologue_end
	callq	runtime.strhash
	leaq	16(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	leaq	32(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	addq	$40, %rbx
.Ltmp984:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash8
.Ltmp985:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp986:
.Lfunc_end37:
	.size	command_line_arguments.command_line_arguments.UserState..hash, .Lfunc_end37-command_line_arguments.command_line_arguments.UserState..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.UserState..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.UserState..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.UserState..eq,@function
command_line_arguments.command_line_arguments.UserState..eq:
.Lfunc_begin38:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB38_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB38_2:
.Ltmp987:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp988:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB38_10
.Ltmp989:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp990:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB38_10
.Ltmp991:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp992:
	.loc	1 1 1
	movq	(%rdi), %rdi
	movq	8(%rbx), %rsi
	movq	(%r14), %rdx
	movq	8(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB38_5
.Ltmp993:
	movq	16(%rbx), %rdi
	movq	24(%rbx), %rsi
	movq	16(%r14), %rdx
	movq	24(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB38_5
.Ltmp994:
	movq	32(%rbx), %rax
	cmpq	32(%r14), %rax
	jne	.LBB38_5
.Ltmp995:
	movb	40(%rbx), %al
	cmpb	40(%r14), %al
	sete	%al
	jmp	.LBB38_6
.Ltmp996:
.LBB38_5:
	xorl	%eax, %eax
.Ltmp997:
.LBB38_6:
	.loc	1 0 1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp998:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp999:
	.cfi_def_cfa_offset 8
	retq
.LBB38_10:
	.cfi_def_cfa_offset 32
.Ltmp1000:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp1001:
	callq	__go_runtime_error
.Ltmp1002:
.Lfunc_end38:
	.size	command_line_arguments.command_line_arguments.UserState..eq, .Lfunc_end38-command_line_arguments.command_line_arguments.UserState..eq
	.cfi_endproc

	.section	.text.command_line_arguments.UserState.ProtocolUser,"ax",@progbits
	.globl	command_line_arguments.UserState.ProtocolUser
	.p2align	4, 0x90
	.type	command_line_arguments.UserState.ProtocolUser,@function
command_line_arguments.UserState.ProtocolUser:
.Lfunc_begin39:
	.loc	7 27 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB39_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB39_2:
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movaps	%xmm0, (%rsp)
.Ltmp1003:
	.loc	7 29 14 prologue_end
	testq	%rsi, %rsi
	je	.LBB39_4
.Ltmp1004:
	.loc	7 0 14 is_stmt 0
	movups	(%rsi), %xmm0
	movaps	%xmm0, (%rsp)
	.loc	7 31 14 is_stmt 1
	movq	32(%rsi), %rax
.Ltmp1005:
	.loc	7 32 14
	movb	40(%rsi), %cl
.Ltmp1006:
	.loc	7 28 14
	movups	16(%rsi), %xmm1
	movaps	%xmm1, 16(%rsp)
	.loc	7 28 2 is_stmt 0
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	%rax, 32(%rdi)
	movb	%cl, 40(%rdi)
	movw	$0, 45(%rdi)
	movl	$0, 41(%rdi)
	movb	$0, 47(%rdi)
	movq	%rdi, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1007:
.LBB39_4:
	.cfi_def_cfa_offset 48
	.loc	7 29 14 is_stmt 1
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1008:
.Lfunc_end39:
	.size	command_line_arguments.UserState.ProtocolUser, .Lfunc_end39-command_line_arguments.UserState.ProtocolUser
	.cfi_endproc

	.section	.text.command_line_arguments.NewSession,"ax",@progbits
	.globl	command_line_arguments.NewSession
	.p2align	4, 0x90
	.type	command_line_arguments.NewSession,@function
command_line_arguments.NewSession:
.Lfunc_begin40:
	.loc	6 46 0
	.cfi_startproc
	leaq	-1160(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB40_2
	movq	%r10, %rax
	movabsq	$1160, %r10
	movabsq	$96, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB40_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1112, %rsp
	.cfi_def_cfa_offset 1168
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %r13
	movq	%r8, %r15
	movq	%rcx, %r14
	leaq	1248(%rsp), %rbp
.Ltmp1009:
	.loc	6 55 27 prologue_end
	movq	1248(%rsp), %rax
	testq	%rax, %rax
	movq	%rdi, 120(%rsp)
	je	.LBB40_3
.Ltmp1010:
	movq	(%rax), %rsi
	jmp	.LBB40_4
.Ltmp1011:
.LBB40_3:
	.loc	6 0 27 is_stmt 0
	xorl	%esi, %esi
.Ltmp1012:
.LBB40_4:
	.loc	6 55 27
	movl	$io.ReadWriteCloser..d, %edi
	callq	runtime.requireitab
.Ltmp1013:
	movq	%rax, %rbx
	movq	8(%rbp), %rbp
	.loc	6 55 33
	movl	$github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Config..d, %edi
	callq	runtime.newobject
	movq	%rax, %r12
	.loc	6 55 40
	movq	$256, 696(%rsp)
	movb	$1, 704(%rsp)
	movq	$2000000000, 712(%rsp)
	movabsq	$10000000000, %rax
	movq	%rax, 720(%rsp)
	movl	$262144, 728(%rsp)
	movups	io_ioutil.Discard(%rip), %xmm0
	movups	%xmm0, 736(%rsp)
	leaq	696(%rsp), %rdx
	.loc	6 55 33
	movl	$github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Config..d, %edi
	movq	%r12, %rsi
	callq	runtime.typedmemmove
	leaq	544(%rsp), %rdi
	.loc	6 55 20
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	movq	%r12, %rcx
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Client
	movq	552(%rsp), %rax
.Ltmp1014:
	.loc	6 63 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB40_5
.Ltmp1015:
	.loc	6 55 20
	movq	560(%rsp), %rcx
	.loc	6 65 55
	movq	(%rax), %rax
.Ltmp1016:
	.loc	6 65 11 is_stmt 0
	movq	%rax, 528(%rsp)
	movq	%rcx, 536(%rsp)
	leaq	528(%rsp), %rax
	movq	%rax, 128(%rsp)
	movq	$1, 136(%rsp)
	movq	$1, 144(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	128(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.243, %edi
	movl	$35, %esi
	jmp	.LBB40_11
.Ltmp1017:
.LBB40_5:
	.loc	6 0 11
	leaq	1168(%rsp), %rbp
	movq	544(%rsp), %r12
.Ltmp1018:
	.loc	6 77 16 is_stmt 1
	movl	$sync.Mutex..d, %edi
	callq	runtime.newobject
.Ltmp1019:
	movq	%rax, %rbx
	movq	$0, (%rax)
	.loc	6 69 8
	movl	$command_line_arguments.Session..d, %edi
	callq	runtime.newobject
.Ltmp1020:
	.loc	6 69 9 is_stmt 0
	movups	(%rbp), %xmm0
	movups	16(%rbp), %xmm1
	movups	32(%rbp), %xmm2
	movaps	%xmm1, 768(%rsp)
	movaps	%xmm0, 752(%rsp)
	movaps	%xmm2, 784(%rsp)
	movq	%r14, 800(%rsp)
	movq	%r15, 808(%rsp)
	movq	%rax, %r15
.Ltmp1021:
	leaq	1216(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 816(%rsp)
	leaq	1232(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 832(%rsp)
	leaq	1248(%rsp), %rax
	movups	(%rax), %xmm0
	movaps	%xmm0, 848(%rsp)
	movq	%r12, 864(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 952(%rsp)
	movups	%xmm0, 936(%rsp)
	movups	%xmm0, 920(%rsp)
	movups	%xmm0, 904(%rsp)
	movups	%xmm0, 888(%rsp)
	movups	%xmm0, 872(%rsp)
	movb	$0, 968(%rsp)
	movq	%r13, 976(%rsp)
	movq	%rbx, 984(%rsp)
	leaq	752(%rsp), %rdx
	.loc	6 69 8
	movl	$command_line_arguments.Session..d, %edi
	movq	%r15, %rsi
	callq	runtime.typedmemmove
	leaq	664(%rsp), %rdi
.Ltmp1022:
	.loc	6 81 22 is_stmt 1
	movq	%r12, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open
.Ltmp1023:
	movq	680(%rsp), %rbp
.Ltmp1024:
	movq	688(%rsp), %rbx
	movups	664(%rsp), %xmm0
	movaps	%xmm0, 320(%rsp)
	.loc	6 81 4 is_stmt 0
	testq	%r15, %r15
	je	.LBB40_53
.Ltmp1025:
	leaq	120(%r15), %rsi
	.loc	6 81 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_54
.Ltmp1026:
	.loc	6 0 17
	leaq	320(%rsp), %rdx
	.loc	6 81 17
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	6 82 9 is_stmt 1
	testq	%rbp, %rbp
	je	.LBB40_12
.Ltmp1027:
.LBB40_9:
	.loc	6 83 5
	movq	%r15, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	6 85 48
	movq	(%rbp), %rax
	.loc	6 85 11 is_stmt 0
	movq	%rax, 512(%rsp)
	movq	%rbx, 520(%rsp)
	leaq	512(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$1, 160(%rsp)
	movq	$1, 168(%rsp)
	movq	168(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.247, %edi
.Ltmp1028:
.LBB40_10:
	.loc	6 0 11
	movl	$28, %esi
	jmp	.LBB40_11
.Ltmp1029:
.LBB40_54:
	.loc	6 81 17 is_stmt 1
	movaps	320(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	6 82 9
	testq	%rbp, %rbp
	jne	.LBB40_9
.Ltmp1030:
.LBB40_12:
	.loc	6 0 9 is_stmt 0
	movq	120(%r15), %rax
	movq	128(%r15), %rbx
	.loc	6 88 31 is_stmt 1
	testq	%rax, %rax
	je	.LBB40_13
.Ltmp1031:
	movq	(%rax), %rsi
	jmp	.LBB40_14
.Ltmp1032:
.LBB40_13:
	.loc	6 0 31 is_stmt 0
	xorl	%esi, %esi
.Ltmp1033:
.LBB40_14:
	.loc	6 88 31
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
	.loc	6 88 18
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	encoding_gob.NewDecoder
	.loc	6 88 4
	leaq	136(%r15), %rdi
	.loc	6 88 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_21
.Ltmp1034:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB40_16
.Ltmp1035:
.LBB40_21:
	movq	%rax, (%rdi)
.Ltmp1036:
.LBB40_16:
	.loc	6 0 12
	leaq	632(%rsp), %rdi
.Ltmp1037:
	.loc	6 91 23 is_stmt 1
	movq	%r12, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open
.Ltmp1038:
	movq	648(%rsp), %rbp
.Ltmp1039:
	movq	656(%rsp), %rbx
	movups	632(%rsp), %xmm0
	movaps	%xmm0, 304(%rsp)
	.loc	6 91 4 is_stmt 0
	leaq	144(%r15), %rsi
	.loc	6 91 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_22
.Ltmp1040:
	.loc	6 0 18
	leaq	304(%rsp), %rdx
	.loc	6 91 18
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	6 92 9 is_stmt 1
	testq	%rbp, %rbp
	je	.LBB40_23
.Ltmp1041:
.LBB40_19:
	.loc	6 93 5
	movq	%r15, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	6 95 49
	movq	(%rbp), %rax
	.loc	6 95 11 is_stmt 0
	movq	%rax, 496(%rsp)
	movq	%rbx, 504(%rsp)
	leaq	496(%rsp), %rax
	movq	%rax, 176(%rsp)
	movq	$1, 184(%rsp)
	movq	$1, 192(%rsp)
	movq	192(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	176(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.249, %edi
	movl	$29, %esi
	jmp	.LBB40_11
.Ltmp1042:
.LBB40_22:
	.loc	6 91 18 is_stmt 1
	movaps	304(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	6 92 9
	testq	%rbp, %rbp
	jne	.LBB40_19
.Ltmp1043:
.LBB40_23:
	.loc	6 0 9 is_stmt 0
	movq	144(%r15), %rax
	movq	152(%r15), %rbx
	.loc	6 98 32 is_stmt 1
	testq	%rax, %rax
	je	.LBB40_24
.Ltmp1044:
	movq	(%rax), %rsi
	jmp	.LBB40_25
.Ltmp1045:
.LBB40_24:
	.loc	6 0 32 is_stmt 0
	xorl	%esi, %esi
.Ltmp1046:
.LBB40_25:
	.loc	6 98 32
	movl	$io.Writer..d, %edi
	callq	runtime.requireitab
	.loc	6 98 19
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	encoding_gob.NewEncoder
	movq	%rax, %r14
.Ltmp1047:
	.loc	6 98 4
	leaq	160(%r15), %rbx
	.loc	6 98 13
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_27
.Ltmp1048:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.writebarrierptr
.Ltmp1049:
	.loc	6 108 14 is_stmt 1
	movq	(%rbx), %r14
	jmp	.LBB40_28
.Ltmp1050:
.LBB40_27:
	.loc	6 98 13
	movq	%r14, (%rbx)
.Ltmp1051:
.LBB40_28:
	.loc	6 0 13 is_stmt 0
	movups	48(%r15), %xmm0
	movaps	%xmm0, 336(%rsp)
	.loc	6 101 16 is_stmt 1
	movups	(%r15), %xmm0
	movups	16(%r15), %xmm1
	movups	32(%r15), %xmm2
	movaps	%xmm2, 384(%rsp)
	movaps	%xmm1, 368(%rsp)
	movaps	%xmm0, 352(%rsp)
	movups	github_com_spolu_warp.Version(%rip), %xmm0
	movaps	%xmm0, 400(%rsp)
	movups	64(%r15), %xmm0
	movaps	%xmm0, 416(%rsp)
	movups	80(%r15), %xmm0
	movaps	%xmm0, 432(%rsp)
.Ltmp1052:
	.loc	6 108 30
	movl	$github_com_spolu_warp.SessionHello..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movaps	336(%rsp), %xmm0
	movaps	352(%rsp), %xmm1
	movaps	368(%rsp), %xmm2
	movaps	384(%rsp), %xmm3
	movaps	%xmm0, 992(%rsp)
	movaps	%xmm1, 1008(%rsp)
	movaps	%xmm2, 1024(%rsp)
	movaps	%xmm3, 1040(%rsp)
	movaps	400(%rsp), %xmm0
	movaps	%xmm0, 1056(%rsp)
	movaps	416(%rsp), %xmm0
	movaps	%xmm0, 1072(%rsp)
	movaps	432(%rsp), %xmm0
	movaps	%xmm0, 1088(%rsp)
	leaq	992(%rsp), %rdx
	movl	$github_com_spolu_warp.SessionHello..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	6 108 22 is_stmt 0
	movl	$github_com_spolu_warp.SessionHello..d, %esi
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	encoding_gob.Encoder.Encode
	.loc	6 108 42
	testq	%rax, %rax
	je	.LBB40_33
.Ltmp1053:
	.loc	6 0 42
	movq	%rax, %rbx
.Ltmp1054:
	movq	%rdx, %r14
.Ltmp1055:
	.loc	6 109 5 is_stmt 1
	movq	%r15, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	6 111 40
	movq	(%rbx), %rax
	.loc	6 111 11 is_stmt 0
	movq	%rax, 480(%rsp)
	movq	%r14, 488(%rsp)
	leaq	480(%rsp), %rax
	movq	%rax, 200(%rsp)
	movq	$1, 208(%rsp)
	movq	$1, 216(%rsp)
	movq	216(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	200(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.251, %edi
	movl	$20, %esi
.Ltmp1056:
.LBB40_11:
	.loc	6 0 11
	callq	github_com_spolu_warp_lib_errors.Newf
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp1057:
	movq	120(%rsp), %rcx
	movq	$0, (%rcx)
	movq	%rax, 8(%rcx)
	movq	%rdx, 16(%rcx)
	movq	%rcx, %rax
.Ltmp1058:
.LBB40_48:
	addq	$1112, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1059:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB40_33:
	.cfi_def_cfa_offset 1168
.Ltmp1060:
	leaq	600(%rsp), %rdi
.Ltmp1061:
	.loc	6 116 22 is_stmt 1
	movq	%r12, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open
.Ltmp1062:
	movq	616(%rsp), %rbp
.Ltmp1063:
	movq	624(%rsp), %rbx
	movups	600(%rsp), %xmm0
	movaps	%xmm0, 288(%rsp)
	.loc	6 116 4 is_stmt 0
	leaq	168(%r15), %rsi
	.loc	6 116 17
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_34
.Ltmp1064:
	.loc	6 0 17
	leaq	288(%rsp), %rdx
	.loc	6 116 17
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	6 117 9 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB40_32
	jmp	.LBB40_35
.Ltmp1065:
.LBB40_34:
	.loc	6 116 17
	movaps	288(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	6 117 9
	testq	%rbp, %rbp
	je	.LBB40_35
.Ltmp1066:
.LBB40_32:
	.loc	6 118 5
	movq	%r15, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	6 120 48
	movq	(%rbp), %rax
	.loc	6 120 11 is_stmt 0
	movq	%rax, 464(%rsp)
	movq	%rbx, 472(%rsp)
	leaq	464(%rsp), %rax
	movq	%rax, 224(%rsp)
	movq	$1, 232(%rsp)
	movq	$1, 240(%rsp)
	movq	240(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	224(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.253, %edi
	jmp	.LBB40_10
.Ltmp1067:
.LBB40_35:
	.loc	6 0 11
	movq	168(%r15), %rax
	movq	176(%r15), %rbx
	.loc	6 123 31 is_stmt 1
	testq	%rax, %rax
	je	.LBB40_36
.Ltmp1068:
	movq	(%rax), %rsi
	jmp	.LBB40_37
.Ltmp1069:
.LBB40_36:
	.loc	6 0 31 is_stmt 0
	xorl	%esi, %esi
.Ltmp1070:
.LBB40_37:
	.loc	6 123 31
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
	.loc	6 123 18
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	encoding_gob.NewDecoder
	.loc	6 123 4
	leaq	184(%r15), %rdi
	.loc	6 123 12
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_44
.Ltmp1071:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB40_39
.Ltmp1072:
.LBB40_44:
	movq	%rax, (%rdi)
.Ltmp1073:
.LBB40_39:
	.loc	6 0 12
	leaq	568(%rsp), %rdi
.Ltmp1074:
	.loc	6 126 21 is_stmt 1
	movq	%r12, %rsi
	callq	github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session.Open
.Ltmp1075:
	movq	584(%rsp), %rbp
.Ltmp1076:
	movq	592(%rsp), %rbx
	movups	568(%rsp), %xmm0
	movaps	%xmm0, 272(%rsp)
	.loc	6 126 4 is_stmt 0
	leaq	192(%r15), %rsi
	.loc	6 126 16
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_45
.Ltmp1077:
	.loc	6 0 16
	leaq	272(%rsp), %rdx
	.loc	6 126 16
	movl	$net.Conn..d, %edi
	callq	runtime.typedmemmove
	.loc	6 127 9 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB40_42
	jmp	.LBB40_49
.Ltmp1078:
.LBB40_45:
	.loc	6 126 16
	movaps	272(%rsp), %xmm0
	movups	%xmm0, (%rsi)
	.loc	6 127 9
	testq	%rbp, %rbp
	je	.LBB40_49
.Ltmp1079:
.LBB40_42:
	.loc	6 128 5
	movq	%r15, %rdi
	callq	command_line_arguments.Session.TearDown
	.loc	6 130 47
	movq	(%rbp), %rax
	.loc	6 130 11 is_stmt 0
	movq	%rax, 448(%rsp)
	movq	%rbx, 456(%rsp)
	leaq	448(%rsp), %rax
	movq	%rax, 248(%rsp)
	movq	$1, 256(%rsp)
	movq	$1, 264(%rsp)
	movq	264(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	248(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.255, %edi
	movl	$27, %esi
	jmp	.LBB40_11
.Ltmp1080:
.LBB40_49:
	.loc	6 135 13 is_stmt 1
	movaps	432(%rsp), %xmm0
	movups	%xmm0, 96(%rsp)
	movaps	416(%rsp), %xmm0
	movups	%xmm0, 80(%rsp)
	movaps	400(%rsp), %xmm0
	movups	%xmm0, 64(%rsp)
	movaps	336(%rsp), %xmm0
	movaps	352(%rsp), %xmm1
	movaps	368(%rsp), %xmm2
	movaps	384(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.NewWarpState
	.loc	6 135 4 is_stmt 0
	movq	%r15, %rdi
	addq	$208, %rdi
	.loc	6 135 11
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB40_50
.Ltmp1081:
	movq	%rax, %rsi
	callq	runtime.writebarrierptr
	jmp	.LBB40_47
.Ltmp1082:
.LBB40_50:
	movq	%rax, (%rdi)
.Ltmp1083:
.LBB40_47:
	.loc	6 0 11
	movq	120(%rsp), %rax
.Ltmp1084:
	.loc	6 137 2 is_stmt 1
	movq	%r15, (%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rax)
	jmp	.LBB40_48
.Ltmp1085:
.LBB40_53:
	.loc	6 81 4
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1086:
.Lfunc_end40:
	.size	command_line_arguments.NewSession, .Lfunc_end40-command_line_arguments.NewSession
	.cfi_endproc

	.section	.text.command_line_arguments.NewWarpState,"ax",@progbits
	.globl	command_line_arguments.NewWarpState
	.p2align	4, 0x90
	.type	command_line_arguments.NewWarpState,@function
command_line_arguments.NewWarpState:
.Lfunc_begin41:
	.loc	7 37 0
	.cfi_startproc
	leaq	-296(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB41_2
	movq	%r10, %rax
	movabsq	$296, %r10
	movabsq	$112, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB41_2:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$280, %rsp
	.cfi_def_cfa_offset 304
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movaps	336(%rsp), %xmm0
.Ltmp1087:
	.loc	7 43 21 prologue_end
	movaps	400(%rsp), %xmm1
	movaps	%xmm0, 192(%rsp)
	movaps	%xmm1, 208(%rsp)
	.loc	7 42 10
	movaps	%xmm0, 224(%rsp)
	movaps	%xmm0, 240(%rsp)
	movaps	%xmm1, 256(%rsp)
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 144(%rsp)
	movaps	%xmm1, 160(%rsp)
	movq	$1, 176(%rsp)
	movb	$0, 184(%rsp)
	leaq	128(%rsp), %r8
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	movl	$1, %esi
	movl	$64, %edx
	movl	$16, %ecx
	callq	__go_construct_map
	movq	%rax, %rbx
	.loc	7 40 7
	movl	$command_line_arguments.WarpState..d, %edi
	callq	runtime.newobject
	movq	%rax, %r14
.Ltmp1088:
	.loc	7 40 8 is_stmt 0
	movaps	304(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	%rbx, 112(%rsp)
	leaq	80(%rsp), %rdx
	.loc	7 40 7
	movl	$command_line_arguments.WarpState..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	7 51 16 is_stmt 1
	movq	384(%rsp), %rdi
	movq	392(%rsp), %rsi
	movl	$.Lconst.331, %edx
	movl	$4, %ecx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB41_8
.Ltmp1089:
	.loc	7 0 16 is_stmt 0
	leaq	336(%rsp), %rbx
	movups	(%rbx), %xmm0
	movaps	%xmm0, 64(%rsp)
.Ltmp1090:
	.loc	7 52 17 is_stmt 1
	testq	%r14, %r14
	je	.LBB41_9
.Ltmp1091:
	movq	32(%r14), %rsi
	leaq	64(%rsp), %rdx
	.loc	7 52 23 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapaccess1
.Ltmp1092:
	.loc	7 0 23
	movups	(%rbx), %xmm0
	movaps	%xmm0, 48(%rsp)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movaps	%xmm1, 16(%rsp)
	movaps	%xmm0, (%rsp)
	movq	$3, 32(%rsp)
	movb	$1, 40(%rsp)
	movl	41(%rax), %ecx
	movzwl	45(%rax), %edx
	movb	47(%rax), %al
.Ltmp1093:
	movb	%al, 47(%rsp)
	movw	%dx, 45(%rsp)
	movl	%ecx, 41(%rsp)
	.loc	7 55 4 is_stmt 1
	movq	32(%r14), %rsi
	leaq	48(%rsp), %rdx
	.loc	7 55 28 is_stmt 0
	movl	$type..map.6string.7command_line_arguments.UserState, %edi
	callq	runtime.mapassign
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB41_5
.Ltmp1094:
	.loc	7 0 28
	movq	%rsp, %rdx
	.loc	7 55 28
	movl	$command_line_arguments.UserState..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB41_8
.Ltmp1095:
.LBB41_5:
	testq	%rax, %rax
	je	.LBB41_9
.Ltmp1096:
	movaps	(%rsp), %xmm0
	movaps	16(%rsp), %xmm1
	movaps	32(%rsp), %xmm2
	movups	%xmm2, 32(%rax)
	movups	%xmm1, 16(%rax)
	movups	%xmm0, (%rax)
.Ltmp1097:
.LBB41_8:
	.loc	7 57 2 is_stmt 1
	movq	%r14, %rax
	addq	$280, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp1098:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1099:
.LBB41_9:
	.cfi_def_cfa_offset 304
	.loc	7 0 2 is_stmt 0
	movl	$6, %edi
	callq	__go_runtime_error
.Lfunc_end41:
	.size	command_line_arguments.NewWarpState, .Lfunc_end41-command_line_arguments.NewWarpState
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk1,@function
command_line_arguments.command_line_arguments..thunk1:
.Lfunc_begin42:
	.loc	6 147 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB42_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB42_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1100:
	.loc	6 147 2 prologue_end
	movl	$.Ltmp1101, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB42_4
.Ltmp1102:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1103:
.Ltmp1101:
.LBB42_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1104:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1105:
.Lfunc_end42:
	.size	command_line_arguments.command_line_arguments..thunk1, .Lfunc_end42-command_line_arguments.command_line_arguments..thunk1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk2,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk2,@function
command_line_arguments.command_line_arguments..thunk2:
.Lfunc_begin43:
	.loc	6 157 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB43_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB43_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1106:
	.loc	6 157 2 prologue_end
	movl	$.Ltmp1107, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB43_4
.Ltmp1108:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1109:
.Ltmp1107:
.LBB43_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1110:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1111:
.Lfunc_end43:
	.size	command_line_arguments.command_line_arguments..thunk2, .Lfunc_end43-command_line_arguments.command_line_arguments..thunk2
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk3,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk3,@function
command_line_arguments.command_line_arguments..thunk3:
.Lfunc_begin44:
	.loc	6 166 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB44_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB44_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1112:
	.loc	6 166 2 prologue_end
	movl	$.Ltmp1113, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB44_4
.Ltmp1114:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1115:
.Ltmp1113:
.LBB44_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1116:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1117:
.Lfunc_end44:
	.size	command_line_arguments.command_line_arguments..thunk3, .Lfunc_end44-command_line_arguments.command_line_arguments..thunk3
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk4,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk4,@function
command_line_arguments.command_line_arguments..thunk4:
.Lfunc_begin45:
	.loc	6 173 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB45_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB45_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1118:
	.loc	6 173 2 prologue_end
	movl	$.Ltmp1119, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB45_4
.Ltmp1120:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1121:
.Ltmp1119:
.LBB45_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1122:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1123:
.Lfunc_end45:
	.size	command_line_arguments.command_line_arguments..thunk4, .Lfunc_end45-command_line_arguments.command_line_arguments..thunk4
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk5,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk5,@function
command_line_arguments.command_line_arguments..thunk5:
.Lfunc_begin46:
	.loc	6 180 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB46_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB46_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1124:
	.loc	6 180 2 prologue_end
	movl	$.Ltmp1125, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB46_4
.Ltmp1126:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1127:
.Ltmp1125:
.LBB46_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1128:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1129:
.Lfunc_end46:
	.size	command_line_arguments.command_line_arguments..thunk5, .Lfunc_end46-command_line_arguments.command_line_arguments..thunk5
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk6,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk6,@function
command_line_arguments.command_line_arguments..thunk6:
.Lfunc_begin47:
	.loc	6 189 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB47_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB47_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1130:
	.loc	6 189 2 prologue_end
	movl	$.Ltmp1131, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB47_4
.Ltmp1132:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1133:
.Ltmp1131:
.LBB47_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1134:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1135:
.Lfunc_end47:
	.size	command_line_arguments.command_line_arguments..thunk6, .Lfunc_end47-command_line_arguments.command_line_arguments..thunk6
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk7,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk7,@function
command_line_arguments.command_line_arguments..thunk7:
.Lfunc_begin48:
	.loc	6 199 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB48_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB48_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1136:
	.loc	6 199 2 prologue_end
	movl	$.Ltmp1137, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB48_4
.Ltmp1138:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1139:
.Ltmp1137:
.LBB48_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1140:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1141:
.Lfunc_end48:
	.size	command_line_arguments.command_line_arguments..thunk7, .Lfunc_end48-command_line_arguments.command_line_arguments..thunk7
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk8,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk8,@function
command_line_arguments.command_line_arguments..thunk8:
.Lfunc_begin49:
	.loc	6 209 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB49_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB49_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1142:
	.loc	6 209 2 prologue_end
	movl	$.Ltmp1143, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB49_4
.Ltmp1144:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1145:
.Ltmp1143:
.LBB49_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1146:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1147:
.Lfunc_end49:
	.size	command_line_arguments.command_line_arguments..thunk8, .Lfunc_end49-command_line_arguments.command_line_arguments..thunk8
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk9,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk9,@function
command_line_arguments.command_line_arguments..thunk9:
.Lfunc_begin50:
	.loc	6 217 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB50_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB50_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1148:
	.loc	6 217 2 prologue_end
	movl	$.Ltmp1149, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB50_4
.Ltmp1150:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1151:
.Ltmp1149:
.LBB50_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1152:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1153:
.Lfunc_end50:
	.size	command_line_arguments.command_line_arguments..thunk9, .Lfunc_end50-command_line_arguments.command_line_arguments..thunk9
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk10,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk10,@function
command_line_arguments.command_line_arguments..thunk10:
.Lfunc_begin51:
	.loc	6 224 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB51_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB51_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1154:
	.loc	6 224 2 prologue_end
	movl	$.Ltmp1155, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB51_4
.Ltmp1156:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1157:
.Ltmp1155:
.LBB51_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1158:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1159:
.Lfunc_end51:
	.size	command_line_arguments.command_line_arguments..thunk10, .Lfunc_end51-command_line_arguments.command_line_arguments..thunk10
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk11,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk11,@function
command_line_arguments.command_line_arguments..thunk11:
.Lfunc_begin52:
	.loc	6 231 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB52_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB52_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1160:
	.loc	6 231 2 prologue_end
	movl	$.Ltmp1161, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB52_4
.Ltmp1162:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1163:
.Ltmp1161:
.LBB52_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1164:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1165:
.Lfunc_end52:
	.size	command_line_arguments.command_line_arguments..thunk11, .Lfunc_end52-command_line_arguments.command_line_arguments..thunk11
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk12,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk12,@function
command_line_arguments.command_line_arguments..thunk12:
.Lfunc_begin53:
	.loc	6 238 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB53_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB53_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1166:
	.loc	6 238 2 prologue_end
	movl	$.Ltmp1167, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB53_4
.Ltmp1168:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1169:
.Ltmp1167:
.LBB53_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1170:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1171:
.Lfunc_end53:
	.size	command_line_arguments.command_line_arguments..thunk12, .Lfunc_end53-command_line_arguments.command_line_arguments..thunk12
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk13,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk13,@function
command_line_arguments.command_line_arguments..thunk13:
.Lfunc_begin54:
	.loc	6 245 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB54_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB54_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1172:
	.loc	6 245 2 prologue_end
	movl	$.Ltmp1173, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB54_4
.Ltmp1174:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1175:
.Ltmp1173:
.LBB54_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1176:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1177:
.Lfunc_end54:
	.size	command_line_arguments.command_line_arguments..thunk13, .Lfunc_end54-command_line_arguments.command_line_arguments..thunk13
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk14,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk14,@function
command_line_arguments.command_line_arguments..thunk14:
.Lfunc_begin55:
	.loc	6 260 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB55_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB55_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1178:
	.loc	6 260 2 prologue_end
	movl	$.Ltmp1179, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB55_4
.Ltmp1180:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1181:
.Ltmp1179:
.LBB55_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1182:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1183:
.Lfunc_end55:
	.size	command_line_arguments.command_line_arguments..thunk14, .Lfunc_end55-command_line_arguments.command_line_arguments..thunk14
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Shell..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Shell..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Shell..hash,@function
command_line_arguments.command_line_arguments.Shell..hash:
.Lfunc_begin56:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB56_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB56_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1184:
	.loc	1 1 1 prologue_end
	callq	runtime.strhash
.Ltmp1185:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1186:
.Lfunc_end56:
	.size	command_line_arguments.command_line_arguments.Shell..hash, .Lfunc_end56-command_line_arguments.command_line_arguments.Shell..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Shell..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Shell..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Shell..eq,@function
command_line_arguments.command_line_arguments.Shell..eq:
.Lfunc_begin57:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB57_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB57_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1187:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB57_5
.Ltmp1188:
	testq	%rsi, %rsi
	je	.LBB57_5
.Ltmp1189:
	movq	(%rdi), %rax
	movq	8(%rdi), %r8
	movq	(%rsi), %rdx
	movq	8(%rsi), %rcx
	movq	%rax, %rdi
.Ltmp1190:
	movq	%r8, %rsi
.Ltmp1191:
	callq	runtime.eqstring
	cmpb	$1, %al
	sete	%al
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB57_5:
	.cfi_def_cfa_offset 16
.Ltmp1192:
	movl	$6, %edi
.Ltmp1193:
	callq	__go_runtime_error
.Ltmp1194:
.Lfunc_end57:
	.size	command_line_arguments.command_line_arguments.Shell..eq, .Lfunc_end57-command_line_arguments.command_line_arguments.Shell..eq
	.cfi_endproc

	.section	.text.command_line_arguments.DetectShell,"ax",@progbits
	.globl	command_line_arguments.DetectShell
	.p2align	4, 0x90
	.type	command_line_arguments.DetectShell,@function
command_line_arguments.DetectShell:
.Lfunc_begin58:
	.file	8 "./shell.go"
	.loc	8 28 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB58_2
	movq	%r10, %rax
	movabsq	$56, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB58_2:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
.Ltmp1195:
	.loc	8 22 8 prologue_end
	movl	$.Lconst.266, %edi
	movl	$5, %esi
	callq	os.Getenv
.Ltmp1196:
	movq	%rdx, %rsi
	.loc	8 22 24 is_stmt 0
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	movq	%rax, %rdi
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB58_4
	.loc	8 0 24
	movl	$.Lconst.268, %r15d
	movl	$9, %r12d
	jmp	.LBB58_5
.LBB58_4:
	.loc	8 23 13 is_stmt 1
	movl	$.Lconst.266, %edi
	movl	$5, %esi
	callq	os.Getenv
	movq	%rax, %r15
.Ltmp1197:
	movq	%rdx, %r12
.Ltmp1198:
.LBB58_5:
	.loc	8 36 2
	movl	$command_line_arguments.Shell..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
.Ltmp1199:
	.loc	8 36 11 is_stmt 0
	movq	%r15, 8(%rsp)
	movq	%r12, 16(%rsp)
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB58_6
.Ltmp1200:
	.loc	8 0 11
	leaq	8(%rsp), %rdx
	.loc	8 36 11
	movl	$command_line_arguments.Shell..d, %edi
	movq	%rbx, %rsi
	callq	runtime.typedmemmove
	jmp	.LBB58_9
.Ltmp1201:
.LBB58_6:
	testq	%rbx, %rbx
	je	.LBB58_7
.Ltmp1202:
	movups	8(%rsp), %xmm0
	movups	%xmm0, (%rbx)
.Ltmp1203:
.LBB58_9:
	.loc	8 40 2 is_stmt 1
	movq	%rbx, (%r14)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r14)
	movq	%r14, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp1204:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB58_7:
	.cfi_def_cfa_offset 64
.Ltmp1205:
	.loc	8 36 11
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1206:
.Lfunc_end58:
	.size	command_line_arguments.DetectShell, .Lfunc_end58-command_line_arguments.DetectShell
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Srv..hash,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Srv..hash
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Srv..hash,@function
command_line_arguments.command_line_arguments.Srv..hash:
.Lfunc_begin59:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB59_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB59_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1207:
	.loc	1 1 1 prologue_end
	callq	runtime.strhash
	leaq	16(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
	leaq	24(%rbx), %rdi
	movq	%rax, %rsi
	callq	runtime.strhash
	addq	$40, %rbx
.Ltmp1208:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	runtime.memhash64
.Ltmp1209:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1210:
.Lfunc_end59:
	.size	command_line_arguments.command_line_arguments.Srv..hash, .Lfunc_end59-command_line_arguments.command_line_arguments.Srv..hash
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments.Srv..eq,"ax",@progbits
	.globl	command_line_arguments.command_line_arguments.Srv..eq
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments.Srv..eq,@function
command_line_arguments.command_line_arguments.Srv..eq:
.Lfunc_begin60:
	.loc	1 1 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB60_2
	movq	%r10, %rax
	movabsq	$24, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB60_2:
.Ltmp1211:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
.Ltmp1212:
	.loc	1 1 1 prologue_end
	testq	%rdi, %rdi
	je	.LBB60_10
.Ltmp1213:
	.loc	1 0 1 is_stmt 0
	movq	%rsi, %r14
.Ltmp1214:
	.loc	1 1 1
	testq	%rsi, %rsi
	je	.LBB60_10
.Ltmp1215:
	.loc	1 0 1
	movq	%rdi, %rbx
.Ltmp1216:
	.loc	1 1 1
	movq	(%rdi), %rdi
	movq	8(%rbx), %rsi
	movq	(%r14), %rdx
	movq	8(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB60_5
.Ltmp1217:
	movq	16(%rbx), %rax
	cmpq	16(%r14), %rax
	jne	.LBB60_5
.Ltmp1218:
	movq	24(%rbx), %rdi
	movq	32(%rbx), %rsi
	movq	24(%r14), %rdx
	movq	32(%r14), %rcx
	callq	runtime.eqstring
	cmpb	$1, %al
	jne	.LBB60_5
.Ltmp1219:
	movq	40(%rbx), %rax
	cmpq	40(%r14), %rax
	sete	%al
	jmp	.LBB60_6
.Ltmp1220:
.LBB60_5:
	xorl	%eax, %eax
.Ltmp1221:
.LBB60_6:
	.loc	1 0 1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp1222:
	.cfi_def_cfa_offset 16
	popq	%r14
.Ltmp1223:
	.cfi_def_cfa_offset 8
	retq
.LBB60_10:
	.cfi_def_cfa_offset 32
.Ltmp1224:
	.loc	1 1 1
	movl	$6, %edi
.Ltmp1225:
	callq	__go_runtime_error
.Ltmp1226:
.Lfunc_end60:
	.size	command_line_arguments.command_line_arguments.Srv..eq, .Lfunc_end60-command_line_arguments.command_line_arguments.Srv..eq
	.cfi_endproc

	.section	.text.command_line_arguments.Srv.Path,"ax",@progbits
	.globl	command_line_arguments.Srv.Path
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.Path,@function
command_line_arguments.Srv.Path:
.Lfunc_begin61:
	.file	9 "./srv.go"
	.loc	9 25 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB61_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB61_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1227:
	.loc	9 26 10 prologue_end
	testq	%rdi, %rdi
	je	.LBB61_4
.Ltmp1228:
	.loc	9 26 2 is_stmt 0
	movq	24(%rdi), %rax
.Ltmp1229:
	movq	32(%rdi), %rdx
.Ltmp1230:
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Ltmp1231:
.LBB61_4:
	.cfi_def_cfa_offset 16
	.loc	9 26 10
	movl	$6, %edi
.Ltmp1232:
	callq	__go_runtime_error
.Ltmp1233:
.Lfunc_end61:
	.size	command_line_arguments.Srv.Path, .Lfunc_end61-command_line_arguments.Srv.Path
	.cfi_endproc

	.section	.text.command_line_arguments.Srv.Run,"ax",@progbits
	.globl	command_line_arguments.Srv.Run
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.Run,@function
command_line_arguments.Srv.Run:
.Lfunc_begin62:
	.loc	9 59 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception15
	cmpq	%fs:112, %rsp
	ja	.LBB62_2
	movq	%r10, %rax
	movabsq	$248, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB62_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$200, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %rbp
	movq	%rdi, %rbx
	movb	$0, 15(%rsp)
.Ltmp1234:
.Ltmp1282:
	.loc	9 59 1 prologue_end
	movl	$type...1command_line_arguments.Srv, %edi
	callq	runtime.newobject
	movq	%rax, 16(%rsp)
.Ltmp1235:
.Ltmp1283:
	.loc	9 0 1 is_stmt 0
	movq	%rbx, 40(%rsp)
.Ltmp1236:
.Ltmp1284:
	leaq	40(%rsp), %rdx
	.loc	9 59 1
	movl	$type...1command_line_arguments.Srv, %edi
	movq	16(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp1237:
.Ltmp1285:
.Ltmp1238:
	.loc	9 60 2 is_stmt 1
	movl	$context.Context..d, %edi
	callq	runtime.newobject
	movq	%rax, 24(%rsp)
.Ltmp1239:
.Ltmp1286:
	.loc	9 0 2 is_stmt 0
	movq	%rbp, 88(%rsp)
	movq	%r14, 96(%rsp)
.Ltmp1240:
	leaq	88(%rsp), %rdx
	.loc	9 60 2
	movl	$context.Context..d, %edi
	movq	24(%rsp), %rsi
	callq	runtime.typedmemmove
.Ltmp1241:
.Ltmp1287:
	.loc	9 64 17 is_stmt 1
	movq	16(%rsp), %rax
	movq	(%rax), %rbx
.Ltmp1288:
	.loc	9 64 18 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB62_8
.Ltmp1289:
.Ltmp1242:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1243:
.Ltmp1290:
.LBB62_8:
	.loc	9 64 10
	movq	24(%rbx), %rdi
	movq	32(%rbx), %rsi
.Ltmp1244:
	callq	syscall.Unlink
.Ltmp1245:
.Ltmp1291:
	.loc	9 66 32 is_stmt 1
	movq	16(%rsp), %rax
	movq	(%rax), %rbx
	.loc	9 66 33 is_stmt 0
	testq	%rbx, %rbx
	jne	.LBB62_11
.Ltmp1292:
.Ltmp1246:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1247:
.Ltmp1293:
.LBB62_11:
	.loc	9 66 17
	movq	24(%rbx), %rcx
	movq	32(%rbx), %r8
.Ltmp1248:
	leaq	136(%rsp), %rdi
	movl	$.Lconst.111, %esi
	movl	$4, %edx
	callq	net.Listen
.Ltmp1249:
.Ltmp1294:
	movq	152(%rsp), %rdi
.Ltmp1295:
	.loc	9 67 9 is_stmt 1
	testq	%rdi, %rdi
	je	.LBB62_21
.Ltmp1296:
	.loc	9 66 17
	movq	160(%rsp), %rsi
.Ltmp1297:
.Ltmp1250:
	.loc	9 68 17
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp1298:
.Ltmp1251:
	.loc	9 0 17 is_stmt 0
	movq	%rax, %r12
	movq	%rdx, %rbp
.Ltmp1299:
	movb	$1, %bl
.Ltmp1300:
	leaq	15(%rsp), %r15
	jmp	.LBB62_40
.Ltmp1301:
.LBB62_21:
	movq	136(%rsp), %r15
.Ltmp1302:
	movq	144(%rsp), %r12
.Ltmp1303:
	.loc	9 70 2 is_stmt 1
	movq	%r15, 72(%rsp)
	movq	%r12, 80(%rsp)
.Ltmp1252:
	leaq	15(%rsp), %rdi
.Ltmp1304:
	.loc	9 0 2 is_stmt 0
	leaq	72(%rsp), %rdx
	.loc	9 70 2
	movl	$command_line_arguments.command_line_arguments..thunk16, %esi
	callq	runtime.deferproc
.Ltmp1253:
.Ltmp1305:
	.p2align	4, 0x90
.LBB62_23:
.Ltmp1255:
	.loc	9 73 18 is_stmt 1
	leaq	168(%rsp), %rdi
	movq	%r12, %rsi
	callq	*8(%r15)
.Ltmp1256:
.Ltmp1306:
	movq	184(%rsp), %rbx
.Ltmp1307:
	.loc	9 0 18 is_stmt 0
	movups	168(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
.Ltmp1257:
	.loc	9 73 3
	movl	$net.Conn..d, %edi
	callq	runtime.newobject
.Ltmp1258:
.Ltmp1308:
	.loc	9 0 3
	movq	%rax, %rbp
.Ltmp1309:
	.loc	9 73 18
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB62_26
.Ltmp1310:
.Ltmp1259:
	movl	$net.Conn..d, %edi
	movq	%rbp, %rsi
	leaq	48(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1260:
.Ltmp1311:
	.loc	9 74 10 is_stmt 1
	testq	%rbx, %rbx
	jne	.LBB62_23
	jmp	.LBB62_31
.Ltmp1312:
	.p2align	4, 0x90
.LBB62_26:
	.loc	9 0 10 is_stmt 0
	movq	%rbp, %rax
	.loc	9 73 18 is_stmt 1
	testq	%rbp, %rbp
	jne	.LBB62_28
.Ltmp1313:
.Ltmp1261:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1262:
	movq	%r13, %rax
.Ltmp1314:
.LBB62_28:
	movaps	48(%rsp), %xmm0
	movups	%xmm0, (%rax)
	movq	%rax, %r13
	.loc	9 74 10
	testq	%rbx, %rbx
	jne	.LBB62_23
.Ltmp1315:
.LBB62_31:
.Ltmp1263:
	.loc	9 77 6
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, %edi
	callq	runtime.newobject
.Ltmp1264:
.Ltmp1316:
	movq	%rax, %r14
	movq	$command_line_arguments..1command_line_arguments.Srv.Run..func1, 104(%rsp)
	movq	16(%rsp), %rax
	movq	%rax, 112(%rsp)
.Ltmp1317:
	movq	24(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	%rbp, 128(%rsp)
.Ltmp1265:
	movl	$type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, %edi
	movq	%r14, %rsi
	leaq	104(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1266:
.Ltmp1318:
	.loc	9 77 3 is_stmt 0
	testq	%r14, %r14
	jne	.LBB62_35
.Ltmp1319:
.Ltmp1267:
	movl	$11, %edi
	callq	__go_runtime_error
.Ltmp1268:
.Ltmp1320:
.LBB62_35:
.Ltmp1269:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	callq	runtime.newobject
.Ltmp1270:
.Ltmp1321:
	movq	%rax, %rbp
	movq	%r14, 32(%rsp)
.Ltmp1271:
	movl	$type..struct.4.4x.5fn.0func.8.9.8.9.5, %edi
	movq	%rax, %rsi
	leaq	32(%rsp), %rdx
	callq	runtime.typedmemmove
.Ltmp1272:
.Ltmp1322:
.Ltmp1273:
	movl	$command_line_arguments.command_line_arguments..thunk17, %edi
	movq	%rbp, %rsi
	callq	__go_go
.Ltmp1274:
	jmp	.LBB62_23
.Ltmp1323:
.LBB62_18:
.Ltmp1254:
	.loc	9 0 3
	jmp	.LBB62_19
.Ltmp1324:
.LBB62_17:
.Ltmp1275:
.LBB62_19:
.Ltmp1276:
	leaq	15(%rsp), %rdi
	.loc	9 81 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1277:
	.loc	9 0 1 is_stmt 0
	movb	$1, %bl
	xorl	%r12d, %r12d
	xorl	%ebp, %ebp
.Ltmp1325:
	leaq	15(%rsp), %r15
	jmp	.LBB62_40
.Ltmp1326:
.LBB62_38:
.Ltmp1278:
	movq	%rax, %r14
	xorl	%r12d, %r12d
	xorl	%ebp, %ebp
	xorl	%ebx, %ebx
.Ltmp1327:
	leaq	15(%rsp), %r15
	jmp	.LBB62_40
.Ltmp1328:
.LBB62_39:
.Ltmp1281:
	.loc	9 81 1
	movq	%r15, %rdi
	callq	runtime.checkdefer
.Ltmp1329:
	.p2align	4, 0x90
.LBB62_40:
.Ltmp1279:
	movq	%r15, %rdi
	callq	runtime.deferreturn
.Ltmp1280:
.Ltmp1330:
	.loc	9 0 1
	testb	%bl, %bl
	je	.LBB62_43
.Ltmp1331:
	.loc	9 68 3 is_stmt 1
	movq	%r12, %rax
	movq	%rbp, %rdx
	addq	$200, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1332:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1333:
.LBB62_43:
	.cfi_def_cfa_offset 256
	.loc	9 0 3 is_stmt 0
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end62:
	.size	command_line_arguments.Srv.Run, .Lfunc_end62-command_line_arguments.Srv.Run
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table62:
.Lexception15:
	.byte	255
	.byte	3
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin62-.Lfunc_begin62
	.uleb128 .Ltmp1234-.Lfunc_begin62
	.byte	0
	.byte	0
	.uleb128 .Ltmp1234-.Lfunc_begin62
	.uleb128 .Ltmp1253-.Ltmp1234
	.uleb128 .Ltmp1254-.Lfunc_begin62
	.byte	1
	.uleb128 .Ltmp1255-.Lfunc_begin62
	.uleb128 .Ltmp1274-.Ltmp1255
	.uleb128 .Ltmp1275-.Lfunc_begin62
	.byte	1
	.uleb128 .Ltmp1276-.Lfunc_begin62
	.uleb128 .Ltmp1277-.Ltmp1276
	.uleb128 .Ltmp1278-.Lfunc_begin62
	.byte	0
	.uleb128 .Ltmp1277-.Lfunc_begin62
	.uleb128 .Ltmp1279-.Ltmp1277
	.byte	0
	.byte	0
	.uleb128 .Ltmp1279-.Lfunc_begin62
	.uleb128 .Ltmp1280-.Ltmp1279
	.uleb128 .Ltmp1281-.Lfunc_begin62
	.byte	1
	.uleb128 .Ltmp1280-.Lfunc_begin62
	.uleb128 .Lfunc_end62-.Ltmp1280
	.byte	0
	.byte	0
.Lcst_end15:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase15:
	.p2align	2

	.section	.text.command_line_arguments.Srv.SetSession,"ax",@progbits
	.globl	command_line_arguments.Srv.SetSession
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.SetSession,@function
command_line_arguments.Srv.SetSession:
.Lfunc_begin63:
	.loc	9 49 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception16
	cmpq	%fs:112, %rsp
	ja	.LBB63_2
	movq	%r10, %rax
	movabsq	$40, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB63_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdi, %rbx
	movb	$0, 7(%rsp)
.Ltmp1349:
	.loc	9 53 3 prologue_end
	testq	%rdi, %rdi
	jne	.LBB63_4
.Ltmp1350:
.Ltmp1334:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1351:
.Ltmp1335:
.LBB63_4:
	movq	40(%rbx), %rdi
.Ltmp1336:
	.loc	9 53 9 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp1337:
.Ltmp1352:
	.loc	9 54 9 is_stmt 1
	movq	40(%rbx), %rax
	.loc	9 54 2 is_stmt 0
	movq	%rax, 8(%rsp)
.Ltmp1338:
	leaq	7(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk15, %esi
	callq	runtime.deferproc
.Ltmp1339:
.Ltmp1353:
	.loc	9 55 3 is_stmt 1
	addq	$16, %rbx
.Ltmp1354:
	.loc	9 55 12 is_stmt 0
	cmpl	$0, runtime.writeBarrier(%rip)
	je	.LBB63_10
.Ltmp1355:
.Ltmp1340:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	runtime.writebarrierptr
.Ltmp1341:
.Ltmp1356:
.LBB63_9:
	.loc	9 0 12
	movb	$1, %bpl
.Ltmp1357:
	leaq	7(%rsp), %rbx
	jmp	.LBB63_14
.LBB63_10:
.Ltmp1358:
	.loc	9 55 12
	movq	%r14, (%rbx)
	movb	$1, %bpl
.Ltmp1359:
	.loc	9 0 12
	leaq	7(%rsp), %rbx
	jmp	.LBB63_14
.LBB63_8:
.Ltmp1360:
.Ltmp1342:
.Ltmp1343:
	leaq	7(%rsp), %rdi
	.loc	9 56 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1344:
	jmp	.LBB63_9
.Ltmp1361:
.LBB63_11:
.Ltmp1345:
	.loc	9 0 1 is_stmt 0
	movq	%rax, %r14
.Ltmp1362:
	xorl	%ebp, %ebp
	leaq	7(%rsp), %rbx
	jmp	.LBB63_14
.LBB63_13:
.Ltmp1348:
	.loc	9 56 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
	.p2align	4, 0x90
.LBB63_14:
.Ltmp1346:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp1347:
.Ltmp1363:
	.loc	9 0 1
	testb	%bpl, %bpl
	je	.LBB63_17
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB63_17:
	.cfi_def_cfa_offset 48
	movq	%r14, %rdi
	callq	_Unwind_Resume
.Lfunc_end63:
	.size	command_line_arguments.Srv.SetSession, .Lfunc_end63-command_line_arguments.Srv.SetSession
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table63:
.Lexception16:
	.byte	255
	.byte	3
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin63-.Lfunc_begin63
	.uleb128 .Ltmp1334-.Lfunc_begin63
	.byte	0
	.byte	0
	.uleb128 .Ltmp1334-.Lfunc_begin63
	.uleb128 .Ltmp1341-.Ltmp1334
	.uleb128 .Ltmp1342-.Lfunc_begin63
	.byte	1
	.uleb128 .Ltmp1343-.Lfunc_begin63
	.uleb128 .Ltmp1344-.Ltmp1343
	.uleb128 .Ltmp1345-.Lfunc_begin63
	.byte	0
	.uleb128 .Ltmp1344-.Lfunc_begin63
	.uleb128 .Ltmp1346-.Ltmp1344
	.byte	0
	.byte	0
	.uleb128 .Ltmp1346-.Lfunc_begin63
	.uleb128 .Ltmp1347-.Ltmp1346
	.uleb128 .Ltmp1348-.Lfunc_begin63
	.byte	1
	.uleb128 .Ltmp1347-.Lfunc_begin63
	.uleb128 .Lfunc_end63-.Ltmp1347
	.byte	0
	.byte	0
.Lcst_end16:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase16:
	.p2align	2

	.section	.text.command_line_arguments.Srv.executeAuthorize,"ax",@progbits
	.globl	command_line_arguments.Srv.executeAuthorize
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.executeAuthorize,@function
command_line_arguments.Srv.executeAuthorize:
.Lfunc_begin64:
	.loc	9 148 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception17
	leaq	-520(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB64_2
	movq	%r10, %rax
	movabsq	$520, %r10
	movabsq	$40, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB64_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$472, %rsp
	.cfi_def_cfa_offset 528
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movb	$0, 95(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 160(%rsp)
	movups	%xmm0, 127(%rsp)
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 144(%rsp)
.Ltmp1401:
	.loc	9 152 3 prologue_end
	testq	%rsi, %rsi
	jne	.LBB64_4
.Ltmp1402:
.Ltmp1364:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1403:
.Ltmp1365:
.LBB64_4:
	movq	40(%rbx), %rdi
.Ltmp1366:
	.loc	9 152 9 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp1367:
.Ltmp1404:
	.loc	9 153 9 is_stmt 1
	movq	40(%rbx), %rax
	.loc	9 153 2 is_stmt 0
	movq	%rax, 184(%rsp)
.Ltmp1368:
	leaq	95(%rsp), %rdi
	leaq	184(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk19, %esi
	callq	runtime.deferproc
.Ltmp1369:
.Ltmp1405:
	.loc	9 155 6 is_stmt 1
	movq	16(%rbx), %rsi
	.loc	9 155 15 is_stmt 0
	testq	%rsi, %rsi
	je	.LBB64_7
.Ltmp1406:
	.loc	9 0 15
	leaq	528(%rsp), %rax
	.loc	9 165 19 is_stmt 1
	cmpq	$1, 24(%rax)
	jne	.LBB64_11
.Ltmp1407:
	.loc	9 0 19 is_stmt 0
	movq	16(%rax), %rbp
	.loc	9 175 24 is_stmt 1
	movq	(%rbp), %rdx
	movq	8(%rbp), %rcx
.Ltmp1370:
	leaq	192(%rsp), %rdi
	callq	command_line_arguments.Session.GetMode
.Ltmp1371:
.Ltmp1408:
	movq	200(%rsp), %rax
	.loc	9 176 9
	testq	%rax, %rax
	je	.LBB64_19
.Ltmp1409:
	.loc	9 175 24
	movq	208(%rsp), %rdi
.Ltmp1372:
	.loc	9 181 17
	callq	*8(%rax)
.Ltmp1373:
.Ltmp1410:
	movq	%rax, 304(%rsp)
	movq	%rdx, 312(%rsp)
	movups	.Lconst.320(%rip), %xmm0
	movups	%xmm0, 320(%rsp)
.Ltmp1374:
	movups	304(%rsp), %xmm0
	movups	320(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp1375:
	jmp	.LBB64_18
.Ltmp1411:
.LBB64_7:
	.loc	9 156 3
	movaps	.Lconst.315(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movups	.Lconst.315+17(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	.Lconst.315+33(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.315+48(%rip), %xmm0
	movups	%xmm0, 127(%rsp)
	movaps	.Lconst.315+64(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	movl	$.Lconst.314, %r15d
.Ltmp1412:
	.loc	9 0 3 is_stmt 0
	movb	$1, %bl
.Ltmp1413:
	movl	$35, %r13d
.Ltmp1414:
	leaq	95(%rsp), %rbp
	jmp	.LBB64_35
.Ltmp1415:
.LBB64_11:
	.loc	9 166 3 is_stmt 1
	movaps	.Lconst.318(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
.Ltmp1416:
	movups	.Lconst.318+17(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	.Lconst.318+33(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.318+48(%rip), %xmm0
	movups	%xmm0, 127(%rsp)
	movaps	.Lconst.318+64(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	movl	$.Lconst.317, %r15d
.Ltmp1417:
	.loc	9 0 3 is_stmt 0
	movb	$1, %bl
.Ltmp1418:
	movl	$36, %r13d
.Ltmp1419:
	leaq	95(%rsp), %rbp
	jmp	.LBB64_35
.Ltmp1420:
.LBB64_19:
	movq	192(%rsp), %r12
.Ltmp1421:
	.loc	9 186 9 is_stmt 1
	movq	16(%rbx), %r15
	.loc	9 186 39 is_stmt 0
	testq	%r12, %r12
	jne	.LBB64_21
.Ltmp1422:
.Ltmp1376:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1377:
.Ltmp1423:
.LBB64_21:
	movq	(%r12), %rcx
	.loc	9 186 44
	orq	$2, %rcx
	.loc	9 186 17
	movq	(%rbp), %rsi
	movq	8(%rbp), %rdx
.Ltmp1378:
	movq	%r15, %rdi
	callq	command_line_arguments.Session.SetMode
.Ltmp1379:
.Ltmp1424:
	.loc	9 187 9 is_stmt 1
	testq	%rax, %rax
	je	.LBB64_25
.Ltmp1425:
.Ltmp1380:
	.loc	9 192 17
	movq	%rdx, %rdi
	callq	*8(%rax)
.Ltmp1426:
.Ltmp1381:
	movq	%rax, 336(%rsp)
	movq	%rdx, 344(%rsp)
	movups	.Lconst.320(%rip), %xmm0
	movups	%xmm0, 352(%rsp)
.Ltmp1382:
	movups	336(%rsp), %xmm0
	movups	352(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp1383:
.Ltmp1427:
.LBB64_18:
	.loc	9 0 17 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %r13
.Ltmp1428:
	movups	.Lconst.303(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
.Ltmp1429:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 119(%rsp)
	movups	%xmm0, 103(%rsp)
	movq	$0, 135(%rsp)
	movups	.Lconst.322(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	movb	$1, %bl
.Ltmp1430:
	leaq	95(%rsp), %rbp
	jmp	.LBB64_35
.Ltmp1431:
.LBB64_25:
	.loc	9 198 16 is_stmt 1
	movq	16(%rbx), %rdi
.Ltmp1384:
	.loc	9 198 24 is_stmt 0
	callq	command_line_arguments.Session.Warp
.Ltmp1385:
.Ltmp1432:
	.loc	9 0 24
	movq	%rax, %r15
	movq	%rdx, %r12
.Ltmp1433:
	.loc	9 199 16 is_stmt 1
	movq	16(%rbx), %rsi
.Ltmp1386:
	leaq	424(%rsp), %rdi
	.loc	9 199 24 is_stmt 0
	callq	command_line_arguments.Session.Session
.Ltmp1387:
.Ltmp1434:
	.loc	9 0 24
	movups	424(%rsp), %xmm0
	movups	440(%rsp), %xmm1
	movups	456(%rsp), %xmm2
	movaps	%xmm2, 400(%rsp)
	movaps	%xmm1, 384(%rsp)
	movaps	%xmm0, 368(%rsp)
	.loc	9 200 16 is_stmt 1
	movq	16(%rbx), %rdi
.Ltmp1388:
	.loc	9 200 24 is_stmt 0
	callq	command_line_arguments.Session.WindowSize
.Ltmp1389:
.Ltmp1435:
	.loc	9 0 24
	movq	%rax, %r13
	movq	%rdx, %rbp
	.loc	9 201 16 is_stmt 1
	movq	16(%rbx), %rdi
.Ltmp1390:
	.loc	9 201 24 is_stmt 0
	callq	command_line_arguments.Session.Modes
.Ltmp1391:
.Ltmp1436:
	.loc	9 197 13 is_stmt 1
	movq	16(%rbx), %rdi
	.loc	9 197 47 is_stmt 0
	movq	%r15, 216(%rsp)
	movq	%r12, 224(%rsp)
	movaps	368(%rsp), %xmm0
	movaps	384(%rsp), %xmm1
	movaps	400(%rsp), %xmm2
	movups	%xmm0, 232(%rsp)
	movups	%xmm1, 248(%rsp)
	movups	%xmm2, 264(%rsp)
	movq	%r13, 280(%rsp)
	movq	%rbp, 288(%rsp)
	movq	%rax, 296(%rsp)
.Ltmp1392:
	.loc	9 197 21
	movq	296(%rsp), %rax
	movq	%rax, 80(%rsp)
	movups	280(%rsp), %xmm0
	movups	%xmm0, 64(%rsp)
	movups	216(%rsp), %xmm0
	movups	232(%rsp), %xmm1
	movups	248(%rsp), %xmm2
	movups	264(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.Session.SendHostUpdate
.Ltmp1393:
.Ltmp1437:
	.loc	9 202 10 is_stmt 1
	testq	%rax, %rax
	je	.LBB64_32
.Ltmp1438:
	.loc	9 203 3
	movaps	.Lconst.325(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
.Ltmp1439:
	movups	.Lconst.325+17(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	.Lconst.325+33(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.325+48(%rip), %xmm0
	movups	%xmm0, 127(%rsp)
	movaps	.Lconst.325+64(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
	movl	$.Lconst.324, %r15d
.Ltmp1440:
	.loc	9 0 3 is_stmt 0
	movb	$1, %bl
.Ltmp1441:
	movl	$31, %r13d
.Ltmp1442:
	leaq	95(%rsp), %rbp
	jmp	.LBB64_35
.Ltmp1443:
.LBB64_32:
	.loc	9 213 2 is_stmt 1
	movaps	.Lconst.326(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
.Ltmp1444:
	movups	.Lconst.326+17(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	.Lconst.326+33(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.326+48(%rip), %xmm0
	movups	%xmm0, 127(%rsp)
	movaps	.Lconst.326+64(%rip), %xmm0
	movaps	%xmm0, 144(%rsp)
.Ltmp1445:
.LBB64_9:
	.loc	9 0 2 is_stmt 0
	movb	$1, %bl
.Ltmp1446:
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
.Ltmp1447:
	leaq	95(%rsp), %rbp
	jmp	.LBB64_35
.Ltmp1448:
.LBB64_8:
.Ltmp1394:
.Ltmp1395:
	leaq	95(%rsp), %rdi
	.loc	9 216 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1396:
	jmp	.LBB64_9
.Ltmp1449:
.LBB64_33:
.Ltmp1397:
	.loc	9 0 1 is_stmt 0
	movq	%rax, %r12
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	xorl	%ebx, %ebx
.Ltmp1450:
	leaq	95(%rsp), %rbp
	jmp	.LBB64_35
.Ltmp1451:
.LBB64_34:
.Ltmp1400:
	.loc	9 216 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp1452:
	.p2align	4, 0x90
.LBB64_35:
.Ltmp1398:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp1399:
.Ltmp1453:
	.loc	9 0 1
	testb	%bl, %bl
	je	.LBB64_38
.Ltmp1454:
	.loc	9 156 3 is_stmt 1
	movaps	160(%rsp), %xmm0
	movups	%xmm0, (%r14)
	movb	$0, 16(%r14)
	movups	127(%rsp), %xmm0
	movups	%xmm0, 48(%r14)
	movaps	96(%rsp), %xmm0
	movaps	112(%rsp), %xmm1
	movups	%xmm1, 33(%r14)
	movups	%xmm0, 17(%r14)
	movaps	144(%rsp), %xmm0
	movups	%xmm0, 64(%r14)
	movq	%r15, 80(%r14)
	movq	%r13, 88(%r14)
	movq	%r14, %rax
	addq	$472, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1455:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1456:
.LBB64_38:
	.cfi_def_cfa_offset 528
	.loc	9 0 3 is_stmt 0
	movq	%r12, %rdi
	callq	_Unwind_Resume
.Lfunc_end64:
	.size	command_line_arguments.Srv.executeAuthorize, .Lfunc_end64-command_line_arguments.Srv.executeAuthorize
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table64:
.Lexception17:
	.byte	255
	.byte	3
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin64-.Lfunc_begin64
	.uleb128 .Ltmp1364-.Lfunc_begin64
	.byte	0
	.byte	0
	.uleb128 .Ltmp1364-.Lfunc_begin64
	.uleb128 .Ltmp1393-.Ltmp1364
	.uleb128 .Ltmp1394-.Lfunc_begin64
	.byte	1
	.uleb128 .Ltmp1395-.Lfunc_begin64
	.uleb128 .Ltmp1396-.Ltmp1395
	.uleb128 .Ltmp1397-.Lfunc_begin64
	.byte	0
	.uleb128 .Ltmp1396-.Lfunc_begin64
	.uleb128 .Ltmp1398-.Ltmp1396
	.byte	0
	.byte	0
	.uleb128 .Ltmp1398-.Lfunc_begin64
	.uleb128 .Ltmp1399-.Ltmp1398
	.uleb128 .Ltmp1400-.Lfunc_begin64
	.byte	1
	.uleb128 .Ltmp1399-.Lfunc_begin64
	.uleb128 .Lfunc_end64-.Ltmp1399
	.byte	0
	.byte	0
.Lcst_end17:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase17:
	.p2align	2

	.section	.text.command_line_arguments.Srv.executeRevoke,"ax",@progbits
	.globl	command_line_arguments.Srv.executeRevoke
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.executeRevoke,@function
command_line_arguments.Srv.executeRevoke:
.Lfunc_begin65:
	.loc	9 219 0 is_stmt 1
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception18
	leaq	-568(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB65_2
	movq	%r10, %rax
	movabsq	$568, %r10
	movabsq	$40, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB65_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$520, %rsp
	.cfi_def_cfa_offset 576
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, 200(%rsp)
	movb	$0, 103(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 176(%rsp)
	movups	%xmm0, 143(%rsp)
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 160(%rsp)
.Ltmp1497:
	.loc	9 223 3 prologue_end
	testq	%rsi, %rsi
	jne	.LBB65_4
.Ltmp1498:
.Ltmp1457:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1499:
.Ltmp1458:
.LBB65_4:
	movq	40(%rbx), %rdi
.Ltmp1459:
	.loc	9 223 9 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp1460:
.Ltmp1500:
	.loc	9 224 9 is_stmt 1
	movq	40(%rbx), %rax
	.loc	9 224 2 is_stmt 0
	movq	%rax, 232(%rsp)
.Ltmp1461:
	leaq	103(%rsp), %rdi
	leaq	232(%rsp), %rdx
	movl	$command_line_arguments.command_line_arguments..thunk20, %esi
	callq	runtime.deferproc
.Ltmp1462:
.Ltmp1501:
	.loc	9 226 6 is_stmt 1
	movq	16(%rbx), %rdi
	.loc	9 226 15 is_stmt 0
	testq	%rdi, %rdi
	je	.LBB65_7
.Ltmp1502:
	.loc	9 0 15
	leaq	576(%rsp), %rax
	movq	24(%rax), %rcx
	movq	%rcx, 224(%rsp)
.Ltmp1503:
	.loc	9 236 2 is_stmt 1
	testq	%rcx, %rcx
	jle	.LBB65_31
.Ltmp1504:
	.loc	9 0 2 is_stmt 0
	movq	%rbx, 104(%rsp)
.Ltmp1505:
	movq	16(%rax), %r14
	addq	$8, %r14
	xorl	%r12d, %r12d
.Ltmp1506:
	.p2align	4, 0x90
.LBB65_15:
	.loc	9 236 2
	movq	-8(%r14), %rbx
.Ltmp1507:
	movq	(%r14), %r13
.Ltmp1508:
	.loc	9 237 17 is_stmt 1
	movq	104(%rsp), %rax
	movq	16(%rax), %rsi
.Ltmp1463:
.Ltmp1509:
	.loc	9 237 25 is_stmt 0
	leaq	240(%rsp), %rdi
	movq	%rbx, %rdx
	movq	%r13, %rcx
	callq	command_line_arguments.Session.GetMode
.Ltmp1464:
.Ltmp1510:
	movq	248(%rsp), %rax
	.loc	9 238 10 is_stmt 1
	testq	%rax, %rax
	jne	.LBB65_17
.Ltmp1511:
	.loc	9 0 10 is_stmt 0
	movq	240(%rsp), %rcx
.Ltmp1512:
	.loc	9 248 10 is_stmt 1
	movq	104(%rsp), %rax
	movq	16(%rax), %rbp
	.loc	9 248 33 is_stmt 0
	testq	%rcx, %rcx
	je	.LBB65_23
.Ltmp1513:
	movq	(%rcx), %rax
	movq	%rax, %r15
	movq	%rcx, 216(%rsp)
.Ltmp1514:
	.loc	9 0 33
	movq	%rcx, 208(%rsp)
	jmp	.LBB65_26
.Ltmp1515:
	.p2align	4, 0x90
.LBB65_23:
.Ltmp1469:
	.loc	9 248 33
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1516:
.Ltmp1470:
	movq	216(%rsp), %rax
	movq	(%rax), %r15
.Ltmp1471:
	.loc	9 248 39
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1472:
.Ltmp1517:
	movq	208(%rsp), %rax
	movq	(%rax), %rax
.Ltmp1518:
.LBB65_26:
	.loc	9 248 44
	andl	$2, %eax
	.loc	9 248 38
	subq	%rax, %r15
.Ltmp1473:
	.loc	9 248 18
	movq	%rbp, %rdi
	movq	%rbx, %rsi
	movq	%r13, %rdx
	movq	%r15, %rcx
	callq	command_line_arguments.Session.SetMode
.Ltmp1474:
.Ltmp1519:
	.loc	9 249 10 is_stmt 1
	testq	%rax, %rax
	jne	.LBB65_28
.Ltmp1520:
	.loc	9 236 2
	addq	$1, %r12
	addq	$16, %r14
	cmpq	224(%rsp), %r12
	jl	.LBB65_15
.Ltmp1521:
	.loc	9 0 2 is_stmt 0
	movq	104(%rsp), %rbx
.Ltmp1522:
	.loc	9 261 16 is_stmt 1
	movq	16(%rbx), %rdi
.Ltmp1523:
.LBB65_31:
.Ltmp1480:
	.loc	9 261 24 is_stmt 0
	callq	command_line_arguments.Session.Warp
.Ltmp1481:
	.loc	9 0 24
	movq	%rax, %r13
	movq	%rdx, %r15
	.loc	9 262 16 is_stmt 1
	movq	16(%rbx), %rsi
.Ltmp1482:
	leaq	472(%rsp), %rdi
	.loc	9 262 24 is_stmt 0
	callq	command_line_arguments.Session.Session
.Ltmp1483:
	.loc	9 0 24
	movups	472(%rsp), %xmm0
	movups	488(%rsp), %xmm1
	movups	504(%rsp), %xmm2
	movaps	%xmm2, 448(%rsp)
	movaps	%xmm1, 432(%rsp)
	movaps	%xmm0, 416(%rsp)
	.loc	9 263 16 is_stmt 1
	movq	16(%rbx), %rdi
.Ltmp1484:
	.loc	9 263 24 is_stmt 0
	callq	command_line_arguments.Session.WindowSize
.Ltmp1485:
	.loc	9 0 24
	movq	%rax, %rbp
	movq	%rdx, %r14
	.loc	9 264 16 is_stmt 1
	movq	16(%rbx), %rdi
.Ltmp1486:
	.loc	9 264 24 is_stmt 0
	callq	command_line_arguments.Session.Modes
.Ltmp1487:
	.loc	9 260 13 is_stmt 1
	movq	16(%rbx), %rdi
	.loc	9 260 47 is_stmt 0
	movq	%r13, 264(%rsp)
	movq	%r15, 272(%rsp)
	movaps	416(%rsp), %xmm0
	movaps	432(%rsp), %xmm1
	movaps	448(%rsp), %xmm2
	movups	%xmm0, 280(%rsp)
	movups	%xmm1, 296(%rsp)
	movups	%xmm2, 312(%rsp)
	movq	%rbp, 328(%rsp)
	movq	%r14, 336(%rsp)
	movq	%rax, 344(%rsp)
.Ltmp1488:
	.loc	9 260 21
	movq	344(%rsp), %rax
	movq	%rax, 80(%rsp)
	movups	328(%rsp), %xmm0
	movups	%xmm0, 64(%rsp)
	movups	264(%rsp), %xmm0
	movups	280(%rsp), %xmm1
	movups	296(%rsp), %xmm2
	movups	312(%rsp), %xmm3
	movups	%xmm3, 48(%rsp)
	movups	%xmm2, 32(%rsp)
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	callq	command_line_arguments.Session.SendHostUpdate
.Ltmp1489:
.Ltmp1524:
	.loc	9 265 10 is_stmt 1
	testq	%rax, %rax
	je	.LBB65_38
	.loc	9 266 3
	movaps	.Lconst.328(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
	movups	.Lconst.328+17(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.328+33(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movups	.Lconst.328+48(%rip), %xmm0
	movups	%xmm0, 143(%rsp)
	movaps	.Lconst.328+64(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movl	$.Lconst.324, %r15d
.Ltmp1525:
	.loc	9 0 3 is_stmt 0
	movb	$1, %bl
	movl	$31, %r14d
.Ltmp1526:
	leaq	103(%rsp), %rbp
	jmp	.LBB65_41
.Ltmp1527:
.LBB65_7:
	.loc	9 227 3 is_stmt 1
	movaps	.Lconst.327(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
.Ltmp1528:
	movups	.Lconst.327+17(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.327+33(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movups	.Lconst.327+48(%rip), %xmm0
	movups	%xmm0, 143(%rsp)
	movaps	.Lconst.327+64(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movl	$.Lconst.314, %r15d
.Ltmp1529:
	.loc	9 0 3 is_stmt 0
	movb	$1, %bl
.Ltmp1530:
	movl	$35, %r14d
.Ltmp1531:
	leaq	103(%rsp), %rbp
	jmp	.LBB65_41
.Ltmp1532:
.LBB65_38:
	.loc	9 276 2 is_stmt 1
	movaps	.Lconst.329(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
.Ltmp1533:
	movups	.Lconst.329+17(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.329+33(%rip), %xmm0
	movaps	%xmm0, 128(%rsp)
	movups	.Lconst.329+48(%rip), %xmm0
	movups	%xmm0, 143(%rsp)
	movaps	.Lconst.329+64(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
.LBB65_11:
	.loc	9 0 2 is_stmt 0
	movb	$1, %bl
	xorl	%r15d, %r15d
	xorl	%r14d, %r14d
.Ltmp1534:
	leaq	103(%rsp), %rbp
	jmp	.LBB65_41
.Ltmp1535:
.LBB65_17:
	.loc	9 237 25 is_stmt 1
	movq	256(%rsp), %rdi
.Ltmp1465:
	.loc	9 243 18
	callq	*8(%rax)
.Ltmp1466:
.Ltmp1536:
	movq	%rax, 352(%rsp)
	movq	%rdx, 360(%rsp)
	movups	.Lconst.320(%rip), %xmm0
	movups	%xmm0, 368(%rsp)
.Ltmp1467:
	movups	352(%rsp), %xmm0
	movups	368(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp1468:
	jmp	.LBB65_19
.Ltmp1537:
.LBB65_28:
.Ltmp1476:
	.loc	9 254 18
	movq	%rdx, %rdi
	callq	*8(%rax)
.Ltmp1538:
.Ltmp1477:
	movq	%rax, 384(%rsp)
	movq	%rdx, 392(%rsp)
	movups	.Lconst.320(%rip), %xmm0
	movups	%xmm0, 400(%rsp)
.Ltmp1478:
	movups	384(%rsp), %xmm0
	movups	400(%rsp), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	xorl	%edi, %edi
	callq	runtime.concatstring2
.Ltmp1479:
.Ltmp1539:
.LBB65_19:
	.loc	9 0 18 is_stmt 0
	movq	%rax, %r15
	movq	%rdx, %r14
.Ltmp1540:
	movups	.Lconst.305(%rip), %xmm0
	movaps	%xmm0, 176(%rsp)
.Ltmp1541:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 135(%rsp)
	movups	%xmm0, 119(%rsp)
	movq	$0, 151(%rsp)
	movups	.Lconst.322(%rip), %xmm0
	movaps	%xmm0, 160(%rsp)
	movb	$1, %bl
.Ltmp1542:
	leaq	103(%rsp), %rbp
	jmp	.LBB65_41
.Ltmp1543:
.LBB65_9:
.Ltmp1490:
	jmp	.LBB65_10
.LBB65_8:
.Ltmp1544:
.Ltmp1475:
.LBB65_10:
.Ltmp1491:
	leaq	103(%rsp), %rdi
	.loc	9 279 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1492:
	jmp	.LBB65_11
.LBB65_39:
.Ltmp1493:
	.loc	9 0 1 is_stmt 0
	movq	%rax, %r12
	xorl	%r15d, %r15d
	xorl	%r14d, %r14d
	xorl	%ebx, %ebx
.Ltmp1545:
	leaq	103(%rsp), %rbp
	jmp	.LBB65_41
.Ltmp1546:
.LBB65_40:
.Ltmp1496:
	.loc	9 279 1
	movq	%rbp, %rdi
	callq	runtime.checkdefer
.Ltmp1547:
	.p2align	4, 0x90
.LBB65_41:
.Ltmp1494:
	movq	%rbp, %rdi
	callq	runtime.deferreturn
.Ltmp1495:
.Ltmp1548:
	.loc	9 0 1
	testb	%bl, %bl
	je	.LBB65_45
.Ltmp1549:
	.loc	9 227 3 is_stmt 1
	movaps	176(%rsp), %xmm0
	movq	200(%rsp), %rax
	movups	%xmm0, (%rax)
	movb	$0, 16(%rax)
	movups	143(%rsp), %xmm0
	movups	%xmm0, 48(%rax)
	movaps	112(%rsp), %xmm0
	movaps	128(%rsp), %xmm1
	movups	%xmm1, 33(%rax)
	movups	%xmm0, 17(%rax)
	movaps	160(%rsp), %xmm0
	movups	%xmm0, 64(%rax)
	movq	%r15, 80(%rax)
	movq	%r14, 88(%rax)
	addq	$520, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1550:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1551:
.LBB65_45:
	.cfi_def_cfa_offset 576
	.loc	9 0 3 is_stmt 0
	movq	%r12, %rdi
	callq	_Unwind_Resume
.Lfunc_end65:
	.size	command_line_arguments.Srv.executeRevoke, .Lfunc_end65-command_line_arguments.Srv.executeRevoke
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table65:
.Lexception18:
	.byte	255
	.byte	3
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Lfunc_begin65-.Lfunc_begin65
	.uleb128 .Ltmp1457-.Lfunc_begin65
	.byte	0
	.byte	0
	.uleb128 .Ltmp1457-.Lfunc_begin65
	.uleb128 .Ltmp1462-.Ltmp1457
	.uleb128 .Ltmp1490-.Lfunc_begin65
	.byte	1
	.uleb128 .Ltmp1463-.Lfunc_begin65
	.uleb128 .Ltmp1474-.Ltmp1463
	.uleb128 .Ltmp1475-.Lfunc_begin65
	.byte	1
	.uleb128 .Ltmp1480-.Lfunc_begin65
	.uleb128 .Ltmp1479-.Ltmp1480
	.uleb128 .Ltmp1490-.Lfunc_begin65
	.byte	1
	.uleb128 .Ltmp1491-.Lfunc_begin65
	.uleb128 .Ltmp1492-.Ltmp1491
	.uleb128 .Ltmp1493-.Lfunc_begin65
	.byte	0
	.uleb128 .Ltmp1492-.Lfunc_begin65
	.uleb128 .Ltmp1494-.Ltmp1492
	.byte	0
	.byte	0
	.uleb128 .Ltmp1494-.Lfunc_begin65
	.uleb128 .Ltmp1495-.Ltmp1494
	.uleb128 .Ltmp1496-.Lfunc_begin65
	.byte	1
	.uleb128 .Ltmp1495-.Lfunc_begin65
	.uleb128 .Lfunc_end65-.Ltmp1495
	.byte	0
	.byte	0
.Lcst_end18:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase18:
	.p2align	2

	.section	.text.command_line_arguments.Srv.executeState,"ax",@progbits
	.globl	command_line_arguments.Srv.executeState
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.executeState,@function
command_line_arguments.Srv.executeState:
.Lfunc_begin66:
	.loc	9 137 0 is_stmt 1
	.cfi_startproc
	.loc	9 142 2 prologue_end
	movaps	.Lconst.312+80(%rip), %xmm0
	movups	%xmm0, 80(%rdi)
	movaps	.Lconst.312+64(%rip), %xmm0
	movups	%xmm0, 64(%rdi)
	movaps	.Lconst.312+48(%rip), %xmm0
	movups	%xmm0, 48(%rdi)
	movaps	.Lconst.312+32(%rip), %xmm0
	movups	%xmm0, 32(%rdi)
	movaps	.Lconst.312+16(%rip), %xmm0
	movups	%xmm0, 16(%rdi)
	movaps	.Lconst.312(%rip), %xmm0
	movups	%xmm0, (%rdi)
	movq	%rdi, %rax
	retq
.Ltmp1552:
.Lfunc_end66:
	.size	command_line_arguments.Srv.executeState, .Lfunc_end66-command_line_arguments.Srv.executeState
	.cfi_endproc

	.section	.text.command_line_arguments.Srv.handle,"ax",@progbits
	.globl	command_line_arguments.Srv.handle
	.p2align	4, 0x90
	.type	command_line_arguments.Srv.handle,@function
command_line_arguments.Srv.handle:
.Lfunc_begin67:
	.loc	9 84 0
	.cfi_startproc
	.cfi_personality 3, __gccgo_personality_v0
	.cfi_lsda 3, .Lexception19
	leaq	-696(%rsp), %r11
	cmpq	%fs:112, %r11
	ja	.LBB67_2
	movq	%r10, %rax
	movabsq	$696, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB67_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$648, %rsp
	.cfi_def_cfa_offset 704
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, %rbx
	movq	%rdi, %r13
	movb	$0, 47(%rsp)
.Ltmp1612:
	.loc	9 88 2 prologue_end
	movq	%rcx, 256(%rsp)
	movq	%r8, 264(%rsp)
.Ltmp1553:
	leaq	47(%rsp), %rdi
	leaq	256(%rsp), %rdx
.Ltmp1613:
	movl	$command_line_arguments.command_line_arguments..thunk18, %esi
	callq	runtime.deferproc
.Ltmp1554:
.Ltmp1614:
	.loc	9 90 29
	testq	%rbx, %rbx
	je	.LBB67_4
.Ltmp1615:
	movq	(%rbx), %rsi
	jmp	.LBB67_8
.Ltmp1616:
.LBB67_4:
	.loc	9 0 29 is_stmt 0
	xorl	%esi, %esi
.Ltmp1617:
.LBB67_8:
.Ltmp1555:
	.loc	9 90 29
	movl	$io.Reader..d, %edi
	callq	runtime.requireitab
.Ltmp1556:
.Ltmp1618:
.Ltmp1557:
	.loc	9 90 18
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	encoding_gob.NewDecoder
.Ltmp1558:
.Ltmp1619:
	.loc	9 0 18
	movq	%rax, %r15
	.loc	9 90 29
	testq	%rbx, %rbx
	je	.LBB67_11
.Ltmp1620:
	.loc	9 91 29 is_stmt 1
	movq	(%rbx), %rsi
	jmp	.LBB67_12
.Ltmp1621:
.LBB67_11:
	.loc	9 0 29 is_stmt 0
	xorl	%esi, %esi
.Ltmp1622:
.LBB67_12:
.Ltmp1559:
	.loc	9 91 29
	movl	$io.Writer..d, %edi
	callq	runtime.requireitab
.Ltmp1560:
.Ltmp1623:
.Ltmp1561:
	.loc	9 91 18
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	encoding_gob.NewEncoder
.Ltmp1562:
.Ltmp1624:
	.loc	9 0 18
	movq	%rax, %r14
.Ltmp1563:
	.loc	9 93 6 is_stmt 1
	movl	$github_com_spolu_warp.Command..d, %edi
	callq	runtime.newobject
.Ltmp1564:
.Ltmp1625:
	.loc	9 0 6 is_stmt 0
	movq	%rax, %rbx
.Ltmp1626:
.Ltmp1565:
	.loc	9 94 20 is_stmt 1
	movl	$type...1github_com_spolu_warp.Command, %esi
	movq	%r15, %rdi
	movq	%rax, %rdx
	callq	encoding_gob.Decoder.Decode
.Ltmp1566:
.Ltmp1627:
	.loc	9 94 39 is_stmt 0
	testq	%rax, %rax
	je	.LBB67_17
.Ltmp1628:
	.loc	9 96 49 is_stmt 1
	movq	(%rax), %rax
	.loc	9 96 11 is_stmt 0
	movq	%rax, 240(%rsp)
	movq	%rdx, 248(%rsp)
	leaq	240(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	$1, 144(%rsp)
	movq	$1, 152(%rsp)
.Ltmp1567:
	movq	152(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.298, %edi
	movl	$29, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
.Ltmp1629:
.Ltmp1568:
.Ltmp1569:
	.loc	9 95 17 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp1570:
.Ltmp1630:
	.loc	9 0 17 is_stmt 0
	movq	%rax, %r14
	movq	%rdx, %r12
.Ltmp1631:
	movb	$1, %bpl
.Ltmp1632:
	leaq	47(%rsp), %rbx
.Ltmp1633:
	jmp	.LBB67_55
.Ltmp1634:
.LBB67_17:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 112(%rsp)
.Ltmp1635:
	movups	%xmm0, 79(%rsp)
	movaps	%xmm0, 64(%rsp)
	movaps	%xmm0, 48(%rsp)
	movaps	%xmm0, 96(%rsp)
	movq	(%rbx), %r15
.Ltmp1636:
	movq	8(%rbx), %r12
.Ltmp1571:
	.loc	9 103 2 is_stmt 1
	movl	$.Lconst.208, %edx
	movl	$5, %ecx
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	runtime.eqstring
.Ltmp1572:
.Ltmp1637:
	cmpb	$1, %al
	jne	.LBB67_19
.Ltmp1638:
	.loc	9 104 10
	movaps	.Lconst.312(%rip), %xmm0
	movaps	%xmm0, 112(%rsp)
	movups	.Lconst.312+17(%rip), %xmm0
	movaps	%xmm0, 48(%rsp)
	movups	.Lconst.312+33(%rip), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	.Lconst.312+48(%rip), %xmm0
	movups	%xmm0, 79(%rsp)
	movaps	.Lconst.312+64(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	xorl	%ebp, %ebp
.Ltmp1639:
	.loc	9 0 0 is_stmt 0
	xorl	%r15d, %r15d
	xorl	%r12d, %r12d
.Ltmp1640:
	.loc	9 118 3 is_stmt 1
	testq	%r13, %r13
	jne	.LBB67_31
	jmp	.LBB67_30
.Ltmp1641:
.LBB67_19:
.Ltmp1573:
	.loc	9 105 2
	movl	$.Lconst.302, %edx
	movl	$9, %ecx
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	runtime.eqstring
.Ltmp1574:
.Ltmp1642:
	cmpb	$1, %al
	jne	.LBB67_35
.Ltmp1643:
.Ltmp1585:
	.loc	9 106 13
	movq	32(%rbx), %rax
	movq	%rax, 32(%rsp)
	movups	(%rbx), %xmm0
	movups	16(%rbx), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	leaq	552(%rsp), %rdi
	movq	%r13, %rsi
	callq	command_line_arguments.Srv.executeAuthorize
.Ltmp1586:
.Ltmp1644:
	.loc	9 0 13 is_stmt 0
	movups	552(%rsp), %xmm0
	movaps	%xmm0, 112(%rsp)
	movb	568(%rsp), %bpl
.Ltmp1645:
	movups	569(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	movups	585(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	600(%rsp), %xmm0
	movups	%xmm0, 79(%rsp)
	movups	616(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	632(%rsp), %r15
.Ltmp1646:
	movq	640(%rsp), %r12
.Ltmp1647:
	.loc	9 118 3 is_stmt 1
	testq	%r13, %r13
	jne	.LBB67_31
	jmp	.LBB67_30
.Ltmp1648:
.LBB67_35:
.Ltmp1575:
	.loc	9 107 2
	movl	$.Lconst.304, %edx
	movl	$6, %ecx
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	runtime.eqstring
.Ltmp1576:
.Ltmp1649:
	cmpb	$1, %al
	jne	.LBB67_39
.Ltmp1650:
.Ltmp1583:
	.loc	9 108 13
	movq	32(%rbx), %rax
	movq	%rax, 32(%rsp)
	movups	(%rbx), %xmm0
	movups	16(%rbx), %xmm1
	movups	%xmm1, 16(%rsp)
	movups	%xmm0, (%rsp)
	leaq	456(%rsp), %rdi
	movq	%r13, %rsi
	callq	command_line_arguments.Srv.executeRevoke
.Ltmp1584:
.Ltmp1651:
	.loc	9 0 13 is_stmt 0
	movups	456(%rsp), %xmm0
	movaps	%xmm0, 112(%rsp)
	movb	472(%rsp), %bpl
.Ltmp1652:
	movups	473(%rsp), %xmm0
	movaps	%xmm0, 48(%rsp)
	movups	489(%rsp), %xmm0
	movaps	%xmm0, 64(%rsp)
	movups	504(%rsp), %xmm0
	movups	%xmm0, 79(%rsp)
	movups	520(%rsp), %xmm0
	movaps	%xmm0, 96(%rsp)
	movq	536(%rsp), %r15
.Ltmp1653:
	movq	544(%rsp), %r12
.Ltmp1654:
	.loc	9 118 3 is_stmt 1
	testq	%r13, %r13
	jne	.LBB67_31
	jmp	.LBB67_30
.Ltmp1655:
.LBB67_39:
	.loc	9 110 21
	movups	.Lconst.307(%rip), %xmm0
	movaps	%xmm0, 96(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 288(%rsp)
.Ltmp1577:
	.loc	9 111 30
	movl	$github_com_spolu_warp.CommandType..d, %edi
	callq	runtime.newobject
.Ltmp1578:
.Ltmp1656:
	.loc	9 0 30 is_stmt 0
	movq	%rax, %rbx
.Ltmp1657:
	movaps	288(%rsp), %xmm0
	movaps	%xmm0, 272(%rsp)
.Ltmp1579:
	leaq	272(%rsp), %rdx
	.loc	9 111 30
	movl	$github_com_spolu_warp.CommandType..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1580:
.Ltmp1658:
	movq	$github_com_spolu_warp.CommandType..d, 224(%rsp)
	movq	%rbx, 232(%rsp)
	leaq	224(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	$1, 168(%rsp)
	movq	$1, 176(%rsp)
.Ltmp1581:
	movq	176(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	160(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.308, %edi
	movl	$19, %esi
	callq	fmt.Sprintf
.Ltmp1582:
.Ltmp1659:
	.loc	9 0 30
	movq	%rax, %r15
	movq	%rdx, %r12
.Ltmp1660:
	xorl	%ebp, %ebp
.Ltmp1661:
	.loc	9 118 3 is_stmt 1
	testq	%r13, %r13
	jne	.LBB67_31
.Ltmp1662:
.LBB67_30:
.Ltmp1587:
	movl	$6, %edi
	callq	__go_runtime_error
.Ltmp1588:
.Ltmp1663:
.LBB67_31:
	movq	40(%r13), %rdi
.Ltmp1589:
	.loc	9 118 9 is_stmt 0
	callq	sync.Mutex.Lock
.Ltmp1590:
.Ltmp1664:
	.loc	9 119 6 is_stmt 1
	movq	16(%r13), %rsi
	.loc	9 119 15 is_stmt 0
	testq	%rsi, %rsi
	je	.LBB67_43
.Ltmp1665:
.Ltmp1591:
	.loc	9 0 15
	leaq	312(%rsp), %rdi
	.loc	9 120 34 is_stmt 1
	callq	command_line_arguments.Session.ProtocolState
.Ltmp1592:
.Ltmp1666:
	.loc	9 120 23 is_stmt 0
	movq	344(%rsp), %rax
	movq	%rax, 87(%rsp)
	movups	312(%rsp), %xmm0
	movups	328(%rsp), %xmm1
	movups	%xmm1, 71(%rsp)
	movups	%xmm0, 55(%rsp)
	jmp	.LBB67_44
.Ltmp1667:
.LBB67_43:
	.loc	9 122 28 is_stmt 1
	movups	(%r13), %xmm0
	movups	%xmm0, 55(%rsp)
.Ltmp1668:
	.loc	9 0 28 is_stmt 0
	movb	$1, %bpl
.Ltmp1669:
.LBB67_44:
	.loc	9 125 3 is_stmt 1
	movq	40(%r13), %rdi
.Ltmp1593:
	.loc	9 125 9 is_stmt 0
	callq	sync.Mutex.Unlock
.Ltmp1594:
.Ltmp1670:
.Ltmp1595:
	.loc	9 127 28 is_stmt 1
	movl	$github_com_spolu_warp.CommandResult..d, %edi
	callq	runtime.newobject
.Ltmp1596:
.Ltmp1671:
	.loc	9 0 28 is_stmt 0
	movq	%rax, %rbx
	movaps	112(%rsp), %xmm0
	movaps	%xmm0, 352(%rsp)
	movb	%bpl, 368(%rsp)
	movaps	48(%rsp), %xmm0
	movaps	64(%rsp), %xmm1
	movups	%xmm0, 369(%rsp)
	movups	%xmm1, 385(%rsp)
	movups	79(%rsp), %xmm0
	movups	%xmm0, 400(%rsp)
	movaps	96(%rsp), %xmm0
	movaps	%xmm0, 416(%rsp)
	movq	%r15, 432(%rsp)
	movq	%r12, 440(%rsp)
.Ltmp1597:
	leaq	352(%rsp), %rdx
	.loc	9 127 28
	movl	$github_com_spolu_warp.CommandResult..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
.Ltmp1598:
.Ltmp1672:
.Ltmp1599:
	.loc	9 127 20
	movl	$github_com_spolu_warp.CommandResult..d, %esi
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	encoding_gob.Encoder.Encode
.Ltmp1600:
.Ltmp1673:
	.loc	9 0 20
	movb	$1, %bpl
.Ltmp1674:
	.loc	9 127 41
	testq	%rax, %rax
	je	.LBB67_49
.Ltmp1675:
	.loc	9 129 53 is_stmt 1
	movq	(%rax), %rax
	.loc	9 129 11 is_stmt 0
	movq	%rax, 208(%rsp)
	movq	%rdx, 216(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 184(%rsp)
	movq	$1, 192(%rsp)
	movq	$1, 200(%rsp)
.Ltmp1601:
	movq	200(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	184(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.310, %edi
	movl	$33, %esi
	callq	github_com_spolu_warp_lib_errors.Newf
.Ltmp1676:
.Ltmp1602:
.Ltmp1603:
	.loc	9 128 17 is_stmt 1
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	github_com_spolu_warp_lib_errors.Trace
.Ltmp1604:
.Ltmp1677:
	.loc	9 0 17 is_stmt 0
	movq	%rax, %r14
.Ltmp1678:
	movq	%rdx, %r12
.Ltmp1679:
	leaq	47(%rsp), %rbx
	jmp	.LBB67_55
.Ltmp1680:
.LBB67_5:
.Ltmp1605:
.Ltmp1606:
	leaq	47(%rsp), %rdi
	.loc	9 134 1 is_stmt 1
	callq	runtime.checkdefer
.Ltmp1607:
.Ltmp1681:
	.loc	9 0 1 is_stmt 0
	movb	$1, %bpl
.Ltmp1682:
.LBB67_49:
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
.Ltmp1683:
	leaq	47(%rsp), %rbx
	jmp	.LBB67_55
.Ltmp1684:
.LBB67_53:
.Ltmp1608:
	movq	%rax, %r15
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
	xorl	%ebp, %ebp
.Ltmp1685:
	leaq	47(%rsp), %rbx
	jmp	.LBB67_55
.Ltmp1686:
.LBB67_54:
.Ltmp1611:
	.loc	9 134 1
	movq	%rbx, %rdi
	callq	runtime.checkdefer
.Ltmp1687:
	.p2align	4, 0x90
.LBB67_55:
.Ltmp1609:
	movq	%rbx, %rdi
	callq	runtime.deferreturn
.Ltmp1610:
.Ltmp1688:
	.loc	9 0 1
	testb	%bpl, %bpl
	je	.LBB67_59
.Ltmp1689:
	.loc	9 95 3 is_stmt 1
	movq	%r14, %rax
	movq	%r12, %rdx
	addq	$648, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1690:
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1691:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1692:
.LBB67_59:
	.cfi_def_cfa_offset 704
	.loc	9 0 3 is_stmt 0
	movq	%r15, %rdi
	callq	_Unwind_Resume
.Lfunc_end67:
	.size	command_line_arguments.Srv.handle, .Lfunc_end67-command_line_arguments.Srv.handle
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table67:
.Lexception19:
	.byte	255
	.byte	3
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin67-.Lfunc_begin67
	.uleb128 .Ltmp1553-.Lfunc_begin67
	.byte	0
	.byte	0
	.uleb128 .Ltmp1553-.Lfunc_begin67
	.uleb128 .Ltmp1604-.Ltmp1553
	.uleb128 .Ltmp1605-.Lfunc_begin67
	.byte	1
	.uleb128 .Ltmp1606-.Lfunc_begin67
	.uleb128 .Ltmp1607-.Ltmp1606
	.uleb128 .Ltmp1608-.Lfunc_begin67
	.byte	0
	.uleb128 .Ltmp1607-.Lfunc_begin67
	.uleb128 .Ltmp1609-.Ltmp1607
	.byte	0
	.byte	0
	.uleb128 .Ltmp1609-.Lfunc_begin67
	.uleb128 .Ltmp1610-.Ltmp1609
	.uleb128 .Ltmp1611-.Lfunc_begin67
	.byte	1
	.uleb128 .Ltmp1610-.Lfunc_begin67
	.uleb128 .Lfunc_end67-.Ltmp1610
	.byte	0
	.byte	0
.Lcst_end19:
	.byte	1
	.byte	0
	.p2align	2
	.long	0
.Lttbase19:
	.p2align	2

	.section	.text.command_line_arguments.NewSrv,"ax",@progbits
	.globl	command_line_arguments.NewSrv
	.p2align	4, 0x90
	.type	command_line_arguments.NewSrv,@function
command_line_arguments.NewSrv:
.Lfunc_begin68:
	.loc	9 30 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB68_2
	movq	%r10, %rax
	movabsq	$232, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB68_2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$184, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
.Ltmp1693:
	.loc	9 38 7 prologue_end
	callq	os.TempDir
.Ltmp1694:
	movq	%rax, %r13
	movq	%rdx, %r12
	.loc	9 39 8
	movl	$string..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	%r15, 88(%rsp)
	movq	%r14, 96(%rsp)
	leaq	88(%rsp), %rdx
	movl	$string..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	movq	$string..d, 72(%rsp)
	movq	%rbx, 80(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 24(%rsp)
	movq	$1, 32(%rsp)
	movq	$1, 40(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	24(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	movl	$.Lconst.108, %edi
	movl	$13, %esi
	callq	fmt.Sprintf
	.loc	9 37 14
	movq	%r13, 104(%rsp)
	movq	%r12, 112(%rsp)
	movq	%rax, 120(%rsp)
	movq	%rdx, 128(%rsp)
	leaq	104(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	$2, 56(%rsp)
	movq	$2, 64(%rsp)
	movq	64(%rsp), %rax
	movq	%rax, 16(%rsp)
	movups	48(%rsp), %xmm0
	movups	%xmm0, (%rsp)
	callq	path.Join
	movq	%rax, %r13
	movq	%rdx, %r12
	.loc	9 41 10
	movl	$sync.Mutex..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbx
	movq	$0, (%rax)
	.loc	9 34 9
	movl	$command_line_arguments.Srv..d, %edi
	callq	runtime.newobject
	movq	%rax, %rbp
.Ltmp1695:
	.loc	9 34 10 is_stmt 0
	movq	%r15, 136(%rsp)
	movq	%r14, 144(%rsp)
	movq	$0, 152(%rsp)
	movq	%r13, 160(%rsp)
	movq	%r12, 168(%rsp)
	movq	%rbx, 176(%rsp)
	leaq	136(%rsp), %rdx
	.loc	9 34 9
	movl	$command_line_arguments.Srv..d, %edi
	movq	%rax, %rsi
	callq	runtime.typedmemmove
	.loc	9 34 2
	movq	%rbp, %rax
	addq	$184, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1696:
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1697:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1698:
.Lfunc_end68:
	.size	command_line_arguments.NewSrv, .Lfunc_end68-command_line_arguments.NewSrv
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk15,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk15,@function
command_line_arguments.command_line_arguments..thunk15:
.Lfunc_begin69:
	.loc	9 54 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB69_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB69_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1699:
	.loc	9 54 2 prologue_end
	movl	$.Ltmp1700, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB69_4
.Ltmp1701:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1702:
.Ltmp1700:
.LBB69_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1703:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1704:
.Lfunc_end69:
	.size	command_line_arguments.command_line_arguments..thunk15, .Lfunc_end69-command_line_arguments.command_line_arguments..thunk15
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk16,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk16,@function
command_line_arguments.command_line_arguments..thunk16:
.Lfunc_begin70:
	.loc	9 70 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB70_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB70_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1705:
	.loc	9 70 2 prologue_end
	movl	$.Ltmp1706, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB70_4
.Ltmp1707:
	.loc	9 0 2 is_stmt 0
	movq	(%rbx), %rax
	movq	8(%rbx), %rdi
	.loc	9 70 2
	callq	*24(%rax)
.Ltmp1708:
.Ltmp1706:
.LBB70_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1709:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1710:
.Lfunc_end70:
	.size	command_line_arguments.command_line_arguments..thunk16, .Lfunc_end70-command_line_arguments.command_line_arguments..thunk16
	.cfi_endproc

	.section	.text.command_line_arguments..1command_line_arguments.Srv.Run..func1,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments..1command_line_arguments.Srv.Run..func1,@function
command_line_arguments..1command_line_arguments.Srv.Run..func1:
.Lfunc_begin71:
	.loc	9 77 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB71_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB71_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1711:
	.loc	9 78 4 prologue_end
	movq	8(%r10), %rax
	.loc	9 78 18 is_stmt 0
	movq	24(%r10), %rdx
	.loc	9 78 4
	movq	(%rax), %rdi
	.loc	9 78 5
	movq	(%rdx), %rcx
	movq	8(%rdx), %r8
	callq	command_line_arguments.Srv.handle
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1712:
.Lfunc_end71:
	.size	command_line_arguments..1command_line_arguments.Srv.Run..func1, .Lfunc_end71-command_line_arguments..1command_line_arguments.Srv.Run..func1
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk17,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk17,@function
command_line_arguments.command_line_arguments..thunk17:
.Lfunc_begin72:
	.loc	9 77 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB72_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB72_2:
	pushq	%rax
	.cfi_def_cfa_offset 16
.Ltmp1713:
	.loc	9 77 3 prologue_end
	movq	(%rdi), %r10
	callq	*(%r10)
.Ltmp1714:
	.loc	9 0 3 is_stmt 0
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1715:
.Lfunc_end72:
	.size	command_line_arguments.command_line_arguments..thunk17, .Lfunc_end72-command_line_arguments.command_line_arguments..thunk17
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk18,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk18,@function
command_line_arguments.command_line_arguments..thunk18:
.Lfunc_begin73:
	.loc	9 88 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB73_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB73_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1716:
	.loc	9 88 2 prologue_end
	movl	$.Ltmp1717, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB73_4
.Ltmp1718:
	.loc	9 0 2 is_stmt 0
	movq	(%rbx), %rax
	movq	8(%rbx), %rdi
	.loc	9 88 2
	callq	*8(%rax)
.Ltmp1719:
.Ltmp1717:
.LBB73_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1720:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1721:
.Lfunc_end73:
	.size	command_line_arguments.command_line_arguments..thunk18, .Lfunc_end73-command_line_arguments.command_line_arguments..thunk18
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk19,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk19,@function
command_line_arguments.command_line_arguments..thunk19:
.Lfunc_begin74:
	.loc	9 153 0 is_stmt 1
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB74_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB74_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1722:
	.loc	9 153 2 prologue_end
	movl	$.Ltmp1723, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB74_4
.Ltmp1724:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1725:
.Ltmp1723:
.LBB74_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1726:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1727:
.Lfunc_end74:
	.size	command_line_arguments.command_line_arguments..thunk19, .Lfunc_end74-command_line_arguments.command_line_arguments..thunk19
	.cfi_endproc

	.section	.text.command_line_arguments.command_line_arguments..thunk20,"ax",@progbits
	.p2align	4, 0x90
	.type	command_line_arguments.command_line_arguments..thunk20,@function
command_line_arguments.command_line_arguments..thunk20:
.Lfunc_begin75:
	.loc	9 224 0
	.cfi_startproc
	cmpq	%fs:112, %rsp
	ja	.LBB75_2
	movq	%r10, %rax
	movabsq	$8, %r10
	movabsq	$0, %r11
	callq	__morestack
	retq
	movq	%rax, %r10
.LBB75_2:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1728:
	.loc	9 224 2 prologue_end
	movl	$.Ltmp1729, %edi
	callq	runtime.setdeferretaddr
	testb	$1, %al
	jne	.LBB75_4
.Ltmp1730:
	movq	(%rbx), %rdi
	callq	sync.Mutex.Unlock
.Ltmp1731:
.Ltmp1729:
.LBB75_4:
	xorl	%eax, %eax
	popq	%rbx
.Ltmp1732:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1733:
.Lfunc_end75:
	.size	command_line_arguments.command_line_arguments..thunk20, .Lfunc_end75-command_line_arguments.command_line_arguments..thunk20
	.cfi_endproc

	.type	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,@object
	.section	.rodata.imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,"aG",@progbits,imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,comdat
	.weak	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype
	.p2align	4
imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype:
	.quad	reflect..reflect.rtype..d
	.quad	reflect.rtype.Align
	.quad	reflect.rtype.AssignableTo
	.quad	reflect.rtype.Bits
	.quad	reflect.rtype.ChanDir
	.quad	reflect.rtype.Comparable
	.quad	reflect.rtype.ConvertibleTo
	.quad	reflect.rtype.Elem
	.quad	reflect.rtype.Field
	.quad	reflect.rtype.FieldAlign
	.quad	reflect.rtype.FieldByIndex
	.quad	reflect.rtype.FieldByName
	.quad	reflect.rtype.FieldByNameFunc
	.quad	reflect.rtype.Implements
	.quad	reflect.rtype.In
	.quad	reflect.rtype.IsVariadic
	.quad	reflect.rtype.Key
	.quad	reflect.rtype.Kind
	.quad	reflect.rtype.Len
	.quad	reflect.rtype.Method
	.quad	reflect.rtype.MethodByName
	.quad	reflect.rtype.Name
	.quad	reflect.rtype.NumField
	.quad	reflect.rtype.NumIn
	.quad	reflect.rtype.NumMethod
	.quad	reflect.rtype.NumOut
	.quad	reflect.rtype.Out
	.quad	reflect.rtype.PkgPath
	.quad	reflect.rtype.Size
	.quad	reflect.rtype.String
	.quad	reflect.rtype.common
	.quad	reflect.rtype.rawString
	.quad	reflect.rtype.uncommon..stub
	.size	imt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype, 264

	.type	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,@object
	.section	.rodata.pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,"aG",@progbits,pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype,comdat
	.weak	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype
	.p2align	4
pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype:
	.quad	type...1reflect.rtype
	.quad	reflect.rtype.Align
	.quad	reflect.rtype.AssignableTo
	.quad	reflect.rtype.Bits
	.quad	reflect.rtype.ChanDir
	.quad	reflect.rtype.Comparable
	.quad	reflect.rtype.ConvertibleTo
	.quad	reflect.rtype.Elem
	.quad	reflect.rtype.Field
	.quad	reflect.rtype.FieldAlign
	.quad	reflect.rtype.FieldByIndex
	.quad	reflect.rtype.FieldByName
	.quad	reflect.rtype.FieldByNameFunc
	.quad	reflect.rtype.Implements
	.quad	reflect.rtype.In
	.quad	reflect.rtype.IsVariadic
	.quad	reflect.rtype.Key
	.quad	reflect.rtype.Kind
	.quad	reflect.rtype.Len
	.quad	reflect.rtype.Method
	.quad	reflect.rtype.MethodByName
	.quad	reflect.rtype.Name
	.quad	reflect.rtype.NumField
	.quad	reflect.rtype.NumIn
	.quad	reflect.rtype.NumMethod
	.quad	reflect.rtype.NumOut
	.quad	reflect.rtype.Out
	.quad	reflect.rtype.PkgPath
	.quad	reflect.rtype.Size
	.quad	reflect.rtype.String
	.quad	reflect.rtype.common
	.quad	reflect.rtype.rawString
	.quad	reflect.rtype.uncommon..stub
	.size	pimt..interface.4Align.0func.8.9.8int.9.2AssignableTo.0func.8reflect.Type.9.8bool.9.2Bits.0func.8.9.8int.9.2ChanDir.0func.8.9.8reflect.ChanDir.9.2Comparable.0func.8.9.8bool.9.2ConvertibleTo.0func.8reflect.Type.9.8bool.9.2Elem.0func.8.9.8reflect.Type.9.2Field.0func.8int.9.8reflect.StructField.9.2FieldAlign.0func.8.9.8int.9.2FieldByIndex.0func.8.6.7int.9.8reflect.StructField.9.2FieldByName.0func.8string.9.8reflect.StructField.3bool.9.2FieldByNameFunc.0func.8func.8string.9.8bool.9.9.8reflect.StructField.3bool.9.2Implements.0func.8reflect.Type.9.8bool.9.2In.0func.8int.9.8reflect.Type.9.2IsVariadic.0func.8.9.8bool.9.2Key.0func.8.9.8reflect.Type.9.2Kind.0func.8.9.8reflect.Kind.9.2Len.0func.8.9.8int.9.2Method.0func.8int.9.8reflect.Method.9.2MethodByName.0func.8string.9.8reflect.Method.3bool.9.2Name.0func.8.9.8string.9.2NumField.0func.8.9.8int.9.2NumIn.0func.8.9.8int.9.2NumMethod.0func.8.9.8int.9.2NumOut.0func.8.9.8int.9.2Out.0func.8int.9.8reflect.Type.9.2PkgPath.0func.8.9.8string.9.2Size.0func.8.9.8uintptr.9.2String.0func.8.9.8string.9.2.reflect.common.0func.8.9.8.1reflect.rtype.9.2.reflect.rawString.0func.8.9.8string.9.2.reflect.uncommon.0func.8.9.8.1reflect.uncommonType.9.5..reflect.rtype, 264

	.type	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4,@object
	.section	.rodata.imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4,"aG",@progbits,imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4,comdat
	.weak	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4
	.p2align	3
imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4:
	.quad	syscall.SockaddrInet4..d
	.quad	syscall.SockaddrInet4.sockaddr
	.size	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4, 16

	.type	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4,@object
	.section	.rodata.pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4,"aG",@progbits,pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4,comdat
	.weak	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4
	.p2align	3
pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4:
	.quad	type...1syscall.SockaddrInet4
	.quad	syscall.SockaddrInet4.sockaddr
	.size	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet4, 16

	.type	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6,@object
	.section	.rodata.imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6,"aG",@progbits,imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6,comdat
	.weak	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6
	.p2align	3
imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6:
	.quad	syscall.SockaddrInet6..d
	.quad	syscall.SockaddrInet6.sockaddr
	.size	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6, 16

	.type	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6,@object
	.section	.rodata.pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6,"aG",@progbits,pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6,comdat
	.weak	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6
	.p2align	3
pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6:
	.quad	type...1syscall.SockaddrInet6
	.quad	syscall.SockaddrInet6.sockaddr
	.size	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrInet6, 16

	.type	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer,@object
	.section	.rodata.imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer,"aG",@progbits,imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer,comdat
	.weak	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer
	.p2align	3
imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer:
	.quad	syscall.SockaddrLinklayer..d
	.quad	syscall.SockaddrLinklayer.sockaddr
	.size	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer, 16

	.type	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer,@object
	.section	.rodata.pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer,"aG",@progbits,pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer,comdat
	.weak	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer
	.p2align	3
pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer:
	.quad	type...1syscall.SockaddrLinklayer
	.quad	syscall.SockaddrLinklayer.sockaddr
	.size	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrLinklayer, 16

	.type	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink,@object
	.section	.rodata.imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink,"aG",@progbits,imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink,comdat
	.weak	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink
	.p2align	3
imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink:
	.quad	syscall.SockaddrNetlink..d
	.quad	syscall.SockaddrNetlink.sockaddr
	.size	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink, 16

	.type	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink,@object
	.section	.rodata.pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink,"aG",@progbits,pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink,comdat
	.weak	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink
	.p2align	3
pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink:
	.quad	type...1syscall.SockaddrNetlink
	.quad	syscall.SockaddrNetlink.sockaddr
	.size	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrNetlink, 16

	.type	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix,@object
	.section	.rodata.imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix,"aG",@progbits,imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix,comdat
	.weak	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix
	.p2align	3
imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix:
	.quad	syscall.SockaddrUnix..d
	.quad	syscall.SockaddrUnix.sockaddr
	.size	imt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix, 16

	.type	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix,@object
	.section	.rodata.pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix,"aG",@progbits,pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix,comdat
	.weak	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix
	.p2align	3
pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix:
	.quad	type...1syscall.SockaddrUnix
	.quad	syscall.SockaddrUnix.sockaddr
	.size	pimt..interface.4.syscall.sockaddr.0func.8.9.8.1syscall.RawSockaddrAny.3syscall.Socklen_t.3error.9.5..syscall.SockaddrUnix, 16

	.type	command_line_arguments.CmdName..d,@object
	.section	.rodata.command_line_arguments.CmdName..d,"a",@progbits
	.globl	command_line_arguments.CmdName..d
	.p2align	4
command_line_arguments.CmdName..d:
	.quad	16
	.quad	8
	.long	2538056949
	.byte	24
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.strhash..f
	.quad	runtime.strequal..f
	.quad	gcbits..ba
	.quad	go..C1
	.quad	go..C5
	.quad	type...1command_line_arguments.CmdName
	.size	command_line_arguments.CmdName..d, 72

	.type	gcbits..ba,@object
	.section	.rodata.gcbits..ba,"aG",@progbits,gcbits..ba,comdat
	.weak	gcbits..ba
gcbits..ba:
	.byte	1
	.size	gcbits..ba, 1

	.type	.Lconst.0,@object
	.section	.rodata..Lconst.0,"a",@progbits
.Lconst.0:
	.asciz	"\tcommand_line_arguments\tcli.CmdName"
	.size	.Lconst.0, 36

	.type	go..C1,@object
	.section	.rodata.go..C1,"a",@progbits
	.p2align	3
go..C1:
	.quad	.Lconst.0
	.quad	35
	.size	go..C1, 16

	.type	.Lconst.1,@object
	.section	.rodata..Lconst.1,"a",@progbits
.Lconst.1:
	.asciz	"CmdName"
	.size	.Lconst.1, 8

	.type	go..C2,@object
	.section	.rodata.go..C2,"a",@progbits
	.p2align	3
go..C2:
	.quad	.Lconst.1
	.quad	7
	.size	go..C2, 16

	.type	.Lconst.2,@object
	.section	.rodata..Lconst.2,"a",@progbits
.Lconst.2:
	.asciz	"command-line-arguments"
	.size	.Lconst.2, 23

	.type	go..C3,@object
	.section	.rodata.go..C3,"a",@progbits
	.p2align	3
go..C3:
	.quad	.Lconst.2
	.quad	22
	.size	go..C3, 16

	.type	go..C4,@object
	.section	.bss.go..C4,"aw",@nobits
	.p2align	4
go..C4:
	.zero	40
	.size	go..C4, 40

	.type	go..C5,@object
	.section	.rodata.go..C5,"a",@progbits
	.p2align	4
go..C5:
	.quad	go..C2
	.quad	go..C3
	.quad	go..C4
	.quad	0
	.quad	0
	.size	go..C5, 40

	.type	type...1command_line_arguments.CmdName,@object
	.section	.rodata.type...1command_line_arguments.CmdName,"aG",@progbits,type...1command_line_arguments.CmdName,comdat
	.weak	type...1command_line_arguments.CmdName
	.p2align	4
type...1command_line_arguments.CmdName:
	.quad	8
	.quad	8
	.long	1954205529
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C6
	.quad	0
	.quad	0
	.quad	command_line_arguments.CmdName..d
	.size	type...1command_line_arguments.CmdName, 80

	.type	.Lconst.3,@object
	.section	.rodata..Lconst.3,"a",@progbits
.Lconst.3:
	.asciz	"*\tcommand_line_arguments\tcli.CmdName"
	.size	.Lconst.3, 37

	.type	go..C6,@object
	.section	.rodata.go..C6,"a",@progbits
	.p2align	3
go..C6:
	.quad	.Lconst.3
	.quad	36
	.size	go..C6, 16

	.type	command_line_arguments.Command..d,@object
	.section	.rodata.command_line_arguments.Command..d,"a",@progbits
	.globl	command_line_arguments.Command..d
	.p2align	4
command_line_arguments.Command..d:
	.quad	16
	.quad	16
	.long	2092728491
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C7
	.quad	go..C11
	.quad	type...1command_line_arguments.Command
	.quad	go..C92
	.quad	4
	.quad	4
	.size	command_line_arguments.Command..d, 96

	.type	gcbits..da,@object
	.section	.rodata.gcbits..da,"aG",@progbits,gcbits..da,comdat
	.weak	gcbits..da
gcbits..da:
	.byte	3
	.size	gcbits..da, 1

	.type	.Lconst.4,@object
	.section	.rodata..Lconst.4,"a",@progbits
.Lconst.4:
	.asciz	"\tcommand_line_arguments\tcli.Command"
	.size	.Lconst.4, 36

	.type	go..C7,@object
	.section	.rodata.go..C7,"a",@progbits
	.p2align	3
go..C7:
	.quad	.Lconst.4
	.quad	35
	.size	go..C7, 16

	.type	.Lconst.5,@object
	.section	.rodata..Lconst.5,"a",@progbits
.Lconst.5:
	.asciz	"Command"
	.size	.Lconst.5, 8

	.type	go..C8,@object
	.section	.rodata.go..C8,"a",@progbits
	.p2align	3
go..C8:
	.quad	.Lconst.5
	.quad	7
	.size	go..C8, 16

	.type	go..C9,@object
	.section	.rodata.go..C9,"a",@progbits
	.p2align	3
go..C9:
	.quad	.Lconst.2
	.quad	22
	.size	go..C9, 16

	.type	go..C10,@object
	.section	.bss.go..C10,"aw",@nobits
	.p2align	4
go..C10:
	.zero	40
	.size	go..C10, 40

	.type	go..C11,@object
	.section	.rodata.go..C11,"a",@progbits
	.p2align	4
go..C11:
	.quad	go..C8
	.quad	go..C9
	.quad	go..C10
	.quad	0
	.quad	0
	.size	go..C11, 40

	.type	type...1command_line_arguments.Command,@object
	.section	.rodata.type...1command_line_arguments.Command,"aG",@progbits,type...1command_line_arguments.Command,comdat
	.weak	type...1command_line_arguments.Command
	.p2align	4
type...1command_line_arguments.Command:
	.quad	8
	.quad	8
	.long	3418884793
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C12
	.quad	0
	.quad	0
	.quad	command_line_arguments.Command..d
	.size	type...1command_line_arguments.Command, 80

	.type	.Lconst.6,@object
	.section	.rodata..Lconst.6,"a",@progbits
.Lconst.6:
	.asciz	"*\tcommand_line_arguments\tcli.Command"
	.size	.Lconst.6, 37

	.type	go..C12,@object
	.section	.rodata.go..C12,"a",@progbits
	.p2align	3
go..C12:
	.quad	.Lconst.6
	.quad	36
	.size	go..C12, 16

	.type	.Lconst.7,@object
	.section	.rodata..Lconst.7,"a",@progbits
.Lconst.7:
	.asciz	"Execute"
	.size	.Lconst.7, 8

	.type	go..C13,@object
	.section	.rodata.go..C13,"a",@progbits
	.p2align	3
go..C13:
	.quad	.Lconst.7
	.quad	7
	.size	go..C13, 16

	.type	type..func.8context.Context.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.9.8error.9,"aG",@progbits,type..func.8context.Context.9.8error.9,comdat
	.weak	type..func.8context.Context.9.8error.9
	.p2align	4
type..func.8context.Context.9.8error.9:
	.quad	8
	.quad	8
	.long	2504620840
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C14
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C15
	.quad	1
	.quad	1
	.quad	go..C31
	.quad	1
	.quad	1
	.size	type..func.8context.Context.9.8error.9, 128

	.type	.Lconst.8,@object
	.section	.rodata..Lconst.8,"a",@progbits
.Lconst.8:
	.asciz	"func(\tcontext\tcontext.Context) error"
	.size	.Lconst.8, 37

	.type	go..C14,@object
	.section	.rodata.go..C14,"a",@progbits
	.p2align	3
go..C14:
	.quad	.Lconst.8
	.quad	36
	.size	go..C14, 16

	.type	go..C15,@object
	.section	.data.go..C15,"aw",@progbits
	.p2align	3
go..C15:
	.quad	context.Context..d
	.size	go..C15, 8

	.type	error..d,@object
	.section	.rodata.error..d,"aG",@progbits,error..d,comdat
	.weak	error..d
	.p2align	4
error..d:
	.quad	16
	.quad	16
	.long	2166057687
	.byte	20
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.interhash..f
	.quad	runtime.interequal..f
	.quad	gcbits..da
	.quad	go..C16
	.quad	go..C19
	.quad	type...1error
	.quad	go..C30
	.quad	1
	.quad	1
	.size	error..d, 96

	.type	.Lconst.9,@object
	.section	.rodata..Lconst.9,"a",@progbits
.Lconst.9:
	.asciz	"error"
	.size	.Lconst.9, 6

	.type	go..C16,@object
	.section	.rodata.go..C16,"a",@progbits
	.p2align	3
go..C16:
	.quad	.Lconst.9
	.quad	5
	.size	go..C16, 16

	.type	go..C17,@object
	.section	.rodata.go..C17,"a",@progbits
	.p2align	3
go..C17:
	.quad	.Lconst.9
	.quad	5
	.size	go..C17, 16

	.type	go..C18,@object
	.section	.bss.go..C18,"aw",@nobits
	.p2align	4
go..C18:
	.zero	40
	.size	go..C18, 40

	.type	go..C19,@object
	.section	.rodata.go..C19,"a",@progbits
	.p2align	4
go..C19:
	.quad	go..C17
	.quad	0
	.quad	go..C18
	.quad	0
	.quad	0
	.size	go..C19, 40

	.type	type...1error,@object
	.section	.rodata.type...1error,"aG",@progbits,type...1error,comdat
	.weak	type...1error
	.p2align	4
type...1error:
	.quad	8
	.quad	8
	.long	297184633
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C20
	.quad	0
	.quad	0
	.quad	error..d
	.size	type...1error, 80

	.type	.Lconst.10,@object
	.section	.rodata..Lconst.10,"a",@progbits
.Lconst.10:
	.asciz	"*error"
	.size	.Lconst.10, 7

	.type	go..C20,@object
	.section	.rodata.go..C20,"a",@progbits
	.p2align	3
go..C20:
	.quad	.Lconst.10
	.quad	6
	.size	go..C20, 16

	.type	.Lconst.11,@object
	.section	.rodata..Lconst.11,"a",@progbits
.Lconst.11:
	.asciz	"Error"
	.size	.Lconst.11, 6

	.type	go..C21,@object
	.section	.rodata.go..C21,"a",@progbits
	.p2align	3
go..C21:
	.quad	.Lconst.11
	.quad	5
	.size	go..C21, 16

	.type	type..func.8.9.8string.9,@object
	.section	.rodata.type..func.8.9.8string.9,"aG",@progbits,type..func.8.9.8string.9,comdat
	.weak	type..func.8.9.8string.9
	.p2align	4
type..func.8.9.8string.9:
	.quad	8
	.quad	8
	.long	916039304
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C22
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C23
	.quad	0
	.quad	0
	.quad	go..C29
	.quad	1
	.quad	1
	.size	type..func.8.9.8string.9, 128

	.type	.Lconst.12,@object
	.section	.rodata..Lconst.12,"a",@progbits
.Lconst.12:
	.asciz	"func() string"
	.size	.Lconst.12, 14

	.type	go..C22,@object
	.section	.rodata.go..C22,"a",@progbits
	.p2align	3
go..C22:
	.quad	.Lconst.12
	.quad	13
	.size	go..C22, 16

	.type	go..C23,@object
	.section	.bss.go..C23,"aw",@nobits
	.p2align	3
go..C23:
	.zero	8
	.size	go..C23, 8

	.type	string..d,@object
	.section	.rodata.string..d,"aG",@progbits,string..d,comdat
	.weak	string..d
	.p2align	4
string..d:
	.quad	16
	.quad	8
	.long	2296014490
	.byte	24
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.strhash..f
	.quad	runtime.strequal..f
	.quad	gcbits..ba
	.quad	go..C24
	.quad	go..C27
	.quad	type...1string
	.size	string..d, 72

	.type	.Lconst.13,@object
	.section	.rodata..Lconst.13,"a",@progbits
.Lconst.13:
	.asciz	"string"
	.size	.Lconst.13, 7

	.type	go..C24,@object
	.section	.rodata.go..C24,"a",@progbits
	.p2align	3
go..C24:
	.quad	.Lconst.13
	.quad	6
	.size	go..C24, 16

	.type	go..C25,@object
	.section	.rodata.go..C25,"a",@progbits
	.p2align	3
go..C25:
	.quad	.Lconst.13
	.quad	6
	.size	go..C25, 16

	.type	go..C26,@object
	.section	.bss.go..C26,"aw",@nobits
	.p2align	4
go..C26:
	.zero	40
	.size	go..C26, 40

	.type	go..C27,@object
	.section	.rodata.go..C27,"a",@progbits
	.p2align	4
go..C27:
	.quad	go..C25
	.quad	0
	.quad	go..C26
	.quad	0
	.quad	0
	.size	go..C27, 40

	.type	type...1string,@object
	.section	.rodata.type...1string,"aG",@progbits,type...1string,comdat
	.weak	type...1string
	.p2align	4
type...1string:
	.quad	8
	.quad	8
	.long	2376493481
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C28
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...1string, 80

	.type	.Lconst.14,@object
	.section	.rodata..Lconst.14,"a",@progbits
.Lconst.14:
	.asciz	"*string"
	.size	.Lconst.14, 8

	.type	go..C28,@object
	.section	.rodata.go..C28,"a",@progbits
	.p2align	3
go..C28:
	.quad	.Lconst.14
	.quad	7
	.size	go..C28, 16

	.type	go..C29,@object
	.section	.data.go..C29,"aw",@progbits
	.p2align	3
go..C29:
	.quad	string..d
	.size	go..C29, 8

	.type	go..C30,@object
	.section	.data.go..C30,"aw",@progbits
	.p2align	4
go..C30:
	.quad	go..C21
	.quad	0
	.quad	type..func.8.9.8string.9
	.size	go..C30, 24

	.type	go..C31,@object
	.section	.data.go..C31,"aw",@progbits
	.p2align	3
go..C31:
	.quad	error..d
	.size	go..C31, 8

	.type	.Lconst.15,@object
	.section	.rodata..Lconst.15,"a",@progbits
.Lconst.15:
	.asciz	"Help"
	.size	.Lconst.15, 5

	.type	go..C32,@object
	.section	.rodata.go..C32,"a",@progbits
	.p2align	3
go..C32:
	.quad	.Lconst.15
	.quad	4
	.size	go..C32, 16

	.type	type..func.8context.Context.9.8.9,@object
	.section	.rodata.type..func.8context.Context.9.8.9,"aG",@progbits,type..func.8context.Context.9.8.9,comdat
	.weak	type..func.8context.Context.9.8.9
	.p2align	4
type..func.8context.Context.9.8.9:
	.quad	8
	.quad	8
	.long	1315882344
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C33
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C34
	.quad	1
	.quad	1
	.quad	go..C35
	.quad	0
	.quad	0
	.size	type..func.8context.Context.9.8.9, 128

	.type	.Lconst.16,@object
	.section	.rodata..Lconst.16,"a",@progbits
.Lconst.16:
	.asciz	"func(\tcontext\tcontext.Context)"
	.size	.Lconst.16, 31

	.type	go..C33,@object
	.section	.rodata.go..C33,"a",@progbits
	.p2align	3
go..C33:
	.quad	.Lconst.16
	.quad	30
	.size	go..C33, 16

	.type	go..C34,@object
	.section	.data.go..C34,"aw",@progbits
	.p2align	3
go..C34:
	.quad	context.Context..d
	.size	go..C34, 8

	.type	go..C35,@object
	.section	.bss.go..C35,"aw",@nobits
	.p2align	3
go..C35:
	.zero	8
	.size	go..C35, 8

	.type	.Lconst.17,@object
	.section	.rodata..Lconst.17,"a",@progbits
.Lconst.17:
	.asciz	"Name"
	.size	.Lconst.17, 5

	.type	go..C36,@object
	.section	.rodata.go..C36,"a",@progbits
	.p2align	3
go..C36:
	.quad	.Lconst.17
	.quad	4
	.size	go..C36, 16

	.type	type..func.8.9.8command_line_arguments.CmdName.9,@object
	.section	.rodata.type..func.8.9.8command_line_arguments.CmdName.9,"aG",@progbits,type..func.8.9.8command_line_arguments.CmdName.9,comdat
	.weak	type..func.8.9.8command_line_arguments.CmdName.9
	.p2align	4
type..func.8.9.8command_line_arguments.CmdName.9:
	.quad	8
	.quad	8
	.long	3521854792
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C37
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C38
	.quad	0
	.quad	0
	.quad	go..C39
	.quad	1
	.quad	1
	.size	type..func.8.9.8command_line_arguments.CmdName.9, 128

	.type	.Lconst.18,@object
	.section	.rodata..Lconst.18,"a",@progbits
.Lconst.18:
	.asciz	"func() \tcommand_line_arguments\tcli.CmdName"
	.size	.Lconst.18, 43

	.type	go..C37,@object
	.section	.rodata.go..C37,"a",@progbits
	.p2align	3
go..C37:
	.quad	.Lconst.18
	.quad	42
	.size	go..C37, 16

	.type	go..C38,@object
	.section	.bss.go..C38,"aw",@nobits
	.p2align	3
go..C38:
	.zero	8
	.size	go..C38, 8

	.type	go..C39,@object
	.section	.data.go..C39,"aw",@progbits
	.p2align	3
go..C39:
	.quad	command_line_arguments.CmdName..d
	.size	go..C39, 8

	.type	.Lconst.19,@object
	.section	.rodata..Lconst.19,"a",@progbits
.Lconst.19:
	.asciz	"Parse"
	.size	.Lconst.19, 6

	.type	go..C40,@object
	.section	.rodata.go..C40,"a",@progbits
	.p2align	3
go..C40:
	.quad	.Lconst.19
	.quad	5
	.size	go..C40, 16

	.type	type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9,"aG",@progbits,type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9,comdat
	.weak	type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9
	.p2align	4
type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9:
	.quad	8
	.quad	8
	.long	2789852968
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C41
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C90
	.quad	3
	.quad	3
	.quad	go..C91
	.quad	1
	.quad	1
	.size	type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9, 128

	.type	.Lconst.20,@object
	.section	.rodata..Lconst.20,"a",@progbits
.Lconst.20:
	.asciz	"func(\tcontext\tcontext.Context, []string, map[string]string) error"
	.size	.Lconst.20, 66

	.type	go..C41,@object
	.section	.rodata.go..C41,"a",@progbits
	.p2align	3
go..C41:
	.quad	.Lconst.20
	.quad	65
	.size	go..C41, 16

	.type	type...6.7string,@object
	.section	.rodata.type...6.7string,"aG",@progbits,type...6.7string,comdat
	.weak	type...6.7string
	.p2align	4
type...6.7string:
	.quad	24
	.quad	8
	.long	2296014504
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C42
	.quad	0
	.quad	0
	.quad	string..d
	.size	type...6.7string, 80

	.type	.Lconst.21,@object
	.section	.rodata..Lconst.21,"a",@progbits
.Lconst.21:
	.asciz	"[]string"
	.size	.Lconst.21, 9

	.type	go..C42,@object
	.section	.rodata.go..C42,"a",@progbits
	.p2align	3
go..C42:
	.quad	.Lconst.21
	.quad	8
	.size	go..C42, 16

	.type	type..map.6string.7string,@object
	.section	.rodata.type..map.6string.7string,"aG",@progbits,type..map.6string.7string,comdat
	.weak	type..map.6string.7string
	.p2align	4
type..map.6string.7string:
	.quad	8
	.quad	8
	.long	297061700
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C43
	.quad	0
	.quad	0
	.quad	string..d
	.quad	string..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	16
	.byte	0
	.short	272
	.byte	1
	.byte	1
	.size	type..map.6string.7string, 112

	.type	.Lconst.22,@object
	.section	.rodata..Lconst.22,"a",@progbits
.Lconst.22:
	.asciz	"map[string]string"
	.size	.Lconst.22, 18

	.type	go..C43,@object
	.section	.rodata.go..C43,"a",@progbits
	.p2align	3
go..C43:
	.quad	.Lconst.22
	.quad	17
	.size	go..C43, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5:
	.quad	272
	.quad	272
	.long	887229860
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkwkwka
	.quad	go..C44
	.quad	0
	.quad	0
	.quad	go..C57
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkwkwka,@object
	.section	.rodata.gcbits..kwkwkwka,"aG",@progbits,gcbits..kwkwkwka,comdat
	.weak	gcbits..kwkwkwka
gcbits..kwkwkwka:
	.ascii	"\252\252\252\252\002"
	.size	gcbits..kwkwkwka, 5

	.type	.Lconst.23,@object
	.section	.rodata..Lconst.23,"a",@progbits
.Lconst.23:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }"
	.size	.Lconst.23, 74

	.type	go..C44,@object
	.section	.rodata.go..C44,"a",@progbits
	.p2align	3
go..C44:
	.quad	.Lconst.23
	.quad	73
	.size	go..C44, 16

	.type	.Lconst.24,@object
	.section	.rodata..Lconst.24,"a",@progbits
.Lconst.24:
	.asciz	"topbits"
	.size	.Lconst.24, 8

	.type	go..C45,@object
	.section	.rodata.go..C45,"a",@progbits
	.p2align	3
go..C45:
	.quad	.Lconst.24
	.quad	7
	.size	go..C45, 16

	.type	type...68x.7uint8,@object
	.section	.rodata.type...68x.7uint8,"aG",@progbits,type...68x.7uint8,comdat
	.weak	type...68x.7uint8
	.p2align	4
type...68x.7uint8:
	.quad	8
	.quad	0
	.long	529264193
	.byte	145
	.byte	1
	.byte	1
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C46
	.quad	0
	.quad	0
	.quad	uint8..d
	.quad	type...6.7uint8
	.quad	8
	.size	type...68x.7uint8, 96

	.type	.Lconst.25,@object
	.section	.rodata..Lconst.25,"a",@progbits
.Lconst.25:
	.asciz	"[8]uint8"
	.size	.Lconst.25, 9

	.type	go..C46,@object
	.section	.rodata.go..C46,"a",@progbits
	.p2align	3
go..C46:
	.quad	.Lconst.25
	.quad	8
	.size	go..C46, 16

	.type	uint8..d,@object
	.section	.rodata.uint8..d,"aG",@progbits,uint8..d,comdat
	.weak	uint8..d
	.p2align	4
uint8..d:
	.quad	1
	.quad	0
	.long	264632089
	.byte	136
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C47
	.quad	go..C50
	.quad	type...1uint8
	.size	uint8..d, 72

	.type	.Lconst.26,@object
	.section	.rodata..Lconst.26,"a",@progbits
.Lconst.26:
	.asciz	"uint8"
	.size	.Lconst.26, 6

	.type	go..C47,@object
	.section	.rodata.go..C47,"a",@progbits
	.p2align	3
go..C47:
	.quad	.Lconst.26
	.quad	5
	.size	go..C47, 16

	.type	go..C48,@object
	.section	.rodata.go..C48,"a",@progbits
	.p2align	3
go..C48:
	.quad	.Lconst.26
	.quad	5
	.size	go..C48, 16

	.type	go..C49,@object
	.section	.bss.go..C49,"aw",@nobits
	.p2align	4
go..C49:
	.zero	40
	.size	go..C49, 40

	.type	go..C50,@object
	.section	.rodata.go..C50,"a",@progbits
	.p2align	4
go..C50:
	.quad	go..C48
	.quad	0
	.quad	go..C49
	.quad	0
	.quad	0
	.size	go..C50, 40

	.type	type...1uint8,@object
	.section	.rodata.type...1uint8,"aG",@progbits,type...1uint8,comdat
	.weak	type...1uint8
	.p2align	4
type...1uint8:
	.quad	8
	.quad	8
	.long	4234113433
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C51
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...1uint8, 80

	.type	.Lconst.27,@object
	.section	.rodata..Lconst.27,"a",@progbits
.Lconst.27:
	.asciz	"*uint8"
	.size	.Lconst.27, 7

	.type	go..C51,@object
	.section	.rodata.go..C51,"a",@progbits
	.p2align	3
go..C51:
	.quad	.Lconst.27
	.quad	6
	.size	go..C51, 16

	.type	type...6.7uint8,@object
	.section	.rodata.type...6.7uint8,"aG",@progbits,type...6.7uint8,comdat
	.weak	type...6.7uint8
	.p2align	4
type...6.7uint8:
	.quad	24
	.quad	8
	.long	264632103
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C52
	.quad	0
	.quad	0
	.quad	uint8..d
	.size	type...6.7uint8, 80

	.type	.Lconst.28,@object
	.section	.rodata..Lconst.28,"a",@progbits
.Lconst.28:
	.asciz	"[]uint8"
	.size	.Lconst.28, 8

	.type	go..C52,@object
	.section	.rodata.go..C52,"a",@progbits
	.p2align	3
go..C52:
	.quad	.Lconst.28
	.quad	7
	.size	go..C52, 16

	.type	.Lconst.29,@object
	.section	.rodata..Lconst.29,"a",@progbits
.Lconst.29:
	.asciz	"keys"
	.size	.Lconst.29, 5

	.type	go..C53,@object
	.section	.rodata.go..C53,"a",@progbits
	.p2align	3
go..C53:
	.quad	.Lconst.29
	.quad	4
	.size	go..C53, 16

	.type	type...68x.7string,@object
	.section	.rodata.type...68x.7string,"aG",@progbits,type...68x.7string,comdat
	.weak	type...68x.7string
	.p2align	4
type...68x.7string:
	.quad	128
	.quad	120
	.long	297061699
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkwa
	.quad	go..C54
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	8
	.size	type...68x.7string, 96

	.type	gcbits..wkwa,@object
	.section	.rodata.gcbits..wkwa,"aG",@progbits,gcbits..wkwa,comdat
	.weak	gcbits..wkwa
gcbits..wkwa:
	.zero	2,85
	.size	gcbits..wkwa, 2

	.type	.Lconst.30,@object
	.section	.rodata..Lconst.30,"a",@progbits
.Lconst.30:
	.asciz	"[8]string"
	.size	.Lconst.30, 10

	.type	go..C54,@object
	.section	.rodata.go..C54,"a",@progbits
	.p2align	3
go..C54:
	.quad	.Lconst.30
	.quad	9
	.size	go..C54, 16

	.type	.Lconst.31,@object
	.section	.rodata..Lconst.31,"a",@progbits
.Lconst.31:
	.asciz	"values"
	.size	.Lconst.31, 7

	.type	go..C55,@object
	.section	.rodata.go..C55,"a",@progbits
	.p2align	3
go..C55:
	.quad	.Lconst.31
	.quad	6
	.size	go..C55, 16

	.type	.Lconst.32,@object
	.section	.rodata..Lconst.32,"a",@progbits
.Lconst.32:
	.asciz	"overflow"
	.size	.Lconst.32, 9

	.type	go..C56,@object
	.section	.rodata.go..C56,"a",@progbits
	.p2align	3
go..C56:
	.quad	.Lconst.32
	.quad	8
	.size	go..C56, 16

	.type	go..C57,@object
	.section	.data.go..C57,"aw",@progbits
	.p2align	4
go..C57:
	.quad	go..C45
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C53
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C55
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	272
	.quad	go..C56
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	528
	.size	go..C57, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1324374500
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C58
	.quad	0
	.quad	0
	.quad	go..C89
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	gcbits..mb,@object
	.section	.rodata.gcbits..mb,"aG",@progbits,gcbits..mb,comdat
	.weak	gcbits..mb
gcbits..mb:
	.byte	44
	.size	gcbits..mb, 1

	.type	.Lconst.33,@object
	.section	.rodata..Lconst.33,"a",@progbits
.Lconst.33:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.33, 274

	.type	go..C58,@object
	.section	.rodata.go..C58,"a",@progbits
	.p2align	3
go..C58:
	.quad	.Lconst.33
	.quad	273
	.size	go..C58, 16

	.type	.Lconst.34,@object
	.section	.rodata..Lconst.34,"a",@progbits
.Lconst.34:
	.asciz	"count"
	.size	.Lconst.34, 6

	.type	go..C59,@object
	.section	.rodata.go..C59,"a",@progbits
	.p2align	3
go..C59:
	.quad	.Lconst.34
	.quad	5
	.size	go..C59, 16

	.type	int..d,@object
	.section	.rodata.int..d,"aG",@progbits,int..d,comdat
	.weak	int..d
	.p2align	4
int..d:
	.quad	8
	.quad	0
	.long	876704034
	.byte	130
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C60
	.quad	go..C63
	.quad	type...1int
	.size	int..d, 72

	.type	.Lconst.35,@object
	.section	.rodata..Lconst.35,"a",@progbits
.Lconst.35:
	.asciz	"int"
	.size	.Lconst.35, 4

	.type	go..C60,@object
	.section	.rodata.go..C60,"a",@progbits
	.p2align	3
go..C60:
	.quad	.Lconst.35
	.quad	3
	.size	go..C60, 16

	.type	go..C61,@object
	.section	.rodata.go..C61,"a",@progbits
	.p2align	3
go..C61:
	.quad	.Lconst.35
	.quad	3
	.size	go..C61, 16

	.type	go..C62,@object
	.section	.bss.go..C62,"aw",@nobits
	.p2align	4
go..C62:
	.zero	40
	.size	go..C62, 40

	.type	go..C63,@object
	.section	.rodata.go..C63,"a",@progbits
	.p2align	4
go..C63:
	.quad	go..C61
	.quad	0
	.quad	go..C62
	.quad	0
	.quad	0
	.size	go..C63, 40

	.type	type...1int,@object
	.section	.rodata.type...1int,"aG",@progbits,type...1int,comdat
	.weak	type...1int
	.p2align	4
type...1int:
	.quad	8
	.quad	8
	.long	1142362665
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C64
	.quad	0
	.quad	0
	.quad	int..d
	.size	type...1int, 80

	.type	.Lconst.36,@object
	.section	.rodata..Lconst.36,"a",@progbits
.Lconst.36:
	.asciz	"*int"
	.size	.Lconst.36, 5

	.type	go..C64,@object
	.section	.rodata.go..C64,"a",@progbits
	.p2align	3
go..C64:
	.quad	.Lconst.36
	.quad	4
	.size	go..C64, 16

	.type	.Lconst.37,@object
	.section	.rodata..Lconst.37,"a",@progbits
.Lconst.37:
	.asciz	"flags"
	.size	.Lconst.37, 6

	.type	go..C65,@object
	.section	.rodata.go..C65,"a",@progbits
	.p2align	3
go..C65:
	.quad	.Lconst.37
	.quad	5
	.size	go..C65, 16

	.type	.Lconst.38,@object
	.section	.rodata..Lconst.38,"a",@progbits
.Lconst.38:
	.asciz	"B"
	.size	.Lconst.38, 2

	.type	go..C66,@object
	.section	.rodata.go..C66,"a",@progbits
	.p2align	3
go..C66:
	.quad	.Lconst.38
	.quad	1
	.size	go..C66, 16

	.type	.Lconst.39,@object
	.section	.rodata..Lconst.39,"a",@progbits
.Lconst.39:
	.asciz	"noverflow"
	.size	.Lconst.39, 10

	.type	go..C67,@object
	.section	.rodata.go..C67,"a",@progbits
	.p2align	3
go..C67:
	.quad	.Lconst.39
	.quad	9
	.size	go..C67, 16

	.type	uint16..d,@object
	.section	.rodata.uint16..d,"aG",@progbits,uint16..d,comdat
	.weak	uint16..d
	.p2align	4
uint16..d:
	.quad	2
	.quad	0
	.long	76732288
	.byte	137
	.byte	2
	.byte	2
	.zero	1
	.quad	runtime.memhash16..f
	.quad	runtime.memequal16..f
	.quad	0
	.quad	go..C68
	.quad	go..C71
	.quad	type...1uint16
	.size	uint16..d, 72

	.type	.Lconst.40,@object
	.section	.rodata..Lconst.40,"a",@progbits
.Lconst.40:
	.asciz	"uint16"
	.size	.Lconst.40, 7

	.type	go..C68,@object
	.section	.rodata.go..C68,"a",@progbits
	.p2align	3
go..C68:
	.quad	.Lconst.40
	.quad	6
	.size	go..C68, 16

	.type	go..C69,@object
	.section	.rodata.go..C69,"a",@progbits
	.p2align	3
go..C69:
	.quad	.Lconst.40
	.quad	6
	.size	go..C69, 16

	.type	go..C70,@object
	.section	.bss.go..C70,"aw",@nobits
	.p2align	4
go..C70:
	.zero	40
	.size	go..C70, 40

	.type	go..C71,@object
	.section	.rodata.go..C71,"a",@progbits
	.p2align	4
go..C71:
	.quad	go..C69
	.quad	0
	.quad	go..C70
	.quad	0
	.quad	0
	.size	go..C71, 40

	.type	type...1uint16,@object
	.section	.rodata.type...1uint16,"aG",@progbits,type...1uint16,comdat
	.weak	type...1uint16
	.p2align	4
type...1uint16:
	.quad	8
	.quad	8
	.long	1227716617
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C72
	.quad	0
	.quad	0
	.quad	uint16..d
	.size	type...1uint16, 80

	.type	.Lconst.41,@object
	.section	.rodata..Lconst.41,"a",@progbits
.Lconst.41:
	.asciz	"*uint16"
	.size	.Lconst.41, 8

	.type	go..C72,@object
	.section	.rodata.go..C72,"a",@progbits
	.p2align	3
go..C72:
	.quad	.Lconst.41
	.quad	7
	.size	go..C72, 16

	.type	.Lconst.42,@object
	.section	.rodata..Lconst.42,"a",@progbits
.Lconst.42:
	.asciz	"hash0"
	.size	.Lconst.42, 6

	.type	go..C73,@object
	.section	.rodata.go..C73,"a",@progbits
	.p2align	3
go..C73:
	.quad	.Lconst.42
	.quad	5
	.size	go..C73, 16

	.type	uint32..d,@object
	.section	.rodata.uint32..d,"aG",@progbits,uint32..d,comdat
	.weak	uint32..d
	.p2align	4
uint32..d:
	.quad	4
	.quad	0
	.long	278357906
	.byte	138
	.byte	4
	.byte	4
	.zero	1
	.quad	runtime.memhash32..f
	.quad	runtime.memequal32..f
	.quad	0
	.quad	go..C74
	.quad	go..C77
	.quad	type...1uint32
	.size	uint32..d, 72

	.type	.Lconst.43,@object
	.section	.rodata..Lconst.43,"a",@progbits
.Lconst.43:
	.asciz	"uint32"
	.size	.Lconst.43, 7

	.type	go..C74,@object
	.section	.rodata.go..C74,"a",@progbits
	.p2align	3
go..C74:
	.quad	.Lconst.43
	.quad	6
	.size	go..C74, 16

	.type	go..C75,@object
	.section	.rodata.go..C75,"a",@progbits
	.p2align	3
go..C75:
	.quad	.Lconst.43
	.quad	6
	.size	go..C75, 16

	.type	go..C76,@object
	.section	.bss.go..C76,"aw",@nobits
	.p2align	4
go..C76:
	.zero	40
	.size	go..C76, 40

	.type	go..C77,@object
	.section	.rodata.go..C77,"a",@progbits
	.p2align	4
go..C77:
	.quad	go..C75
	.quad	0
	.quad	go..C76
	.quad	0
	.quad	0
	.size	go..C77, 40

	.type	type...1uint32,@object
	.section	.rodata.type...1uint32,"aG",@progbits,type...1uint32,comdat
	.weak	type...1uint32
	.p2align	4
type...1uint32:
	.quad	8
	.quad	8
	.long	158759209
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C78
	.quad	0
	.quad	0
	.quad	uint32..d
	.size	type...1uint32, 80

	.type	.Lconst.44,@object
	.section	.rodata..Lconst.44,"a",@progbits
.Lconst.44:
	.asciz	"*uint32"
	.size	.Lconst.44, 8

	.type	go..C78,@object
	.section	.rodata.go..C78,"a",@progbits
	.p2align	3
go..C78:
	.quad	.Lconst.44
	.quad	7
	.size	go..C78, 16

	.type	.Lconst.45,@object
	.section	.rodata..Lconst.45,"a",@progbits
.Lconst.45:
	.asciz	"buckets"
	.size	.Lconst.45, 8

	.type	go..C79,@object
	.section	.rodata.go..C79,"a",@progbits
	.p2align	3
go..C79:
	.quad	.Lconst.45
	.quad	7
	.size	go..C79, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	1310775881
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C80
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.46,@object
	.section	.rodata..Lconst.46,"a",@progbits
.Lconst.46:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]string; overflow * }"
	.size	.Lconst.46, 75

	.type	go..C80,@object
	.section	.rodata.go..C80,"a",@progbits
	.p2align	3
go..C80:
	.quad	.Lconst.46
	.quad	74
	.size	go..C80, 16

	.type	.Lconst.47,@object
	.section	.rodata..Lconst.47,"a",@progbits
.Lconst.47:
	.asciz	"oldbuckets"
	.size	.Lconst.47, 11

	.type	go..C81,@object
	.section	.rodata.go..C81,"a",@progbits
	.p2align	3
go..C81:
	.quad	.Lconst.47
	.quad	10
	.size	go..C81, 16

	.type	.Lconst.48,@object
	.section	.rodata..Lconst.48,"a",@progbits
.Lconst.48:
	.asciz	"nevacuate"
	.size	.Lconst.48, 10

	.type	go..C82,@object
	.section	.rodata.go..C82,"a",@progbits
	.p2align	3
go..C82:
	.quad	.Lconst.48
	.quad	9
	.size	go..C82, 16

	.type	uintptr..d,@object
	.section	.rodata.uintptr..d,"aG",@progbits,uintptr..d,comdat
	.weak	uintptr..d
	.p2align	4
uintptr..d:
	.quad	8
	.quad	0
	.long	2806773995
	.byte	140
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	0
	.quad	go..C83
	.quad	go..C86
	.quad	type...1uintptr
	.size	uintptr..d, 72

	.type	.Lconst.49,@object
	.section	.rodata..Lconst.49,"a",@progbits
.Lconst.49:
	.asciz	"uintptr"
	.size	.Lconst.49, 8

	.type	go..C83,@object
	.section	.rodata.go..C83,"a",@progbits
	.p2align	3
go..C83:
	.quad	.Lconst.49
	.quad	7
	.size	go..C83, 16

	.type	go..C84,@object
	.section	.rodata.go..C84,"a",@progbits
	.p2align	3
go..C84:
	.quad	.Lconst.49
	.quad	7
	.size	go..C84, 16

	.type	go..C85,@object
	.section	.bss.go..C85,"aw",@nobits
	.p2align	4
go..C85:
	.zero	40
	.size	go..C85, 40

	.type	go..C86,@object
	.section	.rodata.go..C86,"a",@progbits
	.p2align	4
go..C86:
	.quad	go..C84
	.quad	0
	.quad	go..C85
	.quad	0
	.quad	0
	.size	go..C86, 40

	.type	type...1uintptr,@object
	.section	.rodata.type...1uintptr,"aG",@progbits,type...1uintptr,comdat
	.weak	type...1uintptr
	.p2align	4
type...1uintptr:
	.quad	8
	.quad	8
	.long	1958710969
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C87
	.quad	0
	.quad	0
	.quad	uintptr..d
	.size	type...1uintptr, 80

	.type	.Lconst.50,@object
	.section	.rodata..Lconst.50,"a",@progbits
.Lconst.50:
	.asciz	"*uintptr"
	.size	.Lconst.50, 9

	.type	go..C87,@object
	.section	.rodata.go..C87,"a",@progbits
	.p2align	3
go..C87:
	.quad	.Lconst.50
	.quad	8
	.size	go..C87, 16

	.type	.Lconst.51,@object
	.section	.rodata..Lconst.51,"a",@progbits
.Lconst.51:
	.asciz	"extra"
	.size	.Lconst.51, 6

	.type	go..C88,@object
	.section	.rodata.go..C88,"a",@progbits
	.p2align	3
go..C88:
	.quad	.Lconst.51
	.quad	5
	.size	go..C88, 16

	.type	go..C89,@object
	.section	.data.go..C89,"aw",@progbits
	.p2align	4
go..C89:
	.quad	go..C59
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C65
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C66
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C67
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C73
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C79
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C81
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7string.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C82
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C88
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C89, 360

	.type	go..C90,@object
	.section	.data.go..C90,"aw",@progbits
	.p2align	4
go..C90:
	.quad	context.Context..d
	.quad	type...6.7string
	.quad	type..map.6string.7string
	.size	go..C90, 24

	.type	go..C91,@object
	.section	.data.go..C91,"aw",@progbits
	.p2align	3
go..C91:
	.quad	error..d
	.size	go..C91, 8

	.type	go..C92,@object
	.section	.data.go..C92,"aw",@progbits
	.p2align	4
go..C92:
	.quad	go..C13
	.quad	0
	.quad	type..func.8context.Context.9.8error.9
	.quad	go..C32
	.quad	0
	.quad	type..func.8context.Context.9.8.9
	.quad	go..C36
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.CmdName.9
	.quad	go..C40
	.quad	0
	.quad	type..func.8context.Context.3.6.7string.3map.6string.7string.9.8error.9
	.size	go..C92, 96

	.type	command_line_arguments.Registrar,@object
	.section	.bss.command_line_arguments.Registrar,"aw",@nobits
	.globl	command_line_arguments.Registrar
	.p2align	3
command_line_arguments.Registrar:
	.quad	0
	.size	command_line_arguments.Registrar, 8

	.type	type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9,@object
	.section	.rodata.type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9,"aG",@progbits,type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9,comdat
	.weak	type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9
	.p2align	4
type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9:
	.quad	8
	.quad	8
	.long	3328694221
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C93
	.quad	0
	.quad	0
	.quad	command_line_arguments.CmdName..d
	.quad	type..func.8.9.8command_line_arguments.Command.9
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6command_line_arguments.CmdName.7func.8.9.8command_line_arguments.Command.9, 112

	.type	.Lconst.52,@object
	.section	.rodata..Lconst.52,"a",@progbits
.Lconst.52:
	.asciz	"map[\tcommand_line_arguments\tcli.CmdName]func() \tcommand_line_arguments\tcli.Command"
	.size	.Lconst.52, 83

	.type	go..C93,@object
	.section	.rodata.go..C93,"a",@progbits
	.p2align	3
go..C93:
	.quad	.Lconst.52
	.quad	82
	.size	go..C93, 16

	.type	type..func.8.9.8command_line_arguments.Command.9,@object
	.section	.rodata.type..func.8.9.8command_line_arguments.Command.9,"aG",@progbits,type..func.8.9.8command_line_arguments.Command.9,comdat
	.weak	type..func.8.9.8command_line_arguments.Command.9
	.p2align	4
type..func.8.9.8command_line_arguments.Command.9:
	.quad	8
	.quad	8
	.long	790637256
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C94
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C95
	.quad	0
	.quad	0
	.quad	go..C96
	.quad	1
	.quad	1
	.size	type..func.8.9.8command_line_arguments.Command.9, 128

	.type	.Lconst.53,@object
	.section	.rodata..Lconst.53,"a",@progbits
.Lconst.53:
	.asciz	"func() \tcommand_line_arguments\tcli.Command"
	.size	.Lconst.53, 43

	.type	go..C94,@object
	.section	.rodata.go..C94,"a",@progbits
	.p2align	3
go..C94:
	.quad	.Lconst.53
	.quad	42
	.size	go..C94, 16

	.type	go..C95,@object
	.section	.bss.go..C95,"aw",@nobits
	.p2align	3
go..C95:
	.zero	8
	.size	go..C95, 8

	.type	go..C96,@object
	.section	.data.go..C96,"aw",@progbits
	.p2align	3
go..C96:
	.quad	command_line_arguments.Command..d
	.size	go..C96, 8

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	2565614116
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkEGba
	.quad	go..C97
	.quad	0
	.quad	0
	.quad	go..C106
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkEGba,@object
	.section	.rodata.gcbits..kwkEGba,"aG",@progbits,gcbits..kwkEGba,comdat
	.weak	gcbits..kwkEGba
gcbits..kwkEGba:
	.ascii	"\252\252\376\003"
	.size	gcbits..kwkEGba, 4

	.type	.Lconst.54,@object
	.section	.rodata..Lconst.54,"a",@progbits
.Lconst.54:
	.asciz	"struct { topbits [8]uint8; keys [8]\tcommand_line_arguments\tcli.CmdName; values [8]func() \tcommand_line_arguments\tcli.Command; overflow * }"
	.size	.Lconst.54, 139

	.type	go..C97,@object
	.section	.rodata.go..C97,"a",@progbits
	.p2align	3
go..C97:
	.quad	.Lconst.54
	.quad	138
	.size	go..C97, 16

	.type	go..C98,@object
	.section	.rodata.go..C98,"a",@progbits
	.p2align	3
go..C98:
	.quad	.Lconst.24
	.quad	7
	.size	go..C98, 16

	.type	go..C99,@object
	.section	.rodata.go..C99,"a",@progbits
	.p2align	3
go..C99:
	.quad	.Lconst.29
	.quad	4
	.size	go..C99, 16

	.type	type...68x.7command_line_arguments.CmdName,@object
	.section	.rodata.type...68x.7command_line_arguments.CmdName,"aG",@progbits,type...68x.7command_line_arguments.CmdName,comdat
	.weak	type...68x.7command_line_arguments.CmdName
	.p2align	4
type...68x.7command_line_arguments.CmdName:
	.quad	128
	.quad	120
	.long	781146617
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkwa
	.quad	go..C100
	.quad	0
	.quad	0
	.quad	command_line_arguments.CmdName..d
	.quad	type...6.7command_line_arguments.CmdName
	.quad	8
	.size	type...68x.7command_line_arguments.CmdName, 96

	.type	.Lconst.55,@object
	.section	.rodata..Lconst.55,"a",@progbits
.Lconst.55:
	.asciz	"[8]\tcommand_line_arguments\tcli.CmdName"
	.size	.Lconst.55, 39

	.type	go..C100,@object
	.section	.rodata.go..C100,"a",@progbits
	.p2align	3
go..C100:
	.quad	.Lconst.55
	.quad	38
	.size	go..C100, 16

	.type	type...6.7command_line_arguments.CmdName,@object
	.section	.rodata.type...6.7command_line_arguments.CmdName,"aG",@progbits,type...6.7command_line_arguments.CmdName,comdat
	.weak	type...6.7command_line_arguments.CmdName
	.p2align	4
type...6.7command_line_arguments.CmdName:
	.quad	24
	.quad	8
	.long	2538056963
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C101
	.quad	0
	.quad	0
	.quad	command_line_arguments.CmdName..d
	.size	type...6.7command_line_arguments.CmdName, 80

	.type	.Lconst.56,@object
	.section	.rodata..Lconst.56,"a",@progbits
.Lconst.56:
	.asciz	"[]\tcommand_line_arguments\tcli.CmdName"
	.size	.Lconst.56, 38

	.type	go..C101,@object
	.section	.rodata.go..C101,"a",@progbits
	.p2align	3
go..C101:
	.quad	.Lconst.56
	.quad	37
	.size	go..C101, 16

	.type	go..C102,@object
	.section	.rodata.go..C102,"a",@progbits
	.p2align	3
go..C102:
	.quad	.Lconst.31
	.quad	6
	.size	go..C102, 16

	.type	type...68x.7func.8.9.8command_line_arguments.Command.9,@object
	.section	.rodata.type...68x.7func.8.9.8command_line_arguments.Command.9,"aG",@progbits,type...68x.7func.8.9.8command_line_arguments.Command.9,comdat
	.weak	type...68x.7func.8.9.8command_line_arguments.Command.9
	.p2align	4
type...68x.7func.8.9.8command_line_arguments.Command.9:
	.quad	64
	.quad	64
	.long	1581274527
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..Gh
	.quad	go..C103
	.quad	0
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.Command.9
	.quad	type...6.7func.8.9.8command_line_arguments.Command.9
	.quad	8
	.size	type...68x.7func.8.9.8command_line_arguments.Command.9, 96

	.type	gcbits..Gh,@object
	.section	.rodata.gcbits..Gh,"aG",@progbits,gcbits..Gh,comdat
	.weak	gcbits..Gh
gcbits..Gh:
	.byte	255
	.size	gcbits..Gh, 1

	.type	.Lconst.57,@object
	.section	.rodata..Lconst.57,"a",@progbits
.Lconst.57:
	.asciz	"[8]func() \tcommand_line_arguments\tcli.Command"
	.size	.Lconst.57, 46

	.type	go..C103,@object
	.section	.rodata.go..C103,"a",@progbits
	.p2align	3
go..C103:
	.quad	.Lconst.57
	.quad	45
	.size	go..C103, 16

	.type	type...6.7func.8.9.8command_line_arguments.Command.9,@object
	.section	.rodata.type...6.7func.8.9.8command_line_arguments.Command.9,"aG",@progbits,type...6.7func.8.9.8command_line_arguments.Command.9,comdat
	.weak	type...6.7func.8.9.8command_line_arguments.Command.9
	.p2align	4
type...6.7func.8.9.8command_line_arguments.Command.9:
	.quad	24
	.quad	8
	.long	790637270
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C104
	.quad	0
	.quad	0
	.quad	type..func.8.9.8command_line_arguments.Command.9
	.size	type...6.7func.8.9.8command_line_arguments.Command.9, 80

	.type	.Lconst.58,@object
	.section	.rodata..Lconst.58,"a",@progbits
.Lconst.58:
	.asciz	"[]func() \tcommand_line_arguments\tcli.Command"
	.size	.Lconst.58, 45

	.type	go..C104,@object
	.section	.rodata.go..C104,"a",@progbits
	.p2align	3
go..C104:
	.quad	.Lconst.58
	.quad	44
	.size	go..C104, 16

	.type	go..C105,@object
	.section	.rodata.go..C105,"a",@progbits
	.p2align	3
go..C105:
	.quad	.Lconst.32
	.quad	8
	.size	go..C105, 16

	.type	go..C106,@object
	.section	.data.go..C106,"aw",@progbits
	.p2align	4
go..C106:
	.quad	go..C98
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C99
	.quad	0
	.quad	type...68x.7command_line_arguments.CmdName
	.quad	0
	.quad	16
	.quad	go..C102
	.quad	0
	.quad	type...68x.7func.8.9.8command_line_arguments.Command.9
	.quad	0
	.quad	272
	.quad	go..C105
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C106, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	2342214116
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C107
	.quad	0
	.quad	0
	.quad	go..C118
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.59,@object
	.section	.rodata..Lconst.59,"a",@progbits
.Lconst.59:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]\tcommand_line_arguments\tcli.CmdName; values [8]func() \tcommand_line_arguments\tcli.Command; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]\tcommand_line_arguments\tcli.CmdName; values [8]func() \tcommand_line_arguments\tcli.Command; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.59, 404

	.type	go..C107,@object
	.section	.rodata.go..C107,"a",@progbits
	.p2align	3
go..C107:
	.quad	.Lconst.59
	.quad	403
	.size	go..C107, 16

	.type	go..C108,@object
	.section	.rodata.go..C108,"a",@progbits
	.p2align	3
go..C108:
	.quad	.Lconst.34
	.quad	5
	.size	go..C108, 16

	.type	go..C109,@object
	.section	.rodata.go..C109,"a",@progbits
	.p2align	3
go..C109:
	.quad	.Lconst.37
	.quad	5
	.size	go..C109, 16

	.type	go..C110,@object
	.section	.rodata.go..C110,"a",@progbits
	.p2align	3
go..C110:
	.quad	.Lconst.38
	.quad	1
	.size	go..C110, 16

	.type	go..C111,@object
	.section	.rodata.go..C111,"a",@progbits
	.p2align	3
go..C111:
	.quad	.Lconst.39
	.quad	9
	.size	go..C111, 16

	.type	go..C112,@object
	.section	.rodata.go..C112,"a",@progbits
	.p2align	3
go..C112:
	.quad	.Lconst.42
	.quad	5
	.size	go..C112, 16

	.type	go..C113,@object
	.section	.rodata.go..C113,"a",@progbits
	.p2align	3
go..C113:
	.quad	.Lconst.45
	.quad	7
	.size	go..C113, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	2395120201
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C114
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.60,@object
	.section	.rodata..Lconst.60,"a",@progbits
.Lconst.60:
	.asciz	"*struct { topbits [8]uint8; keys [8]\tcommand_line_arguments\tcli.CmdName; values [8]func() \tcommand_line_arguments\tcli.Command; overflow * }"
	.size	.Lconst.60, 140

	.type	go..C114,@object
	.section	.rodata.go..C114,"a",@progbits
	.p2align	3
go..C114:
	.quad	.Lconst.60
	.quad	139
	.size	go..C114, 16

	.type	go..C115,@object
	.section	.rodata.go..C115,"a",@progbits
	.p2align	3
go..C115:
	.quad	.Lconst.47
	.quad	10
	.size	go..C115, 16

	.type	go..C116,@object
	.section	.rodata.go..C116,"a",@progbits
	.p2align	3
go..C116:
	.quad	.Lconst.48
	.quad	9
	.size	go..C116, 16

	.type	go..C117,@object
	.section	.rodata.go..C117,"a",@progbits
	.p2align	3
go..C117:
	.quad	.Lconst.51
	.quad	5
	.size	go..C117, 16

	.type	go..C118,@object
	.section	.data.go..C118,"aw",@progbits
	.p2align	4
go..C118:
	.quad	go..C108
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C109
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C110
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C111
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C112
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C113
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C115
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7command_line_arguments.CmdName.2values.0.68x.7func.8.9.8command_line_arguments.Command.9.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C116
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C117
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C118, 360

	.type	command_line_arguments.Cli..d,@object
	.section	.rodata.command_line_arguments.Cli..d,"a",@progbits
	.globl	command_line_arguments.Cli..d
	.p2align	4
command_line_arguments.Cli..d:
	.quad	48
	.quad	32
	.long	690576926
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C119
	.quad	go..C123
	.quad	type...1command_line_arguments.Cli
	.quad	go..C138
	.quad	3
	.quad	3
	.size	command_line_arguments.Cli..d, 96

	.type	gcbits..pa,@object
	.section	.rodata.gcbits..pa,"aG",@progbits,gcbits..pa,comdat
	.weak	gcbits..pa
gcbits..pa:
	.byte	15
	.size	gcbits..pa, 1

	.type	.Lconst.61,@object
	.section	.rodata..Lconst.61,"a",@progbits
.Lconst.61:
	.asciz	"\tcommand_line_arguments\tcli.Cli"
	.size	.Lconst.61, 32

	.type	go..C119,@object
	.section	.rodata.go..C119,"a",@progbits
	.p2align	3
go..C119:
	.quad	.Lconst.61
	.quad	31
	.size	go..C119, 16

	.type	.Lconst.62,@object
	.section	.rodata..Lconst.62,"a",@progbits
.Lconst.62:
	.asciz	"Cli"
	.size	.Lconst.62, 4

	.type	go..C120,@object
	.section	.rodata.go..C120,"a",@progbits
	.p2align	3
go..C120:
	.quad	.Lconst.62
	.quad	3
	.size	go..C120, 16

	.type	go..C121,@object
	.section	.rodata.go..C121,"a",@progbits
	.p2align	3
go..C121:
	.quad	.Lconst.2
	.quad	22
	.size	go..C121, 16

	.type	go..C122,@object
	.section	.bss.go..C122,"aw",@nobits
	.p2align	4
go..C122:
	.zero	40
	.size	go..C122, 40

	.type	go..C123,@object
	.section	.rodata.go..C123,"a",@progbits
	.p2align	4
go..C123:
	.quad	go..C120
	.quad	go..C121
	.quad	go..C122
	.quad	0
	.quad	0
	.size	go..C123, 40

	.type	type...1command_line_arguments.Cli,@object
	.section	.rodata.type...1command_line_arguments.Cli,"aG",@progbits,type...1command_line_arguments.Cli,comdat
	.weak	type...1command_line_arguments.Cli
	.p2align	4
type...1command_line_arguments.Cli:
	.quad	8
	.quad	8
	.long	2459296233
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C124
	.quad	go..C133
	.quad	type...1.1command_line_arguments.Cli
	.quad	command_line_arguments.Cli..d
	.size	type...1command_line_arguments.Cli, 80

	.type	.Lconst.63,@object
	.section	.rodata..Lconst.63,"a",@progbits
.Lconst.63:
	.asciz	"*\tcommand_line_arguments\tcli.Cli"
	.size	.Lconst.63, 33

	.type	go..C124,@object
	.section	.rodata.go..C124,"a",@progbits
	.p2align	3
go..C124:
	.quad	.Lconst.63
	.quad	32
	.size	go..C124, 16

	.type	.Lconst.64,@object
	.section	.rodata..Lconst.64,"a",@progbits
.Lconst.64:
	.asciz	"Run"
	.size	.Lconst.64, 4

	.type	go..C125,@object
	.section	.rodata.go..C125,"a",@progbits
	.p2align	3
go..C125:
	.quad	.Lconst.64
	.quad	3
	.size	go..C125, 16

	.type	type..func.8.9.8error.9,@object
	.section	.rodata.type..func.8.9.8error.9,"aG",@progbits,type..func.8.9.8error.9,comdat
	.weak	type..func.8.9.8error.9
	.p2align	4
type..func.8.9.8error.9:
	.quad	8
	.quad	8
	.long	1188738504
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C126
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C127
	.quad	0
	.quad	0
	.quad	go..C128
	.quad	1
	.quad	1
	.size	type..func.8.9.8error.9, 128

	.type	.Lconst.65,@object
	.section	.rodata..Lconst.65,"a",@progbits
.Lconst.65:
	.asciz	"func() error"
	.size	.Lconst.65, 13

	.type	go..C126,@object
	.section	.rodata.go..C126,"a",@progbits
	.p2align	3
go..C126:
	.quad	.Lconst.65
	.quad	12
	.size	go..C126, 16

	.type	go..C127,@object
	.section	.bss.go..C127,"aw",@nobits
	.p2align	3
go..C127:
	.zero	8
	.size	go..C127, 8

	.type	go..C128,@object
	.section	.data.go..C128,"aw",@progbits
	.p2align	3
go..C128:
	.quad	error..d
	.size	go..C128, 8

	.type	type..func.8.1command_line_arguments.Cli.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Cli.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Cli.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Cli.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Cli.9.8error.9:
	.quad	8
	.quad	8
	.long	2576806632
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C129
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C130
	.quad	1
	.quad	1
	.quad	go..C131
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Cli.9.8error.9, 128

	.type	.Lconst.66,@object
	.section	.rodata..Lconst.66,"a",@progbits
.Lconst.66:
	.asciz	"func(*\tcommand_line_arguments\tcli.Cli) error"
	.size	.Lconst.66, 45

	.type	go..C129,@object
	.section	.rodata.go..C129,"a",@progbits
	.p2align	3
go..C129:
	.quad	.Lconst.66
	.quad	44
	.size	go..C129, 16

	.type	go..C130,@object
	.section	.data.go..C130,"aw",@progbits
	.p2align	3
go..C130:
	.quad	type...1command_line_arguments.Cli
	.size	go..C130, 8

	.type	go..C131,@object
	.section	.data.go..C131,"aw",@progbits
	.p2align	3
go..C131:
	.quad	error..d
	.size	go..C131, 8

	.type	go..C132,@object
	.section	.data.go..C132,"aw",@progbits
	.p2align	4
go..C132:
	.quad	go..C125
	.quad	0
	.quad	type..func.8.9.8error.9
	.quad	type..func.8.1command_line_arguments.Cli.9.8error.9
	.quad	command_line_arguments.Cli.Run
	.size	go..C132, 40

	.type	go..C133,@object
	.section	.rodata.go..C133,"a",@progbits
	.p2align	4
go..C133:
	.quad	0
	.quad	0
	.quad	go..C132
	.quad	1
	.quad	1
	.size	go..C133, 40

	.type	type...1.1command_line_arguments.Cli,@object
	.section	.rodata.type...1.1command_line_arguments.Cli,"aG",@progbits,type...1.1command_line_arguments.Cli,comdat
	.weak	type...1.1command_line_arguments.Cli
	.p2align	4
type...1.1command_line_arguments.Cli:
	.quad	8
	.quad	8
	.long	694034073
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C134
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Cli
	.size	type...1.1command_line_arguments.Cli, 80

	.type	.Lconst.67,@object
	.section	.rodata..Lconst.67,"a",@progbits
.Lconst.67:
	.asciz	"**\tcommand_line_arguments\tcli.Cli"
	.size	.Lconst.67, 34

	.type	go..C134,@object
	.section	.rodata.go..C134,"a",@progbits
	.p2align	3
go..C134:
	.quad	.Lconst.67
	.quad	33
	.size	go..C134, 16

	.type	.Lconst.68,@object
	.section	.rodata..Lconst.68,"a",@progbits
.Lconst.68:
	.asciz	"Ctx"
	.size	.Lconst.68, 4

	.type	go..C135,@object
	.section	.rodata.go..C135,"a",@progbits
	.p2align	3
go..C135:
	.quad	.Lconst.68
	.quad	3
	.size	go..C135, 16

	.type	.Lconst.69,@object
	.section	.rodata..Lconst.69,"a",@progbits
.Lconst.69:
	.asciz	"Flags"
	.size	.Lconst.69, 6

	.type	go..C136,@object
	.section	.rodata.go..C136,"a",@progbits
	.p2align	3
go..C136:
	.quad	.Lconst.69
	.quad	5
	.size	go..C136, 16

	.type	.Lconst.70,@object
	.section	.rodata..Lconst.70,"a",@progbits
.Lconst.70:
	.asciz	"Args"
	.size	.Lconst.70, 5

	.type	go..C137,@object
	.section	.rodata.go..C137,"a",@progbits
	.p2align	3
go..C137:
	.quad	.Lconst.70
	.quad	4
	.size	go..C137, 16

	.type	go..C138,@object
	.section	.data.go..C138,"aw",@progbits
	.p2align	4
go..C138:
	.quad	go..C135
	.quad	0
	.quad	context.Context..d
	.quad	0
	.quad	0
	.quad	go..C136
	.quad	0
	.quad	type..map.6string.7string
	.quad	0
	.quad	32
	.quad	go..C137
	.quad	0
	.quad	type...6.7string
	.quad	0
	.quad	48
	.size	go..C138, 120

	.type	command_line_arguments.flagFilterRegexp,@object
	.section	.bss.command_line_arguments.flagFilterRegexp,"aw",@nobits
	.p2align	3
command_line_arguments.flagFilterRegexp:
	.quad	0
	.size	command_line_arguments.flagFilterRegexp, 8

	.type	.Lconst.71,@object
	.section	.rodata..Lconst.71,"a",@progbits
.Lconst.71:
	.asciz	"^-+"
	.size	.Lconst.71, 4

	.type	type...60x.7string,@object
	.section	.rodata.type...60x.7string,"aG",@progbits,type...60x.7string,comdat
	.weak	type...60x.7string
	.p2align	4
type...60x.7string:
	.quad	0
	.quad	0
	.long	297061699
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C139
	.quad	0
	.quad	0
	.quad	string..d
	.quad	type...6.7string
	.quad	0
	.size	type...60x.7string, 96

	.type	.Lconst.73,@object
	.section	.rodata..Lconst.73,"a",@progbits
.Lconst.73:
	.asciz	"[0]string"
	.size	.Lconst.73, 10

	.type	go..C139,@object
	.section	.rodata.go..C139,"a",@progbits
	.p2align	3
go..C139:
	.quad	.Lconst.73
	.quad	9
	.size	go..C139, 16

	.type	.Lconst.75,@object
	.section	.rodata..Lconst.75,"a",@progbits
.Lconst.75:
	.asciz	"-"
	.size	.Lconst.75, 2

	.type	.Lconst.77,@object
	.section	.rodata..Lconst.77,"a",@progbits
.Lconst.77:
	.asciz	"="
	.size	.Lconst.77, 2

	.type	.Lconst.79,@object
	.section	.rodata..Lconst.79,"a",@progbits
.Lconst.79:
	.asciz	"true"
	.size	.Lconst.79, 5

	.type	.Lconst.80,@object
	.section	.rodata..Lconst.80,"a",@progbits
	.p2align	3
.Lconst.80:
	.quad	.Lconst.79
	.quad	4
	.size	.Lconst.80, 16

	.type	command_line_arguments.New..f,@object
	.section	.rodata.command_line_arguments.New..f,"a",@progbits
	.globl	command_line_arguments.New..f
	.p2align	3
command_line_arguments.New..f:
	.quad	command_line_arguments.New
	.size	command_line_arguments.New..f, 8

	.type	.Lconst.82,@object
	.section	.rodata..Lconst.82,"a",@progbits
.Lconst.82:
	.asciz	"help"
	.size	.Lconst.82, 5

	.type	.Lconst.83,@object
	.section	.rodata..Lconst.83,"a",@progbits
	.p2align	3
.Lconst.83:
	.quad	.Lconst.82
	.quad	4
	.size	.Lconst.83, 16

	.type	command_line_arguments.Credentials..d,@object
	.section	.rodata.command_line_arguments.Credentials..d,"a",@progbits
	.globl	command_line_arguments.Credentials..d
	.p2align	4
command_line_arguments.Credentials..d:
	.quad	32
	.quad	24
	.long	3090556482
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Credentials..hash..f
	.quad	command_line_arguments.command_line_arguments.Credentials..eq..f
	.quad	gcbits..fa
	.quad	go..C140
	.quad	go..C144
	.quad	type...1command_line_arguments.Credentials
	.quad	go..C150
	.quad	2
	.quad	2
	.size	command_line_arguments.Credentials..d, 96

	.type	command_line_arguments.command_line_arguments.Credentials..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Credentials..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Credentials..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Credentials..hash..f:
	.quad	command_line_arguments.command_line_arguments.Credentials..hash
	.size	command_line_arguments.command_line_arguments.Credentials..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Credentials..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Credentials..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Credentials..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Credentials..eq..f:
	.quad	command_line_arguments.command_line_arguments.Credentials..eq
	.size	command_line_arguments.command_line_arguments.Credentials..eq..f, 8

	.type	gcbits..fa,@object
	.section	.rodata.gcbits..fa,"aG",@progbits,gcbits..fa,comdat
	.weak	gcbits..fa
gcbits..fa:
	.byte	5
	.size	gcbits..fa, 1

	.type	.Lconst.86,@object
	.section	.rodata..Lconst.86,"a",@progbits
.Lconst.86:
	.asciz	"\tcommand_line_arguments\tcli.Credentials"
	.size	.Lconst.86, 40

	.type	go..C140,@object
	.section	.rodata.go..C140,"a",@progbits
	.p2align	3
go..C140:
	.quad	.Lconst.86
	.quad	39
	.size	go..C140, 16

	.type	.Lconst.87,@object
	.section	.rodata..Lconst.87,"a",@progbits
.Lconst.87:
	.asciz	"Credentials"
	.size	.Lconst.87, 12

	.type	go..C141,@object
	.section	.rodata.go..C141,"a",@progbits
	.p2align	3
go..C141:
	.quad	.Lconst.87
	.quad	11
	.size	go..C141, 16

	.type	go..C142,@object
	.section	.rodata.go..C142,"a",@progbits
	.p2align	3
go..C142:
	.quad	.Lconst.2
	.quad	22
	.size	go..C142, 16

	.type	go..C143,@object
	.section	.bss.go..C143,"aw",@nobits
	.p2align	4
go..C143:
	.zero	40
	.size	go..C143, 40

	.type	go..C144,@object
	.section	.rodata.go..C144,"a",@progbits
	.p2align	4
go..C144:
	.quad	go..C141
	.quad	go..C142
	.quad	go..C143
	.quad	0
	.quad	0
	.size	go..C144, 40

	.type	type...1command_line_arguments.Credentials,@object
	.section	.rodata.type...1command_line_arguments.Credentials,"aG",@progbits,type...1command_line_arguments.Credentials,comdat
	.weak	type...1command_line_arguments.Credentials
	.p2align	4
type...1command_line_arguments.Credentials:
	.quad	8
	.quad	8
	.long	2204263465
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C145
	.quad	0
	.quad	0
	.quad	command_line_arguments.Credentials..d
	.size	type...1command_line_arguments.Credentials, 80

	.type	.Lconst.88,@object
	.section	.rodata..Lconst.88,"a",@progbits
.Lconst.88:
	.asciz	"*\tcommand_line_arguments\tcli.Credentials"
	.size	.Lconst.88, 41

	.type	go..C145,@object
	.section	.rodata.go..C145,"a",@progbits
	.p2align	3
go..C145:
	.quad	.Lconst.88
	.quad	40
	.size	go..C145, 16

	.type	.Lconst.89,@object
	.section	.rodata..Lconst.89,"a",@progbits
.Lconst.89:
	.asciz	"User"
	.size	.Lconst.89, 5

	.type	go..C146,@object
	.section	.rodata.go..C146,"a",@progbits
	.p2align	3
go..C146:
	.quad	.Lconst.89
	.quad	4
	.size	go..C146, 16

	.type	.Lconst.90,@object
	.section	.rodata..Lconst.90,"a",@progbits
.Lconst.90:
	.asciz	"json:\"user\""
	.size	.Lconst.90, 12

	.type	go..C147,@object
	.section	.rodata.go..C147,"a",@progbits
	.p2align	3
go..C147:
	.quad	.Lconst.90
	.quad	11
	.size	go..C147, 16

	.type	.Lconst.91,@object
	.section	.rodata..Lconst.91,"a",@progbits
.Lconst.91:
	.asciz	"Secret"
	.size	.Lconst.91, 7

	.type	go..C148,@object
	.section	.rodata.go..C148,"a",@progbits
	.p2align	3
go..C148:
	.quad	.Lconst.91
	.quad	6
	.size	go..C148, 16

	.type	.Lconst.92,@object
	.section	.rodata..Lconst.92,"a",@progbits
.Lconst.92:
	.asciz	"json:\"secret\""
	.size	.Lconst.92, 14

	.type	go..C149,@object
	.section	.rodata.go..C149,"a",@progbits
	.p2align	3
go..C149:
	.quad	.Lconst.92
	.quad	13
	.size	go..C149, 16

	.type	go..C150,@object
	.section	.data.go..C150,"aw",@progbits
	.p2align	4
go..C150:
	.quad	go..C146
	.quad	0
	.quad	string..d
	.quad	go..C147
	.quad	0
	.quad	go..C148
	.quad	0
	.quad	string..d
	.quad	go..C149
	.quad	32
	.size	go..C150, 80

	.type	command_line_arguments.Config..d,@object
	.section	.rodata.command_line_arguments.Config..d,"a",@progbits
	.globl	command_line_arguments.Config..d
	.p2align	4
command_line_arguments.Config..d:
	.quad	32
	.quad	24
	.long	2770947770
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Config..hash..f
	.quad	command_line_arguments.command_line_arguments.Config..eq..f
	.quad	gcbits..fa
	.quad	go..C151
	.quad	go..C155
	.quad	type...1command_line_arguments.Config
	.quad	go..C159
	.quad	1
	.quad	1
	.size	command_line_arguments.Config..d, 96

	.type	command_line_arguments.command_line_arguments.Config..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Config..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Config..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Config..hash..f:
	.quad	command_line_arguments.command_line_arguments.Config..hash
	.size	command_line_arguments.command_line_arguments.Config..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Config..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Config..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Config..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Config..eq..f:
	.quad	command_line_arguments.command_line_arguments.Config..eq
	.size	command_line_arguments.command_line_arguments.Config..eq..f, 8

	.type	.Lconst.93,@object
	.section	.rodata..Lconst.93,"a",@progbits
.Lconst.93:
	.asciz	"\tcommand_line_arguments\tcli.Config"
	.size	.Lconst.93, 35

	.type	go..C151,@object
	.section	.rodata.go..C151,"a",@progbits
	.p2align	3
go..C151:
	.quad	.Lconst.93
	.quad	34
	.size	go..C151, 16

	.type	.Lconst.94,@object
	.section	.rodata..Lconst.94,"a",@progbits
.Lconst.94:
	.asciz	"Config"
	.size	.Lconst.94, 7

	.type	go..C152,@object
	.section	.rodata.go..C152,"a",@progbits
	.p2align	3
go..C152:
	.quad	.Lconst.94
	.quad	6
	.size	go..C152, 16

	.type	go..C153,@object
	.section	.rodata.go..C153,"a",@progbits
	.p2align	3
go..C153:
	.quad	.Lconst.2
	.quad	22
	.size	go..C153, 16

	.type	go..C154,@object
	.section	.bss.go..C154,"aw",@nobits
	.p2align	4
go..C154:
	.zero	40
	.size	go..C154, 40

	.type	go..C155,@object
	.section	.rodata.go..C155,"a",@progbits
	.p2align	4
go..C155:
	.quad	go..C152
	.quad	go..C153
	.quad	go..C154
	.quad	0
	.quad	0
	.size	go..C155, 40

	.type	type...1command_line_arguments.Config,@object
	.section	.rodata.type...1command_line_arguments.Config,"aG",@progbits,type...1command_line_arguments.Config,comdat
	.weak	type...1command_line_arguments.Config
	.p2align	4
type...1command_line_arguments.Config:
	.quad	8
	.quad	8
	.long	1385491369
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C156
	.quad	0
	.quad	0
	.quad	command_line_arguments.Config..d
	.size	type...1command_line_arguments.Config, 80

	.type	.Lconst.95,@object
	.section	.rodata..Lconst.95,"a",@progbits
.Lconst.95:
	.asciz	"*\tcommand_line_arguments\tcli.Config"
	.size	.Lconst.95, 36

	.type	go..C156,@object
	.section	.rodata.go..C156,"a",@progbits
	.p2align	3
go..C156:
	.quad	.Lconst.95
	.quad	35
	.size	go..C156, 16

	.type	go..C157,@object
	.section	.rodata.go..C157,"a",@progbits
	.p2align	3
go..C157:
	.quad	.Lconst.87
	.quad	11
	.size	go..C157, 16

	.type	.Lconst.96,@object
	.section	.rodata..Lconst.96,"a",@progbits
.Lconst.96:
	.asciz	"json:\"credentials\""
	.size	.Lconst.96, 19

	.type	go..C158,@object
	.section	.rodata.go..C158,"a",@progbits
	.p2align	3
go..C158:
	.quad	.Lconst.96
	.quad	18
	.size	go..C158, 16

	.type	go..C159,@object
	.section	.data.go..C159,"aw",@progbits
	.p2align	4
go..C159:
	.quad	go..C157
	.quad	0
	.quad	command_line_arguments.Credentials..d
	.quad	go..C158
	.quad	0
	.size	go..C159, 40

	.type	.Lconst.98,@object
	.section	.rodata..Lconst.98,"a",@progbits
.Lconst.98:
	.asciz	"~/.warp/config.json"
	.size	.Lconst.98, 20

	.type	command_line_arguments.ConfigPath..f,@object
	.section	.rodata.command_line_arguments.ConfigPath..f,"a",@progbits
	.globl	command_line_arguments.ConfigPath..f
	.p2align	3
command_line_arguments.ConfigPath..f:
	.quad	command_line_arguments.ConfigPath
	.size	command_line_arguments.ConfigPath..f, 8

	.type	command_line_arguments.RetrieveConfig..f,@object
	.section	.rodata.command_line_arguments.RetrieveConfig..f,"a",@progbits
	.globl	command_line_arguments.RetrieveConfig..f
	.p2align	3
command_line_arguments.RetrieveConfig..f:
	.quad	command_line_arguments.RetrieveConfig
	.size	command_line_arguments.RetrieveConfig..f, 8

	.type	.Lconst.103,@object
	.section	.rodata..Lconst.103,"a",@progbits
.Lconst.103:
	.asciz	"guest"
	.size	.Lconst.103, 6

	.type	.Lconst.105,@object
	.section	.rodata..Lconst.105,"a",@progbits
.Lconst.105:
	.asciz	"  "
	.size	.Lconst.105, 3

	.type	.Lconst.106,@object
	.section	.rodata..Lconst.106,"a",@progbits
	.p2align	3
.Lconst.106:
	.quad	.Lconst.105
	.quad	2
	.size	.Lconst.106, 16

	.type	command_line_arguments.GenerateConfig..f,@object
	.section	.rodata.command_line_arguments.GenerateConfig..f,"a",@progbits
	.globl	command_line_arguments.GenerateConfig..f
	.p2align	3
command_line_arguments.GenerateConfig..f:
	.quad	command_line_arguments.GenerateConfig
	.size	command_line_arguments.GenerateConfig..f, 8

	.type	command_line_arguments.RetrieveOrGenerateConfig..f,@object
	.section	.rodata.command_line_arguments.RetrieveOrGenerateConfig..f,"a",@progbits
	.globl	command_line_arguments.RetrieveOrGenerateConfig..f
	.p2align	3
command_line_arguments.RetrieveOrGenerateConfig..f:
	.quad	command_line_arguments.RetrieveOrGenerateConfig
	.size	command_line_arguments.RetrieveOrGenerateConfig..f, 8

	.type	.Lconst.108,@object
	.section	.rodata..Lconst.108,"a",@progbits
.Lconst.108:
	.asciz	"_warp_%s.sock"
	.size	.Lconst.108, 14

	.type	.Lconst.111,@object
	.section	.rodata..Lconst.111,"a",@progbits
.Lconst.111:
	.asciz	"unix"
	.size	.Lconst.111, 5

	.type	.Lconst.113,@object
	.section	.rodata..Lconst.113,"a",@progbits
.Lconst.113:
	.asciz	"Failed to connect to warpd: %v"
	.size	.Lconst.113, 31

	.type	.Lconst.116,@object
	.section	.rodata..Lconst.116,"a",@progbits
.Lconst.116:
	.asciz	"Failed to send command: %v"
	.size	.Lconst.116, 27

	.type	.Lconst.118,@object
	.section	.rodata..Lconst.118,"a",@progbits
.Lconst.118:
	.asciz	"Received %s: %s"
	.size	.Lconst.118, 16

	.type	command_line_arguments.RunLocalCommand..f,@object
	.section	.rodata.command_line_arguments.RunLocalCommand..f,"a",@progbits
	.globl	command_line_arguments.RunLocalCommand..f
	.p2align	3
command_line_arguments.RunLocalCommand..f:
	.quad	command_line_arguments.RunLocalCommand
	.size	command_line_arguments.RunLocalCommand..f, 8

	.type	.Lconst.120,@object
	.section	.rodata..Lconst.120,"a",@progbits
.Lconst.120:
	.asciz	"\n"
	.size	.Lconst.120, 2

	.type	.Lconst.122,@object
	.section	.rodata..Lconst.122,"a",@progbits
	.p2align	4
.Lconst.122:
	.zero	24
	.size	.Lconst.122, 24

	.type	.Lconst.123,@object
	.section	.rodata..Lconst.123,"a",@progbits
.Lconst.123:
	.asciz	"`warp` uses the environment variable `%s` to detect that it is running from\n"
	.size	.Lconst.123, 77

	.type	.Lconst.125,@object
	.section	.rodata..Lconst.125,"a",@progbits
.Lconst.125:
	.asciz	"inside a warp (for in-warp commands). `%s` not being currently set, it\n"
	.size	.Lconst.125, 72

	.type	.Lconst.127,@object
	.section	.rodata..Lconst.127,"a",@progbits
.Lconst.127:
	.asciz	"indicates that you are not executing this from inside a warp.\n"
	.size	.Lconst.127, 63

	.type	.Lconst.129,@object
	.section	.rodata..Lconst.129,"a",@progbits
.Lconst.129:
	.asciz	"Expert only: if you connected to a pre-existing tmux or screen session from\n"
	.size	.Lconst.129, 77

	.type	.Lconst.131,@object
	.section	.rodata..Lconst.131,"a",@progbits
.Lconst.131:
	.asciz	"your current warp, `%s` will not be propagated automatically. You can fix\n"
	.size	.Lconst.131, 75

	.type	.Lconst.133,@object
	.section	.rodata..Lconst.133,"a",@progbits
.Lconst.133:
	.asciz	"this by setting `%s` to the ID of your current warp in your environment\n"
	.size	.Lconst.133, 73

	.type	.Lconst.135,@object
	.section	.rodata..Lconst.135,"a",@progbits
.Lconst.135:
	.asciz	"(running `export __WARP=<id>`).\n"
	.size	.Lconst.135, 33

	.type	.Lconst.137,@object
	.section	.rodata..Lconst.137,"a",@progbits
.Lconst.137:
	.asciz	"This command is only available from inside a warp."
	.size	.Lconst.137, 51

	.type	command_line_arguments.CheckEnvWarp..f,@object
	.section	.rodata.command_line_arguments.CheckEnvWarp..f,"a",@progbits
	.globl	command_line_arguments.CheckEnvWarp..f
	.p2align	3
command_line_arguments.CheckEnvWarp..f:
	.quad	command_line_arguments.CheckEnvWarp
	.size	command_line_arguments.CheckEnvWarp..f, 8

	.type	command_line_arguments.Session..d,@object
	.section	.rodata.command_line_arguments.Session..d,"a",@progbits
	.globl	command_line_arguments.Session..d
	.p2align	4
command_line_arguments.Session..d:
	.quad	240
	.quad	240
	.long	1808299448
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..wkEGGCa
	.quad	go..C160
	.quad	go..C164
	.quad	type...1command_line_arguments.Session
	.quad	go..C422
	.quad	17
	.quad	17
	.size	command_line_arguments.Session..d, 96

	.type	gcbits..wkEGGCa,@object
	.section	.rodata.gcbits..wkEGGCa,"aG",@progbits,gcbits..wkEGGCa,comdat
	.weak	gcbits..wkEGGCa
gcbits..wkEGGCa:
	.ascii	"U\365\3777"
	.size	gcbits..wkEGGCa, 4

	.type	.Lconst.139,@object
	.section	.rodata..Lconst.139,"a",@progbits
.Lconst.139:
	.asciz	"\tcommand_line_arguments\tcli.Session"
	.size	.Lconst.139, 36

	.type	go..C160,@object
	.section	.rodata.go..C160,"a",@progbits
	.p2align	3
go..C160:
	.quad	.Lconst.139
	.quad	35
	.size	go..C160, 16

	.type	.Lconst.140,@object
	.section	.rodata..Lconst.140,"a",@progbits
.Lconst.140:
	.asciz	"Session"
	.size	.Lconst.140, 8

	.type	go..C161,@object
	.section	.rodata.go..C161,"a",@progbits
	.p2align	3
go..C161:
	.quad	.Lconst.140
	.quad	7
	.size	go..C161, 16

	.type	go..C162,@object
	.section	.rodata.go..C162,"a",@progbits
	.p2align	3
go..C162:
	.quad	.Lconst.2
	.quad	22
	.size	go..C162, 16

	.type	go..C163,@object
	.section	.bss.go..C163,"aw",@nobits
	.p2align	4
go..C163:
	.zero	40
	.size	go..C163, 40

	.type	go..C164,@object
	.section	.rodata.go..C164,"a",@progbits
	.p2align	4
go..C164:
	.quad	go..C161
	.quad	go..C162
	.quad	go..C163
	.quad	0
	.quad	0
	.size	go..C164, 40

	.type	type...1command_line_arguments.Session,@object
	.section	.rodata.type...1command_line_arguments.Session,"aG",@progbits,type...1command_line_arguments.Session,comdat
	.weak	type...1command_line_arguments.Session
	.p2align	4
type...1command_line_arguments.Session:
	.quad	8
	.quad	8
	.long	3162987401
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C165
	.quad	go..C296
	.quad	type...1.1command_line_arguments.Session
	.quad	command_line_arguments.Session..d
	.size	type...1command_line_arguments.Session, 80

	.type	.Lconst.141,@object
	.section	.rodata..Lconst.141,"a",@progbits
.Lconst.141:
	.asciz	"*\tcommand_line_arguments\tcli.Session"
	.size	.Lconst.141, 37

	.type	go..C165,@object
	.section	.rodata.go..C165,"a",@progbits
	.p2align	3
go..C165:
	.quad	.Lconst.141
	.quad	36
	.size	go..C165, 16

	.type	.Lconst.142,@object
	.section	.rodata..Lconst.142,"a",@progbits
.Lconst.142:
	.asciz	"DataC"
	.size	.Lconst.142, 6

	.type	go..C166,@object
	.section	.rodata.go..C166,"a",@progbits
	.p2align	3
go..C166:
	.quad	.Lconst.142
	.quad	5
	.size	go..C166, 16

	.type	type..func.8.9.8net.Conn.9,@object
	.section	.rodata.type..func.8.9.8net.Conn.9,"aG",@progbits,type..func.8.9.8net.Conn.9,comdat
	.weak	type..func.8.9.8net.Conn.9
	.p2align	4
type..func.8.9.8net.Conn.9:
	.quad	8
	.quad	8
	.long	2508627080
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C167
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C168
	.quad	0
	.quad	0
	.quad	go..C169
	.quad	1
	.quad	1
	.size	type..func.8.9.8net.Conn.9, 128

	.type	.Lconst.143,@object
	.section	.rodata..Lconst.143,"a",@progbits
.Lconst.143:
	.asciz	"func() \tnet\tnet.Conn"
	.size	.Lconst.143, 21

	.type	go..C167,@object
	.section	.rodata.go..C167,"a",@progbits
	.p2align	3
go..C167:
	.quad	.Lconst.143
	.quad	20
	.size	go..C167, 16

	.type	go..C168,@object
	.section	.bss.go..C168,"aw",@nobits
	.p2align	3
go..C168:
	.zero	8
	.size	go..C168, 8

	.type	go..C169,@object
	.section	.data.go..C169,"aw",@progbits
	.p2align	3
go..C169:
	.quad	net.Conn..d
	.size	go..C169, 8

	.type	type..func.8.1command_line_arguments.Session.9.8net.Conn.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8net.Conn.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8net.Conn.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8net.Conn.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8net.Conn.9:
	.quad	8
	.quad	8
	.long	645008808
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C170
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C171
	.quad	1
	.quad	1
	.quad	go..C172
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8net.Conn.9, 128

	.type	.Lconst.144,@object
	.section	.rodata..Lconst.144,"a",@progbits
.Lconst.144:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session) \tnet\tnet.Conn"
	.size	.Lconst.144, 57

	.type	go..C170,@object
	.section	.rodata.go..C170,"a",@progbits
	.p2align	3
go..C170:
	.quad	.Lconst.144
	.quad	56
	.size	go..C170, 16

	.type	go..C171,@object
	.section	.data.go..C171,"aw",@progbits
	.p2align	3
go..C171:
	.quad	type...1command_line_arguments.Session
	.size	go..C171, 8

	.type	go..C172,@object
	.section	.data.go..C172,"aw",@progbits
	.p2align	3
go..C172:
	.quad	net.Conn..d
	.size	go..C172, 8

	.type	.Lconst.145,@object
	.section	.rodata..Lconst.145,"a",@progbits
.Lconst.145:
	.asciz	"DecodeError"
	.size	.Lconst.145, 12

	.type	go..C173,@object
	.section	.rodata.go..C173,"a",@progbits
	.p2align	3
go..C173:
	.quad	.Lconst.145
	.quad	11
	.size	go..C173, 16

	.type	type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9,@object
	.section	.rodata.type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9,"aG",@progbits,type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9,comdat
	.weak	type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9
	.p2align	4
type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9:
	.quad	8
	.quad	8
	.long	941214504
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C174
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C175
	.quad	1
	.quad	1
	.quad	go..C176
	.quad	2
	.quad	2
	.size	type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9, 128

	.type	.Lconst.146,@object
	.section	.rodata..Lconst.146,"a",@progbits
.Lconst.146:
	.asciz	"func(\tcontext\tcontext.Context) (*\tgithub_com_spolu_warp\twarp.Error, error)"
	.size	.Lconst.146, 75

	.type	go..C174,@object
	.section	.rodata.go..C174,"a",@progbits
	.p2align	3
go..C174:
	.quad	.Lconst.146
	.quad	74
	.size	go..C174, 16

	.type	go..C175,@object
	.section	.data.go..C175,"aw",@progbits
	.p2align	3
go..C175:
	.quad	context.Context..d
	.size	go..C175, 8

	.type	go..C176,@object
	.section	.data.go..C176,"aw",@progbits
	.p2align	3
go..C176:
	.quad	type...1github_com_spolu_warp.Error
	.quad	error..d
	.size	go..C176, 16

	.type	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9:
	.quad	8
	.quad	8
	.long	393478568
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C177
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C178
	.quad	2
	.quad	2
	.quad	go..C179
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9, 128

	.type	.Lconst.147,@object
	.section	.rodata..Lconst.147,"a",@progbits
.Lconst.147:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session, \tcontext\tcontext.Context) (*\tgithub_com_spolu_warp\twarp.Error, error)"
	.size	.Lconst.147, 113

	.type	go..C177,@object
	.section	.rodata.go..C177,"a",@progbits
	.p2align	3
go..C177:
	.quad	.Lconst.147
	.quad	112
	.size	go..C177, 16

	.type	go..C178,@object
	.section	.data.go..C178,"aw",@progbits
	.p2align	3
go..C178:
	.quad	type...1command_line_arguments.Session
	.quad	context.Context..d
	.size	go..C178, 16

	.type	go..C179,@object
	.section	.data.go..C179,"aw",@progbits
	.p2align	3
go..C179:
	.quad	type...1github_com_spolu_warp.Error
	.quad	error..d
	.size	go..C179, 16

	.type	.Lconst.148,@object
	.section	.rodata..Lconst.148,"a",@progbits
.Lconst.148:
	.asciz	"DecodeState"
	.size	.Lconst.148, 12

	.type	go..C180,@object
	.section	.rodata.go..C180,"a",@progbits
	.p2align	3
go..C180:
	.quad	.Lconst.148
	.quad	11
	.size	go..C180, 16

	.type	type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9,@object
	.section	.rodata.type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9,"aG",@progbits,type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9,comdat
	.weak	type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9
	.p2align	4
type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9:
	.quad	8
	.quad	8
	.long	153061160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C181
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C182
	.quad	1
	.quad	1
	.quad	go..C183
	.quad	2
	.quad	2
	.size	type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9, 128

	.type	.Lconst.149,@object
	.section	.rodata..Lconst.149,"a",@progbits
.Lconst.149:
	.asciz	"func(\tcontext\tcontext.Context) (*\tgithub_com_spolu_warp\twarp.State, error)"
	.size	.Lconst.149, 75

	.type	go..C181,@object
	.section	.rodata.go..C181,"a",@progbits
	.p2align	3
go..C181:
	.quad	.Lconst.149
	.quad	74
	.size	go..C181, 16

	.type	go..C182,@object
	.section	.data.go..C182,"aw",@progbits
	.p2align	3
go..C182:
	.quad	context.Context..d
	.size	go..C182, 8

	.type	go..C183,@object
	.section	.data.go..C183,"aw",@progbits
	.p2align	3
go..C183:
	.quad	type...1github_com_spolu_warp.State
	.quad	error..d
	.size	go..C183, 16

	.type	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9:
	.quad	8
	.quad	8
	.long	3900292520
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C184
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C185
	.quad	2
	.quad	2
	.quad	go..C186
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9, 128

	.type	.Lconst.150,@object
	.section	.rodata..Lconst.150,"a",@progbits
.Lconst.150:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session, \tcontext\tcontext.Context) (*\tgithub_com_spolu_warp\twarp.State, error)"
	.size	.Lconst.150, 113

	.type	go..C184,@object
	.section	.rodata.go..C184,"a",@progbits
	.p2align	3
go..C184:
	.quad	.Lconst.150
	.quad	112
	.size	go..C184, 16

	.type	go..C185,@object
	.section	.data.go..C185,"aw",@progbits
	.p2align	3
go..C185:
	.quad	type...1command_line_arguments.Session
	.quad	context.Context..d
	.size	go..C185, 16

	.type	go..C186,@object
	.section	.data.go..C186,"aw",@progbits
	.p2align	3
go..C186:
	.quad	type...1github_com_spolu_warp.State
	.quad	error..d
	.size	go..C186, 16

	.type	.Lconst.151,@object
	.section	.rodata..Lconst.151,"a",@progbits
.Lconst.151:
	.asciz	"GetMode"
	.size	.Lconst.151, 8

	.type	go..C187,@object
	.section	.rodata.go..C187,"a",@progbits
	.p2align	3
go..C187:
	.quad	.Lconst.151
	.quad	7
	.size	go..C187, 16

	.type	type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9,@object
	.section	.rodata.type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9,"aG",@progbits,type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9,comdat
	.weak	type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9
	.p2align	4
type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9:
	.quad	8
	.quad	8
	.long	3445673224
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C188
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C189
	.quad	1
	.quad	1
	.quad	go..C190
	.quad	2
	.quad	2
	.size	type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9, 128

	.type	.Lconst.152,@object
	.section	.rodata..Lconst.152,"a",@progbits
.Lconst.152:
	.asciz	"func(string) (*\tgithub_com_spolu_warp\twarp.Mode, error)"
	.size	.Lconst.152, 56

	.type	go..C188,@object
	.section	.rodata.go..C188,"a",@progbits
	.p2align	3
go..C188:
	.quad	.Lconst.152
	.quad	55
	.size	go..C188, 16

	.type	go..C189,@object
	.section	.data.go..C189,"aw",@progbits
	.p2align	3
go..C189:
	.quad	string..d
	.size	go..C189, 8

	.type	go..C190,@object
	.section	.data.go..C190,"aw",@progbits
	.p2align	3
go..C190:
	.quad	type...1github_com_spolu_warp.Mode
	.quad	error..d
	.size	go..C190, 16

	.type	type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9:
	.quad	8
	.quad	8
	.long	2040074600
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C191
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C192
	.quad	2
	.quad	2
	.quad	go..C193
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9, 128

	.type	.Lconst.153,@object
	.section	.rodata..Lconst.153,"a",@progbits
.Lconst.153:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session, string) (*\tgithub_com_spolu_warp\twarp.Mode, error)"
	.size	.Lconst.153, 94

	.type	go..C191,@object
	.section	.rodata.go..C191,"a",@progbits
	.p2align	3
go..C191:
	.quad	.Lconst.153
	.quad	93
	.size	go..C191, 16

	.type	go..C192,@object
	.section	.data.go..C192,"aw",@progbits
	.p2align	3
go..C192:
	.quad	type...1command_line_arguments.Session
	.quad	string..d
	.size	go..C192, 16

	.type	go..C193,@object
	.section	.data.go..C193,"aw",@progbits
	.p2align	3
go..C193:
	.quad	type...1github_com_spolu_warp.Mode
	.quad	error..d
	.size	go..C193, 16

	.type	.Lconst.154,@object
	.section	.rodata..Lconst.154,"a",@progbits
.Lconst.154:
	.asciz	"HostCanReceiveWrite"
	.size	.Lconst.154, 20

	.type	go..C194,@object
	.section	.rodata.go..C194,"a",@progbits
	.p2align	3
go..C194:
	.quad	.Lconst.154
	.quad	19
	.size	go..C194, 16

	.type	type..func.8.9.8bool.9,@object
	.section	.rodata.type..func.8.9.8bool.9,"aG",@progbits,type..func.8.9.8bool.9,comdat
	.weak	type..func.8.9.8bool.9
	.p2align	4
type..func.8.9.8bool.9:
	.quad	8
	.quad	8
	.long	3933103176
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C195
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C196
	.quad	0
	.quad	0
	.quad	go..C202
	.quad	1
	.quad	1
	.size	type..func.8.9.8bool.9, 128

	.type	.Lconst.155,@object
	.section	.rodata..Lconst.155,"a",@progbits
.Lconst.155:
	.asciz	"func() bool"
	.size	.Lconst.155, 12

	.type	go..C195,@object
	.section	.rodata.go..C195,"a",@progbits
	.p2align	3
go..C195:
	.quad	.Lconst.155
	.quad	11
	.size	go..C195, 16

	.type	go..C196,@object
	.section	.bss.go..C196,"aw",@nobits
	.p2align	3
go..C196:
	.zero	8
	.size	go..C196, 8

	.type	bool..d,@object
	.section	.rodata.bool..d,"aG",@progbits,bool..d,comdat
	.weak	bool..d
	.p2align	4
bool..d:
	.quad	1
	.quad	0
	.long	1537849745
	.byte	129
	.byte	1
	.byte	1
	.zero	1
	.quad	runtime.memhash8..f
	.quad	runtime.memequal8..f
	.quad	0
	.quad	go..C197
	.quad	go..C200
	.quad	type...1bool
	.size	bool..d, 72

	.type	.Lconst.156,@object
	.section	.rodata..Lconst.156,"a",@progbits
.Lconst.156:
	.asciz	"bool"
	.size	.Lconst.156, 5

	.type	go..C197,@object
	.section	.rodata.go..C197,"a",@progbits
	.p2align	3
go..C197:
	.quad	.Lconst.156
	.quad	4
	.size	go..C197, 16

	.type	go..C198,@object
	.section	.rodata.go..C198,"a",@progbits
	.p2align	3
go..C198:
	.quad	.Lconst.156
	.quad	4
	.size	go..C198, 16

	.type	go..C199,@object
	.section	.bss.go..C199,"aw",@nobits
	.p2align	4
go..C199:
	.zero	40
	.size	go..C199, 40

	.type	go..C200,@object
	.section	.rodata.go..C200,"a",@progbits
	.p2align	4
go..C200:
	.quad	go..C198
	.quad	0
	.quad	go..C199
	.quad	0
	.quad	0
	.size	go..C200, 40

	.type	type...1bool,@object
	.section	.rodata.type...1bool,"aG",@progbits,type...1bool,comdat
	.weak	type...1bool
	.p2align	4
type...1bool:
	.quad	8
	.quad	8
	.long	3130759449
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C201
	.quad	0
	.quad	0
	.quad	bool..d
	.size	type...1bool, 80

	.type	.Lconst.157,@object
	.section	.rodata..Lconst.157,"a",@progbits
.Lconst.157:
	.asciz	"*bool"
	.size	.Lconst.157, 6

	.type	go..C201,@object
	.section	.rodata.go..C201,"a",@progbits
	.p2align	3
go..C201:
	.quad	.Lconst.157
	.quad	5
	.size	go..C201, 16

	.type	go..C202,@object
	.section	.data.go..C202,"aw",@progbits
	.p2align	3
go..C202:
	.quad	bool..d
	.size	go..C202, 8

	.type	type..func.8.1command_line_arguments.Session.9.8bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8bool.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8bool.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8bool.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8bool.9:
	.quad	8
	.quad	8
	.long	2069484904
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C203
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C204
	.quad	1
	.quad	1
	.quad	go..C205
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8bool.9, 128

	.type	.Lconst.158,@object
	.section	.rodata..Lconst.158,"a",@progbits
.Lconst.158:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session) bool"
	.size	.Lconst.158, 48

	.type	go..C203,@object
	.section	.rodata.go..C203,"a",@progbits
	.p2align	3
go..C203:
	.quad	.Lconst.158
	.quad	47
	.size	go..C203, 16

	.type	go..C204,@object
	.section	.data.go..C204,"aw",@progbits
	.p2align	3
go..C204:
	.quad	type...1command_line_arguments.Session
	.size	go..C204, 8

	.type	go..C205,@object
	.section	.data.go..C205,"aw",@progbits
	.p2align	3
go..C205:
	.quad	bool..d
	.size	go..C205, 8

	.type	.Lconst.159,@object
	.section	.rodata..Lconst.159,"a",@progbits
.Lconst.159:
	.asciz	"Modes"
	.size	.Lconst.159, 6

	.type	go..C206,@object
	.section	.rodata.go..C206,"a",@progbits
	.p2align	3
go..C206:
	.quad	.Lconst.159
	.quad	5
	.size	go..C206, 16

	.type	type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9,@object
	.section	.rodata.type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9,"aG",@progbits,type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9,comdat
	.weak	type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9
	.p2align	4
type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9:
	.quad	8
	.quad	8
	.long	3370095432
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C207
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C208
	.quad	0
	.quad	0
	.quad	go..C230
	.quad	1
	.quad	1
	.size	type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9, 128

	.type	.Lconst.160,@object
	.section	.rodata..Lconst.160,"a",@progbits
.Lconst.160:
	.asciz	"func() map[string]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.160, 51

	.type	go..C207,@object
	.section	.rodata.go..C207,"a",@progbits
	.p2align	3
go..C207:
	.quad	.Lconst.160
	.quad	50
	.size	go..C207, 16

	.type	go..C208,@object
	.section	.bss.go..C208,"aw",@nobits
	.p2align	3
go..C208:
	.zero	8
	.size	go..C208, 8

	.type	type..map.6string.7github_com_spolu_warp.Mode,@object
	.section	.rodata.type..map.6string.7github_com_spolu_warp.Mode,"aG",@progbits,type..map.6string.7github_com_spolu_warp.Mode,comdat
	.weak	type..map.6string.7github_com_spolu_warp.Mode
	.p2align	4
type..map.6string.7github_com_spolu_warp.Mode:
	.quad	8
	.quad	8
	.long	1260617293
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C209
	.quad	0
	.quad	0
	.quad	string..d
	.quad	github_com_spolu_warp.Mode..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	8
	.byte	0
	.short	208
	.byte	1
	.byte	1
	.size	type..map.6string.7github_com_spolu_warp.Mode, 112

	.type	.Lconst.161,@object
	.section	.rodata..Lconst.161,"a",@progbits
.Lconst.161:
	.asciz	"map[string]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.161, 44

	.type	go..C209,@object
	.section	.rodata.go..C209,"a",@progbits
	.p2align	3
go..C209:
	.quad	.Lconst.161
	.quad	43
	.size	go..C209, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5:
	.quad	208
	.quad	208
	.long	1656237764
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkbaba
	.quad	go..C210
	.quad	0
	.quad	0
	.quad	go..C217
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkbaba,@object
	.section	.rodata.gcbits..kwkbaba,"aG",@progbits,gcbits..kwkbaba,comdat
	.weak	gcbits..kwkbaba
gcbits..kwkbaba:
	.ascii	"\252\252\000\002"
	.size	gcbits..kwkbaba, 4

	.type	.Lconst.162,@object
	.section	.rodata..Lconst.162,"a",@progbits
.Lconst.162:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }"
	.size	.Lconst.162, 100

	.type	go..C210,@object
	.section	.rodata.go..C210,"a",@progbits
	.p2align	3
go..C210:
	.quad	.Lconst.162
	.quad	99
	.size	go..C210, 16

	.type	go..C211,@object
	.section	.rodata.go..C211,"a",@progbits
	.p2align	3
go..C211:
	.quad	.Lconst.24
	.quad	7
	.size	go..C211, 16

	.type	go..C212,@object
	.section	.rodata.go..C212,"a",@progbits
	.p2align	3
go..C212:
	.quad	.Lconst.29
	.quad	4
	.size	go..C212, 16

	.type	go..C213,@object
	.section	.rodata.go..C213,"a",@progbits
	.p2align	3
go..C213:
	.quad	.Lconst.31
	.quad	6
	.size	go..C213, 16

	.type	type...68x.7github_com_spolu_warp.Mode,@object
	.section	.rodata.type...68x.7github_com_spolu_warp.Mode,"aG",@progbits,type...68x.7github_com_spolu_warp.Mode,comdat
	.weak	type...68x.7github_com_spolu_warp.Mode
	.p2align	4
type...68x.7github_com_spolu_warp.Mode:
	.quad	64
	.quad	0
	.long	2224172885
	.byte	145
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	0
	.quad	go..C214
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.Mode..d
	.quad	type...6.7github_com_spolu_warp.Mode
	.quad	8
	.size	type...68x.7github_com_spolu_warp.Mode, 96

	.type	.Lconst.163,@object
	.section	.rodata..Lconst.163,"a",@progbits
.Lconst.163:
	.asciz	"[8]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.163, 36

	.type	go..C214,@object
	.section	.rodata.go..C214,"a",@progbits
	.p2align	3
go..C214:
	.quad	.Lconst.163
	.quad	35
	.size	go..C214, 16

	.type	type...6.7github_com_spolu_warp.Mode,@object
	.section	.rodata.type...6.7github_com_spolu_warp.Mode,"aG",@progbits,type...6.7github_com_spolu_warp.Mode,comdat
	.weak	type...6.7github_com_spolu_warp.Mode
	.p2align	4
type...6.7github_com_spolu_warp.Mode:
	.quad	24
	.quad	8
	.long	3259570097
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C215
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.Mode..d
	.size	type...6.7github_com_spolu_warp.Mode, 80

	.type	.Lconst.164,@object
	.section	.rodata..Lconst.164,"a",@progbits
.Lconst.164:
	.asciz	"[]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.164, 35

	.type	go..C215,@object
	.section	.rodata.go..C215,"a",@progbits
	.p2align	3
go..C215:
	.quad	.Lconst.164
	.quad	34
	.size	go..C215, 16

	.type	go..C216,@object
	.section	.rodata.go..C216,"a",@progbits
	.p2align	3
go..C216:
	.quad	.Lconst.32
	.quad	8
	.size	go..C216, 16

	.type	go..C217,@object
	.section	.data.go..C217,"aw",@progbits
	.p2align	4
go..C217:
	.quad	go..C211
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C212
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C213
	.quad	0
	.quad	type...68x.7github_com_spolu_warp.Mode
	.quad	0
	.quad	272
	.quad	go..C216
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	400
	.size	go..C217, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1404508644
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C218
	.quad	0
	.quad	0
	.quad	go..C229
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.165,@object
	.section	.rodata..Lconst.165,"a",@progbits
.Lconst.165:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.165, 326

	.type	go..C218,@object
	.section	.rodata.go..C218,"a",@progbits
	.p2align	3
go..C218:
	.quad	.Lconst.165
	.quad	325
	.size	go..C218, 16

	.type	go..C219,@object
	.section	.rodata.go..C219,"a",@progbits
	.p2align	3
go..C219:
	.quad	.Lconst.34
	.quad	5
	.size	go..C219, 16

	.type	go..C220,@object
	.section	.rodata.go..C220,"a",@progbits
	.p2align	3
go..C220:
	.quad	.Lconst.37
	.quad	5
	.size	go..C220, 16

	.type	go..C221,@object
	.section	.rodata.go..C221,"a",@progbits
	.p2align	3
go..C221:
	.quad	.Lconst.38
	.quad	1
	.size	go..C221, 16

	.type	go..C222,@object
	.section	.rodata.go..C222,"a",@progbits
	.p2align	3
go..C222:
	.quad	.Lconst.39
	.quad	9
	.size	go..C222, 16

	.type	go..C223,@object
	.section	.rodata.go..C223,"a",@progbits
	.p2align	3
go..C223:
	.quad	.Lconst.42
	.quad	5
	.size	go..C223, 16

	.type	go..C224,@object
	.section	.rodata.go..C224,"a",@progbits
	.p2align	3
go..C224:
	.quad	.Lconst.45
	.quad	7
	.size	go..C224, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	730000457
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C225
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.166,@object
	.section	.rodata..Lconst.166,"a",@progbits
.Lconst.166:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.Mode; overflow * }"
	.size	.Lconst.166, 101

	.type	go..C225,@object
	.section	.rodata.go..C225,"a",@progbits
	.p2align	3
go..C225:
	.quad	.Lconst.166
	.quad	100
	.size	go..C225, 16

	.type	go..C226,@object
	.section	.rodata.go..C226,"a",@progbits
	.p2align	3
go..C226:
	.quad	.Lconst.47
	.quad	10
	.size	go..C226, 16

	.type	go..C227,@object
	.section	.rodata.go..C227,"a",@progbits
	.p2align	3
go..C227:
	.quad	.Lconst.48
	.quad	9
	.size	go..C227, 16

	.type	go..C228,@object
	.section	.rodata.go..C228,"a",@progbits
	.p2align	3
go..C228:
	.quad	.Lconst.51
	.quad	5
	.size	go..C228, 16

	.type	go..C229,@object
	.section	.data.go..C229,"aw",@progbits
	.p2align	4
go..C229:
	.quad	go..C219
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C220
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C221
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C222
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C223
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C224
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C226
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.Mode.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C227
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C228
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C229, 360

	.type	go..C230,@object
	.section	.data.go..C230,"aw",@progbits
	.p2align	3
go..C230:
	.quad	type..map.6string.7github_com_spolu_warp.Mode
	.size	go..C230, 8

	.type	type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9:
	.quad	8
	.quad	8
	.long	1506477160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C231
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C232
	.quad	1
	.quad	1
	.quad	go..C233
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9, 128

	.type	.Lconst.167,@object
	.section	.rodata..Lconst.167,"a",@progbits
.Lconst.167:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session) map[string]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.167, 87

	.type	go..C231,@object
	.section	.rodata.go..C231,"a",@progbits
	.p2align	3
go..C231:
	.quad	.Lconst.167
	.quad	86
	.size	go..C231, 16

	.type	go..C232,@object
	.section	.data.go..C232,"aw",@progbits
	.p2align	3
go..C232:
	.quad	type...1command_line_arguments.Session
	.size	go..C232, 8

	.type	go..C233,@object
	.section	.data.go..C233,"aw",@progbits
	.p2align	3
go..C233:
	.quad	type..map.6string.7github_com_spolu_warp.Mode
	.size	go..C233, 8

	.type	.Lconst.168,@object
	.section	.rodata..Lconst.168,"a",@progbits
.Lconst.168:
	.asciz	"ProtocolState"
	.size	.Lconst.168, 14

	.type	go..C234,@object
	.section	.rodata.go..C234,"a",@progbits
	.p2align	3
go..C234:
	.quad	.Lconst.168
	.quad	13
	.size	go..C234, 16

	.type	type..func.8.9.8github_com_spolu_warp.State.9,@object
	.section	.rodata.type..func.8.9.8github_com_spolu_warp.State.9,"aG",@progbits,type..func.8.9.8github_com_spolu_warp.State.9,comdat
	.weak	type..func.8.9.8github_com_spolu_warp.State.9
	.p2align	4
type..func.8.9.8github_com_spolu_warp.State.9:
	.quad	8
	.quad	8
	.long	2463085896
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C235
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C236
	.quad	0
	.quad	0
	.quad	go..C237
	.quad	1
	.quad	1
	.size	type..func.8.9.8github_com_spolu_warp.State.9, 128

	.type	.Lconst.169,@object
	.section	.rodata..Lconst.169,"a",@progbits
.Lconst.169:
	.asciz	"func() \tgithub_com_spolu_warp\twarp.State"
	.size	.Lconst.169, 41

	.type	go..C235,@object
	.section	.rodata.go..C235,"a",@progbits
	.p2align	3
go..C235:
	.quad	.Lconst.169
	.quad	40
	.size	go..C235, 16

	.type	go..C236,@object
	.section	.bss.go..C236,"aw",@nobits
	.p2align	3
go..C236:
	.zero	8
	.size	go..C236, 8

	.type	go..C237,@object
	.section	.data.go..C237,"aw",@progbits
	.p2align	3
go..C237:
	.quad	github_com_spolu_warp.State..d
	.size	go..C237, 8

	.type	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9:
	.quad	8
	.quad	8
	.long	599467624
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C238
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C239
	.quad	1
	.quad	1
	.quad	go..C240
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9, 128

	.type	.Lconst.170,@object
	.section	.rodata..Lconst.170,"a",@progbits
.Lconst.170:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session) \tgithub_com_spolu_warp\twarp.State"
	.size	.Lconst.170, 77

	.type	go..C238,@object
	.section	.rodata.go..C238,"a",@progbits
	.p2align	3
go..C238:
	.quad	.Lconst.170
	.quad	76
	.size	go..C238, 16

	.type	go..C239,@object
	.section	.data.go..C239,"aw",@progbits
	.p2align	3
go..C239:
	.quad	type...1command_line_arguments.Session
	.size	go..C239, 8

	.type	go..C240,@object
	.section	.data.go..C240,"aw",@progbits
	.p2align	3
go..C240:
	.quad	github_com_spolu_warp.State..d
	.size	go..C240, 8

	.type	.Lconst.171,@object
	.section	.rodata..Lconst.171,"a",@progbits
.Lconst.171:
	.asciz	"SendHostUpdate"
	.size	.Lconst.171, 15

	.type	go..C241,@object
	.section	.rodata.go..C241,"a",@progbits
	.p2align	3
go..C241:
	.quad	.Lconst.171
	.quad	14
	.size	go..C241, 16

	.type	type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9,"aG",@progbits,type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9,comdat
	.weak	type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9
	.p2align	4
type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9:
	.quad	8
	.quad	8
	.long	3857615336
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C242
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C243
	.quad	2
	.quad	2
	.quad	go..C244
	.quad	1
	.quad	1
	.size	type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9, 128

	.type	.Lconst.172,@object
	.section	.rodata..Lconst.172,"a",@progbits
.Lconst.172:
	.asciz	"func(\tcontext\tcontext.Context, \tgithub_com_spolu_warp\twarp.HostUpdate) error"
	.size	.Lconst.172, 77

	.type	go..C242,@object
	.section	.rodata.go..C242,"a",@progbits
	.p2align	3
go..C242:
	.quad	.Lconst.172
	.quad	76
	.size	go..C242, 16

	.type	go..C243,@object
	.section	.data.go..C243,"aw",@progbits
	.p2align	3
go..C243:
	.quad	context.Context..d
	.quad	github_com_spolu_warp.HostUpdate..d
	.size	go..C243, 16

	.type	go..C244,@object
	.section	.data.go..C244,"aw",@progbits
	.p2align	3
go..C244:
	.quad	error..d
	.size	go..C244, 8

	.type	type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9:
	.quad	8
	.quad	8
	.long	367906600
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C245
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C246
	.quad	3
	.quad	3
	.quad	go..C247
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9, 128

	.type	.Lconst.173,@object
	.section	.rodata..Lconst.173,"a",@progbits
.Lconst.173:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session, \tcontext\tcontext.Context, \tgithub_com_spolu_warp\twarp.HostUpdate) error"
	.size	.Lconst.173, 115

	.type	go..C245,@object
	.section	.rodata.go..C245,"a",@progbits
	.p2align	3
go..C245:
	.quad	.Lconst.173
	.quad	114
	.size	go..C245, 16

	.type	go..C246,@object
	.section	.data.go..C246,"aw",@progbits
	.p2align	4
go..C246:
	.quad	type...1command_line_arguments.Session
	.quad	context.Context..d
	.quad	github_com_spolu_warp.HostUpdate..d
	.size	go..C246, 24

	.type	go..C247,@object
	.section	.data.go..C247,"aw",@progbits
	.p2align	3
go..C247:
	.quad	error..d
	.size	go..C247, 8

	.type	go..C248,@object
	.section	.rodata.go..C248,"a",@progbits
	.p2align	3
go..C248:
	.quad	.Lconst.140
	.quad	7
	.size	go..C248, 16

	.type	type..func.8.9.8github_com_spolu_warp.Session.9,@object
	.section	.rodata.type..func.8.9.8github_com_spolu_warp.Session.9,"aG",@progbits,type..func.8.9.8github_com_spolu_warp.Session.9,comdat
	.weak	type..func.8.9.8github_com_spolu_warp.Session.9
	.p2align	4
type..func.8.9.8github_com_spolu_warp.Session.9:
	.quad	8
	.quad	8
	.long	1392517384
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C249
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C250
	.quad	0
	.quad	0
	.quad	go..C251
	.quad	1
	.quad	1
	.size	type..func.8.9.8github_com_spolu_warp.Session.9, 128

	.type	.Lconst.174,@object
	.section	.rodata..Lconst.174,"a",@progbits
.Lconst.174:
	.asciz	"func() \tgithub_com_spolu_warp\twarp.Session"
	.size	.Lconst.174, 43

	.type	go..C249,@object
	.section	.rodata.go..C249,"a",@progbits
	.p2align	3
go..C249:
	.quad	.Lconst.174
	.quad	42
	.size	go..C249, 16

	.type	go..C250,@object
	.section	.bss.go..C250,"aw",@nobits
	.p2align	3
go..C250:
	.zero	8
	.size	go..C250, 8

	.type	go..C251,@object
	.section	.data.go..C251,"aw",@progbits
	.p2align	3
go..C251:
	.quad	github_com_spolu_warp.Session..d
	.size	go..C251, 8

	.type	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9:
	.quad	8
	.quad	8
	.long	3823866408
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C252
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C253
	.quad	1
	.quad	1
	.quad	go..C254
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9, 128

	.type	.Lconst.175,@object
	.section	.rodata..Lconst.175,"a",@progbits
.Lconst.175:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session) \tgithub_com_spolu_warp\twarp.Session"
	.size	.Lconst.175, 79

	.type	go..C252,@object
	.section	.rodata.go..C252,"a",@progbits
	.p2align	3
go..C252:
	.quad	.Lconst.175
	.quad	78
	.size	go..C252, 16

	.type	go..C253,@object
	.section	.data.go..C253,"aw",@progbits
	.p2align	3
go..C253:
	.quad	type...1command_line_arguments.Session
	.size	go..C253, 8

	.type	go..C254,@object
	.section	.data.go..C254,"aw",@progbits
	.p2align	3
go..C254:
	.quad	github_com_spolu_warp.Session..d
	.size	go..C254, 8

	.type	.Lconst.176,@object
	.section	.rodata..Lconst.176,"a",@progbits
.Lconst.176:
	.asciz	"SetMode"
	.size	.Lconst.176, 8

	.type	go..C255,@object
	.section	.rodata.go..C255,"a",@progbits
	.p2align	3
go..C255:
	.quad	.Lconst.176
	.quad	7
	.size	go..C255, 16

	.type	type..func.8string.3github_com_spolu_warp.Mode.9.8error.9,@object
	.section	.rodata.type..func.8string.3github_com_spolu_warp.Mode.9.8error.9,"aG",@progbits,type..func.8string.3github_com_spolu_warp.Mode.9.8error.9,comdat
	.weak	type..func.8string.3github_com_spolu_warp.Mode.9.8error.9
	.p2align	4
type..func.8string.3github_com_spolu_warp.Mode.9.8error.9:
	.quad	8
	.quad	8
	.long	4100813256
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C256
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C257
	.quad	2
	.quad	2
	.quad	go..C258
	.quad	1
	.quad	1
	.size	type..func.8string.3github_com_spolu_warp.Mode.9.8error.9, 128

	.type	.Lconst.177,@object
	.section	.rodata..Lconst.177,"a",@progbits
.Lconst.177:
	.asciz	"func(string, \tgithub_com_spolu_warp\twarp.Mode) error"
	.size	.Lconst.177, 53

	.type	go..C256,@object
	.section	.rodata.go..C256,"a",@progbits
	.p2align	3
go..C256:
	.quad	.Lconst.177
	.quad	52
	.size	go..C256, 16

	.type	go..C257,@object
	.section	.data.go..C257,"aw",@progbits
	.p2align	3
go..C257:
	.quad	string..d
	.quad	github_com_spolu_warp.Mode..d
	.size	go..C257, 16

	.type	go..C258,@object
	.section	.data.go..C258,"aw",@progbits
	.p2align	3
go..C258:
	.quad	error..d
	.size	go..C258, 8

	.type	type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9:
	.quad	8
	.quad	8
	.long	854302440
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C259
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C260
	.quad	3
	.quad	3
	.quad	go..C261
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9, 128

	.type	.Lconst.178,@object
	.section	.rodata..Lconst.178,"a",@progbits
.Lconst.178:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session, string, \tgithub_com_spolu_warp\twarp.Mode) error"
	.size	.Lconst.178, 91

	.type	go..C259,@object
	.section	.rodata.go..C259,"a",@progbits
	.p2align	3
go..C259:
	.quad	.Lconst.178
	.quad	90
	.size	go..C259, 16

	.type	go..C260,@object
	.section	.data.go..C260,"aw",@progbits
	.p2align	4
go..C260:
	.quad	type...1command_line_arguments.Session
	.quad	string..d
	.quad	github_com_spolu_warp.Mode..d
	.size	go..C260, 24

	.type	go..C261,@object
	.section	.data.go..C261,"aw",@progbits
	.p2align	3
go..C261:
	.quad	error..d
	.size	go..C261, 8

	.type	.Lconst.179,@object
	.section	.rodata..Lconst.179,"a",@progbits
.Lconst.179:
	.asciz	"TearDown"
	.size	.Lconst.179, 9

	.type	go..C262,@object
	.section	.rodata.go..C262,"a",@progbits
	.p2align	3
go..C262:
	.quad	.Lconst.179
	.quad	8
	.size	go..C262, 16

	.type	type..func.8.9.8.9,@object
	.section	.rodata.type..func.8.9.8.9,"aG",@progbits,type..func.8.9.8.9,comdat
	.weak	type..func.8.9.8.9
	.p2align	4
type..func.8.9.8.9:
	.quad	8
	.quad	8
	.long	8
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C263
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C264
	.quad	0
	.quad	0
	.quad	go..C265
	.quad	0
	.quad	0
	.size	type..func.8.9.8.9, 128

	.type	.Lconst.180,@object
	.section	.rodata..Lconst.180,"a",@progbits
.Lconst.180:
	.asciz	"func()"
	.size	.Lconst.180, 7

	.type	go..C263,@object
	.section	.rodata.go..C263,"a",@progbits
	.p2align	3
go..C263:
	.quad	.Lconst.180
	.quad	6
	.size	go..C263, 16

	.type	go..C264,@object
	.section	.bss.go..C264,"aw",@nobits
	.p2align	3
go..C264:
	.zero	8
	.size	go..C264, 8

	.type	go..C265,@object
	.section	.bss.go..C265,"aw",@nobits
	.p2align	3
go..C265:
	.zero	8
	.size	go..C265, 8

	.type	type..func.8.1command_line_arguments.Session.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8.9:
	.quad	8
	.quad	8
	.long	2431349032
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C266
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C267
	.quad	1
	.quad	1
	.quad	go..C268
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Session.9.8.9, 128

	.type	.Lconst.181,@object
	.section	.rodata..Lconst.181,"a",@progbits
.Lconst.181:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session)"
	.size	.Lconst.181, 43

	.type	go..C266,@object
	.section	.rodata.go..C266,"a",@progbits
	.p2align	3
go..C266:
	.quad	.Lconst.181
	.quad	42
	.size	go..C266, 16

	.type	go..C267,@object
	.section	.data.go..C267,"aw",@progbits
	.p2align	3
go..C267:
	.quad	type...1command_line_arguments.Session
	.size	go..C267, 8

	.type	go..C268,@object
	.section	.bss.go..C268,"aw",@nobits
	.p2align	3
go..C268:
	.zero	8
	.size	go..C268, 8

	.type	.Lconst.182,@object
	.section	.rodata..Lconst.182,"a",@progbits
.Lconst.182:
	.asciz	"TornDown"
	.size	.Lconst.182, 9

	.type	go..C269,@object
	.section	.rodata.go..C269,"a",@progbits
	.p2align	3
go..C269:
	.quad	.Lconst.182
	.quad	8
	.size	go..C269, 16

	.type	.Lconst.183,@object
	.section	.rodata..Lconst.183,"a",@progbits
.Lconst.183:
	.asciz	"UpdateState"
	.size	.Lconst.183, 12

	.type	go..C270,@object
	.section	.rodata.go..C270,"a",@progbits
	.p2align	3
go..C270:
	.quad	.Lconst.183
	.quad	11
	.size	go..C270, 16

	.type	type..func.8github_com_spolu_warp.State.3bool.9.8error.9,@object
	.section	.rodata.type..func.8github_com_spolu_warp.State.3bool.9.8error.9,"aG",@progbits,type..func.8github_com_spolu_warp.State.3bool.9.8error.9,comdat
	.weak	type..func.8github_com_spolu_warp.State.3bool.9.8error.9
	.p2align	4
type..func.8github_com_spolu_warp.State.3bool.9.8error.9:
	.quad	8
	.quad	8
	.long	4205900968
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C271
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C272
	.quad	2
	.quad	2
	.quad	go..C273
	.quad	1
	.quad	1
	.size	type..func.8github_com_spolu_warp.State.3bool.9.8error.9, 128

	.type	.Lconst.184,@object
	.section	.rodata..Lconst.184,"a",@progbits
.Lconst.184:
	.asciz	"func(\tgithub_com_spolu_warp\twarp.State, bool) error"
	.size	.Lconst.184, 52

	.type	go..C271,@object
	.section	.rodata.go..C271,"a",@progbits
	.p2align	3
go..C271:
	.quad	.Lconst.184
	.quad	51
	.size	go..C271, 16

	.type	go..C272,@object
	.section	.data.go..C272,"aw",@progbits
	.p2align	3
go..C272:
	.quad	github_com_spolu_warp.State..d
	.quad	bool..d
	.size	go..C272, 16

	.type	go..C273,@object
	.section	.data.go..C273,"aw",@progbits
	.p2align	3
go..C273:
	.quad	error..d
	.size	go..C273, 8

	.type	type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9:
	.quad	8
	.quad	8
	.long	1064477864
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C274
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C275
	.quad	3
	.quad	3
	.quad	go..C276
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9, 128

	.type	.Lconst.185,@object
	.section	.rodata..Lconst.185,"a",@progbits
.Lconst.185:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session, \tgithub_com_spolu_warp\twarp.State, bool) error"
	.size	.Lconst.185, 90

	.type	go..C274,@object
	.section	.rodata.go..C274,"a",@progbits
	.p2align	3
go..C274:
	.quad	.Lconst.185
	.quad	89
	.size	go..C274, 16

	.type	go..C275,@object
	.section	.data.go..C275,"aw",@progbits
	.p2align	4
go..C275:
	.quad	type...1command_line_arguments.Session
	.quad	github_com_spolu_warp.State..d
	.quad	bool..d
	.size	go..C275, 24

	.type	go..C276,@object
	.section	.data.go..C276,"aw",@progbits
	.p2align	3
go..C276:
	.quad	error..d
	.size	go..C276, 8

	.type	.Lconst.186,@object
	.section	.rodata..Lconst.186,"a",@progbits
.Lconst.186:
	.asciz	"Warp"
	.size	.Lconst.186, 5

	.type	go..C277,@object
	.section	.rodata.go..C277,"a",@progbits
	.p2align	3
go..C277:
	.quad	.Lconst.186
	.quad	4
	.size	go..C277, 16

	.type	type..func.8.1command_line_arguments.Session.9.8string.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8string.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8string.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8string.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8string.9:
	.quad	8
	.quad	8
	.long	3347388328
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C278
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C279
	.quad	1
	.quad	1
	.quad	go..C280
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8string.9, 128

	.type	.Lconst.187,@object
	.section	.rodata..Lconst.187,"a",@progbits
.Lconst.187:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session) string"
	.size	.Lconst.187, 50

	.type	go..C278,@object
	.section	.rodata.go..C278,"a",@progbits
	.p2align	3
go..C278:
	.quad	.Lconst.187
	.quad	49
	.size	go..C278, 16

	.type	go..C279,@object
	.section	.data.go..C279,"aw",@progbits
	.p2align	3
go..C279:
	.quad	type...1command_line_arguments.Session
	.size	go..C279, 8

	.type	go..C280,@object
	.section	.data.go..C280,"aw",@progbits
	.p2align	3
go..C280:
	.quad	string..d
	.size	go..C280, 8

	.type	.Lconst.188,@object
	.section	.rodata..Lconst.188,"a",@progbits
.Lconst.188:
	.asciz	"WindowSize"
	.size	.Lconst.188, 11

	.type	go..C281,@object
	.section	.rodata.go..C281,"a",@progbits
	.p2align	3
go..C281:
	.quad	.Lconst.188
	.quad	10
	.size	go..C281, 16

	.type	type..func.8.9.8github_com_spolu_warp.Size.9,@object
	.section	.rodata.type..func.8.9.8github_com_spolu_warp.Size.9,"aG",@progbits,type..func.8.9.8github_com_spolu_warp.Size.9,comdat
	.weak	type..func.8.9.8github_com_spolu_warp.Size.9
	.p2align	4
type..func.8.9.8github_com_spolu_warp.Size.9:
	.quad	8
	.quad	8
	.long	3635480136
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C282
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C283
	.quad	0
	.quad	0
	.quad	go..C284
	.quad	1
	.quad	1
	.size	type..func.8.9.8github_com_spolu_warp.Size.9, 128

	.type	.Lconst.189,@object
	.section	.rodata..Lconst.189,"a",@progbits
.Lconst.189:
	.asciz	"func() \tgithub_com_spolu_warp\twarp.Size"
	.size	.Lconst.189, 40

	.type	go..C282,@object
	.section	.rodata.go..C282,"a",@progbits
	.p2align	3
go..C282:
	.quad	.Lconst.189
	.quad	39
	.size	go..C282, 16

	.type	go..C283,@object
	.section	.bss.go..C283,"aw",@nobits
	.p2align	3
go..C283:
	.zero	8
	.size	go..C283, 8

	.type	go..C284,@object
	.section	.data.go..C284,"aw",@progbits
	.p2align	3
go..C284:
	.quad	github_com_spolu_warp.Size..d
	.size	go..C284, 8

	.type	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9
	.p2align	4
type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9:
	.quad	8
	.quad	8
	.long	1771861864
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C285
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C286
	.quad	1
	.quad	1
	.quad	go..C287
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9, 128

	.type	.Lconst.190,@object
	.section	.rodata..Lconst.190,"a",@progbits
.Lconst.190:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session) \tgithub_com_spolu_warp\twarp.Size"
	.size	.Lconst.190, 76

	.type	go..C285,@object
	.section	.rodata.go..C285,"a",@progbits
	.p2align	3
go..C285:
	.quad	.Lconst.190
	.quad	75
	.size	go..C285, 16

	.type	go..C286,@object
	.section	.data.go..C286,"aw",@progbits
	.p2align	3
go..C286:
	.quad	type...1command_line_arguments.Session
	.size	go..C286, 8

	.type	go..C287,@object
	.section	.data.go..C287,"aw",@progbits
	.p2align	3
go..C287:
	.quad	github_com_spolu_warp.Size..d
	.size	go..C287, 8

	.type	.Lconst.191,@object
	.section	.rodata..Lconst.191,"a",@progbits
.Lconst.191:
	.asciz	"WriteDataC"
	.size	.Lconst.191, 11

	.type	go..C288,@object
	.section	.rodata.go..C288,"a",@progbits
	.p2align	3
go..C288:
	.quad	.Lconst.191
	.quad	10
	.size	go..C288, 16

	.type	type..func.8.6.7uint8.9.8.9,@object
	.section	.rodata.type..func.8.6.7uint8.9.8.9,"aG",@progbits,type..func.8.6.7uint8.9.8.9,comdat
	.weak	type..func.8.6.7uint8.9.8.9
	.p2align	4
type..func.8.6.7uint8.9.8.9:
	.quad	8
	.quad	8
	.long	4173260008
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C289
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C290
	.quad	1
	.quad	1
	.quad	go..C291
	.quad	0
	.quad	0
	.size	type..func.8.6.7uint8.9.8.9, 128

	.type	.Lconst.192,@object
	.section	.rodata..Lconst.192,"a",@progbits
.Lconst.192:
	.asciz	"func([]uint8)"
	.size	.Lconst.192, 14

	.type	go..C289,@object
	.section	.rodata.go..C289,"a",@progbits
	.p2align	3
go..C289:
	.quad	.Lconst.192
	.quad	13
	.size	go..C289, 16

	.type	go..C290,@object
	.section	.data.go..C290,"aw",@progbits
	.p2align	3
go..C290:
	.quad	type...6.7uint8
	.size	go..C290, 8

	.type	go..C291,@object
	.section	.bss.go..C291,"aw",@nobits
	.p2align	3
go..C291:
	.zero	8
	.size	go..C291, 8

	.type	type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9:
	.quad	8
	.quad	8
	.long	2187934440
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C292
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C293
	.quad	2
	.quad	2
	.quad	go..C294
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9, 128

	.type	.Lconst.193,@object
	.section	.rodata..Lconst.193,"a",@progbits
.Lconst.193:
	.asciz	"func(*\tcommand_line_arguments\tcli.Session, []uint8)"
	.size	.Lconst.193, 52

	.type	go..C292,@object
	.section	.rodata.go..C292,"a",@progbits
	.p2align	3
go..C292:
	.quad	.Lconst.193
	.quad	51
	.size	go..C292, 16

	.type	go..C293,@object
	.section	.data.go..C293,"aw",@progbits
	.p2align	3
go..C293:
	.quad	type...1command_line_arguments.Session
	.quad	type...6.7uint8
	.size	go..C293, 16

	.type	go..C294,@object
	.section	.bss.go..C294,"aw",@nobits
	.p2align	3
go..C294:
	.zero	8
	.size	go..C294, 8

	.type	go..C295,@object
	.section	.data.go..C295,"aw",@progbits
	.p2align	4
go..C295:
	.quad	go..C166
	.quad	0
	.quad	type..func.8.9.8net.Conn.9
	.quad	type..func.8.1command_line_arguments.Session.9.8net.Conn.9
	.quad	command_line_arguments.Session.DataC
	.quad	go..C173
	.quad	0
	.quad	type..func.8context.Context.9.8.1github_com_spolu_warp.Error.3error.9
	.quad	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.Error.3error.9
	.quad	command_line_arguments.Session.DecodeError
	.quad	go..C180
	.quad	0
	.quad	type..func.8context.Context.9.8.1github_com_spolu_warp.State.3error.9
	.quad	type..func.8.1command_line_arguments.Session.3context.Context.9.8.1github_com_spolu_warp.State.3error.9
	.quad	command_line_arguments.Session.DecodeState
	.quad	go..C187
	.quad	0
	.quad	type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9
	.quad	type..func.8.1command_line_arguments.Session.3string.9.8.1github_com_spolu_warp.Mode.3error.9
	.quad	command_line_arguments.Session.GetMode
	.quad	go..C194
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.Session.9.8bool.9
	.quad	command_line_arguments.Session.HostCanReceiveWrite
	.quad	go..C206
	.quad	0
	.quad	type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9
	.quad	type..func.8.1command_line_arguments.Session.9.8map.6string.7github_com_spolu_warp.Mode.9
	.quad	command_line_arguments.Session.Modes
	.quad	go..C234
	.quad	0
	.quad	type..func.8.9.8github_com_spolu_warp.State.9
	.quad	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.State.9
	.quad	command_line_arguments.Session.ProtocolState
	.quad	go..C241
	.quad	0
	.quad	type..func.8context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9
	.quad	type..func.8.1command_line_arguments.Session.3context.Context.3github_com_spolu_warp.HostUpdate.9.8error.9
	.quad	command_line_arguments.Session.SendHostUpdate
	.quad	go..C248
	.quad	0
	.quad	type..func.8.9.8github_com_spolu_warp.Session.9
	.quad	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Session.9
	.quad	command_line_arguments.Session.Session
	.quad	go..C255
	.quad	0
	.quad	type..func.8string.3github_com_spolu_warp.Mode.9.8error.9
	.quad	type..func.8.1command_line_arguments.Session.3string.3github_com_spolu_warp.Mode.9.8error.9
	.quad	command_line_arguments.Session.SetMode
	.quad	go..C262
	.quad	0
	.quad	type..func.8.9.8.9
	.quad	type..func.8.1command_line_arguments.Session.9.8.9
	.quad	command_line_arguments.Session.TearDown
	.quad	go..C269
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.Session.9.8bool.9
	.quad	command_line_arguments.Session.TornDown
	.quad	go..C270
	.quad	0
	.quad	type..func.8github_com_spolu_warp.State.3bool.9.8error.9
	.quad	type..func.8.1command_line_arguments.Session.3github_com_spolu_warp.State.3bool.9.8error.9
	.quad	command_line_arguments.Session.UpdateState
	.quad	go..C277
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.Session.9.8string.9
	.quad	command_line_arguments.Session.Warp
	.quad	go..C281
	.quad	0
	.quad	type..func.8.9.8github_com_spolu_warp.Size.9
	.quad	type..func.8.1command_line_arguments.Session.9.8github_com_spolu_warp.Size.9
	.quad	command_line_arguments.Session.WindowSize
	.quad	go..C288
	.quad	0
	.quad	type..func.8.6.7uint8.9.8.9
	.quad	type..func.8.1command_line_arguments.Session.3.6.7uint8.9.8.9
	.quad	command_line_arguments.Session.WriteDataC
	.size	go..C295, 640

	.type	go..C296,@object
	.section	.rodata.go..C296,"a",@progbits
	.p2align	4
go..C296:
	.quad	0
	.quad	0
	.quad	go..C295
	.quad	16
	.quad	16
	.size	go..C296, 40

	.type	type...1.1command_line_arguments.Session,@object
	.section	.rodata.type...1.1command_line_arguments.Session,"aG",@progbits,type...1.1command_line_arguments.Session,comdat
	.weak	type...1.1command_line_arguments.Session
	.p2align	4
type...1.1command_line_arguments.Session:
	.quad	8
	.quad	8
	.long	3363158169
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C297
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Session
	.size	type...1.1command_line_arguments.Session, 80

	.type	.Lconst.194,@object
	.section	.rodata..Lconst.194,"a",@progbits
.Lconst.194:
	.asciz	"**\tcommand_line_arguments\tcli.Session"
	.size	.Lconst.194, 38

	.type	go..C297,@object
	.section	.rodata.go..C297,"a",@progbits
	.p2align	3
go..C297:
	.quad	.Lconst.194
	.quad	37
	.size	go..C297, 16

	.type	.Lconst.195,@object
	.section	.rodata..Lconst.195,"a",@progbits
.Lconst.195:
	.asciz	"session"
	.size	.Lconst.195, 8

	.type	go..C298,@object
	.section	.rodata.go..C298,"a",@progbits
	.p2align	3
go..C298:
	.quad	.Lconst.195
	.quad	7
	.size	go..C298, 16

	.type	go..C299,@object
	.section	.rodata.go..C299,"a",@progbits
	.p2align	3
go..C299:
	.quad	.Lconst.2
	.quad	22
	.size	go..C299, 16

	.type	.Lconst.196,@object
	.section	.rodata..Lconst.196,"a",@progbits
.Lconst.196:
	.asciz	"warp"
	.size	.Lconst.196, 5

	.type	go..C300,@object
	.section	.rodata.go..C300,"a",@progbits
	.p2align	3
go..C300:
	.quad	.Lconst.196
	.quad	4
	.size	go..C300, 16

	.type	go..C301,@object
	.section	.rodata.go..C301,"a",@progbits
	.p2align	3
go..C301:
	.quad	.Lconst.2
	.quad	22
	.size	go..C301, 16

	.type	.Lconst.197,@object
	.section	.rodata..Lconst.197,"a",@progbits
.Lconst.197:
	.asciz	"sessionType"
	.size	.Lconst.197, 12

	.type	go..C302,@object
	.section	.rodata.go..C302,"a",@progbits
	.p2align	3
go..C302:
	.quad	.Lconst.197
	.quad	11
	.size	go..C302, 16

	.type	go..C303,@object
	.section	.rodata.go..C303,"a",@progbits
	.p2align	3
go..C303:
	.quad	.Lconst.2
	.quad	22
	.size	go..C303, 16

	.type	.Lconst.198,@object
	.section	.rodata..Lconst.198,"a",@progbits
.Lconst.198:
	.asciz	"username"
	.size	.Lconst.198, 9

	.type	go..C304,@object
	.section	.rodata.go..C304,"a",@progbits
	.p2align	3
go..C304:
	.quad	.Lconst.198
	.quad	8
	.size	go..C304, 16

	.type	go..C305,@object
	.section	.rodata.go..C305,"a",@progbits
	.p2align	3
go..C305:
	.quad	.Lconst.2
	.quad	22
	.size	go..C305, 16

	.type	.Lconst.199,@object
	.section	.rodata..Lconst.199,"a",@progbits
.Lconst.199:
	.asciz	"conn"
	.size	.Lconst.199, 5

	.type	go..C306,@object
	.section	.rodata.go..C306,"a",@progbits
	.p2align	3
go..C306:
	.quad	.Lconst.199
	.quad	4
	.size	go..C306, 16

	.type	go..C307,@object
	.section	.rodata.go..C307,"a",@progbits
	.p2align	3
go..C307:
	.quad	.Lconst.2
	.quad	22
	.size	go..C307, 16

	.type	.Lconst.200,@object
	.section	.rodata..Lconst.200,"a",@progbits
.Lconst.200:
	.asciz	"mux"
	.size	.Lconst.200, 4

	.type	go..C308,@object
	.section	.rodata.go..C308,"a",@progbits
	.p2align	3
go..C308:
	.quad	.Lconst.200
	.quad	3
	.size	go..C308, 16

	.type	go..C309,@object
	.section	.rodata.go..C309,"a",@progbits
	.p2align	3
go..C309:
	.quad	.Lconst.2
	.quad	22
	.size	go..C309, 16

	.type	.Lconst.201,@object
	.section	.rodata..Lconst.201,"a",@progbits
.Lconst.201:
	.asciz	"stateC"
	.size	.Lconst.201, 7

	.type	go..C310,@object
	.section	.rodata.go..C310,"a",@progbits
	.p2align	3
go..C310:
	.quad	.Lconst.201
	.quad	6
	.size	go..C310, 16

	.type	go..C311,@object
	.section	.rodata.go..C311,"a",@progbits
	.p2align	3
go..C311:
	.quad	.Lconst.2
	.quad	22
	.size	go..C311, 16

	.type	.Lconst.202,@object
	.section	.rodata..Lconst.202,"a",@progbits
.Lconst.202:
	.asciz	"stateR"
	.size	.Lconst.202, 7

	.type	go..C312,@object
	.section	.rodata.go..C312,"a",@progbits
	.p2align	3
go..C312:
	.quad	.Lconst.202
	.quad	6
	.size	go..C312, 16

	.type	go..C313,@object
	.section	.rodata.go..C313,"a",@progbits
	.p2align	3
go..C313:
	.quad	.Lconst.2
	.quad	22
	.size	go..C313, 16

	.type	.Lconst.203,@object
	.section	.rodata..Lconst.203,"a",@progbits
.Lconst.203:
	.asciz	"updateC"
	.size	.Lconst.203, 8

	.type	go..C314,@object
	.section	.rodata.go..C314,"a",@progbits
	.p2align	3
go..C314:
	.quad	.Lconst.203
	.quad	7
	.size	go..C314, 16

	.type	go..C315,@object
	.section	.rodata.go..C315,"a",@progbits
	.p2align	3
go..C315:
	.quad	.Lconst.2
	.quad	22
	.size	go..C315, 16

	.type	.Lconst.204,@object
	.section	.rodata..Lconst.204,"a",@progbits
.Lconst.204:
	.asciz	"updateW"
	.size	.Lconst.204, 8

	.type	go..C316,@object
	.section	.rodata.go..C316,"a",@progbits
	.p2align	3
go..C316:
	.quad	.Lconst.204
	.quad	7
	.size	go..C316, 16

	.type	go..C317,@object
	.section	.rodata.go..C317,"a",@progbits
	.p2align	3
go..C317:
	.quad	.Lconst.2
	.quad	22
	.size	go..C317, 16

	.type	.Lconst.205,@object
	.section	.rodata..Lconst.205,"a",@progbits
.Lconst.205:
	.asciz	"errorC"
	.size	.Lconst.205, 7

	.type	go..C318,@object
	.section	.rodata.go..C318,"a",@progbits
	.p2align	3
go..C318:
	.quad	.Lconst.205
	.quad	6
	.size	go..C318, 16

	.type	go..C319,@object
	.section	.rodata.go..C319,"a",@progbits
	.p2align	3
go..C319:
	.quad	.Lconst.2
	.quad	22
	.size	go..C319, 16

	.type	.Lconst.206,@object
	.section	.rodata..Lconst.206,"a",@progbits
.Lconst.206:
	.asciz	"errorR"
	.size	.Lconst.206, 7

	.type	go..C320,@object
	.section	.rodata.go..C320,"a",@progbits
	.p2align	3
go..C320:
	.quad	.Lconst.206
	.quad	6
	.size	go..C320, 16

	.type	go..C321,@object
	.section	.rodata.go..C321,"a",@progbits
	.p2align	3
go..C321:
	.quad	.Lconst.2
	.quad	22
	.size	go..C321, 16

	.type	.Lconst.207,@object
	.section	.rodata..Lconst.207,"a",@progbits
.Lconst.207:
	.asciz	"dataC"
	.size	.Lconst.207, 6

	.type	go..C322,@object
	.section	.rodata.go..C322,"a",@progbits
	.p2align	3
go..C322:
	.quad	.Lconst.207
	.quad	5
	.size	go..C322, 16

	.type	go..C323,@object
	.section	.rodata.go..C323,"a",@progbits
	.p2align	3
go..C323:
	.quad	.Lconst.2
	.quad	22
	.size	go..C323, 16

	.type	.Lconst.208,@object
	.section	.rodata..Lconst.208,"a",@progbits
.Lconst.208:
	.asciz	"state"
	.size	.Lconst.208, 6

	.type	go..C324,@object
	.section	.rodata.go..C324,"a",@progbits
	.p2align	3
go..C324:
	.quad	.Lconst.208
	.quad	5
	.size	go..C324, 16

	.type	go..C325,@object
	.section	.rodata.go..C325,"a",@progbits
	.p2align	3
go..C325:
	.quad	.Lconst.2
	.quad	22
	.size	go..C325, 16

	.type	type...1command_line_arguments.WarpState,@object
	.section	.rodata.type...1command_line_arguments.WarpState,"aG",@progbits,type...1command_line_arguments.WarpState,comdat
	.weak	type...1command_line_arguments.WarpState
	.p2align	4
type...1command_line_arguments.WarpState:
	.quad	8
	.quad	8
	.long	2871958233
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C326
	.quad	go..C356
	.quad	type...1.1command_line_arguments.WarpState
	.quad	command_line_arguments.WarpState..d
	.size	type...1command_line_arguments.WarpState, 80

	.type	.Lconst.209,@object
	.section	.rodata..Lconst.209,"a",@progbits
.Lconst.209:
	.asciz	"*\tcommand_line_arguments\tcli.WarpState"
	.size	.Lconst.209, 39

	.type	go..C326,@object
	.section	.rodata.go..C326,"a",@progbits
	.p2align	3
go..C326:
	.quad	.Lconst.209
	.quad	38
	.size	go..C326, 16

	.type	go..C327,@object
	.section	.rodata.go..C327,"a",@progbits
	.p2align	3
go..C327:
	.quad	.Lconst.151
	.quad	7
	.size	go..C327, 16

	.type	type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9,"aG",@progbits,type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9,comdat
	.weak	type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9
	.p2align	4
type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9:
	.quad	8
	.quad	8
	.long	1317075816
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C328
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C329
	.quad	2
	.quad	2
	.quad	go..C330
	.quad	2
	.quad	2
	.size	type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9, 128

	.type	.Lconst.210,@object
	.section	.rodata..Lconst.210,"a",@progbits
.Lconst.210:
	.asciz	"func(*\tcommand_line_arguments\tcli.WarpState, string) (*\tgithub_com_spolu_warp\twarp.Mode, error)"
	.size	.Lconst.210, 96

	.type	go..C328,@object
	.section	.rodata.go..C328,"a",@progbits
	.p2align	3
go..C328:
	.quad	.Lconst.210
	.quad	95
	.size	go..C328, 16

	.type	go..C329,@object
	.section	.data.go..C329,"aw",@progbits
	.p2align	3
go..C329:
	.quad	type...1command_line_arguments.WarpState
	.quad	string..d
	.size	go..C329, 16

	.type	go..C330,@object
	.section	.data.go..C330,"aw",@progbits
	.p2align	3
go..C330:
	.quad	type...1github_com_spolu_warp.Mode
	.quad	error..d
	.size	go..C330, 16

	.type	go..C331,@object
	.section	.rodata.go..C331,"a",@progbits
	.p2align	3
go..C331:
	.quad	.Lconst.154
	.quad	19
	.size	go..C331, 16

	.type	type..func.8.1command_line_arguments.WarpState.9.8bool.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.WarpState.9.8bool.9,"aG",@progbits,type..func.8.1command_line_arguments.WarpState.9.8bool.9,comdat
	.weak	type..func.8.1command_line_arguments.WarpState.9.8bool.9
	.p2align	4
type..func.8.1command_line_arguments.WarpState.9.8bool.9:
	.quad	8
	.quad	8
	.long	1346486120
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C332
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C333
	.quad	1
	.quad	1
	.quad	go..C334
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.WarpState.9.8bool.9, 128

	.type	.Lconst.211,@object
	.section	.rodata..Lconst.211,"a",@progbits
.Lconst.211:
	.asciz	"func(*\tcommand_line_arguments\tcli.WarpState) bool"
	.size	.Lconst.211, 50

	.type	go..C332,@object
	.section	.rodata.go..C332,"a",@progbits
	.p2align	3
go..C332:
	.quad	.Lconst.211
	.quad	49
	.size	go..C332, 16

	.type	go..C333,@object
	.section	.data.go..C333,"aw",@progbits
	.p2align	3
go..C333:
	.quad	type...1command_line_arguments.WarpState
	.size	go..C333, 8

	.type	go..C334,@object
	.section	.data.go..C334,"aw",@progbits
	.p2align	3
go..C334:
	.quad	bool..d
	.size	go..C334, 8

	.type	go..C335,@object
	.section	.rodata.go..C335,"a",@progbits
	.p2align	3
go..C335:
	.quad	.Lconst.159
	.quad	5
	.size	go..C335, 16

	.type	type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9,"aG",@progbits,type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9,comdat
	.weak	type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9
	.p2align	4
type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9:
	.quad	8
	.quad	8
	.long	783478376
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C336
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C337
	.quad	1
	.quad	1
	.quad	go..C338
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9, 128

	.type	.Lconst.212,@object
	.section	.rodata..Lconst.212,"a",@progbits
.Lconst.212:
	.asciz	"func(*\tcommand_line_arguments\tcli.WarpState) map[string]\tgithub_com_spolu_warp\twarp.Mode"
	.size	.Lconst.212, 89

	.type	go..C336,@object
	.section	.rodata.go..C336,"a",@progbits
	.p2align	3
go..C336:
	.quad	.Lconst.212
	.quad	88
	.size	go..C336, 16

	.type	go..C337,@object
	.section	.data.go..C337,"aw",@progbits
	.p2align	3
go..C337:
	.quad	type...1command_line_arguments.WarpState
	.size	go..C337, 8

	.type	go..C338,@object
	.section	.data.go..C338,"aw",@progbits
	.p2align	3
go..C338:
	.quad	type..map.6string.7github_com_spolu_warp.Mode
	.size	go..C338, 8

	.type	go..C339,@object
	.section	.rodata.go..C339,"a",@progbits
	.p2align	3
go..C339:
	.quad	.Lconst.168
	.quad	13
	.size	go..C339, 16

	.type	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9,"aG",@progbits,type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9,comdat
	.weak	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9
	.p2align	4
type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9:
	.quad	8
	.quad	8
	.long	4171436136
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C340
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C341
	.quad	1
	.quad	1
	.quad	go..C342
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9, 128

	.type	.Lconst.213,@object
	.section	.rodata..Lconst.213,"a",@progbits
.Lconst.213:
	.asciz	"func(*\tcommand_line_arguments\tcli.WarpState) \tgithub_com_spolu_warp\twarp.State"
	.size	.Lconst.213, 79

	.type	go..C340,@object
	.section	.rodata.go..C340,"a",@progbits
	.p2align	3
go..C340:
	.quad	.Lconst.213
	.quad	78
	.size	go..C340, 16

	.type	go..C341,@object
	.section	.data.go..C341,"aw",@progbits
	.p2align	3
go..C341:
	.quad	type...1command_line_arguments.WarpState
	.size	go..C341, 8

	.type	go..C342,@object
	.section	.data.go..C342,"aw",@progbits
	.p2align	3
go..C342:
	.quad	github_com_spolu_warp.State..d
	.size	go..C342, 8

	.type	go..C343,@object
	.section	.rodata.go..C343,"a",@progbits
	.p2align	3
go..C343:
	.quad	.Lconst.176
	.quad	7
	.size	go..C343, 16

	.type	type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9:
	.quad	8
	.quad	8
	.long	131303656
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C344
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C345
	.quad	3
	.quad	3
	.quad	go..C346
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9, 128

	.type	.Lconst.214,@object
	.section	.rodata..Lconst.214,"a",@progbits
.Lconst.214:
	.asciz	"func(*\tcommand_line_arguments\tcli.WarpState, string, \tgithub_com_spolu_warp\twarp.Mode) error"
	.size	.Lconst.214, 93

	.type	go..C344,@object
	.section	.rodata.go..C344,"a",@progbits
	.p2align	3
go..C344:
	.quad	.Lconst.214
	.quad	92
	.size	go..C344, 16

	.type	go..C345,@object
	.section	.data.go..C345,"aw",@progbits
	.p2align	4
go..C345:
	.quad	type...1command_line_arguments.WarpState
	.quad	string..d
	.quad	github_com_spolu_warp.Mode..d
	.size	go..C345, 24

	.type	go..C346,@object
	.section	.data.go..C346,"aw",@progbits
	.p2align	3
go..C346:
	.quad	error..d
	.size	go..C346, 8

	.type	.Lconst.215,@object
	.section	.rodata..Lconst.215,"a",@progbits
.Lconst.215:
	.asciz	"Update"
	.size	.Lconst.215, 7

	.type	go..C347,@object
	.section	.rodata.go..C347,"a",@progbits
	.p2align	3
go..C347:
	.quad	.Lconst.215
	.quad	6
	.size	go..C347, 16

	.type	type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9:
	.quad	8
	.quad	8
	.long	341479080
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C348
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C349
	.quad	3
	.quad	3
	.quad	go..C350
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9, 128

	.type	.Lconst.216,@object
	.section	.rodata..Lconst.216,"a",@progbits
.Lconst.216:
	.asciz	"func(*\tcommand_line_arguments\tcli.WarpState, \tgithub_com_spolu_warp\twarp.State, bool) error"
	.size	.Lconst.216, 92

	.type	go..C348,@object
	.section	.rodata.go..C348,"a",@progbits
	.p2align	3
go..C348:
	.quad	.Lconst.216
	.quad	91
	.size	go..C348, 16

	.type	go..C349,@object
	.section	.data.go..C349,"aw",@progbits
	.p2align	4
go..C349:
	.quad	type...1command_line_arguments.WarpState
	.quad	github_com_spolu_warp.State..d
	.quad	bool..d
	.size	go..C349, 24

	.type	go..C350,@object
	.section	.data.go..C350,"aw",@progbits
	.p2align	3
go..C350:
	.quad	error..d
	.size	go..C350, 8

	.type	go..C351,@object
	.section	.rodata.go..C351,"a",@progbits
	.p2align	3
go..C351:
	.quad	.Lconst.188
	.quad	10
	.size	go..C351, 16

	.type	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9,"aG",@progbits,type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9,comdat
	.weak	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9
	.p2align	4
type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9:
	.quad	8
	.quad	8
	.long	1048863080
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C352
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C353
	.quad	1
	.quad	1
	.quad	go..C354
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9, 128

	.type	.Lconst.217,@object
	.section	.rodata..Lconst.217,"a",@progbits
.Lconst.217:
	.asciz	"func(*\tcommand_line_arguments\tcli.WarpState) \tgithub_com_spolu_warp\twarp.Size"
	.size	.Lconst.217, 78

	.type	go..C352,@object
	.section	.rodata.go..C352,"a",@progbits
	.p2align	3
go..C352:
	.quad	.Lconst.217
	.quad	77
	.size	go..C352, 16

	.type	go..C353,@object
	.section	.data.go..C353,"aw",@progbits
	.p2align	3
go..C353:
	.quad	type...1command_line_arguments.WarpState
	.size	go..C353, 8

	.type	go..C354,@object
	.section	.data.go..C354,"aw",@progbits
	.p2align	3
go..C354:
	.quad	github_com_spolu_warp.Size..d
	.size	go..C354, 8

	.type	go..C355,@object
	.section	.data.go..C355,"aw",@progbits
	.p2align	4
go..C355:
	.quad	go..C327
	.quad	0
	.quad	type..func.8string.9.8.1github_com_spolu_warp.Mode.3error.9
	.quad	type..func.8.1command_line_arguments.WarpState.3string.9.8.1github_com_spolu_warp.Mode.3error.9
	.quad	command_line_arguments.WarpState.GetMode
	.quad	go..C331
	.quad	0
	.quad	type..func.8.9.8bool.9
	.quad	type..func.8.1command_line_arguments.WarpState.9.8bool.9
	.quad	command_line_arguments.WarpState.HostCanReceiveWrite
	.quad	go..C335
	.quad	0
	.quad	type..func.8.9.8map.6string.7github_com_spolu_warp.Mode.9
	.quad	type..func.8.1command_line_arguments.WarpState.9.8map.6string.7github_com_spolu_warp.Mode.9
	.quad	command_line_arguments.WarpState.Modes
	.quad	go..C339
	.quad	0
	.quad	type..func.8.9.8github_com_spolu_warp.State.9
	.quad	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.State.9
	.quad	command_line_arguments.WarpState.ProtocolState
	.quad	go..C343
	.quad	0
	.quad	type..func.8string.3github_com_spolu_warp.Mode.9.8error.9
	.quad	type..func.8.1command_line_arguments.WarpState.3string.3github_com_spolu_warp.Mode.9.8error.9
	.quad	command_line_arguments.WarpState.SetMode
	.quad	go..C347
	.quad	0
	.quad	type..func.8github_com_spolu_warp.State.3bool.9.8error.9
	.quad	type..func.8.1command_line_arguments.WarpState.3github_com_spolu_warp.State.3bool.9.8error.9
	.quad	command_line_arguments.WarpState.Update
	.quad	go..C351
	.quad	0
	.quad	type..func.8.9.8github_com_spolu_warp.Size.9
	.quad	type..func.8.1command_line_arguments.WarpState.9.8github_com_spolu_warp.Size.9
	.quad	command_line_arguments.WarpState.WindowSize
	.size	go..C355, 280

	.type	go..C356,@object
	.section	.rodata.go..C356,"a",@progbits
	.p2align	4
go..C356:
	.quad	0
	.quad	0
	.quad	go..C355
	.quad	7
	.quad	7
	.size	go..C356, 40

	.type	type...1.1command_line_arguments.WarpState,@object
	.section	.rodata.type...1.1command_line_arguments.WarpState,"aG",@progbits,type...1.1command_line_arguments.WarpState,comdat
	.weak	type...1.1command_line_arguments.WarpState
	.p2align	4
type...1.1command_line_arguments.WarpState:
	.quad	8
	.quad	8
	.long	3001658777
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C357
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.WarpState
	.size	type...1.1command_line_arguments.WarpState, 80

	.type	.Lconst.218,@object
	.section	.rodata..Lconst.218,"a",@progbits
.Lconst.218:
	.asciz	"**\tcommand_line_arguments\tcli.WarpState"
	.size	.Lconst.218, 40

	.type	go..C357,@object
	.section	.rodata.go..C357,"a",@progbits
	.p2align	3
go..C357:
	.quad	.Lconst.218
	.quad	39
	.size	go..C357, 16

	.type	command_line_arguments.WarpState..d,@object
	.section	.rodata.command_line_arguments.WarpState..d,"a",@progbits
	.globl	command_line_arguments.WarpState..d
	.p2align	4
command_line_arguments.WarpState..d:
	.quad	40
	.quad	40
	.long	1521674669
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ra
	.quad	go..C358
	.quad	go..C362
	.quad	type...1command_line_arguments.WarpState
	.quad	go..C415
	.quad	3
	.quad	3
	.size	command_line_arguments.WarpState..d, 96

	.type	gcbits..ra,@object
	.section	.rodata.gcbits..ra,"aG",@progbits,gcbits..ra,comdat
	.weak	gcbits..ra
gcbits..ra:
	.byte	17
	.size	gcbits..ra, 1

	.type	.Lconst.219,@object
	.section	.rodata..Lconst.219,"a",@progbits
.Lconst.219:
	.asciz	"\tcommand_line_arguments\tcli.WarpState"
	.size	.Lconst.219, 38

	.type	go..C358,@object
	.section	.rodata.go..C358,"a",@progbits
	.p2align	3
go..C358:
	.quad	.Lconst.219
	.quad	37
	.size	go..C358, 16

	.type	.Lconst.220,@object
	.section	.rodata..Lconst.220,"a",@progbits
.Lconst.220:
	.asciz	"WarpState"
	.size	.Lconst.220, 10

	.type	go..C359,@object
	.section	.rodata.go..C359,"a",@progbits
	.p2align	3
go..C359:
	.quad	.Lconst.220
	.quad	9
	.size	go..C359, 16

	.type	go..C360,@object
	.section	.rodata.go..C360,"a",@progbits
	.p2align	3
go..C360:
	.quad	.Lconst.2
	.quad	22
	.size	go..C360, 16

	.type	go..C361,@object
	.section	.bss.go..C361,"aw",@nobits
	.p2align	4
go..C361:
	.zero	40
	.size	go..C361, 40

	.type	go..C362,@object
	.section	.rodata.go..C362,"a",@progbits
	.p2align	4
go..C362:
	.quad	go..C359
	.quad	go..C360
	.quad	go..C361
	.quad	0
	.quad	0
	.size	go..C362, 40

	.type	.Lconst.221,@object
	.section	.rodata..Lconst.221,"a",@progbits
.Lconst.221:
	.asciz	"token"
	.size	.Lconst.221, 6

	.type	go..C363,@object
	.section	.rodata.go..C363,"a",@progbits
	.p2align	3
go..C363:
	.quad	.Lconst.221
	.quad	5
	.size	go..C363, 16

	.type	go..C364,@object
	.section	.rodata.go..C364,"a",@progbits
	.p2align	3
go..C364:
	.quad	.Lconst.2
	.quad	22
	.size	go..C364, 16

	.type	.Lconst.222,@object
	.section	.rodata..Lconst.222,"a",@progbits
.Lconst.222:
	.asciz	"windowSize"
	.size	.Lconst.222, 11

	.type	go..C365,@object
	.section	.rodata.go..C365,"a",@progbits
	.p2align	3
go..C365:
	.quad	.Lconst.222
	.quad	10
	.size	go..C365, 16

	.type	go..C366,@object
	.section	.rodata.go..C366,"a",@progbits
	.p2align	3
go..C366:
	.quad	.Lconst.2
	.quad	22
	.size	go..C366, 16

	.type	.Lconst.223,@object
	.section	.rodata..Lconst.223,"a",@progbits
.Lconst.223:
	.asciz	"users"
	.size	.Lconst.223, 6

	.type	go..C367,@object
	.section	.rodata.go..C367,"a",@progbits
	.p2align	3
go..C367:
	.quad	.Lconst.223
	.quad	5
	.size	go..C367, 16

	.type	go..C368,@object
	.section	.rodata.go..C368,"a",@progbits
	.p2align	3
go..C368:
	.quad	.Lconst.2
	.quad	22
	.size	go..C368, 16

	.type	type..map.6string.7command_line_arguments.UserState,@object
	.section	.rodata.type..map.6string.7command_line_arguments.UserState,"aG",@progbits,type..map.6string.7command_line_arguments.UserState,comdat
	.weak	type..map.6string.7command_line_arguments.UserState
	.p2align	4
type..map.6string.7command_line_arguments.UserState:
	.quad	8
	.quad	8
	.long	859928154
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C369
	.quad	0
	.quad	0
	.quad	string..d
	.quad	command_line_arguments.UserState..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	48
	.byte	0
	.short	528
	.byte	1
	.byte	1
	.size	type..map.6string.7command_line_arguments.UserState, 112

	.type	.Lconst.224,@object
	.section	.rodata..Lconst.224,"a",@progbits
.Lconst.224:
	.asciz	"map[string]\tcommand_line_arguments\tcli.UserState"
	.size	.Lconst.224, 49

	.type	go..C369,@object
	.section	.rodata.go..C369,"a",@progbits
	.p2align	3
go..C369:
	.quad	.Lconst.224
	.quad	48
	.size	go..C369, 16

	.type	command_line_arguments.UserState..d,@object
	.section	.rodata.command_line_arguments.UserState..d,"a",@progbits
	.globl	command_line_arguments.UserState..d
	.p2align	4
command_line_arguments.UserState..d:
	.quad	48
	.quad	24
	.long	2858880944
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.UserState..hash..f
	.quad	command_line_arguments.command_line_arguments.UserState..eq..f
	.quad	gcbits..fa
	.quad	go..C370
	.quad	go..C374
	.quad	type...1command_line_arguments.UserState
	.quad	go..C394
	.quad	4
	.quad	4
	.size	command_line_arguments.UserState..d, 96

	.type	command_line_arguments.command_line_arguments.UserState..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.UserState..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.UserState..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.UserState..hash..f:
	.quad	command_line_arguments.command_line_arguments.UserState..hash
	.size	command_line_arguments.command_line_arguments.UserState..hash..f, 8

	.type	command_line_arguments.command_line_arguments.UserState..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.UserState..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.UserState..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.UserState..eq..f:
	.quad	command_line_arguments.command_line_arguments.UserState..eq
	.size	command_line_arguments.command_line_arguments.UserState..eq..f, 8

	.type	.Lconst.225,@object
	.section	.rodata..Lconst.225,"a",@progbits
.Lconst.225:
	.asciz	"\tcommand_line_arguments\tcli.UserState"
	.size	.Lconst.225, 38

	.type	go..C370,@object
	.section	.rodata.go..C370,"a",@progbits
	.p2align	3
go..C370:
	.quad	.Lconst.225
	.quad	37
	.size	go..C370, 16

	.type	.Lconst.226,@object
	.section	.rodata..Lconst.226,"a",@progbits
.Lconst.226:
	.asciz	"UserState"
	.size	.Lconst.226, 10

	.type	go..C371,@object
	.section	.rodata.go..C371,"a",@progbits
	.p2align	3
go..C371:
	.quad	.Lconst.226
	.quad	9
	.size	go..C371, 16

	.type	go..C372,@object
	.section	.rodata.go..C372,"a",@progbits
	.p2align	3
go..C372:
	.quad	.Lconst.2
	.quad	22
	.size	go..C372, 16

	.type	go..C373,@object
	.section	.bss.go..C373,"aw",@nobits
	.p2align	4
go..C373:
	.zero	40
	.size	go..C373, 40

	.type	go..C374,@object
	.section	.rodata.go..C374,"a",@progbits
	.p2align	4
go..C374:
	.quad	go..C371
	.quad	go..C372
	.quad	go..C373
	.quad	0
	.quad	0
	.size	go..C374, 40

	.type	type...1command_line_arguments.UserState,@object
	.section	.rodata.type...1command_line_arguments.UserState,"aG",@progbits,type...1command_line_arguments.UserState,comdat
	.weak	type...1command_line_arguments.UserState
	.p2align	4
type...1command_line_arguments.UserState:
	.quad	8
	.quad	8
	.long	2792422153
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C375
	.quad	go..C384
	.quad	type...1.1command_line_arguments.UserState
	.quad	command_line_arguments.UserState..d
	.size	type...1command_line_arguments.UserState, 80

	.type	.Lconst.227,@object
	.section	.rodata..Lconst.227,"a",@progbits
.Lconst.227:
	.asciz	"*\tcommand_line_arguments\tcli.UserState"
	.size	.Lconst.227, 39

	.type	go..C375,@object
	.section	.rodata.go..C375,"a",@progbits
	.p2align	3
go..C375:
	.quad	.Lconst.227
	.quad	38
	.size	go..C375, 16

	.type	.Lconst.228,@object
	.section	.rodata..Lconst.228,"a",@progbits
.Lconst.228:
	.asciz	"ProtocolUser"
	.size	.Lconst.228, 13

	.type	go..C376,@object
	.section	.rodata.go..C376,"a",@progbits
	.p2align	3
go..C376:
	.quad	.Lconst.228
	.quad	12
	.size	go..C376, 16

	.type	type..func.8.9.8github_com_spolu_warp.User.9,@object
	.section	.rodata.type..func.8.9.8github_com_spolu_warp.User.9,"aG",@progbits,type..func.8.9.8github_com_spolu_warp.User.9,comdat
	.weak	type..func.8.9.8github_com_spolu_warp.User.9
	.p2align	4
type..func.8.9.8github_com_spolu_warp.User.9:
	.quad	8
	.quad	8
	.long	4014972104
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C377
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C378
	.quad	0
	.quad	0
	.quad	go..C379
	.quad	1
	.quad	1
	.size	type..func.8.9.8github_com_spolu_warp.User.9, 128

	.type	.Lconst.229,@object
	.section	.rodata..Lconst.229,"a",@progbits
.Lconst.229:
	.asciz	"func() \tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.229, 40

	.type	go..C377,@object
	.section	.rodata.go..C377,"a",@progbits
	.p2align	3
go..C377:
	.quad	.Lconst.229
	.quad	39
	.size	go..C377, 16

	.type	go..C378,@object
	.section	.bss.go..C378,"aw",@nobits
	.p2align	3
go..C378:
	.zero	8
	.size	go..C378, 8

	.type	go..C379,@object
	.section	.data.go..C379,"aw",@progbits
	.p2align	3
go..C379:
	.quad	github_com_spolu_warp.User..d
	.size	go..C379, 8

	.type	type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9,"aG",@progbits,type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9,comdat
	.weak	type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9
	.p2align	4
type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9:
	.quad	8
	.quad	8
	.long	3178167784
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C380
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C381
	.quad	1
	.quad	1
	.quad	go..C382
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9, 128

	.type	.Lconst.230,@object
	.section	.rodata..Lconst.230,"a",@progbits
.Lconst.230:
	.asciz	"func(*\tcommand_line_arguments\tcli.UserState) \tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.230, 78

	.type	go..C380,@object
	.section	.rodata.go..C380,"a",@progbits
	.p2align	3
go..C380:
	.quad	.Lconst.230
	.quad	77
	.size	go..C380, 16

	.type	go..C381,@object
	.section	.data.go..C381,"aw",@progbits
	.p2align	3
go..C381:
	.quad	type...1command_line_arguments.UserState
	.size	go..C381, 8

	.type	go..C382,@object
	.section	.data.go..C382,"aw",@progbits
	.p2align	3
go..C382:
	.quad	github_com_spolu_warp.User..d
	.size	go..C382, 8

	.type	go..C383,@object
	.section	.data.go..C383,"aw",@progbits
	.p2align	4
go..C383:
	.quad	go..C376
	.quad	0
	.quad	type..func.8.9.8github_com_spolu_warp.User.9
	.quad	type..func.8.1command_line_arguments.UserState.9.8github_com_spolu_warp.User.9
	.quad	command_line_arguments.UserState.ProtocolUser
	.size	go..C383, 40

	.type	go..C384,@object
	.section	.rodata.go..C384,"a",@progbits
	.p2align	4
go..C384:
	.quad	0
	.quad	0
	.quad	go..C383
	.quad	1
	.quad	1
	.size	go..C384, 40

	.type	type...1.1command_line_arguments.UserState,@object
	.section	.rodata.type...1.1command_line_arguments.UserState,"aG",@progbits,type...1.1command_line_arguments.UserState,comdat
	.weak	type...1.1command_line_arguments.UserState
	.p2align	4
type...1.1command_line_arguments.UserState:
	.quad	8
	.quad	8
	.long	1729081497
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C385
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.UserState
	.size	type...1.1command_line_arguments.UserState, 80

	.type	.Lconst.231,@object
	.section	.rodata..Lconst.231,"a",@progbits
.Lconst.231:
	.asciz	"**\tcommand_line_arguments\tcli.UserState"
	.size	.Lconst.231, 40

	.type	go..C385,@object
	.section	.rodata.go..C385,"a",@progbits
	.p2align	3
go..C385:
	.quad	.Lconst.231
	.quad	39
	.size	go..C385, 16

	.type	go..C386,@object
	.section	.rodata.go..C386,"a",@progbits
	.p2align	3
go..C386:
	.quad	.Lconst.221
	.quad	5
	.size	go..C386, 16

	.type	go..C387,@object
	.section	.rodata.go..C387,"a",@progbits
	.p2align	3
go..C387:
	.quad	.Lconst.2
	.quad	22
	.size	go..C387, 16

	.type	go..C388,@object
	.section	.rodata.go..C388,"a",@progbits
	.p2align	3
go..C388:
	.quad	.Lconst.198
	.quad	8
	.size	go..C388, 16

	.type	go..C389,@object
	.section	.rodata.go..C389,"a",@progbits
	.p2align	3
go..C389:
	.quad	.Lconst.2
	.quad	22
	.size	go..C389, 16

	.type	.Lconst.232,@object
	.section	.rodata..Lconst.232,"a",@progbits
.Lconst.232:
	.asciz	"mode"
	.size	.Lconst.232, 5

	.type	go..C390,@object
	.section	.rodata.go..C390,"a",@progbits
	.p2align	3
go..C390:
	.quad	.Lconst.232
	.quad	4
	.size	go..C390, 16

	.type	go..C391,@object
	.section	.rodata.go..C391,"a",@progbits
	.p2align	3
go..C391:
	.quad	.Lconst.2
	.quad	22
	.size	go..C391, 16

	.type	.Lconst.233,@object
	.section	.rodata..Lconst.233,"a",@progbits
.Lconst.233:
	.asciz	"hosting"
	.size	.Lconst.233, 8

	.type	go..C392,@object
	.section	.rodata.go..C392,"a",@progbits
	.p2align	3
go..C392:
	.quad	.Lconst.233
	.quad	7
	.size	go..C392, 16

	.type	go..C393,@object
	.section	.rodata.go..C393,"a",@progbits
	.p2align	3
go..C393:
	.quad	.Lconst.2
	.quad	22
	.size	go..C393, 16

	.type	go..C394,@object
	.section	.data.go..C394,"aw",@progbits
	.p2align	4
go..C394:
	.quad	go..C386
	.quad	go..C387
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C388
	.quad	go..C389
	.quad	string..d
	.quad	0
	.quad	32
	.quad	go..C390
	.quad	go..C391
	.quad	github_com_spolu_warp.Mode..d
	.quad	0
	.quad	64
	.quad	go..C392
	.quad	go..C393
	.quad	bool..d
	.quad	0
	.quad	80
	.size	go..C394, 160

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5:
	.quad	528
	.quad	528
	.long	1719087204
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkwircfkvircba
	.quad	go..C395
	.quad	0
	.quad	0
	.quad	go..C402
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5, 96

	.type	gcbits..kwkwircfkvircba,@object
	.section	.rodata.gcbits..kwkwircfkvircba,"aG",@progbits,gcbits..kwkwircfkvircba,comdat
	.weak	gcbits..kwkwircfkvircba
gcbits..kwkwircfkvircba:
	.ascii	"\252\252\212\242(\212\242(\002"
	.size	gcbits..kwkwircfkvircba, 9

	.type	.Lconst.234,@object
	.section	.rodata..Lconst.234,"a",@progbits
.Lconst.234:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tcli.UserState; overflow * }"
	.size	.Lconst.234, 105

	.type	go..C395,@object
	.section	.rodata.go..C395,"a",@progbits
	.p2align	3
go..C395:
	.quad	.Lconst.234
	.quad	104
	.size	go..C395, 16

	.type	go..C396,@object
	.section	.rodata.go..C396,"a",@progbits
	.p2align	3
go..C396:
	.quad	.Lconst.24
	.quad	7
	.size	go..C396, 16

	.type	go..C397,@object
	.section	.rodata.go..C397,"a",@progbits
	.p2align	3
go..C397:
	.quad	.Lconst.29
	.quad	4
	.size	go..C397, 16

	.type	go..C398,@object
	.section	.rodata.go..C398,"a",@progbits
	.p2align	3
go..C398:
	.quad	.Lconst.31
	.quad	6
	.size	go..C398, 16

	.type	type...68x.7command_line_arguments.UserState,@object
	.section	.rodata.type...68x.7command_line_arguments.UserState,"aG",@progbits,type...68x.7command_line_arguments.UserState,comdat
	.weak	type...68x.7command_line_arguments.UserState
	.p2align	4
type...68x.7command_line_arguments.UserState:
	.quad	384
	.quad	360
	.long	1422794607
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..fkvircfkva
	.quad	go..C399
	.quad	0
	.quad	0
	.quad	command_line_arguments.UserState..d
	.quad	type...6.7command_line_arguments.UserState
	.quad	8
	.size	type...68x.7command_line_arguments.UserState, 96

	.type	gcbits..fkvircfkva,@object
	.section	.rodata.gcbits..fkvircfkva,"aG",@progbits,gcbits..fkvircfkva,comdat
	.weak	gcbits..fkvircfkva
gcbits..fkvircfkva:
	.ascii	"EQ\024EQ\024"
	.size	gcbits..fkvircfkva, 6

	.type	.Lconst.235,@object
	.section	.rodata..Lconst.235,"a",@progbits
.Lconst.235:
	.asciz	"[8]\tcommand_line_arguments\tcli.UserState"
	.size	.Lconst.235, 41

	.type	go..C399,@object
	.section	.rodata.go..C399,"a",@progbits
	.p2align	3
go..C399:
	.quad	.Lconst.235
	.quad	40
	.size	go..C399, 16

	.type	type...6.7command_line_arguments.UserState,@object
	.section	.rodata.type...6.7command_line_arguments.UserState,"aG",@progbits,type...6.7command_line_arguments.UserState,comdat
	.weak	type...6.7command_line_arguments.UserState
	.p2align	4
type...6.7command_line_arguments.UserState:
	.quad	24
	.quad	8
	.long	2858880958
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C400
	.quad	0
	.quad	0
	.quad	command_line_arguments.UserState..d
	.size	type...6.7command_line_arguments.UserState, 80

	.type	.Lconst.236,@object
	.section	.rodata..Lconst.236,"a",@progbits
.Lconst.236:
	.asciz	"[]\tcommand_line_arguments\tcli.UserState"
	.size	.Lconst.236, 40

	.type	go..C400,@object
	.section	.rodata.go..C400,"a",@progbits
	.p2align	3
go..C400:
	.quad	.Lconst.236
	.quad	39
	.size	go..C400, 16

	.type	go..C401,@object
	.section	.rodata.go..C401,"a",@progbits
	.p2align	3
go..C401:
	.quad	.Lconst.32
	.quad	8
	.size	go..C401, 16

	.type	go..C402,@object
	.section	.data.go..C402,"aw",@progbits
	.p2align	4
go..C402:
	.quad	go..C396
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C397
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C398
	.quad	0
	.quad	type...68x.7command_line_arguments.UserState
	.quad	0
	.quad	272
	.quad	go..C401
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	1040
	.size	go..C402, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	3451967972
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C403
	.quad	0
	.quad	0
	.quad	go..C414
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.237,@object
	.section	.rodata..Lconst.237,"a",@progbits
.Lconst.237:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tcli.UserState; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tcli.UserState; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.237, 336

	.type	go..C403,@object
	.section	.rodata.go..C403,"a",@progbits
	.p2align	3
go..C403:
	.quad	.Lconst.237
	.quad	335
	.size	go..C403, 16

	.type	go..C404,@object
	.section	.rodata.go..C404,"a",@progbits
	.p2align	3
go..C404:
	.quad	.Lconst.34
	.quad	5
	.size	go..C404, 16

	.type	go..C405,@object
	.section	.rodata.go..C405,"a",@progbits
	.p2align	3
go..C405:
	.quad	.Lconst.37
	.quad	5
	.size	go..C405, 16

	.type	go..C406,@object
	.section	.rodata.go..C406,"a",@progbits
	.p2align	3
go..C406:
	.quad	.Lconst.38
	.quad	1
	.size	go..C406, 16

	.type	go..C407,@object
	.section	.rodata.go..C407,"a",@progbits
	.p2align	3
go..C407:
	.quad	.Lconst.39
	.quad	9
	.size	go..C407, 16

	.type	go..C408,@object
	.section	.rodata.go..C408,"a",@progbits
	.p2align	3
go..C408:
	.quad	.Lconst.42
	.quad	5
	.size	go..C408, 16

	.type	go..C409,@object
	.section	.rodata.go..C409,"a",@progbits
	.p2align	3
go..C409:
	.quad	.Lconst.45
	.quad	7
	.size	go..C409, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	1735591497
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C410
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.238,@object
	.section	.rodata..Lconst.238,"a",@progbits
.Lconst.238:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]\tcommand_line_arguments\tcli.UserState; overflow * }"
	.size	.Lconst.238, 106

	.type	go..C410,@object
	.section	.rodata.go..C410,"a",@progbits
	.p2align	3
go..C410:
	.quad	.Lconst.238
	.quad	105
	.size	go..C410, 16

	.type	go..C411,@object
	.section	.rodata.go..C411,"a",@progbits
	.p2align	3
go..C411:
	.quad	.Lconst.47
	.quad	10
	.size	go..C411, 16

	.type	go..C412,@object
	.section	.rodata.go..C412,"a",@progbits
	.p2align	3
go..C412:
	.quad	.Lconst.48
	.quad	9
	.size	go..C412, 16

	.type	go..C413,@object
	.section	.rodata.go..C413,"a",@progbits
	.p2align	3
go..C413:
	.quad	.Lconst.51
	.quad	5
	.size	go..C413, 16

	.type	go..C414,@object
	.section	.data.go..C414,"aw",@progbits
	.p2align	4
go..C414:
	.quad	go..C404
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C405
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C406
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C407
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C408
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C409
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C411
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7command_line_arguments.UserState.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C412
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C413
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C414, 360

	.type	go..C415,@object
	.section	.data.go..C415,"aw",@progbits
	.p2align	4
go..C415:
	.quad	go..C363
	.quad	go..C364
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C365
	.quad	go..C366
	.quad	github_com_spolu_warp.Size..d
	.quad	0
	.quad	32
	.quad	go..C367
	.quad	go..C368
	.quad	type..map.6string.7command_line_arguments.UserState
	.quad	0
	.quad	64
	.size	go..C415, 120

	.type	.Lconst.239,@object
	.section	.rodata..Lconst.239,"a",@progbits
.Lconst.239:
	.asciz	"tornDown"
	.size	.Lconst.239, 9

	.type	go..C416,@object
	.section	.rodata.go..C416,"a",@progbits
	.p2align	3
go..C416:
	.quad	.Lconst.239
	.quad	8
	.size	go..C416, 16

	.type	go..C417,@object
	.section	.rodata.go..C417,"a",@progbits
	.p2align	3
go..C417:
	.quad	.Lconst.2
	.quad	22
	.size	go..C417, 16

	.type	.Lconst.240,@object
	.section	.rodata..Lconst.240,"a",@progbits
.Lconst.240:
	.asciz	"cancel"
	.size	.Lconst.240, 7

	.type	go..C418,@object
	.section	.rodata.go..C418,"a",@progbits
	.p2align	3
go..C418:
	.quad	.Lconst.240
	.quad	6
	.size	go..C418, 16

	.type	go..C419,@object
	.section	.rodata.go..C419,"a",@progbits
	.p2align	3
go..C419:
	.quad	.Lconst.2
	.quad	22
	.size	go..C419, 16

	.type	.Lconst.241,@object
	.section	.rodata..Lconst.241,"a",@progbits
.Lconst.241:
	.asciz	"mutex"
	.size	.Lconst.241, 6

	.type	go..C420,@object
	.section	.rodata.go..C420,"a",@progbits
	.p2align	3
go..C420:
	.quad	.Lconst.241
	.quad	5
	.size	go..C420, 16

	.type	go..C421,@object
	.section	.rodata.go..C421,"a",@progbits
	.p2align	3
go..C421:
	.quad	.Lconst.2
	.quad	22
	.size	go..C421, 16

	.type	go..C422,@object
	.section	.data.go..C422,"aw",@progbits
	.p2align	4
go..C422:
	.quad	go..C298
	.quad	go..C299
	.quad	github_com_spolu_warp.Session..d
	.quad	0
	.quad	0
	.quad	go..C300
	.quad	go..C301
	.quad	string..d
	.quad	0
	.quad	96
	.quad	go..C302
	.quad	go..C303
	.quad	github_com_spolu_warp.SessionType..d
	.quad	0
	.quad	128
	.quad	go..C304
	.quad	go..C305
	.quad	string..d
	.quad	0
	.quad	160
	.quad	go..C306
	.quad	go..C307
	.quad	net.Conn..d
	.quad	0
	.quad	192
	.quad	go..C308
	.quad	go..C309
	.quad	type...1github_com_spolu_warp_vendor_github_com_hashicorp_yamux.Session
	.quad	0
	.quad	224
	.quad	go..C310
	.quad	go..C311
	.quad	net.Conn..d
	.quad	0
	.quad	240
	.quad	go..C312
	.quad	go..C313
	.quad	type...1encoding_gob.Decoder
	.quad	0
	.quad	272
	.quad	go..C314
	.quad	go..C315
	.quad	net.Conn..d
	.quad	0
	.quad	288
	.quad	go..C316
	.quad	go..C317
	.quad	type...1encoding_gob.Encoder
	.quad	0
	.quad	320
	.quad	go..C318
	.quad	go..C319
	.quad	net.Conn..d
	.quad	0
	.quad	336
	.quad	go..C320
	.quad	go..C321
	.quad	type...1encoding_gob.Decoder
	.quad	0
	.quad	368
	.quad	go..C322
	.quad	go..C323
	.quad	net.Conn..d
	.quad	0
	.quad	384
	.quad	go..C324
	.quad	go..C325
	.quad	type...1command_line_arguments.WarpState
	.quad	0
	.quad	416
	.quad	go..C416
	.quad	go..C417
	.quad	bool..d
	.quad	0
	.quad	432
	.quad	go..C418
	.quad	go..C419
	.quad	type..func.8.9.8.9
	.quad	0
	.quad	448
	.quad	go..C420
	.quad	go..C421
	.quad	type...1sync.Mutex
	.quad	0
	.quad	464
	.size	go..C422, 680

	.type	.Lconst.243,@object
	.section	.rodata..Lconst.243,"a",@progbits
.Lconst.243:
	.asciz	"Failed to open session to warpd: %v"
	.size	.Lconst.243, 36

	.type	.Lconst.247,@object
	.section	.rodata..Lconst.247,"a",@progbits
.Lconst.247:
	.asciz	"State channel open error: %v"
	.size	.Lconst.247, 29

	.type	.Lconst.249,@object
	.section	.rodata..Lconst.249,"a",@progbits
.Lconst.249:
	.asciz	"Update channel open error: %v"
	.size	.Lconst.249, 30

	.type	.Lconst.251,@object
	.section	.rodata..Lconst.251,"a",@progbits
.Lconst.251:
	.asciz	"Send hello error: %v"
	.size	.Lconst.251, 21

	.type	.Lconst.253,@object
	.section	.rodata..Lconst.253,"a",@progbits
.Lconst.253:
	.asciz	"Error channel open error: %v"
	.size	.Lconst.253, 29

	.type	.Lconst.255,@object
	.section	.rodata..Lconst.255,"a",@progbits
.Lconst.255:
	.asciz	"Data channel open error: %v"
	.size	.Lconst.255, 28

	.type	command_line_arguments.NewSession..f,@object
	.section	.rodata.command_line_arguments.NewSession..f,"a",@progbits
	.globl	command_line_arguments.NewSession..f
	.p2align	3
command_line_arguments.NewSession..f:
	.quad	command_line_arguments.NewSession
	.size	command_line_arguments.NewSession..f, 8

	.type	command_line_arguments.Shell..d,@object
	.section	.rodata.command_line_arguments.Shell..d,"a",@progbits
	.globl	command_line_arguments.Shell..d
	.p2align	4
command_line_arguments.Shell..d:
	.quad	16
	.quad	8
	.long	1170961854
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Shell..hash..f
	.quad	command_line_arguments.command_line_arguments.Shell..eq..f
	.quad	gcbits..ba
	.quad	go..C423
	.quad	go..C427
	.quad	type...1command_line_arguments.Shell
	.quad	go..C430
	.quad	1
	.quad	1
	.size	command_line_arguments.Shell..d, 96

	.type	command_line_arguments.command_line_arguments.Shell..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Shell..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Shell..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Shell..hash..f:
	.quad	command_line_arguments.command_line_arguments.Shell..hash
	.size	command_line_arguments.command_line_arguments.Shell..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Shell..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Shell..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Shell..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Shell..eq..f:
	.quad	command_line_arguments.command_line_arguments.Shell..eq
	.size	command_line_arguments.command_line_arguments.Shell..eq..f, 8

	.type	.Lconst.263,@object
	.section	.rodata..Lconst.263,"a",@progbits
.Lconst.263:
	.asciz	"\tcommand_line_arguments\tcli.Shell"
	.size	.Lconst.263, 34

	.type	go..C423,@object
	.section	.rodata.go..C423,"a",@progbits
	.p2align	3
go..C423:
	.quad	.Lconst.263
	.quad	33
	.size	go..C423, 16

	.type	.Lconst.264,@object
	.section	.rodata..Lconst.264,"a",@progbits
.Lconst.264:
	.asciz	"Shell"
	.size	.Lconst.264, 6

	.type	go..C424,@object
	.section	.rodata.go..C424,"a",@progbits
	.p2align	3
go..C424:
	.quad	.Lconst.264
	.quad	5
	.size	go..C424, 16

	.type	go..C425,@object
	.section	.rodata.go..C425,"a",@progbits
	.p2align	3
go..C425:
	.quad	.Lconst.2
	.quad	22
	.size	go..C425, 16

	.type	go..C426,@object
	.section	.bss.go..C426,"aw",@nobits
	.p2align	4
go..C426:
	.zero	40
	.size	go..C426, 40

	.type	go..C427,@object
	.section	.rodata.go..C427,"a",@progbits
	.p2align	4
go..C427:
	.quad	go..C424
	.quad	go..C425
	.quad	go..C426
	.quad	0
	.quad	0
	.size	go..C427, 40

	.type	type...1command_line_arguments.Shell,@object
	.section	.rodata.type...1command_line_arguments.Shell,"aG",@progbits,type...1command_line_arguments.Shell,comdat
	.weak	type...1command_line_arguments.Shell
	.p2align	4
type...1command_line_arguments.Shell:
	.quad	8
	.quad	8
	.long	1555520489
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C428
	.quad	0
	.quad	0
	.quad	command_line_arguments.Shell..d
	.size	type...1command_line_arguments.Shell, 80

	.type	.Lconst.265,@object
	.section	.rodata..Lconst.265,"a",@progbits
.Lconst.265:
	.asciz	"*\tcommand_line_arguments\tcli.Shell"
	.size	.Lconst.265, 35

	.type	go..C428,@object
	.section	.rodata.go..C428,"a",@progbits
	.p2align	3
go..C428:
	.quad	.Lconst.265
	.quad	34
	.size	go..C428, 16

	.type	go..C429,@object
	.section	.rodata.go..C429,"a",@progbits
	.p2align	3
go..C429:
	.quad	.Lconst.5
	.quad	7
	.size	go..C429, 16

	.type	go..C430,@object
	.section	.data.go..C430,"aw",@progbits
	.p2align	4
go..C430:
	.quad	go..C429
	.quad	0
	.quad	string..d
	.quad	0
	.quad	0
	.size	go..C430, 40

	.type	.Lconst.266,@object
	.section	.rodata..Lconst.266,"a",@progbits
.Lconst.266:
	.asciz	"SHELL"
	.size	.Lconst.266, 6

	.type	.Lconst.268,@object
	.section	.rodata..Lconst.268,"a",@progbits
.Lconst.268:
	.asciz	"/bin/bash"
	.size	.Lconst.268, 10

	.type	command_line_arguments.DetectShell..f,@object
	.section	.rodata.command_line_arguments.DetectShell..f,"a",@progbits
	.globl	command_line_arguments.DetectShell..f
	.p2align	3
command_line_arguments.DetectShell..f:
	.quad	command_line_arguments.DetectShell
	.size	command_line_arguments.DetectShell..f, 8

	.type	command_line_arguments.Srv..d,@object
	.section	.rodata.command_line_arguments.Srv..d,"a",@progbits
	.globl	command_line_arguments.Srv..d
	.p2align	4
command_line_arguments.Srv..d:
	.quad	48
	.quad	48
	.long	1386503207
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	command_line_arguments.command_line_arguments.Srv..hash..f
	.quad	command_line_arguments.command_line_arguments.Srv..eq..f
	.quad	gcbits..nb
	.quad	go..C431
	.quad	go..C435
	.quad	type...1command_line_arguments.Srv
	.quad	go..C483
	.quad	4
	.quad	4
	.size	command_line_arguments.Srv..d, 96

	.type	command_line_arguments.command_line_arguments.Srv..hash..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Srv..hash..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Srv..hash..f
	.p2align	3
command_line_arguments.command_line_arguments.Srv..hash..f:
	.quad	command_line_arguments.command_line_arguments.Srv..hash
	.size	command_line_arguments.command_line_arguments.Srv..hash..f, 8

	.type	command_line_arguments.command_line_arguments.Srv..eq..f,@object
	.section	.rodata.command_line_arguments.command_line_arguments.Srv..eq..f,"a",@progbits
	.globl	command_line_arguments.command_line_arguments.Srv..eq..f
	.p2align	3
command_line_arguments.command_line_arguments.Srv..eq..f:
	.quad	command_line_arguments.command_line_arguments.Srv..eq
	.size	command_line_arguments.command_line_arguments.Srv..eq..f, 8

	.type	gcbits..nb,@object
	.section	.rodata.gcbits..nb,"aG",@progbits,gcbits..nb,comdat
	.weak	gcbits..nb
gcbits..nb:
	.byte	45
	.size	gcbits..nb, 1

	.type	.Lconst.270,@object
	.section	.rodata..Lconst.270,"a",@progbits
.Lconst.270:
	.asciz	"\tcommand_line_arguments\tcli.Srv"
	.size	.Lconst.270, 32

	.type	go..C431,@object
	.section	.rodata.go..C431,"a",@progbits
	.p2align	3
go..C431:
	.quad	.Lconst.270
	.quad	31
	.size	go..C431, 16

	.type	.Lconst.271,@object
	.section	.rodata..Lconst.271,"a",@progbits
.Lconst.271:
	.asciz	"Srv"
	.size	.Lconst.271, 4

	.type	go..C432,@object
	.section	.rodata.go..C432,"a",@progbits
	.p2align	3
go..C432:
	.quad	.Lconst.271
	.quad	3
	.size	go..C432, 16

	.type	go..C433,@object
	.section	.rodata.go..C433,"a",@progbits
	.p2align	3
go..C433:
	.quad	.Lconst.2
	.quad	22
	.size	go..C433, 16

	.type	go..C434,@object
	.section	.bss.go..C434,"aw",@nobits
	.p2align	4
go..C434:
	.zero	40
	.size	go..C434, 40

	.type	go..C435,@object
	.section	.rodata.go..C435,"a",@progbits
	.p2align	4
go..C435:
	.quad	go..C432
	.quad	go..C433
	.quad	go..C434
	.quad	0
	.quad	0
	.size	go..C435, 40

	.type	type...1command_line_arguments.Srv,@object
	.section	.rodata.type...1command_line_arguments.Srv,"aG",@progbits,type...1command_line_arguments.Srv,comdat
	.weak	type...1command_line_arguments.Srv
	.p2align	4
type...1command_line_arguments.Srv:
	.quad	8
	.quad	8
	.long	709214841
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C436
	.quad	go..C473
	.quad	type...1.1command_line_arguments.Srv
	.quad	command_line_arguments.Srv..d
	.size	type...1command_line_arguments.Srv, 80

	.type	.Lconst.272,@object
	.section	.rodata..Lconst.272,"a",@progbits
.Lconst.272:
	.asciz	"*\tcommand_line_arguments\tcli.Srv"
	.size	.Lconst.272, 33

	.type	go..C436,@object
	.section	.rodata.go..C436,"a",@progbits
	.p2align	3
go..C436:
	.quad	.Lconst.272
	.quad	32
	.size	go..C436, 16

	.type	.Lconst.273,@object
	.section	.rodata..Lconst.273,"a",@progbits
.Lconst.273:
	.asciz	"Path"
	.size	.Lconst.273, 5

	.type	go..C437,@object
	.section	.rodata.go..C437,"a",@progbits
	.p2align	3
go..C437:
	.quad	.Lconst.273
	.quad	4
	.size	go..C437, 16

	.type	type..func.8.1command_line_arguments.Srv.9.8string.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.9.8string.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.9.8string.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.9.8string.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.9.8string.9:
	.quad	8
	.quad	8
	.long	2136077736
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C438
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C439
	.quad	1
	.quad	1
	.quad	go..C440
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Srv.9.8string.9, 128

	.type	.Lconst.274,@object
	.section	.rodata..Lconst.274,"a",@progbits
.Lconst.274:
	.asciz	"func(*\tcommand_line_arguments\tcli.Srv) string"
	.size	.Lconst.274, 46

	.type	go..C438,@object
	.section	.rodata.go..C438,"a",@progbits
	.p2align	3
go..C438:
	.quad	.Lconst.274
	.quad	45
	.size	go..C438, 16

	.type	go..C439,@object
	.section	.data.go..C439,"aw",@progbits
	.p2align	3
go..C439:
	.quad	type...1command_line_arguments.Srv
	.size	go..C439, 8

	.type	go..C440,@object
	.section	.data.go..C440,"aw",@progbits
	.p2align	3
go..C440:
	.quad	string..d
	.size	go..C440, 8

	.type	go..C441,@object
	.section	.rodata.go..C441,"a",@progbits
	.p2align	3
go..C441:
	.quad	.Lconst.64
	.quad	3
	.size	go..C441, 16

	.type	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9:
	.quad	8
	.quad	8
	.long	745574312
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C442
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C443
	.quad	2
	.quad	2
	.quad	go..C444
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9, 128

	.type	.Lconst.275,@object
	.section	.rodata..Lconst.275,"a",@progbits
.Lconst.275:
	.asciz	"func(*\tcommand_line_arguments\tcli.Srv, \tcontext\tcontext.Context) error"
	.size	.Lconst.275, 71

	.type	go..C442,@object
	.section	.rodata.go..C442,"a",@progbits
	.p2align	3
go..C442:
	.quad	.Lconst.275
	.quad	70
	.size	go..C442, 16

	.type	go..C443,@object
	.section	.data.go..C443,"aw",@progbits
	.p2align	3
go..C443:
	.quad	type...1command_line_arguments.Srv
	.quad	context.Context..d
	.size	go..C443, 16

	.type	go..C444,@object
	.section	.data.go..C444,"aw",@progbits
	.p2align	3
go..C444:
	.quad	error..d
	.size	go..C444, 8

	.type	.Lconst.276,@object
	.section	.rodata..Lconst.276,"a",@progbits
.Lconst.276:
	.asciz	"SetSession"
	.size	.Lconst.276, 11

	.type	go..C445,@object
	.section	.rodata.go..C445,"a",@progbits
	.p2align	3
go..C445:
	.quad	.Lconst.276
	.quad	10
	.size	go..C445, 16

	.type	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9,@object
	.section	.rodata.type..func.8context.Context.3.1command_line_arguments.Session.9.8.9,"aG",@progbits,type..func.8context.Context.3.1command_line_arguments.Session.9.8.9,comdat
	.weak	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9
	.p2align	4
type..func.8context.Context.3.1command_line_arguments.Session.9.8.9:
	.quad	8
	.quad	8
	.long	1883613096
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C446
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C447
	.quad	2
	.quad	2
	.quad	go..C448
	.quad	0
	.quad	0
	.size	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9, 128

	.type	.Lconst.277,@object
	.section	.rodata..Lconst.277,"a",@progbits
.Lconst.277:
	.asciz	"func(\tcontext\tcontext.Context, *\tcommand_line_arguments\tcli.Session)"
	.size	.Lconst.277, 69

	.type	go..C446,@object
	.section	.rodata.go..C446,"a",@progbits
	.p2align	3
go..C446:
	.quad	.Lconst.277
	.quad	68
	.size	go..C446, 16

	.type	go..C447,@object
	.section	.data.go..C447,"aw",@progbits
	.p2align	3
go..C447:
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.size	go..C447, 16

	.type	go..C448,@object
	.section	.bss.go..C448,"aw",@nobits
	.p2align	3
go..C448:
	.zero	8
	.size	go..C448, 8

	.type	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9:
	.quad	8
	.quad	8
	.long	692297320
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C449
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C450
	.quad	3
	.quad	3
	.quad	go..C451
	.quad	0
	.quad	0
	.size	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9, 128

	.type	.Lconst.278,@object
	.section	.rodata..Lconst.278,"a",@progbits
.Lconst.278:
	.asciz	"func(*\tcommand_line_arguments\tcli.Srv, \tcontext\tcontext.Context, *\tcommand_line_arguments\tcli.Session)"
	.size	.Lconst.278, 103

	.type	go..C449,@object
	.section	.rodata.go..C449,"a",@progbits
	.p2align	3
go..C449:
	.quad	.Lconst.278
	.quad	102
	.size	go..C449, 16

	.type	go..C450,@object
	.section	.data.go..C450,"aw",@progbits
	.p2align	4
go..C450:
	.quad	type...1command_line_arguments.Srv
	.quad	context.Context..d
	.quad	type...1command_line_arguments.Session
	.size	go..C450, 24

	.type	go..C451,@object
	.section	.bss.go..C451,"aw",@nobits
	.p2align	3
go..C451:
	.zero	8
	.size	go..C451, 8

	.type	.Lconst.279,@object
	.section	.rodata..Lconst.279,"a",@progbits
.Lconst.279:
	.asciz	"executeAuthorize"
	.size	.Lconst.279, 17

	.type	go..C452,@object
	.section	.rodata.go..C452,"a",@progbits
	.p2align	3
go..C452:
	.quad	.Lconst.279
	.quad	16
	.size	go..C452, 16

	.type	go..C453,@object
	.section	.rodata.go..C453,"a",@progbits
	.p2align	3
go..C453:
	.quad	.Lconst.2
	.quad	22
	.size	go..C453, 16

	.type	type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9,@object
	.section	.rodata.type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9,"aG",@progbits,type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9,comdat
	.weak	type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.p2align	4
type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9:
	.quad	8
	.quad	8
	.long	2432333736
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C454
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C455
	.quad	2
	.quad	2
	.quad	go..C456
	.quad	1
	.quad	1
	.size	type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, 128

	.type	.Lconst.280,@object
	.section	.rodata..Lconst.280,"a",@progbits
.Lconst.280:
	.asciz	"func(\tcontext\tcontext.Context, \tgithub_com_spolu_warp\twarp.Command) \tgithub_com_spolu_warp\twarp.CommandResult"
	.size	.Lconst.280, 110

	.type	go..C454,@object
	.section	.rodata.go..C454,"a",@progbits
	.p2align	3
go..C454:
	.quad	.Lconst.280
	.quad	109
	.size	go..C454, 16

	.type	go..C455,@object
	.section	.data.go..C455,"aw",@progbits
	.p2align	3
go..C455:
	.quad	context.Context..d
	.quad	github_com_spolu_warp.Command..d
	.size	go..C455, 16

	.type	go..C456,@object
	.section	.data.go..C456,"aw",@progbits
	.p2align	3
go..C456:
	.quad	github_com_spolu_warp.CommandResult..d
	.size	go..C456, 8

	.type	type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9:
	.quad	8
	.quad	8
	.long	4219738216
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C457
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C458
	.quad	3
	.quad	3
	.quad	go..C459
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9, 128

	.type	.Lconst.281,@object
	.section	.rodata..Lconst.281,"a",@progbits
.Lconst.281:
	.asciz	"func(*\tcommand_line_arguments\tcli.Srv, \tcontext\tcontext.Context, \tgithub_com_spolu_warp\twarp.Command) \tgithub_com_spolu_warp\twarp.CommandResult"
	.size	.Lconst.281, 144

	.type	go..C457,@object
	.section	.rodata.go..C457,"a",@progbits
	.p2align	3
go..C457:
	.quad	.Lconst.281
	.quad	143
	.size	go..C457, 16

	.type	go..C458,@object
	.section	.data.go..C458,"aw",@progbits
	.p2align	4
go..C458:
	.quad	type...1command_line_arguments.Srv
	.quad	context.Context..d
	.quad	github_com_spolu_warp.Command..d
	.size	go..C458, 24

	.type	go..C459,@object
	.section	.data.go..C459,"aw",@progbits
	.p2align	3
go..C459:
	.quad	github_com_spolu_warp.CommandResult..d
	.size	go..C459, 8

	.type	.Lconst.282,@object
	.section	.rodata..Lconst.282,"a",@progbits
.Lconst.282:
	.asciz	"executeRevoke"
	.size	.Lconst.282, 14

	.type	go..C460,@object
	.section	.rodata.go..C460,"a",@progbits
	.p2align	3
go..C460:
	.quad	.Lconst.282
	.quad	13
	.size	go..C460, 16

	.type	go..C461,@object
	.section	.rodata.go..C461,"a",@progbits
	.p2align	3
go..C461:
	.quad	.Lconst.2
	.quad	22
	.size	go..C461, 16

	.type	.Lconst.283,@object
	.section	.rodata..Lconst.283,"a",@progbits
.Lconst.283:
	.asciz	"executeState"
	.size	.Lconst.283, 13

	.type	go..C462,@object
	.section	.rodata.go..C462,"a",@progbits
	.p2align	3
go..C462:
	.quad	.Lconst.283
	.quad	12
	.size	go..C462, 16

	.type	go..C463,@object
	.section	.rodata.go..C463,"a",@progbits
	.p2align	3
go..C463:
	.quad	.Lconst.2
	.quad	22
	.size	go..C463, 16

	.type	.Lconst.284,@object
	.section	.rodata..Lconst.284,"a",@progbits
.Lconst.284:
	.asciz	"handle"
	.size	.Lconst.284, 7

	.type	go..C464,@object
	.section	.rodata.go..C464,"a",@progbits
	.p2align	3
go..C464:
	.quad	.Lconst.284
	.quad	6
	.size	go..C464, 16

	.type	go..C465,@object
	.section	.rodata.go..C465,"a",@progbits
	.p2align	3
go..C465:
	.quad	.Lconst.2
	.quad	22
	.size	go..C465, 16

	.type	type..func.8context.Context.3net.Conn.9.8error.9,@object
	.section	.rodata.type..func.8context.Context.3net.Conn.9.8error.9,"aG",@progbits,type..func.8context.Context.3net.Conn.9.8error.9,comdat
	.weak	type..func.8context.Context.3net.Conn.9.8error.9
	.p2align	4
type..func.8context.Context.3net.Conn.9.8error.9:
	.quad	8
	.quad	8
	.long	718280616
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C466
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C467
	.quad	2
	.quad	2
	.quad	go..C468
	.quad	1
	.quad	1
	.size	type..func.8context.Context.3net.Conn.9.8error.9, 128

	.type	.Lconst.285,@object
	.section	.rodata..Lconst.285,"a",@progbits
.Lconst.285:
	.asciz	"func(\tcontext\tcontext.Context, \tnet\tnet.Conn) error"
	.size	.Lconst.285, 52

	.type	go..C466,@object
	.section	.rodata.go..C466,"a",@progbits
	.p2align	3
go..C466:
	.quad	.Lconst.285
	.quad	51
	.size	go..C466, 16

	.type	go..C467,@object
	.section	.data.go..C467,"aw",@progbits
	.p2align	3
go..C467:
	.quad	context.Context..d
	.quad	net.Conn..d
	.size	go..C467, 16

	.type	go..C468,@object
	.section	.data.go..C468,"aw",@progbits
	.p2align	3
go..C468:
	.quad	error..d
	.size	go..C468, 8

	.type	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9,@object
	.section	.rodata.type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9,"aG",@progbits,type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9,comdat
	.weak	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9
	.p2align	4
type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9:
	.quad	8
	.quad	8
	.long	1467861160
	.byte	19
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C469
	.quad	0
	.quad	0
	.byte	0
	.zero	7
	.quad	go..C470
	.quad	3
	.quad	3
	.quad	go..C471
	.quad	1
	.quad	1
	.size	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9, 128

	.type	.Lconst.286,@object
	.section	.rodata..Lconst.286,"a",@progbits
.Lconst.286:
	.asciz	"func(*\tcommand_line_arguments\tcli.Srv, \tcontext\tcontext.Context, \tnet\tnet.Conn) error"
	.size	.Lconst.286, 86

	.type	go..C469,@object
	.section	.rodata.go..C469,"a",@progbits
	.p2align	3
go..C469:
	.quad	.Lconst.286
	.quad	85
	.size	go..C469, 16

	.type	go..C470,@object
	.section	.data.go..C470,"aw",@progbits
	.p2align	4
go..C470:
	.quad	type...1command_line_arguments.Srv
	.quad	context.Context..d
	.quad	net.Conn..d
	.size	go..C470, 24

	.type	go..C471,@object
	.section	.data.go..C471,"aw",@progbits
	.p2align	3
go..C471:
	.quad	error..d
	.size	go..C471, 8

	.type	go..C472,@object
	.section	.data.go..C472,"aw",@progbits
	.p2align	4
go..C472:
	.quad	go..C437
	.quad	0
	.quad	type..func.8.9.8string.9
	.quad	type..func.8.1command_line_arguments.Srv.9.8string.9
	.quad	command_line_arguments.Srv.Path
	.quad	go..C441
	.quad	0
	.quad	type..func.8context.Context.9.8error.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.9.8error.9
	.quad	command_line_arguments.Srv.Run
	.quad	go..C445
	.quad	0
	.quad	type..func.8context.Context.3.1command_line_arguments.Session.9.8.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3.1command_line_arguments.Session.9.8.9
	.quad	command_line_arguments.Srv.SetSession
	.quad	go..C452
	.quad	go..C453
	.quad	type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.quad	command_line_arguments.Srv.executeAuthorize
	.quad	go..C460
	.quad	go..C461
	.quad	type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.quad	command_line_arguments.Srv.executeRevoke
	.quad	go..C462
	.quad	go..C463
	.quad	type..func.8context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3github_com_spolu_warp.Command.9.8github_com_spolu_warp.CommandResult.9
	.quad	command_line_arguments.Srv.executeState
	.quad	go..C464
	.quad	go..C465
	.quad	type..func.8context.Context.3net.Conn.9.8error.9
	.quad	type..func.8.1command_line_arguments.Srv.3context.Context.3net.Conn.9.8error.9
	.quad	command_line_arguments.Srv.handle
	.size	go..C472, 280

	.type	go..C473,@object
	.section	.rodata.go..C473,"a",@progbits
	.p2align	4
go..C473:
	.quad	0
	.quad	0
	.quad	go..C472
	.quad	7
	.quad	7
	.size	go..C473, 40

	.type	type...1.1command_line_arguments.Srv,@object
	.section	.rodata.type...1.1command_line_arguments.Srv,"aG",@progbits,type...1.1command_line_arguments.Srv,comdat
	.weak	type...1.1command_line_arguments.Srv
	.p2align	4
type...1.1command_line_arguments.Srv:
	.quad	8
	.quad	8
	.long	2757502873
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C474
	.quad	0
	.quad	0
	.quad	type...1command_line_arguments.Srv
	.size	type...1.1command_line_arguments.Srv, 80

	.type	.Lconst.287,@object
	.section	.rodata..Lconst.287,"a",@progbits
.Lconst.287:
	.asciz	"**\tcommand_line_arguments\tcli.Srv"
	.size	.Lconst.287, 34

	.type	go..C474,@object
	.section	.rodata.go..C474,"a",@progbits
	.p2align	3
go..C474:
	.quad	.Lconst.287
	.quad	33
	.size	go..C474, 16

	.type	go..C475,@object
	.section	.rodata.go..C475,"a",@progbits
	.p2align	3
go..C475:
	.quad	.Lconst.196
	.quad	4
	.size	go..C475, 16

	.type	go..C476,@object
	.section	.rodata.go..C476,"a",@progbits
	.p2align	3
go..C476:
	.quad	.Lconst.2
	.quad	22
	.size	go..C476, 16

	.type	go..C477,@object
	.section	.rodata.go..C477,"a",@progbits
	.p2align	3
go..C477:
	.quad	.Lconst.195
	.quad	7
	.size	go..C477, 16

	.type	go..C478,@object
	.section	.rodata.go..C478,"a",@progbits
	.p2align	3
go..C478:
	.quad	.Lconst.2
	.quad	22
	.size	go..C478, 16

	.type	.Lconst.288,@object
	.section	.rodata..Lconst.288,"a",@progbits
.Lconst.288:
	.asciz	"path"
	.size	.Lconst.288, 5

	.type	go..C479,@object
	.section	.rodata.go..C479,"a",@progbits
	.p2align	3
go..C479:
	.quad	.Lconst.288
	.quad	4
	.size	go..C479, 16

	.type	go..C480,@object
	.section	.rodata.go..C480,"a",@progbits
	.p2align	3
go..C480:
	.quad	.Lconst.2
	.quad	22
	.size	go..C480, 16

	.type	go..C481,@object
	.section	.rodata.go..C481,"a",@progbits
	.p2align	3
go..C481:
	.quad	.Lconst.241
	.quad	5
	.size	go..C481, 16

	.type	go..C482,@object
	.section	.rodata.go..C482,"a",@progbits
	.p2align	3
go..C482:
	.quad	.Lconst.2
	.quad	22
	.size	go..C482, 16

	.type	go..C483,@object
	.section	.data.go..C483,"aw",@progbits
	.p2align	4
go..C483:
	.quad	go..C475
	.quad	go..C476
	.quad	string..d
	.quad	0
	.quad	0
	.quad	go..C477
	.quad	go..C478
	.quad	type...1command_line_arguments.Session
	.quad	0
	.quad	32
	.quad	go..C479
	.quad	go..C480
	.quad	string..d
	.quad	0
	.quad	48
	.quad	go..C481
	.quad	go..C482
	.quad	type...1sync.Mutex
	.quad	0
	.quad	80
	.size	go..C483, 160

	.type	command_line_arguments.NewSrv..f,@object
	.section	.rodata.command_line_arguments.NewSrv..f,"a",@progbits
	.globl	command_line_arguments.NewSrv..f
	.p2align	3
command_line_arguments.NewSrv..f:
	.quad	command_line_arguments.NewSrv
	.size	command_line_arguments.NewSrv..f, 8

	.type	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5,@object
	.section	.rodata.type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5,"aG",@progbits,type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5,comdat
	.weak	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5
	.p2align	4
type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5:
	.quad	32
	.quad	32
	.long	705191492
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..pa
	.quad	go..C484
	.quad	0
	.quad	0
	.quad	go..C493
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5.f.f.0.1.4void.5.2.command_line_arguments.s1.0.1.1command_line_arguments.Srv.2.command_line_arguments.ctx2.0.1context.Context.2.command_line_arguments.conn3.0.1net.Conn.5, 96

	.type	.Lconst.291,@object
	.section	.rodata..Lconst.291,"a",@progbits
.Lconst.291:
	.asciz	"struct { f *; s1 **\tcommand_line_arguments\tcli.Srv; ctx2 *\tcontext\tcontext.Context; conn3 *\tnet\tnet.Conn }"
	.size	.Lconst.291, 107

	.type	go..C484,@object
	.section	.rodata.go..C484,"a",@progbits
	.p2align	3
go..C484:
	.quad	.Lconst.291
	.quad	106
	.size	go..C484, 16

	.type	.Lconst.292,@object
	.section	.rodata..Lconst.292,"a",@progbits
.Lconst.292:
	.asciz	"f"
	.size	.Lconst.292, 2

	.type	go..C485,@object
	.section	.rodata.go..C485,"a",@progbits
	.p2align	3
go..C485:
	.quad	.Lconst.292
	.quad	1
	.size	go..C485, 16

	.type	go..C486,@object
	.section	.rodata.go..C486,"a",@progbits
	.p2align	3
go..C486:
	.quad	.Lconst.292
	.quad	1
	.size	go..C486, 16

	.type	.Lconst.293,@object
	.section	.rodata..Lconst.293,"a",@progbits
.Lconst.293:
	.asciz	"s1"
	.size	.Lconst.293, 3

	.type	go..C487,@object
	.section	.rodata.go..C487,"a",@progbits
	.p2align	3
go..C487:
	.quad	.Lconst.293
	.quad	2
	.size	go..C487, 16

	.type	go..C488,@object
	.section	.rodata.go..C488,"a",@progbits
	.p2align	3
go..C488:
	.quad	.Lconst.2
	.quad	22
	.size	go..C488, 16

	.type	.Lconst.294,@object
	.section	.rodata..Lconst.294,"a",@progbits
.Lconst.294:
	.asciz	"ctx2"
	.size	.Lconst.294, 5

	.type	go..C489,@object
	.section	.rodata.go..C489,"a",@progbits
	.p2align	3
go..C489:
	.quad	.Lconst.294
	.quad	4
	.size	go..C489, 16

	.type	go..C490,@object
	.section	.rodata.go..C490,"a",@progbits
	.p2align	3
go..C490:
	.quad	.Lconst.2
	.quad	22
	.size	go..C490, 16

	.type	.Lconst.295,@object
	.section	.rodata..Lconst.295,"a",@progbits
.Lconst.295:
	.asciz	"conn3"
	.size	.Lconst.295, 6

	.type	go..C491,@object
	.section	.rodata.go..C491,"a",@progbits
	.p2align	3
go..C491:
	.quad	.Lconst.295
	.quad	5
	.size	go..C491, 16

	.type	go..C492,@object
	.section	.rodata.go..C492,"a",@progbits
	.p2align	3
go..C492:
	.quad	.Lconst.2
	.quad	22
	.size	go..C492, 16

	.type	go..C493,@object
	.section	.data.go..C493,"aw",@progbits
	.p2align	4
go..C493:
	.quad	go..C485
	.quad	go..C486
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	0
	.quad	go..C487
	.quad	go..C488
	.quad	type...1.1command_line_arguments.Srv
	.quad	0
	.quad	16
	.quad	go..C489
	.quad	go..C490
	.quad	type...1context.Context
	.quad	0
	.quad	32
	.quad	go..C491
	.quad	go..C492
	.quad	type...1net.Conn
	.quad	0
	.quad	48
	.size	go..C493, 160

	.type	type..struct.4.4x.5fn.0func.8.9.8.9.5,@object
	.section	.rodata.type..struct.4.4x.5fn.0func.8.9.8.9.5,"aG",@progbits,type..struct.4.4x.5fn.0func.8.9.8.9.5,comdat
	.weak	type..struct.4.4x.5fn.0func.8.9.8.9.5
	.p2align	4
type..struct.4.4x.5fn.0func.8.9.8.9.5:
	.quad	8
	.quad	8
	.long	76
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C494
	.quad	0
	.quad	0
	.quad	go..C496
	.quad	1
	.quad	1
	.size	type..struct.4.4x.5fn.0func.8.9.8.9.5, 96

	.type	.Lconst.296,@object
	.section	.rodata..Lconst.296,"a",@progbits
.Lconst.296:
	.asciz	"struct { fn func() }"
	.size	.Lconst.296, 21

	.type	go..C494,@object
	.section	.rodata.go..C494,"a",@progbits
	.p2align	3
go..C494:
	.quad	.Lconst.296
	.quad	20
	.size	go..C494, 16

	.type	.Lconst.297,@object
	.section	.rodata..Lconst.297,"a",@progbits
.Lconst.297:
	.asciz	"fn"
	.size	.Lconst.297, 3

	.type	go..C495,@object
	.section	.rodata.go..C495,"a",@progbits
	.p2align	3
go..C495:
	.quad	.Lconst.297
	.quad	2
	.size	go..C495, 16

	.type	go..C496,@object
	.section	.data.go..C496,"aw",@progbits
	.p2align	4
go..C496:
	.quad	go..C495
	.quad	0
	.quad	type..func.8.9.8.9
	.quad	0
	.quad	0
	.size	go..C496, 40

	.type	.Lconst.298,@object
	.section	.rodata..Lconst.298,"a",@progbits
.Lconst.298:
	.asciz	"Failed to receive command: %v"
	.size	.Lconst.298, 30

	.type	.Lconst.300,@object
	.section	.rodata..Lconst.300,"a",@progbits
	.p2align	4
.Lconst.300:
	.zero	96
	.size	.Lconst.300, 96

	.type	.Lconst.302,@object
	.section	.rodata..Lconst.302,"a",@progbits
.Lconst.302:
	.asciz	"authorize"
	.size	.Lconst.302, 10

	.type	.Lconst.303,@object
	.section	.rodata..Lconst.303,"a",@progbits
	.p2align	3
.Lconst.303:
	.quad	.Lconst.302
	.quad	9
	.size	.Lconst.303, 16

	.type	.Lconst.304,@object
	.section	.rodata..Lconst.304,"a",@progbits
.Lconst.304:
	.asciz	"revoke"
	.size	.Lconst.304, 7

	.type	.Lconst.305,@object
	.section	.rodata..Lconst.305,"a",@progbits
	.p2align	3
.Lconst.305:
	.quad	.Lconst.304
	.quad	6
	.size	.Lconst.305, 16

	.type	.Lconst.306,@object
	.section	.rodata..Lconst.306,"a",@progbits
.Lconst.306:
	.asciz	"command_unknown"
	.size	.Lconst.306, 16

	.type	.Lconst.307,@object
	.section	.rodata..Lconst.307,"a",@progbits
	.p2align	3
.Lconst.307:
	.quad	.Lconst.306
	.quad	15
	.size	.Lconst.307, 16

	.type	.Lconst.308,@object
	.section	.rodata..Lconst.308,"a",@progbits
.Lconst.308:
	.asciz	"Invalid command %s."
	.size	.Lconst.308, 20

	.type	.Lconst.310,@object
	.section	.rodata..Lconst.310,"a",@progbits
.Lconst.310:
	.asciz	"Failed to send command result: %v"
	.size	.Lconst.310, 34

	.type	.Lconst.312,@object
	.section	.rodata..Lconst.312,"a",@progbits
	.p2align	4
.Lconst.312:
	.quad	.Lconst.208
	.quad	5
	.byte	0
	.zero	7
	.zero	40
	.zero	32
	.size	.Lconst.312, 96

	.type	.Lconst.313,@object
	.section	.rodata..Lconst.313,"a",@progbits
.Lconst.313:
	.asciz	"disconnected"
	.size	.Lconst.313, 13

	.type	.Lconst.314,@object
	.section	.rodata..Lconst.314,"a",@progbits
.Lconst.314:
	.asciz	"The warp is currently disconnected."
	.size	.Lconst.314, 36

	.type	.Lconst.315,@object
	.section	.rodata..Lconst.315,"a",@progbits
	.p2align	4
.Lconst.315:
	.quad	.Lconst.302
	.quad	9
	.byte	0
	.zero	7
	.zero	40
	.quad	.Lconst.313
	.quad	12
	.quad	.Lconst.314
	.quad	35
	.size	.Lconst.315, 96

	.type	.Lconst.316,@object
	.section	.rodata..Lconst.316,"a",@progbits
.Lconst.316:
	.asciz	"user_token_required"
	.size	.Lconst.316, 20

	.type	.Lconst.317,@object
	.section	.rodata..Lconst.317,"a",@progbits
.Lconst.317:
	.asciz	"User token to authorize is required."
	.size	.Lconst.317, 37

	.type	.Lconst.318,@object
	.section	.rodata..Lconst.318,"a",@progbits
	.p2align	4
.Lconst.318:
	.quad	.Lconst.302
	.quad	9
	.byte	0
	.zero	7
	.zero	40
	.quad	.Lconst.316
	.quad	19
	.quad	.Lconst.317
	.quad	36
	.size	.Lconst.318, 96

	.type	.Lconst.319,@object
	.section	.rodata..Lconst.319,"a",@progbits
.Lconst.319:
	.asciz	"."
	.size	.Lconst.319, 2

	.type	.Lconst.320,@object
	.section	.rodata..Lconst.320,"a",@progbits
	.p2align	3
.Lconst.320:
	.quad	.Lconst.319
	.quad	1
	.size	.Lconst.320, 16

	.type	.Lconst.321,@object
	.section	.rodata..Lconst.321,"a",@progbits
.Lconst.321:
	.asciz	"user_unknown"
	.size	.Lconst.321, 13

	.type	.Lconst.322,@object
	.section	.rodata..Lconst.322,"a",@progbits
	.p2align	3
.Lconst.322:
	.quad	.Lconst.321
	.quad	12
	.size	.Lconst.322, 16

	.type	.Lconst.323,@object
	.section	.rodata..Lconst.323,"a",@progbits
.Lconst.323:
	.asciz	"update_failed"
	.size	.Lconst.323, 14

	.type	.Lconst.324,@object
	.section	.rodata..Lconst.324,"a",@progbits
.Lconst.324:
	.asciz	"Failed to apply update to warp."
	.size	.Lconst.324, 32

	.type	.Lconst.325,@object
	.section	.rodata..Lconst.325,"a",@progbits
	.p2align	4
.Lconst.325:
	.quad	.Lconst.302
	.quad	9
	.byte	0
	.zero	7
	.zero	40
	.quad	.Lconst.323
	.quad	13
	.quad	.Lconst.324
	.quad	31
	.size	.Lconst.325, 96

	.type	.Lconst.326,@object
	.section	.rodata..Lconst.326,"a",@progbits
	.p2align	4
.Lconst.326:
	.quad	.Lconst.302
	.quad	9
	.byte	0
	.zero	7
	.zero	40
	.zero	32
	.size	.Lconst.326, 96

	.type	.Lconst.327,@object
	.section	.rodata..Lconst.327,"a",@progbits
	.p2align	4
.Lconst.327:
	.quad	.Lconst.304
	.quad	6
	.byte	0
	.zero	7
	.zero	40
	.quad	.Lconst.313
	.quad	12
	.quad	.Lconst.314
	.quad	35
	.size	.Lconst.327, 96

	.type	.Lconst.328,@object
	.section	.rodata..Lconst.328,"a",@progbits
	.p2align	4
.Lconst.328:
	.quad	.Lconst.304
	.quad	6
	.byte	0
	.zero	7
	.zero	40
	.quad	.Lconst.323
	.quad	13
	.quad	.Lconst.324
	.quad	31
	.size	.Lconst.328, 96

	.type	.Lconst.329,@object
	.section	.rodata..Lconst.329,"a",@progbits
	.p2align	4
.Lconst.329:
	.quad	.Lconst.304
	.quad	6
	.byte	0
	.zero	7
	.zero	40
	.zero	32
	.size	.Lconst.329, 96

	.type	.Lconst.330,@object
	.section	.rodata..Lconst.330,"a",@progbits
	.p2align	4
.Lconst.330:
	.zero	48
	.size	.Lconst.330, 48

	.type	.Lconst.331,@object
	.section	.rodata..Lconst.331,"a",@progbits
.Lconst.331:
	.asciz	"host"
	.size	.Lconst.331, 5

	.type	command_line_arguments.NewWarpState..f,@object
	.section	.rodata.command_line_arguments.NewWarpState..f,"a",@progbits
	.globl	command_line_arguments.NewWarpState..f
	.p2align	3
command_line_arguments.NewWarpState..f:
	.quad	command_line_arguments.NewWarpState
	.size	command_line_arguments.NewWarpState..f, 8

	.type	.Lconst.333,@object
	.section	.rodata..Lconst.333,"a",@progbits
.Lconst.333:
	.asciz	"Warp token mismatch: %s"
	.size	.Lconst.333, 24

	.type	type..map.6string.7github_com_spolu_warp.User,@object
	.section	.rodata.type..map.6string.7github_com_spolu_warp.User,"aG",@progbits,type..map.6string.7github_com_spolu_warp.User,comdat
	.weak	type..map.6string.7github_com_spolu_warp.User
	.p2align	4
type..map.6string.7github_com_spolu_warp.User:
	.quad	8
	.quad	8
	.long	479700253
	.byte	21
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C497
	.quad	0
	.quad	0
	.quad	string..d
	.quad	github_com_spolu_warp.User..d
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.quad	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.byte	16
	.byte	0
	.byte	48
	.byte	0
	.short	528
	.byte	1
	.byte	1
	.size	type..map.6string.7github_com_spolu_warp.User, 112

	.type	.Lconst.336,@object
	.section	.rodata..Lconst.336,"a",@progbits
.Lconst.336:
	.asciz	"map[string]\tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.336, 44

	.type	go..C497,@object
	.section	.rodata.go..C497,"a",@progbits
	.p2align	3
go..C497:
	.quad	.Lconst.336
	.quad	43
	.size	go..C497, 16

	.type	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5:
	.quad	528
	.quad	528
	.long	2436696260
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..kwkwircfkvircba
	.quad	go..C498
	.quad	0
	.quad	0
	.quad	go..C505
	.quad	4
	.quad	4
	.size	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, 96

	.type	.Lconst.337,@object
	.section	.rodata..Lconst.337,"a",@progbits
.Lconst.337:
	.asciz	"struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }"
	.size	.Lconst.337, 100

	.type	go..C498,@object
	.section	.rodata.go..C498,"a",@progbits
	.p2align	3
go..C498:
	.quad	.Lconst.337
	.quad	99
	.size	go..C498, 16

	.type	go..C499,@object
	.section	.rodata.go..C499,"a",@progbits
	.p2align	3
go..C499:
	.quad	.Lconst.24
	.quad	7
	.size	go..C499, 16

	.type	go..C500,@object
	.section	.rodata.go..C500,"a",@progbits
	.p2align	3
go..C500:
	.quad	.Lconst.29
	.quad	4
	.size	go..C500, 16

	.type	go..C501,@object
	.section	.rodata.go..C501,"a",@progbits
	.p2align	3
go..C501:
	.quad	.Lconst.31
	.quad	6
	.size	go..C501, 16

	.type	type...68x.7github_com_spolu_warp.User,@object
	.section	.rodata.type...68x.7github_com_spolu_warp.User,"aG",@progbits,type...68x.7github_com_spolu_warp.User,comdat
	.weak	type...68x.7github_com_spolu_warp.User
	.p2align	4
type...68x.7github_com_spolu_warp.User:
	.quad	384
	.quad	360
	.long	662338805
	.byte	17
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..fkvircfkva
	.quad	go..C502
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.User..d
	.quad	type...6.7github_com_spolu_warp.User
	.quad	8
	.size	type...68x.7github_com_spolu_warp.User, 96

	.type	.Lconst.338,@object
	.section	.rodata..Lconst.338,"a",@progbits
.Lconst.338:
	.asciz	"[8]\tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.338, 36

	.type	go..C502,@object
	.section	.rodata.go..C502,"a",@progbits
	.p2align	3
go..C502:
	.quad	.Lconst.338
	.quad	35
	.size	go..C502, 16

	.type	type...6.7github_com_spolu_warp.User,@object
	.section	.rodata.type...6.7github_com_spolu_warp.User,"aG",@progbits,type...6.7github_com_spolu_warp.User,comdat
	.weak	type...6.7github_com_spolu_warp.User
	.p2align	4
type...6.7github_com_spolu_warp.User:
	.quad	24
	.quad	8
	.long	2478653057
	.byte	23
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..ba
	.quad	go..C503
	.quad	0
	.quad	0
	.quad	github_com_spolu_warp.User..d
	.size	type...6.7github_com_spolu_warp.User, 80

	.type	.Lconst.339,@object
	.section	.rodata..Lconst.339,"a",@progbits
.Lconst.339:
	.asciz	"[]\tgithub_com_spolu_warp\twarp.User"
	.size	.Lconst.339, 35

	.type	go..C503,@object
	.section	.rodata.go..C503,"a",@progbits
	.p2align	3
go..C503:
	.quad	.Lconst.339
	.quad	34
	.size	go..C503, 16

	.type	go..C504,@object
	.section	.rodata.go..C504,"a",@progbits
	.p2align	3
go..C504:
	.quad	.Lconst.32
	.quad	8
	.size	go..C504, 16

	.type	go..C505,@object
	.section	.data.go..C505,"aw",@progbits
	.p2align	4
go..C505:
	.quad	go..C499
	.quad	0
	.quad	type...68x.7uint8
	.quad	0
	.quad	0
	.quad	go..C500
	.quad	0
	.quad	type...68x.7string
	.quad	0
	.quad	16
	.quad	go..C501
	.quad	0
	.quad	type...68x.7github_com_spolu_warp.User
	.quad	0
	.quad	272
	.quad	go..C504
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	1040
	.size	go..C505, 160

	.type	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,@object
	.section	.rodata.type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,"aG",@progbits,type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5,comdat
	.weak	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5
	.p2align	4
type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5:
	.quad	48
	.quad	48
	.long	1892882916
	.byte	25
	.byte	8
	.byte	8
	.zero	1
	.quad	0
	.quad	0
	.quad	gcbits..mb
	.quad	go..C506
	.quad	0
	.quad	0
	.quad	go..C517
	.quad	9
	.quad	9
	.size	type..struct.4.4x.5count.0int.2flags.0uint8.2B.0uint8.2noverflow.0uint16.2hash0.0uint32.2buckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2oldbuckets.0.1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5.2nevacuate.0uintptr.2extra.0.1.4void.5.5, 96

	.type	.Lconst.340,@object
	.section	.rodata..Lconst.340,"a",@progbits
.Lconst.340:
	.asciz	"struct { count int; flags uint8; B uint8; noverflow uint16; hash0 uint32; buckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }; oldbuckets *struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }; nevacuate uintptr; extra * }"
	.size	.Lconst.340, 326

	.type	go..C506,@object
	.section	.rodata.go..C506,"a",@progbits
	.p2align	3
go..C506:
	.quad	.Lconst.340
	.quad	325
	.size	go..C506, 16

	.type	go..C507,@object
	.section	.rodata.go..C507,"a",@progbits
	.p2align	3
go..C507:
	.quad	.Lconst.34
	.quad	5
	.size	go..C507, 16

	.type	go..C508,@object
	.section	.rodata.go..C508,"a",@progbits
	.p2align	3
go..C508:
	.quad	.Lconst.37
	.quad	5
	.size	go..C508, 16

	.type	go..C509,@object
	.section	.rodata.go..C509,"a",@progbits
	.p2align	3
go..C509:
	.quad	.Lconst.38
	.quad	1
	.size	go..C509, 16

	.type	go..C510,@object
	.section	.rodata.go..C510,"a",@progbits
	.p2align	3
go..C510:
	.quad	.Lconst.39
	.quad	9
	.size	go..C510, 16

	.type	go..C511,@object
	.section	.rodata.go..C511,"a",@progbits
	.p2align	3
go..C511:
	.quad	.Lconst.42
	.quad	5
	.size	go..C511, 16

	.type	go..C512,@object
	.section	.rodata.go..C512,"a",@progbits
	.p2align	3
go..C512:
	.quad	.Lconst.45
	.quad	7
	.size	go..C512, 16

	.type	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,@object
	.section	.rodata.type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,"aG",@progbits,type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5,comdat
	.weak	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.p2align	4
type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5:
	.quad	8
	.quad	8
	.long	332434505
	.byte	54
	.byte	8
	.byte	8
	.zero	1
	.quad	runtime.memhash64..f
	.quad	runtime.memequal64..f
	.quad	gcbits..ba
	.quad	go..C513
	.quad	0
	.quad	0
	.quad	type..struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.size	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5, 80

	.type	.Lconst.341,@object
	.section	.rodata..Lconst.341,"a",@progbits
.Lconst.341:
	.asciz	"*struct { topbits [8]uint8; keys [8]string; values [8]\tgithub_com_spolu_warp\twarp.User; overflow * }"
	.size	.Lconst.341, 101

	.type	go..C513,@object
	.section	.rodata.go..C513,"a",@progbits
	.p2align	3
go..C513:
	.quad	.Lconst.341
	.quad	100
	.size	go..C513, 16

	.type	go..C514,@object
	.section	.rodata.go..C514,"a",@progbits
	.p2align	3
go..C514:
	.quad	.Lconst.47
	.quad	10
	.size	go..C514, 16

	.type	go..C515,@object
	.section	.rodata.go..C515,"a",@progbits
	.p2align	3
go..C515:
	.quad	.Lconst.48
	.quad	9
	.size	go..C515, 16

	.type	go..C516,@object
	.section	.rodata.go..C516,"a",@progbits
	.p2align	3
go..C516:
	.quad	.Lconst.51
	.quad	5
	.size	go..C516, 16

	.type	go..C517,@object
	.section	.data.go..C517,"aw",@progbits
	.p2align	4
go..C517:
	.quad	go..C507
	.quad	0
	.quad	int..d
	.quad	0
	.quad	0
	.quad	go..C508
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	16
	.quad	go..C509
	.quad	0
	.quad	uint8..d
	.quad	0
	.quad	18
	.quad	go..C510
	.quad	0
	.quad	uint16..d
	.quad	0
	.quad	20
	.quad	go..C511
	.quad	0
	.quad	uint32..d
	.quad	0
	.quad	24
	.quad	go..C512
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.quad	0
	.quad	32
	.quad	go..C514
	.quad	0
	.quad	type...1struct.4.4x.5topbits.0.68x.7uint8.2keys.0.68x.7string.2values.0.68x.7github_com_spolu_warp.User.2overflow.0.1.4void.5.5
	.quad	0
	.quad	48
	.quad	go..C515
	.quad	0
	.quad	uintptr..d
	.quad	0
	.quad	64
	.quad	go..C516
	.quad	0
	.quad	unsafe.Pointer..d
	.quad	0
	.quad	80
	.size	go..C517, 360

	.type	.Lconst.342,@object
	.section	.rodata..Lconst.342,"a",@progbits
.Lconst.342:
	.asciz	"User token mismatch: %s <> %s"
	.size	.Lconst.342, 30

	.type	.Lconst.344,@object
	.section	.rodata..Lconst.344,"a",@progbits
.Lconst.344:
	.asciz	"Unexptected hosting user update: %s"
	.size	.Lconst.344, 36

	.type	.Lconst.346,@object
	.section	.rodata..Lconst.346,"a",@progbits
.Lconst.346:
	.asciz	"Unexptected user update mode: %s %d"
	.size	.Lconst.346, 36

	.type	.Lconst.349,@object
	.section	.rodata..Lconst.349,"a",@progbits
.Lconst.349:
	.asciz	"Unknown user: %s"
	.size	.Lconst.349, 17

	.type	gcbits..ha,@object
	.section	.rodata.gcbits..ha,"aG",@progbits,gcbits..ha,comdat
	.weak	gcbits..ha
gcbits..ha:
	.byte	7
	.size	gcbits..ha, 1

	.type	gcbits..ppppa,@object
	.section	.rodata.gcbits..ppppa,"aG",@progbits,gcbits..ppppa,comdat
	.weak	gcbits..ppppa
gcbits..ppppa:
	.ascii	"\357\275\007"
	.size	gcbits..ppppa, 3

	.type	gcbits..pppppppppa,@object
	.section	.rodata.gcbits..pppppppppa,"aG",@progbits,gcbits..pppppppppa,comdat
	.weak	gcbits..pppppppppa
gcbits..pppppppppa:
	.ascii	"\357\275\367\336{\017"
	.size	gcbits..pppppppppa, 6

	.type	gcbits..GGda,@object
	.section	.rodata.gcbits..GGda,"aG",@progbits,gcbits..GGda,comdat
	.weak	gcbits..GGda
gcbits..GGda:
	.ascii	"\377\017"
	.size	gcbits..GGda, 2

	.type	gcbits..Ga,@object
	.section	.rodata.gcbits..Ga,"aG",@progbits,gcbits..Ga,comdat
	.weak	gcbits..Ga
gcbits..Ga:
	.byte	31
	.size	gcbits..Ga, 1

	.type	gcbits..pppa,@object
	.section	.rodata.gcbits..pppa,"aG",@progbits,gcbits..pppa,comdat
	.weak	gcbits..pppa
gcbits..pppa:
	.ascii	"\357="
	.size	gcbits..pppa, 2

	.type	gcbits..ppaa,@object
	.section	.rodata.gcbits..ppaa,"aG",@progbits,gcbits..ppaa,comdat
	.weak	gcbits..ppaa
gcbits..ppaa:
	.ascii	"\357\001"
	.size	gcbits..ppaa, 2

	.type	gcbits..GGGGGGGGGGGGGGGG,@object
	.section	.rodata.gcbits..GGGGGGGGGGGGGGGG,"aG",@progbits,gcbits..GGGGGGGGGGGGGGGG,comdat
	.weak	gcbits..GGGGGGGGGGGGGGGG
gcbits..GGGGGGGGGGGGGGGG:
	.zero	10,255
	.size	gcbits..GGGGGGGGGGGGGGGG, 10

	.type	gcbits..GGGGGGGa,@object
	.section	.rodata.gcbits..GGGGGGGa,"aG",@progbits,gcbits..GGGGGGGa,comdat
	.weak	gcbits..GGGGGGGa
gcbits..GGGGGGGa:
	.ascii	"\377\377\377\377\007"
	.size	gcbits..GGGGGGGa, 5

	.type	gcbits..pppppppppppppppppa,@object
	.section	.rodata.gcbits..pppppppppppppppppa,"aG",@progbits,gcbits..pppppppppppppppppa,comdat
	.weak	gcbits..pppppppppppppppppa
gcbits..pppppppppppppppppa:
	.ascii	"\357\275\367\336{\357\275\367\336{\017"
	.size	gcbits..pppppppppppppppppa, 11

	.type	go..C0,@object
	.section	.data.go..C0,"aw",@progbits
	.p2align	4
go..C0:
	.quad	0
	.quad	118
	.quad	command_line_arguments.Registrar
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	command_line_arguments.flagFilterRegexp
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C15
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C29
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C30
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C31
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C34
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C39
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C57
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C89
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C90
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C91
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C92
	.quad	96
	.quad	96
	.quad	gcbits..GGda
	.quad	go..C96
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C106
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C118
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C128
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C130
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C131
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C132
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C138
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C150
	.quad	80
	.quad	72
	.quad	gcbits..ppaa
	.quad	go..C159
	.quad	40
	.quad	32
	.quad	gcbits..pa
	.quad	go..C169
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C171
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C172
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C175
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C176
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C178
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C179
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C182
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C183
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C185
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C186
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C189
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C190
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C192
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C193
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C202
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C204
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C205
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C217
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C229
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C230
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C232
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C233
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C237
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C239
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C240
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C243
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C244
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C246
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C247
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C251
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C253
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C254
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C257
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C258
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C260
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C261
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C267
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C272
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C273
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C275
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C276
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C279
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C280
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C284
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C286
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C287
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C290
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C293
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C295
	.quad	640
	.quad	640
	.quad	gcbits..GGGGGGGGGGGGGGGG
	.quad	go..C329
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C330
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C333
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C334
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C337
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C338
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C341
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C342
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C345
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C346
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C349
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C350
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C353
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C354
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C355
	.quad	280
	.quad	280
	.quad	gcbits..GGGGGGGa
	.quad	go..C379
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C381
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C382
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C383
	.quad	40
	.quad	40
	.quad	gcbits..Ga
	.quad	go..C394
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C402
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C414
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.quad	go..C415
	.quad	120
	.quad	112
	.quad	gcbits..pppa
	.quad	go..C422
	.quad	680
	.quad	672
	.quad	gcbits..pppppppppppppppppa
	.quad	go..C430
	.quad	40
	.quad	32
	.quad	gcbits..pa
	.quad	go..C439
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C440
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C443
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C444
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C447
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C450
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C455
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C456
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C458
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C459
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C467
	.quad	16
	.quad	16
	.quad	gcbits..da
	.quad	go..C468
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C470
	.quad	24
	.quad	24
	.quad	gcbits..ha
	.quad	go..C471
	.quad	8
	.quad	8
	.quad	gcbits..ba
	.quad	go..C472
	.quad	280
	.quad	280
	.quad	gcbits..GGGGGGGa
	.quad	go..C483
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C493
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C496
	.quad	40
	.quad	32
	.quad	gcbits..pa
	.quad	go..C505
	.quad	160
	.quad	152
	.quad	gcbits..ppppa
	.quad	go..C517
	.quad	360
	.quad	352
	.quad	gcbits..pppppppppa
	.size	go..C0, 3792

	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"llvm-goc"
.Linfo_string1:
	.asciz	"./cli.go"
.Linfo_string2:
	.asciz	"/home/wangcong/go_path/src/github.com/spolu/warp/client"
.Linfo_string3:
	.asciz	"command_line_arguments.Registrar"
.Linfo_string4:
	.asciz	"count"
.Linfo_string5:
	.asciz	"int"
.Linfo_string6:
	.asciz	"flags"
.Linfo_string7:
	.asciz	"uint8"
.Linfo_string8:
	.asciz	"B"
.Linfo_string9:
	.asciz	"noverflow"
.Linfo_string10:
	.asciz	"uint16"
.Linfo_string11:
	.asciz	"hash0"
.Linfo_string12:
	.asciz	"uint32"
.Linfo_string13:
	.asciz	"buckets"
.Linfo_string14:
	.asciz	"void"
.Linfo_string15:
	.asciz	"oldbuckets"
.Linfo_string16:
	.asciz	"nevacuate"
.Linfo_string17:
	.asciz	"uintptr"
.Linfo_string18:
	.asciz	"extra"
.Linfo_string19:
	.asciz	"runtime.hmap"
.Linfo_string20:
	.asciz	"runtime.writeBarrier"
.Linfo_string21:
	.asciz	"command_line_arguments.flagFilterRegexp"
.Linfo_string22:
	.asciz	"regexpRO"
.Linfo_string23:
	.asciz	"expr"
.Linfo_string24:
	.asciz	"__data"
.Linfo_string25:
	.asciz	"__length"
.Linfo_string26:
	.asciz	"string"
.Linfo_string27:
	.asciz	"prog"
.Linfo_string28:
	.asciz	"Inst"
.Linfo_string29:
	.asciz	"__values"
.Linfo_string30:
	.asciz	"Op"
.Linfo_string31:
	.asciz	"InstOp"
.Linfo_string32:
	.asciz	"Out"
.Linfo_string33:
	.asciz	"Arg"
.Linfo_string34:
	.asciz	"Rune"
.Linfo_string35:
	.asciz	"int32"
.Linfo_string36:
	.asciz	"__count"
.Linfo_string37:
	.asciz	"__capacity"
.Linfo_string38:
	.asciz	"struct{*int32,int,int}"
.Linfo_string39:
	.asciz	"struct{*Inst,int,int}"
.Linfo_string40:
	.asciz	"Start"
.Linfo_string41:
	.asciz	"NumCap"
.Linfo_string42:
	.asciz	"Prog"
.Linfo_string43:
	.asciz	"onepass"
.Linfo_string44:
	.asciz	"Next"
.Linfo_string45:
	.asciz	"struct{*uint32,int,int}"
.Linfo_string46:
	.asciz	".regexp.onePassInst"
.Linfo_string47:
	.asciz	"struct{*.regexp.onePassInst,int,int}"
.Linfo_string48:
	.asciz	".regexp.onePassProg"
.Linfo_string49:
	.asciz	"prefix"
.Linfo_string50:
	.asciz	"prefixBytes"
.Linfo_string51:
	.asciz	"struct{*uint8,int,int}"
.Linfo_string52:
	.asciz	"prefixComplete"
.Linfo_string53:
	.asciz	"bool"
.Linfo_string54:
	.asciz	"prefixRune"
.Linfo_string55:
	.asciz	"prefixEnd"
.Linfo_string56:
	.asciz	"cond"
.Linfo_string57:
	.asciz	"EmptyOp"
.Linfo_string58:
	.asciz	"numSubexp"
.Linfo_string59:
	.asciz	"subexpNames"
.Linfo_string60:
	.asciz	"struct{*string,int,int}"
.Linfo_string61:
	.asciz	"longest"
.Linfo_string62:
	.asciz	".regexp.regexpRO"
.Linfo_string63:
	.asciz	"mu"
.Linfo_string64:
	.asciz	"state"
.Linfo_string65:
	.asciz	"sema"
.Linfo_string66:
	.asciz	"Mutex"
.Linfo_string67:
	.asciz	"machine"
.Linfo_string68:
	.asciz	"re"
.Linfo_string69:
	.asciz	"p"
.Linfo_string70:
	.asciz	"op"
.Linfo_string71:
	.asciz	"maxBitStateLen"
.Linfo_string72:
	.asciz	"b"
.Linfo_string73:
	.asciz	"end"
.Linfo_string74:
	.asciz	"cap"
.Linfo_string75:
	.asciz	"struct{*int,int,int}"
.Linfo_string76:
	.asciz	"jobs"
.Linfo_string77:
	.asciz	"pc"
.Linfo_string78:
	.asciz	"arg"
.Linfo_string79:
	.asciz	"pos"
.Linfo_string80:
	.asciz	".regexp.job"
.Linfo_string81:
	.asciz	"struct{*.regexp.job,int,int}"
.Linfo_string82:
	.asciz	"visited"
.Linfo_string83:
	.asciz	".regexp.bitState"
.Linfo_string84:
	.asciz	"q0"
.Linfo_string85:
	.asciz	"sparse"
.Linfo_string86:
	.asciz	"dense"
.Linfo_string87:
	.asciz	"t"
.Linfo_string88:
	.asciz	"inst"
.Linfo_string89:
	.asciz	".regexp.thread"
.Linfo_string90:
	.asciz	".regexp.entry"
.Linfo_string91:
	.asciz	"struct{*.regexp.entry,int,int}"
.Linfo_string92:
	.asciz	".regexp.queue"
.Linfo_string93:
	.asciz	"q1"
.Linfo_string94:
	.asciz	"pool"
.Linfo_string95:
	.asciz	"struct{**.regexp.thread,int,int}"
.Linfo_string96:
	.asciz	"matched"
.Linfo_string97:
	.asciz	"matchcap"
.Linfo_string98:
	.asciz	"inputBytes"
.Linfo_string99:
	.asciz	"str"
.Linfo_string100:
	.asciz	".regexp.inputBytes"
.Linfo_string101:
	.asciz	"inputString"
.Linfo_string102:
	.asciz	".regexp.inputString"
.Linfo_string103:
	.asciz	"inputReader"
.Linfo_string104:
	.asciz	"r"
.Linfo_string105:
	.asciz	"__methods"
.Linfo_string106:
	.asciz	"__type_descriptor"
.Linfo_string107:
	.asciz	"size"
.Linfo_string108:
	.asciz	"ptrdata"
.Linfo_string109:
	.asciz	"hash"
.Linfo_string110:
	.asciz	"kind"
.Linfo_string111:
	.asciz	"align"
.Linfo_string112:
	.asciz	"fieldAlign"
.Linfo_string113:
	.asciz	"hashfn"
.Linfo_string114:
	.asciz	"code"
.Linfo_string115:
	.asciz	"__go_descriptor"
.Linfo_string116:
	.asciz	"equalfn"
.Linfo_string117:
	.asciz	"gcdata"
.Linfo_string118:
	.asciz	"uncommonType"
.Linfo_string119:
	.asciz	"name"
.Linfo_string120:
	.asciz	"pkgPath"
.Linfo_string121:
	.asciz	"methods"
.Linfo_string122:
	.asciz	"mtyp"
.Linfo_string123:
	.asciz	"typ"
.Linfo_string124:
	.asciz	"tfn"
.Linfo_string125:
	.asciz	"method"
.Linfo_string126:
	.asciz	"struct{*method,int,int}"
.Linfo_string127:
	.asciz	"ptrToThis"
.Linfo_string128:
	.asciz	"_type"
.Linfo_string129:
	.asciz	"ReadRune"
.Linfo_string130:
	.asciz	"err"
.Linfo_string131:
	.asciz	"Error"
.Linfo_string132:
	.asciz	"struct{*_type,*func(*void)string}"
.Linfo_string133:
	.asciz	"__object"
.Linfo_string134:
	.asciz	"error"
.Linfo_string135:
	.asciz	"struct{int32,int,error}"
.Linfo_string136:
	.asciz	"struct{*_type,*func(*void)struct{int32,int,error}}"
.Linfo_string137:
	.asciz	"RuneReader"
.Linfo_string138:
	.asciz	"atEOT"
.Linfo_string139:
	.asciz	".regexp.inputReader"
.Linfo_string140:
	.asciz	".regexp.machine"
.Linfo_string141:
	.asciz	"struct{**.regexp.machine,int,int}"
.Linfo_string142:
	.asciz	"Regexp"
.Linfo_string143:
	.asciz	"github_com_spolu_warp.EnvWarp"
.Linfo_string144:
	.asciz	"io_ioutil.Discard"
.Linfo_string145:
	.asciz	"Write"
.Linfo_string146:
	.asciz	"n"
.Linfo_string147:
	.asciz	"struct{int,error}"
.Linfo_string148:
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string149:
	.asciz	"Writer"
.Linfo_string150:
	.asciz	"github_com_spolu_warp.Version"
.Linfo_string151:
	.asciz	"command_line_arguments.UserState.ProtocolUser"
.Linfo_string152:
	.asciz	"cli.ProtocolUser..1command_line_arguments.UserState"
.Linfo_string153:
	.asciz	"Token"
.Linfo_string154:
	.asciz	"Username"
.Linfo_string155:
	.asciz	"Mode"
.Linfo_string156:
	.asciz	"Hosting"
.Linfo_string157:
	.asciz	"User"
.Linfo_string158:
	.asciz	"u"
.Linfo_string159:
	.asciz	"token"
.Linfo_string160:
	.asciz	"username"
.Linfo_string161:
	.asciz	"mode"
.Linfo_string162:
	.asciz	"hosting"
.Linfo_string163:
	.asciz	"UserState"
.Linfo_string164:
	.asciz	"$ret44"
.Linfo_string165:
	.asciz	"cli.retrieveShell"
.Linfo_string166:
	.asciz	"UNNAMED"
.Linfo_string167:
	.asciz	"struct{string,error}"
.Linfo_string168:
	.asciz	"ctx"
.Linfo_string169:
	.asciz	"Deadline"
.Linfo_string170:
	.asciz	"deadline"
.Linfo_string171:
	.asciz	"wall"
.Linfo_string172:
	.asciz	"uint64"
.Linfo_string173:
	.asciz	"ext"
.Linfo_string174:
	.asciz	"int64"
.Linfo_string175:
	.asciz	"loc"
.Linfo_string176:
	.asciz	"zone"
.Linfo_string177:
	.asciz	"offset"
.Linfo_string178:
	.asciz	"isDST"
.Linfo_string179:
	.asciz	".time.zone"
.Linfo_string180:
	.asciz	"struct{*.time.zone,int,int}"
.Linfo_string181:
	.asciz	"tx"
.Linfo_string182:
	.asciz	"when"
.Linfo_string183:
	.asciz	"index"
.Linfo_string184:
	.asciz	"isstd"
.Linfo_string185:
	.asciz	"isutc"
.Linfo_string186:
	.asciz	".time.zoneTrans"
.Linfo_string187:
	.asciz	"struct{*.time.zoneTrans,int,int}"
.Linfo_string188:
	.asciz	"cacheStart"
.Linfo_string189:
	.asciz	"cacheEnd"
.Linfo_string190:
	.asciz	"cacheZone"
.Linfo_string191:
	.asciz	"Location"
.Linfo_string192:
	.asciz	"Time"
.Linfo_string193:
	.asciz	"ok"
.Linfo_string194:
	.asciz	"struct{Time,bool}"
.Linfo_string195:
	.asciz	"Done"
.Linfo_string196:
	.asciz	"__go_channel"
.Linfo_string197:
	.asciz	"Err"
.Linfo_string198:
	.asciz	"Value"
.Linfo_string199:
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,Token)Token}"
.Linfo_string200:
	.asciz	"Context"
.Linfo_string201:
	.asciz	"$ret33"
.Linfo_string202:
	.asciz	"command_line_arguments..import"
.Linfo_string203:
	.asciz	"cli.command_line_arguments..import"
.Linfo_string204:
	.asciz	"command_line_arguments.Cli.Run"
.Linfo_string205:
	.asciz	"cli.Run..1command_line_arguments.Cli"
.Linfo_string206:
	.asciz	"command_line_arguments.New"
.Linfo_string207:
	.asciz	"cli.New"
.Linfo_string208:
	.asciz	"Ctx"
.Linfo_string209:
	.asciz	"Flags"
.Linfo_string210:
	.asciz	"Args"
.Linfo_string211:
	.asciz	"Cli"
.Linfo_string212:
	.asciz	"struct{*Cli,error}"
.Linfo_string213:
	.asciz	"command_line_arguments.command_line_arguments.Credentials..hash"
.Linfo_string214:
	.asciz	"cli.command_line_arguments.Credentials..hash"
.Linfo_string215:
	.asciz	"command_line_arguments.command_line_arguments.Credentials..eq"
.Linfo_string216:
	.asciz	"cli.command_line_arguments.Credentials..eq"
.Linfo_string217:
	.asciz	"command_line_arguments.command_line_arguments.Config..hash"
.Linfo_string218:
	.asciz	"cli.command_line_arguments.Config..hash"
.Linfo_string219:
	.asciz	"command_line_arguments.command_line_arguments.Config..eq"
.Linfo_string220:
	.asciz	"cli.command_line_arguments.Config..eq"
.Linfo_string221:
	.asciz	"command_line_arguments.ConfigPath"
.Linfo_string222:
	.asciz	"cli.ConfigPath"
.Linfo_string223:
	.asciz	"struct{*string,error}"
.Linfo_string224:
	.asciz	"command_line_arguments.RetrieveConfig"
.Linfo_string225:
	.asciz	"cli.RetrieveConfig"
.Linfo_string226:
	.asciz	"Credentials"
.Linfo_string227:
	.asciz	"Secret"
.Linfo_string228:
	.asciz	"Config"
.Linfo_string229:
	.asciz	"struct{*Config,error}"
.Linfo_string230:
	.asciz	"command_line_arguments.GenerateConfig"
.Linfo_string231:
	.asciz	"cli.GenerateConfig"
.Linfo_string232:
	.asciz	"command_line_arguments.RetrieveOrGenerateConfig"
.Linfo_string233:
	.asciz	"cli.RetrieveOrGenerateConfig"
.Linfo_string234:
	.asciz	"command_line_arguments.RunLocalCommand"
.Linfo_string235:
	.asciz	"cli.RunLocalCommand"
.Linfo_string236:
	.asciz	"Type"
.Linfo_string237:
	.asciz	"CommandType"
.Linfo_string238:
	.asciz	"Disconnected"
.Linfo_string239:
	.asciz	"SessionState"
.Linfo_string240:
	.asciz	"Warp"
.Linfo_string241:
	.asciz	"WindowSize"
.Linfo_string242:
	.asciz	"Rows"
.Linfo_string243:
	.asciz	"Cols"
.Linfo_string244:
	.asciz	"Size"
.Linfo_string245:
	.asciz	"Users"
.Linfo_string246:
	.asciz	"State"
.Linfo_string247:
	.asciz	"Code"
.Linfo_string248:
	.asciz	"Message"
.Linfo_string249:
	.asciz	"CommandResult"
.Linfo_string250:
	.asciz	"struct{*CommandResult,error}"
.Linfo_string251:
	.asciz	"cli.command_line_arguments..thunk0"
.Linfo_string252:
	.asciz	"command_line_arguments.CheckEnvWarp"
.Linfo_string253:
	.asciz	"cli.CheckEnvWarp"
.Linfo_string254:
	.asciz	"command_line_arguments.Session.DataC"
.Linfo_string255:
	.asciz	"cli.DataC..1command_line_arguments.Session"
.Linfo_string256:
	.asciz	"Close"
.Linfo_string257:
	.asciz	"LocalAddr"
.Linfo_string258:
	.asciz	"Network"
.Linfo_string259:
	.asciz	"String"
.Linfo_string260:
	.asciz	"struct{*_type,*func(*void)string,*func(*void)string}"
.Linfo_string261:
	.asciz	"Addr"
.Linfo_string262:
	.asciz	"Read"
.Linfo_string263:
	.asciz	"RemoteAddr"
.Linfo_string264:
	.asciz	"SetDeadline"
.Linfo_string265:
	.asciz	"SetReadDeadline"
.Linfo_string266:
	.asciz	"SetWriteDeadline"
.Linfo_string267:
	.asciz	"struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string268:
	.asciz	"Conn"
.Linfo_string269:
	.asciz	"command_line_arguments.Session.DecodeError"
.Linfo_string270:
	.asciz	"cli.DecodeError..1command_line_arguments.Session"
.Linfo_string271:
	.asciz	"struct{*Error,error}"
.Linfo_string272:
	.asciz	"command_line_arguments.Session.DecodeState"
.Linfo_string273:
	.asciz	"cli.DecodeState..1command_line_arguments.Session"
.Linfo_string274:
	.asciz	"struct{*State,error}"
.Linfo_string275:
	.asciz	"command_line_arguments.Session.GetMode"
.Linfo_string276:
	.asciz	"cli.GetMode..1command_line_arguments.Session"
.Linfo_string277:
	.asciz	"struct{*Mode,error}"
.Linfo_string278:
	.asciz	"command_line_arguments.Session.HostCanReceiveWrite"
.Linfo_string279:
	.asciz	"cli.HostCanReceiveWrite..1command_line_arguments.Session"
.Linfo_string280:
	.asciz	"command_line_arguments.Session.Modes"
.Linfo_string281:
	.asciz	"cli.Modes..1command_line_arguments.Session"
.Linfo_string282:
	.asciz	"command_line_arguments.Session.ProtocolState"
.Linfo_string283:
	.asciz	"cli.ProtocolState..1command_line_arguments.Session"
.Linfo_string284:
	.asciz	"command_line_arguments.Session.SendHostUpdate"
.Linfo_string285:
	.asciz	"cli.SendHostUpdate..1command_line_arguments.Session"
.Linfo_string286:
	.asciz	"command_line_arguments.Session.Session"
.Linfo_string287:
	.asciz	"cli.Session..1command_line_arguments.Session"
.Linfo_string288:
	.asciz	"Session"
.Linfo_string289:
	.asciz	"command_line_arguments.Session.SetMode"
.Linfo_string290:
	.asciz	"cli.SetMode..1command_line_arguments.Session"
.Linfo_string291:
	.asciz	"command_line_arguments.Session.TearDown"
.Linfo_string292:
	.asciz	"cli.TearDown..1command_line_arguments.Session"
.Linfo_string293:
	.asciz	"command_line_arguments.Session.TornDown"
.Linfo_string294:
	.asciz	"cli.TornDown..1command_line_arguments.Session"
.Linfo_string295:
	.asciz	"command_line_arguments.Session.UpdateState"
.Linfo_string296:
	.asciz	"cli.UpdateState..1command_line_arguments.Session"
.Linfo_string297:
	.asciz	"command_line_arguments.Session.Warp"
.Linfo_string298:
	.asciz	"cli.Warp..1command_line_arguments.Session"
.Linfo_string299:
	.asciz	"command_line_arguments.Session.WindowSize"
.Linfo_string300:
	.asciz	"cli.WindowSize..1command_line_arguments.Session"
.Linfo_string301:
	.asciz	"command_line_arguments.Session.WriteDataC"
.Linfo_string302:
	.asciz	"cli.WriteDataC..1command_line_arguments.Session"
.Linfo_string303:
	.asciz	"command_line_arguments.WarpState.GetMode"
.Linfo_string304:
	.asciz	"cli.GetMode..1command_line_arguments.WarpState"
.Linfo_string305:
	.asciz	"command_line_arguments.WarpState.HostCanReceiveWrite"
.Linfo_string306:
	.asciz	"cli.HostCanReceiveWrite..1command_line_arguments.WarpState"
.Linfo_string307:
	.asciz	"command_line_arguments.WarpState.Modes"
.Linfo_string308:
	.asciz	"cli.Modes..1command_line_arguments.WarpState"
.Linfo_string309:
	.asciz	"command_line_arguments.WarpState.ProtocolState"
.Linfo_string310:
	.asciz	"cli.ProtocolState..1command_line_arguments.WarpState"
.Linfo_string311:
	.asciz	"command_line_arguments.WarpState.SetMode"
.Linfo_string312:
	.asciz	"cli.SetMode..1command_line_arguments.WarpState"
.Linfo_string313:
	.asciz	"command_line_arguments.WarpState.Update"
.Linfo_string314:
	.asciz	"cli.Update..1command_line_arguments.WarpState"
.Linfo_string315:
	.asciz	"command_line_arguments.WarpState.WindowSize"
.Linfo_string316:
	.asciz	"cli.WindowSize..1command_line_arguments.WarpState"
.Linfo_string317:
	.asciz	"command_line_arguments.command_line_arguments.UserState..hash"
.Linfo_string318:
	.asciz	"cli.command_line_arguments.UserState..hash"
.Linfo_string319:
	.asciz	"command_line_arguments.command_line_arguments.UserState..eq"
.Linfo_string320:
	.asciz	"cli.command_line_arguments.UserState..eq"
.Linfo_string321:
	.asciz	"command_line_arguments.NewSession"
.Linfo_string322:
	.asciz	"cli.NewSession"
.Linfo_string323:
	.asciz	"session"
.Linfo_string324:
	.asciz	"warp"
.Linfo_string325:
	.asciz	"sessionType"
.Linfo_string326:
	.asciz	"SessionType"
.Linfo_string327:
	.asciz	"conn"
.Linfo_string328:
	.asciz	"mux"
.Linfo_string329:
	.asciz	"remoteGoAway"
.Linfo_string330:
	.asciz	"localGoAway"
.Linfo_string331:
	.asciz	"nextStreamID"
.Linfo_string332:
	.asciz	"config"
.Linfo_string333:
	.asciz	"AcceptBacklog"
.Linfo_string334:
	.asciz	"EnableKeepAlive"
.Linfo_string335:
	.asciz	"KeepAliveInterval"
.Linfo_string336:
	.asciz	"Duration"
.Linfo_string337:
	.asciz	"ConnectionWriteTimeout"
.Linfo_string338:
	.asciz	"MaxStreamWindowSize"
.Linfo_string339:
	.asciz	"LogOutput"
.Linfo_string340:
	.asciz	"logger"
.Linfo_string341:
	.asciz	"flag"
.Linfo_string342:
	.asciz	"out"
.Linfo_string343:
	.asciz	"buf"
.Linfo_string344:
	.asciz	"Logger"
.Linfo_string345:
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}"
.Linfo_string346:
	.asciz	"ReadWriteCloser"
.Linfo_string347:
	.asciz	"bufRead"
.Linfo_string348:
	.asciz	"rd"
.Linfo_string349:
	.asciz	"Reader"
.Linfo_string350:
	.asciz	"w"
.Linfo_string351:
	.asciz	"lastByte"
.Linfo_string352:
	.asciz	"lastRuneSize"
.Linfo_string353:
	.asciz	"pings"
.Linfo_string354:
	.asciz	"pingID"
.Linfo_string355:
	.asciz	"pingLock"
.Linfo_string356:
	.asciz	"streams"
.Linfo_string357:
	.asciz	"inflight"
.Linfo_string358:
	.asciz	"streamLock"
.Linfo_string359:
	.asciz	"synCh"
.Linfo_string360:
	.asciz	"acceptCh"
.Linfo_string361:
	.asciz	"sendCh"
.Linfo_string362:
	.asciz	"recvDoneCh"
.Linfo_string363:
	.asciz	"shutdown"
.Linfo_string364:
	.asciz	"shutdownErr"
.Linfo_string365:
	.asciz	"shutdownCh"
.Linfo_string366:
	.asciz	"shutdownLock"
.Linfo_string367:
	.asciz	"stateC"
.Linfo_string368:
	.asciz	"stateR"
.Linfo_string369:
	.asciz	"mutex"
.Linfo_string370:
	.asciz	"data"
.Linfo_string371:
	.asciz	".encoding/gob.decBuffer"
.Linfo_string372:
	.asciz	"wireType"
.Linfo_string373:
	.asciz	"decoderCache"
.Linfo_string374:
	.asciz	"ignorerCache"
.Linfo_string375:
	.asciz	"freeList"
.Linfo_string376:
	.asciz	"dec"
.Linfo_string377:
	.asciz	"fieldnum"
.Linfo_string378:
	.asciz	"next"
.Linfo_string379:
	.asciz	".encoding/gob.decoderState"
.Linfo_string380:
	.asciz	"countBuf"
.Linfo_string381:
	.asciz	"Decoder"
.Linfo_string382:
	.asciz	"updateC"
.Linfo_string383:
	.asciz	"updateW"
.Linfo_string384:
	.asciz	"struct{*Writer,int,int}"
.Linfo_string385:
	.asciz	"sent"
.Linfo_string386:
	.asciz	"countState"
.Linfo_string387:
	.asciz	"enc"
.Linfo_string388:
	.asciz	"scratch"
.Linfo_string389:
	.asciz	"__ARRAY_SIZE_TYPE__"
.Linfo_string390:
	.asciz	".encoding/gob.encBuffer"
.Linfo_string391:
	.asciz	"sendZero"
.Linfo_string392:
	.asciz	".encoding/gob.encoderState"
.Linfo_string393:
	.asciz	"byteBuf"
.Linfo_string394:
	.asciz	"Encoder"
.Linfo_string395:
	.asciz	"errorC"
.Linfo_string396:
	.asciz	"errorR"
.Linfo_string397:
	.asciz	"dataC"
.Linfo_string398:
	.asciz	"windowSize"
.Linfo_string399:
	.asciz	"users"
.Linfo_string400:
	.asciz	"WarpState"
.Linfo_string401:
	.asciz	"tornDown"
.Linfo_string402:
	.asciz	"cancel"
.Linfo_string403:
	.asciz	"struct{*Session,error}"
.Linfo_string404:
	.asciz	"command_line_arguments.NewWarpState"
.Linfo_string405:
	.asciz	"cli.NewWarpState"
.Linfo_string406:
	.asciz	"cli.command_line_arguments..thunk1"
.Linfo_string407:
	.asciz	"cli.command_line_arguments..thunk2"
.Linfo_string408:
	.asciz	"cli.command_line_arguments..thunk3"
.Linfo_string409:
	.asciz	"cli.command_line_arguments..thunk4"
.Linfo_string410:
	.asciz	"cli.command_line_arguments..thunk5"
.Linfo_string411:
	.asciz	"cli.command_line_arguments..thunk6"
.Linfo_string412:
	.asciz	"cli.command_line_arguments..thunk7"
.Linfo_string413:
	.asciz	"cli.command_line_arguments..thunk8"
.Linfo_string414:
	.asciz	"cli.command_line_arguments..thunk9"
.Linfo_string415:
	.asciz	"cli.command_line_arguments..thunk10"
.Linfo_string416:
	.asciz	"cli.command_line_arguments..thunk11"
.Linfo_string417:
	.asciz	"cli.command_line_arguments..thunk12"
.Linfo_string418:
	.asciz	"cli.command_line_arguments..thunk13"
.Linfo_string419:
	.asciz	"cli.command_line_arguments..thunk14"
.Linfo_string420:
	.asciz	"command_line_arguments.command_line_arguments.Shell..hash"
.Linfo_string421:
	.asciz	"cli.command_line_arguments.Shell..hash"
.Linfo_string422:
	.asciz	"command_line_arguments.command_line_arguments.Shell..eq"
.Linfo_string423:
	.asciz	"cli.command_line_arguments.Shell..eq"
.Linfo_string424:
	.asciz	"command_line_arguments.DetectShell"
.Linfo_string425:
	.asciz	"cli.DetectShell"
.Linfo_string426:
	.asciz	"Command"
.Linfo_string427:
	.asciz	"Shell"
.Linfo_string428:
	.asciz	"struct{*Shell,error}"
.Linfo_string429:
	.asciz	"command_line_arguments.command_line_arguments.Srv..hash"
.Linfo_string430:
	.asciz	"cli.command_line_arguments.Srv..hash"
.Linfo_string431:
	.asciz	"command_line_arguments.command_line_arguments.Srv..eq"
.Linfo_string432:
	.asciz	"cli.command_line_arguments.Srv..eq"
.Linfo_string433:
	.asciz	"command_line_arguments.Srv.Path"
.Linfo_string434:
	.asciz	"cli.Path..1command_line_arguments.Srv"
.Linfo_string435:
	.asciz	"command_line_arguments.Srv.Run"
.Linfo_string436:
	.asciz	"cli.Run..1command_line_arguments.Srv"
.Linfo_string437:
	.asciz	"command_line_arguments.Srv.SetSession"
.Linfo_string438:
	.asciz	"cli.SetSession..1command_line_arguments.Srv"
.Linfo_string439:
	.asciz	"command_line_arguments.Srv.executeAuthorize"
.Linfo_string440:
	.asciz	"cli.executeAuthorize..1command_line_arguments.Srv"
.Linfo_string441:
	.asciz	"command_line_arguments.Srv.executeRevoke"
.Linfo_string442:
	.asciz	"cli.executeRevoke..1command_line_arguments.Srv"
.Linfo_string443:
	.asciz	"command_line_arguments.Srv.executeState"
.Linfo_string444:
	.asciz	"cli.executeState..1command_line_arguments.Srv"
.Linfo_string445:
	.asciz	"command_line_arguments.Srv.handle"
.Linfo_string446:
	.asciz	"cli.handle..1command_line_arguments.Srv"
.Linfo_string447:
	.asciz	"command_line_arguments.NewSrv"
.Linfo_string448:
	.asciz	"cli.NewSrv"
.Linfo_string449:
	.asciz	"path"
.Linfo_string450:
	.asciz	"Srv"
.Linfo_string451:
	.asciz	"cli.command_line_arguments..thunk15"
.Linfo_string452:
	.asciz	"cli.command_line_arguments..thunk16"
.Linfo_string453:
	.asciz	"cli.func1"
.Linfo_string454:
	.asciz	"cli.command_line_arguments..thunk17"
.Linfo_string455:
	.asciz	"cli.command_line_arguments..thunk18"
.Linfo_string456:
	.asciz	"cli.command_line_arguments..thunk19"
.Linfo_string457:
	.asciz	"cli.command_line_arguments..thunk20"
.Linfo_string458:
	.asciz	"c"
.Linfo_string459:
	.asciz	"command"
.Linfo_string460:
	.asciz	"Execute"
.Linfo_string461:
	.asciz	"Help"
.Linfo_string462:
	.asciz	"Name"
.Linfo_string463:
	.asciz	"CmdName"
.Linfo_string464:
	.asciz	"Parse"
.Linfo_string465:
	.asciz	"struct{*_type,*func(*void,Context)error,*func(*void,Context)void,*func(*void)CmdName,*func(*void,Context,struct{*string,int,int},*runtime.hmap)error}"
.Linfo_string466:
	.asciz	"$ret2"
.Linfo_string467:
	.asciz	"argv"
.Linfo_string468:
	.asciz	"args"
.Linfo_string469:
	.asciz	"s"
.Linfo_string470:
	.asciz	"a"
.Linfo_string471:
	.asciz	"$ret0"
.Linfo_string472:
	.asciz	"key"
.Linfo_string473:
	.asciz	"seed"
.Linfo_string474:
	.asciz	"$ret74"
.Linfo_string475:
	.asciz	"key1"
.Linfo_string476:
	.asciz	"key2"
.Linfo_string477:
	.asciz	"$ret75"
.Linfo_string478:
	.asciz	"$ret76"
.Linfo_string479:
	.asciz	"$ret77"
.Linfo_string480:
	.asciz	"$ret3"
.Linfo_string481:
	.asciz	"$ret4"
.Linfo_string482:
	.asciz	"$ret6"
.Linfo_string483:
	.asciz	"$ret5"
.Linfo_string484:
	.asciz	"$ret7"
.Linfo_string485:
	.asciz	"$ret8"
.Linfo_string486:
	.asciz	"$ret10"
.Linfo_string487:
	.asciz	"$ret9"
.Linfo_string488:
	.asciz	"cmd"
.Linfo_string489:
	.asciz	"$ret12"
.Linfo_string490:
	.asciz	"commandW"
.Linfo_string491:
	.asciz	"result"
.Linfo_string492:
	.asciz	"commandR"
.Linfo_string493:
	.asciz	"$ret11"
.Linfo_string494:
	.asciz	"__go_thunk_parameter"
.Linfo_string495:
	.asciz	"object"
.Linfo_string496:
	.asciz	"struct{Conn}"
.Linfo_string497:
	.asciz	"$ret54"
.Linfo_string498:
	.asciz	"$ret13"
.Linfo_string499:
	.asciz	"ss"
.Linfo_string500:
	.asciz	"$ret16"
.Linfo_string501:
	.asciz	"e"
.Linfo_string502:
	.asciz	"$ret29"
.Linfo_string503:
	.asciz	"$ret30"
.Linfo_string504:
	.asciz	"st"
.Linfo_string505:
	.asciz	"$ret31"
.Linfo_string506:
	.asciz	"$ret32"
.Linfo_string507:
	.asciz	"user"
.Linfo_string508:
	.asciz	"$ret20"
.Linfo_string509:
	.asciz	"$ret24"
.Linfo_string510:
	.asciz	"$ret26"
.Linfo_string511:
	.asciz	"update"
.Linfo_string512:
	.asciz	"From"
.Linfo_string513:
	.asciz	"Modes"
.Linfo_string514:
	.asciz	"HostUpdate"
.Linfo_string515:
	.asciz	"$ret28"
.Linfo_string516:
	.asciz	"$ret22"
.Linfo_string517:
	.asciz	"$ret27"
.Linfo_string518:
	.asciz	"$ret23"
.Linfo_string519:
	.asciz	"$ret17"
.Linfo_string520:
	.asciz	"$ret25"
.Linfo_string521:
	.asciz	"userState"
.Linfo_string522:
	.asciz	"$ret47"
.Linfo_string523:
	.asciz	"$ret48"
.Linfo_string524:
	.asciz	"$ret50"
.Linfo_string525:
	.asciz	"can"
.Linfo_string526:
	.asciz	"modes"
.Linfo_string527:
	.asciz	"$ret53"
.Linfo_string528:
	.asciz	"$ret51"
.Linfo_string529:
	.asciz	"$ret49"
.Linfo_string530:
	.asciz	"$ret46"
.Linfo_string531:
	.asciz	"$ret52"
.Linfo_string532:
	.asciz	"$ret78"
.Linfo_string533:
	.asciz	"$ret79"
.Linfo_string534:
	.asciz	"$ret14"
.Linfo_string535:
	.asciz	"$ret15"
.Linfo_string536:
	.asciz	"hello"
.Linfo_string537:
	.asciz	"Version"
.Linfo_string538:
	.asciz	"SessionHello"
.Linfo_string539:
	.asciz	"$ret45"
.Linfo_string540:
	.asciz	"a0"
.Linfo_string541:
	.asciz	"struct{*Mutex}"
.Linfo_string542:
	.asciz	"$ret55"
.Linfo_string543:
	.asciz	"$ret56"
.Linfo_string544:
	.asciz	"$ret57"
.Linfo_string545:
	.asciz	"$ret58"
.Linfo_string546:
	.asciz	"$ret59"
.Linfo_string547:
	.asciz	"$ret60"
.Linfo_string548:
	.asciz	"$ret61"
.Linfo_string549:
	.asciz	"$ret62"
.Linfo_string550:
	.asciz	"$ret63"
.Linfo_string551:
	.asciz	"$ret64"
.Linfo_string552:
	.asciz	"$ret65"
.Linfo_string553:
	.asciz	"$ret66"
.Linfo_string554:
	.asciz	"$ret67"
.Linfo_string555:
	.asciz	"$ret68"
.Linfo_string556:
	.asciz	"$ret80"
.Linfo_string557:
	.asciz	"$ret81"
.Linfo_string558:
	.asciz	"shell"
.Linfo_string559:
	.asciz	"$ret35"
.Linfo_string560:
	.asciz	"$ret36"
.Linfo_string561:
	.asciz	"$ret82"
.Linfo_string562:
	.asciz	"$ret83"
.Linfo_string563:
	.asciz	"$ret37"
.Linfo_string564:
	.asciz	"param"
.Linfo_string565:
	.asciz	"$ret39"
.Linfo_string566:
	.asciz	"ln"
.Linfo_string567:
	.asciz	"Accept"
.Linfo_string568:
	.asciz	"struct{Conn,error}"
.Linfo_string569:
	.asciz	"struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}"
.Linfo_string570:
	.asciz	"Listener"
.Linfo_string571:
	.asciz	"$ret42"
.Linfo_string572:
	.asciz	"$ret43"
.Linfo_string573:
	.asciz	"$ret40"
.Linfo_string574:
	.asciz	"$ret38"
.Linfo_string575:
	.asciz	"$ret69"
.Linfo_string576:
	.asciz	"struct{Listener}"
.Linfo_string577:
	.asciz	"$ret70"
.Linfo_string578:
	.asciz	"fn"
.Linfo_string579:
	.asciz	"struct{*__go_descriptor}"
.Linfo_string580:
	.asciz	"$ret71"
.Linfo_string581:
	.asciz	"$ret72"
.Linfo_string582:
	.asciz	"$ret73"
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin1
	.quad	.Ltmp4
	.short	1
	.byte	85
	.quad	.Ltmp4
	.quad	.Ltmp40
	.short	1
	.byte	92
	.quad	.Ltmp42
	.quad	.Ltmp44
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Ltmp23
	.quad	.Ltmp25
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp25
	.quad	.Ltmp27
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Ltmp29
	.quad	.Ltmp41
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Ltmp31
	.quad	.Ltmp32
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp32
	.quad	.Ltmp33
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp34
	.quad	.Ltmp35
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp35
	.quad	.Ltmp36
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp37
	.quad	.Ltmp38
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Ltmp37
	.quad	.Lfunc_end1
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp46
	.quad	.Ltmp47
	.short	5
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp47
	.quad	.Ltmp89
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	.Ltmp92
	.quad	.Lfunc_end2
	.short	10
	.byte	119
	.byte	200
	.byte	0
	.byte	147
	.byte	8
	.byte	119
	.byte	192
	.byte	0
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp48
	.quad	.Ltmp52
	.short	14
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp52
	.quad	.Ltmp60
	.short	12
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp60
	.quad	.Ltmp65
	.short	10
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp66
	.quad	.Ltmp76
	.short	10
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp83
	.quad	.Ltmp90
	.short	10
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp93
	.quad	.Ltmp94
	.short	10
	.byte	119
	.byte	32
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp49
	.quad	.Ltmp89
	.short	2
	.byte	119
	.byte	24
	.quad	.Ltmp92
	.quad	.Lfunc_end2
	.short	2
	.byte	119
	.byte	24
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp52
	.quad	.Ltmp54
	.short	5
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp67
	.quad	.Ltmp69
	.short	14
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp69
	.quad	.Ltmp71
	.short	15
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.byte	119
	.byte	128
	.byte	2
	.byte	35
	.byte	16
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp61
	.quad	.Ltmp62
	.short	3
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp62
	.quad	.Ltmp67
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp67
	.quad	.Ltmp67
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp67
	.quad	.Ltmp68
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp74
	.quad	.Ltmp75
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp88
	.quad	.Ltmp91
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Lfunc_begin3
	.quad	.Ltmp95
	.short	1
	.byte	85
	.quad	.Ltmp95
	.quad	.Ltmp96
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp95
	.quad	.Ltmp97
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp97
	.quad	.Lfunc_end3
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Lfunc_begin4
	.quad	.Ltmp104
	.short	1
	.byte	85
	.quad	.Ltmp104
	.quad	.Ltmp108
	.short	1
	.byte	83
	.quad	.Ltmp110
	.quad	.Ltmp111
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Lfunc_begin4
	.quad	.Ltmp102
	.short	1
	.byte	84
	.quad	.Ltmp102
	.quad	.Ltmp109
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp113
	.quad	.Ltmp114
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp114
	.quad	.Lfunc_end5
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Lfunc_begin6
	.quad	.Ltmp120
	.short	1
	.byte	85
	.quad	.Ltmp122
	.quad	.Ltmp123
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Lfunc_begin6
	.quad	.Ltmp121
	.short	1
	.byte	84
	.quad	.Ltmp122
	.quad	.Ltmp124
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Lfunc_begin7
	.quad	.Ltmp126
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp127
	.quad	.Ltmp128
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp128
	.quad	.Ltmp135
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp135
	.quad	.Ltmp136
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp136
	.quad	.Ltmp137
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp141
	.quad	.Ltmp142
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp142
	.quad	.Lfunc_end7
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp129
	.quad	.Ltmp140
	.short	1
	.byte	83
	.quad	.Ltmp141
	.quad	.Lfunc_end7
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp129
	.quad	.Ltmp140
	.short	1
	.byte	83
	.quad	.Ltmp141
	.quad	.Lfunc_end7
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp138
	.quad	.Ltmp139
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp141
	.quad	.Ltmp141
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp141
	.quad	.Lfunc_end7
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Lfunc_begin8
	.quad	.Ltmp145
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp146
	.quad	.Ltmp148
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp151
	.quad	.Ltmp154
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp159
	.quad	.Ltmp160
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp160
	.quad	.Ltmp162
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp164
	.quad	.Ltmp165
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp165
	.quad	.Ltmp166
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp167
	.quad	.Ltmp168
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp168
	.quad	.Ltmp169
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp149
	.quad	.Ltmp150
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp166
	.quad	.Ltmp166
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp166
	.quad	.Lfunc_end8
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp152
	.quad	.Lfunc_end8
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp155
	.quad	.Ltmp156
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp156
	.quad	.Ltmp157
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp163
	.quad	.Ltmp166
	.short	1
	.byte	94
	.quad	.Ltmp167
	.quad	.Ltmp168
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp163
	.quad	.Ltmp166
	.short	1
	.byte	94
	.quad	.Ltmp167
	.quad	.Ltmp168
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Lfunc_begin9
	.quad	.Ltmp172
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp173
	.quad	.Ltmp189
	.short	1
	.byte	94
	.quad	.Ltmp190
	.quad	.Lfunc_end9
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp173
	.quad	.Ltmp189
	.short	1
	.byte	94
	.quad	.Ltmp190
	.quad	.Lfunc_end9
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp174
	.quad	.Ltmp178
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp179
	.quad	.Ltmp180
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp180
	.quad	.Ltmp183
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp184
	.quad	.Ltmp185
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp185
	.quad	.Ltmp186
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Ltmp191
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp191
	.quad	.Ltmp192
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp177
	.quad	.Ltmp186
	.short	1
	.byte	83
	.quad	.Ltmp190
	.quad	.Lfunc_end9
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp187
	.quad	.Ltmp188
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Ltmp190
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp190
	.quad	.Lfunc_end9
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Lfunc_begin10
	.quad	.Ltmp194
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp195
	.quad	.Ltmp197
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp197
	.quad	.Ltmp198
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp199
	.quad	.Ltmp202
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp203
	.quad	.Ltmp204
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp206
	.quad	.Lfunc_end10
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp198
	.quad	.Ltmp199
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp201
	.quad	.Ltmp201
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp201
	.quad	.Lfunc_end10
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp200
	.quad	.Ltmp202
	.short	1
	.byte	80
	.quad	.Ltmp203
	.quad	.Ltmp205
	.short	1
	.byte	80
	.quad	.Ltmp209
	.quad	.Lfunc_end10
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp201
	.quad	.Ltmp202
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Lfunc_begin11
	.quad	.Ltmp274
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp273
	.quad	.Ltmp308
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp308
	.quad	.Ltmp308
	.short	8
	.byte	95
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp308
	.quad	.Ltmp311
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp315
	.quad	.Ltmp316
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp325
	.quad	.Ltmp331
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp332
	.quad	.Lfunc_end11
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp275
	.quad	.Ltmp282
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp277
	.quad	.Ltmp279
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp281
	.quad	.Ltmp284
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp282
	.quad	.Ltmp283
	.short	3
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp283
	.quad	.Ltmp297
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp298
	.quad	.Ltmp307
	.short	1
	.byte	92
	.quad	.Ltmp311
	.quad	.Ltmp315
	.short	1
	.byte	92
	.quad	.Ltmp316
	.quad	.Ltmp324
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp300
	.quad	.Ltmp301
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp304
	.quad	.Ltmp307
	.short	1
	.byte	83
	.quad	.Ltmp311
	.quad	.Ltmp321
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp304
	.quad	.Ltmp307
	.short	1
	.byte	95
	.quad	.Ltmp311
	.quad	.Ltmp314
	.short	1
	.byte	95
	.quad	.Ltmp316
	.quad	.Ltmp318
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp306
	.quad	.Ltmp307
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp310
	.quad	.Ltmp311
	.short	1
	.byte	83
	.quad	.Ltmp315
	.quad	.Ltmp316
	.short	1
	.byte	83
	.quad	.Ltmp325
	.quad	.Ltmp330
	.short	1
	.byte	83
	.quad	.Ltmp332
	.quad	.Lfunc_end11
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Lfunc_begin12
	.quad	.Ltmp333
	.short	1
	.byte	85
	.quad	.Ltmp333
	.quad	.Ltmp337
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Lfunc_begin13
	.quad	.Ltmp340
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp341
	.quad	.Lfunc_end13
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Lfunc_begin14
	.quad	.Ltmp356
	.short	1
	.byte	85
	.quad	.Ltmp356
	.quad	.Ltmp363
	.short	1
	.byte	83
	.quad	.Ltmp364
	.quad	.Ltmp366
	.short	1
	.byte	83
	.quad	.Ltmp368
	.quad	.Ltmp369
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp356
	.quad	.Ltmp361
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp361
	.quad	.Ltmp362
	.short	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp362
	.quad	.Ltmp364
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp367
	.quad	.Ltmp368
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp369
	.quad	.Ltmp374
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp375
	.quad	.Lfunc_end14
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Lfunc_begin15
	.quad	.Ltmp376
	.short	1
	.byte	84
	.quad	.Ltmp376
	.quad	.Ltmp385
	.short	1
	.byte	83
	.quad	.Ltmp387
	.quad	.Lfunc_end15
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Lfunc_begin15
	.quad	.Ltmp377
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp379
	.quad	.Ltmp386
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp379
	.quad	.Ltmp386
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp380
	.quad	.Ltmp381
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp381
	.quad	.Ltmp382
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp383
	.quad	.Ltmp384
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp382
	.quad	.Ltmp383
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp383
	.quad	.Ltmp383
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp383
	.quad	.Lfunc_end15
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin16
	.quad	.Ltmp389
	.short	1
	.byte	84
	.quad	.Ltmp389
	.quad	.Ltmp398
	.short	1
	.byte	83
	.quad	.Ltmp400
	.quad	.Lfunc_end16
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Lfunc_begin16
	.quad	.Ltmp390
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Ltmp392
	.quad	.Ltmp399
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Ltmp392
	.quad	.Ltmp399
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Ltmp393
	.quad	.Ltmp394
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp394
	.quad	.Ltmp395
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp396
	.quad	.Ltmp397
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp395
	.quad	.Ltmp396
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp396
	.quad	.Ltmp396
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp396
	.quad	.Lfunc_end16
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Lfunc_begin17
	.quad	.Ltmp417
	.short	1
	.byte	84
	.quad	.Ltmp417
	.quad	.Ltmp424
	.short	1
	.byte	83
	.quad	.Ltmp426
	.quad	.Ltmp428
	.short	1
	.byte	83
	.quad	.Ltmp431
	.quad	.Ltmp432
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Lfunc_begin17
	.quad	.Ltmp417
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp417
	.quad	.Ltmp417
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp417
	.quad	.Ltmp425
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp426
	.quad	.Ltmp430
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp431
	.quad	.Ltmp433
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp423
	.quad	.Ltmp426
	.short	1
	.byte	93
	.quad	.Ltmp429
	.quad	.Ltmp431
	.short	1
	.byte	93
	.quad	.Ltmp432
	.quad	.Ltmp438
	.short	1
	.byte	93
	.quad	.Ltmp439
	.quad	.Lfunc_end17
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Lfunc_begin18
	.quad	.Ltmp455
	.short	1
	.byte	85
	.quad	.Ltmp455
	.quad	.Ltmp461
	.short	1
	.byte	83
	.quad	.Ltmp463
	.quad	.Ltmp465
	.short	1
	.byte	83
	.quad	.Ltmp466
	.quad	.Ltmp467
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp455
	.quad	.Ltmp462
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp462
	.quad	.Ltmp463
	.short	1
	.byte	83
	.quad	.Ltmp465
	.quad	.Ltmp466
	.short	1
	.byte	83
	.quad	.Ltmp468
	.quad	.Ltmp473
	.short	1
	.byte	83
	.quad	.Ltmp474
	.quad	.Lfunc_end18
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Lfunc_begin19
	.quad	.Ltmp490
	.short	1
	.byte	85
	.quad	.Ltmp490
	.quad	.Ltmp496
	.short	1
	.byte	83
	.quad	.Ltmp497
	.quad	.Ltmp499
	.short	1
	.byte	83
	.quad	.Ltmp501
	.quad	.Ltmp502
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp496
	.quad	.Ltmp497
	.short	1
	.byte	92
	.quad	.Ltmp500
	.quad	.Ltmp501
	.short	1
	.byte	92
	.quad	.Ltmp502
	.quad	.Ltmp507
	.short	1
	.byte	92
	.quad	.Ltmp508
	.quad	.Lfunc_end19
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Lfunc_begin20
	.quad	.Ltmp524
	.short	1
	.byte	84
	.quad	.Ltmp524
	.quad	.Ltmp530
	.short	1
	.byte	83
	.quad	.Ltmp531
	.quad	.Ltmp533
	.short	1
	.byte	83
	.quad	.Ltmp534
	.quad	.Ltmp535
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Lfunc_begin21
	.quad	.Ltmp558
	.short	1
	.byte	85
	.quad	.Ltmp558
	.quad	.Ltmp563
	.short	1
	.byte	83
	.quad	.Ltmp565
	.quad	.Ltmp567
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Lfunc_begin21
	.quad	.Ltmp560
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Ltmp558
	.quad	.Ltmp564
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp564
	.quad	.Ltmp564
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp564
	.quad	.Ltmp565
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp570
	.quad	.Ltmp571
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp572
	.quad	.Ltmp577
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp578
	.quad	.Lfunc_end21
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp568
	.quad	.Ltmp569
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin22
	.quad	.Ltmp592
	.short	1
	.byte	84
	.quad	.Ltmp592
	.quad	.Ltmp597
	.short	1
	.byte	83
	.quad	.Ltmp598
	.quad	.Ltmp600
	.short	1
	.byte	83
	.quad	.Ltmp601
	.quad	.Ltmp602
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Lfunc_begin23
	.quad	.Ltmp619
	.short	1
	.byte	85
	.quad	.Ltmp619
	.quad	.Ltmp627
	.short	1
	.byte	83
	.quad	.Ltmp629
	.quad	.Ltmp631
	.short	1
	.byte	83
	.quad	.Ltmp635
	.quad	.Ltmp637
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Lfunc_begin23
	.quad	.Ltmp619
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp619
	.quad	.Ltmp619
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp619
	.quad	.Ltmp628
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp629
	.quad	.Ltmp634
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp635
	.quad	.Ltmp638
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Lfunc_begin23
	.quad	.Ltmp619
	.short	1
	.byte	82
	.quad	.Ltmp619
	.quad	.Ltmp625
	.short	1
	.byte	94
	.quad	.Ltmp629
	.quad	.Ltmp632
	.short	1
	.byte	94
	.quad	.Ltmp635
	.quad	.Ltmp636
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Ltmp619
	.quad	.Ltmp626
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp626
	.quad	.Ltmp626
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp626
	.quad	.Ltmp629
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp633
	.quad	.Ltmp635
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp637
	.quad	.Ltmp643
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp644
	.quad	.Lfunc_end23
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Lfunc_begin24
	.quad	.Ltmp662
	.short	1
	.byte	85
	.quad	.Ltmp662
	.quad	.Ltmp668
	.short	1
	.byte	83
	.quad	.Ltmp669
	.quad	.Ltmp672
	.short	1
	.byte	83
	.quad	.Ltmp673
	.quad	.Ltmp675
	.short	1
	.byte	83
	.quad	.Ltmp676
	.quad	.Ltmp677
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Lfunc_begin25
	.quad	.Ltmp692
	.short	1
	.byte	85
	.quad	.Ltmp692
	.quad	.Ltmp697
	.short	1
	.byte	83
	.quad	.Ltmp698
	.quad	.Ltmp700
	.short	1
	.byte	83
	.quad	.Ltmp701
	.quad	.Ltmp702
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp692
	.quad	.Ltmp697
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp697
	.quad	.Ltmp698
	.short	1
	.byte	83
	.quad	.Ltmp700
	.quad	.Ltmp701
	.short	1
	.byte	83
	.quad	.Ltmp703
	.quad	.Ltmp708
	.short	1
	.byte	83
	.quad	.Ltmp709
	.quad	.Lfunc_end25
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Lfunc_begin26
	.quad	.Ltmp725
	.short	1
	.byte	85
	.quad	.Ltmp725
	.quad	.Ltmp731
	.short	1
	.byte	83
	.quad	.Ltmp733
	.quad	.Ltmp735
	.short	1
	.byte	83
	.quad	.Ltmp736
	.quad	.Ltmp737
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Lfunc_begin26
	.quad	.Ltmp725
	.short	1
	.byte	84
	.quad	.Ltmp725
	.quad	.Ltmp729
	.short	1
	.byte	86
	.quad	.Ltmp729
	.quad	.Ltmp732
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp725
	.quad	.Ltmp731
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp731
	.quad	.Ltmp731
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp731
	.quad	.Ltmp733
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp735
	.quad	.Ltmp736
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp738
	.quad	.Ltmp743
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp744
	.quad	.Lfunc_end26
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Lfunc_begin27
	.quad	.Ltmp758
	.short	1
	.byte	85
	.quad	.Ltmp758
	.quad	.Ltmp765
	.short	1
	.byte	83
	.quad	.Ltmp766
	.quad	.Ltmp768
	.short	1
	.byte	83
	.quad	.Ltmp770
	.quad	.Ltmp771
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp758
	.quad	.Ltmp763
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp763
	.quad	.Ltmp764
	.short	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp764
	.quad	.Ltmp766
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp769
	.quad	.Ltmp770
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp771
	.quad	.Ltmp776
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp777
	.quad	.Lfunc_end27
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Lfunc_begin28
	.quad	.Ltmp793
	.short	1
	.byte	85
	.quad	.Ltmp793
	.quad	.Ltmp800
	.short	1
	.byte	83
	.quad	.Ltmp801
	.quad	.Ltmp803
	.short	1
	.byte	83
	.quad	.Ltmp805
	.quad	.Ltmp806
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Ltmp793
	.quad	.Ltmp799
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp799
	.quad	.Ltmp799
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp799
	.quad	.Ltmp801
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp804
	.quad	.Ltmp805
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp806
	.quad	.Ltmp811
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp812
	.quad	.Lfunc_end28
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Lfunc_begin29
	.quad	.Ltmp828
	.short	1
	.byte	85
	.quad	.Ltmp828
	.quad	.Ltmp834
	.short	1
	.byte	83
	.quad	.Ltmp835
	.quad	.Ltmp837
	.short	1
	.byte	83
	.quad	.Ltmp838
	.quad	.Ltmp840
	.short	1
	.byte	83
	.quad	.Ltmp841
	.quad	.Ltmp842
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Lfunc_begin30
	.quad	.Ltmp844
	.short	1
	.byte	84
	.quad	.Ltmp844
	.quad	.Ltmp848
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Lfunc_begin30
	.quad	.Ltmp844
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp844
	.quad	.Ltmp844
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp844
	.quad	.Ltmp858
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp860
	.quad	.Lfunc_end30
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp845
	.quad	.Ltmp848
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp848
	.quad	.Ltmp859
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp847
	.quad	.Ltmp851
	.short	1
	.byte	83
	.quad	.Ltmp852
	.quad	.Ltmp855
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp851
	.quad	.Ltmp852
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp851
	.quad	.Ltmp856
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp856
	.quad	.Ltmp856
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp856
	.quad	.Ltmp857
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Lfunc_begin31
	.quad	.Ltmp864
	.short	1
	.byte	85
	.quad	.Ltmp871
	.quad	.Ltmp872
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Ltmp862
	.quad	.Ltmp870
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp862
	.quad	.Ltmp865
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp865
	.quad	.Ltmp869
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Lfunc_begin32
	.quad	.Ltmp874
	.short	1
	.byte	85
	.quad	.Ltmp874
	.quad	.Ltmp880
	.short	1
	.byte	83
	.quad	.Ltmp885
	.quad	.Lfunc_end32
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Ltmp877
	.quad	.Ltmp884
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp877
	.quad	.Ltmp884
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp880
	.quad	.Ltmp883
	.short	5
	.byte	147
	.byte	32
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Lfunc_begin33
	.quad	.Ltmp887
	.short	1
	.byte	84
	.quad	.Ltmp887
	.quad	.Ltmp889
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Ltmp890
	.quad	.Ltmp903
	.short	5
	.byte	147
	.byte	32
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Ltmp890
	.quad	.Ltmp903
	.short	5
	.byte	147
	.byte	32
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Ltmp895
	.quad	.Ltmp897
	.short	8
	.byte	147
	.byte	32
	.byte	82
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin34
	.quad	.Ltmp906
	.short	1
	.byte	85
	.quad	.Ltmp906
	.quad	.Ltmp910
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin34
	.quad	.Ltmp906
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp906
	.quad	.Ltmp906
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp906
	.quad	.Ltmp909
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Lfunc_begin34
	.quad	.Ltmp906
	.short	1
	.byte	82
	.quad	.Ltmp906
	.quad	.Ltmp908
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp905
	.quad	.Ltmp906
	.short	5
	.byte	147
	.byte	32
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp906
	.quad	.Ltmp908
	.short	5
	.byte	147
	.byte	32
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp912
	.quad	.Ltmp913
	.short	8
	.byte	147
	.byte	32
	.byte	112
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp913
	.quad	.Ltmp915
	.short	11
	.byte	147
	.byte	32
	.byte	112
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.byte	80
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp906
	.quad	.Ltmp911
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp911
	.quad	.Ltmp914
	.short	1
	.byte	81
	.quad	.Ltmp916
	.quad	.Ltmp917
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp918
	.quad	.Lfunc_end34
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Lfunc_begin35
	.quad	.Ltmp923
	.short	1
	.byte	85
	.quad	.Ltmp923
	.quad	.Ltmp927
	.short	1
	.byte	83
	.quad	.Ltmp967
	.quad	.Ltmp968
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Lfunc_begin35
	.quad	.Ltmp922
	.short	1
	.byte	84
	.quad	.Ltmp922
	.quad	.Ltmp926
	.short	1
	.byte	94
	.quad	.Ltmp926
	.quad	.Ltmp929
	.short	1
	.byte	94
	.quad	.Ltmp929
	.quad	.Ltmp958
	.short	1
	.byte	86
	.quad	.Ltmp967
	.quad	.Ltmp969
	.short	1
	.byte	94
	.quad	.Ltmp970
	.quad	.Ltmp971
	.short	1
	.byte	86
	.quad	.Ltmp972
	.quad	.Ltmp975
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Ltmp930
	.quad	.Ltmp931
	.short	3
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp931
	.quad	.Ltmp932
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp932
	.quad	.Ltmp933
	.short	11
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	147
	.byte	16
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp933
	.quad	.Ltmp958
	.short	14
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	147
	.byte	16
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	1
	.quad	.Ltmp970
	.quad	.Ltmp975
	.short	14
	.byte	92
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.byte	147
	.byte	16
	.byte	93
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Ltmp932
	.quad	.Ltmp939
	.short	5
	.byte	147
	.byte	32
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp939
	.quad	.Ltmp940
	.short	8
	.byte	147
	.byte	32
	.byte	93
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp941
	.quad	.Ltmp943
	.short	8
	.byte	147
	.byte	32
	.byte	93
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp952
	.quad	.Ltmp954
	.short	8
	.byte	147
	.byte	32
	.byte	93
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Ltmp934
	.quad	.Ltmp936
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp936
	.quad	.Ltmp938
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Ltmp960
	.quad	.Ltmp962
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp962
	.quad	.Ltmp964
	.short	1
	.byte	81
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp966
	.quad	.Lfunc_end35
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Lfunc_begin36
	.quad	.Ltmp981
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Ltmp978
	.quad	.Ltmp979
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp979
	.quad	.Ltmp980
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Lfunc_begin37
	.quad	.Ltmp983
	.short	1
	.byte	85
	.quad	.Ltmp983
	.quad	.Ltmp984
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp983
	.quad	.Ltmp985
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp985
	.quad	.Lfunc_end37
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Lfunc_begin38
	.quad	.Ltmp992
	.short	1
	.byte	85
	.quad	.Ltmp992
	.quad	.Ltmp998
	.short	1
	.byte	83
	.quad	.Ltmp1000
	.quad	.Ltmp1001
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Lfunc_begin38
	.quad	.Ltmp990
	.short	1
	.byte	84
	.quad	.Ltmp990
	.quad	.Ltmp999
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Lfunc_begin39
	.quad	.Ltmp1008
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Ltmp1005
	.quad	.Ltmp1006
	.short	5
	.byte	147
	.byte	32
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1006
	.quad	.Ltmp1007
	.short	8
	.byte	147
	.byte	32
	.byte	80
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Lfunc_begin40
	.quad	.Ltmp1013
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Lfunc_begin40
	.quad	.Ltmp1009
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp1009
	.quad	.Ltmp1009
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1009
	.quad	.Ltmp1028
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1029
	.quad	.Ltmp1047
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1085
	.quad	.Lfunc_end40
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	95
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Lfunc_begin40
	.quad	.Ltmp1009
	.short	1
	.byte	89
	.quad	.Ltmp1009
	.quad	.Ltmp1059
	.short	1
	.byte	93
	.quad	.Ltmp1060
	.quad	.Lfunc_end40
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Ltmp1014
	.quad	.Ltmp1016
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1017
	.quad	.Ltmp1019
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1022
	.quad	.Ltmp1023
	.short	9
	.byte	80
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1024
	.quad	.Ltmp1038
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1039
	.quad	.Ltmp1056
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1060
	.quad	.Ltmp1062
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1063
	.quad	.Ltmp1075
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1076
	.quad	.Lfunc_end40
	.short	9
	.byte	86
	.byte	147
	.byte	8
	.byte	117
	.byte	24
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Ltmp1018
	.quad	.Ltmp1056
	.short	1
	.byte	92
	.quad	.Ltmp1060
	.quad	.Lfunc_end40
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Ltmp1020
	.quad	.Ltmp1021
	.short	1
	.byte	80
	.quad	.Ltmp1021
	.quad	.Ltmp1056
	.short	1
	.byte	95
	.quad	.Ltmp1060
	.quad	.Lfunc_end40
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Ltmp1020
	.quad	.Ltmp1021
	.short	1
	.byte	80
	.quad	.Ltmp1021
	.quad	.Ltmp1056
	.short	1
	.byte	95
	.quad	.Ltmp1060
	.quad	.Lfunc_end40
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc142:
	.quad	.Ltmp1054
	.quad	.Ltmp1055
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1055
	.quad	.Ltmp1056
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc143:
	.quad	.Ltmp1057
	.quad	.Ltmp1058
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1084
	.quad	.Ltmp1084
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1084
	.quad	.Lfunc_end40
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Ltmp1088
	.quad	.Ltmp1098
	.short	1
	.byte	94
	.quad	.Ltmp1099
	.quad	.Lfunc_end41
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc145:
	.quad	.Ltmp1088
	.quad	.Ltmp1098
	.short	1
	.byte	94
	.quad	.Ltmp1099
	.quad	.Lfunc_end41
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Ltmp1092
	.quad	.Ltmp1092
	.short	12
	.byte	147
	.byte	32
	.byte	16
	.byte	3
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	1
	.byte	159
	.byte	147
	.byte	1
	.quad	.Ltmp1092
	.quad	.Ltmp1092
	.short	13
	.byte	147
	.byte	32
	.byte	16
	.byte	3
	.byte	159
	.byte	147
	.byte	8
	.byte	112
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	1
	.quad	.Ltmp1092
	.quad	.Ltmp1093
	.short	14
	.byte	147
	.byte	32
	.byte	112
	.byte	32
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.byte	112
	.byte	40
	.byte	6
	.byte	159
	.byte	147
	.byte	1
	.quad	0
	.quad	0
.Ldebug_loc147:
	.quad	.Lfunc_begin42
	.quad	.Ltmp1100
	.short	1
	.byte	85
	.quad	.Ltmp1100
	.quad	.Ltmp1104
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Lfunc_begin43
	.quad	.Ltmp1106
	.short	1
	.byte	85
	.quad	.Ltmp1106
	.quad	.Ltmp1110
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc149:
	.quad	.Lfunc_begin44
	.quad	.Ltmp1112
	.short	1
	.byte	85
	.quad	.Ltmp1112
	.quad	.Ltmp1116
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Lfunc_begin45
	.quad	.Ltmp1118
	.short	1
	.byte	85
	.quad	.Ltmp1118
	.quad	.Ltmp1122
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc151:
	.quad	.Lfunc_begin46
	.quad	.Ltmp1124
	.short	1
	.byte	85
	.quad	.Ltmp1124
	.quad	.Ltmp1128
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc152:
	.quad	.Lfunc_begin47
	.quad	.Ltmp1130
	.short	1
	.byte	85
	.quad	.Ltmp1130
	.quad	.Ltmp1134
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Lfunc_begin48
	.quad	.Ltmp1136
	.short	1
	.byte	85
	.quad	.Ltmp1136
	.quad	.Ltmp1140
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc154:
	.quad	.Lfunc_begin49
	.quad	.Ltmp1142
	.short	1
	.byte	85
	.quad	.Ltmp1142
	.quad	.Ltmp1146
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Lfunc_begin50
	.quad	.Ltmp1148
	.short	1
	.byte	85
	.quad	.Ltmp1148
	.quad	.Ltmp1152
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc156:
	.quad	.Lfunc_begin51
	.quad	.Ltmp1154
	.short	1
	.byte	85
	.quad	.Ltmp1154
	.quad	.Ltmp1158
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Lfunc_begin52
	.quad	.Ltmp1160
	.short	1
	.byte	85
	.quad	.Ltmp1160
	.quad	.Ltmp1164
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc158:
	.quad	.Lfunc_begin53
	.quad	.Ltmp1166
	.short	1
	.byte	85
	.quad	.Ltmp1166
	.quad	.Ltmp1170
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc159:
	.quad	.Lfunc_begin54
	.quad	.Ltmp1172
	.short	1
	.byte	85
	.quad	.Ltmp1172
	.quad	.Ltmp1176
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Lfunc_begin55
	.quad	.Ltmp1178
	.short	1
	.byte	85
	.quad	.Ltmp1178
	.quad	.Ltmp1182
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc161:
	.quad	.Ltmp1184
	.quad	.Ltmp1185
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1185
	.quad	.Lfunc_end56
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc162:
	.quad	.Lfunc_begin57
	.quad	.Ltmp1190
	.short	1
	.byte	85
	.quad	.Ltmp1192
	.quad	.Ltmp1193
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Lfunc_begin57
	.quad	.Ltmp1191
	.short	1
	.byte	84
	.quad	.Ltmp1192
	.quad	.Ltmp1194
	.short	1
	.byte	84
	.quad	0
	.quad	0
.Ldebug_loc164:
	.quad	.Lfunc_begin58
	.quad	.Ltmp1196
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc165:
	.quad	.Ltmp1195
	.quad	.Lfunc_end58
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Ltmp1197
	.quad	.Ltmp1198
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1198
	.quad	.Ltmp1198
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc167:
	.quad	.Ltmp1198
	.quad	.Lfunc_end58
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc168:
	.quad	.Ltmp1199
	.quad	.Ltmp1204
	.short	1
	.byte	83
	.quad	.Ltmp1205
	.quad	.Lfunc_end58
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Ltmp1199
	.quad	.Ltmp1204
	.short	1
	.byte	83
	.quad	.Ltmp1205
	.quad	.Lfunc_end58
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc170:
	.quad	.Ltmp1203
	.quad	.Lfunc_end58
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Lfunc_begin59
	.quad	.Ltmp1207
	.short	1
	.byte	85
	.quad	.Ltmp1207
	.quad	.Ltmp1208
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc172:
	.quad	.Ltmp1207
	.quad	.Ltmp1209
	.short	3
	.byte	16
	.byte	0
	.byte	159
	.quad	.Ltmp1209
	.quad	.Lfunc_end59
	.short	1
	.byte	80
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Lfunc_begin60
	.quad	.Ltmp1216
	.short	1
	.byte	85
	.quad	.Ltmp1216
	.quad	.Ltmp1222
	.short	1
	.byte	83
	.quad	.Ltmp1224
	.quad	.Ltmp1225
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc174:
	.quad	.Lfunc_begin60
	.quad	.Ltmp1214
	.short	1
	.byte	84
	.quad	.Ltmp1214
	.quad	.Ltmp1223
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Lfunc_begin61
	.quad	.Ltmp1232
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc176:
	.quad	.Ltmp1229
	.quad	.Ltmp1230
	.short	3
	.byte	80
	.byte	147
	.byte	8
	.quad	.Ltmp1230
	.quad	.Ltmp1231
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc177:
	.quad	.Lfunc_begin62
	.quad	.Ltmp1282
	.short	1
	.byte	85
	.quad	.Ltmp1282
	.quad	.Ltmp1288
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Lfunc_begin62
	.quad	.Ltmp1282
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	.Ltmp1282
	.quad	.Ltmp1282
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1282
	.quad	.Ltmp1299
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1301
	.quad	.Ltmp1309
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1323
	.quad	.Ltmp1324
	.short	6
	.byte	86
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc179:
	.quad	.Ltmp1284
	.quad	.Ltmp1323
	.short	2
	.byte	119
	.byte	16
	.quad	.Ltmp1324
	.quad	.Ltmp1324
	.short	2
	.byte	119
	.byte	16
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Ltmp1287
	.quad	.Ltmp1299
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1299
	.quad	.Ltmp1299
	.short	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1299
	.quad	.Ltmp1301
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1324
	.quad	.Ltmp1324
	.short	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1324
	.quad	.Ltmp1325
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1325
	.quad	.Ltmp1325
	.short	8
	.byte	92
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1325
	.quad	.Ltmp1326
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1327
	.quad	.Ltmp1332
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	.Ltmp1333
	.quad	.Lfunc_end62
	.short	6
	.byte	92
	.byte	147
	.byte	8
	.byte	86
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc181:
	.quad	.Ltmp1295
	.quad	.Ltmp1297
	.short	3
	.byte	85
	.byte	147
	.byte	8
	.quad	.Ltmp1297
	.quad	.Ltmp1298
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	.Ltmp1301
	.quad	.Ltmp1304
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc182:
	.quad	.Ltmp1302
	.quad	.Ltmp1303
	.short	3
	.byte	95
	.byte	147
	.byte	8
	.quad	.Ltmp1303
	.quad	.Ltmp1323
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp1324
	.quad	.Ltmp1324
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp1307
	.quad	.Ltmp1323
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc184:
	.quad	.Ltmp1312
	.quad	.Ltmp1315
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc185:
	.quad	.Ltmp1317
	.quad	.Ltmp1323
	.short	2
	.byte	119
	.byte	24
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Lfunc_begin63
	.quad	.Ltmp1349
	.short	1
	.byte	85
	.quad	.Ltmp1349
	.quad	.Ltmp1354
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc187:
	.quad	.Lfunc_begin63
	.quad	.Ltmp1351
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc188:
	.quad	.Lfunc_begin63
	.quad	.Ltmp1349
	.short	1
	.byte	82
	.quad	.Ltmp1349
	.quad	.Ltmp1357
	.short	1
	.byte	94
	.quad	.Ltmp1358
	.quad	.Ltmp1359
	.short	1
	.byte	94
	.quad	.Ltmp1360
	.quad	.Ltmp1362
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Lfunc_begin64
	.quad	.Ltmp1401
	.short	1
	.byte	84
	.quad	.Ltmp1401
	.quad	.Ltmp1413
	.short	1
	.byte	83
	.quad	.Ltmp1415
	.quad	.Ltmp1418
	.short	1
	.byte	83
	.quad	.Ltmp1420
	.quad	.Ltmp1430
	.short	1
	.byte	83
	.quad	.Ltmp1431
	.quad	.Ltmp1441
	.short	1
	.byte	83
	.quad	.Ltmp1443
	.quad	.Ltmp1446
	.short	1
	.byte	83
	.quad	.Ltmp1448
	.quad	.Ltmp1450
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc190:
	.quad	.Lfunc_begin64
	.quad	.Ltmp1403
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Ltmp1421
	.quad	.Ltmp1427
	.short	1
	.byte	92
	.quad	.Ltmp1431
	.quad	.Ltmp1433
	.short	1
	.byte	92
	.quad	0
	.quad	0
.Ldebug_loc192:
	.quad	.Ltmp1425
	.quad	.Ltmp1426
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Lfunc_begin65
	.quad	.Ltmp1497
	.short	1
	.byte	84
	.quad	.Ltmp1497
	.quad	.Ltmp1505
	.short	1
	.byte	83
	.quad	.Ltmp1505
	.quad	.Ltmp1523
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	.Ltmp1527
	.quad	.Ltmp1530
	.short	1
	.byte	83
	.quad	.Ltmp1535
	.quad	.Ltmp1543
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	.Ltmp1544
	.quad	.Ltmp1544
	.short	3
	.byte	119
	.byte	232
	.byte	0
	.quad	0
	.quad	0
.Ldebug_loc194:
	.quad	.Lfunc_begin65
	.quad	.Ltmp1499
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc195:
	.quad	.Ltmp1507
	.quad	.Ltmp1508
	.short	3
	.byte	83
	.byte	147
	.byte	8
	.quad	.Ltmp1508
	.quad	.Ltmp1523
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1535
	.quad	.Ltmp1543
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	.Ltmp1544
	.quad	.Ltmp1544
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	93
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp1509
	.quad	.Ltmp1521
	.short	9
	.byte	119
	.byte	240
	.byte	1
	.byte	35
	.byte	8
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1535
	.quad	.Ltmp1537
	.short	9
	.byte	119
	.byte	240
	.byte	1
	.byte	35
	.byte	8
	.byte	6
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1537
	.quad	.Ltmp1538
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc197:
	.quad	.Ltmp1512
	.quad	.Ltmp1514
	.short	1
	.byte	82
	.quad	.Ltmp1514
	.quad	.Ltmp1515
	.short	3
	.byte	119
	.byte	216
	.byte	1
	.quad	.Ltmp1515
	.quad	.Ltmp1516
	.short	1
	.byte	82
	.quad	0
	.quad	0
.Ldebug_loc198:
	.quad	.Lfunc_begin66
	.quad	.Lfunc_end66
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Lfunc_begin67
	.quad	.Ltmp1612
	.short	1
	.byte	85
	.quad	.Ltmp1612
	.quad	.Ltmp1691
	.short	1
	.byte	93
	.quad	.Ltmp1692
	.quad	.Lfunc_end67
	.short	1
	.byte	93
	.quad	0
	.quad	0
.Ldebug_loc200:
	.quad	.Lfunc_begin67
	.quad	.Ltmp1613
	.short	6
	.byte	84
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc201:
	.quad	.Lfunc_begin67
	.quad	.Ltmp1612
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	88
	.byte	147
	.byte	8
	.quad	.Ltmp1612
	.quad	.Ltmp1612
	.short	6
	.byte	82
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1612
	.quad	.Ltmp1626
	.short	6
	.byte	83
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc202:
	.quad	.Ltmp1612
	.quad	.Ltmp1631
	.short	10
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1631
	.quad	.Ltmp1631
	.short	8
	.byte	94
	.byte	147
	.byte	8
	.byte	16
	.byte	0
	.byte	159
	.byte	147
	.byte	8
	.quad	.Ltmp1631
	.quad	.Ltmp1634
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp1679
	.quad	.Ltmp1680
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp1683
	.quad	.Ltmp1684
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp1685
	.quad	.Ltmp1690
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	.Ltmp1692
	.quad	.Lfunc_end67
	.short	6
	.byte	94
	.byte	147
	.byte	8
	.byte	92
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc203:
	.quad	.Ltmp1626
	.quad	.Ltmp1633
	.short	1
	.byte	83
	.quad	.Ltmp1634
	.quad	.Ltmp1657
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc204:
	.quad	.Ltmp1626
	.quad	.Ltmp1632
	.short	1
	.byte	95
	.quad	.Ltmp1634
	.quad	.Ltmp1636
	.short	1
	.byte	95
	.quad	0
	.quad	0
.Ldebug_loc205:
	.quad	.Ltmp1628
	.quad	.Ltmp1629
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc206:
	.quad	.Ltmp1672
	.quad	.Ltmp1678
	.short	1
	.byte	94
	.quad	0
	.quad	0
.Ldebug_loc207:
	.quad	.Ltmp1675
	.quad	.Ltmp1676
	.short	6
	.byte	80
	.byte	147
	.byte	8
	.byte	81
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc208:
	.quad	.Lfunc_begin68
	.quad	.Ltmp1694
	.short	6
	.byte	85
	.byte	147
	.byte	8
	.byte	84
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc209:
	.quad	.Lfunc_begin68
	.quad	.Ltmp1693
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	82
	.byte	147
	.byte	8
	.quad	.Ltmp1693
	.quad	.Ltmp1693
	.short	6
	.byte	81
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	.Ltmp1693
	.quad	.Ltmp1696
	.short	6
	.byte	95
	.byte	147
	.byte	8
	.byte	94
	.byte	147
	.byte	8
	.quad	0
	.quad	0
.Ldebug_loc210:
	.quad	.Ltmp1695
	.quad	.Ltmp1697
	.short	1
	.byte	86
	.quad	0
	.quad	0
.Ldebug_loc211:
	.quad	.Lfunc_begin69
	.quad	.Ltmp1699
	.short	1
	.byte	85
	.quad	.Ltmp1699
	.quad	.Ltmp1703
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc212:
	.quad	.Lfunc_begin70
	.quad	.Ltmp1705
	.short	1
	.byte	85
	.quad	.Ltmp1705
	.quad	.Ltmp1709
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc213:
	.quad	.Lfunc_begin72
	.quad	.Ltmp1714
	.short	1
	.byte	85
	.quad	0
	.quad	0
.Ldebug_loc214:
	.quad	.Lfunc_begin73
	.quad	.Ltmp1716
	.short	1
	.byte	85
	.quad	.Ltmp1716
	.quad	.Ltmp1720
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc215:
	.quad	.Lfunc_begin74
	.quad	.Ltmp1722
	.short	1
	.byte	85
	.quad	.Ltmp1722
	.quad	.Ltmp1726
	.short	1
	.byte	83
	.quad	0
	.quad	0
.Ldebug_loc216:
	.quad	.Lfunc_begin75
	.quad	.Ltmp1728
	.short	1
	.byte	85
	.quad	.Ltmp1728
	.quad	.Ltmp1732
	.short	1
	.byte	83
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.ascii	"\264B"
	.byte	25
	.byte	17
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	2
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	3
	.byte	15
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	4
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	5
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	6
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	62
	.byte	11
	.byte	11
	.byte	11
	.byte	0
	.byte	0
	.byte	7
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	110
	.byte	14
	.byte	0
	.byte	0
	.byte	8
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	9
	.byte	19
	.byte	1
	.byte	3
	.byte	14
	.byte	11
	.byte	5
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	10
	.byte	21
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	11
	.byte	5
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	12
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	13
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	14
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	15
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	16
	.byte	11
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	17
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	18
	.byte	11
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	19
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	20
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	21
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	22
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	23
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	24
	.byte	5
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	25
	.byte	46
	.byte	1
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	63
	.byte	25
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	26
	.byte	5
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	27
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	28
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	0
	.byte	0
	.byte	29
	.byte	5
	.byte	0
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	30
	.byte	52
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	31
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	32
	.byte	5
	.byte	0
	.byte	2
	.byte	23
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	33
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	34
	.byte	52
	.byte	0
	.byte	28
	.byte	15
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	35
	.byte	46
	.byte	1
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	36
	.byte	19
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\210\001"
	.byte	15
	.byte	0
	.byte	0
	.byte	37
	.byte	52
	.byte	0
	.byte	2
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	38
	.byte	52
	.byte	0
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	39
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	40
	.byte	13
	.byte	0
	.byte	3
	.byte	14
	.byte	73
	.byte	19
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.ascii	"\210\001"
	.byte	15
	.byte	56
	.byte	11
	.byte	0
	.byte	0
	.byte	41
	.byte	1
	.byte	1
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	42
	.byte	33
	.byte	0
	.byte	73
	.byte	19
	.byte	34
	.byte	11
	.byte	55
	.byte	11
	.byte	0
	.byte	0
	.byte	43
	.byte	36
	.byte	0
	.byte	3
	.byte	14
	.byte	11
	.byte	11
	.byte	62
	.byte	11
	.byte	0
	.byte	0
	.byte	44
	.byte	21
	.byte	0
	.byte	73
	.byte	19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	13896
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	22
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2

	.quad	0
	.long	.Ldebug_ranges12
	.byte	2
	.long	.Linfo_string3
	.long	57

	.byte	2
	.byte	30
	.long	.Linfo_string3
	.byte	3
	.long	62
	.byte	4
	.long	.Linfo_string19
	.byte	48
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string4
	.long	189
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string6
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string8
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	9
	.byte	5
	.long	.Linfo_string9
	.long	203
	.byte	1
	.byte	1
	.byte	2
	.byte	10
	.byte	5
	.long	.Linfo_string11
	.long	210
	.byte	1
	.byte	1
	.byte	4
	.byte	12
	.byte	5
	.long	.Linfo_string13
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string15
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string16
	.long	229
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string18
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	0
	.byte	6
	.long	.Linfo_string5
	.byte	5
	.byte	8
	.byte	6
	.long	.Linfo_string7
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string10
	.byte	7
	.byte	2
	.byte	6
	.long	.Linfo_string12
	.byte	7
	.byte	4
	.byte	3
	.long	222
	.byte	6
	.long	.Linfo_string14
	.byte	0
	.byte	0
	.byte	6
	.long	.Linfo_string17
	.byte	7
	.byte	8
	.byte	2
	.long	.Linfo_string20
	.long	210

	.byte	1
	.byte	1
	.long	.Linfo_string20
	.byte	7
	.long	.Linfo_string21
	.long	266
	.byte	2
	.byte	40
	.long	.Linfo_string21
	.byte	3
	.long	271
	.byte	4
	.long	.Linfo_string142
	.byte	160
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string22
	.long	320
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string63
	.long	1068
	.byte	2
	.byte	5
	.byte	4
	.byte	128
	.byte	5
	.long	.Linfo_string67
	.long	1104
	.byte	2
	.byte	5
	.byte	8
	.byte	136
	.byte	0
	.byte	4
	.long	.Linfo_string62
	.byte	128
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string23
	.long	486
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string27
	.long	527
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string43
	.long	761
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string49
	.long	486
	.byte	2
	.byte	5
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string50
	.long	955
	.byte	2
	.byte	5
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string52
	.long	1002
	.byte	2
	.byte	5
	.byte	1
	.byte	72
	.byte	5
	.long	.Linfo_string54
	.long	754
	.byte	2
	.byte	5
	.byte	4
	.byte	76
	.byte	5
	.long	.Linfo_string55
	.long	210
	.byte	2
	.byte	5
	.byte	4
	.byte	80
	.byte	5
	.long	.Linfo_string56
	.long	1009
	.byte	2
	.byte	5
	.byte	1
	.byte	84
	.byte	5
	.long	.Linfo_string58
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string59
	.long	1016
	.byte	2
	.byte	5
	.byte	8
	.byte	96
	.byte	5
	.long	.Linfo_string61
	.long	1002
	.byte	2
	.byte	5
	.byte	1
	.byte	120
	.byte	0
	.byte	4
	.long	.Linfo_string26
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string24
	.long	522
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string25
	.long	189
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	196
	.byte	3
	.long	532
	.byte	4
	.long	.Linfo_string42
	.byte	40
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string28
	.long	581
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string40
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string41
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	32
	.byte	0
	.byte	8
	.long	.Linfo_string39
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	628
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	633
	.byte	4
	.long	.Linfo_string28
	.byte	40
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string30
	.long	695
	.byte	2
	.byte	5
	.byte	1
	.byte	0
	.byte	5
	.long	.Linfo_string32
	.long	210
	.byte	2
	.byte	5
	.byte	4
	.byte	4
	.byte	5
	.long	.Linfo_string33
	.long	210
	.byte	2
	.byte	5
	.byte	4
	.byte	8
	.byte	5
	.long	.Linfo_string34
	.long	702
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	.Linfo_string31
	.byte	7
	.byte	1
	.byte	8
	.long	.Linfo_string38
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	749
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	754
	.byte	6
	.long	.Linfo_string35
	.byte	5
	.byte	4
	.byte	3
	.long	766
	.byte	4
	.long	.Linfo_string48
	.byte	40
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string28
	.long	815
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string40
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string41
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	32
	.byte	0
	.byte	8
	.long	.Linfo_string47
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	862
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	867
	.byte	4
	.long	.Linfo_string46
	.byte	64
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string28
	.long	633
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string44
	.long	903
	.byte	2
	.byte	5
	.byte	8
	.byte	40
	.byte	0
	.byte	8
	.long	.Linfo_string45
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	950
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	210
	.byte	8
	.long	.Linfo_string51
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	522
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	.Linfo_string53
	.byte	7
	.byte	1
	.byte	6
	.long	.Linfo_string57
	.byte	7
	.byte	1
	.byte	8
	.long	.Linfo_string60
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	1063
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	486
	.byte	4
	.long	.Linfo_string66
	.byte	8
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string64
	.long	754
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string65
	.long	210
	.byte	2
	.byte	5
	.byte	4
	.byte	4
	.byte	0
	.byte	8
	.long	.Linfo_string141
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	1151
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	1156
	.byte	3
	.long	1161
	.byte	9
	.long	.Linfo_string140
	.short	264
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string68
	.long	217
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string69
	.long	527
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string70
	.long	761
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string71
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string72
	.long	1341
	.byte	2
	.byte	5
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string84
	.long	1574
	.byte	2
	.byte	5
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string93
	.long	1574
	.byte	2
	.byte	5
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string94
	.long	1739
	.byte	2
	.byte	5
	.byte	8
	.byte	136
	.byte	5
	.long	.Linfo_string96
	.long	1002
	.byte	2
	.byte	5
	.byte	1
	.byte	160
	.byte	5
	.long	.Linfo_string97
	.long	1421
	.byte	2
	.byte	5
	.byte	8
	.byte	168
	.byte	5
	.long	.Linfo_string98
	.long	1791
	.byte	2
	.byte	5
	.byte	8
	.byte	192
	.byte	5
	.long	.Linfo_string101
	.long	1814
	.byte	2
	.byte	5
	.byte	8
	.byte	216
	.byte	5
	.long	.Linfo_string103
	.long	1837
	.byte	2
	.byte	5
	.byte	8
	.byte	232
	.byte	0
	.byte	3
	.long	1346
	.byte	4
	.long	.Linfo_string83
	.byte	88
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string27
	.long	527
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string73
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string74
	.long	1421
	.byte	2
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string76
	.long	1473
	.byte	2
	.byte	5
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string82
	.long	903
	.byte	2
	.byte	5
	.byte	8
	.byte	64
	.byte	0
	.byte	8
	.long	.Linfo_string75
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	1468
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	189
	.byte	8
	.long	.Linfo_string81
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	1520
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	1525
	.byte	4
	.long	.Linfo_string80
	.byte	16
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string77
	.long	210
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string78
	.long	1002
	.byte	2
	.byte	5
	.byte	1
	.byte	4
	.byte	5
	.long	.Linfo_string79
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	4
	.long	.Linfo_string92
	.byte	48
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string85
	.long	903
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string86
	.long	1610
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	8
	.long	.Linfo_string91
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	1657
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	1662
	.byte	4
	.long	.Linfo_string90
	.byte	16
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string77
	.long	210
	.byte	2
	.byte	5
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string87
	.long	1698
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	1703
	.byte	4
	.long	.Linfo_string89
	.byte	32
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string88
	.long	628
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string74
	.long	1421
	.byte	2
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	8
	.long	.Linfo_string95
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	1786
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	1698
	.byte	4
	.long	.Linfo_string100
	.byte	24
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string99
	.long	955
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	4
	.long	.Linfo_string102
	.byte	16
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string99
	.long	486
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	0
	.byte	4
	.long	.Linfo_string139
	.byte	32
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string104
	.long	1886
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string138
	.long	1002
	.byte	2
	.byte	5
	.byte	1
	.byte	16
	.byte	5
	.long	.Linfo_string79
	.long	189
	.byte	2
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	4
	.long	.Linfo_string137
	.byte	16
	.byte	2
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	1922
	.byte	2
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	1927
	.byte	8
	.long	.Linfo_string136
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string129
	.long	2411
	.byte	3
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	1966
	.byte	4
	.long	.Linfo_string128
	.byte	72
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string107
	.long	229
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string108
	.long	229
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string109
	.long	210
	.byte	1
	.byte	1
	.byte	4
	.byte	16
	.byte	5
	.long	.Linfo_string110
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	20
	.byte	5
	.long	.Linfo_string111
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	21
	.byte	5
	.long	.Linfo_string112
	.long	196
	.byte	1
	.byte	1
	.byte	1
	.byte	22
	.byte	5
	.long	.Linfo_string113
	.long	2132
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string116
	.long	2181
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string117
	.long	522
	.byte	1
	.byte	1
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string26
	.long	1063
	.byte	1
	.byte	1
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string118
	.long	2230
	.byte	1
	.byte	1
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string127
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	64
	.byte	0
	.byte	3
	.long	2137
	.byte	4
	.long	.Linfo_string115
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string114
	.long	2160
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	2165
	.byte	10
	.long	229
	.byte	11
	.long	217
	.byte	11
	.long	229
	.byte	0
	.byte	3
	.long	2186
	.byte	4
	.long	.Linfo_string115
	.byte	8
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string114
	.long	2209
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	2214
	.byte	10
	.long	1002
	.byte	11
	.long	217
	.byte	11
	.long	217
	.byte	0
	.byte	3
	.long	2235
	.byte	4
	.long	.Linfo_string118
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string119
	.long	1063
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string120
	.long	1063
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string121
	.long	2284
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	8
	.long	.Linfo_string126
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	2331
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	2336
	.byte	4
	.long	.Linfo_string125
	.byte	40
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string119
	.long	1063
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string120
	.long	1063
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string122
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string123
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string124
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	32
	.byte	0
	.byte	3
	.long	2416
	.byte	10
	.long	2427
	.byte	11
	.long	217
	.byte	0
	.byte	8
	.long	.Linfo_string135
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string104
	.long	754
	.byte	3
	.byte	5
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string107
	.long	189
	.byte	3
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string130
	.long	2474
	.byte	3
	.byte	5
	.byte	8
	.byte	16
	.byte	0
	.byte	4
	.long	.Linfo_string134
	.byte	16
	.byte	1
	.byte	1
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	2510
	.byte	1
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	1
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	2515
	.byte	8
	.long	.Linfo_string132
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string131
	.long	2549
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	2554
	.byte	10
	.long	486
	.byte	11
	.long	217
	.byte	0
	.byte	2
	.long	.Linfo_string143
	.long	486

	.byte	4
	.byte	11
	.long	.Linfo_string143
	.byte	2
	.long	.Linfo_string144
	.long	2595

	.byte	5
	.byte	6
	.long	.Linfo_string144
	.byte	4
	.long	.Linfo_string149
	.byte	16
	.byte	2
	.byte	6
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	2631
	.byte	2
	.byte	6
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	2636
	.byte	8
	.long	.Linfo_string148
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	6
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string145
	.long	2670
	.byte	3
	.byte	6
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	2675
	.byte	10
	.long	2691
	.byte	11
	.long	217
	.byte	11
	.long	955
	.byte	0
	.byte	8
	.long	.Linfo_string147
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string146
	.long	189
	.byte	3
	.byte	6
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string130
	.long	2474
	.byte	3
	.byte	6
	.byte	8
	.byte	8
	.byte	0
	.byte	2
	.long	.Linfo_string150
	.long	486

	.byte	4
	.byte	11
	.long	.Linfo_string150
	.byte	12
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	1
	.byte	87
	.long	.Linfo_string202
	.long	.Linfo_string203
	.byte	2
	.byte	1
	.long	222

	.byte	13
	.quad	.Lfunc_begin1
	.long	.Lfunc_end1-.Lfunc_begin1
	.byte	1
	.byte	87
	.long	.Linfo_string204
	.long	.Linfo_string205
	.byte	2
	.byte	73
	.long	2474

	.byte	14
	.long	.Ldebug_loc0
	.long	.Linfo_string458
	.byte	2
	.byte	73
	.long	10350
	.byte	15
	.long	.Ldebug_loc4
	.long	.Linfo_string466
	.byte	2
	.byte	73
	.long	2474
	.byte	16
	.quad	.Ltmp2
	.long	.Ltmp39-.Ltmp2
	.byte	15
	.long	.Ldebug_loc2
	.long	.Linfo_string459
	.byte	2
	.byte	78
	.long	13212
	.byte	15
	.long	.Ldebug_loc3
	.long	.Linfo_string130
	.byte	2
	.byte	86
	.long	2474
	.byte	16
	.quad	.Ltmp24
	.long	.Ltmp28-.Ltmp24
	.byte	15
	.long	.Ldebug_loc1
	.long	.Linfo_string193
	.byte	2
	.byte	80
	.long	1002
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin2
	.long	.Lfunc_end2-.Lfunc_begin2
	.byte	1
	.byte	87
	.long	.Linfo_string206
	.long	.Linfo_string207
	.byte	2
	.byte	43
	.long	10316

	.byte	17
	.byte	3
	.byte	145
	.ascii	"\320\002"
	.long	.Linfo_string467
	.byte	2
	.byte	44
	.long	1016
	.byte	15
	.long	.Ldebug_loc10
	.long	.Linfo_string471
	.byte	2
	.byte	45
	.long	10350
	.byte	16
	.quad	.Ltmp45
	.long	.Ltmp94-.Ltmp45
	.byte	15
	.long	.Ldebug_loc5
	.long	.Linfo_string168
	.byte	2
	.byte	46
	.long	8005
	.byte	15
	.long	.Ldebug_loc6
	.long	.Linfo_string468
	.byte	2
	.byte	48
	.long	1016
	.byte	15
	.long	.Ldebug_loc7
	.long	.Linfo_string6
	.byte	2
	.byte	49
	.long	57
	.byte	18
	.long	.Ldebug_ranges1
	.byte	15
	.long	.Ldebug_loc9
	.long	.Linfo_string470
	.byte	2
	.byte	51
	.long	486
	.byte	18
	.long	.Ldebug_ranges0
	.byte	15
	.long	.Ldebug_loc8
	.long	.Linfo_string469
	.byte	2
	.byte	54
	.long	1016
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin3
	.long	.Lfunc_end3-.Lfunc_begin3
	.byte	1
	.byte	87
	.long	.Linfo_string213
	.long	.Linfo_string214
	.byte	1
	.byte	1
	.long	229

	.byte	14
	.long	.Ldebug_loc11
	.long	.Linfo_string472
	.byte	1
	.byte	1
	.long	217
	.byte	17
	.byte	1
	.byte	84
	.long	.Linfo_string473
	.byte	1
	.byte	1
	.long	229
	.byte	15
	.long	.Ldebug_loc12
	.long	.Linfo_string474
	.byte	1
	.byte	1
	.long	229
	.byte	0
	.byte	13
	.quad	.Lfunc_begin4
	.long	.Lfunc_end4-.Lfunc_begin4
	.byte	1
	.byte	87
	.long	.Linfo_string215
	.long	.Linfo_string216
	.byte	1
	.byte	1
	.long	1002

	.byte	14
	.long	.Ldebug_loc13
	.long	.Linfo_string475
	.byte	1
	.byte	1
	.long	217
	.byte	14
	.long	.Ldebug_loc14
	.long	.Linfo_string476
	.byte	1
	.byte	1
	.long	217
	.byte	19
	.byte	0
	.long	.Linfo_string477
	.byte	1
	.byte	1
	.long	1002
	.byte	0
	.byte	13
	.quad	.Lfunc_begin5
	.long	.Lfunc_end5-.Lfunc_begin5
	.byte	1
	.byte	87
	.long	.Linfo_string217
	.long	.Linfo_string218
	.byte	1
	.byte	1
	.long	229

	.byte	17
	.byte	1
	.byte	85
	.long	.Linfo_string472
	.byte	1
	.byte	1
	.long	217
	.byte	17
	.byte	1
	.byte	84
	.long	.Linfo_string473
	.byte	1
	.byte	1
	.long	229
	.byte	15
	.long	.Ldebug_loc15
	.long	.Linfo_string478
	.byte	1
	.byte	1
	.long	229
	.byte	0
	.byte	13
	.quad	.Lfunc_begin6
	.long	.Lfunc_end6-.Lfunc_begin6
	.byte	1
	.byte	87
	.long	.Linfo_string219
	.long	.Linfo_string220
	.byte	1
	.byte	1
	.long	1002

	.byte	14
	.long	.Ldebug_loc16
	.long	.Linfo_string475
	.byte	1
	.byte	1
	.long	217
	.byte	14
	.long	.Ldebug_loc17
	.long	.Linfo_string476
	.byte	1
	.byte	1
	.long	217
	.byte	19
	.byte	0
	.long	.Linfo_string479
	.byte	1
	.byte	1
	.long	1002
	.byte	0
	.byte	13
	.quad	.Lfunc_begin7
	.long	.Lfunc_end7-.Lfunc_begin7
	.byte	1
	.byte	87
	.long	.Linfo_string221
	.long	.Linfo_string222
	.byte	5
	.byte	27
	.long	10404

	.byte	14
	.long	.Ldebug_loc18
	.long	.Linfo_string168
	.byte	5
	.byte	28
	.long	8005
	.byte	15
	.long	.Ldebug_loc21
	.long	.Linfo_string480
	.byte	5
	.byte	29
	.long	1063
	.byte	15
	.long	.Ldebug_loc22
	.long	.Linfo_string481
	.byte	5
	.byte	29
	.long	2474
	.byte	16
	.quad	.Ltmp125
	.long	.Ltmp143-.Ltmp125
	.byte	15
	.long	.Ldebug_loc19
	.long	.Linfo_string130
	.byte	5
	.byte	30
	.long	2474
	.byte	15
	.long	.Ldebug_loc20
	.long	.Linfo_string449
	.byte	5
	.byte	30
	.long	1063
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin8
	.long	.Lfunc_end8-.Lfunc_begin8
	.byte	1
	.byte	87
	.long	.Linfo_string224
	.long	.Linfo_string225
	.byte	5
	.byte	46
	.long	10438

	.byte	14
	.long	.Ldebug_loc23
	.long	.Linfo_string168
	.byte	5
	.byte	47
	.long	8005
	.byte	15
	.long	.Ldebug_loc25
	.long	.Linfo_string482
	.byte	5
	.byte	48
	.long	2474
	.byte	15
	.long	.Ldebug_loc29
	.long	.Linfo_string483
	.byte	5
	.byte	48
	.long	10472
	.byte	16
	.quad	.Ltmp144
	.long	.Ltmp170-.Ltmp144
	.byte	15
	.long	.Ldebug_loc24
	.long	.Linfo_string130
	.byte	5
	.byte	49
	.long	2474
	.byte	15
	.long	.Ldebug_loc26
	.long	.Linfo_string449
	.byte	5
	.byte	49
	.long	1063
	.byte	15
	.long	.Ldebug_loc28
	.long	.Linfo_string458
	.byte	5
	.byte	63
	.long	10472
	.byte	18
	.long	.Ldebug_ranges2
	.byte	15
	.long	.Ldebug_loc27
	.long	.Linfo_string130
	.byte	5
	.byte	54
	.long	2474
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin9
	.long	.Lfunc_end9-.Lfunc_begin9
	.byte	1
	.byte	87
	.long	.Linfo_string230
	.long	.Linfo_string231
	.byte	5
	.byte	74
	.long	10438

	.byte	14
	.long	.Ldebug_loc30
	.long	.Linfo_string168
	.byte	5
	.byte	75
	.long	8005
	.byte	15
	.long	.Ldebug_loc32
	.long	.Linfo_string484
	.byte	5
	.byte	76
	.long	10472
	.byte	15
	.long	.Ldebug_loc35
	.long	.Linfo_string485
	.byte	5
	.byte	76
	.long	2474
	.byte	16
	.quad	.Ltmp171
	.long	.Ltmp192-.Ltmp171
	.byte	15
	.long	.Ldebug_loc31
	.long	.Linfo_string332
	.byte	5
	.byte	77
	.long	10472
	.byte	15
	.long	.Ldebug_loc33
	.long	.Linfo_string130
	.byte	5
	.byte	84
	.long	2474
	.byte	15
	.long	.Ldebug_loc34
	.long	.Linfo_string449
	.byte	5
	.byte	84
	.long	1063
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin10
	.long	.Lfunc_end10-.Lfunc_begin10
	.byte	1
	.byte	87
	.long	.Linfo_string232
	.long	.Linfo_string233
	.byte	5
	.byte	103
	.long	10438

	.byte	14
	.long	.Ldebug_loc36
	.long	.Linfo_string168
	.byte	5
	.byte	104
	.long	8005
	.byte	15
	.long	.Ldebug_loc38
	.long	.Linfo_string486
	.byte	5
	.byte	105
	.long	2474
	.byte	15
	.long	.Ldebug_loc40
	.long	.Linfo_string487
	.byte	5
	.byte	105
	.long	10472
	.byte	16
	.quad	.Ltmp193
	.long	.Ltmp208-.Ltmp193
	.byte	15
	.long	.Ldebug_loc37
	.long	.Linfo_string130
	.byte	5
	.byte	107
	.long	2474
	.byte	15
	.long	.Ldebug_loc39
	.long	.Linfo_string332
	.byte	5
	.byte	107
	.long	10472
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin11
	.long	.Lfunc_end11-.Lfunc_begin11
	.byte	1
	.byte	87
	.long	.Linfo_string234
	.long	.Linfo_string235
	.byte	4
	.byte	19
	.long	10536

	.byte	14
	.long	.Ldebug_loc41
	.long	.Linfo_string168
	.byte	4
	.byte	20
	.long	8005
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\360\003"
	.long	.Linfo_string488
	.byte	4
	.byte	21
	.long	13451
	.byte	15
	.long	.Ldebug_loc42
	.long	.Linfo_string489
	.byte	4
	.byte	22
	.long	2474
	.byte	15
	.long	.Ldebug_loc51
	.long	.Linfo_string493
	.byte	4
	.byte	22
	.long	10570
	.byte	16
	.quad	.Ltmp273
	.long	.Ltmp323-.Ltmp273
	.byte	15
	.long	.Ldebug_loc43
	.long	.Linfo_string69
	.byte	4
	.byte	23
	.long	486
	.byte	15
	.long	.Ldebug_loc44
	.long	.Linfo_string130
	.byte	4
	.byte	28
	.long	2474
	.byte	15
	.long	.Ldebug_loc45
	.long	.Linfo_string327
	.byte	4
	.byte	28
	.long	10794
	.byte	15
	.long	.Ldebug_loc46
	.long	.Linfo_string490
	.byte	4
	.byte	37
	.long	12661
	.byte	15
	.long	.Ldebug_loc48
	.long	.Linfo_string491
	.byte	4
	.byte	46
	.long	10570
	.byte	15
	.long	.Ldebug_loc49
	.long	.Linfo_string492
	.byte	4
	.byte	36
	.long	12421
	.byte	16
	.quad	.Ltmp295
	.long	.Ltmp302-.Ltmp295
	.byte	15
	.long	.Ldebug_loc47
	.long	.Linfo_string130
	.byte	4
	.byte	39
	.long	2474
	.byte	0
	.byte	16
	.quad	.Ltmp304
	.long	.Ltmp307-.Ltmp304
	.byte	15
	.long	.Ldebug_loc50
	.long	.Linfo_string130
	.byte	4
	.byte	47
	.long	2474
	.byte	0
	.byte	0
	.byte	0
	.byte	20
	.quad	.Lfunc_begin12
	.long	.Lfunc_end12-.Lfunc_begin12
	.byte	1
	.byte	87
	.long	.Linfo_string251
	.byte	4
	.byte	34
	.long	1002
	.byte	14
	.long	.Ldebug_loc52
	.long	.Linfo_string494
	.byte	4
	.byte	34
	.long	13487
	.byte	19
	.byte	0
	.long	.Linfo_string497
	.byte	4
	.byte	34
	.long	1002
	.byte	0
	.byte	13
	.quad	.Lfunc_begin13
	.long	.Lfunc_end13-.Lfunc_begin13
	.byte	1
	.byte	87
	.long	.Linfo_string252
	.long	.Linfo_string253
	.byte	4
	.byte	64
	.long	2474

	.byte	14
	.long	.Ldebug_loc53
	.long	.Linfo_string168
	.byte	4
	.byte	65
	.long	8005
	.byte	15
	.long	.Ldebug_loc54
	.long	.Linfo_string498
	.byte	4
	.byte	66
	.long	2474
	.byte	0
	.byte	13
	.quad	.Lfunc_begin14
	.long	.Lfunc_end14-.Lfunc_begin14
	.byte	1
	.byte	87
	.long	.Linfo_string254
	.long	.Linfo_string255
	.byte	6
	.byte	145
	.long	10794

	.byte	14
	.long	.Ldebug_loc55
	.long	.Linfo_string499
	.byte	6
	.byte	145
	.long	11344
	.byte	15
	.long	.Ldebug_loc56
	.long	.Linfo_string500
	.byte	6
	.byte	145
	.long	10794
	.byte	0
	.byte	21
	.quad	.Lfunc_begin15
	.long	.Lfunc_end15-.Lfunc_begin15
	.byte	1
	.byte	87
	.long	.Linfo_string269
	.long	.Linfo_string270
	.byte	6
	.short	275
	.long	11140

	.byte	22
	.long	.Ldebug_loc57
	.long	.Linfo_string499
	.byte	6
	.short	275
	.long	11344
	.byte	22
	.long	.Ldebug_loc58
	.long	.Linfo_string168
	.byte	6
	.short	276
	.long	8005
	.byte	23
	.long	.Ldebug_loc60
	.long	.Linfo_string502
	.byte	6
	.short	277
	.long	11176
	.byte	23
	.long	.Ldebug_loc62
	.long	.Linfo_string503
	.byte	6
	.short	277
	.long	2474
	.byte	16
	.quad	.Ltmp376
	.long	.Ltmp388-.Ltmp376
	.byte	23
	.long	.Ldebug_loc59
	.long	.Linfo_string501
	.byte	6
	.short	278
	.long	11176
	.byte	18
	.long	.Ldebug_ranges3
	.byte	23
	.long	.Ldebug_loc61
	.long	.Linfo_string130
	.byte	6
	.short	279
	.long	2474
	.byte	0
	.byte	0
	.byte	0
	.byte	21
	.quad	.Lfunc_begin16
	.long	.Lfunc_end16-.Lfunc_begin16
	.byte	1
	.byte	87
	.long	.Linfo_string272
	.long	.Linfo_string273
	.byte	6
	.short	287
	.long	11181

	.byte	22
	.long	.Ldebug_loc63
	.long	.Linfo_string499
	.byte	6
	.short	287
	.long	11344
	.byte	22
	.long	.Ldebug_loc64
	.long	.Linfo_string168
	.byte	6
	.short	288
	.long	8005
	.byte	23
	.long	.Ldebug_loc66
	.long	.Linfo_string505
	.byte	6
	.short	289
	.long	11217
	.byte	23
	.long	.Ldebug_loc68
	.long	.Linfo_string506
	.byte	6
	.short	289
	.long	2474
	.byte	16
	.quad	.Ltmp389
	.long	.Ltmp401-.Ltmp389
	.byte	23
	.long	.Ldebug_loc65
	.long	.Linfo_string504
	.byte	6
	.short	290
	.long	11217
	.byte	18
	.long	.Ldebug_ranges4
	.byte	23
	.long	.Ldebug_loc67
	.long	.Linfo_string130
	.byte	6
	.short	291
	.long	2474
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin17
	.long	.Lfunc_end17-.Lfunc_begin17
	.byte	1
	.byte	87
	.long	.Linfo_string275
	.long	.Linfo_string276
	.byte	6
	.byte	185
	.long	11222

	.byte	14
	.long	.Ldebug_loc69
	.long	.Linfo_string499
	.byte	6
	.byte	185
	.long	11344
	.byte	14
	.long	.Ldebug_loc70
	.long	.Linfo_string507
	.byte	6
	.byte	186
	.long	486
	.byte	15
	.long	.Ldebug_loc71
	.long	.Linfo_string508
	.byte	6
	.byte	187
	.long	11256
	.byte	0
	.byte	13
	.quad	.Lfunc_begin18
	.long	.Lfunc_end18-.Lfunc_begin18
	.byte	1
	.byte	87
	.long	.Linfo_string278
	.long	.Linfo_string279
	.byte	6
	.byte	215
	.long	1002

	.byte	14
	.long	.Ldebug_loc72
	.long	.Linfo_string499
	.byte	6
	.byte	215
	.long	11344
	.byte	15
	.long	.Ldebug_loc73
	.long	.Linfo_string509
	.byte	6
	.byte	215
	.long	1002
	.byte	0
	.byte	13
	.quad	.Lfunc_begin19
	.long	.Lfunc_end19-.Lfunc_begin19
	.byte	1
	.byte	87
	.long	.Linfo_string280
	.long	.Linfo_string281
	.byte	6
	.byte	229
	.long	57

	.byte	14
	.long	.Ldebug_loc74
	.long	.Linfo_string499
	.byte	6
	.byte	229
	.long	11344
	.byte	15
	.long	.Ldebug_loc75
	.long	.Linfo_string510
	.byte	6
	.byte	229
	.long	57
	.byte	0
	.byte	13
	.quad	.Lfunc_begin20
	.long	.Lfunc_end20-.Lfunc_begin20
	.byte	1
	.byte	87
	.long	.Linfo_string282
	.long	.Linfo_string283
	.byte	6
	.byte	178
	.long	10673

	.byte	14
	.long	.Ldebug_loc76
	.long	.Linfo_string499
	.byte	6
	.byte	178
	.long	11344
	.byte	0
	.byte	13
	.quad	.Lfunc_begin21
	.long	.Lfunc_end21-.Lfunc_begin21
	.byte	1
	.byte	87
	.long	.Linfo_string284
	.long	.Linfo_string285
	.byte	6
	.byte	255
	.long	2474

	.byte	14
	.long	.Ldebug_loc77
	.long	.Linfo_string499
	.byte	6
	.byte	255
	.long	11344
	.byte	22
	.long	.Ldebug_loc78
	.long	.Linfo_string168
	.byte	6
	.short	256
	.long	8005
	.byte	24
	.byte	3
	.byte	145
	.ascii	"\240\001"
	.long	.Linfo_string511
	.byte	6
	.short	257
	.long	13513
	.byte	23
	.long	.Ldebug_loc79
	.long	.Linfo_string515
	.byte	6
	.short	258
	.long	2474
	.byte	16
	.quad	.Ltmp565
	.long	.Ltmp569-.Ltmp565
	.byte	23
	.long	.Ldebug_loc80
	.long	.Linfo_string130
	.byte	6
	.short	262
	.long	2474
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin22
	.long	.Lfunc_end22-.Lfunc_begin22
	.byte	1
	.byte	87
	.long	.Linfo_string286
	.long	.Linfo_string287
	.byte	6
	.byte	171
	.long	11261

	.byte	14
	.long	.Ldebug_loc81
	.long	.Linfo_string499
	.byte	6
	.byte	171
	.long	11344
	.byte	0
	.byte	13
	.quad	.Lfunc_begin23
	.long	.Lfunc_end23-.Lfunc_begin23
	.byte	1
	.byte	87
	.long	.Linfo_string289
	.long	.Linfo_string290
	.byte	6
	.byte	194
	.long	2474

	.byte	14
	.long	.Ldebug_loc82
	.long	.Linfo_string499
	.byte	6
	.byte	194
	.long	11344
	.byte	14
	.long	.Ldebug_loc83
	.long	.Linfo_string507
	.byte	6
	.byte	195
	.long	486
	.byte	14
	.long	.Ldebug_loc84
	.long	.Linfo_string161
	.byte	6
	.byte	196
	.long	5904
	.byte	15
	.long	.Ldebug_loc85
	.long	.Linfo_string516
	.byte	6
	.byte	197
	.long	2474
	.byte	0
	.byte	13
	.quad	.Lfunc_begin24
	.long	.Lfunc_end24-.Lfunc_begin24
	.byte	1
	.byte	87
	.long	.Linfo_string291
	.long	.Linfo_string292
	.byte	6
	.byte	243
	.long	222

	.byte	14
	.long	.Ldebug_loc86
	.long	.Linfo_string499
	.byte	6
	.byte	243
	.long	11344
	.byte	0
	.byte	13
	.quad	.Lfunc_begin25
	.long	.Lfunc_end25-.Lfunc_begin25
	.byte	1
	.byte	87
	.long	.Linfo_string293
	.long	.Linfo_string294
	.byte	6
	.byte	236
	.long	1002

	.byte	14
	.long	.Ldebug_loc87
	.long	.Linfo_string499
	.byte	6
	.byte	236
	.long	11344
	.byte	15
	.long	.Ldebug_loc88
	.long	.Linfo_string517
	.byte	6
	.byte	236
	.long	1002
	.byte	0
	.byte	13
	.quad	.Lfunc_begin26
	.long	.Lfunc_end26-.Lfunc_begin26
	.byte	1
	.byte	87
	.long	.Linfo_string295
	.long	.Linfo_string296
	.byte	6
	.byte	204
	.long	2474

	.byte	14
	.long	.Ldebug_loc89
	.long	.Linfo_string499
	.byte	6
	.byte	204
	.long	11344
	.byte	17
	.byte	3
	.byte	145
	.asciz	"\360"
	.long	.Linfo_string64
	.byte	6
	.byte	205
	.long	10673
	.byte	14
	.long	.Ldebug_loc90
	.long	.Linfo_string162
	.byte	6
	.byte	206
	.long	1002
	.byte	15
	.long	.Ldebug_loc91
	.long	.Linfo_string518
	.byte	6
	.byte	207
	.long	2474
	.byte	0
	.byte	13
	.quad	.Lfunc_begin27
	.long	.Lfunc_end27-.Lfunc_begin27
	.byte	1
	.byte	87
	.long	.Linfo_string297
	.long	.Linfo_string298
	.byte	6
	.byte	164
	.long	486

	.byte	14
	.long	.Ldebug_loc92
	.long	.Linfo_string499
	.byte	6
	.byte	164
	.long	11344
	.byte	15
	.long	.Ldebug_loc93
	.long	.Linfo_string519
	.byte	6
	.byte	164
	.long	486
	.byte	0
	.byte	13
	.quad	.Lfunc_begin28
	.long	.Lfunc_end28-.Lfunc_begin28
	.byte	1
	.byte	87
	.long	.Linfo_string299
	.long	.Linfo_string300
	.byte	6
	.byte	222
	.long	10722

	.byte	14
	.long	.Ldebug_loc94
	.long	.Linfo_string499
	.byte	6
	.byte	222
	.long	11344
	.byte	15
	.long	.Ldebug_loc95
	.long	.Linfo_string520
	.byte	6
	.byte	222
	.long	10722
	.byte	0
	.byte	13
	.quad	.Lfunc_begin29
	.long	.Lfunc_end29-.Lfunc_begin29
	.byte	1
	.byte	87
	.long	.Linfo_string301
	.long	.Linfo_string302
	.byte	6
	.byte	153
	.long	222

	.byte	14
	.long	.Ldebug_loc96
	.long	.Linfo_string499
	.byte	6
	.byte	153
	.long	11344
	.byte	17
	.byte	3
	.byte	145
	.asciz	"\340"
	.long	.Linfo_string370
	.byte	6
	.byte	154
	.long	955
	.byte	0
	.byte	13
	.quad	.Lfunc_begin30
	.long	.Lfunc_end30-.Lfunc_begin30
	.byte	1
	.byte	87
	.long	.Linfo_string303
	.long	.Linfo_string304
	.byte	7
	.byte	132
	.long	11222

	.byte	14
	.long	.Ldebug_loc97
	.long	.Linfo_string350
	.byte	7
	.byte	132
	.long	12986
	.byte	14
	.long	.Ldebug_loc98
	.long	.Linfo_string507
	.byte	7
	.byte	133
	.long	486
	.byte	15
	.long	.Ldebug_loc101
	.long	.Linfo_string522
	.byte	7
	.byte	134
	.long	11256
	.byte	15
	.long	.Ldebug_loc102
	.long	.Linfo_string523
	.byte	7
	.byte	134
	.long	2474
	.byte	16
	.quad	.Ltmp844
	.long	.Ltmp857-.Ltmp844
	.byte	15
	.long	.Ldebug_loc99
	.long	.Linfo_string193
	.byte	7
	.byte	135
	.long	1002
	.byte	15
	.long	.Ldebug_loc100
	.long	.Linfo_string521
	.byte	7
	.byte	135
	.long	5911
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin31
	.long	.Lfunc_end31-.Lfunc_begin31
	.byte	1
	.byte	87
	.long	.Linfo_string305
	.long	.Linfo_string306
	.byte	7
	.byte	166
	.long	1002

	.byte	14
	.long	.Ldebug_loc103
	.long	.Linfo_string350
	.byte	7
	.byte	166
	.long	12986
	.byte	15
	.long	.Ldebug_loc104
	.long	.Linfo_string524
	.byte	7
	.byte	166
	.long	1002
	.byte	16
	.quad	.Ltmp861
	.long	.Ltmp873-.Ltmp861
	.byte	15
	.long	.Ldebug_loc105
	.long	.Linfo_string525
	.byte	7
	.byte	167
	.long	1002
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin32
	.long	.Lfunc_end32-.Lfunc_begin32
	.byte	1
	.byte	87
	.long	.Linfo_string307
	.long	.Linfo_string308
	.byte	7
	.byte	198
	.long	57

	.byte	14
	.long	.Ldebug_loc106
	.long	.Linfo_string350
	.byte	7
	.byte	198
	.long	12986
	.byte	15
	.long	.Ldebug_loc108
	.long	.Linfo_string527
	.byte	7
	.byte	198
	.long	57
	.byte	16
	.quad	.Ltmp874
	.long	.Ltmp886-.Ltmp874
	.byte	15
	.long	.Ldebug_loc107
	.long	.Linfo_string526
	.byte	7
	.byte	199
	.long	57
	.byte	18
	.long	.Ldebug_ranges5
	.byte	15
	.long	.Ldebug_loc109
	.long	.Linfo_string158
	.byte	7
	.byte	200
	.long	5916
	.byte	0
	.byte	0
	.byte	0
	.byte	25
	.long	.Linfo_string151
	.long	.Linfo_string152
	.byte	7
	.byte	27
	.long	5842

	.byte	1
	.byte	26
	.long	.Linfo_string158
	.byte	7
	.byte	27
	.long	5911
	.byte	27
	.long	.Linfo_string164
	.byte	7
	.byte	27
	.long	5842
	.byte	0
	.byte	4
	.long	.Linfo_string157
	.byte	48
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string153
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string154
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string155
	.long	5904
	.byte	4
	.byte	11
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string156
	.long	1002
	.byte	4
	.byte	11
	.byte	1
	.byte	40
	.byte	0
	.byte	6
	.long	.Linfo_string155
	.byte	7
	.byte	8
	.byte	3
	.long	5916
	.byte	4
	.long	.Linfo_string163
	.byte	48
	.byte	7
	.byte	19
	.byte	1
	.byte	5
	.long	.Linfo_string159
	.long	486
	.byte	7
	.byte	20
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string160
	.long	486
	.byte	7
	.byte	21
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string161
	.long	5904
	.byte	7
	.byte	22
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string162
	.long	1002
	.byte	7
	.byte	23
	.byte	1
	.byte	40
	.byte	0
	.byte	13
	.quad	.Lfunc_begin33
	.long	.Lfunc_end33-.Lfunc_begin33
	.byte	1
	.byte	87
	.long	.Linfo_string309
	.long	.Linfo_string310
	.byte	7
	.byte	178
	.long	10673

	.byte	14
	.long	.Ldebug_loc110
	.long	.Linfo_string350
	.byte	7
	.byte	178
	.long	12986
	.byte	15
	.long	.Ldebug_loc112
	.long	.Linfo_string528
	.byte	7
	.byte	178
	.long	10673
	.byte	16
	.quad	.Ltmp887
	.long	.Ltmp904-.Ltmp887
	.byte	15
	.long	.Ldebug_loc111
	.long	.Linfo_string64
	.byte	7
	.byte	179
	.long	10673
	.byte	16
	.quad	.Ltmp891
	.long	.Ltmp902-.Ltmp891
	.byte	27
	.long	.Linfo_string507
	.byte	7
	.byte	185
	.long	5916
	.byte	28
	.long	5803
	.quad	.Ltmp895
	.long	.Ltmp896-.Ltmp895
	.byte	7
	.byte	186
	.byte	29
	.long	5819
	.byte	30
	.long	.Ldebug_loc113
	.long	5830
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin34
	.long	.Lfunc_end34-.Lfunc_begin34
	.byte	1
	.byte	87
	.long	.Linfo_string311
	.long	.Linfo_string312
	.byte	7
	.byte	146
	.long	2474

	.byte	14
	.long	.Ldebug_loc114
	.long	.Linfo_string350
	.byte	7
	.byte	146
	.long	12986
	.byte	14
	.long	.Ldebug_loc115
	.long	.Linfo_string507
	.byte	7
	.byte	147
	.long	486
	.byte	14
	.long	.Ldebug_loc116
	.long	.Linfo_string161
	.byte	7
	.byte	148
	.long	5904
	.byte	15
	.long	.Ldebug_loc119
	.long	.Linfo_string529
	.byte	7
	.byte	149
	.long	2474
	.byte	16
	.quad	.Ltmp906
	.long	.Ltmp919-.Ltmp906
	.byte	15
	.long	.Ldebug_loc117
	.long	.Linfo_string521
	.byte	7
	.byte	150
	.long	5916
	.byte	15
	.long	.Ldebug_loc118
	.long	.Linfo_string193
	.byte	7
	.byte	150
	.long	1002
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin35
	.long	.Lfunc_end35-.Lfunc_begin35
	.byte	1
	.byte	87
	.long	.Linfo_string313
	.long	.Linfo_string314
	.byte	7
	.byte	65
	.long	2474

	.byte	14
	.long	.Ldebug_loc120
	.long	.Linfo_string350
	.byte	7
	.byte	65
	.long	12986
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\300\006"
	.long	.Linfo_string64
	.byte	7
	.byte	66
	.long	10673
	.byte	14
	.long	.Ldebug_loc121
	.long	.Linfo_string162
	.byte	7
	.byte	67
	.long	1002
	.byte	15
	.long	.Ldebug_loc126
	.long	.Linfo_string530
	.byte	7
	.byte	68
	.long	2474
	.byte	18
	.long	.Ldebug_ranges8
	.byte	15
	.long	.Ldebug_loc122
	.long	.Linfo_string507
	.byte	7
	.byte	77
	.long	5842
	.byte	18
	.long	.Ldebug_ranges7
	.byte	15
	.long	.Ldebug_loc124
	.long	.Linfo_string193
	.byte	7
	.byte	86
	.long	1002
	.byte	18
	.long	.Ldebug_ranges6
	.byte	15
	.long	.Ldebug_loc123
	.long	.Linfo_string521
	.byte	7
	.byte	112
	.long	5916
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.quad	.Ltmp961
	.long	.Ltmp965-.Ltmp961
	.byte	15
	.long	.Ldebug_loc125
	.long	.Linfo_string193
	.byte	7
	.byte	122
	.long	1002
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin36
	.long	.Lfunc_end36-.Lfunc_begin36
	.byte	1
	.byte	87
	.long	.Linfo_string315
	.long	.Linfo_string316
	.byte	7
	.byte	193
	.long	10722

	.byte	14
	.long	.Ldebug_loc127
	.long	.Linfo_string350
	.byte	7
	.byte	193
	.long	12986
	.byte	15
	.long	.Ldebug_loc128
	.long	.Linfo_string531
	.byte	7
	.byte	193
	.long	10722
	.byte	0
	.byte	13
	.quad	.Lfunc_begin37
	.long	.Lfunc_end37-.Lfunc_begin37
	.byte	1
	.byte	87
	.long	.Linfo_string317
	.long	.Linfo_string318
	.byte	1
	.byte	1
	.long	229

	.byte	14
	.long	.Ldebug_loc129
	.long	.Linfo_string472
	.byte	1
	.byte	1
	.long	217
	.byte	17
	.byte	1
	.byte	84
	.long	.Linfo_string473
	.byte	1
	.byte	1
	.long	229
	.byte	15
	.long	.Ldebug_loc130
	.long	.Linfo_string532
	.byte	1
	.byte	1
	.long	229
	.byte	0
	.byte	13
	.quad	.Lfunc_begin38
	.long	.Lfunc_end38-.Lfunc_begin38
	.byte	1
	.byte	87
	.long	.Linfo_string319
	.long	.Linfo_string320
	.byte	1
	.byte	1
	.long	1002

	.byte	14
	.long	.Ldebug_loc131
	.long	.Linfo_string475
	.byte	1
	.byte	1
	.long	217
	.byte	14
	.long	.Ldebug_loc132
	.long	.Linfo_string476
	.byte	1
	.byte	1
	.long	217
	.byte	19
	.byte	0
	.long	.Linfo_string533
	.byte	1
	.byte	1
	.long	1002
	.byte	0
	.byte	31
	.quad	.Lfunc_begin39
	.long	.Lfunc_end39-.Lfunc_begin39
	.byte	1
	.byte	87
	.long	5803
	.byte	32
	.long	.Ldebug_loc133
	.long	5819
	.byte	30
	.long	.Ldebug_loc134
	.long	5830
	.byte	0
	.byte	13
	.quad	.Lfunc_begin40
	.long	.Lfunc_end40-.Lfunc_begin40
	.byte	1
	.byte	87
	.long	.Linfo_string321
	.long	.Linfo_string322
	.byte	6
	.byte	46
	.long	11310

	.byte	14
	.long	.Ldebug_loc135
	.long	.Linfo_string168
	.byte	6
	.byte	47
	.long	8005
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\220\t"
	.long	.Linfo_string323
	.byte	6
	.byte	48
	.long	11261
	.byte	14
	.long	.Ldebug_loc136
	.long	.Linfo_string350
	.byte	6
	.byte	49
	.long	486
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\300\t"
	.long	.Linfo_string325
	.byte	6
	.byte	50
	.long	11580
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\320\t"
	.long	.Linfo_string160
	.byte	6
	.byte	51
	.long	486
	.byte	14
	.long	.Ldebug_loc137
	.long	.Linfo_string402
	.byte	6
	.byte	52
	.long	13040
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\340\t"
	.long	.Linfo_string327
	.byte	6
	.byte	53
	.long	10794
	.byte	15
	.long	.Ldebug_loc141
	.long	.Linfo_string534
	.byte	6
	.byte	54
	.long	11344
	.byte	15
	.long	.Ldebug_loc143
	.long	.Linfo_string535
	.byte	6
	.byte	54
	.long	2474
	.byte	16
	.quad	.Ltmp1009
	.long	.Ltmp1086-.Ltmp1009
	.byte	15
	.long	.Ldebug_loc138
	.long	.Linfo_string130
	.byte	6
	.byte	55
	.long	2474
	.byte	15
	.long	.Ldebug_loc139
	.long	.Linfo_string328
	.byte	6
	.byte	55
	.long	11616
	.byte	15
	.long	.Ldebug_loc140
	.long	.Linfo_string499
	.byte	6
	.byte	69
	.long	11344
	.byte	18
	.long	.Ldebug_ranges9
	.byte	15
	.long	.Ldebug_loc142
	.long	.Linfo_string130
	.byte	6
	.byte	108
	.long	2474
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin41
	.long	.Lfunc_end41-.Lfunc_begin41
	.byte	1
	.byte	87
	.long	.Linfo_string404
	.long	.Linfo_string405
	.byte	7
	.byte	37
	.long	12986

	.byte	17
	.byte	3
	.byte	145
	.ascii	"\260\002"
	.long	.Linfo_string536
	.byte	7
	.byte	38
	.long	13575
	.byte	15
	.long	.Ldebug_loc145
	.long	.Linfo_string539
	.byte	7
	.byte	39
	.long	12986
	.byte	16
	.quad	.Ltmp1087
	.long	.Ltmp1099-.Ltmp1087
	.byte	15
	.long	.Ldebug_loc144
	.long	.Linfo_string350
	.byte	7
	.byte	40
	.long	12986
	.byte	16
	.quad	.Ltmp1090
	.long	.Ltmp1097-.Ltmp1090
	.byte	15
	.long	.Ldebug_loc146
	.long	.Linfo_string521
	.byte	7
	.byte	52
	.long	5916
	.byte	0
	.byte	0
	.byte	0
	.byte	20
	.quad	.Lfunc_begin42
	.long	.Lfunc_end42-.Lfunc_begin42
	.byte	1
	.byte	87
	.long	.Linfo_string406
	.byte	6
	.byte	147
	.long	1002
	.byte	14
	.long	.Ldebug_loc147
	.long	.Linfo_string494
	.byte	6
	.byte	147
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string542
	.byte	6
	.byte	147
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin43
	.long	.Lfunc_end43-.Lfunc_begin43
	.byte	1
	.byte	87
	.long	.Linfo_string407
	.byte	6
	.byte	157
	.long	1002
	.byte	14
	.long	.Ldebug_loc148
	.long	.Linfo_string494
	.byte	6
	.byte	157
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string543
	.byte	6
	.byte	157
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin44
	.long	.Lfunc_end44-.Lfunc_begin44
	.byte	1
	.byte	87
	.long	.Linfo_string408
	.byte	6
	.byte	166
	.long	1002
	.byte	14
	.long	.Ldebug_loc149
	.long	.Linfo_string494
	.byte	6
	.byte	166
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string544
	.byte	6
	.byte	166
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin45
	.long	.Lfunc_end45-.Lfunc_begin45
	.byte	1
	.byte	87
	.long	.Linfo_string409
	.byte	6
	.byte	173
	.long	1002
	.byte	14
	.long	.Ldebug_loc150
	.long	.Linfo_string494
	.byte	6
	.byte	173
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string545
	.byte	6
	.byte	173
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin46
	.long	.Lfunc_end46-.Lfunc_begin46
	.byte	1
	.byte	87
	.long	.Linfo_string410
	.byte	6
	.byte	180
	.long	1002
	.byte	14
	.long	.Ldebug_loc151
	.long	.Linfo_string494
	.byte	6
	.byte	180
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string546
	.byte	6
	.byte	180
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin47
	.long	.Lfunc_end47-.Lfunc_begin47
	.byte	1
	.byte	87
	.long	.Linfo_string411
	.byte	6
	.byte	189
	.long	1002
	.byte	14
	.long	.Ldebug_loc152
	.long	.Linfo_string494
	.byte	6
	.byte	189
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string547
	.byte	6
	.byte	189
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin48
	.long	.Lfunc_end48-.Lfunc_begin48
	.byte	1
	.byte	87
	.long	.Linfo_string412
	.byte	6
	.byte	199
	.long	1002
	.byte	14
	.long	.Ldebug_loc153
	.long	.Linfo_string494
	.byte	6
	.byte	199
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string548
	.byte	6
	.byte	199
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin49
	.long	.Lfunc_end49-.Lfunc_begin49
	.byte	1
	.byte	87
	.long	.Linfo_string413
	.byte	6
	.byte	209
	.long	1002
	.byte	14
	.long	.Ldebug_loc154
	.long	.Linfo_string494
	.byte	6
	.byte	209
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string549
	.byte	6
	.byte	209
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin50
	.long	.Lfunc_end50-.Lfunc_begin50
	.byte	1
	.byte	87
	.long	.Linfo_string414
	.byte	6
	.byte	217
	.long	1002
	.byte	14
	.long	.Ldebug_loc155
	.long	.Linfo_string494
	.byte	6
	.byte	217
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string550
	.byte	6
	.byte	217
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin51
	.long	.Lfunc_end51-.Lfunc_begin51
	.byte	1
	.byte	87
	.long	.Linfo_string415
	.byte	6
	.byte	224
	.long	1002
	.byte	14
	.long	.Ldebug_loc156
	.long	.Linfo_string494
	.byte	6
	.byte	224
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string551
	.byte	6
	.byte	224
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin52
	.long	.Lfunc_end52-.Lfunc_begin52
	.byte	1
	.byte	87
	.long	.Linfo_string416
	.byte	6
	.byte	231
	.long	1002
	.byte	14
	.long	.Ldebug_loc157
	.long	.Linfo_string494
	.byte	6
	.byte	231
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string552
	.byte	6
	.byte	231
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin53
	.long	.Lfunc_end53-.Lfunc_begin53
	.byte	1
	.byte	87
	.long	.Linfo_string417
	.byte	6
	.byte	238
	.long	1002
	.byte	14
	.long	.Ldebug_loc158
	.long	.Linfo_string494
	.byte	6
	.byte	238
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string553
	.byte	6
	.byte	238
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin54
	.long	.Lfunc_end54-.Lfunc_begin54
	.byte	1
	.byte	87
	.long	.Linfo_string418
	.byte	6
	.byte	245
	.long	1002
	.byte	14
	.long	.Ldebug_loc159
	.long	.Linfo_string494
	.byte	6
	.byte	245
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string554
	.byte	6
	.byte	245
	.long	1002
	.byte	0
	.byte	33
	.quad	.Lfunc_begin55
	.long	.Lfunc_end55-.Lfunc_begin55
	.byte	1
	.byte	87
	.long	.Linfo_string419
	.byte	6
	.short	260
	.long	1002
	.byte	22
	.long	.Ldebug_loc160
	.long	.Linfo_string494
	.byte	6
	.short	260
	.long	13650
	.byte	34
	.byte	0
	.long	.Linfo_string555
	.byte	6
	.short	260
	.long	1002
	.byte	0
	.byte	13
	.quad	.Lfunc_begin56
	.long	.Lfunc_end56-.Lfunc_begin56
	.byte	1
	.byte	87
	.long	.Linfo_string420
	.long	.Linfo_string421
	.byte	1
	.byte	1
	.long	229

	.byte	17
	.byte	1
	.byte	85
	.long	.Linfo_string472
	.byte	1
	.byte	1
	.long	217
	.byte	17
	.byte	1
	.byte	84
	.long	.Linfo_string473
	.byte	1
	.byte	1
	.long	229
	.byte	15
	.long	.Ldebug_loc161
	.long	.Linfo_string556
	.byte	1
	.byte	1
	.long	229
	.byte	0
	.byte	13
	.quad	.Lfunc_begin57
	.long	.Lfunc_end57-.Lfunc_begin57
	.byte	1
	.byte	87
	.long	.Linfo_string422
	.long	.Linfo_string423
	.byte	1
	.byte	1
	.long	1002

	.byte	14
	.long	.Ldebug_loc162
	.long	.Linfo_string475
	.byte	1
	.byte	1
	.long	217
	.byte	14
	.long	.Ldebug_loc163
	.long	.Linfo_string476
	.byte	1
	.byte	1
	.long	217
	.byte	19
	.byte	0
	.long	.Linfo_string557
	.byte	1
	.byte	1
	.long	1002
	.byte	0
	.byte	35
	.long	.Linfo_string165
	.byte	8
	.byte	19
	.long	7971
	.byte	1
	.byte	26
	.long	.Linfo_string168
	.byte	8
	.byte	20
	.long	8005
	.byte	27
	.long	.Linfo_string201
	.byte	8
	.byte	21
	.long	486
	.byte	0
	.byte	8
	.long	.Linfo_string167
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	486
	.byte	3
	.byte	10
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	10
	.byte	8
	.byte	16
	.byte	0
	.byte	4
	.long	.Linfo_string200
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	8041
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	8046
	.byte	8
	.long	.Linfo_string199
	.byte	40
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	4
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string169
	.long	8119
	.byte	3
	.byte	4
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string195
	.long	8540
	.byte	3
	.byte	4
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string197
	.long	8570
	.byte	3
	.byte	4
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string198
	.long	8586
	.byte	3
	.byte	4
	.byte	8
	.byte	32
	.byte	0
	.byte	3
	.long	8124
	.byte	10
	.long	8135
	.byte	11
	.long	217
	.byte	0
	.byte	8
	.long	.Linfo_string194
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string170
	.long	8169
	.byte	3
	.byte	4
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string193
	.long	1002
	.byte	3
	.byte	4
	.byte	1
	.byte	24
	.byte	0
	.byte	4
	.long	.Linfo_string192
	.byte	24
	.byte	2
	.byte	4
	.byte	1
	.byte	5
	.long	.Linfo_string171
	.long	8218
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string173
	.long	8225
	.byte	2
	.byte	4
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string175
	.long	8232
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	0
	.byte	6
	.long	.Linfo_string172
	.byte	7
	.byte	8
	.byte	6
	.long	.Linfo_string174
	.byte	5
	.byte	8
	.byte	3
	.long	8237
	.byte	4
	.long	.Linfo_string191
	.byte	88
	.byte	2
	.byte	4
	.byte	1
	.byte	5
	.long	.Linfo_string119
	.long	486
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string176
	.long	8325
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string181
	.long	8426
	.byte	2
	.byte	4
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string188
	.long	8225
	.byte	2
	.byte	4
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string189
	.long	8225
	.byte	2
	.byte	4
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string190
	.long	8372
	.byte	2
	.byte	4
	.byte	8
	.byte	80
	.byte	0
	.byte	8
	.long	.Linfo_string180
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	8372
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8377
	.byte	4
	.long	.Linfo_string179
	.byte	32
	.byte	2
	.byte	4
	.byte	1
	.byte	5
	.long	.Linfo_string119
	.long	486
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string177
	.long	189
	.byte	2
	.byte	4
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string178
	.long	1002
	.byte	2
	.byte	4
	.byte	1
	.byte	24
	.byte	0
	.byte	8
	.long	.Linfo_string187
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	8473
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	8478
	.byte	4
	.long	.Linfo_string186
	.byte	16
	.byte	2
	.byte	4
	.byte	1
	.byte	5
	.long	.Linfo_string182
	.long	8225
	.byte	2
	.byte	4
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string183
	.long	196
	.byte	2
	.byte	4
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string184
	.long	1002
	.byte	2
	.byte	4
	.byte	1
	.byte	9
	.byte	5
	.long	.Linfo_string185
	.long	1002
	.byte	2
	.byte	4
	.byte	1
	.byte	10
	.byte	0
	.byte	3
	.long	8545
	.byte	10
	.long	8556
	.byte	11
	.long	217
	.byte	0
	.byte	3
	.long	8561
	.byte	36
	.long	.Linfo_string196
	.byte	0
	.byte	1
	.byte	1
	.byte	1
	.byte	3
	.long	8575
	.byte	10
	.long	2474
	.byte	11
	.long	217
	.byte	0
	.byte	3
	.long	8591
	.byte	10
	.long	8607
	.byte	11
	.long	217
	.byte	11
	.long	8607
	.byte	0
	.byte	4
	.long	.Linfo_string153
	.byte	16
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	5
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	13
	.quad	.Lfunc_begin58
	.long	.Lfunc_end58-.Lfunc_begin58
	.byte	1
	.byte	87
	.long	.Linfo_string424
	.long	.Linfo_string425
	.byte	8
	.byte	28
	.long	13083

	.byte	14
	.long	.Ldebug_loc164
	.long	.Linfo_string168
	.byte	8
	.byte	29
	.long	8005
	.byte	15
	.long	.Ldebug_loc169
	.long	.Linfo_string559
	.byte	8
	.byte	30
	.long	13117
	.byte	15
	.long	.Ldebug_loc170
	.long	.Linfo_string560
	.byte	8
	.byte	30
	.long	2474
	.byte	16
	.quad	.Ltmp1195
	.long	.Ltmp1206-.Ltmp1195
	.byte	15
	.long	.Ldebug_loc167
	.long	.Linfo_string130
	.byte	8
	.byte	31
	.long	2474
	.byte	15
	.long	.Ldebug_loc168
	.long	.Linfo_string558
	.byte	8
	.byte	36
	.long	13117
	.byte	28
	.long	7936
	.quad	.Ltmp1195
	.long	.Ltmp1198-.Ltmp1195
	.byte	8
	.byte	31
	.byte	32
	.long	.Ldebug_loc165
	.long	7948
	.byte	30
	.long	.Ldebug_loc166
	.long	7959
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin59
	.long	.Lfunc_end59-.Lfunc_begin59
	.byte	1
	.byte	87
	.long	.Linfo_string429
	.long	.Linfo_string430
	.byte	1
	.byte	1
	.long	229

	.byte	14
	.long	.Ldebug_loc171
	.long	.Linfo_string472
	.byte	1
	.byte	1
	.long	217
	.byte	17
	.byte	1
	.byte	84
	.long	.Linfo_string473
	.byte	1
	.byte	1
	.long	229
	.byte	15
	.long	.Ldebug_loc172
	.long	.Linfo_string561
	.byte	1
	.byte	1
	.long	229
	.byte	0
	.byte	13
	.quad	.Lfunc_begin60
	.long	.Lfunc_end60-.Lfunc_begin60
	.byte	1
	.byte	87
	.long	.Linfo_string431
	.long	.Linfo_string432
	.byte	1
	.byte	1
	.long	1002

	.byte	14
	.long	.Ldebug_loc173
	.long	.Linfo_string475
	.byte	1
	.byte	1
	.long	217
	.byte	14
	.long	.Ldebug_loc174
	.long	.Linfo_string476
	.byte	1
	.byte	1
	.long	217
	.byte	19
	.byte	0
	.long	.Linfo_string562
	.byte	1
	.byte	1
	.long	1002
	.byte	0
	.byte	13
	.quad	.Lfunc_begin61
	.long	.Lfunc_end61-.Lfunc_begin61
	.byte	1
	.byte	87
	.long	.Linfo_string433
	.long	.Linfo_string434
	.byte	9
	.byte	25
	.long	486

	.byte	14
	.long	.Ldebug_loc175
	.long	.Linfo_string469
	.byte	9
	.byte	25
	.long	13145
	.byte	15
	.long	.Ldebug_loc176
	.long	.Linfo_string563
	.byte	9
	.byte	25
	.long	486
	.byte	0
	.byte	13
	.quad	.Lfunc_begin62
	.long	.Lfunc_end62-.Lfunc_begin62
	.byte	1
	.byte	87
	.long	.Linfo_string435
	.long	.Linfo_string436
	.byte	9
	.byte	59
	.long	2474

	.byte	14
	.long	.Ldebug_loc177
	.long	.Linfo_string564
	.byte	9
	.byte	59
	.long	13145
	.byte	14
	.long	.Ldebug_loc178
	.long	.Linfo_string564
	.byte	9
	.byte	60
	.long	8005
	.byte	15
	.long	.Ldebug_loc179
	.long	.Linfo_string469
	.byte	9
	.byte	59
	.long	13676
	.byte	15
	.long	.Ldebug_loc180
	.long	.Linfo_string565
	.byte	9
	.byte	61
	.long	2474
	.byte	15
	.long	.Ldebug_loc185
	.long	.Linfo_string168
	.byte	9
	.byte	60
	.long	13837
	.byte	16
	.quad	.Ltmp1287
	.long	.Ltmp1323-.Ltmp1287
	.byte	15
	.long	.Ldebug_loc181
	.long	.Linfo_string130
	.byte	9
	.byte	66
	.long	2474
	.byte	15
	.long	.Ldebug_loc182
	.long	.Linfo_string566
	.byte	9
	.byte	66
	.long	13681
	.byte	16
	.quad	.Ltmp1305
	.long	.Ltmp1323-.Ltmp1305
	.byte	15
	.long	.Ldebug_loc183
	.long	.Linfo_string130
	.byte	9
	.byte	73
	.long	2474
	.byte	15
	.long	.Ldebug_loc184
	.long	.Linfo_string327
	.byte	9
	.byte	73
	.long	13832
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin63
	.long	.Lfunc_end63-.Lfunc_begin63
	.byte	1
	.byte	87
	.long	.Linfo_string437
	.long	.Linfo_string438
	.byte	9
	.byte	49
	.long	222

	.byte	14
	.long	.Ldebug_loc186
	.long	.Linfo_string469
	.byte	9
	.byte	49
	.long	13145
	.byte	14
	.long	.Ldebug_loc187
	.long	.Linfo_string168
	.byte	9
	.byte	50
	.long	8005
	.byte	14
	.long	.Ldebug_loc188
	.long	.Linfo_string323
	.byte	9
	.byte	51
	.long	11344
	.byte	0
	.byte	13
	.quad	.Lfunc_begin64
	.long	.Lfunc_end64-.Lfunc_begin64
	.byte	1
	.byte	87
	.long	.Linfo_string439
	.long	.Linfo_string440
	.byte	9
	.byte	148
	.long	10575

	.byte	14
	.long	.Ldebug_loc189
	.long	.Linfo_string469
	.byte	9
	.byte	148
	.long	13145
	.byte	14
	.long	.Ldebug_loc190
	.long	.Linfo_string168
	.byte	9
	.byte	149
	.long	8005
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\220\004"
	.long	.Linfo_string488
	.byte	9
	.byte	150
	.long	13451
	.byte	37
	.byte	7
	.byte	147
	.byte	17
	.byte	145
	.asciz	"\340"
	.byte	147
	.byte	47
	.long	.Linfo_string571
	.byte	9
	.byte	151
	.long	10575
	.byte	16
	.quad	.Ltmp1401
	.long	.Ltmp1445-.Ltmp1401
	.byte	15
	.long	.Ldebug_loc191
	.long	.Linfo_string161
	.byte	9
	.byte	175
	.long	11256
	.byte	15
	.long	.Ldebug_loc192
	.long	.Linfo_string130
	.byte	9
	.byte	175
	.long	2474
	.byte	16
	.quad	.Ltmp1431
	.long	.Ltmp1443-.Ltmp1431
	.byte	27
	.long	.Linfo_string130
	.byte	9
	.byte	197
	.long	2474
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin65
	.long	.Lfunc_end65-.Lfunc_begin65
	.byte	1
	.byte	87
	.long	.Linfo_string441
	.long	.Linfo_string442
	.byte	9
	.byte	219
	.long	10575

	.byte	14
	.long	.Ldebug_loc193
	.long	.Linfo_string469
	.byte	9
	.byte	219
	.long	13145
	.byte	14
	.long	.Ldebug_loc194
	.long	.Linfo_string168
	.byte	9
	.byte	220
	.long	8005
	.byte	17
	.byte	3
	.byte	145
	.ascii	"\300\004"
	.long	.Linfo_string488
	.byte	9
	.byte	221
	.long	13451
	.byte	37
	.byte	7
	.byte	147
	.byte	17
	.byte	145
	.asciz	"\360"
	.byte	147
	.byte	47
	.long	.Linfo_string572
	.byte	9
	.byte	222
	.long	10575
	.byte	18
	.long	.Ldebug_ranges11
	.byte	15
	.long	.Ldebug_loc195
	.long	.Linfo_string507
	.byte	9
	.byte	236
	.long	486
	.byte	18
	.long	.Ldebug_ranges10
	.byte	15
	.long	.Ldebug_loc196
	.long	.Linfo_string130
	.byte	9
	.byte	237
	.long	2474
	.byte	15
	.long	.Ldebug_loc197
	.long	.Linfo_string161
	.byte	9
	.byte	237
	.long	11256
	.byte	0
	.byte	0
	.byte	16
	.quad	.Ltmp1522
	.long	.Ltmp1527-.Ltmp1522
	.byte	38
	.long	.Linfo_string130
	.byte	9
	.short	260
	.long	2474
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin66
	.long	.Lfunc_end66-.Lfunc_begin66
	.byte	1
	.byte	87
	.long	.Linfo_string443
	.long	.Linfo_string444
	.byte	9
	.byte	137
	.long	10575

	.byte	17
	.byte	1
	.byte	84
	.long	.Linfo_string469
	.byte	9
	.byte	137
	.long	13145
	.byte	14
	.long	.Ldebug_loc198
	.long	.Linfo_string168
	.byte	9
	.byte	138
	.long	8005
	.byte	17
	.byte	2
	.byte	145
	.byte	8
	.long	.Linfo_string488
	.byte	9
	.byte	139
	.long	13451
	.byte	0
	.byte	13
	.quad	.Lfunc_begin67
	.long	.Lfunc_end67-.Lfunc_begin67
	.byte	1
	.byte	87
	.long	.Linfo_string445
	.long	.Linfo_string446
	.byte	9
	.byte	84
	.long	2474

	.byte	14
	.long	.Ldebug_loc199
	.long	.Linfo_string469
	.byte	9
	.byte	84
	.long	13145
	.byte	14
	.long	.Ldebug_loc200
	.long	.Linfo_string168
	.byte	9
	.byte	85
	.long	8005
	.byte	14
	.long	.Ldebug_loc201
	.long	.Linfo_string327
	.byte	9
	.byte	86
	.long	10794
	.byte	37
	.byte	6
	.byte	147
	.byte	17
	.byte	145
	.byte	48
	.byte	147
	.byte	47
	.long	.Linfo_string491
	.byte	9
	.byte	100
	.long	10575
	.byte	15
	.long	.Ldebug_loc202
	.long	.Linfo_string573
	.byte	9
	.byte	87
	.long	2474
	.byte	16
	.quad	.Ltmp1612
	.long	.Ltmp1677-.Ltmp1612
	.byte	15
	.long	.Ldebug_loc203
	.long	.Linfo_string488
	.byte	9
	.byte	93
	.long	13842
	.byte	15
	.long	.Ldebug_loc204
	.long	.Linfo_string492
	.byte	9
	.byte	90
	.long	12421
	.byte	15
	.long	.Ldebug_loc206
	.long	.Linfo_string490
	.byte	9
	.byte	91
	.long	12661
	.byte	16
	.quad	.Ltmp1626
	.long	.Ltmp1630-.Ltmp1626
	.byte	15
	.long	.Ldebug_loc205
	.long	.Linfo_string130
	.byte	9
	.byte	94
	.long	2474
	.byte	0
	.byte	16
	.quad	.Ltmp1670
	.long	.Ltmp1677-.Ltmp1670
	.byte	15
	.long	.Ldebug_loc207
	.long	.Linfo_string130
	.byte	9
	.byte	127
	.long	2474
	.byte	0
	.byte	0
	.byte	0
	.byte	13
	.quad	.Lfunc_begin68
	.long	.Lfunc_end68-.Lfunc_begin68
	.byte	1
	.byte	87
	.long	.Linfo_string447
	.long	.Linfo_string448
	.byte	9
	.byte	30
	.long	13145

	.byte	14
	.long	.Ldebug_loc208
	.long	.Linfo_string168
	.byte	9
	.byte	31
	.long	8005
	.byte	14
	.long	.Ldebug_loc209
	.long	.Linfo_string324
	.byte	9
	.byte	32
	.long	486
	.byte	15
	.long	.Ldebug_loc210
	.long	.Linfo_string574
	.byte	9
	.byte	33
	.long	13145
	.byte	0
	.byte	20
	.quad	.Lfunc_begin69
	.long	.Lfunc_end69-.Lfunc_begin69
	.byte	1
	.byte	87
	.long	.Linfo_string451
	.byte	9
	.byte	54
	.long	1002
	.byte	14
	.long	.Ldebug_loc211
	.long	.Linfo_string494
	.byte	9
	.byte	54
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string575
	.byte	9
	.byte	54
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin70
	.long	.Lfunc_end70-.Lfunc_begin70
	.byte	1
	.byte	87
	.long	.Linfo_string452
	.byte	9
	.byte	70
	.long	1002
	.byte	14
	.long	.Ldebug_loc212
	.long	.Linfo_string494
	.byte	9
	.byte	70
	.long	13847
	.byte	19
	.byte	0
	.long	.Linfo_string577
	.byte	9
	.byte	70
	.long	1002
	.byte	0
	.byte	39
	.quad	.Lfunc_begin71
	.long	.Lfunc_end71-.Lfunc_begin71
	.byte	1
	.byte	87
	.long	.Linfo_string453
	.byte	9
	.byte	77
	.long	222
	.byte	20
	.quad	.Lfunc_begin72
	.long	.Lfunc_end72-.Lfunc_begin72
	.byte	1
	.byte	87
	.long	.Linfo_string454
	.byte	9
	.byte	77
	.long	222
	.byte	14
	.long	.Ldebug_loc213
	.long	.Linfo_string494
	.byte	9
	.byte	77
	.long	13873
	.byte	0
	.byte	20
	.quad	.Lfunc_begin73
	.long	.Lfunc_end73-.Lfunc_begin73
	.byte	1
	.byte	87
	.long	.Linfo_string455
	.byte	9
	.byte	88
	.long	1002
	.byte	14
	.long	.Ldebug_loc214
	.long	.Linfo_string494
	.byte	9
	.byte	88
	.long	13487
	.byte	19
	.byte	0
	.long	.Linfo_string580
	.byte	9
	.byte	88
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin74
	.long	.Lfunc_end74-.Lfunc_begin74
	.byte	1
	.byte	87
	.long	.Linfo_string456
	.byte	9
	.byte	153
	.long	1002
	.byte	14
	.long	.Ldebug_loc215
	.long	.Linfo_string494
	.byte	9
	.byte	153
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string581
	.byte	9
	.byte	153
	.long	1002
	.byte	0
	.byte	20
	.quad	.Lfunc_begin75
	.long	.Lfunc_end75-.Lfunc_begin75
	.byte	1
	.byte	87
	.long	.Linfo_string457
	.byte	9
	.byte	224
	.long	1002
	.byte	14
	.long	.Ldebug_loc216
	.long	.Linfo_string494
	.byte	9
	.byte	224
	.long	13650
	.byte	19
	.byte	0
	.long	.Linfo_string582
	.byte	9
	.byte	224
	.long	1002
	.byte	0
	.byte	8
	.long	.Linfo_string212
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	10350
	.byte	3
	.byte	45
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	45
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	10355
	.byte	4
	.long	.Linfo_string211
	.byte	48
	.byte	2
	.byte	33
	.byte	1
	.byte	5
	.long	.Linfo_string208
	.long	8005
	.byte	2
	.byte	34
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string209
	.long	57
	.byte	2
	.byte	35
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string210
	.long	1016
	.byte	2
	.byte	36
	.byte	8
	.byte	24
	.byte	0
	.byte	8
	.long	.Linfo_string223
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	1063
	.byte	3
	.byte	29
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	29
	.byte	8
	.byte	8
	.byte	0
	.byte	8
	.long	.Linfo_string229
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	10472
	.byte	3
	.byte	48
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	48
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	10477
	.byte	4
	.long	.Linfo_string228
	.byte	32
	.byte	5
	.byte	22
	.byte	1
	.byte	5
	.long	.Linfo_string226
	.long	10500
	.byte	5
	.byte	23
	.byte	8
	.byte	0
	.byte	0
	.byte	4
	.long	.Linfo_string226
	.byte	32
	.byte	5
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string157
	.long	486
	.byte	5
	.byte	17
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string227
	.long	486
	.byte	5
	.byte	18
	.byte	8
	.byte	16
	.byte	0
	.byte	8
	.long	.Linfo_string250
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	10570
	.byte	3
	.byte	22
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	22
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	10575
	.byte	4
	.long	.Linfo_string249
	.byte	96
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string236
	.long	10637
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string238
	.long	1002
	.byte	4
	.byte	11
	.byte	1
	.byte	16
	.byte	5
	.long	.Linfo_string239
	.long	10673
	.byte	4
	.byte	11
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string131
	.long	10758
	.byte	4
	.byte	11
	.byte	8
	.byte	64
	.byte	0
	.byte	4
	.long	.Linfo_string237
	.byte	16
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string24
	.long	522
	.byte	4
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string25
	.long	189
	.byte	4
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	4
	.long	.Linfo_string246
	.byte	40
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string240
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string241
	.long	10722
	.byte	4
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string245
	.long	57
	.byte	4
	.byte	11
	.byte	8
	.byte	32
	.byte	0
	.byte	4
	.long	.Linfo_string244
	.byte	16
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string242
	.long	189
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string243
	.long	189
	.byte	4
	.byte	11
	.byte	8
	.byte	8
	.byte	0
	.byte	4
	.long	.Linfo_string131
	.byte	32
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string247
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string248
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	16
	.byte	0
	.byte	4
	.long	.Linfo_string268
	.byte	16
	.byte	4
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	10830
	.byte	4
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	4
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	10835
	.byte	8
	.long	.Linfo_string267
	.byte	72
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string256
	.long	8570
	.byte	3
	.byte	7
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string257
	.long	10960
	.byte	3
	.byte	7
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string262
	.long	11064
	.byte	3
	.byte	7
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string263
	.long	10960
	.byte	3
	.byte	7
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string264
	.long	11119
	.byte	3
	.byte	7
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string265
	.long	11119
	.byte	3
	.byte	7
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string266
	.long	11119
	.byte	3
	.byte	7
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string145
	.long	11064
	.byte	3
	.byte	7
	.byte	8
	.byte	64
	.byte	0
	.byte	3
	.long	10965
	.byte	10
	.long	10976
	.byte	11
	.long	217
	.byte	0
	.byte	4
	.long	.Linfo_string261
	.byte	16
	.byte	4
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	11012
	.byte	4
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	4
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	11017
	.byte	8
	.long	.Linfo_string260
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string258
	.long	2549
	.byte	3
	.byte	7
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string259
	.long	2549
	.byte	3
	.byte	7
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	11069
	.byte	10
	.long	11085
	.byte	11
	.long	217
	.byte	11
	.long	955
	.byte	0
	.byte	8
	.long	.Linfo_string147
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string146
	.long	189
	.byte	3
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string130
	.long	2474
	.byte	3
	.byte	7
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	11124
	.byte	10
	.long	2474
	.byte	11
	.long	217
	.byte	11
	.long	8169
	.byte	0
	.byte	8
	.long	.Linfo_string271
	.byte	24
	.byte	1
	.byte	40
	.long	.Linfo_string166
	.long	11176
	.byte	3
	.short	277
	.byte	8
	.byte	0
	.byte	40
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.short	277
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	10758
	.byte	8
	.long	.Linfo_string274
	.byte	24
	.byte	1
	.byte	40
	.long	.Linfo_string166
	.long	11217
	.byte	3
	.short	289
	.byte	8
	.byte	0
	.byte	40
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.short	289
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	10673
	.byte	8
	.long	.Linfo_string277
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	11256
	.byte	3
	.byte	187
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	187
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	5904
	.byte	4
	.long	.Linfo_string288
	.byte	48
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string153
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string157
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string227
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	32
	.byte	0
	.byte	8
	.long	.Linfo_string403
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	11344
	.byte	3
	.byte	54
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	54
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	11349
	.byte	4
	.long	.Linfo_string288
	.byte	240
	.byte	6
	.byte	18
	.byte	1
	.byte	5
	.long	.Linfo_string323
	.long	11261
	.byte	6
	.byte	19
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string324
	.long	486
	.byte	6
	.byte	21
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string325
	.long	11580
	.byte	6
	.byte	22
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string160
	.long	486
	.byte	6
	.byte	23
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string327
	.long	10794
	.byte	6
	.byte	25
	.byte	8
	.byte	96
	.byte	5
	.long	.Linfo_string328
	.long	11616
	.byte	6
	.byte	26
	.byte	8
	.byte	112
	.byte	5
	.long	.Linfo_string367
	.long	10794
	.byte	6
	.byte	28
	.byte	8
	.byte	120
	.byte	5
	.long	.Linfo_string368
	.long	12421
	.byte	6
	.byte	29
	.byte	8
	.byte	136
	.byte	5
	.long	.Linfo_string382
	.long	10794
	.byte	6
	.byte	30
	.byte	8
	.byte	144
	.byte	5
	.long	.Linfo_string383
	.long	12661
	.byte	6
	.byte	31
	.byte	8
	.byte	160
	.byte	5
	.long	.Linfo_string395
	.long	10794
	.byte	6
	.byte	32
	.byte	8
	.byte	168
	.byte	5
	.long	.Linfo_string396
	.long	12421
	.byte	6
	.byte	33
	.byte	8
	.byte	184
	.byte	5
	.long	.Linfo_string397
	.long	10794
	.byte	6
	.byte	34
	.byte	8
	.byte	192
	.byte	5
	.long	.Linfo_string64
	.long	12986
	.byte	6
	.byte	36
	.byte	8
	.byte	208
	.byte	5
	.long	.Linfo_string401
	.long	1002
	.byte	6
	.byte	38
	.byte	1
	.byte	216
	.byte	5
	.long	.Linfo_string402
	.long	13040
	.byte	6
	.byte	39
	.byte	8
	.byte	224
	.byte	5
	.long	.Linfo_string369
	.long	13078
	.byte	6
	.byte	41
	.byte	8
	.byte	232
	.byte	0
	.byte	4
	.long	.Linfo_string326
	.byte	16
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string24
	.long	522
	.byte	4
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string25
	.long	189
	.byte	4
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	11621
	.byte	4
	.long	.Linfo_string288
	.byte	176
	.byte	6
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string329
	.long	754
	.byte	6
	.byte	11
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string330
	.long	754
	.byte	6
	.byte	11
	.byte	4
	.byte	4
	.byte	5
	.long	.Linfo_string331
	.long	210
	.byte	6
	.byte	11
	.byte	4
	.byte	8
	.byte	5
	.long	.Linfo_string332
	.long	11904
	.byte	6
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string340
	.long	12004
	.byte	6
	.byte	11
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string327
	.long	12084
	.byte	6
	.byte	11
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string347
	.long	12240
	.byte	6
	.byte	11
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string353
	.long	57
	.byte	6
	.byte	11
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string354
	.long	210
	.byte	6
	.byte	11
	.byte	4
	.byte	64
	.byte	5
	.long	.Linfo_string355
	.long	1068
	.byte	6
	.byte	11
	.byte	4
	.byte	68
	.byte	5
	.long	.Linfo_string356
	.long	57
	.byte	6
	.byte	11
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string357
	.long	57
	.byte	6
	.byte	11
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string358
	.long	1068
	.byte	6
	.byte	11
	.byte	4
	.byte	96
	.byte	5
	.long	.Linfo_string359
	.long	8556
	.byte	6
	.byte	11
	.byte	8
	.byte	104
	.byte	5
	.long	.Linfo_string360
	.long	8556
	.byte	6
	.byte	11
	.byte	8
	.byte	112
	.byte	5
	.long	.Linfo_string361
	.long	8556
	.byte	6
	.byte	11
	.byte	8
	.byte	120
	.byte	5
	.long	.Linfo_string362
	.long	8556
	.byte	6
	.byte	11
	.byte	8
	.byte	128
	.byte	5
	.long	.Linfo_string363
	.long	1002
	.byte	6
	.byte	11
	.byte	1
	.byte	136
	.byte	5
	.long	.Linfo_string364
	.long	2474
	.byte	6
	.byte	11
	.byte	8
	.byte	144
	.byte	5
	.long	.Linfo_string365
	.long	8556
	.byte	6
	.byte	11
	.byte	8
	.byte	160
	.byte	5
	.long	.Linfo_string366
	.long	1068
	.byte	6
	.byte	11
	.byte	4
	.byte	168
	.byte	0
	.byte	3
	.long	11909
	.byte	4
	.long	.Linfo_string228
	.byte	56
	.byte	6
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string333
	.long	189
	.byte	6
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string334
	.long	1002
	.byte	6
	.byte	11
	.byte	1
	.byte	8
	.byte	5
	.long	.Linfo_string335
	.long	11997
	.byte	6
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string337
	.long	11997
	.byte	6
	.byte	11
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string338
	.long	210
	.byte	6
	.byte	11
	.byte	4
	.byte	32
	.byte	5
	.long	.Linfo_string339
	.long	2595
	.byte	6
	.byte	11
	.byte	8
	.byte	40
	.byte	0
	.byte	6
	.long	.Linfo_string336
	.byte	5
	.byte	8
	.byte	3
	.long	12009
	.byte	4
	.long	.Linfo_string344
	.byte	72
	.byte	6
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string63
	.long	1068
	.byte	6
	.byte	11
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string49
	.long	486
	.byte	6
	.byte	11
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string341
	.long	189
	.byte	6
	.byte	11
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string342
	.long	2595
	.byte	6
	.byte	11
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string343
	.long	955
	.byte	6
	.byte	11
	.byte	8
	.byte	48
	.byte	0
	.byte	4
	.long	.Linfo_string346
	.byte	16
	.byte	6
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	12120
	.byte	6
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	6
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	12125
	.byte	8
	.long	.Linfo_string345
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string256
	.long	8570
	.byte	3
	.byte	11
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string262
	.long	12185
	.byte	3
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string145
	.long	2670
	.byte	3
	.byte	11
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	12190
	.byte	10
	.long	12206
	.byte	11
	.long	217
	.byte	11
	.long	955
	.byte	0
	.byte	8
	.long	.Linfo_string147
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string146
	.long	189
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string130
	.long	2474
	.byte	3
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	12245
	.byte	4
	.long	.Linfo_string349
	.byte	88
	.byte	6
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string343
	.long	955
	.byte	6
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string348
	.long	12346
	.byte	6
	.byte	11
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string104
	.long	189
	.byte	6
	.byte	11
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string350
	.long	189
	.byte	6
	.byte	11
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string130
	.long	2474
	.byte	6
	.byte	11
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string351
	.long	189
	.byte	6
	.byte	11
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string352
	.long	189
	.byte	6
	.byte	11
	.byte	8
	.byte	80
	.byte	0
	.byte	4
	.long	.Linfo_string349
	.byte	16
	.byte	5
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	12382
	.byte	5
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	5
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	12387
	.byte	8
	.long	.Linfo_string148
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string262
	.long	12185
	.byte	3
	.byte	5
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	12426
	.byte	4
	.long	.Linfo_string381
	.byte	128
	.byte	4
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string369
	.long	1068
	.byte	4
	.byte	5
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string104
	.long	12346
	.byte	4
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string343
	.long	12553
	.byte	4
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string372
	.long	57
	.byte	4
	.byte	5
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string373
	.long	57
	.byte	4
	.byte	5
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string374
	.long	57
	.byte	4
	.byte	5
	.byte	8
	.byte	72
	.byte	5
	.long	.Linfo_string375
	.long	12589
	.byte	4
	.byte	5
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string380
	.long	955
	.byte	4
	.byte	5
	.byte	8
	.byte	88
	.byte	5
	.long	.Linfo_string130
	.long	2474
	.byte	4
	.byte	5
	.byte	8
	.byte	112
	.byte	0
	.byte	4
	.long	.Linfo_string371
	.byte	32
	.byte	4
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string370
	.long	955
	.byte	4
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string177
	.long	189
	.byte	4
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	12594
	.byte	4
	.long	.Linfo_string379
	.byte	32
	.byte	4
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string376
	.long	217
	.byte	4
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string72
	.long	12656
	.byte	4
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string377
	.long	189
	.byte	4
	.byte	5
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string378
	.long	217
	.byte	4
	.byte	5
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	12553
	.byte	3
	.long	12666
	.byte	4
	.long	.Linfo_string394
	.byte	160
	.byte	4
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string369
	.long	1068
	.byte	4
	.byte	5
	.byte	4
	.byte	0
	.byte	5
	.long	.Linfo_string350
	.long	12767
	.byte	4
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string385
	.long	57
	.byte	4
	.byte	5
	.byte	8
	.byte	32
	.byte	5
	.long	.Linfo_string386
	.long	12819
	.byte	4
	.byte	5
	.byte	8
	.byte	40
	.byte	5
	.long	.Linfo_string375
	.long	12819
	.byte	4
	.byte	5
	.byte	8
	.byte	48
	.byte	5
	.long	.Linfo_string393
	.long	12917
	.byte	4
	.byte	5
	.byte	8
	.byte	56
	.byte	5
	.long	.Linfo_string130
	.long	2474
	.byte	4
	.byte	5
	.byte	8
	.byte	144
	.byte	0
	.byte	8
	.long	.Linfo_string384
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string29
	.long	12814
	.byte	3
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string36
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string37
	.long	189
	.byte	3
	.byte	1
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	2595
	.byte	3
	.long	12824
	.byte	4
	.long	.Linfo_string392
	.byte	56
	.byte	4
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string387
	.long	217
	.byte	4
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string72
	.long	12912
	.byte	4
	.byte	5
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string391
	.long	1002
	.byte	4
	.byte	5
	.byte	1
	.byte	16
	.byte	5
	.long	.Linfo_string377
	.long	189
	.byte	4
	.byte	5
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string343
	.long	12973
	.byte	4
	.byte	5
	.byte	1
	.byte	32
	.byte	5
	.long	.Linfo_string378
	.long	217
	.byte	4
	.byte	5
	.byte	8
	.byte	48
	.byte	0
	.byte	3
	.long	12917
	.byte	4
	.long	.Linfo_string390
	.byte	88
	.byte	4
	.byte	5
	.byte	1
	.byte	5
	.long	.Linfo_string370
	.long	955
	.byte	4
	.byte	5
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string388
	.long	12953
	.byte	4
	.byte	5
	.byte	1
	.byte	24
	.byte	0
	.byte	41
	.long	196
	.byte	42
	.long	12966
	.byte	0
	.byte	64
	.byte	0
	.byte	43
	.long	.Linfo_string389
	.byte	8
	.byte	7
	.byte	41
	.long	196
	.byte	42
	.long	12966
	.byte	0
	.byte	9
	.byte	0
	.byte	3
	.long	12991
	.byte	4
	.long	.Linfo_string400
	.byte	40
	.byte	7
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string159
	.long	486
	.byte	7
	.byte	12
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string398
	.long	10722
	.byte	7
	.byte	14
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string399
	.long	57
	.byte	7
	.byte	15
	.byte	8
	.byte	32
	.byte	0
	.byte	3
	.long	13045
	.byte	4
	.long	.Linfo_string115
	.byte	8
	.byte	6
	.byte	39
	.byte	1
	.byte	5
	.long	.Linfo_string114
	.long	13068
	.byte	6
	.byte	39
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	13073
	.byte	44
	.long	222
	.byte	3
	.long	1068
	.byte	8
	.long	.Linfo_string428
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	13117
	.byte	3
	.byte	30
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	30
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	13122
	.byte	4
	.long	.Linfo_string427
	.byte	16
	.byte	8
	.byte	10
	.byte	1
	.byte	5
	.long	.Linfo_string426
	.long	486
	.byte	8
	.byte	11
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	13150
	.byte	4
	.long	.Linfo_string450
	.byte	48
	.byte	9
	.byte	17
	.byte	1
	.byte	5
	.long	.Linfo_string324
	.long	486
	.byte	9
	.byte	18
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string323
	.long	11344
	.byte	9
	.byte	19
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string449
	.long	486
	.byte	9
	.byte	20
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string369
	.long	13078
	.byte	9
	.byte	21
	.byte	8
	.byte	40
	.byte	0
	.byte	4
	.long	.Linfo_string426
	.byte	16
	.byte	2
	.byte	15
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	13248
	.byte	2
	.byte	15
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	13253
	.byte	8
	.long	.Linfo_string465
	.byte	40
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	15
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string460
	.long	13326
	.byte	3
	.byte	15
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string461
	.long	13347
	.byte	3
	.byte	15
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string462
	.long	13368
	.byte	3
	.byte	15
	.byte	8
	.byte	24
	.byte	5
	.long	.Linfo_string464
	.long	13420
	.byte	3
	.byte	15
	.byte	8
	.byte	32
	.byte	0
	.byte	3
	.long	13331
	.byte	10
	.long	2474
	.byte	11
	.long	217
	.byte	11
	.long	8005
	.byte	0
	.byte	3
	.long	13352
	.byte	10
	.long	222
	.byte	11
	.long	217
	.byte	11
	.long	8005
	.byte	0
	.byte	3
	.long	13373
	.byte	10
	.long	13384
	.byte	11
	.long	217
	.byte	0
	.byte	4
	.long	.Linfo_string463
	.byte	16
	.byte	2
	.byte	12
	.byte	1
	.byte	5
	.long	.Linfo_string24
	.long	522
	.byte	2
	.byte	1
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string25
	.long	189
	.byte	2
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	13425
	.byte	10
	.long	2474
	.byte	11
	.long	217
	.byte	11
	.long	8005
	.byte	11
	.long	1016
	.byte	11
	.long	57
	.byte	0
	.byte	4
	.long	.Linfo_string426
	.byte	40
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string236
	.long	10637
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string210
	.long	1016
	.byte	4
	.byte	11
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	13492
	.byte	8
	.long	.Linfo_string496
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string495
	.long	10794
	.byte	3
	.byte	34
	.byte	8
	.byte	0
	.byte	0
	.byte	4
	.long	.Linfo_string514
	.byte	88
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string240
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string512
	.long	11261
	.byte	4
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string241
	.long	10722
	.byte	4
	.byte	11
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string513
	.long	57
	.byte	4
	.byte	11
	.byte	8
	.byte	80
	.byte	0
	.byte	4
	.long	.Linfo_string538
	.byte	112
	.byte	4
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string240
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string512
	.long	11261
	.byte	4
	.byte	11
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string537
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	64
	.byte	5
	.long	.Linfo_string236
	.long	11580
	.byte	4
	.byte	11
	.byte	8
	.byte	80
	.byte	5
	.long	.Linfo_string154
	.long	486
	.byte	4
	.byte	11
	.byte	8
	.byte	96
	.byte	0
	.byte	3
	.long	13655
	.byte	8
	.long	.Linfo_string541
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string540
	.long	13078
	.byte	3
	.byte	147
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	13145
	.byte	4
	.long	.Linfo_string570
	.byte	16
	.byte	4
	.byte	7
	.byte	1
	.byte	5
	.long	.Linfo_string105
	.long	13717
	.byte	4
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string133
	.long	217
	.byte	4
	.byte	1
	.byte	8
	.byte	8
	.byte	0
	.byte	3
	.long	13722
	.byte	8
	.long	.Linfo_string569
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string106
	.long	1961
	.byte	3
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string567
	.long	13782
	.byte	3
	.byte	7
	.byte	8
	.byte	8
	.byte	5
	.long	.Linfo_string261
	.long	10960
	.byte	3
	.byte	7
	.byte	8
	.byte	16
	.byte	5
	.long	.Linfo_string256
	.long	8570
	.byte	3
	.byte	7
	.byte	8
	.byte	24
	.byte	0
	.byte	3
	.long	13787
	.byte	10
	.long	13798
	.byte	11
	.long	217
	.byte	0
	.byte	8
	.long	.Linfo_string568
	.byte	32
	.byte	1
	.byte	5
	.long	.Linfo_string166
	.long	10794
	.byte	3
	.byte	7
	.byte	8
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	2474
	.byte	3
	.byte	7
	.byte	8
	.byte	16
	.byte	0
	.byte	3
	.long	10794
	.byte	3
	.long	8005
	.byte	3
	.long	13451
	.byte	3
	.long	13852
	.byte	8
	.long	.Linfo_string576
	.byte	16
	.byte	1
	.byte	5
	.long	.Linfo_string495
	.long	13681
	.byte	3
	.byte	70
	.byte	8
	.byte	0
	.byte	0
	.byte	3
	.long	13878
	.byte	8
	.long	.Linfo_string579
	.byte	8
	.byte	1
	.byte	5
	.long	.Linfo_string578
	.long	13040
	.byte	3
	.byte	77
	.byte	8
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp53
	.quad	.Ltmp60
	.quad	.Ltmp66
	.quad	.Ltmp74
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp50
	.quad	.Ltmp86
	.quad	.Ltmp92
	.quad	.Ltmp94
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp152
	.quad	.Ltmp158
	.quad	.Ltmp166
	.quad	.Ltmp167
	.quad	.Ltmp168
	.quad	.Ltmp170
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp377
	.quad	.Ltmp383
	.quad	.Ltmp387
	.quad	.Ltmp388
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp390
	.quad	.Ltmp396
	.quad	.Ltmp400
	.quad	.Ltmp401
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp875
	.quad	.Ltmp883
	.quad	.Ltmp885
	.quad	.Ltmp886
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp937
	.quad	.Ltmp943
	.quad	.Ltmp952
	.quad	.Ltmp954
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp935
	.quad	.Ltmp956
	.quad	.Ltmp972
	.quad	.Ltmp974
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp925
	.quad	.Ltmp958
	.quad	.Ltmp970
	.quad	.Ltmp974
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp1049
	.quad	.Ltmp1050
	.quad	.Ltmp1052
	.quad	.Ltmp1056
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp1508
	.quad	.Ltmp1520
	.quad	.Ltmp1535
	.quad	.Ltmp1539
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp1503
	.quad	.Ltmp1521
	.quad	.Ltmp1535
	.quad	.Ltmp1539
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Lfunc_begin0
	.quad	.Lfunc_end0
	.quad	.Lfunc_begin1
	.quad	.Lfunc_end1
	.quad	.Lfunc_begin2
	.quad	.Lfunc_end2
	.quad	.Lfunc_begin3
	.quad	.Lfunc_end3
	.quad	.Lfunc_begin4
	.quad	.Lfunc_end4
	.quad	.Lfunc_begin5
	.quad	.Lfunc_end5
	.quad	.Lfunc_begin6
	.quad	.Lfunc_end6
	.quad	.Lfunc_begin7
	.quad	.Lfunc_end7
	.quad	.Lfunc_begin8
	.quad	.Lfunc_end8
	.quad	.Lfunc_begin9
	.quad	.Lfunc_end9
	.quad	.Lfunc_begin10
	.quad	.Lfunc_end10
	.quad	.Lfunc_begin11
	.quad	.Lfunc_end11
	.quad	.Lfunc_begin12
	.quad	.Lfunc_end12
	.quad	.Lfunc_begin13
	.quad	.Lfunc_end13
	.quad	.Lfunc_begin14
	.quad	.Lfunc_end14
	.quad	.Lfunc_begin15
	.quad	.Lfunc_end15
	.quad	.Lfunc_begin16
	.quad	.Lfunc_end16
	.quad	.Lfunc_begin17
	.quad	.Lfunc_end17
	.quad	.Lfunc_begin18
	.quad	.Lfunc_end18
	.quad	.Lfunc_begin19
	.quad	.Lfunc_end19
	.quad	.Lfunc_begin20
	.quad	.Lfunc_end20
	.quad	.Lfunc_begin21
	.quad	.Lfunc_end21
	.quad	.Lfunc_begin22
	.quad	.Lfunc_end22
	.quad	.Lfunc_begin23
	.quad	.Lfunc_end23
	.quad	.Lfunc_begin24
	.quad	.Lfunc_end24
	.quad	.Lfunc_begin25
	.quad	.Lfunc_end25
	.quad	.Lfunc_begin26
	.quad	.Lfunc_end26
	.quad	.Lfunc_begin27
	.quad	.Lfunc_end27
	.quad	.Lfunc_begin28
	.quad	.Lfunc_end28
	.quad	.Lfunc_begin29
	.quad	.Lfunc_end29
	.quad	.Lfunc_begin30
	.quad	.Lfunc_end30
	.quad	.Lfunc_begin31
	.quad	.Lfunc_end31
	.quad	.Lfunc_begin32
	.quad	.Lfunc_end32
	.quad	.Lfunc_begin33
	.quad	.Lfunc_end33
	.quad	.Lfunc_begin34
	.quad	.Lfunc_end34
	.quad	.Lfunc_begin35
	.quad	.Lfunc_end35
	.quad	.Lfunc_begin36
	.quad	.Lfunc_end36
	.quad	.Lfunc_begin37
	.quad	.Lfunc_end37
	.quad	.Lfunc_begin38
	.quad	.Lfunc_end38
	.quad	.Lfunc_begin39
	.quad	.Lfunc_end39
	.quad	.Lfunc_begin40
	.quad	.Lfunc_end40
	.quad	.Lfunc_begin41
	.quad	.Lfunc_end41
	.quad	.Lfunc_begin42
	.quad	.Lfunc_end42
	.quad	.Lfunc_begin43
	.quad	.Lfunc_end43
	.quad	.Lfunc_begin44
	.quad	.Lfunc_end44
	.quad	.Lfunc_begin45
	.quad	.Lfunc_end45
	.quad	.Lfunc_begin46
	.quad	.Lfunc_end46
	.quad	.Lfunc_begin47
	.quad	.Lfunc_end47
	.quad	.Lfunc_begin48
	.quad	.Lfunc_end48
	.quad	.Lfunc_begin49
	.quad	.Lfunc_end49
	.quad	.Lfunc_begin50
	.quad	.Lfunc_end50
	.quad	.Lfunc_begin51
	.quad	.Lfunc_end51
	.quad	.Lfunc_begin52
	.quad	.Lfunc_end52
	.quad	.Lfunc_begin53
	.quad	.Lfunc_end53
	.quad	.Lfunc_begin54
	.quad	.Lfunc_end54
	.quad	.Lfunc_begin55
	.quad	.Lfunc_end55
	.quad	.Lfunc_begin56
	.quad	.Lfunc_end56
	.quad	.Lfunc_begin57
	.quad	.Lfunc_end57
	.quad	.Lfunc_begin58
	.quad	.Lfunc_end58
	.quad	.Lfunc_begin59
	.quad	.Lfunc_end59
	.quad	.Lfunc_begin60
	.quad	.Lfunc_end60
	.quad	.Lfunc_begin61
	.quad	.Lfunc_end61
	.quad	.Lfunc_begin62
	.quad	.Lfunc_end62
	.quad	.Lfunc_begin63
	.quad	.Lfunc_end63
	.quad	.Lfunc_begin64
	.quad	.Lfunc_end64
	.quad	.Lfunc_begin65
	.quad	.Lfunc_end65
	.quad	.Lfunc_begin66
	.quad	.Lfunc_end66
	.quad	.Lfunc_begin67
	.quad	.Lfunc_end67
	.quad	.Lfunc_begin68
	.quad	.Lfunc_end68
	.quad	.Lfunc_begin69
	.quad	.Lfunc_end69
	.quad	.Lfunc_begin70
	.quad	.Lfunc_end70
	.quad	.Lfunc_begin71
	.quad	.Lfunc_end71
	.quad	.Lfunc_begin72
	.quad	.Lfunc_end72
	.quad	.Lfunc_begin73
	.quad	.Lfunc_end73
	.quad	.Lfunc_begin74
	.quad	.Lfunc_end74
	.quad	.Lfunc_begin75
	.quad	.Lfunc_end75
	.quad	0
	.quad	0
	.section	.debug_macinfo,"",@progbits
	.byte	0
	.section	.debug_pubnames,"",@progbits
	.long	.LpubNames_end0-.LpubNames_begin0
.LpubNames_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	13900
	.long	10091
	.asciz	"cli.func1"
	.long	236
	.asciz	"runtime.writeBarrier"
	.long	3878
	.asciz	"cli.RunLocalCommand"
	.long	4450
	.asciz	"cli.DecodeState..1command_line_arguments.Session"
	.long	4960
	.asciz	"cli.Session..1command_line_arguments.Session"
	.long	7793
	.asciz	"cli.command_line_arguments.Shell..hash"
	.long	3351
	.asciz	"cli.ConfigPath"
	.long	8800
	.asciz	"cli.command_line_arguments.Srv..hash"
	.long	9273
	.asciz	"cli.executeAuthorize..1command_line_arguments.Srv"
	.long	10263
	.asciz	"cli.command_line_arguments..thunk20"
	.long	9198
	.asciz	"cli.SetSession..1command_line_arguments.Srv"
	.long	4303
	.asciz	"cli.DecodeError..1command_line_arguments.Session"
	.long	3136
	.asciz	"cli.command_line_arguments.Credentials..eq"
	.long	5604
	.asciz	"cli.HostCanReceiveWrite..1command_line_arguments.WarpState"
	.long	42
	.asciz	"command_line_arguments.Registrar"
	.long	3063
	.asciz	"cli.command_line_arguments.Credentials..hash"
	.long	2725
	.asciz	"github_com_spolu_warp.Version"
	.long	9685
	.asciz	"cli.handle..1command_line_arguments.Srv"
	.long	7936
	.asciz	"cli.retrieveShell"
	.long	9613
	.asciz	"cli.executeState..1command_line_arguments.Srv"
	.long	9005
	.asciz	"cli.Run..1command_line_arguments.Srv"
	.long	2902
	.asciz	"cli.New"
	.long	251
	.asciz	"command_line_arguments.flagFilterRegexp"
	.long	2580
	.asciz	"io_ioutil.Discard"
	.long	3279
	.asciz	"cli.command_line_arguments.Config..eq"
	.long	4130
	.asciz	"cli.command_line_arguments..thunk0"
	.long	4732
	.asciz	"cli.Modes..1command_line_arguments.Session"
	.long	5290
	.asciz	"cli.Warp..1command_line_arguments.Session"
	.long	7048
	.asciz	"cli.command_line_arguments..thunk1"
	.long	5470
	.asciz	"cli.GetMode..1command_line_arguments.WarpState"
	.long	2565
	.asciz	"github_com_spolu_warp.EnvWarp"
	.long	6685
	.asciz	"cli.NewSession"
	.long	7101
	.asciz	"cli.command_line_arguments..thunk2"
	.long	7154
	.asciz	"cli.command_line_arguments..thunk3"
	.long	6575
	.asciz	"cli.command_line_arguments.UserState..eq"
	.long	7260
	.asciz	"cli.command_line_arguments..thunk5"
	.long	7313
	.asciz	"cli.command_line_arguments..thunk6"
	.long	7366
	.asciz	"cli.command_line_arguments..thunk7"
	.long	3208
	.asciz	"cli.command_line_arguments.Config..hash"
	.long	4597
	.asciz	"cli.GetMode..1command_line_arguments.Session"
	.long	3625
	.asciz	"cli.GenerateConfig"
	.long	4183
	.asciz	"cli.CheckEnvWarp"
	.long	2769
	.asciz	"cli.Run..1command_line_arguments.Cli"
	.long	5978
	.asciz	"cli.ProtocolState..1command_line_arguments.WarpState"
	.long	4837
	.asciz	"cli.SendHostUpdate..1command_line_arguments.Session"
	.long	8643
	.asciz	"cli.DetectShell"
	.long	6442
	.asciz	"cli.WindowSize..1command_line_arguments.WarpState"
	.long	3759
	.asciz	"cli.RetrieveOrGenerateConfig"
	.long	6502
	.asciz	"cli.command_line_arguments.UserState..hash"
	.long	7207
	.asciz	"cli.command_line_arguments..thunk4"
	.long	5005
	.asciz	"cli.SetMode..1command_line_arguments.Session"
	.long	6126
	.asciz	"cli.SetMode..1command_line_arguments.WarpState"
	.long	4792
	.asciz	"cli.ProtocolState..1command_line_arguments.Session"
	.long	5350
	.asciz	"cli.WindowSize..1command_line_arguments.Session"
	.long	7472
	.asciz	"cli.command_line_arguments..thunk9"
	.long	2740
	.asciz	"cli.command_line_arguments..import"
	.long	6260
	.asciz	"cli.Update..1command_line_arguments.WarpState"
	.long	7419
	.asciz	"cli.command_line_arguments..thunk8"
	.long	4243
	.asciz	"cli.DataC..1command_line_arguments.Session"
	.long	4672
	.asciz	"cli.HostCanReceiveWrite..1command_line_arguments.Session"
	.long	8873
	.asciz	"cli.command_line_arguments.Srv..eq"
	.long	3470
	.asciz	"cli.RetrieveConfig"
	.long	5095
	.asciz	"cli.TearDown..1command_line_arguments.Session"
	.long	5200
	.asciz	"cli.UpdateState..1command_line_arguments.Session"
	.long	8945
	.asciz	"cli.Path..1command_line_arguments.Srv"
	.long	5410
	.asciz	"cli.WriteDataC..1command_line_arguments.Session"
	.long	7525
	.asciz	"cli.command_line_arguments..thunk10"
	.long	7578
	.asciz	"cli.command_line_arguments..thunk11"
	.long	6930
	.asciz	"cli.NewWarpState"
	.long	7684
	.asciz	"cli.command_line_arguments..thunk13"
	.long	5803
	.asciz	"cli.ProtocolUser..1command_line_arguments.UserState"
	.long	9910
	.asciz	"cli.NewSrv"
	.long	5693
	.asciz	"cli.Modes..1command_line_arguments.WarpState"
	.long	7631
	.asciz	"cli.command_line_arguments..thunk12"
	.long	10038
	.asciz	"cli.command_line_arguments..thunk16"
	.long	7737
	.asciz	"cli.command_line_arguments..thunk14"
	.long	9985
	.asciz	"cli.command_line_arguments..thunk15"
	.long	10210
	.asciz	"cli.command_line_arguments..thunk19"
	.long	10116
	.asciz	"cli.command_line_arguments..thunk17"
	.long	9436
	.asciz	"cli.executeRevoke..1command_line_arguments.Srv"
	.long	7864
	.asciz	"cli.command_line_arguments.Shell..eq"
	.long	10157
	.asciz	"cli.command_line_arguments..thunk18"
	.long	5140
	.asciz	"cli.TornDown..1command_line_arguments.Session"
	.long	0
.LpubNames_end0:
	.section	.debug_pubtypes,"",@progbits
	.long	.LpubTypes_end0-.LpubTypes_begin0
.LpubTypes_begin0:
	.short	2
	.long	.Lcu_begin0
	.long	13900
	.long	5916
	.asciz	"UserState"
	.long	8607
	.asciz	"Token"
	.long	13513
	.asciz	"HostUpdate"
	.long	12666
	.asciz	"Encoder"
	.long	11621
	.asciz	"Session"
	.long	7971
	.asciz	"struct{string,error}"
	.long	271
	.asciz	"Regexp"
	.long	1002
	.asciz	"bool"
	.long	2235
	.asciz	"uncommonType"
	.long	12767
	.asciz	"struct{*Writer,int,int}"
	.long	1068
	.asciz	"Mutex"
	.long	12346
	.asciz	"Reader"
	.long	13083
	.asciz	"struct{*Shell,error}"
	.long	13384
	.asciz	"CmdName"
	.long	13722
	.asciz	"struct{*_type,*func(*void)struct{Conn,error},*func(*void)Addr,*func(*void)error}"
	.long	10835
	.asciz	"struct{*_type,*func(*void)error,*func(*void)Addr,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void)Addr,*func(*void,Time)error,*func(*void,Time)error,*func(*void,Time)error,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	867
	.asciz	".regexp.onePassInst"
	.long	1739
	.asciz	"struct{**.regexp.thread,int,int}"
	.long	10575
	.asciz	"CommandResult"
	.long	13798
	.asciz	"struct{Conn,error}"
	.long	702
	.asciz	"struct{*int32,int,int}"
	.long	203
	.asciz	"uint16"
	.long	1346
	.asciz	".regexp.bitState"
	.long	955
	.asciz	"struct{*uint8,int,int}"
	.long	1610
	.asciz	"struct{*.regexp.entry,int,int}"
	.long	10794
	.asciz	"Conn"
	.long	11017
	.asciz	"struct{*_type,*func(*void)string,*func(*void)string}"
	.long	8225
	.asciz	"int64"
	.long	2284
	.asciz	"struct{*method,int,int}"
	.long	486
	.asciz	"string"
	.long	766
	.asciz	".regexp.onePassProg"
	.long	8046
	.asciz	"struct{*_type,*func(*void)struct{Time,bool},*func(*void)*__go_channel,*func(*void)error,*func(*void,Token)Token}"
	.long	10536
	.asciz	"struct{*CommandResult,error}"
	.long	10722
	.asciz	"Size"
	.long	13122
	.asciz	"Shell"
	.long	12594
	.asciz	".encoding/gob.decoderState"
	.long	13253
	.asciz	"struct{*_type,*func(*void,Context)error,*func(*void,Context)void,*func(*void)CmdName,*func(*void,Context,struct{*string,int,int},*runtime.hmap)error}"
	.long	8005
	.asciz	"Context"
	.long	11140
	.asciz	"struct{*Error,error}"
	.long	13150
	.asciz	"Srv"
	.long	189
	.asciz	"int"
	.long	8561
	.asciz	"__go_channel"
	.long	1009
	.asciz	"EmptyOp"
	.long	2515
	.asciz	"struct{*_type,*func(*void)string}"
	.long	1927
	.asciz	"struct{*_type,*func(*void)struct{int32,int,error}}"
	.long	10355
	.asciz	"Cli"
	.long	10976
	.asciz	"Addr"
	.long	12009
	.asciz	"Logger"
	.long	1966
	.asciz	"_type"
	.long	1525
	.asciz	".regexp.job"
	.long	8426
	.asciz	"struct{*.time.zoneTrans,int,int}"
	.long	210
	.asciz	"uint32"
	.long	11580
	.asciz	"SessionType"
	.long	13681
	.asciz	"Listener"
	.long	1837
	.asciz	".regexp.inputReader"
	.long	13492
	.asciz	"struct{Conn}"
	.long	1814
	.asciz	".regexp.inputString"
	.long	10404
	.asciz	"struct{*string,error}"
	.long	229
	.asciz	"uintptr"
	.long	1473
	.asciz	"struct{*.regexp.job,int,int}"
	.long	12917
	.asciz	".encoding/gob.encBuffer"
	.long	11181
	.asciz	"struct{*State,error}"
	.long	1791
	.asciz	".regexp.inputBytes"
	.long	1421
	.asciz	"struct{*int,int,int}"
	.long	2336
	.asciz	"method"
	.long	1703
	.asciz	".regexp.thread"
	.long	8377
	.asciz	".time.zone"
	.long	12125
	.asciz	"struct{*_type,*func(*void)error,*func(*void,struct{*uint8,int,int})struct{int,error},*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	10500
	.asciz	"Credentials"
	.long	12553
	.asciz	".encoding/gob.decBuffer"
	.long	11909
	.asciz	"Config"
	.long	12426
	.asciz	"Decoder"
	.long	13878
	.asciz	"struct{*__go_descriptor}"
	.long	903
	.asciz	"struct{*uint32,int,int}"
	.long	2427
	.asciz	"struct{int32,int,error}"
	.long	13655
	.asciz	"struct{*Mutex}"
	.long	12206
	.asciz	"struct{int,error}"
	.long	10637
	.asciz	"CommandType"
	.long	11222
	.asciz	"struct{*Mode,error}"
	.long	13852
	.asciz	"struct{Listener}"
	.long	5904
	.asciz	"Mode"
	.long	10758
	.asciz	"Error"
	.long	1016
	.asciz	"struct{*string,int,int}"
	.long	8478
	.asciz	".time.zoneTrans"
	.long	12084
	.asciz	"ReadWriteCloser"
	.long	13045
	.asciz	"__go_descriptor"
	.long	815
	.asciz	"struct{*.regexp.onePassInst,int,int}"
	.long	581
	.asciz	"struct{*Inst,int,int}"
	.long	10316
	.asciz	"struct{*Cli,error}"
	.long	62
	.asciz	"runtime.hmap"
	.long	1662
	.asciz	".regexp.entry"
	.long	1104
	.asciz	"struct{**.regexp.machine,int,int}"
	.long	12991
	.asciz	"WarpState"
	.long	13451
	.asciz	"Command"
	.long	10673
	.asciz	"State"
	.long	2474
	.asciz	"error"
	.long	8218
	.asciz	"uint64"
	.long	754
	.asciz	"int32"
	.long	222
	.asciz	"void"
	.long	196
	.asciz	"uint8"
	.long	13575
	.asciz	"SessionHello"
	.long	2595
	.asciz	"Writer"
	.long	633
	.asciz	"Inst"
	.long	5842
	.asciz	"User"
	.long	11310
	.asciz	"struct{*Session,error}"
	.long	8135
	.asciz	"struct{Time,bool}"
	.long	11997
	.asciz	"Duration"
	.long	12824
	.asciz	".encoding/gob.encoderState"
	.long	1574
	.asciz	".regexp.queue"
	.long	1886
	.asciz	"RuneReader"
	.long	12387
	.asciz	"struct{*_type,*func(*void,struct{*uint8,int,int})struct{int,error}}"
	.long	8169
	.asciz	"Time"
	.long	10438
	.asciz	"struct{*Config,error}"
	.long	320
	.asciz	".regexp.regexpRO"
	.long	532
	.asciz	"Prog"
	.long	8237
	.asciz	"Location"
	.long	8325
	.asciz	"struct{*.time.zone,int,int}"
	.long	1161
	.asciz	".regexp.machine"
	.long	695
	.asciz	"InstOp"
	.long	0
.LpubTypes_end0:

	.section	".note.GNU-split-stack","",@progbits
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
